**
** Disassembly for section '.init'
**


080480f4 <_init>:
 80480f4:  push ebp
 80480f5:  mov ebp, esp
 80480f7:  push ebx
 80480f8:  sub esp, 0x4
 80480fb:  call 8048100
 8048100:  pop ebx
 8048101:  add ebx, 0x88c04
 8048107:  mov edx, DWORD PTR [ebx-0x4]
 804810d:  test edx, edx
 804810f:  je 8048116
 8048111:  call 0
 8048116:  call 80481d0
 804811b:  call 80ae530
 8048120:  pop eax
 8048121:  pop ebx
 8048122:  leave
 8048123:  ret


**
** Disassembly for section '.text'
**


08048130 <_start>:
 8048130:  xor ebp, ebp
 8048132:  pop esi
 8048133:  mov ecx, esp
 8048135:  and esp, 0xf0
 8048138:  push eax
 8048139:  push esp
 804813a:  push edx
 804813b:  push 0x80488e0
 8048140:  push 0x8048920
 8048145:  push ecx
 8048146:  push esi
 8048147:  push 0x8048210
 804814c:  call 8048250
 8048151:  hlt
 8048152:  nop
 8048153:  nop
 8048154:  nop
 8048155:  nop
 8048156:  nop
 8048157:  nop
 8048158:  nop
 8048159:  nop
 804815a:  nop
 804815b:  nop
 804815c:  nop
 804815d:  nop
 804815e:  nop
 804815f:  nop

08048160 <__do_global_dtors_aux>:
 8048160:  push ebp
 8048161:  mov ebp, esp
 8048163:  push ebx
 8048164:  sub esp, 0x14
 8048167:  cmp BYTE PTR ds:0x80d1440, 0x0
 804816e:  jne 80481c4
 8048170:  mov eax, ds:0x80d1444
 8048175:  mov ebx, 0x80d0cc8
 804817a:  sub ebx, 0x80d0cc0
 8048180:  sar ebx, 0x2
 8048183:  sub ebx, 0x1
 8048186:  cmp eax, ebx
 8048188:  jae 80481a8
 804818a:  lea esi, [esi]
 8048190:  add eax, 0x1
 8048193:  mov ds:0x80d1444, eax
 8048198:  call DWORD PTR [eax*4+0x80d0cc0]
 804819f:  mov eax, ds:0x80d1444
 80481a4:  cmp eax, ebx
 80481a6:  jb 8048190
 80481a8:  mov eax, 0x80adb30
 80481ad:  test eax, eax
 80481af:  je 80481bd
 80481b1:  mov DWORD PTR [esp], 0x80c6e40
 80481b8:  call 80adb30
 80481bd:  mov BYTE PTR ds:0x80d1440, 0x1
 80481c4:  add esp, 0x14
 80481c7:  pop ebx
 80481c8:  pop ebp
 80481c9:  ret
 80481ca:  lea esi, [esi]

080481d0 <frame_dummy>:
 80481d0:  push ebp
 80481d1:  mov eax, 0x80ad8b0
 80481d6:  mov ebp, esp
 80481d8:  sub esp, 0x18
 80481db:  test eax, eax
 80481dd:  je 80481f3
 80481df:  mov DWORD PTR [esp+0x4], 0x80d1448
 80481e7:  mov DWORD PTR [esp], 0x80c6e40
 80481ee:  call 80ad8b0
 80481f3:  mov eax, ds:0x80d0ccc
 80481f8:  test eax, eax
 80481fa:  je 804820e
 80481fc:  mov eax, 0x0
 8048201:  test eax, eax
 8048203:  je 804820e
 8048205:  mov DWORD PTR [esp], 0x80d0ccc
 804820c:  call eax
 804820e:  leave
 804820f:  ret

08048210 <main>:
 8048210:  push ebp
 8048211:  mov ebp, esp
 8048213:  sub esp, 0x110
 8048219:  mov DWORD PTR [ebp-0x4], 0x0
 8048220:  mov DWORD PTR [ebp-0x4], 0x0
 8048227:  jmp 804823c
 8048229:  mov eax, DWORD PTR [ebp-0x4]
 804822c:  mov edx, 0x4048f5c3
 8048231:  mov DWORD PTR [ebp+eax*4-0x104], edx
 8048238:  add DWORD PTR [ebp-0x4], 0x1
 804823c:  cmp DWORD PTR [ebp-0x4], 0x3f
 8048240:  jle 8048229
 8048242:  mov eax, 0x0
 8048247:  leave
 8048248:  ret
 8048249:  nop
 804824a:  nop
 804824b:  nop
 804824c:  nop
 804824d:  nop
 804824e:  nop
 804824f:  nop

08048250 <__libc_start_main>:
 8048250:  push ebp
 8048251:  mov edx, 0x0
 8048256:  mov ebp, esp
 8048258:  push edi
 8048259:  push esi
 804825a:  push ebx
 804825b:  sub esp, 0x3c
 804825e:  test edx, edx
 8048260:  mov edi, DWORD PTR [ebp+0x14]
 8048263:  mov esi, DWORD PTR [ebp+0x18]
 8048266:  mov ebx, DWORD PTR [ebp+0x1c]
 8048269:  jne 8048406
 804826f:  mov eax, DWORD PTR [ebp+0xc]
 8048272:  mov ecx, DWORD PTR [ebp+0x10]
 8048275:  mov DWORD PTR ds:0x80d0d94, edx
 804827b:  lea edx, [ecx+eax*4+0x4]
 804827f:  mov eax, DWORD PTR [ebp+0x20]
 8048282:  mov DWORD PTR ds:0x80d2218, edx
 8048288:  mov ds:0x80d0cd4, eax
 804828d:  lea esi, [esi]
 8048290:  mov eax, DWORD PTR [edx]
 8048292:  add edx, 0x4
 8048295:  test eax, eax
 8048297:  jne 8048290
 8048299:  mov eax, edx
 804829b:  call 8050910
 80482a0:  mov edx, DWORD PTR ds:0x80d0d94
 80482a6:  test edx, edx
 80482a8:  jne 80482d8
 80482aa:  call 80512d0
 80482af:  test eax, eax
 80482b1:  js 80483f0
 80482b7:  mov edx, DWORD PTR ds:0x80d2e24
 80482bd:  mov ecx, eax
 80482bf:  test edx, edx
 80482c1:  jne 8048438
 80482c7:  mov DWORD PTR ds:0x80d2e24, ecx
 80482cd:  cmp eax, 0x20608
 80482d2:  jle 80483e4
 80482d8:  call 80488c0
 80482dd:  mov eax, 0xffffffe8
 80482e2:  lea edx, [ebp-0x10]
 80482e5:  add eax, DWORD PTR gs:0x0
 80482ec:  and edx, 0x7ffff0
 80482f2:  and eax, 0x7fff00
 80482f7:  shl edx, 0x9
 80482fa:  shl eax, 0x3
 80482fd:  mov DWORD PTR [ebp-0x10], 0x0
 8048304:  xor edx, eax
 8048306:  mov BYTE PTR [ebp-0xd], 0xff
 804830a:  mov BYTE PTR [ebp-0xe], 0xa
 804830e:  xor edx, DWORD PTR [ebp-0x10]
 8048311:  mov DWORD PTR [ebp-0x10], edx
 8048314:  mov DWORD PTR gs:0x14, edx
 804831b:  test ebx, ebx
 804831d:  je 8048337
 804831f:  mov DWORD PTR [esp+0x8], 0x0
 8048327:  mov DWORD PTR [esp+0x4], 0x0
 804832f:  mov DWORD PTR [esp], ebx
 8048332:  call 8048c20
 8048337:  mov eax, ds:0x80d2218
 804833c:  mov ecx, DWORD PTR [ebp+0xc]
 804833f:  mov DWORD PTR [esp+0x8], eax
 8048343:  mov eax, DWORD PTR [ebp+0x10]
 8048346:  mov DWORD PTR [esp], ecx
 8048349:  mov DWORD PTR [esp+0x4], eax
 804834d:  call 80513e0
 8048352:  test esi, esi
 8048354:  je 804836e
 8048356:  mov DWORD PTR [esp+0x8], 0x0
 804835e:  mov DWORD PTR [esp+0x4], 0x0
 8048366:  mov DWORD PTR [esp], esi
 8048369:  call 8048c20
 804836e:  mov eax, ds:0x80d0cd8
 8048373:  test eax, eax
 8048375:  jne 80483fc
 804837b:  test edi, edi
 804837d:  je 8048397
 804837f:  mov eax, ds:0x80d2218
 8048384:  mov ecx, DWORD PTR [ebp+0xc]
 8048387:  mov DWORD PTR [esp+0x8], eax
 804838b:  mov eax, DWORD PTR [ebp+0x10]
 804838e:  mov DWORD PTR [esp], ecx
 8048391:  mov DWORD PTR [esp+0x4], eax
 8048395:  call edi
 8048397:  lea eax, [ebp-0x3c]
 804839a:  mov DWORD PTR [esp], eax
 804839d:  call 80489a0
 80483a2:  test eax, eax
 80483a4:  jne 8048417
 80483a6:  mov eax, gs:0x60
 80483ac:  mov DWORD PTR [ebp-0x20], eax
 80483af:  mov eax, gs:0x5c
 80483b5:  mov DWORD PTR [ebp-0x1c], eax
 80483b8:  lea eax, [ebp-0x3c]
 80483bb:  mov gs:0x60, eax
 80483c1:  mov eax, ds:0x80d2218
 80483c6:  mov ecx, DWORD PTR [ebp+0xc]
 80483c9:  mov DWORD PTR [esp+0x8], eax
 80483cd:  mov eax, DWORD PTR [ebp+0x10]
 80483d0:  mov DWORD PTR [esp], ecx
 80483d3:  mov DWORD PTR [esp+0x4], eax
 80483d7:  call DWORD PTR [ebp+0x8]
 80483da:  mov edx, eax
 80483dc:  mov DWORD PTR [esp], edx
 80483df:  call 80489e0
 80483e4:  mov DWORD PTR [esp], 0x80afb88
 80483eb:  call 80490e0
 80483f0:  mov DWORD PTR [esp], 0x80afba0
 80483f7:  call 80490e0
 80483fc:  call 8048450
 8048401:  jmp 804837b
 8048406:  xor edx, edx
 8048408:  cmp DWORD PTR ds:0x0, 0x0
 804840f:  sete dl
 8048412:  jmp 804826f
 8048417:  call 0
 804841c:  dec DWORD PTR ds:0x0
 8048423:  sete al
 8048426:  xor edx, edx
 8048428:  test al, al
 804842a:  jne 80483dc
 804842c:  mov DWORD PTR [esp], 0x0
 8048433:  call 804f190
 8048438:  cmp edx, eax
 804843a:  mov ecx, eax
 804843c:  jbe 80482cd
 8048442:  lea esi, [esi]
 8048448:  jmp 80482c7
 804844d:  nop
 804844e:  nop
 804844f:  nop

08048450 <__libc_check_standard_fds>:
 8048450:  push ebp
 8048451:  mov ebp, esp
 8048453:  sub esp, 0x78
 8048456:  mov DWORD PTR [esp+0x4], 0x1
 804845e:  mov DWORD PTR [esp], 0x0
 8048465:  call 804f350
 804846a:  add eax, 0x1
 804846d:  je 80485a3
 8048473:  mov DWORD PTR [esp+0x4], 0x1
 804847b:  mov DWORD PTR [esp], 0x1
 8048482:  call 804f350
 8048487:  add eax, 0x1
 804848a:  je 8048523
 8048490:  mov DWORD PTR [esp+0x4], 0x1
 8048498:  mov DWORD PTR [esp], 0x2
 804849f:  call 804f350
 80484a4:  add eax, 0x1
 80484a7:  je 80484ab
 80484a9:  leave
 80484aa:  ret
 80484ab:  mov edx, 0xffffffe8
 80484b1:  mov eax, gs:0x0
 80484b7:  cmp DWORD PTR [eax+edx], 0x9
 80484bb:  jne 80484a9
 80484bd:  mov DWORD PTR [esp+0x8], 0x0
 80484c5:  mov DWORD PTR [esp+0x4], 0x20000
 80484cd:  mov DWORD PTR [esp], 0x80afbd2
 80484d4:  call 804f1fa
 80484d9:  cmp eax, 0x2
 80484dc:  jne 8048520
 80484de:  lea eax, [ebp-0x60]
 80484e1:  mov DWORD PTR [esp+0x8], eax
 80484e5:  mov DWORD PTR [esp+0x4], 0x2
 80484ed:  mov DWORD PTR [esp], 0x3
 80484f4:  call 804f1b0
 80484f9:  test eax, eax
 80484fb:  jne 8048520
 80484fd:  mov eax, DWORD PTR [ebp-0x50]
 8048500:  and eax, 0xf000
 8048505:  cmp eax, 0x2000
 804850a:  jne 8048520
 804850c:  mov eax, DWORD PTR [ebp-0x40]
 804850f:  xor eax, 0x103
 8048514:  or eax, DWORD PTR [ebp-0x3c]
 8048517:  je 80484a9
 8048519:  lea esi, [esi]
 8048520:  hlt
 8048521:  jmp 8048520
 8048523:  mov edx, 0xffffffe8
 8048529:  mov eax, gs:0x0
 804852f:  cmp DWORD PTR [eax+edx], 0x9
 8048533:  jne 8048490
 8048539:  mov DWORD PTR [esp+0x8], 0x0
 8048541:  mov DWORD PTR [esp+0x4], 0x20000
 8048549:  mov DWORD PTR [esp], 0x80afbd2
 8048550:  call 804f1fa
 8048555:  sub eax, 0x1
 8048558:  jne 80485a0
 804855a:  lea eax, [ebp-0x60]
 804855d:  mov DWORD PTR [esp+0x8], eax
 8048561:  mov DWORD PTR [esp+0x4], 0x1
 8048569:  mov DWORD PTR [esp], 0x3
 8048570:  call 804f1b0
 8048575:  test eax, eax
 8048577:  jne 80485a0
 8048579:  mov eax, DWORD PTR [ebp-0x50]
 804857c:  and eax, 0xf000
 8048581:  cmp eax, 0x2000
 8048586:  jne 80485a0
 8048588:  mov eax, DWORD PTR [ebp-0x40]
 804858b:  xor eax, 0x103
 8048590:  or eax, DWORD PTR [ebp-0x3c]
 8048593:  je 8048490
 8048599:  lea esi, [esi]
 80485a0:  hlt
 80485a1:  jmp 80485a0
 80485a3:  mov edx, 0xffffffe8
 80485a9:  mov eax, gs:0x0
 80485af:  cmp DWORD PTR [eax+edx], 0x9
 80485b3:  jne 8048473
 80485b9:  mov DWORD PTR [esp+0x8], 0x0
 80485c1:  mov DWORD PTR [esp+0x4], 0x20001
 80485c9:  mov DWORD PTR [esp], 0x80afbc8
 80485d0:  call 804f1fa
 80485d5:  test eax, eax
 80485d7:  jne 8048618
 80485d9:  lea eax, [ebp-0x60]
 80485dc:  mov DWORD PTR [esp+0x8], eax
 80485e0:  mov DWORD PTR [esp+0x4], 0x0
 80485e8:  mov DWORD PTR [esp], 0x3
 80485ef:  call 804f1b0
 80485f4:  test eax, eax
 80485f6:  jne 8048618
 80485f8:  mov eax, DWORD PTR [ebp-0x50]
 80485fb:  and eax, 0xf000
 8048600:  cmp eax, 0x2000
 8048605:  jne 8048618
 8048607:  mov eax, DWORD PTR [ebp-0x40]
 804860a:  xor eax, 0x107
 804860f:  or eax, DWORD PTR [ebp-0x3c]
 8048612:  je 8048473
 8048618:  hlt
 8048619:  jmp 8048618
 804861b:  nop
 804861c:  nop
 804861d:  nop
 804861e:  nop
 804861f:  nop

08048620 <_dl_tls_setup>:
 8048620:  mov eax, ds:0x80d0d28
 8048625:  push ebp
 8048626:  mov ebp, esp
 8048628:  mov DWORD PTR ds:0x80d1660, 0x40
 8048632:  add eax, 0x47f
 8048637:  and eax, 0xf0
 804863a:  mov ds:0x80d0d28, eax
 804863f:  xor eax, eax
 8048641:  mov DWORD PTR ds:0x80d2d94, 0x1
 804864b:  mov DWORD PTR ds:0x80d2d98, 0x80d1660
 8048655:  mov DWORD PTR ds:0x80d2d8c, 0x470
 804865f:  mov DWORD PTR ds:0x80d2d90, 0x10
 8048669:  mov DWORD PTR ds:0x80d2da4, 0x1
 8048673:  pop ebp
 8048674:  ret
 8048675:  lea esi, [esi]
 8048679:  lea edi, [edi]

08048680 <__libc_setup_tls>:
 8048680:  push ebp
 8048681:  mov ebp, esp
 8048683:  push edi
 8048684:  push esi
 8048685:  push ebx
 8048686:  sub esp, 0x3c
 8048689:  mov edx, DWORD PTR ds:0x80d2df4
 804868f:  mov ecx, DWORD PTR [ebp+0xc]
 8048692:  test edx, edx
 8048694:  je 80486e0
 8048696:  mov eax, ds:0x80d2e14
 804869b:  shl eax, 0x5
 804869e:  lea eax, [edx+eax]
 80486a1:  cmp edx, eax
 80486a3:  jb 80486af
 80486a5:  jmp 80486e0
 80486a7:  nop
 80486a8:  add edx, 0x20
 80486ab:  cmp edx, eax
 80486ad:  jae 80486e0
 80486af:  cmp DWORD PTR [edx], 0x7
 80486b2:  lea esi, [esi]
 80486b8:  jne 80486a8
 80486ba:  mov eax, DWORD PTR [edx+0x14]
 80486bd:  mov edi, DWORD PTR [edx+0x1c]
 80486c0:  mov DWORD PTR [ebp-0x20], eax
 80486c3:  mov eax, DWORD PTR [edx+0x10]
 80486c6:  cmp ecx, edi
 80486c8:  mov DWORD PTR [ebp-0x24], edi
 80486cb:  mov DWORD PTR [ebp-0x2c], eax
 80486ce:  mov eax, DWORD PTR [edx+0x8]
 80486d1:  mov DWORD PTR [ebp-0x28], eax
 80486d4:  jb 80486fa
 80486d6:  mov DWORD PTR [ebp-0x24], ecx
 80486d9:  jmp 80486fa
 80486db:  nop
 80486dc:  lea esi, [esi]
 80486e0:  mov DWORD PTR [ebp-0x24], ecx
 80486e3:  xor edi, edi
 80486e5:  mov DWORD PTR [ebp-0x20], 0x0
 80486ec:  mov DWORD PTR [ebp-0x2c], 0x0
 80486f3:  mov DWORD PTR [ebp-0x28], 0x0
 80486fa:  mov eax, ds:0x80d0d28
 80486ff:  xor edx, edx
 8048701:  lea eax, [ecx+eax-0x1]
 8048705:  add eax, DWORD PTR [ebp-0x20]
 8048708:  div ecx
 804870a:  mov ebx, eax
 804870c:  mov eax, DWORD PTR [ebp-0x24]
 804870f:  imul ebx, ecx
 8048712:  add eax, DWORD PTR [ebp+0x8]
 8048715:  lea eax, [ebx+eax]
 8048718:  mov DWORD PTR [esp], eax
 804871b:  call 804f410
 8048720:  mov edx, DWORD PTR [ebp-0x24]
 8048723:  mov DWORD PTR ds:0x80d1460, 0x3e
 804872d:  lea esi, [eax+edx-0x1]
 8048731:  mov eax, edx
 8048733:  neg eax
 8048735:  and esi, eax
 8048737:  test edi, edi
 8048739:  je 8048888
 804873f:  mov eax, DWORD PTR [ebp-0x20]
 8048742:  xor edx, edx
 8048744:  lea ecx, [eax+edi-0x1]
 8048748:  mov eax, ecx
 804874a:  div edi
 804874c:  mov ecx, eax
 804874e:  mov eax, ebx
 8048750:  imul ecx, edi
 8048753:  sub eax, ecx
 8048755:  lea eax, [esi+eax]
 8048758:  mov ds:0x80d1470, eax
 804875d:  mov eax, DWORD PTR [ebp-0x2c]
 8048760:  mov edx, DWORD PTR [ebp-0x28]
 8048763:  mov DWORD PTR ds:0x80d1abc, ecx
 8048769:  mov BYTE PTR ds:0x80d1474, 0x1
 8048770:  mov DWORD PTR [esp+0x8], eax
 8048774:  mov eax, ds:0x80d1470
 8048779:  mov DWORD PTR [esp+0x4], edx
 804877d:  mov DWORD PTR [esp], eax
 8048780:  call 804efc0
 8048785:  mov edx, DWORD PTR ds:0x80d0d78
 804878b:  lea eax, [esi+ebx]
 804878e:  mov DWORD PTR [esi+ebx+0x4], 0x80d1468
 8048796:  lea ebx, [ebp-0x1c]
 8048799:  mov DWORD PTR [eax], eax
 804879b:  mov DWORD PTR [eax+0x8], eax
 804879e:  mov DWORD PTR [eax+0x10], edx
 80487a1:  mov DWORD PTR [ebp-0x18], eax
 80487a4:  mov eax, 0xf3
 80487a9:  mov DWORD PTR [ebp-0x1c], 0xffffffff
 80487b0:  mov DWORD PTR [ebp-0x14], 0xfffff
 80487b7:  mov DWORD PTR [ebp-0x10], 0x51
 80487be:  int 0x80
 80487c0:  test eax, eax
 80487c2:  jne 80488a0
 80487c8:  mov eax, DWORD PTR [ebp-0x1c]
 80487cb:  lea eax, [eax*8+0x3]
 80487d2:  mov gs, eax
 80487d4:  mov eax, DWORD PTR [ebp-0x20]
 80487d7:  mov edx, DWORD PTR [ebp-0x28]
 80487da:  and BYTE PTR ds:0x80d1a14, 0xfc
 80487e1:  test edi, edi
 80487e3:  mov ds:0x80d1ab0, eax
 80487e8:  mov eax, DWORD PTR [ebp-0x2c]
 80487eb:  mov DWORD PTR ds:0x80d1ab4, edi
 80487f1:  mov DWORD PTR ds:0x80d1aa8, edx
 80487f7:  mov DWORD PTR ds:0x80d1ac0, 0x1
 8048801:  mov ds:0x80d1aac, eax
 8048806:  mov DWORD PTR ds:0x80d1660, 0x40
 8048810:  mov DWORD PTR ds:0x80d2d94, 0x1
 804881a:  mov DWORD PTR ds:0x80d2d98, 0x80d1660
 8048824:  mov DWORD PTR ds:0x80d1674, 0x80d1880
 804882e:  je 80488b0
 8048834:  mov edx, DWORD PTR [ebp-0x20]
 8048837:  lea eax, [edx+edi-0x1]
 804883b:  xor edx, edx
 804883d:  div edi
 804883f:  mov DWORD PTR [ebp-0x20], eax
 8048842:  imul edi, DWORD PTR [ebp-0x20]
 8048846:  mov eax, ds:0x80d0d28
 804884b:  mov edx, edi
 804884d:  add edx, DWORD PTR [ebp+0x8]
 8048850:  lea eax, [edx+eax+0xf]
 8048854:  and eax, 0xf0
 8048857:  mov ds:0x80d0d28, eax
 804885c:  mov eax, DWORD PTR [ebp-0x24]
 804885f:  mov DWORD PTR ds:0x80d2d8c, edx
 8048865:  cmp eax, 0x10
 8048868:  jae 804886f
 804886a:  mov eax, 0x10
 804886f:  mov ds:0x80d2d90, eax
 8048874:  mov DWORD PTR ds:0x80d2da4, 0x1
 804887e:  add esp, 0x3c
 8048881:  pop ebx
 8048882:  pop esi
 8048883:  pop edi
 8048884:  pop ebp
 8048885:  ret
 8048886:  xchg ax, ax
 8048888:  mov eax, ebx
 804888a:  mov ecx, DWORD PTR [ebp-0x20]
 804888d:  sub eax, DWORD PTR [ebp-0x20]
 8048890:  lea eax, [esi+eax]
 8048893:  mov ds:0x80d1470, eax
 8048898:  jmp 804875d
 804889d:  lea esi, [esi]
 80488a0:  mov DWORD PTR [esp], 0x80afbdc
 80488a7:  call 80490e0
 80488ac:  lea esi, [esi]
 80488b0:  mov di, 0x1
 80488b4:  jmp 8048842
 80488b6:  lea esi, [esi]
 80488b9:  lea edi, [edi]

080488c0 <__pthread_initialize_minimal>:
 80488c0:  push ebp
 80488c1:  mov ebp, esp
 80488c3:  sub esp, 0x8
 80488c6:  mov DWORD PTR [esp+0x4], 0x10
 80488ce:  mov DWORD PTR [esp], 0x470
 80488d5:  call 8048680
 80488da:  leave
 80488db:  ret
 80488dc:  nop
 80488dd:  nop
 80488de:  nop
 80488df:  nop

080488e0 <__libc_csu_fini>:
 80488e0:  push ebp
 80488e1:  mov ebp, esp
 80488e3:  push esi
 80488e4:  mov esi, 0x80d0cb8
 80488e9:  sub esi, 0x80d0cb8
 80488ef:  sar esi, 0x2
 80488f2:  test esi, esi
 80488f4:  push ebx
 80488f5:  je 804890b
 80488f7:  lea ebx, [esi*4+0x80d0cb8]
 80488fe:  xchg ax, ax
 8048900:  call DWORD PTR [ebx-0x4]
 8048903:  sub ebx, 0x4
 8048906:  sub esi, 0x1
 8048909:  jne 8048900
 804890b:  pop ebx
 804890c:  pop esi
 804890d:  pop ebp
 804890e:  jmp 80afb4c
 8048913:  lea esi, [esi]
 8048919:  lea edi, [edi]

08048920 <__libc_csu_init>:
 8048920:  push ebp
 8048921:  mov ebp, esp
 8048923:  push edi
 8048924:  push esi
 8048925:  mov esi, 0x80d0cb8
 804892a:  sub esi, 0x80d0cb8
 8048930:  push ebx
 8048931:  sar esi, 0x2
 8048934:  sub esp, 0xc
 8048937:  mov edi, DWORD PTR [ebp+0x10]
 804893a:  test esi, esi
 804893c:  je 804895f
 804893e:  xor ebx, ebx
 8048940:  mov eax, DWORD PTR [ebp+0xc]
 8048943:  mov DWORD PTR [esp+0x8], edi
 8048947:  mov DWORD PTR [esp+0x4], eax
 804894b:  mov eax, DWORD PTR [ebp+0x8]
 804894e:  mov DWORD PTR [esp], eax
 8048951:  call DWORD PTR [ebx*4+0x80d0cb8]
 8048958:  add ebx, 0x1
 804895b:  cmp ebx, esi
 804895d:  jb 8048940
 804895f:  mov esi, 0x80d0cb8
 8048964:  sub esi, 0x80d0cb8
 804896a:  sar esi, 0x2
 804896d:  call 80480f4
 8048972:  test esi, esi
 8048974:  je 8048997
 8048976:  xor ebx, ebx
 8048978:  mov eax, DWORD PTR [ebp+0xc]
 804897b:  mov DWORD PTR [esp+0x8], edi
 804897f:  mov DWORD PTR [esp+0x4], eax
 8048983:  mov eax, DWORD PTR [ebp+0x8]
 8048986:  mov DWORD PTR [esp], eax
 8048989:  call DWORD PTR [ebx*4+0x80d0cb8]
 8048990:  add ebx, 0x1
 8048993:  cmp ebx, esi
 8048995:  jb 8048978
 8048997:  add esp, 0xc
 804899a:  pop ebx
 804899b:  pop esi
 804899c:  pop edi
 804899d:  pop ebp
 804899e:  ret
 804899f:  nop

080489a0 <_setjmp>:
 80489a0:  xor eax, eax
 80489a2:  mov edx, DWORD PTR [esp+0x4]
 80489a6:  mov DWORD PTR [edx], ebx
 80489a8:  mov DWORD PTR [edx+0x4], esi
 80489ab:  mov DWORD PTR [edx+0x8], edi
 80489ae:  lea ecx, [esp+0x4]
 80489b2:  xor ecx, DWORD PTR gs:0x18
 80489b9:  rol ecx, 0x9
 80489bc:  mov DWORD PTR [edx+0x10], ecx
 80489bf:  mov ecx, DWORD PTR [esp]
 80489c2:  xor ecx, DWORD PTR gs:0x18
 80489c9:  rol ecx, 0x9
 80489cc:  mov DWORD PTR [edx+0x14], ecx
 80489cf:  mov DWORD PTR [edx+0xc], ebp
 80489d2:  mov DWORD PTR [edx+0x18], eax
 80489d5:  ret
 80489d6:  nop
 80489d7:  nop
 80489d8:  nop
 80489d9:  nop
 80489da:  nop
 80489db:  nop
 80489dc:  nop
 80489dd:  nop
 80489de:  nop
 80489df:  nop

080489e0 <exit>:
 80489e0:  push ebp
 80489e1:  mov ebp, esp
 80489e3:  push edi
 80489e4:  push esi
 80489e5:  push ebx
 80489e6:  sub esp, 0xc
 80489e9:  mov ebx, DWORD PTR [ebp+0x8]
 80489ec:  lea esi, [esi]
 80489f0:  mov eax, ds:0x80d0d2c
 80489f5:  test eax, eax
 80489f7:  je 8048aa4
 80489fd:  lea esi, [esi]
 8048a00:  mov ecx, DWORD PTR ds:0x80d0d2c
 8048a06:  mov eax, DWORD PTR [ecx+0x4]
 8048a09:  test eax, eax
 8048a0b:  je 8048a80
 8048a0d:  sub eax, 0x1
 8048a10:  mov DWORD PTR [ecx+0x4], eax
 8048a13:  shl eax, 0x4
 8048a16:  lea eax, [ecx+eax]
 8048a19:  mov edx, DWORD PTR [eax+0x8]
 8048a1c:  cmp edx, 0x3
 8048a1f:  je 8048a68
 8048a21:  cmp edx, 0x4
 8048a24:  je 8048a48
 8048a26:  cmp edx, 0x2
 8048a29:  jne 8048a06
 8048a2b:  mov edx, DWORD PTR [eax+0xc]
 8048a2e:  mov eax, DWORD PTR [eax+0x10]
 8048a31:  ror edx, 0x9
 8048a34:  xor edx, DWORD PTR gs:0x18
 8048a3b:  mov DWORD PTR [esp], ebx
 8048a3e:  mov DWORD PTR [esp+0x4], eax
 8048a42:  call edx
 8048a44:  jmp 8048a00
 8048a46:  xchg ax, ax
 8048a48:  mov edx, DWORD PTR [eax+0xc]
 8048a4b:  mov DWORD PTR [esp+0x4], ebx
 8048a4f:  mov eax, DWORD PTR [eax+0x10]
 8048a52:  ror edx, 0x9
 8048a55:  xor edx, DWORD PTR gs:0x18
 8048a5c:  mov DWORD PTR [esp], eax
 8048a5f:  call edx
 8048a61:  jmp 8048a00
 8048a63:  nop
 8048a64:  lea esi, [esi]
 8048a68:  mov eax, DWORD PTR [eax+0xc]
 8048a6b:  ror eax, 0x9
 8048a6e:  xor eax, DWORD PTR gs:0x18
 8048a75:  call eax
 8048a77:  nop
 8048a78:  jmp 8048a00
 8048a7a:  lea esi, [esi]
 8048a80:  mov eax, DWORD PTR [ecx]
 8048a82:  test eax, eax
 8048a84:  mov ds:0x80d0d2c, eax
 8048a89:  je 80489f0
 8048a8f:  mov DWORD PTR [esp], ecx
 8048a92:  call 804b4a0
 8048a97:  mov eax, ds:0x80d0d2c
 8048a9c:  test eax, eax
 8048a9e:  jne 8048a00
 8048aa4:  mov esi, 0x80c6e3c
 8048aa9:  mov edi, 0x80c6e40
 8048aae:  cmp edi, esi
 8048ab0:  jbe 8048ac1
 8048ab2:  lea esi, [esi]
 8048ab8:  call DWORD PTR [esi]
 8048aba:  add esi, 0x4
 8048abd:  cmp edi, esi
 8048abf:  ja 8048ab8
 8048ac1:  mov DWORD PTR [esp], ebx
 8048ac4:  lea esi, [esi]
 8048ac8:  call 804f170
 8048acd:  nop
 8048ace:  nop
 8048acf:  nop

08048ad0 <__new_exitfn>:
 8048ad0:  push ebp
 8048ad1:  xor eax, eax
 8048ad3:  mov ebp, esp
 8048ad5:  mov ecx, 0x1
 8048ada:  push edi
 8048adb:  push esi
 8048adc:  push ebx
 8048add:  sub esp, 0x10
 8048ae0:  cmp DWORD PTR gs:0xc, 0x0
 8048ae8:  je 8048aeb
 8048aea:  cmpxchg DWORD PTR ds:0x80d1ae0, ecx
 8048af2:  jne 8048daa
 8048af8:  mov esi, DWORD PTR ds:0x80d0d2c
 8048afe:  xor edi, edi
 8048b00:  xor eax, eax
 8048b02:  test esi, esi
 8048b04:  je 8048b57
 8048b06:  xchg ax, ax
 8048b08:  mov ecx, DWORD PTR [esi+0x4]
 8048b0b:  test ecx, ecx
 8048b0d:  je 8048b42
 8048b0f:  lea ebx, [ecx-0x1]
 8048b12:  mov eax, ebx
 8048b14:  shl eax, 0x4
 8048b17:  mov eax, DWORD PTR [esi+eax+0x8]
 8048b1b:  test eax, eax
 8048b1d:  jne 8048ba0
 8048b23:  shl ecx, 0x4
 8048b26:  lea edx, [esi+ecx-0x18]
 8048b2a:  mov ecx, ebx
 8048b2c:  jmp 8048b3e
 8048b2e:  xchg ax, ax
 8048b30:  mov eax, DWORD PTR [edx]
 8048b32:  sub edx, 0x10
 8048b35:  lea ebx, [ecx-0x1]
 8048b38:  test eax, eax
 8048b3a:  jne 8048ba0
 8048b3c:  mov ecx, ebx
 8048b3e:  test ecx, ecx
 8048b40:  jne 8048b30
 8048b42:  mov eax, DWORD PTR [esi]
 8048b44:  mov edi, esi
 8048b46:  mov DWORD PTR [esi+0x4], 0x0
 8048b4d:  test eax, eax
 8048b4f:  je 8048b55
 8048b51:  mov esi, eax
 8048b53:  jmp 8048b08
 8048b55:  mov eax, esi
 8048b57:  mov edx, 0x1
 8048b5c:  test eax, eax
 8048b5e:  jne 8048bea
 8048b64:  test dl, dl
 8048b66:  jne 8048bf2
 8048b6c:  mov DWORD PTR [esp+0x4], 0x208
 8048b74:  mov DWORD PTR [esp], 0x1
 8048b7b:  call 804d3c0
 8048b80:  test eax, eax
 8048b82:  mov edi, eax
 8048b84:  je 8048bee
 8048b86:  mov eax, ds:0x80d0d2c
 8048b8b:  mov DWORD PTR [edi], eax
 8048b8d:  mov DWORD PTR ds:0x80d0d2c, edi
 8048b93:  lea edx, [edi+0x8]
 8048b96:  mov DWORD PTR [edi+0x4], 0x1
 8048b9d:  jmp 8048bb4
 8048b9f:  nop
 8048ba0:  cmp ecx, 0x20
 8048ba3:  je 8048c16
 8048ba5:  mov eax, ecx
 8048ba7:  shl eax, 0x4
 8048baa:  lea edx, [esi+eax+0x8]
 8048bae:  lea eax, [ecx+0x1]
 8048bb1:  mov DWORD PTR [esi+0x4], eax
 8048bb4:  add DWORD PTR ds:0x80d2da8, 0x1
 8048bbb:  adc DWORD PTR ds:0x80d2dac, 0x0
 8048bc2:  mov DWORD PTR [edx], 0x1
 8048bc8:  cmp DWORD PTR gs:0xc, 0x0
 8048bd0:  je 8048bd3
 8048bd2:  sub DWORD PTR ds:0x80d1ae0, 0x1
 8048bda:  jne 8048dba
 8048be0:  add esp, 0x10
 8048be3:  mov eax, edx
 8048be5:  pop ebx
 8048be6:  pop esi
 8048be7:  pop edi
 8048be8:  pop ebp
 8048be9:  ret
 8048bea:  test edi, edi
 8048bec:  jne 8048b93
 8048bee:  xor edx, edx
 8048bf0:  jmp 8048bc8
 8048bf2:  mov DWORD PTR [esp+0xc], 0x80afc37
 8048bfa:  mov DWORD PTR [esp+0x8], 0x5a
 8048c02:  mov DWORD PTR [esp+0x4], 0x80afc19
 8048c0a:  mov DWORD PTR [esp], 0x80afc26
 8048c11:  call 8051490
 8048c16:  mov eax, edi
 8048c18:  xor edx, edx
 8048c1a:  jmp 8048b5c
 8048c1f:  nop

08048c20 <__cxa_atexit>:
 8048c20:  push ebp
 8048c21:  xor eax, eax
 8048c23:  mov ebp, esp
 8048c25:  mov ecx, 0x1
 8048c2a:  push edi
 8048c2b:  push esi
 8048c2c:  push ebx
 8048c2d:  sub esp, 0x10
 8048c30:  cmp DWORD PTR gs:0xc, 0x0
 8048c38:  je 8048c3b
 8048c3a:  cmpxchg DWORD PTR ds:0x80d1ae0, ecx
 8048c42:  jne 8048dca
 8048c48:  mov esi, DWORD PTR ds:0x80d0d2c
 8048c4e:  test esi, esi
 8048c50:  je 8048ca5
 8048c52:  xor edi, edi
 8048c54:  lea esi, [esi]
 8048c58:  mov ecx, DWORD PTR [esi+0x4]
 8048c5b:  test ecx, ecx
 8048c5d:  je 8048c92
 8048c5f:  lea ebx, [ecx-0x1]
 8048c62:  mov eax, ebx
 8048c64:  shl eax, 0x4
 8048c67:  mov edx, DWORD PTR [esi+eax+0x8]
 8048c6b:  test edx, edx
 8048c6d:  jne 8048cf8
 8048c73:  shl ecx, 0x4
 8048c76:  lea edx, [esi+ecx-0x18]
 8048c7a:  mov ecx, ebx
 8048c7c:  jmp 8048c8e
 8048c7e:  xchg ax, ax
 8048c80:  mov eax, DWORD PTR [edx]
 8048c82:  sub edx, 0x10
 8048c85:  lea ebx, [ecx-0x1]
 8048c88:  test eax, eax
 8048c8a:  jne 8048cf8
 8048c8c:  mov ecx, ebx
 8048c8e:  test ecx, ecx
 8048c90:  jne 8048c80
 8048c92:  mov eax, DWORD PTR [esi]
 8048c94:  mov DWORD PTR [esi+0x4], 0x0
 8048c9b:  test eax, eax
 8048c9d:  je 8048ca5
 8048c9f:  mov edi, esi
 8048ca1:  mov esi, eax
 8048ca3:  jmp 8048c58
 8048ca5:  mov edi, esi
 8048ca7:  mov eax, 0x1
 8048cac:  test esi, esi
 8048cae:  jne 8048d71
 8048cb4:  test al, al
 8048cb6:  jne 8048d7d
 8048cbc:  mov DWORD PTR [esp+0x4], 0x208
 8048cc4:  mov DWORD PTR [esp], 0x1
 8048ccb:  call 804d3c0
 8048cd0:  test eax, eax
 8048cd2:  mov edi, eax
 8048cd4:  je 8048d79
 8048cda:  mov eax, ds:0x80d0d2c
 8048cdf:  mov DWORD PTR [edi], eax
 8048ce1:  mov DWORD PTR ds:0x80d0d2c, edi
 8048ce7:  lea edx, [edi+0x8]
 8048cea:  mov DWORD PTR [edi+0x4], 0x1
 8048cf1:  jmp 8048d10
 8048cf3:  nop
 8048cf4:  lea esi, [esi]
 8048cf8:  cmp ecx, 0x20
 8048cfb:  je 8048da1
 8048d01:  mov eax, ecx
 8048d03:  shl eax, 0x4
 8048d06:  lea edx, [esi+eax+0x8]
 8048d0a:  lea eax, [ecx+0x1]
 8048d0d:  mov DWORD PTR [esi+0x4], eax
 8048d10:  add DWORD PTR ds:0x80d2da8, 0x1
 8048d17:  adc DWORD PTR ds:0x80d2dac, 0x0
 8048d1e:  mov DWORD PTR [edx], 0x1
 8048d24:  cmp DWORD PTR gs:0xc, 0x0
 8048d2c:  je 8048d2f
 8048d2e:  sub DWORD PTR ds:0x80d1ae0, 0x1
 8048d36:  jne 8048dda
 8048d3c:  test edx, edx
 8048d3e:  mov eax, 0xffffffff
 8048d43:  je 8048d69
 8048d45:  mov eax, DWORD PTR [ebp+0x8]
 8048d48:  xor eax, DWORD PTR gs:0x18
 8048d4f:  rol eax, 0x9
 8048d52:  mov DWORD PTR [edx+0x4], eax
 8048d55:  mov eax, DWORD PTR [ebp+0xc]
 8048d58:  mov DWORD PTR [edx+0x8], eax
 8048d5b:  mov eax, DWORD PTR [ebp+0x10]
 8048d5e:  mov DWORD PTR [edx+0xc], eax
 8048d61:  xor eax, eax
 8048d63:  mov DWORD PTR [edx], 0x4
 8048d69:  add esp, 0x10
 8048d6c:  pop ebx
 8048d6d:  pop esi
 8048d6e:  pop edi
 8048d6f:  pop ebp
 8048d70:  ret
 8048d71:  test edi, edi
 8048d73:  jne 8048ce7
 8048d79:  xor edx, edx
 8048d7b:  jmp 8048d24
 8048d7d:  mov DWORD PTR [esp+0xc], 0x80afc37
 8048d85:  mov DWORD PTR [esp+0x8], 0x5a
 8048d8d:  mov DWORD PTR [esp+0x4], 0x80afc19
 8048d95:  mov DWORD PTR [esp], 0x80afc26
 8048d9c:  call 8051490
 8048da1:  mov esi, edi
 8048da3:  xor eax, eax
 8048da5:  jmp 8048cac

08048daa <_L_lock_20>:
 8048daa:  lea ecx, ds:0x80d1ae0
 8048db0:  call 8050230
 8048db5:  jmp 8048af8

08048dba <_L_unlock_157>:
 8048dba:  lea eax, ds:0x80d1ae0
 8048dc0:  call 8050260
 8048dc5:  jmp 8048be0

08048dca <_L_lock_247>:
 8048dca:  lea ecx, ds:0x80d1ae0
 8048dd0:  call 8050230
 8048dd5:  jmp 8048c48

08048dda <_L_unlock_389>:
 8048dda:  lea eax, ds:0x80d1ae0
 8048de0:  call 8050260
 8048de5:  jmp 8048d3c
 8048dea:  nop
 8048deb:  nop
 8048dec:  nop
 8048ded:  nop
 8048dee:  nop
 8048def:  nop

08048df0 <__libc_message>:
 8048df0:  push ebp
 8048df1:  mov ebp, esp
 8048df3:  push edi
 8048df4:  push esi
 8048df5:  push ebx
 8048df6:  sub esp, 0x524
 8048dfc:  mov DWORD PTR [esp], 0x80afc44
 8048e03:  call 80569d0
 8048e08:  test eax, eax
 8048e0a:  je 8048e15
 8048e0c:  cmp BYTE PTR [eax], 0x0
 8048e0f:  jne 8048fc2
 8048e15:  mov DWORD PTR [esp+0x4], 0x902
 8048e1d:  mov DWORD PTR [esp], 0x80afc57
 8048e24:  call 804f1fa
 8048e29:  mov DWORD PTR [ebp-0x51c], eax
 8048e2f:  add eax, 0x1
 8048e32:  je 8048fc2
 8048e38:  mov eax, DWORD PTR [ebp+0xc]
 8048e3b:  movzx ebx, BYTE PTR [eax]
 8048e3e:  test bl, bl
 8048e40:  je 8048f8c
 8048e46:  mov esi, eax
 8048e48:  mov edx, ebx
 8048e4a:  lea edi, [ebp+0x10]
 8048e4d:  mov DWORD PTR [ebp-0x510], 0x0
 8048e57:  mov DWORD PTR [ebp-0x514], 0x0
 8048e61:  jmp 8048e88
 8048e63:  nop
 8048e64:  lea esi, [esi]
 8048e68:  cmp BYTE PTR [eax+0x1], 0x73
 8048e6c:  lea edx, [eax+0x1]
 8048e6f:  je 8048e98
 8048e71:  mov DWORD PTR [esp], edx
 8048e74:  mov DWORD PTR [esp+0x4], 0x25
 8048e7c:  call 804f010
 8048e81:  movzx edx, BYTE PTR [eax]
 8048e84:  test dl, dl
 8048e86:  je 8048e98
 8048e88:  cmp dl, 0x25
 8048e8b:  je 8048e68
 8048e8d:  lea edx, [eax+0x1]
 8048e90:  jmp 8048e71
 8048e92:  lea esi, [esi]
 8048e98:  cmp bl, 0x25
 8048e9b:  nop
 8048e9c:  lea esi, [esi]
 8048ea0:  je 8048ef0
 8048ea2:  mov edx, eax
 8048ea4:  mov ebx, esi
 8048ea6:  sub edx, esi
 8048ea8:  mov esi, eax
 8048eaa:  mov DWORD PTR [ebp-0x518], edi
 8048eb0:  mov ecx, DWORD PTR [ebp-0x510]
 8048eb6:  sub esp, 0x1c
 8048eb9:  lea eax, [esp+0x1b]
 8048ebd:  mov edi, DWORD PTR [ebp-0x514]
 8048ec3:  and eax, 0xf0
 8048ec6:  mov DWORD PTR [eax], ebx
 8048ec8:  mov DWORD PTR [eax+0x4], edx
 8048ecb:  mov DWORD PTR [eax+0x8], ecx
 8048ece:  movzx edx, BYTE PTR [esi]
 8048ed1:  add edi, 0x1
 8048ed4:  mov DWORD PTR [ebp-0x510], eax
 8048eda:  mov eax, esi
 8048edc:  test dl, dl
 8048ede:  mov ebx, edx
 8048ee0:  je 8048f10
 8048ee2:  mov DWORD PTR [ebp-0x514], edi
 8048ee8:  mov edi, DWORD PTR [ebp-0x518]
 8048eee:  jmp 8048e88
 8048ef0:  cmp BYTE PTR [esi+0x1], 0x73
 8048ef4:  jne 8048ea2
 8048ef6:  mov ebx, DWORD PTR [edi]
 8048ef8:  lea edx, [edi+0x4]
 8048efb:  add esi, 0x2
 8048efe:  mov DWORD PTR [ebp-0x518], edx
 8048f04:  mov DWORD PTR [esp], ebx
 8048f07:  call 804eea0
 8048f0c:  mov edx, eax
 8048f0e:  jmp 8048eb0
 8048f10:  lea eax, [edi*8+0x10]
 8048f17:  mov edx, DWORD PTR [ebp-0x510]
 8048f1d:  xor esi, esi
 8048f1f:  sub esp, eax
 8048f21:  mov eax, DWORD PTR [ebp-0x514]
 8048f27:  lea ebx, [esp+0x1b]
 8048f2b:  and ebx, 0xf0
 8048f2e:  mov DWORD PTR [ebp-0x524], ebx
 8048f34:  lea ecx, [ebx+eax*8]
 8048f37:  mov ebx, eax
 8048f39:  lea esi, [esi]
 8048f40:  mov eax, DWORD PTR [edx]
 8048f42:  sub ebx, 0x1
 8048f45:  mov DWORD PTR [ecx], eax
 8048f47:  mov eax, DWORD PTR [edx+0x4]
 8048f4a:  mov edx, DWORD PTR [edx+0x8]
 8048f4d:  mov DWORD PTR [ecx+0x4], eax
 8048f50:  lea eax, [esi+eax]
 8048f53:  sub ecx, 0x8
 8048f56:  cmp ebx, 0xff
 8048f59:  mov esi, eax
 8048f5b:  mov DWORD PTR [ebp-0x520], eax
 8048f61:  jne 8048f40
 8048f63:  mov ebx, DWORD PTR [ebp-0x51c]
 8048f69:  mov edx, edi
 8048f6b:  mov ecx, DWORD PTR [ebp-0x524]
 8048f71:  mov eax, 0x92
 8048f76:  int 0x80
 8048f78:  cmp eax, 0xfffff000
 8048f7d:  ja 8048fb8
 8048f7f:  cmp DWORD PTR [ebp-0x520], eax
 8048f85:  mov edx, 0x1
 8048f8a:  je 8048fa8
 8048f8c:  mov edx, DWORD PTR [ebp+0xc]
 8048f8f:  lea eax, [ebp+0x10]
 8048f92:  mov DWORD PTR [esp+0x8], eax
 8048f96:  mov DWORD PTR [esp], 0x3
 8048f9d:  mov DWORD PTR [esp+0x4], edx
 8048fa1:  call 804ff20
 8048fa6:  xor edx, edx
 8048fa8:  mov eax, DWORD PTR [ebp+0x8]
 8048fab:  test eax, eax
 8048fad:  jne 8048fd5
 8048faf:  lea esp, [ebp-0xc]
 8048fb2:  pop ebx
 8048fb3:  pop esi
 8048fb4:  pop edi
 8048fb5:  pop ebp
 8048fb6:  ret
 8048fb7:  nop
 8048fb8:  cmp eax, 0xfc
 8048fbb:  jne 8048f7f
 8048fbd:  lea esi, [esi]
 8048fc0:  jmp 8048f63
 8048fc2:  mov DWORD PTR [ebp-0x51c], 0x2
 8048fcc:  lea esi, [esi]
 8048fd0:  jmp 8048e38
 8048fd5:  cmp DWORD PTR [ebp+0x8], 0x1
 8048fd9:  lea esi, [esi]
 8048fe0:  jle 8048fea
 8048fe2:  test dl, dl
 8048fe4:  lea esi, [esi]
 8048fe8:  jne 8048ff5
 8048fea:  lea esi, [esi]
 8048ff0:  call 8055a00
 8048ff5:  lea eax, [ebp-0x10c]
 8048ffb:  mov DWORD PTR [esp+0x4], 0x40
 8049003:  mov DWORD PTR [esp], eax
 8049006:  call 80504b0
 804900b:  cmp eax, 0x2
 804900e:  mov ebx, eax
 8049010:  jle 8048fea
 8049012:  mov ecx, DWORD PTR [ebp-0x51c]
 8049018:  lea edi, [ebp-0x50c]
 804901e:  mov DWORD PTR [esp+0x8], 0x1d
 8049026:  mov DWORD PTR [esp+0x4], 0x80afc60
 804902e:  mov DWORD PTR [esp], ecx
 8049031:  call 804f2ba
 8049036:  mov eax, DWORD PTR [ebp-0x51c]
 804903c:  mov DWORD PTR [esp+0x8], eax
 8049040:  lea eax, [ebx-0x1]
 8049043:  mov DWORD PTR [esp+0x4], eax
 8049047:  lea eax, [ebp-0x108]
 804904d:  mov DWORD PTR [esp], eax
 8049050:  call 8050600
 8049055:  mov edx, DWORD PTR [ebp-0x51c]
 804905b:  mov DWORD PTR [esp+0x8], 0x1d
 8049063:  mov DWORD PTR [esp+0x4], 0x80afc7e
 804906b:  mov DWORD PTR [esp], edx
 804906e:  call 804f2ba
 8049073:  mov DWORD PTR [esp+0x4], 0x0
 804907b:  mov DWORD PTR [esp], 0x80afc9c
 8049082:  call 804f1fa
 8049087:  mov esi, eax
 8049089:  jmp 80490aa
 804908b:  nop
 804908c:  lea esi, [esi]
 8049090:  mov ecx, DWORD PTR [ebp-0x51c]
 8049096:  mov DWORD PTR [esp+0x8], ebx
 804909a:  mov DWORD PTR [esp+0x4], edi
 804909e:  mov DWORD PTR [esp], ecx
 80490a1:  call 804f2ba
 80490a6:  cmp ebx, eax
 80490a8:  jne 80490c4
 80490aa:  mov DWORD PTR [esp+0x8], 0x400
 80490b2:  mov DWORD PTR [esp+0x4], edi
 80490b6:  mov DWORD PTR [esp], esi
 80490b9:  call 804f25a
 80490be:  test eax, eax
 80490c0:  mov ebx, eax
 80490c2:  jg 8049090
 80490c4:  mov ebx, esi
 80490c6:  mov eax, 0x6
 80490cb:  int 0x80
 80490cd:  jmp 8048fea
 80490d2:  lea esi, [esi]
 80490d9:  lea edi, [edi]

080490e0 <__libc_fatal>:
 80490e0:  push ebp
 80490e1:  mov ebp, esp
 80490e3:  push ebx
 80490e4:  sub esp, 0xc
 80490e7:  mov ebx, DWORD PTR [ebp+0x8]
 80490ea:  lea esi, [esi]
 80490f0:  mov DWORD PTR [esp+0x8], ebx
 80490f4:  mov DWORD PTR [esp+0x4], 0x80c6acf
 80490fc:  mov DWORD PTR [esp], 0x1
 8049103:  call 8048df0
 8049108:  jmp 80490f0
 804910a:  nop
 804910b:  nop
 804910c:  nop
 804910d:  nop
 804910e:  nop
 804910f:  nop

08049110 <ptmalloc_lock_all>:
 8049110:  push ebp
 8049111:  mov ebp, esp
 8049113:  push edi
 8049114:  push esi
 8049115:  push ebx
 8049116:  sub esp, 0xc
 8049119:  mov eax, ds:0x80d0d40
 804911e:  test eax, eax
 8049120:  jle 80491df
 8049126:  xor edx, edx
 8049128:  mov ecx, 0x1
 804912d:  mov eax, edx
 804912f:  cmp DWORD PTR gs:0xc, 0x0
 8049137:  je 804913a
 8049139:  cmpxchg DWORD PTR ds:0x80d21d8, ecx
 8049141:  test eax, eax
 8049143:  jne 80491e8
 8049149:  mov eax, gs:0x0
 804914f:  mov edx, 0xffffffec
 8049155:  mov DWORD PTR [ebp-0x10], eax
 8049158:  mov DWORD PTR [ebp-0x18], edx
 804915b:  mov DWORD PTR [ebp-0x14], 0x80d1d40
 8049162:  xor esi, esi
 8049164:  mov ebx, 0x1
 8049169:  lea esi, [esi]
 8049170:  mov ecx, ebx
 8049172:  mov eax, esi
 8049174:  mov edi, DWORD PTR [ebp-0x14]
 8049177:  cmp DWORD PTR gs:0xc, 0x0
 804917f:  je 8049182
 8049181:  cmpxchg DWORD PTR [edi], ecx
 8049185:  jne 804ea4a
 804918b:  mov eax, DWORD PTR [edi+0x440]
 8049191:  cmp eax, 0x80d1d40
 8049196:  mov DWORD PTR [ebp-0x14], eax
 8049199:  jne 8049170
 804919b:  mov eax, ds:0x80d0d34
 80491a0:  mov ecx, DWORD PTR [ebp-0x10]
 80491a3:  mov edx, DWORD PTR [ebp-0x18]
 80491a6:  mov DWORD PTR ds:0x80d0d34, 0x804de40
 80491b0:  mov ds:0x80d21e0, eax
 80491b5:  mov eax, ds:0x80d1d24
 80491ba:  mov DWORD PTR ds:0x80d1d24, 0x804b390
 80491c4:  mov ds:0x80d21e4, eax
 80491c9:  mov eax, DWORD PTR [ecx+edx]
 80491cc:  mov DWORD PTR [ecx+edx], 0xffffffff
 80491d3:  mov ds:0x80d21e8, eax
 80491d8:  add DWORD PTR ds:0x80d2208, 0x1
 80491df:  add esp, 0xc
 80491e2:  pop ebx
 80491e3:  pop esi
 80491e4:  pop edi
 80491e5:  pop ebp
 80491e6:  ret
 80491e7:  nop
 80491e8:  mov ebx, DWORD PTR gs:0x0
 80491ef:  mov edi, 0xffffffec
 80491f5:  mov DWORD PTR [ebp-0x10], ebx
 80491f8:  cmp DWORD PTR [ebx+edi], 0xff
 80491fc:  mov DWORD PTR [ebp-0x18], edi
 80491ff:  je 80491d8
 8049201:  mov eax, edx
 8049203:  cmp DWORD PTR gs:0xc, 0x0
 804920b:  je 804920e
 804920d:  cmpxchg DWORD PTR ds:0x80d21d8, ecx
 8049215:  jne 804ea56
 804921b:  jmp 804915b

08049220 <ptmalloc_unlock_all>:
 8049220:  mov edx, DWORD PTR ds:0x80d0d40
 8049226:  push ebp
 8049227:  mov ebp, esp
 8049229:  test edx, edx
 804922b:  jle 80492aa
 804922d:  mov eax, ds:0x80d2208
 8049232:  sub eax, 0x1
 8049235:  test eax, eax
 8049237:  mov ds:0x80d2208, eax
 804923c:  jne 80492aa
 804923e:  mov ecx, DWORD PTR ds:0x80d21e8
 8049244:  mov eax, gs:0x0
 804924a:  mov edx, 0xffffffec
 8049250:  mov DWORD PTR [eax+edx], ecx
 8049253:  mov eax, ds:0x80d21e0
 8049258:  mov ecx, 0x80d1d40
 804925d:  mov ds:0x80d0d34, eax
 8049262:  mov eax, ds:0x80d21e4
 8049267:  mov ds:0x80d1d24, eax
 804926c:  lea esi, [esi]
 8049270:  cmp DWORD PTR gs:0xc, 0x0
 8049278:  je 804927b
 804927a:  sub DWORD PTR [ecx], 0x1
 804927e:  jne 804ea66
 8049284:  mov ecx, DWORD PTR [ecx+0x440]
 804928a:  cmp ecx, 0x80d1d40
 8049290:  jne 8049270
 8049292:  cmp DWORD PTR gs:0xc, 0x0
 804929a:  je 804929d
 804929c:  sub DWORD PTR ds:0x80d21d8, 0x1
 80492a4:  jne 804ea72
 80492aa:  pop ebp
 80492ab:  ret
 80492ac:  lea esi, [esi]

080492b0 <ptmalloc_unlock_all2>:
 80492b0:  mov ecx, DWORD PTR ds:0x80d0d40
 80492b6:  push ebp
 80492b7:  mov ebp, esp
 80492b9:  test ecx, ecx
 80492bb:  jle 8049317
 80492bd:  mov eax, gs:0x0
 80492c3:  mov ecx, DWORD PTR ds:0x80d21e8
 80492c9:  mov edx, 0xffffffec
 80492cf:  mov DWORD PTR [eax+edx], ecx
 80492d2:  mov eax, ds:0x80d21e0
 80492d7:  mov ds:0x80d0d34, eax
 80492dc:  mov eax, ds:0x80d21e4
 80492e1:  mov ds:0x80d1d24, eax
 80492e6:  mov eax, 0x80d1d40
 80492eb:  nop
 80492ec:  lea esi, [esi]
 80492f0:  mov DWORD PTR [eax], 0x0
 80492f6:  mov eax, DWORD PTR [eax+0x440]
 80492fc:  cmp eax, 0x80d1d40
 8049301:  jne 80492f0
 8049303:  mov DWORD PTR ds:0x80d21d8, 0x0
 804930d:  mov DWORD PTR ds:0x80d2208, 0x0
 8049317:  pop ebp
 8049318:  ret
 8049319:  lea esi, [esi]

08049320 <__malloc_check_init>:
 8049320:  mov eax, ds:0x80d2214
 8049325:  push ebp
 8049326:  mov ebp, esp
 8049328:  test eax, eax
 804932a:  jne 8049360
 804932c:  mov DWORD PTR ds:0x80d2210, 0x1
 8049336:  mov DWORD PTR ds:0x80d0d34, 0x804c8e0
 8049340:  mov DWORD PTR ds:0x80d1d24, 0x804b5d0
 804934a:  mov DWORD PTR ds:0x80d0d38, 0x804d090
 8049354:  mov DWORD PTR ds:0x80d0d3c, 0x804df80
 804935e:  pop ebp
 804935f:  ret
 8049360:  mov DWORD PTR ds:0x80d2214, 0x0
 804936a:  pop ebp
 804936b:  ret
 804936c:  lea esi, [esi]

08049370 <__malloc_usable_size>:
 8049370:  push ebp
 8049371:  mov ebp, esp
 8049373:  mov eax, DWORD PTR [ebp+0x8]
 8049376:  test eax, eax
 8049378:  je 80493a0
 804937a:  lea edx, [eax-0x8]
 804937d:  mov eax, DWORD PTR [edx+0x4]
 8049380:  test al, 0x2
 8049382:  jne 8049398
 8049384:  and eax, 0xf8
 8049387:  test BYTE PTR [edx+eax+0x4], 0x1
 804938c:  je 80493a0
 804938e:  sub eax, 0x4
 8049391:  pop ebp
 8049392:  ret
 8049393:  nop
 8049394:  lea esi, [esi]
 8049398:  and eax, 0xf8
 804939b:  sub eax, 0x8
 804939e:  pop ebp
 804939f:  ret
 80493a0:  xor eax, eax
 80493a2:  pop ebp
 80493a3:  nop
 80493a4:  lea esi, [esi]
 80493a8:  ret
 80493a9:  lea esi, [esi]

080493b0 <mem2chunk_check>:
 80493b0:  push ebp
 80493b1:  mov ebp, esp
 80493b3:  sub esp, 0x1c
 80493b6:  test al, 0x7
 80493b8:  mov DWORD PTR [ebp-0x8], esi
 80493bb:  mov esi, eax
 80493bd:  mov DWORD PTR [ebp-0xc], ebx
 80493c0:  mov DWORD PTR [ebp-0x4], edi
 80493c3:  mov DWORD PTR [ebp-0x1c], edx
 80493c6:  jne 80493f8
 80493c8:  lea ebx, [eax-0x8]
 80493cb:  mov edi, DWORD PTR [ebx+0x4]
 80493ce:  test edi, 0x2
 80493d4:  jne 8049430
 80493d6:  mov eax, ds:0x80d1d44
 80493db:  mov ecx, edi
 80493dd:  and ecx, 0xf8
 80493e0:  shr eax, 1
 80493e2:  xor eax, 0x1
 80493e5:  and eax, 0x1
 80493e8:  mov DWORD PTR [ebp-0x18], eax
 80493eb:  jne 8049410
 80493ed:  cmp ecx, 0xf
 80493f0:  ja 8049550
 80493f6:  xchg ax, ax
 80493f8:  xor ebx, ebx
 80493fa:  mov eax, ebx
 80493fc:  mov esi, DWORD PTR [ebp-0x8]
 80493ff:  mov ebx, DWORD PTR [ebp-0xc]
 8049402:  mov edi, DWORD PTR [ebp-0x4]
 8049405:  mov esp, ebp
 8049407:  pop ebp
 8049408:  ret
 8049409:  lea esi, [esi]
 8049410:  mov edx, DWORD PTR ds:0x80d21cc
 8049416:  cmp edx, ebx
 8049418:  ja 80493f8
 804941a:  add edx, DWORD PTR ds:0x80d2184
 8049420:  lea eax, [ebx+ecx]
 8049423:  cmp eax, edx
 8049425:  jb 80493ed
 8049427:  jmp 80493f8
 8049429:  lea esi, [esi]
 8049430:  call 804f4a0
 8049435:  lea ecx, [eax-0x1]
 8049438:  mov eax, esi
 804943a:  and eax, ecx
 804943c:  cmp eax, 0x8
 804943f:  je 8049498
 8049441:  test eax, eax
 8049443:  je 8049498
 8049445:  cmp eax, 0x10
 8049448:  je 8049498
 804944a:  cmp eax, 0x20
 804944d:  lea esi, [esi]
 8049450:  je 8049498
 8049452:  cmp eax, 0x40
 8049455:  lea esi, [esi]
 8049458:  je 8049498
 804945a:  cmp eax, 0x80
 804945f:  nop
 8049460:  je 8049498
 8049462:  cmp eax, 0x100
 8049467:  nop
 8049468:  je 8049498
 804946a:  cmp eax, 0x200
 804946f:  nop
 8049470:  je 8049498
 8049472:  cmp eax, 0x400
 8049477:  nop
 8049478:  je 8049498
 804947a:  cmp eax, 0x800
 804947f:  nop
 8049480:  je 8049498
 8049482:  cmp eax, 0x1000
 8049487:  nop
 8049488:  je 8049498
 804948a:  cmp eax, 0x1fff
 804948f:  nop
 8049490:  jbe 80493f8
 8049496:  xchg ax, ax
 8049498:  mov eax, DWORD PTR [ebx+0x4]
 804949b:  and eax, 0x3
 804949e:  cmp eax, 0x2
 80494a1:  jne 80493f8
 80494a7:  mov edx, DWORD PTR [esi-0x8]
 80494aa:  mov esi, edi
 80494ac:  mov eax, ebx
 80494ae:  and esi, 0xf8
 80494b1:  sub eax, edx
 80494b3:  lea edx, [esi+edx]
 80494b6:  or eax, edx
 80494b8:  test eax, ecx
 80494ba:  jne 80493f8
 80494c0:  sub esi, 0x1
 80494c3:  mov edx, ebx
 80494c5:  lea edi, [ebx+esi]
 80494c8:  mov DWORD PTR [ebp-0x10], esi
 80494cb:  movzx esi, BYTE PTR [edi]
 80494ce:  shr edx, 0x3
 80494d1:  mov eax, esi
 80494d3:  movzx ecx, al
 80494d6:  mov eax, ebx
 80494d8:  shr eax, 0xb
 80494db:  xor eax, edx
 80494dd:  movzx edx, al
 80494e0:  cmp ecx, edx
 80494e2:  je 8049533
 80494e4:  test ecx, ecx
 80494e6:  je 80493f8
 80494ec:  lea eax, [ecx+0x8]
 80494ef:  cmp DWORD PTR [ebp-0x10], eax
 80494f2:  jae 804951e
 80494f4:  lea esi, [esi]
 80494f8:  jmp 80493f8
 80494fd:  lea esi, [esi]
 8049500:  test ecx, ecx
 8049502:  lea esi, [esi]
 8049508:  je 80493f8
 804950e:  lea eax, [ecx+0x8]
 8049511:  cmp eax, DWORD PTR [ebp-0x10]
 8049514:  lea esi, [esi]
 8049518:  ja 80493f8
 804951e:  sub DWORD PTR [ebp-0x10], ecx
 8049521:  mov eax, DWORD PTR [ebp-0x10]
 8049524:  lea edi, [ebx+eax]
 8049527:  movzx esi, BYTE PTR [edi]
 804952a:  mov eax, esi
 804952c:  movzx ecx, al
 804952f:  cmp ecx, edx
 8049531:  jne 8049500
 8049533:  not esi
 8049535:  mov eax, esi
 8049537:  mov BYTE PTR [edi], al
 8049539:  mov eax, DWORD PTR [ebp-0x1c]
 804953c:  test eax, eax
 804953e:  je 80493fa
 8049544:  mov eax, DWORD PTR [ebp-0x1c]
 8049547:  mov DWORD PTR [eax], edi
 8049549:  jmp 80493fa
 804954e:  xchg ax, ax
 8049550:  mov eax, edi
 8049552:  and eax, 0xf8
 8049555:  test BYTE PTR [ebx+eax+0x4], 0x1
 804955a:  je 80493f8
 8049560:  and edi, 0x1
 8049563:  je 80495ba
 8049565:  add ecx, 0x3
 8049568:  mov edx, ebx
 804956a:  lea edi, [ebx+ecx]
 804956d:  mov DWORD PTR [ebp-0x14], ecx
 8049570:  movzx esi, BYTE PTR [edi]
 8049573:  shr edx, 0x3
 8049576:  mov eax, esi
 8049578:  movzx ecx, al
 804957b:  mov eax, ebx
 804957d:  shr eax, 0xb
 8049580:  xor eax, edx
 8049582:  movzx edx, al
 8049585:  cmp ecx, edx
 8049587:  jne 80495b1
 8049589:  jmp 8049533
 804958b:  nop
 804958c:  lea esi, [esi]
 8049590:  lea eax, [ecx+0x8]
 8049593:  cmp eax, DWORD PTR [ebp-0x14]
 8049596:  ja 80493f8
 804959c:  sub DWORD PTR [ebp-0x14], ecx
 804959f:  mov eax, DWORD PTR [ebp-0x14]
 80495a2:  lea edi, [ebx+eax]
 80495a5:  movzx esi, BYTE PTR [edi]
 80495a8:  mov eax, esi
 80495aa:  movzx ecx, al
 80495ad:  cmp edx, ecx
 80495af:  je 8049533
 80495b1:  test ecx, ecx
 80495b3:  jne 8049590
 80495b5:  jmp 80493f8
 80495ba:  mov esi, DWORD PTR [esi-0x8]
 80495bd:  test esi, 0x7
 80495c3:  nop
 80495c4:  lea esi, [esi]
 80495c8:  jne 80493f8
 80495ce:  mov eax, DWORD PTR [ebp-0x18]
 80495d1:  test eax, eax
 80495d3:  nop
 80495d4:  lea esi, [esi]
 80495d8:  jne 80495f2
 80495da:  mov edx, esi
 80495dc:  neg edx
 80495de:  mov eax, DWORD PTR [ebx+edx+0x4]
 80495e2:  and eax, 0xf8
 80495e5:  cmp esi, eax
 80495e7:  jne 80493f8
 80495ed:  jmp 8049565
 80495f2:  mov edx, esi
 80495f4:  neg edx
 80495f6:  lea eax, [ebx+edx]
 80495f9:  cmp DWORD PTR ds:0x80d21cc, eax
 80495ff:  jbe 80495de
 8049601:  jmp 80493f8
 8049606:  lea esi, [esi]
 8049609:  lea edi, [edi]

08049610 <malloc_printerr>:
 8049610:  push ebp
 8049611:  mov ebp, esp
 8049613:  sub esp, 0x2c
 8049616:  mov DWORD PTR [ebp-0xc], ebx
 8049619:  mov ebx, eax
 804961b:  and eax, 0x5
 804961e:  cmp eax, 0x5
 8049621:  mov DWORD PTR [ebp-0x4], edi
 8049624:  mov edi, edx
 8049626:  mov DWORD PTR [ebp-0x8], esi
 8049629:  je 80496c8
 804962f:  test bl, 0x1
 8049632:  jne 8049650
 8049634:  and ebx, 0x2
 8049637:  jne 80496e4
 804963d:  mov ebx, DWORD PTR [ebp-0xc]
 8049640:  mov esi, DWORD PTR [ebp-0x8]
 8049643:  mov edi, DWORD PTR [ebp-0x4]
 8049646:  mov esp, ebp
 8049648:  pop ebp
 8049649:  ret
 804964a:  lea esi, [esi]
 8049650:  lea eax, [ebp-0xd]
 8049653:  mov BYTE PTR [ebp-0xd], 0x0
 8049657:  lea esi, [ebp-0x15]
 804965a:  mov DWORD PTR [esp+0xc], 0x0
 8049662:  mov DWORD PTR [esp+0x8], 0x10
 804966a:  mov DWORD PTR [esp+0x4], eax
 804966e:  mov DWORD PTR [esp], ecx
 8049671:  call 8057700
 8049676:  cmp eax, esi
 8049678:  mov edx, eax
 804967a:  jbe 804968d
 804967c:  lea esi, [esi]
 8049680:  sub eax, 0x1
 8049683:  cmp eax, esi
 8049685:  mov BYTE PTR [eax], 0x30
 8049688:  ja 8049680
 804968a:  lea edx, [ebp-0x15]
 804968d:  mov eax, ds:0x80d2e6c
 8049692:  mov ecx, 0x80afcac
 8049697:  mov eax, DWORD PTR [eax]
 8049699:  test eax, eax
 804969b:  je 804969f
 804969d:  mov ecx, eax
 804969f:  and ebx, 0x2
 80496a2:  mov DWORD PTR [esp+0x10], edx
 80496a6:  mov DWORD PTR [esp+0xc], edi
 80496aa:  mov DWORD PTR [esp+0x8], ecx
 80496ae:  mov DWORD PTR [esp+0x4], 0x80afe50
 80496b6:  mov DWORD PTR [esp], ebx
 80496b9:  call 8048df0
 80496be:  jmp 804963d
 80496c3:  nop
 80496c4:  lea esi, [esi]
 80496c8:  and ebx, 0x2
 80496cb:  mov DWORD PTR [esp+0x8], edx
 80496cf:  mov DWORD PTR [esp+0x4], 0x80c6765
 80496d7:  mov DWORD PTR [esp], ebx
 80496da:  call 8048df0
 80496df:  jmp 804963d
 80496e4:  call 8055a00
 80496e9:  lea esi, [esi]

080496f0 <munmap_chunk>:
 80496f0:  push ebp
 80496f1:  mov ebp, esp
 80496f3:  sub esp, 0x10
 80496f6:  mov DWORD PTR [ebp-0x8], ebx
 80496f9:  mov ebx, eax
 80496fb:  mov DWORD PTR [ebp-0x4], esi
 80496fe:  mov esi, eax
 8049700:  mov edx, DWORD PTR [eax]
 8049702:  mov eax, DWORD PTR [eax+0x4]
 8049705:  sub esi, edx
 8049707:  and eax, 0xf8
 804970a:  lea ecx, [eax+edx]
 804970d:  mov eax, ds:0x80d21bc
 8049712:  mov edx, esi
 8049714:  or edx, ecx
 8049716:  sub eax, 0x1
 8049719:  test edx, eax
 804971b:  jne 8049740
 804971d:  sub DWORD PTR ds:0x80d21ac, 0x1
 8049724:  sub DWORD PTR ds:0x80d21c0, ecx
 804972a:  mov DWORD PTR [esp], esi
 804972d:  mov DWORD PTR [esp+0x4], ecx
 8049731:  call 8050050
 8049736:  mov ebx, DWORD PTR [ebp-0x8]
 8049739:  mov esi, DWORD PTR [ebp-0x4]
 804973c:  mov esp, ebp
 804973e:  pop ebp
 804973f:  ret
 8049740:  mov eax, ds:0x80d0d44
 8049745:  lea ecx, [ebx+0x8]
 8049748:  mov edx, 0x80afe7c
 804974d:  mov ebx, DWORD PTR [ebp-0x8]
 8049750:  mov esi, DWORD PTR [ebp-0x4]
 8049753:  mov esp, ebp
 8049755:  pop ebp
 8049756:  jmp 8049610
 804975b:  nop
 804975c:  lea esi, [esi]

08049760 <new_heap>:
 8049760:  push ebp
 8049761:  mov ebp, esp
 8049763:  push edi
 8049764:  push esi
 8049765:  push ebx
 8049766:  lea ebx, [edx+eax]
 8049769:  sub esp, 0x18
 804976c:  cmp ebx, 0x7fff
 8049772:  ja 8049810
 8049778:  mov ebx, 0x8000
 804977d:  mov eax, ds:0x80d220c
 8049782:  test eax, eax
 8049784:  je 8049848
 804978a:  mov DWORD PTR [esp+0x14], 0x0
 8049792:  mov DWORD PTR [esp+0x10], 0xffffffff
 804979a:  mov DWORD PTR [esp+0xc], 0x4022
 80497a2:  mov DWORD PTR [esp+0x8], 0x0
 80497aa:  mov DWORD PTR [esp+0x4], 0x100000
 80497b2:  mov DWORD PTR [esp], eax
 80497b5:  call 8050000
 80497ba:  mov DWORD PTR ds:0x80d220c, 0x0
 80497c4:  cmp eax, 0xff
 80497c7:  mov esi, eax
 80497c9:  je 8049848
 80497cb:  test eax, 0xfffff
 80497d0:  jne 8049838
 80497d2:  call 804f4a0
 80497d7:  mov DWORD PTR [esp+0x8], 0x3
 80497df:  mov DWORD PTR [esp], esi
 80497e2:  sub eax, 0x1
 80497e5:  add ebx, eax
 80497e7:  not eax
 80497e9:  and ebx, eax
 80497eb:  mov DWORD PTR [esp+0x4], ebx
 80497ef:  call 8050070
 80497f4:  test eax, eax
 80497f6:  jne 80498d0
 80497fc:  mov eax, esi
 80497fe:  mov DWORD PTR [esi+0x8], ebx
 8049801:  mov DWORD PTR [esi+0xc], ebx
 8049804:  add esp, 0x18
 8049807:  pop ebx
 8049808:  pop esi
 8049809:  pop edi
 804980a:  pop ebp
 804980b:  ret
 804980c:  lea esi, [esi]
 8049810:  cmp ebx, 0x100000
 8049816:  jbe 804977d
 804981c:  cmp eax, 0x100000
 8049821:  ja 80498e7
 8049827:  mov ebx, 0x100000
 804982c:  lea esi, [esi]
 8049830:  jmp 804977d
 8049835:  lea esi, [esi]
 8049838:  mov DWORD PTR [esp+0x4], 0x100000
 8049840:  mov DWORD PTR [esp], eax
 8049843:  call 8050050
 8049848:  mov DWORD PTR [esp+0x14], 0x0
 8049850:  mov DWORD PTR [esp+0x10], 0xffffffff
 8049858:  mov DWORD PTR [esp+0xc], 0x4022
 8049860:  mov DWORD PTR [esp+0x8], 0x0
 8049868:  mov DWORD PTR [esp+0x4], 0x200000
 8049870:  mov DWORD PTR [esp], 0x0
 8049877:  call 8050000
 804987c:  cmp eax, 0xff
 804987f:  je 80498ee
 8049881:  lea esi, [eax+0xfffff]
 8049887:  and esi, 0xfff00000
 804988d:  mov edi, esi
 804988f:  sub edi, eax
 8049891:  jne 80498b8
 8049893:  lea edx, [esi+0x100000]
 8049899:  mov DWORD PTR ds:0x80d220c, edx
 804989f:  mov eax, 0x100000
 80498a4:  sub eax, edi
 80498a6:  mov DWORD PTR [esp+0x4], eax
 80498aa:  mov DWORD PTR [esp], edx
 80498ad:  call 8050050
 80498b2:  jmp 80497d2
 80498b7:  nop
 80498b8:  mov DWORD PTR [esp+0x4], edi
 80498bc:  mov DWORD PTR [esp], eax
 80498bf:  call 8050050
 80498c4:  lea edx, [esi+0x100000]
 80498ca:  jmp 804989f
 80498cc:  lea esi, [esi]
 80498d0:  mov DWORD PTR [esp+0x4], 0x100000
 80498d8:  mov DWORD PTR [esp], esi
 80498db:  call 8050050
 80498e0:  xor eax, eax
 80498e2:  jmp 8049804
 80498e7:  xor eax, eax
 80498e9:  jmp 8049804
 80498ee:  mov DWORD PTR [esp+0x14], 0x0
 80498f6:  mov DWORD PTR [esp+0x10], 0xffffffff
 80498fe:  mov DWORD PTR [esp+0xc], 0x4022
 8049906:  mov DWORD PTR [esp+0x8], 0x0
 804990e:  mov DWORD PTR [esp+0x4], 0x100000
 8049916:  mov DWORD PTR [esp], 0x0
 804991d:  call 8050000
 8049922:  cmp eax, 0xff
 8049925:  mov esi, eax
 8049927:  je 80498e7
 8049929:  test eax, 0xfffff
 804992e:  je 80497d2
 8049934:  mov DWORD PTR [esp+0x4], 0x100000
 804993c:  mov DWORD PTR [esp], eax
 804993f:  call 8050050
 8049944:  xor eax, eax
 8049946:  jmp 8049804
 804994b:  nop
 804994c:  lea esi, [esi]

08049950 <arena_get2>:
 8049950:  push ebp
 8049951:  mov ebp, esp
 8049953:  push edi
 8049954:  push esi
 8049955:  push ebx
 8049956:  mov ebx, eax
 8049958:  sub esp, 0xc
 804995b:  test eax, eax
 804995d:  mov DWORD PTR [ebp-0x10], edx
 8049960:  je 8049a28
 8049966:  mov eax, DWORD PTR [eax+0x440]
 804996c:  test eax, eax
 804996e:  mov DWORD PTR [ebp-0x18], eax
 8049971:  je 8049b40
 8049977:  xor edx, edx
 8049979:  mov edi, 0x1
 804997e:  xor esi, esi
 8049980:  mov eax, esi
 8049982:  mov ecx, DWORD PTR [ebp-0x18]
 8049985:  cmp DWORD PTR gs:0xc, 0x0
 804998d:  je 8049990
 804998f:  cmpxchg DWORD PTR [ecx], edi
 8049993:  test eax, eax
 8049995:  je 80499f0
 8049997:  mov eax, DWORD PTR [ebp-0x18]
 804999a:  mov eax, DWORD PTR [eax+0x440]
 80499a0:  cmp eax, ebx
 80499a2:  mov DWORD PTR [ebp-0x18], eax
 80499a5:  jne 8049980
 80499a7:  test dl, dl
 80499a9:  jne 8049a35
 80499af:  mov eax, esi
 80499b1:  cmp DWORD PTR gs:0xc, 0x0
 80499b9:  je 80499bc
 80499bb:  cmpxchg DWORD PTR ds:0x80d21d8, edi
 80499c3:  test eax, eax
 80499c5:  je 8049a35
 80499c7:  mov DWORD PTR [ebp-0x14], edi
 80499ca:  mov eax, esi
 80499cc:  mov ecx, edi
 80499ce:  cmp DWORD PTR gs:0xc, 0x0
 80499d6:  je 80499d9
 80499d8:  cmpxchg DWORD PTR ds:0x80d21d8, ecx
 80499e0:  jne 804ea82
 80499e6:  mov edx, 0x1
 80499eb:  jmp 8049980
 80499ed:  lea esi, [esi]
 80499f0:  test dl, dl
 80499f2:  je 8049a0c
 80499f4:  cmp DWORD PTR gs:0xc, 0x0
 80499fc:  je 80499ff
 80499fe:  sub DWORD PTR ds:0x80d21d8, 0x1
 8049a06:  jne 804ea92
 8049a0c:  mov esi, DWORD PTR [ebp-0x18]
 8049a0f:  mov edx, 0xffffffec
 8049a15:  mov eax, gs:0x0
 8049a1b:  mov DWORD PTR [eax+edx], esi
 8049a1e:  add esp, 0xc
 8049a21:  mov eax, esi
 8049a23:  pop ebx
 8049a24:  pop esi
 8049a25:  pop edi
 8049a26:  pop ebp
 8049a27:  ret
 8049a28:  mov ebx, 0x80d1d40
 8049a2d:  mov DWORD PTR [ebp-0x18], ebx
 8049a30:  jmp 8049977
 8049a35:  mov eax, DWORD PTR [ebp-0x10]
 8049a38:  mov edx, DWORD PTR ds:0x80d21a4
 8049a3e:  add eax, 0x464
 8049a43:  call 8049760
 8049a48:  test eax, eax
 8049a4a:  mov ebx, eax
 8049a4c:  je 8049b81
 8049a52:  lea esi, [ebx+0x10]
 8049a55:  mov DWORD PTR [ebp-0x18], esi
 8049a58:  lea eax, [ebx+0x40]
 8049a5b:  mov DWORD PTR [ebx], esi
 8049a5d:  lea edx, [ebx+0x438]
 8049a63:  nop
 8049a64:  lea esi, [esi]
 8049a68:  mov DWORD PTR [eax+0xc], eax
 8049a6b:  mov DWORD PTR [eax+0x8], eax
 8049a6e:  add eax, 0x8
 8049a71:  cmp eax, edx
 8049a73:  jne 8049a68
 8049a75:  cmp DWORD PTR [ebp-0x18], 0x80d1d40
 8049a7c:  je 8049b6f
 8049a82:  mov eax, DWORD PTR [ebp-0x18]
 8049a85:  or DWORD PTR [eax+0x4], 0x2
 8049a89:  mov edx, eax
 8049a8b:  mov eax, edx
 8049a8d:  or DWORD PTR [edx+0x4], 0x1
 8049a91:  add eax, 0x30
 8049a94:  mov DWORD PTR [edx+0x30], eax
 8049a97:  mov eax, DWORD PTR [ebx+0x8]
 8049a9a:  add DWORD PTR ds:0x80d21dc, eax
 8049aa0:  mov DWORD PTR [edx+0x448], eax
 8049aa6:  mov DWORD PTR [edx+0x444], eax
 8049aac:  mov eax, DWORD PTR [ebp-0x18]
 8049aaf:  add edx, 0x44c
 8049ab5:  add eax, 0x454
 8049aba:  and eax, 0x7
 8049abd:  je 8049ac4
 8049abf:  sub edx, eax
 8049ac1:  lea edx, [edx+0x8]
 8049ac4:  add ebx, DWORD PTR [ebx+0x8]
 8049ac7:  mov ecx, DWORD PTR [ebp-0x18]
 8049aca:  mov eax, 0xffffffec
 8049acf:  sub ebx, edx
 8049ad1:  mov esi, DWORD PTR [ebp-0x18]
 8049ad4:  or ebx, 0x1
 8049ad7:  mov DWORD PTR [edx+0x4], ebx
 8049ada:  mov ebx, 0x1
 8049adf:  mov DWORD PTR [ecx+0x30], edx
 8049ae2:  mov edx, DWORD PTR gs:0x0
 8049ae9:  mov DWORD PTR [ecx], 0x0
 8049aef:  mov DWORD PTR [edx+eax], ecx
 8049af2:  xor edx, edx
 8049af4:  mov ecx, ebx
 8049af6:  mov eax, edx
 8049af8:  cmp DWORD PTR gs:0xc, 0x0
 8049b00:  je 8049b03
 8049b02:  cmpxchg DWORD PTR [esi], ecx
 8049b06:  jne 804eaa2
 8049b0c:  mov eax, ds:0x80d2180
 8049b11:  mov DWORD PTR [esi+0x440], eax
 8049b17:  mov DWORD PTR ds:0x80d2180, esi
 8049b1d:  cmp DWORD PTR gs:0xc, 0x0
 8049b25:  je 8049b28
 8049b27:  sub DWORD PTR ds:0x80d21d8, 0x1
 8049b2f:  jne 804eaae
 8049b35:  mov eax, DWORD PTR [ebp-0x18]
 8049b38:  add esp, 0xc
 8049b3b:  pop ebx
 8049b3c:  pop esi
 8049b3d:  pop edi
 8049b3e:  pop ebp
 8049b3f:  ret
 8049b40:  mov ecx, 0x1
 8049b45:  cmp DWORD PTR gs:0xc, 0x0
 8049b4d:  je 8049b50
 8049b4f:  cmpxchg DWORD PTR ds:0x80d1d40, ecx
 8049b57:  jne 804eabe
 8049b5d:  mov DWORD PTR [ebp-0x18], 0x80d1d40
 8049b64:  mov eax, DWORD PTR [ebp-0x18]
 8049b67:  add esp, 0xc
 8049b6a:  pop ebx
 8049b6b:  pop esi
 8049b6c:  pop edi
 8049b6d:  pop ebp
 8049b6e:  ret
 8049b6f:  mov DWORD PTR ds:0x80d21d0, 0x48
 8049b79:  mov edx, DWORD PTR [ebp-0x18]
 8049b7c:  jmp 8049a8b
 8049b81:  mov edx, DWORD PTR ds:0x80d21a4
 8049b87:  mov eax, 0x464
 8049b8c:  call 8049760
 8049b91:  mov DWORD PTR [ebp-0x18], 0x0
 8049b98:  test eax, eax
 8049b9a:  mov ebx, eax
 8049b9c:  jne 8049a52
 8049ba2:  jmp 8049b1d
 8049ba7:  mov esi, esi
 8049ba9:  lea edi, [edi]

08049bb0 <top_check>:
 8049bb0:  push ebp
 8049bb1:  mov ebp, esp
 8049bb3:  push edi
 8049bb4:  push esi
 8049bb5:  push ebx
 8049bb6:  sub esp, 0x24
 8049bb9:  mov ecx, DWORD PTR ds:0x80d1d70
 8049bbf:  cmp ecx, 0x80d1d70
 8049bc5:  je 8049cc0
 8049bcb:  mov eax, DWORD PTR [ecx+0x4]
 8049bce:  test al, 0x2
 8049bd0:  jne 8049be0
 8049bd2:  mov edx, eax
 8049bd4:  and edx, 0xf8
 8049bd7:  cmp edx, 0xf
 8049bda:  ja 8049c98
 8049be0:  mov ebx, DWORD PTR ds:0x80d0d44
 8049be6:  mov eax, ebx
 8049be8:  and eax, 0x5
 8049beb:  cmp eax, 0x5
 8049bee:  je 8049d48
 8049bf4:  test bl, 0x1
 8049bf7:  jne 8049cd0
 8049bfd:  and ebx, 0x2
 8049c00:  jne 8049d85
 8049c06:  mov DWORD PTR [esp], 0x0
 8049c0d:  lea esi, [esi]
 8049c10:  call DWORD PTR ds:0x80d0d30
 8049c16:  mov edi, eax
 8049c18:  and eax, 0x7
 8049c1b:  mov DWORD PTR [ebp-0x1c], eax
 8049c1e:  je 8049c2b
 8049c20:  mov eax, 0x8
 8049c25:  sub eax, DWORD PTR [ebp-0x1c]
 8049c28:  mov DWORD PTR [ebp-0x1c], eax
 8049c2b:  call 804f4a0
 8049c30:  mov ecx, DWORD PTR [ebp-0x1c]
 8049c33:  mov edx, DWORD PTR ds:0x80d21a4
 8049c39:  lea ebx, [ecx+edx+0x10]
 8049c3d:  lea edx, [edi+ebx]
 8049c40:  add ebx, eax
 8049c42:  lea ecx, [eax-0x1]
 8049c45:  and edx, ecx
 8049c47:  sub ebx, edx
 8049c49:  mov DWORD PTR [esp], ebx
 8049c4c:  call DWORD PTR ds:0x80d0d30
 8049c52:  test eax, eax
 8049c54:  mov esi, eax
 8049c56:  je 8049d68
 8049c5c:  mov eax, ds:0x80d1d28
 8049c61:  test eax, eax
 8049c63:  je 8049c67
 8049c65:  call eax
 8049c67:  mov edx, DWORD PTR [ebp-0x1c]
 8049c6a:  sub esi, DWORD PTR ds:0x80d21cc
 8049c70:  lea eax, [esi+ebx]
 8049c73:  sub ebx, edx
 8049c75:  mov ds:0x80d2184, eax
 8049c7a:  or ebx, 0x1
 8049c7d:  lea eax, [edi+edx]
 8049c80:  mov ds:0x80d1d70, eax
 8049c85:  mov DWORD PTR [eax+0x4], ebx
 8049c88:  xor eax, eax
 8049c8a:  add esp, 0x24
 8049c8d:  pop ebx
 8049c8e:  pop esi
 8049c8f:  pop edi
 8049c90:  pop ebp
 8049c91:  ret
 8049c92:  lea esi, [esi]
 8049c98:  test al, 0x1
 8049c9a:  je 8049be0
 8049ca0:  test BYTE PTR ds:0x80d1d44, 0x2
 8049ca7:  jne 8049cc0
 8049ca9:  mov eax, ds:0x80d21cc
 8049cae:  lea edx, [ecx+edx]
 8049cb1:  add eax, DWORD PTR ds:0x80d2184
 8049cb7:  cmp edx, eax
 8049cb9:  jne 8049be0
 8049cbf:  nop
 8049cc0:  add esp, 0x24
 8049cc3:  xor eax, eax
 8049cc5:  pop ebx
 8049cc6:  pop esi
 8049cc7:  pop edi
 8049cc8:  pop ebp
 8049cc9:  ret
 8049cca:  lea esi, [esi]
 8049cd0:  mov BYTE PTR [ebp-0xd], 0x0
 8049cd4:  lea eax, [ebp-0xd]
 8049cd7:  mov DWORD PTR [esp+0xc], 0x0
 8049cdf:  lea esi, [ebp-0x15]
 8049ce2:  mov DWORD PTR [esp+0x8], 0x10
 8049cea:  mov DWORD PTR [esp+0x4], eax
 8049cee:  mov DWORD PTR [esp], ecx
 8049cf1:  call 8057700
 8049cf6:  cmp eax, esi
 8049cf8:  mov edx, eax
 8049cfa:  jbe 8049d0d
 8049cfc:  lea esi, [esi]
 8049d00:  sub eax, 0x1
 8049d03:  cmp eax, esi
 8049d05:  mov BYTE PTR [eax], 0x30
 8049d08:  ja 8049d00
 8049d0a:  lea edx, [ebp-0x15]
 8049d0d:  mov eax, ds:0x80d2e6c
 8049d12:  mov ecx, 0x80afcac
 8049d17:  mov eax, DWORD PTR [eax]
 8049d19:  test eax, eax
 8049d1b:  je 8049d1f
 8049d1d:  mov ecx, eax
 8049d1f:  and ebx, 0x2
 8049d22:  mov DWORD PTR [esp+0x10], edx
 8049d26:  mov DWORD PTR [esp+0xc], 0x80afcb6
 8049d2e:  mov DWORD PTR [esp+0x8], ecx
 8049d32:  mov DWORD PTR [esp+0x4], 0x80afe50
 8049d3a:  mov DWORD PTR [esp], ebx
 8049d3d:  call 8048df0
 8049d42:  jmp 8049c06
 8049d47:  nop
 8049d48:  and ebx, 0x2
 8049d4b:  mov DWORD PTR [esp+0x8], 0x80afcb6
 8049d53:  mov DWORD PTR [esp+0x4], 0x80c6765
 8049d5b:  mov DWORD PTR [esp], ebx
 8049d5e:  call 8048df0
 8049d63:  jmp 8049c06
 8049d68:  mov eax, gs:0x0
 8049d6e:  mov edx, 0xffffffe8
 8049d74:  mov DWORD PTR [eax+edx], 0xc
 8049d7b:  mov eax, 0xffffffff
 8049d80:  jmp 8049c8a
 8049d85:  call 8055a00
 8049d8a:  lea esi, [esi]

08049d90 <malloc_consolidate>:
 8049d90:  push ebp
 8049d91:  mov ebp, esp
 8049d93:  push edi
 8049d94:  push esi
 8049d95:  push ebx
 8049d96:  sub esp, 0x48
 8049d99:  mov ebx, DWORD PTR ds:0x80d21d0
 8049d9f:  mov DWORD PTR [ebp-0x3c], eax
 8049da2:  test ebx, ebx
 8049da4:  je 8049f58
 8049daa:  mov edx, eax
 8049dac:  or DWORD PTR [eax+0x4], 0x1
 8049db0:  add eax, 0x30
 8049db3:  add edx, 0x8
 8049db6:  mov DWORD PTR [ebp-0x20], eax
 8049db9:  mov eax, DWORD PTR [ebp-0x3c]
 8049dbc:  lea ebx, [ebp-0x15]
 8049dbf:  mov DWORD PTR [ebp-0x2c], edx
 8049dc2:  mov DWORD PTR [ebp-0x40], ebx
 8049dc5:  add eax, 0x2c
 8049dc8:  mov DWORD PTR [ebp-0x28], eax
 8049dcb:  mov eax, edx
 8049dcd:  lea esi, [esi]
 8049dd0:  mov ebx, DWORD PTR [eax]
 8049dd2:  test ebx, ebx
 8049dd4:  je 8049eb8
 8049dda:  mov DWORD PTR [eax], 0x0
 8049de0:  jmp 8049e46
 8049de2:  lea esi, [esi]
 8049de8:  mov eax, DWORD PTR [ebp-0x38]
 8049deb:  mov edx, DWORD PTR [ebp-0x3c]
 8049dee:  and eax, 0xf8
 8049df1:  cmp DWORD PTR [edx+0x30], esi
 8049df4:  je 8049ea4
 8049dfa:  test BYTE PTR [esi+eax+0x4], 0x1
 8049dff:  je 8049f00
 8049e05:  and DWORD PTR [esi+0x4], 0xfe
 8049e09:  mov eax, DWORD PTR [ebp-0x20]
 8049e0c:  cmp edi, 0x1ff
 8049e12:  mov edx, DWORD PTR [eax+0x8]
 8049e15:  mov DWORD PTR [eax+0x8], ebx
 8049e18:  mov DWORD PTR [edx+0xc], ebx
 8049e1b:  jbe 8049e2b
 8049e1d:  mov DWORD PTR [ebx+0x10], 0x0
 8049e24:  mov DWORD PTR [ebx+0x14], 0x0
 8049e2b:  mov eax, edi
 8049e2d:  or eax, 0x1
 8049e30:  mov DWORD PTR [ebx+0x4], eax
 8049e33:  mov eax, DWORD PTR [ebp-0x20]
 8049e36:  mov DWORD PTR [ebx+0x8], edx
 8049e39:  mov DWORD PTR [ebx+edi], edi
 8049e3c:  mov DWORD PTR [ebx+0xc], eax
 8049e3f:  mov ebx, DWORD PTR [ebp-0x24]
 8049e42:  test ebx, ebx
 8049e44:  je 8049eb8
 8049e46:  mov eax, DWORD PTR [ebx+0x4]
 8049e49:  mov edx, DWORD PTR [ebx+0x8]
 8049e4c:  mov edi, eax
 8049e4e:  and edi, 0xfa
 8049e51:  test al, 0x1
 8049e53:  lea esi, [ebx+edi]
 8049e56:  mov DWORD PTR [ebp-0x24], edx
 8049e59:  mov edx, DWORD PTR [esi+0x4]
 8049e5c:  mov DWORD PTR [ebp-0x38], edx
 8049e5f:  jne 8049de8
 8049e61:  mov eax, DWORD PTR [ebx]
 8049e63:  sub ebx, eax
 8049e65:  add edi, eax
 8049e67:  mov edx, DWORD PTR [ebx+0x8]
 8049e6a:  mov eax, DWORD PTR [ebx+0xc]
 8049e6d:  mov ecx, DWORD PTR [edx+0xc]
 8049e70:  cmp ecx, ebx
 8049e72:  jne 8049fa5
 8049e78:  cmp ebx, DWORD PTR [eax+0x8]
 8049e7b:  jne 8049fa5
 8049e81:  cmp DWORD PTR [ebx+0x4], 0x1ff
 8049e88:  mov DWORD PTR [edx+0xc], eax
 8049e8b:  mov DWORD PTR [eax+0x8], edx
 8049e8e:  ja 8049ed0
 8049e90:  mov eax, DWORD PTR [ebp-0x38]
 8049e93:  mov ebx, ecx
 8049e95:  mov edx, DWORD PTR [ebp-0x3c]
 8049e98:  and eax, 0xf8
 8049e9b:  cmp DWORD PTR [edx+0x30], esi
 8049e9e:  jne 8049dfa
 8049ea4:  lea eax, [edi+eax]
 8049ea7:  or eax, 0x1
 8049eaa:  mov DWORD PTR [ebx+0x4], eax
 8049ead:  mov DWORD PTR [edx+0x30], ebx
 8049eb0:  mov ebx, DWORD PTR [ebp-0x24]
 8049eb3:  test ebx, ebx
 8049eb5:  jne 8049e46
 8049eb7:  nop
 8049eb8:  mov ebx, DWORD PTR [ebp-0x28]
 8049ebb:  cmp DWORD PTR [ebp-0x2c], ebx
 8049ebe:  je 8049f8e
 8049ec4:  add DWORD PTR [ebp-0x2c], 0x4
 8049ec8:  mov eax, DWORD PTR [ebp-0x2c]
 8049ecb:  jmp 8049dd0
 8049ed0:  mov eax, DWORD PTR [ebx+0x10]
 8049ed3:  test eax, eax
 8049ed5:  mov DWORD PTR [ebp-0x30], eax
 8049ed8:  je 8049e90
 8049eda:  mov ecx, DWORD PTR [edx+0x10]
 8049edd:  test ecx, ecx
 8049edf:  je 804a13c
 8049ee5:  mov eax, DWORD PTR [ebx+0x14]
 8049ee8:  mov edx, DWORD PTR [ebp-0x30]
 8049eeb:  mov DWORD PTR [edx+0x14], eax
 8049eee:  mov eax, DWORD PTR [ebx+0x14]
 8049ef1:  mov DWORD PTR [eax+0x10], edx
 8049ef4:  jmp 8049de8
 8049ef9:  lea esi, [esi]
 8049f00:  mov edx, DWORD PTR [esi+0x8]
 8049f03:  add edi, eax
 8049f05:  mov eax, DWORD PTR [esi+0xc]
 8049f08:  cmp DWORD PTR [edx+0xc], esi
 8049f0b:  jne 8049fd8
 8049f11:  cmp esi, DWORD PTR [eax+0x8]
 8049f14:  jne 8049fd8
 8049f1a:  cmp DWORD PTR [esi+0x4], 0x1ff
 8049f21:  mov DWORD PTR [edx+0xc], eax
 8049f24:  mov DWORD PTR [eax+0x8], edx
 8049f27:  jbe 8049e09
 8049f2d:  mov ecx, DWORD PTR [esi+0x10]
 8049f30:  test ecx, ecx
 8049f32:  je 8049e09
 8049f38:  mov eax, DWORD PTR [edx+0x10]
 8049f3b:  test eax, eax
 8049f3d:  je 804a15d
 8049f43:  mov eax, DWORD PTR [esi+0x14]
 8049f46:  mov DWORD PTR [ecx+0x14], eax
 8049f49:  mov eax, DWORD PTR [esi+0x14]
 8049f4c:  mov DWORD PTR [eax+0x10], ecx
 8049f4f:  jmp 8049e09
 8049f54:  lea esi, [esi]
 8049f58:  mov ecx, eax
 8049f5a:  mov ebx, eax
 8049f5c:  add ecx, 0x30
 8049f5f:  mov eax, ecx
 8049f61:  lea edx, [ebx+0x428]
 8049f67:  nop
 8049f68:  mov DWORD PTR [eax+0xc], eax
 8049f6b:  mov DWORD PTR [eax+0x8], eax
 8049f6e:  add eax, 0x8
 8049f71:  cmp eax, edx
 8049f73:  jne 8049f68
 8049f75:  cmp DWORD PTR [ebp-0x3c], 0x80d1d40
 8049f7c:  je 8049f96
 8049f7e:  mov eax, DWORD PTR [ebp-0x3c]
 8049f81:  or DWORD PTR [eax+0x4], 0x2
 8049f85:  mov edx, eax
 8049f87:  or DWORD PTR [edx+0x4], 0x1
 8049f8b:  mov DWORD PTR [edx+0x30], ecx
 8049f8e:  add esp, 0x48
 8049f91:  pop ebx
 8049f92:  pop esi
 8049f93:  pop edi
 8049f94:  pop ebp
 8049f95:  ret
 8049f96:  mov DWORD PTR ds:0x80d21d0, 0x48
 8049fa0:  mov edx, DWORD PTR [ebp-0x3c]
 8049fa3:  jmp 8049f87
 8049fa5:  mov eax, ds:0x80d0d44
 8049faa:  mov DWORD PTR [ebp-0x34], eax
 8049fad:  and eax, 0x5
 8049fb0:  cmp eax, 0x5
 8049fb3:  je 804a0f4
 8049fb9:  test BYTE PTR [ebp-0x34], 0x1
 8049fbd:  jne 804a008
 8049fbf:  test BYTE PTR [ebp-0x34], 0x2
 8049fc3:  je 8049de8
 8049fc9:  lea esi, [esi]
 8049fd0:  call 8055a00
 8049fd5:  lea esi, [esi]
 8049fd8:  mov eax, ds:0x80d0d44
 8049fdd:  mov DWORD PTR [ebp-0x1c], eax
 8049fe0:  and eax, 0x5
 8049fe3:  cmp eax, 0x5
 8049fe6:  je 804a118
 8049fec:  test BYTE PTR [ebp-0x1c], 0x1
 8049ff0:  jne 804a07e
 8049ff6:  test BYTE PTR [ebp-0x1c], 0x2
 8049ffa:  je 8049e09
 804a000:  jmp 8049fc9
 804a002:  lea esi, [esi]
 804a008:  lea eax, [ebp-0xd]
 804a00b:  mov BYTE PTR [ebp-0xd], 0x0
 804a00f:  mov DWORD PTR [esp+0xc], 0x0
 804a017:  mov DWORD PTR [esp+0x8], 0x10
 804a01f:  mov DWORD PTR [esp+0x4], eax
 804a023:  mov DWORD PTR [esp], ebx
 804a026:  call 8057700
 804a02b:  cmp eax, DWORD PTR [ebp-0x40]
 804a02e:  mov edx, eax
 804a030:  jbe 804a040
 804a032:  sub eax, 0x1
 804a035:  mov BYTE PTR [eax], 0x30
 804a038:  cmp eax, DWORD PTR [ebp-0x40]
 804a03b:  ja 804a032
 804a03d:  lea edx, [ebp-0x15]
 804a040:  mov eax, ds:0x80d2e6c
 804a045:  mov ecx, 0x80afcac
 804a04a:  mov eax, DWORD PTR [eax]
 804a04c:  test eax, eax
 804a04e:  je 804a052
 804a050:  mov ecx, eax
 804a052:  and DWORD PTR [ebp-0x34], 0x2
 804a056:  mov DWORD PTR [esp+0x10], edx
 804a05a:  mov edx, DWORD PTR [ebp-0x34]
 804a05d:  mov DWORD PTR [esp+0xc], 0x80afcd3
 804a065:  mov DWORD PTR [esp+0x8], ecx
 804a069:  mov DWORD PTR [esp+0x4], 0x80afe50
 804a071:  mov DWORD PTR [esp], edx
 804a074:  call 8048df0
 804a079:  jmp 8049de8
 804a07e:  lea eax, [ebp-0xd]
 804a081:  mov BYTE PTR [ebp-0xd], 0x0
 804a085:  mov DWORD PTR [esp+0xc], 0x0
 804a08d:  mov DWORD PTR [esp+0x8], 0x10
 804a095:  mov DWORD PTR [esp+0x4], eax
 804a099:  mov DWORD PTR [esp], esi
 804a09c:  call 8057700
 804a0a1:  cmp eax, DWORD PTR [ebp-0x40]
 804a0a4:  mov edx, eax
 804a0a6:  jbe 804a0b6
 804a0a8:  sub eax, 0x1
 804a0ab:  mov BYTE PTR [eax], 0x30
 804a0ae:  cmp eax, DWORD PTR [ebp-0x40]
 804a0b1:  ja 804a0a8
 804a0b3:  lea edx, [ebp-0x15]
 804a0b6:  mov eax, ds:0x80d2e6c
 804a0bb:  mov ecx, 0x80afcac
 804a0c0:  mov eax, DWORD PTR [eax]
 804a0c2:  test eax, eax
 804a0c4:  je 804a0c8
 804a0c6:  mov ecx, eax
 804a0c8:  and DWORD PTR [ebp-0x1c], 0x2
 804a0cc:  mov DWORD PTR [esp+0x10], edx
 804a0d0:  mov edx, DWORD PTR [ebp-0x1c]
 804a0d3:  mov DWORD PTR [esp+0xc], 0x80afcd3
 804a0db:  mov DWORD PTR [esp+0x8], ecx
 804a0df:  mov DWORD PTR [esp+0x4], 0x80afe50
 804a0e7:  mov DWORD PTR [esp], edx
 804a0ea:  call 8048df0
 804a0ef:  jmp 8049e09
 804a0f4:  and DWORD PTR [ebp-0x34], 0x2
 804a0f8:  mov edx, DWORD PTR [ebp-0x34]
 804a0fb:  mov DWORD PTR [esp+0x8], 0x80afcd3
 804a103:  mov DWORD PTR [esp+0x4], 0x80c6765
 804a10b:  mov DWORD PTR [esp], edx
 804a10e:  call 8048df0
 804a113:  jmp 8049de8
 804a118:  and DWORD PTR [ebp-0x1c], 0x2
 804a11c:  mov edx, DWORD PTR [ebp-0x1c]
 804a11f:  mov DWORD PTR [esp+0x8], 0x80afcd3
 804a127:  mov DWORD PTR [esp+0x4], 0x80c6765
 804a12f:  mov DWORD PTR [esp], edx
 804a132:  call 8048df0
 804a137:  jmp 8049e09
 804a13c:  cmp ebx, eax
 804a13e:  je 804a17b
 804a140:  mov eax, DWORD PTR [ebp-0x30]
 804a143:  mov DWORD PTR [edx+0x10], eax
 804a146:  mov eax, DWORD PTR [ebx+0x14]
 804a149:  mov DWORD PTR [edx+0x14], eax
 804a14c:  mov eax, DWORD PTR [ebx+0x10]
 804a14f:  mov DWORD PTR [eax+0x14], edx
 804a152:  mov eax, DWORD PTR [ebx+0x14]
 804a155:  mov DWORD PTR [eax+0x10], edx
 804a158:  jmp 8049de8
 804a15d:  cmp esi, ecx
 804a15f:  je 804a186
 804a161:  mov eax, DWORD PTR [esi+0x14]
 804a164:  mov DWORD PTR [edx+0x10], ecx
 804a167:  mov DWORD PTR [edx+0x14], eax
 804a16a:  mov eax, DWORD PTR [esi+0x10]
 804a16d:  mov DWORD PTR [eax+0x14], edx
 804a170:  mov eax, DWORD PTR [esi+0x14]
 804a173:  mov DWORD PTR [eax+0x10], edx
 804a176:  jmp 8049e09
 804a17b:  mov DWORD PTR [edx+0x14], edx
 804a17e:  mov DWORD PTR [edx+0x10], edx
 804a181:  jmp 8049de8
 804a186:  mov DWORD PTR [edx+0x14], edx
 804a189:  mov DWORD PTR [edx+0x10], edx
 804a18c:  jmp 8049e09
 804a191:  jmp 804a1a0
 804a193:  nop
 804a194:  nop
 804a195:  nop
 804a196:  nop
 804a197:  nop
 804a198:  nop
 804a199:  nop
 804a19a:  nop
 804a19b:  nop
 804a19c:  nop
 804a19d:  nop
 804a19e:  nop
 804a19f:  nop

0804a1a0 <mALLOPt>:
 804a1a0:  push ebp
 804a1a1:  mov ebp, esp
 804a1a3:  sub esp, 0x8
 804a1a6:  mov DWORD PTR [esp+0x4], esi
 804a1aa:  mov esi, eax
 804a1ac:  mov eax, ds:0x80d0d40
 804a1b1:  mov DWORD PTR [esp], ebx
 804a1b4:  mov ebx, edx
 804a1b6:  test eax, eax
 804a1b8:  js 804a2f8
 804a1be:  xor eax, eax
 804a1c0:  mov ecx, 0x1
 804a1c5:  cmp DWORD PTR gs:0xc, 0x0
 804a1cd:  je 804a1d0
 804a1cf:  cmpxchg DWORD PTR ds:0x80d1d40, ecx
 804a1d7:  jne 804eace
 804a1dd:  mov eax, 0x80d1d40
 804a1e2:  call 8049d90
 804a1e7:  lea eax, [esi+0x6]
 804a1ea:  cmp eax, 0x7
 804a1ed:  jbe 804a220
 804a1ef:  mov ecx, 0x1
 804a1f4:  cmp DWORD PTR gs:0xc, 0x0
 804a1fc:  je 804a1ff
 804a1fe:  sub DWORD PTR ds:0x80d1d40, 0x1
 804a206:  jne 804eade
 804a20c:  mov eax, ecx
 804a20e:  mov ebx, DWORD PTR [esp]
 804a211:  mov esi, DWORD PTR [esp+0x4]
 804a215:  mov esp, ebp
 804a217:  pop ebp
 804a218:  ret
 804a219:  lea esi, [esi]
 804a220:  jmp DWORD PTR [eax*4+0x80aff90]
 804a227:  nop
 804a228:  xor ecx, ecx
 804a22a:  cmp ebx, 0x50
 804a22d:  ja 804a1f4
 804a22f:  test ebx, ebx
 804a231:  mov eax, 0x8
 804a236:  xchg ax, ax
 804a238:  je 804a24c
 804a23a:  lea edx, [ebx+0xb]
 804a23d:  mov eax, 0x10
 804a242:  cmp edx, 0xf
 804a245:  jbe 804a24c
 804a247:  mov eax, edx
 804a249:  and eax, 0xf8
 804a24c:  mov ds:0x80d21d0, eax
 804a251:  mov ecx, 0x1
 804a256:  jmp 804a1f4
 804a258:  mov DWORD PTR ds:0x80d21d4, ebx
 804a25e:  jmp 804a1ef
 804a260:  mov DWORD PTR ds:0x80d0d44, ebx
 804a266:  mov ecx, 0x1
 804a26b:  jmp 804a1f4
 804a26d:  lea esi, [esi]
 804a270:  mov DWORD PTR ds:0x80d21b0, ebx
 804a276:  mov ecx, 0x1
 804a27b:  mov DWORD PTR ds:0x80d21b8, 0x1
 804a285:  jmp 804a1f4
 804a28a:  lea esi, [esi]
 804a290:  xor ecx, ecx
 804a292:  cmp ebx, 0x80000
 804a298:  ja 804a2a5
 804a29a:  mov DWORD PTR ds:0x80d21a8, ebx
 804a2a0:  mov ecx, 0x1
 804a2a5:  mov DWORD PTR ds:0x80d21b8, 0x1
 804a2af:  jmp 804a1f4
 804a2b4:  lea esi, [esi]
 804a2b8:  mov DWORD PTR ds:0x80d21a4, ebx
 804a2be:  mov ecx, 0x1
 804a2c3:  mov DWORD PTR ds:0x80d21b8, 0x1
 804a2cd:  jmp 804a1f4
 804a2d2:  lea esi, [esi]
 804a2d8:  mov DWORD PTR ds:0x80d21a0, ebx
 804a2de:  mov ecx, 0x1
 804a2e3:  mov DWORD PTR ds:0x80d21b8, 0x1
 804a2ed:  jmp 804a1f4
 804a2f2:  lea esi, [esi]
 804a2f8:  call 804a310
 804a2fd:  jmp 804a1be
 804a302:  lea esi, [esi]
 804a309:  lea edi, [edi]

0804a310 <ptmalloc_init>:
 804a310:  push ebp
 804a311:  mov ebp, esp
 804a313:  sub esp, 0x24
 804a316:  mov ecx, DWORD PTR ds:0x80d0d40
 804a31c:  mov DWORD PTR [ebp-0xc], ebx
 804a31f:  mov DWORD PTR [ebp-0x8], esi
 804a322:  mov DWORD PTR [ebp-0x4], edi
 804a325:  test ecx, ecx
 804a327:  js 804a338
 804a329:  mov ebx, DWORD PTR [ebp-0xc]
 804a32c:  mov esi, DWORD PTR [ebp-0x8]
 804a32f:  mov edi, DWORD PTR [ebp-0x4]
 804a332:  mov esp, ebp
 804a334:  pop ebp
 804a335:  ret
 804a336:  xchg ax, ax
 804a338:  mov DWORD PTR ds:0x80d0d40, 0x0
 804a342:  mov DWORD PTR ds:0x80d21a4, 0x20000
 804a34c:  mov DWORD PTR ds:0x80d21b0, 0x10000
 804a356:  mov DWORD PTR ds:0x80d21a8, 0x20000
 804a360:  mov DWORD PTR ds:0x80d21a0, 0x20000
 804a36a:  call 804f4a0
 804a36f:  mov edx, 0xffffffec
 804a375:  mov DWORD PTR ds:0x80d1d40, 0x0
 804a37f:  mov DWORD PTR ds:0x80d2180, 0x80d1d40
 804a389:  mov DWORD PTR ds:0x80d21d8, 0x0
 804a393:  mov DWORD PTR ds:0x80d21f0, 0x8049110
 804a39d:  mov DWORD PTR ds:0x80d21f4, 0x8049220
 804a3a7:  mov ds:0x80d21bc, eax
 804a3ac:  mov eax, gs:0x0
 804a3b2:  mov DWORD PTR ds:0x80d21f8, 0x80492b0
 804a3bc:  mov DWORD PTR [eax+edx], 0x80d1d40
 804a3c3:  mov edx, 0x80d0d24
 804a3c8:  test edx, edx
 804a3ca:  je 804a3d2
 804a3cc:  mov edx, DWORD PTR ds:0x80d0d24
 804a3d2:  mov DWORD PTR ds:0x80d21fc, edx
 804a3d8:  mov DWORD PTR ds:0x80d2200, 0x1
 804a3e2:  mov DWORD PTR [esp], 0x80d21ec
 804a3e9:  call 8050350
 804a3ee:  mov ebx, DWORD PTR ds:0x80d2218
 804a3f4:  mov eax, ds:0x80d0cd8
 804a3f9:  mov DWORD PTR [ebp-0x18], 0x0
 804a400:  test ebx, ebx
 804a402:  mov DWORD PTR [ebp-0x14], eax
 804a405:  jne 804a413
 804a407:  jmp 804a528
 804a40c:  lea esi, [esi]
 804a410:  add ebx, 0x4
 804a413:  mov eax, DWORD PTR [ebx]
 804a415:  test eax, eax
 804a417:  je 804a4e8
 804a41d:  cmp BYTE PTR [eax], 0x4d
 804a420:  jne 804a410
 804a422:  cmp BYTE PTR [eax+0x1], 0x41
 804a426:  jne 804a410
 804a428:  cmp BYTE PTR [eax+0x2], 0x4c
 804a42c:  lea esi, [esi]
 804a430:  jne 804a410
 804a432:  cmp BYTE PTR [eax+0x3], 0x4c
 804a436:  xchg ax, ax
 804a438:  jne 804a410
 804a43a:  cmp BYTE PTR [eax+0x4], 0x4f
 804a43e:  xchg ax, ax
 804a440:  jne 804a410
 804a442:  cmp BYTE PTR [eax+0x5], 0x43
 804a446:  xchg ax, ax
 804a448:  jne 804a410
 804a44a:  cmp BYTE PTR [eax+0x6], 0x5f
 804a44e:  xchg ax, ax
 804a450:  jne 804a410
 804a452:  mov edx, eax
 804a454:  add edx, 0x7
 804a457:  mov DWORD PTR [ebp-0x10], edx
 804a45a:  je 804a4e8
 804a460:  movzx edx, BYTE PTR [eax+0x7]
 804a464:  test dl, dl
 804a466:  je 804a410
 804a468:  xor ecx, ecx
 804a46a:  cmp dl, 0x3d
 804a46d:  jne 804a482
 804a46f:  nop
 804a470:  jmp 804a410
 804a472:  lea esi, [esi]
 804a478:  cmp dl, 0x3d
 804a47b:  nop
 804a47c:  lea esi, [esi]
 804a480:  je 804a492
 804a482:  add ecx, 0x1
 804a485:  movzx edx, BYTE PTR [eax+ecx+0x7]
 804a48a:  test dl, dl
 804a48c:  lea esi, [esi]
 804a490:  jne 804a478
 804a492:  mov edx, DWORD PTR [ebp-0x10]
 804a495:  cmp BYTE PTR [edx+ecx], 0x3d
 804a499:  jne 804a410
 804a49f:  cmp ecx, 0x8
 804a4a2:  je 804a5d6
 804a4a8:  ja 804a576
 804a4ae:  cmp ecx, 0x6
 804a4b1:  lea esi, [esi]
 804a4b8:  jne 804a410
 804a4be:  mov esi, DWORD PTR [ebp-0x10]
 804a4c1:  mov edi, 0x80b0393
 804a4c6:  mov ecx, 0x6
 804a4cb:  repz cmpsb
 804a4cd:  jne 804a410
 804a4d3:  mov eax, DWORD PTR [ebp-0x10]
 804a4d6:  add eax, 0x7
 804a4d9:  mov DWORD PTR [ebp-0x18], eax
 804a4dc:  jmp 804a410
 804a4e1:  lea esi, [esi]
 804a4e8:  mov eax, DWORD PTR [ebp-0x18]
 804a4eb:  test eax, eax
 804a4ed:  je 804a528
 804a4ef:  mov esi, DWORD PTR [ebp-0x18]
 804a4f2:  movzx eax, BYTE PTR [esi]
 804a4f5:  test al, al
 804a4f7:  je 804a528
 804a4f9:  movsx edx, al
 804a4fc:  mov eax, 0xfffffffb
 804a501:  sub edx, 0x30
 804a504:  call 804a1a0
 804a509:  mov eax, ds:0x80d0d44
 804a50e:  test eax, eax
 804a510:  je 804a528
 804a512:  mov eax, ds:0x80d2214
 804a517:  test eax, eax
 804a519:  je 804a542
 804a51b:  mov DWORD PTR ds:0x80d2214, 0x0
 804a525:  lea esi, [esi]
 804a528:  mov eax, ds:0x80d1d20
 804a52d:  test eax, eax
 804a52f:  je 804a533
 804a531:  call eax
 804a533:  mov DWORD PTR ds:0x80d0d40, 0x1
 804a53d:  jmp 804a329
 804a542:  mov DWORD PTR ds:0x80d2210, 0x1
 804a54c:  mov DWORD PTR ds:0x80d0d34, 0x804c8e0
 804a556:  mov DWORD PTR ds:0x80d1d24, 0x804b5d0
 804a560:  mov DWORD PTR ds:0x80d0d38, 0x804d090
 804a56a:  mov DWORD PTR ds:0x80d0d3c, 0x804df80
 804a574:  jmp 804a528
 804a576:  cmp ecx, 0x9
 804a579:  je 804a669
 804a57f:  cmp ecx, 0xf
 804a582:  jne 804a410
 804a588:  mov eax, DWORD PTR [ebp-0x14]
 804a58b:  test eax, eax
 804a58d:  lea esi, [esi]
 804a590:  jne 804a410
 804a596:  mov esi, DWORD PTR [ebp-0x10]
 804a599:  mov edi, 0x80afd0c
 804a59e:  mov ecx, 0xf
 804a5a3:  repz cmpsb
 804a5a5:  jne 804a625
 804a5a7:  mov eax, DWORD PTR [ebp-0x10]
 804a5aa:  mov DWORD PTR [esp+0x8], 0xa
 804a5b2:  mov DWORD PTR [esp+0x4], 0x0
 804a5ba:  add eax, 0x10
 804a5bd:  mov DWORD PTR [esp], eax
 804a5c0:  call 8056a00
 804a5c5:  mov edx, eax
 804a5c7:  mov eax, 0xffffffff
 804a5cc:  call 804a1a0
 804a5d1:  jmp 804a410
 804a5d6:  mov edx, DWORD PTR [ebp-0x14]
 804a5d9:  test edx, edx
 804a5db:  jne 804a410
 804a5e1:  mov esi, DWORD PTR [ebp-0x10]
 804a5e4:  mov ecx, 0x8
 804a5e9:  mov edi, 0x80afcf0
 804a5ee:  repz cmpsb
 804a5f0:  jne 804a6b8
 804a5f6:  mov eax, DWORD PTR [ebp-0x10]
 804a5f9:  mov DWORD PTR [esp+0x8], 0xa
 804a601:  mov DWORD PTR [esp+0x4], 0x0
 804a609:  add eax, 0x9
 804a60c:  mov DWORD PTR [esp], eax
 804a60f:  call 8056a00
 804a614:  mov edx, eax
 804a616:  mov eax, 0xfffffffe
 804a61b:  call 804a1a0
 804a620:  jmp 804a410
 804a625:  mov esi, DWORD PTR [ebp-0x10]
 804a628:  mov edi, 0x80afd1c
 804a62d:  mov ecx, 0xf
 804a632:  repz cmpsb
 804a634:  jne 804a410
 804a63a:  mov eax, DWORD PTR [ebp-0x10]
 804a63d:  mov DWORD PTR [esp+0x8], 0xa
 804a645:  mov DWORD PTR [esp+0x4], 0x0
 804a64d:  add eax, 0x10
 804a650:  mov DWORD PTR [esp], eax
 804a653:  call 8056a00
 804a658:  mov edx, eax
 804a65a:  mov eax, 0xfffffffd
 804a65f:  call 804a1a0
 804a664:  jmp 804a410
 804a669:  mov eax, DWORD PTR [ebp-0x14]
 804a66c:  test eax, eax
 804a66e:  jne 804a410
 804a674:  mov esi, DWORD PTR [ebp-0x10]
 804a677:  mov edi, 0x80afd02
 804a67c:  mov ecx, 0x9
 804a681:  repz cmpsb
 804a683:  jne 804a410
 804a689:  mov eax, DWORD PTR [ebp-0x10]
 804a68c:  mov DWORD PTR [esp+0x8], 0xa
 804a694:  mov DWORD PTR [esp+0x4], 0x0
 804a69c:  add eax, 0xa
 804a69f:  mov DWORD PTR [esp], eax
 804a6a2:  call 8056a00
 804a6a7:  mov edx, eax
 804a6a9:  mov eax, 0xfffffffc
 804a6ae:  call 804a1a0
 804a6b3:  jmp 804a410
 804a6b8:  mov esi, DWORD PTR [ebp-0x10]
 804a6bb:  mov edi, 0x80afcf9
 804a6c0:  mov ecx, 0x8
 804a6c5:  repz cmpsb
 804a6c7:  jne 804a410
 804a6cd:  mov eax, DWORD PTR [ebp-0x10]
 804a6d0:  mov DWORD PTR [esp+0x8], 0xa
 804a6d8:  mov DWORD PTR [esp+0x4], 0x0
 804a6e0:  add eax, 0x9
 804a6e3:  mov DWORD PTR [esp], eax
 804a6e6:  call 8056a00
 804a6eb:  mov edx, eax
 804a6ed:  mov eax, 0xfffffffa
 804a6f2:  call 804a1a0
 804a6f7:  jmp 804a410
 804a6fc:  lea esi, [esi]

0804a700 <__malloc_set_state>:
 804a700:  push ebp
 804a701:  mov ebp, esp
 804a703:  sub esp, 0xc
 804a706:  mov DWORD PTR [esp+0x8], edi
 804a70a:  mov edi, DWORD PTR [ebp+0x8]
 804a70d:  mov DWORD PTR [esp], ebx
 804a710:  mov DWORD PTR [esp+0x4], esi
 804a714:  mov DWORD PTR ds:0x80d2214, 0x1
 804a71e:  call 804a310
 804a723:  mov eax, 0xffffffff
 804a728:  cmp DWORD PTR [edi], 0x444c4541
 804a72e:  je 804a740
 804a730:  mov ebx, DWORD PTR [esp]
 804a733:  mov esi, DWORD PTR [esp+0x4]
 804a737:  mov edi, DWORD PTR [esp+0x8]
 804a73b:  mov esp, ebp
 804a73d:  pop ebp
 804a73e:  ret
 804a73f:  nop
 804a740:  test DWORD PTR [edi+0x4], 0xffffff00
 804a747:  mov eax, 0xfffffffe
 804a74c:  jg 804a730
 804a74e:  xor eax, eax
 804a750:  mov ecx, 0x1
 804a755:  cmp DWORD PTR gs:0xc, 0x0
 804a75d:  je 804a760
 804a75f:  cmpxchg DWORD PTR ds:0x80d1d40, ecx
 804a767:  jne 804eaee
 804a76d:  mov DWORD PTR ds:0x80d1d48, 0x0
 804a777:  mov esi, 0x80d1d70
 804a77c:  mov ebx, 0x1
 804a781:  mov DWORD PTR ds:0x80d1d4c, 0x0
 804a78b:  mov DWORD PTR ds:0x80d1d50, 0x0
 804a795:  mov DWORD PTR ds:0x80d1d54, 0x0
 804a79f:  mov DWORD PTR ds:0x80d1d58, 0x0
 804a7a9:  mov DWORD PTR ds:0x80d1d5c, 0x0
 804a7b3:  mov DWORD PTR ds:0x80d1d60, 0x0
 804a7bd:  mov DWORD PTR ds:0x80d1d64, 0x0
 804a7c7:  mov DWORD PTR ds:0x80d1d68, 0x0
 804a7d1:  mov DWORD PTR ds:0x80d1d6c, 0x0
 804a7db:  mov eax, DWORD PTR [edi+0x10]
 804a7de:  or DWORD PTR ds:0x80d1d44, 0x1
 804a7e5:  mov DWORD PTR ds:0x80d21d0, 0x48
 804a7ef:  mov DWORD PTR ds:0x80d2170, 0x0
 804a7f9:  mov DWORD PTR ds:0x80d2174, 0x0
 804a803:  mov DWORD PTR ds:0x80d2178, 0x0
 804a80d:  mov DWORD PTR ds:0x80d217c, 0x0
 804a817:  mov ds:0x80d1d70, eax
 804a81c:  mov DWORD PTR ds:0x80d1d74, 0x0
 804a826:  jmp 804a884
 804a828:  mov edx, DWORD PTR [ecx+0x4]
 804a82b:  mov eax, edx
 804a82d:  shr eax, 0x6
 804a830:  cmp eax, 0x26
 804a833:  ja 804a8d0
 804a839:  add eax, 0x38
 804a83c:  cmp eax, ebx
 804a83e:  je 804a8e8
 804a844:  mov DWORD PTR [esi+0x8], esi
 804a847:  mov edx, DWORD PTR ds:0x80d1d78
 804a84d:  mov DWORD PTR [esi+0xc], esi
 804a850:  mov eax, DWORD PTR [edi+ebx*8+0x10]
 804a854:  mov DWORD PTR [eax+0xc], 0x80d1d70
 804a85b:  mov eax, DWORD PTR [edi+ebx*8+0x14]
 804a85f:  mov DWORD PTR [eax+0x8], edx
 804a862:  mov eax, DWORD PTR [edi+ebx*8+0x14]
 804a866:  mov DWORD PTR [edx+0xc], eax
 804a869:  mov eax, DWORD PTR [edi+ebx*8+0x10]
 804a86d:  mov ds:0x80d1d78, eax
 804a872:  add ebx, 0x1
 804a875:  add esi, 0x8
 804a878:  cmp ebx, 0x80
 804a87e:  je 804a974
 804a884:  mov ecx, DWORD PTR [edi+ebx*8+0x10]
 804a888:  test ecx, ecx
 804a88a:  je 804a8c8
 804a88c:  cmp DWORD PTR [edi+0x4], 0x2
 804a890:  jle 804a844
 804a892:  cmp ebx, 0x3f
 804a895:  lea esi, [esi]
 804a898:  ja 804a828
 804a89a:  mov DWORD PTR [esi+0x8], ecx
 804a89d:  mov eax, DWORD PTR [edi+ebx*8+0x14]
 804a8a1:  mov edx, 0x1
 804a8a6:  mov DWORD PTR [esi+0xc], eax
 804a8a9:  mov DWORD PTR [ecx+0xc], esi
 804a8ac:  mov eax, DWORD PTR [esi+0xc]
 804a8af:  mov ecx, ebx
 804a8b1:  and ecx, 0x1f
 804a8b4:  shl edx, cl
 804a8b6:  mov DWORD PTR [eax+0x8], esi
 804a8b9:  mov eax, ebx
 804a8bb:  shr eax, 0x5
 804a8be:  or DWORD PTR [eax*4+0x80d2170], edx
 804a8c5:  jmp 804a872
 804a8c7:  nop
 804a8c8:  mov DWORD PTR [esi+0xc], esi
 804a8cb:  mov DWORD PTR [esi+0x8], esi
 804a8ce:  jmp 804a872
 804a8d0:  mov eax, edx
 804a8d2:  shr eax, 0x9
 804a8d5:  cmp eax, 0x14
 804a8d8:  ja 804a908
 804a8da:  add eax, 0x5b
 804a8dd:  jmp 804a83c
 804a8e2:  lea esi, [esi]
 804a8e8:  mov eax, DWORD PTR [edi+ebx*8+0x14]
 804a8ec:  mov edx, DWORD PTR [eax+0x4]
 804a8ef:  mov eax, edx
 804a8f1:  shr eax, 0x6
 804a8f4:  cmp eax, 0x26
 804a8f7:  ja 804a920
 804a8f9:  add eax, 0x38
 804a8fc:  cmp eax, ebx
 804a8fe:  jne 804a844
 804a904:  jmp 804a89a
 804a906:  xchg ax, ax
 804a908:  mov eax, edx
 804a90a:  shr eax, 0xc
 804a90d:  cmp eax, 0xa
 804a910:  ja 804a930
 804a912:  add eax, 0x6e
 804a915:  lea esi, [esi]
 804a918:  jmp 804a83c
 804a91d:  lea esi, [esi]
 804a920:  mov eax, edx
 804a922:  shr eax, 0x9
 804a925:  cmp eax, 0x14
 804a928:  ja 804a948
 804a92a:  add eax, 0x5b
 804a92d:  jmp 804a8fc
 804a92f:  nop
 804a930:  mov eax, edx
 804a932:  shr eax, 0xf
 804a935:  cmp eax, 0x4
 804a938:  ja 804a95b
 804a93a:  add eax, 0x77
 804a93d:  jmp 804a83c
 804a942:  lea esi, [esi]
 804a948:  mov eax, edx
 804a94a:  shr eax, 0xc
 804a94d:  cmp eax, 0xa
 804a950:  ja 804aaa3
 804a956:  add eax, 0x6e
 804a959:  jmp 804a8fc
 804a95b:  shr edx, 0x12
 804a95e:  mov eax, 0x7e
 804a963:  cmp edx, 0x2
 804a966:  ja 804a83c
 804a96c:  lea eax, [edx+0x7c]
 804a96f:  jmp 804a83c
 804a974:  mov ebx, DWORD PTR [edi+0x4]
 804a977:  cmp ebx, 0x2
 804a97a:  jg 804a9b2
 804a97c:  mov edx, DWORD PTR ds:0x80d1d78
 804a982:  mov ecx, 0x80d1d70
 804a987:  cmp ecx, edx
 804a989:  je 804a9b2
 804a98b:  nop
 804a98c:  lea esi, [esi]
 804a990:  mov eax, DWORD PTR [edx+0x4]
 804a993:  and eax, 0xf8
 804a996:  cmp eax, 0x1ff
 804a99b:  jbe 804a9ab
 804a99d:  mov DWORD PTR [edx+0x10], 0x0
 804a9a4:  mov DWORD PTR [edx+0x14], 0x0
 804a9ab:  mov edx, DWORD PTR [edx+0x8]
 804a9ae:  cmp ecx, edx
 804a9b0:  jne 804a990
 804a9b2:  mov eax, DWORD PTR [edi+0x410]
 804a9b8:  test ebx, ebx
 804a9ba:  mov ds:0x80d21cc, eax
 804a9bf:  mov eax, DWORD PTR [edi+0x414]
 804a9c5:  mov ds:0x80d2184, eax
 804a9ca:  mov eax, DWORD PTR [edi+0x418]
 804a9d0:  mov ds:0x80d21a0, eax
 804a9d5:  mov eax, DWORD PTR [edi+0x41c]
 804a9db:  mov ds:0x80d21a4, eax
 804a9e0:  mov eax, DWORD PTR [edi+0x420]
 804a9e6:  mov ds:0x80d21b0, eax
 804a9eb:  mov eax, DWORD PTR [edi+0x424]
 804a9f1:  mov ds:0x80d21a8, eax
 804a9f6:  mov eax, DWORD PTR [edi+0x428]
 804a9fc:  mov ds:0x80d0d44, eax
 804aa01:  mov eax, DWORD PTR [edi+0x42c]
 804aa07:  mov ds:0x80d2188, eax
 804aa0c:  mov eax, DWORD PTR [edi+0x434]
 804aa12:  mov ds:0x80d21ac, eax
 804aa17:  mov eax, DWORD PTR [edi+0x438]
 804aa1d:  mov ds:0x80d21b4, eax
 804aa22:  mov eax, DWORD PTR [edi+0x43c]
 804aa28:  mov ds:0x80d21c0, eax
 804aa2d:  mov eax, DWORD PTR [edi+0x440]
 804aa33:  mov ds:0x80d21c4, eax
 804aa38:  jle 804aa84
 804aa3a:  mov eax, DWORD PTR [edi+0x444]
 804aa40:  test eax, eax
 804aa42:  jne 804aace
 804aa48:  mov ebx, DWORD PTR ds:0x80d2210
 804aa4e:  test ebx, ebx
 804aa50:  je 804aa84
 804aa52:  mov DWORD PTR ds:0x80d0d34, 0x0
 804aa5c:  mov DWORD PTR ds:0x80d1d24, 0x0
 804aa66:  mov DWORD PTR ds:0x80d0d38, 0x0
 804aa70:  mov DWORD PTR ds:0x80d0d3c, 0x0
 804aa7a:  mov DWORD PTR ds:0x80d2210, 0x0
 804aa84:  cmp DWORD PTR gs:0xc, 0x0
 804aa8c:  je 804aa8f
 804aa8e:  sub DWORD PTR ds:0x80d1d40, 0x1
 804aa96:  jne 804eafe
 804aa9c:  xor eax, eax
 804aa9e:  jmp 804a730
 804aaa3:  mov eax, edx
 804aaa5:  shr eax, 0xf
 804aaa8:  cmp eax, 0x4
 804aaab:  ja 804aab5
 804aaad:  add eax, 0x77
 804aab0:  jmp 804a8fc
 804aab5:  shr edx, 0x12
 804aab8:  mov eax, 0x7e
 804aabd:  cmp edx, 0x2
 804aac0:  ja 804a8fc
 804aac6:  lea eax, [edx+0x7c]
 804aac9:  jmp 804a8fc
 804aace:  mov edi, DWORD PTR ds:0x80d2210
 804aad4:  test edi, edi
 804aad6:  jne 804aa84
 804aad8:  mov esi, DWORD PTR ds:0x80d2214
 804aade:  test esi, esi
 804aae0:  jne 804aa84
 804aae2:  mov DWORD PTR ds:0x80d2210, 0x1
 804aaec:  mov DWORD PTR ds:0x80d0d34, 0x804c8e0
 804aaf6:  mov DWORD PTR ds:0x80d1d24, 0x804b5d0
 804ab00:  mov DWORD PTR ds:0x80d0d38, 0x804d090
 804ab0a:  mov DWORD PTR ds:0x80d0d3c, 0x804df80
 804ab14:  jmp 804aa84
 804ab19:  lea esi, [esi]

0804ab20 <__libc_mallinfo>:
 804ab20:  push ebp
 804ab21:  mov ebp, esp
 804ab23:  push edi
 804ab24:  push esi
 804ab25:  push ebx
 804ab26:  sub esp, 0x10
 804ab29:  mov eax, ds:0x80d0d40
 804ab2e:  test eax, eax
 804ab30:  js 804ac4c
 804ab36:  xor eax, eax
 804ab38:  mov ecx, 0x1
 804ab3d:  cmp DWORD PTR gs:0xc, 0x0
 804ab45:  je 804ab48
 804ab47:  cmpxchg DWORD PTR ds:0x80d1d40, ecx
 804ab4f:  jne 804eb0e
 804ab55:  mov eax, ds:0x80d1d70
 804ab5a:  test eax, eax
 804ab5c:  je 804ac56
 804ab62:  mov eax, DWORD PTR [eax+0x4]
 804ab65:  xor ecx, ecx
 804ab67:  xor ebx, ebx
 804ab69:  mov DWORD PTR [ebp-0x1c], 0x0
 804ab70:  mov DWORD PTR [ebp-0x18], eax
 804ab73:  mov edx, DWORD PTR [ecx*4+0x80d1d48]
 804ab7a:  test edx, edx
 804ab7c:  je 804ab93
 804ab7e:  xchg ax, ax
 804ab80:  mov eax, DWORD PTR [edx+0x4]
 804ab83:  add ebx, 0x1
 804ab86:  mov edx, DWORD PTR [edx+0x8]
 804ab89:  and eax, 0xf8
 804ab8c:  add DWORD PTR [ebp-0x1c], eax
 804ab8f:  test edx, edx
 804ab91:  jne 804ab80
 804ab93:  add ecx, 0x1
 804ab96:  cmp ecx, 0xa
 804ab99:  jne 804ab73
 804ab9b:  mov eax, DWORD PTR [ebp-0x18]
 804ab9e:  mov ecx, 0x80d1d70
 804aba3:  mov edi, 0x1
 804aba8:  mov esi, DWORD PTR [ebp-0x1c]
 804abab:  and eax, 0xf8
 804abae:  add esi, eax
 804abb0:  mov edx, DWORD PTR [ecx+0xc]
 804abb3:  cmp edx, ecx
 804abb5:  je 804abca
 804abb7:  nop
 804abb8:  mov eax, DWORD PTR [edx+0x4]
 804abbb:  add edi, 0x1
 804abbe:  mov edx, DWORD PTR [edx+0xc]
 804abc1:  and eax, 0xf8
 804abc4:  add esi, eax
 804abc6:  cmp edx, ecx
 804abc8:  jne 804abb8
 804abca:  add ecx, 0x8
 804abcd:  cmp ecx, 0x80d2168
 804abd3:  jne 804abb0
 804abd5:  mov eax, ds:0x80d21c0
 804abda:  mov edx, DWORD PTR ds:0x80d2184
 804abe0:  mov ecx, DWORD PTR ds:0x80d21ac
 804abe6:  mov DWORD PTR [ebp-0x14], eax
 804abe9:  mov eax, ds:0x80d21c8
 804abee:  mov DWORD PTR [ebp-0x10], eax
 804abf1:  cmp DWORD PTR gs:0xc, 0x0
 804abf9:  je 804abfc
 804abfb:  sub DWORD PTR ds:0x80d1d40, 0x1
 804ac03:  jne 804eb1e
 804ac09:  mov eax, DWORD PTR [ebp+0x8]
 804ac0c:  and DWORD PTR [ebp-0x18], 0xf8
 804ac10:  mov DWORD PTR [eax+0x8], ebx
 804ac13:  mov ebx, DWORD PTR [ebp+0x8]
 804ac16:  mov DWORD PTR [eax+0x4], edi
 804ac19:  mov DWORD PTR [eax+0x20], esi
 804ac1c:  mov eax, edx
 804ac1e:  sub eax, esi
 804ac20:  mov DWORD PTR [ebx+0x1c], eax
 804ac23:  mov eax, DWORD PTR [ebp-0x14]
 804ac26:  mov DWORD PTR [ebx], edx
 804ac28:  mov edx, DWORD PTR [ebp-0x1c]
 804ac2b:  mov DWORD PTR [ebx+0xc], ecx
 804ac2e:  mov DWORD PTR [ebx+0x10], eax
 804ac31:  mov eax, DWORD PTR [ebp-0x18]
 804ac34:  mov DWORD PTR [ebx+0x18], edx
 804ac37:  mov edx, DWORD PTR [ebp-0x10]
 804ac3a:  mov DWORD PTR [ebx+0x24], eax
 804ac3d:  mov eax, ebx
 804ac3f:  mov DWORD PTR [ebx+0x14], edx
 804ac42:  add esp, 0x10
 804ac45:  pop ebx
 804ac46:  pop esi
 804ac47:  pop edi
 804ac48:  pop ebp
 804ac49:  ret 0x4
 804ac4c:  call 804a310
 804ac51:  jmp 804ab36
 804ac56:  mov eax, 0x80d1d40
 804ac5b:  call 8049d90
 804ac60:  mov eax, ds:0x80d1d70
 804ac65:  jmp 804ab62
 804ac6a:  lea esi, [esi]

0804ac70 <_int_free>:
 804ac70:  push ebp
 804ac71:  mov ebp, esp
 804ac73:  push edi
 804ac74:  push esi
 804ac75:  push ebx
 804ac76:  sub esp, 0x48
 804ac79:  mov edx, DWORD PTR [ebp+0xc]
 804ac7c:  mov eax, DWORD PTR [ebp+0x8]
 804ac7f:  mov ebx, edx
 804ac81:  sub ebx, 0x8
 804ac84:  mov ecx, DWORD PTR [ebx+0x4]
 804ac87:  mov DWORD PTR [ebp-0x38], eax
 804ac8a:  mov DWORD PTR [ebp-0x3c], edx
 804ac8d:  mov esi, ecx
 804ac8f:  and esi, 0xf8
 804ac92:  mov eax, esi
 804ac94:  neg eax
 804ac96:  cmp ebx, eax
 804ac98:  ja 804b210
 804ac9e:  test bl, 0x7
 804aca1:  jne 804b210
 804aca7:  cmp esi, 0xf
 804acaa:  mov edx, 0x80afd44
 804acaf:  jbe 804b180
 804acb5:  cmp esi, DWORD PTR ds:0x80d21d0
 804acbb:  jbe 804af28
 804acc1:  test cl, 0x2
 804acc4:  jne 804aee8
 804acca:  mov eax, DWORD PTR [ebp-0x38]
 804accd:  mov edx, 0x80aff08
 804acd2:  mov edi, DWORD PTR [eax+0x30]
 804acd5:  cmp edi, ebx
 804acd7:  je 804b180
 804acdd:  test BYTE PTR [eax+0x4], 0x2
 804ace1:  lea edx, [ebx+esi]
 804ace4:  mov DWORD PTR [ebp-0x30], edx
 804ace7:  je 804b293
 804aced:  mov edx, DWORD PTR [ebp-0x30]
 804acf0:  mov eax, DWORD PTR [edx+0x4]
 804acf3:  mov edx, 0x80aff48
 804acf8:  test al, 0x1
 804acfa:  je 804b180
 804ad00:  cmp eax, 0x8
 804ad03:  jbe 804b174
 804ad09:  mov edi, eax
 804ad0b:  mov eax, DWORD PTR [ebp-0x38]
 804ad0e:  and edi, 0xf8
 804ad11:  cmp edi, DWORD PTR [eax+0x444]
 804ad17:  jae 804b174
 804ad1d:  mov edx, DWORD PTR ds:0x80d21d4
 804ad23:  test edx, edx
 804ad25:  jne 804b26f
 804ad2b:  and ecx, 0x1
 804ad2e:  je 804b080
 804ad34:  mov ecx, DWORD PTR [ebp-0x38]
 804ad37:  mov eax, DWORD PTR [ebp-0x30]
 804ad3a:  cmp DWORD PTR [ecx+0x30], eax
 804ad3d:  je 804b1f8
 804ad43:  test BYTE PTR [eax+edi+0x4], 0x1
 804ad48:  je 804af88
 804ad4e:  mov ecx, DWORD PTR [ebp-0x30]
 804ad51:  and DWORD PTR [ecx+0x4], 0xfe
 804ad55:  mov eax, DWORD PTR [ebp-0x38]
 804ad58:  add eax, 0x30
 804ad5b:  cmp esi, 0x1ff
 804ad61:  mov edx, DWORD PTR [eax+0x8]
 804ad64:  mov DWORD PTR [ebx+0xc], eax
 804ad67:  mov DWORD PTR [ebx+0x8], edx
 804ad6a:  jbe 804ad7a
 804ad6c:  mov DWORD PTR [ebx+0x10], 0x0
 804ad73:  mov DWORD PTR [ebx+0x14], 0x0
 804ad7a:  mov DWORD PTR [eax+0x8], ebx
 804ad7d:  mov eax, esi
 804ad7f:  or eax, 0x1
 804ad82:  mov DWORD PTR [edx+0xc], ebx
 804ad85:  mov DWORD PTR [ebx+0x4], eax
 804ad88:  mov DWORD PTR [ebx+esi], esi
 804ad8b:  cmp esi, 0xffff
 804ad91:  jbe 804af7c
 804ad97:  mov edx, DWORD PTR [ebp-0x38]
 804ad9a:  test BYTE PTR [edx+0x4], 0x1
 804ad9e:  je 804b168
 804ada4:  cmp DWORD PTR [ebp-0x38], 0x80d1d40
 804adab:  je 804b0c0
 804adb1:  mov ecx, DWORD PTR [ebp-0x38]
 804adb4:  mov eax, ds:0x80d21a4
 804adb9:  mov edi, DWORD PTR [ecx+0x30]
 804adbc:  mov ecx, DWORD PTR ds:0x80d21bc
 804adc2:  mov DWORD PTR [ebp-0x14], eax
 804adc5:  and edi, 0xfff00000
 804adcb:  mov edx, DWORD PTR [edi]
 804adcd:  lea eax, [edi+0x10]
 804add0:  mov DWORD PTR [ebp-0x1c], ecx
 804add3:  mov DWORD PTR [ebp-0x20], eax
 804add6:  mov ebx, DWORD PTR [edx+0x30]
 804add9:  mov DWORD PTR [ebp-0x18], edx
 804addc:  cmp eax, ebx
 804adde:  jne 804afd5
 804ade4:  mov edx, DWORD PTR [ebp-0x14]
 804ade7:  lea edx, [edx+ecx+0x10]
 804adeb:  mov ecx, edi
 804aded:  mov DWORD PTR [ebp-0x10], edx
 804adf0:  jmp 804ae18
 804adf2:  lea esi, [esi]
 804adf8:  or DWORD PTR [ebp-0x24], 0x1
 804adfc:  mov eax, DWORD PTR [ebp-0x24]
 804adff:  mov ecx, DWORD PTR [ebp-0x18]
 804ae02:  mov DWORD PTR [ebx+0x4], eax
 804ae05:  lea eax, [edi+0x10]
 804ae08:  cmp ebx, eax
 804ae0a:  mov DWORD PTR [ecx+0x30], ebx
 804ae0d:  jne 804afd5
 804ae13:  mov ecx, edi
 804ae15:  mov DWORD PTR [ebp-0x20], ebx
 804ae18:  mov edi, DWORD PTR [edi+0x4]
 804ae1b:  mov esi, DWORD PTR [edi+0x8]
 804ae1e:  lea ebx, [edi+esi-0x8]
 804ae22:  sub ebx, DWORD PTR [ebx]
 804ae24:  mov edx, DWORD PTR [ebx+0x4]
 804ae27:  mov eax, edx
 804ae29:  and eax, 0xf8
 804ae2c:  add eax, 0x8
 804ae2f:  and edx, 0x1
 804ae32:  mov DWORD PTR [ebp-0x24], eax
 804ae35:  jne 804ae3c
 804ae37:  add eax, DWORD PTR [ebx]
 804ae39:  mov DWORD PTR [ebp-0x24], eax
 804ae3c:  mov eax, 0x100000
 804ae41:  sub eax, esi
 804ae43:  add eax, DWORD PTR [ebp-0x24]
 804ae46:  cmp eax, DWORD PTR [ebp-0x10]
 804ae49:  jb 804afd0
 804ae4f:  mov edx, DWORD PTR [ebp-0x18]
 804ae52:  mov eax, DWORD PTR [ecx+0x8]
 804ae55:  sub DWORD PTR [edx+0x444], eax
 804ae5b:  mov eax, DWORD PTR [ecx+0x8]
 804ae5e:  sub DWORD PTR ds:0x80d21dc, eax
 804ae64:  lea eax, [ecx+0x100000]
 804ae6a:  cmp DWORD PTR ds:0x80d220c, eax
 804ae70:  je 804afc0
 804ae76:  mov DWORD PTR [esp+0x4], 0x100000
 804ae7e:  mov DWORD PTR [esp], ecx
 804ae81:  call 8050050
 804ae86:  test BYTE PTR [ebx+0x4], 0x1
 804ae8a:  jne 804adf8
 804ae90:  sub ebx, DWORD PTR [ebx]
 804ae92:  mov edx, DWORD PTR [ebx+0x8]
 804ae95:  mov eax, DWORD PTR [ebx+0xc]
 804ae98:  cmp ebx, DWORD PTR [edx+0xc]
 804ae9b:  jne 804b242
 804aea1:  cmp ebx, DWORD PTR [eax+0x8]
 804aea4:  jne 804b242
 804aeaa:  cmp DWORD PTR [ebx+0x4], 0x1ff
 804aeb1:  mov DWORD PTR [edx+0xc], eax
 804aeb4:  mov DWORD PTR [eax+0x8], edx
 804aeb7:  jbe 804adf8
 804aebd:  mov ecx, DWORD PTR [ebx+0x10]
 804aec0:  test ecx, ecx
 804aec2:  je 804adf8
 804aec8:  mov eax, DWORD PTR [edx+0x10]
 804aecb:  test eax, eax
 804aecd:  je 804b307
 804aed3:  mov eax, DWORD PTR [ebx+0x14]
 804aed6:  mov DWORD PTR [ecx+0x14], eax
 804aed9:  mov eax, DWORD PTR [ebx+0x14]
 804aedc:  mov DWORD PTR [eax+0x10], ecx
 804aedf:  jmp 804adf8
 804aee4:  lea esi, [esi]
 804aee8:  mov edx, DWORD PTR [ebp-0x3c]
 804aeeb:  mov ecx, ebx
 804aeed:  mov eax, DWORD PTR [edx-0x8]
 804aef0:  sub ecx, eax
 804aef2:  lea ebx, [esi+eax]
 804aef5:  mov eax, ds:0x80d21bc
 804aefa:  mov edx, ecx
 804aefc:  or edx, ebx
 804aefe:  sub eax, 0x1
 804af01:  test edx, eax
 804af03:  jne 804b262
 804af09:  sub DWORD PTR ds:0x80d21c0, ebx
 804af0f:  sub DWORD PTR ds:0x80d21ac, 0x1
 804af16:  mov DWORD PTR [ebp+0xc], ebx
 804af19:  mov DWORD PTR [ebp+0x8], ecx
 804af1c:  add esp, 0x48
 804af1f:  pop ebx
 804af20:  pop esi
 804af21:  pop edi
 804af22:  pop ebp
 804af23:  jmp 8050050
 804af28:  mov eax, DWORD PTR [ebx+esi+0x4]
 804af2c:  cmp eax, 0x8
 804af2f:  jbe 804b258
 804af35:  mov ecx, DWORD PTR [ebp-0x38]
 804af38:  and eax, 0xf8
 804af3b:  cmp eax, DWORD PTR [ecx+0x444]
 804af41:  jae 804b258
 804af47:  mov eax, esi
 804af49:  mov edx, 0x80afee4
 804af4e:  shr eax, 0x3
 804af51:  lea edi, [eax-0x2]
 804af54:  mov eax, DWORD PTR [ecx+edi*4+0x8]
 804af58:  and DWORD PTR [ecx+0x4], 0xfe
 804af5c:  cmp eax, ebx
 804af5e:  je 804b180
 804af64:  mov edx, DWORD PTR ds:0x80d21d4
 804af6a:  test edx, edx
 804af6c:  jne 804b2b0
 804af72:  mov ecx, DWORD PTR [ebp-0x38]
 804af75:  mov DWORD PTR [ebx+0x8], eax
 804af78:  mov DWORD PTR [ecx+edi*4+0x8], ebx
 804af7c:  add esp, 0x48
 804af7f:  pop ebx
 804af80:  pop esi
 804af81:  pop edi
 804af82:  pop ebp
 804af83:  ret
 804af84:  lea esi, [esi]
 804af88:  mov edx, DWORD PTR [eax+0x8]
 804af8b:  mov ecx, eax
 804af8d:  mov eax, DWORD PTR [eax+0xc]
 804af90:  cmp DWORD PTR [edx+0xc], ecx
 804af93:  jne 804b2ee
 804af99:  cmp ecx, DWORD PTR [eax+0x8]
 804af9c:  jne 804b2ee
 804afa2:  mov DWORD PTR [edx+0xc], eax
 804afa5:  mov DWORD PTR [eax+0x8], edx
 804afa8:  mov eax, DWORD PTR [ebp-0x30]
 804afab:  cmp DWORD PTR [eax+0x4], 0x1ff
 804afb2:  ja 804b1c8
 804afb8:  add esi, edi
 804afba:  jmp 804ad55
 804afbf:  nop
 804afc0:  mov DWORD PTR ds:0x80d220c, 0x0
 804afca:  jmp 804ae76
 804afcf:  nop
 804afd0:  mov ebx, DWORD PTR [ebp-0x20]
 804afd3:  mov edi, ecx
 804afd5:  mov edx, DWORD PTR [ebx+0x4]
 804afd8:  mov eax, DWORD PTR [ebp-0x1c]
 804afdb:  sub eax, DWORD PTR [ebp-0x14]
 804afde:  and edx, 0xf8
 804afe1:  lea eax, [eax+edx-0x11]
 804afe5:  mov DWORD PTR [ebp-0x28], edx
 804afe8:  xor edx, edx
 804afea:  div DWORD PTR [ebp-0x1c]
 804afed:  lea esi, [eax-0x1]
 804aff0:  imul esi, DWORD PTR [ebp-0x1c]
 804aff4:  cmp esi, DWORD PTR [ebp-0x1c]
 804aff7:  jl 804af7c
 804aff9:  mov ecx, DWORD PTR [edi+0x8]
 804affc:  sub ecx, esi
 804affe:  cmp ecx, 0xf
 804b001:  mov DWORD PTR [ebp-0x2c], ecx
 804b004:  jle 804af7c
 804b00a:  mov eax, ds:0x80d0cd8
 804b00f:  test eax, eax
 804b011:  je 804b220
 804b017:  lea eax, [edi+ecx]
 804b01a:  mov DWORD PTR [esp+0x14], 0x0
 804b022:  mov DWORD PTR [esp+0x10], 0xffffffff
 804b02a:  mov DWORD PTR [esp+0xc], 0x32
 804b032:  mov DWORD PTR [esp+0x8], 0x0
 804b03a:  mov DWORD PTR [esp+0x4], esi
 804b03e:  mov DWORD PTR [esp], eax
 804b041:  call 8050000
 804b046:  add eax, 0x1
 804b049:  je 804af7c
 804b04f:  mov eax, DWORD PTR [ebp-0x2c]
 804b052:  mov DWORD PTR [edi+0xc], eax
 804b055:  mov ecx, eax
 804b057:  mov eax, DWORD PTR [ebp-0x18]
 804b05a:  mov DWORD PTR [edi+0x8], ecx
 804b05d:  sub DWORD PTR ds:0x80d21dc, esi
 804b063:  sub DWORD PTR [eax+0x444], esi
 804b069:  mov eax, DWORD PTR [ebp-0x28]
 804b06c:  sub eax, esi
 804b06e:  or eax, 0x1
 804b071:  mov DWORD PTR [ebx+0x4], eax
 804b074:  jmp 804af7c
 804b079:  lea esi, [esi]
 804b080:  mov ecx, DWORD PTR [ebp-0x3c]
 804b083:  mov eax, DWORD PTR [ecx-0x8]
 804b086:  sub ebx, eax
 804b088:  add esi, eax
 804b08a:  mov edx, DWORD PTR [ebx+0x8]
 804b08d:  mov eax, DWORD PTR [ebx+0xc]
 804b090:  mov ecx, DWORD PTR [edx+0xc]
 804b093:  cmp ecx, ebx
 804b095:  jne 804b2d8
 804b09b:  cmp ebx, DWORD PTR [eax+0x8]
 804b09e:  jne 804b2d8
 804b0a4:  cmp DWORD PTR [ebx+0x4], 0x1ff
 804b0ab:  mov DWORD PTR [edx+0xc], eax
 804b0ae:  mov DWORD PTR [eax+0x8], edx
 804b0b1:  ja 804b198
 804b0b7:  mov ebx, ecx
 804b0b9:  jmp 804ad34
 804b0be:  xchg ax, ax
 804b0c0:  mov eax, ds:0x80d1d70
 804b0c5:  mov ebx, DWORD PTR [eax+0x4]
 804b0c8:  and ebx, 0xf8
 804b0cb:  cmp ebx, DWORD PTR ds:0x80d21a0
 804b0d1:  jb 804af7c
 804b0d7:  mov edi, DWORD PTR ds:0x80d21bc
 804b0dd:  xor edx, edx
 804b0df:  lea eax, [edi-0x11]
 804b0e2:  sub eax, DWORD PTR ds:0x80d21a4
 804b0e8:  add eax, ebx
 804b0ea:  div edi
 804b0ec:  lea esi, [eax-0x1]
 804b0ef:  imul esi, edi
 804b0f2:  test esi, esi
 804b0f4:  jle 804af7c
 804b0fa:  mov DWORD PTR [esp], 0x0
 804b101:  call DWORD PTR ds:0x80d0d30
 804b107:  mov edi, eax
 804b109:  mov eax, ds:0x80d1d70
 804b10e:  add eax, ebx
 804b110:  cmp edi, eax
 804b112:  jne 804af7c
 804b118:  neg esi
 804b11a:  mov DWORD PTR [esp], esi
 804b11d:  call DWORD PTR ds:0x80d0d30
 804b123:  mov eax, ds:0x80d1d28
 804b128:  test eax, eax
 804b12a:  je 804b12e
 804b12c:  call eax
 804b12e:  mov DWORD PTR [esp], 0x0
 804b135:  call DWORD PTR ds:0x80d0d30
 804b13b:  test eax, eax
 804b13d:  lea esi, [esi]
 804b140:  je 804af7c
 804b146:  sub edi, eax
 804b148:  je 804af7c
 804b14e:  mov eax, ds:0x80d1d70
 804b153:  sub ebx, edi
 804b155:  or ebx, 0x1
 804b158:  sub DWORD PTR ds:0x80d2184, edi
 804b15e:  mov DWORD PTR [eax+0x4], ebx
 804b161:  jmp 804af7c
 804b166:  xchg ax, ax
 804b168:  mov eax, edx
 804b16a:  call 8049d90
 804b16f:  jmp 804ada4
 804b174:  mov edx, 0x80afec0
 804b179:  lea esi, [esi]
 804b180:  mov ecx, DWORD PTR [ebp-0x3c]
 804b183:  mov eax, ds:0x80d0d44
 804b188:  add esp, 0x48
 804b18b:  pop ebx
 804b18c:  pop esi
 804b18d:  pop edi
 804b18e:  pop ebp
 804b18f:  jmp 8049610
 804b194:  lea esi, [esi]
 804b198:  mov eax, DWORD PTR [ebx+0x10]
 804b19b:  test eax, eax
 804b19d:  mov DWORD PTR [ebp-0x34], eax
 804b1a0:  je 804b0b7
 804b1a6:  mov ecx, DWORD PTR [edx+0x10]
 804b1a9:  test ecx, ecx
 804b1ab:  je 804b325
 804b1b1:  mov eax, DWORD PTR [ebx+0x14]
 804b1b4:  mov edx, DWORD PTR [ebp-0x34]
 804b1b7:  mov DWORD PTR [edx+0x14], eax
 804b1ba:  mov eax, DWORD PTR [ebx+0x14]
 804b1bd:  mov DWORD PTR [eax+0x10], edx
 804b1c0:  jmp 804ad34
 804b1c5:  lea esi, [esi]
 804b1c8:  mov ecx, DWORD PTR [eax+0x10]
 804b1cb:  test ecx, ecx
 804b1cd:  je 804afb8
 804b1d3:  cmp DWORD PTR [edx+0x10], 0x0
 804b1d7:  je 804b346
 804b1dd:  mov edx, DWORD PTR [ebp-0x30]
 804b1e0:  add esi, edi
 804b1e2:  mov eax, DWORD PTR [edx+0x14]
 804b1e5:  mov DWORD PTR [ecx+0x14], eax
 804b1e8:  mov eax, DWORD PTR [edx+0x14]
 804b1eb:  mov DWORD PTR [eax+0x10], ecx
 804b1ee:  jmp 804ad55
 804b1f3:  nop
 804b1f4:  lea esi, [esi]
 804b1f8:  add esi, edi
 804b1fa:  mov eax, esi
 804b1fc:  or eax, 0x1
 804b1ff:  mov DWORD PTR [ebx+0x4], eax
 804b202:  mov eax, DWORD PTR [ebp-0x38]
 804b205:  mov DWORD PTR [eax+0x30], ebx
 804b208:  jmp 804ad8b
 804b20d:  lea esi, [esi]
 804b210:  mov edx, 0x80afd2c
 804b215:  jmp 804b180
 804b21a:  lea esi, [esi]
 804b220:  mov DWORD PTR [esp+0x8], 0x4
 804b228:  mov DWORD PTR [esp+0x4], esi
 804b22c:  mov edx, DWORD PTR [ebp-0x2c]
 804b22f:  lea eax, [edi+edx]
 804b232:  mov DWORD PTR [esp], eax
 804b235:  call 80500a0
 804b23a:  mov ecx, DWORD PTR [ebp-0x2c]
 804b23d:  jmp 804b057
 804b242:  mov eax, ds:0x80d0d44
 804b247:  mov ecx, ebx
 804b249:  mov edx, 0x80afcd3
 804b24e:  call 8049610
 804b253:  jmp 804adf8
 804b258:  mov edx, 0x80afe9c
 804b25d:  jmp 804b180
 804b262:  mov ecx, DWORD PTR [ebp-0x3c]
 804b265:  mov edx, 0x80afe7c
 804b26a:  jmp 804b183
 804b26f:  lea eax, [esi-0x4]
 804b272:  and edx, 0xff
 804b278:  mov DWORD PTR [esp+0x8], eax
 804b27c:  mov DWORD PTR [esp+0x4], edx
 804b280:  mov edx, DWORD PTR [ebp-0x3c]
 804b283:  mov DWORD PTR [esp], edx
 804b286:  call 804ef50
 804b28b:  mov ecx, DWORD PTR [ebx+0x4]
 804b28e:  jmp 804ad2b
 804b293:  mov eax, DWORD PTR [edi+0x4]
 804b296:  mov edx, 0x80aff28
 804b29b:  and eax, 0xf8
 804b29e:  lea eax, [edi+eax]
 804b2a1:  cmp DWORD PTR [ebp-0x30], eax
 804b2a4:  jb 804aced
 804b2aa:  jmp 804b180
 804b2af:  nop
 804b2b0:  and edx, 0xff
 804b2b6:  lea eax, [esi-0x4]
 804b2b9:  mov DWORD PTR [esp+0x4], edx
 804b2bd:  mov DWORD PTR [esp+0x8], eax
 804b2c1:  mov eax, DWORD PTR [ebp-0x3c]
 804b2c4:  mov DWORD PTR [esp], eax
 804b2c7:  call 804ef50
 804b2cc:  mov edx, DWORD PTR [ebp-0x38]
 804b2cf:  mov eax, DWORD PTR [edx+edi*4+0x8]
 804b2d3:  jmp 804af72
 804b2d8:  mov eax, ds:0x80d0d44
 804b2dd:  mov ecx, ebx
 804b2df:  mov edx, 0x80afcd3
 804b2e4:  call 8049610
 804b2e9:  jmp 804ad34
 804b2ee:  mov ecx, DWORD PTR [ebp-0x30]
 804b2f1:  mov edx, 0x80afcd3
 804b2f6:  add esi, edi
 804b2f8:  mov eax, ds:0x80d0d44
 804b2fd:  call 8049610
 804b302:  jmp 804ad55
 804b307:  cmp ebx, ecx
 804b309:  je 804b369
 804b30b:  mov eax, DWORD PTR [ebx+0x14]
 804b30e:  mov DWORD PTR [edx+0x10], ecx
 804b311:  mov DWORD PTR [edx+0x14], eax
 804b314:  mov eax, DWORD PTR [ebx+0x10]
 804b317:  mov DWORD PTR [eax+0x14], edx
 804b31a:  mov eax, DWORD PTR [ebx+0x14]
 804b31d:  mov DWORD PTR [eax+0x10], edx
 804b320:  jmp 804adf8
 804b325:  cmp ebx, eax
 804b327:  je 804b374
 804b329:  mov eax, DWORD PTR [ebx+0x14]
 804b32c:  mov ecx, DWORD PTR [ebp-0x34]
 804b32f:  mov DWORD PTR [edx+0x14], eax
 804b332:  mov DWORD PTR [edx+0x10], ecx
 804b335:  mov eax, DWORD PTR [ebx+0x10]
 804b338:  mov DWORD PTR [eax+0x14], edx
 804b33b:  mov eax, DWORD PTR [ebx+0x14]
 804b33e:  mov DWORD PTR [eax+0x10], edx
 804b341:  jmp 804ad34
 804b346:  cmp eax, ecx
 804b348:  je 804b37f
 804b34a:  mov DWORD PTR [edx+0x10], ecx
 804b34d:  mov ecx, DWORD PTR [ebp-0x30]
 804b350:  add esi, edi
 804b352:  mov eax, DWORD PTR [ecx+0x14]
 804b355:  mov DWORD PTR [edx+0x14], eax
 804b358:  mov eax, DWORD PTR [ecx+0x10]
 804b35b:  mov DWORD PTR [eax+0x14], edx
 804b35e:  mov eax, DWORD PTR [ecx+0x14]
 804b361:  mov DWORD PTR [eax+0x10], edx
 804b364:  jmp 804ad55
 804b369:  mov DWORD PTR [edx+0x14], edx
 804b36c:  mov DWORD PTR [edx+0x10], edx
 804b36f:  jmp 804adf8
 804b374:  mov DWORD PTR [edx+0x14], edx
 804b377:  mov DWORD PTR [edx+0x10], edx
 804b37a:  jmp 804ad34
 804b37f:  mov DWORD PTR [edx+0x14], edx
 804b382:  add esi, edi
 804b384:  mov DWORD PTR [edx+0x10], edx
 804b387:  jmp 804ad55
 804b38c:  lea esi, [esi]

0804b390 <free_atfork>:
 804b390:  push ebp
 804b391:  mov ebp, esp
 804b393:  sub esp, 0x10
 804b396:  mov DWORD PTR [ebp-0x4], esi
 804b399:  mov esi, DWORD PTR [ebp+0x8]
 804b39c:  mov DWORD PTR [ebp-0x8], ebx
 804b39f:  test esi, esi
 804b3a1:  je 804b409
 804b3a3:  lea ecx, [esi-0x8]
 804b3a6:  mov edx, DWORD PTR [ecx+0x4]
 804b3a9:  test dl, 0x2
 804b3ac:  jne 804b428
 804b3ae:  and edx, 0x4
 804b3b1:  mov ebx, 0x80d1d40
 804b3b6:  jne 804b418
 804b3b8:  mov edx, 0xffffffec
 804b3be:  mov eax, gs:0x0
 804b3c4:  cmp DWORD PTR [eax+edx], 0xff
 804b3c8:  je 804b468
 804b3ce:  xor eax, eax
 804b3d0:  mov ecx, 0x1
 804b3d5:  cmp DWORD PTR gs:0xc, 0x0
 804b3dd:  je 804b3e0
 804b3df:  cmpxchg DWORD PTR [ebx], ecx
 804b3e3:  jne 804eb2e
 804b3e9:  mov DWORD PTR [esp+0x4], esi
 804b3ed:  mov DWORD PTR [esp], ebx
 804b3f0:  call 804ac70
 804b3f5:  cmp DWORD PTR gs:0xc, 0x0
 804b3fd:  je 804b400
 804b3ff:  sub DWORD PTR [ebx], 0x1
 804b403:  jne 804eb3a
 804b409:  mov ebx, DWORD PTR [ebp-0x8]
 804b40c:  mov esi, DWORD PTR [ebp-0x4]
 804b40f:  mov esp, ebp
 804b411:  pop ebp
 804b412:  ret
 804b413:  nop
 804b414:  lea esi, [esi]
 804b418:  and ecx, 0xfff00000
 804b41e:  mov ebx, DWORD PTR [ecx]
 804b420:  jmp 804b3b8
 804b422:  lea esi, [esi]
 804b428:  mov eax, DWORD PTR [esi-0x8]
 804b42b:  and edx, 0xf8
 804b42e:  mov ebx, ecx
 804b430:  sub ebx, eax
 804b432:  lea ecx, [edx+eax]
 804b435:  mov eax, ds:0x80d21bc
 804b43a:  mov edx, ebx
 804b43c:  or edx, ecx
 804b43e:  sub eax, 0x1
 804b441:  test edx, eax
 804b443:  jne 804b47c
 804b445:  sub DWORD PTR ds:0x80d21ac, 0x1
 804b44c:  sub DWORD PTR ds:0x80d21c0, ecx
 804b452:  mov esi, DWORD PTR [ebp-0x4]
 804b455:  mov DWORD PTR [ebp+0x8], ebx
 804b458:  mov ebx, DWORD PTR [ebp-0x8]
 804b45b:  mov DWORD PTR [ebp+0xc], ecx
 804b45e:  mov esp, ebp
 804b460:  pop ebp
 804b461:  jmp 8050050
 804b466:  xchg ax, ax
 804b468:  mov DWORD PTR [ebp+0xc], esi
 804b46b:  mov esi, DWORD PTR [ebp-0x4]
 804b46e:  mov DWORD PTR [ebp+0x8], ebx
 804b471:  mov ebx, DWORD PTR [ebp-0x8]
 804b474:  mov esp, ebp
 804b476:  pop ebp
 804b477:  jmp 804ac70
 804b47c:  mov eax, ds:0x80d0d44
 804b481:  mov ecx, esi
 804b483:  mov edx, 0x80afe7c
 804b488:  mov ebx, DWORD PTR [ebp-0x8]
 804b48b:  mov esi, DWORD PTR [ebp-0x4]
 804b48e:  mov esp, ebp
 804b490:  pop ebp
 804b491:  jmp 8049610
 804b496:  lea esi, [esi]
 804b499:  lea edi, [edi]

0804b4a0 <__cfree>:
 804b4a0:  push ebp
 804b4a1:  mov ebp, esp
 804b4a3:  sub esp, 0x10
 804b4a6:  mov DWORD PTR [ebp-0x4], esi
 804b4a9:  mov esi, DWORD PTR [ebp+0x8]
 804b4ac:  mov DWORD PTR [ebp-0x8], ebx
 804b4af:  mov edx, DWORD PTR ds:0x80d1d24
 804b4b5:  test edx, edx
 804b4b7:  je 804b4d0
 804b4b9:  mov eax, DWORD PTR [ebp+0x4]
 804b4bc:  mov DWORD PTR [esp], esi
 804b4bf:  mov DWORD PTR [esp+0x4], eax
 804b4c3:  call edx
 804b4c5:  mov ebx, DWORD PTR [ebp-0x8]
 804b4c8:  mov esi, DWORD PTR [ebp-0x4]
 804b4cb:  mov esp, ebp
 804b4cd:  pop ebp
 804b4ce:  ret
 804b4cf:  nop
 804b4d0:  test esi, esi
 804b4d2:  je 804b4c5
 804b4d4:  lea ecx, [esi-0x8]
 804b4d7:  mov eax, DWORD PTR [ecx+0x4]
 804b4da:  test al, 0x2
 804b4dc:  jne 804b538
 804b4de:  test al, 0x4
 804b4e0:  mov ebx, 0x80d1d40
 804b4e5:  je 804b4ef
 804b4e7:  and ecx, 0xfff00000
 804b4ed:  mov ebx, DWORD PTR [ecx]
 804b4ef:  xor eax, eax
 804b4f1:  mov ecx, 0x1
 804b4f6:  cmp DWORD PTR gs:0xc, 0x0
 804b4fe:  je 804b501
 804b500:  cmpxchg DWORD PTR [ebx], ecx
 804b504:  jne 804eb46
 804b50a:  mov DWORD PTR [esp+0x4], esi
 804b50e:  mov DWORD PTR [esp], ebx
 804b511:  call 804ac70
 804b516:  cmp DWORD PTR gs:0xc, 0x0
 804b51e:  je 804b521
 804b520:  sub DWORD PTR [ebx], 0x1
 804b524:  jne 804eb52
 804b52a:  mov ebx, DWORD PTR [ebp-0x8]
 804b52d:  mov esi, DWORD PTR [ebp-0x4]
 804b530:  mov esp, ebp
 804b532:  pop ebp
 804b533:  ret
 804b534:  lea esi, [esi]
 804b538:  mov ebx, DWORD PTR ds:0x80d21b8
 804b53e:  test ebx, ebx
 804b540:  jne 804b568
 804b542:  cmp eax, DWORD PTR ds:0x80d21a8
 804b548:  jbe 804b568
 804b54a:  cmp eax, 0x80000
 804b54f:  ja 804b568
 804b551:  mov edx, eax
 804b553:  and edx, 0xf8
 804b556:  lea eax, [edx+edx]
 804b559:  mov DWORD PTR ds:0x80d21a8, edx
 804b55f:  mov ds:0x80d21a0, eax
 804b564:  jmp 804b56d
 804b566:  xchg ax, ax
 804b568:  mov edx, eax
 804b56a:  and edx, 0xf8
 804b56d:  mov eax, DWORD PTR [esi-0x8]
 804b570:  mov esi, ecx
 804b572:  sub esi, eax
 804b574:  lea ebx, [edx+eax]
 804b577:  mov eax, ds:0x80d21bc
 804b57c:  mov edx, ebx
 804b57e:  or edx, esi
 804b580:  sub eax, 0x1
 804b583:  test edx, eax
 804b585:  jne 804b5aa
 804b587:  sub DWORD PTR ds:0x80d21c0, ebx
 804b58d:  sub DWORD PTR ds:0x80d21ac, 0x1
 804b594:  mov DWORD PTR [esp+0x4], ebx
 804b598:  mov DWORD PTR [esp], esi
 804b59b:  call 8050050
 804b5a0:  mov ebx, DWORD PTR [ebp-0x8]
 804b5a3:  mov esi, DWORD PTR [ebp-0x4]
 804b5a6:  mov esp, ebp
 804b5a8:  pop ebp
 804b5a9:  ret
 804b5aa:  mov eax, ds:0x80d0d44
 804b5af:  add ecx, 0x8
 804b5b2:  mov edx, 0x80afe7c
 804b5b7:  mov ebx, DWORD PTR [ebp-0x8]
 804b5ba:  mov esi, DWORD PTR [ebp-0x4]
 804b5bd:  mov esp, ebp
 804b5bf:  pop ebp
 804b5c0:  jmp 8049610
 804b5c5:  lea esi, [esi]
 804b5c9:  lea edi, [edi]

0804b5d0 <free_check>:
 804b5d0:  push ebp
 804b5d1:  mov ebp, esp
 804b5d3:  sub esp, 0x10
 804b5d6:  mov DWORD PTR [ebp-0x8], ebx
 804b5d9:  mov ebx, DWORD PTR [ebp+0x8]
 804b5dc:  mov DWORD PTR [ebp-0x4], esi
 804b5df:  test ebx, ebx
 804b5e1:  je 804b643
 804b5e3:  xor eax, eax
 804b5e5:  mov ecx, 0x1
 804b5ea:  cmp DWORD PTR gs:0xc, 0x0
 804b5f2:  je 804b5f5
 804b5f4:  cmpxchg DWORD PTR ds:0x80d1d40, ecx
 804b5fc:  jne 804eb5e
 804b602:  xor edx, edx
 804b604:  mov eax, ebx
 804b606:  call 80493b0
 804b60b:  test eax, eax
 804b60d:  mov ecx, eax
 804b60f:  je 804b6a8
 804b615:  test BYTE PTR [eax+0x4], 0x2
 804b619:  jne 804b650
 804b61b:  mov DWORD PTR [esp+0x4], ebx
 804b61f:  mov DWORD PTR [esp], 0x80d1d40
 804b626:  call 804ac70
 804b62b:  cmp DWORD PTR gs:0xc, 0x0
 804b633:  je 804b636
 804b635:  sub DWORD PTR ds:0x80d1d40, 0x1
 804b63d:  jne 804eb6e
 804b643:  mov ebx, DWORD PTR [ebp-0x8]
 804b646:  mov esi, DWORD PTR [ebp-0x4]
 804b649:  mov esp, ebp
 804b64b:  pop ebp
 804b64c:  ret
 804b64d:  lea esi, [esi]
 804b650:  cmp DWORD PTR gs:0xc, 0x0
 804b658:  je 804b65b
 804b65a:  sub DWORD PTR ds:0x80d1d40, 0x1
 804b662:  jne 804eb7e
 804b668:  mov eax, DWORD PTR [ecx+0x4]
 804b66b:  mov esi, ecx
 804b66d:  mov edx, DWORD PTR [ecx]
 804b66f:  and eax, 0xf8
 804b672:  lea ebx, [eax+edx]
 804b675:  mov eax, ds:0x80d21bc
 804b67a:  sub esi, edx
 804b67c:  mov edx, esi
 804b67e:  or edx, ebx
 804b680:  sub eax, 0x1
 804b683:  test edx, eax
 804b685:  jne 804b6da
 804b687:  sub DWORD PTR ds:0x80d21ac, 0x1
 804b68e:  sub DWORD PTR ds:0x80d21c0, ebx
 804b694:  mov DWORD PTR [ebp+0xc], ebx
 804b697:  mov ebx, DWORD PTR [ebp-0x8]
 804b69a:  mov DWORD PTR [ebp+0x8], esi
 804b69d:  mov esi, DWORD PTR [ebp-0x4]
 804b6a0:  mov esp, ebp
 804b6a2:  pop ebp
 804b6a3:  jmp 8050050
 804b6a8:  cmp DWORD PTR gs:0xc, 0x0
 804b6b0:  je 804b6b3
 804b6b2:  sub DWORD PTR ds:0x80d1d40, 0x1
 804b6ba:  jne 804eb8e
 804b6c0:  mov edx, 0x80afd2c
 804b6c5:  mov ecx, ebx
 804b6c7:  mov eax, ds:0x80d0d44
 804b6cc:  mov ebx, DWORD PTR [ebp-0x8]
 804b6cf:  mov esi, DWORD PTR [ebp-0x4]
 804b6d2:  mov esp, ebp
 804b6d4:  pop ebp
 804b6d5:  jmp 8049610
 804b6da:  add ecx, 0x8
 804b6dd:  mov edx, 0x80afe7c
 804b6e2:  jmp 804b6c7
 804b6e4:  lea esi, [esi]
 804b6ea:  lea edi, [edi]

0804b6f0 <__malloc_trim>:
 804b6f0:  push ebp
 804b6f1:  mov ebp, esp
 804b6f3:  push edi
 804b6f4:  push esi
 804b6f5:  push ebx
 804b6f6:  sub esp, 0x28
 804b6f9:  mov esi, DWORD PTR ds:0x80d0d40
 804b6ff:  test esi, esi
 804b701:  js 804b8f5
 804b707:  mov DWORD PTR [ebp-0x24], 0x0
 804b70e:  mov DWORD PTR [ebp-0x20], 0x80d1d40
 804b715:  xor eax, eax
 804b717:  mov ecx, 0x1
 804b71c:  mov edx, DWORD PTR [ebp-0x20]
 804b71f:  cmp DWORD PTR gs:0xc, 0x0
 804b727:  je 804b72a
 804b729:  cmpxchg DWORD PTR [edx], ecx
 804b72d:  jne 804eb9e
 804b733:  mov eax, edx
 804b735:  call 8049d90
 804b73a:  mov eax, ds:0x80d21bc
 804b73f:  cmp eax, 0x1ff
 804b744:  ja 804b83a
 804b74a:  mov edx, eax
 804b74c:  shr edx, 0x3
 804b74f:  mov DWORD PTR [ebp-0x10], edx
 804b752:  mov esi, DWORD PTR [ebp-0x20]
 804b755:  sub eax, 0x1
 804b758:  mov DWORD PTR [ebp-0x14], eax
 804b75b:  not eax
 804b75d:  mov DWORD PTR [ebp-0x1c], 0x1
 804b764:  mov DWORD PTR [ebp-0x18], 0x0
 804b76b:  add esi, 0x30
 804b76e:  mov DWORD PTR [ebp-0x28], eax
 804b771:  lea esi, [esi]
 804b778:  cmp DWORD PTR [ebp-0x1c], 0x1
 804b77c:  je 804b786
 804b77e:  mov eax, DWORD PTR [ebp-0x10]
 804b781:  cmp DWORD PTR [ebp-0x1c], eax
 804b784:  jl 804b7e0
 804b786:  mov ebx, DWORD PTR [esi+0xc]
 804b789:  cmp ebx, esi
 804b78b:  je 804b7e0
 804b78d:  mov edi, DWORD PTR [ebp-0x14]
 804b790:  add edi, 0x18
 804b793:  jmp 804b79f
 804b795:  lea esi, [esi]
 804b798:  mov ebx, DWORD PTR [ebx+0xc]
 804b79b:  cmp esi, ebx
 804b79d:  je 804b7e0
 804b79f:  mov edx, DWORD PTR [ebx+0x4]
 804b7a2:  and edx, 0xf8
 804b7a5:  cmp edx, edi
 804b7a7:  jbe 804b798
 804b7a9:  lea ecx, [ebx+edi]
 804b7ac:  mov eax, ebx
 804b7ae:  and ecx, DWORD PTR [ebp-0x28]
 804b7b1:  sub eax, ecx
 804b7b3:  add eax, edx
 804b7b5:  cmp DWORD PTR [ebp-0x14], eax
 804b7b8:  jae 804b798
 804b7ba:  and eax, DWORD PTR [ebp-0x28]
 804b7bd:  mov DWORD PTR [esp+0x8], 0x4
 804b7c5:  mov DWORD PTR [esp], ecx
 804b7c8:  mov DWORD PTR [esp+0x4], eax
 804b7cc:  call 80500a0
 804b7d1:  mov ebx, DWORD PTR [ebx+0xc]
 804b7d4:  mov DWORD PTR [ebp-0x18], 0x1
 804b7db:  cmp esi, ebx
 804b7dd:  jne 804b79f
 804b7df:  nop
 804b7e0:  add DWORD PTR [ebp-0x1c], 0x1
 804b7e4:  add esi, 0x8
 804b7e7:  cmp DWORD PTR [ebp-0x1c], 0x80
 804b7ee:  jne 804b778
 804b7f0:  xor eax, eax
 804b7f2:  cmp DWORD PTR [ebp-0x20], 0x80d1d40
 804b7f9:  je 804b864
 804b7fb:  or DWORD PTR [ebp-0x18], eax
 804b7fe:  mov eax, DWORD PTR [ebp-0x18]
 804b801:  or DWORD PTR [ebp-0x24], eax
 804b804:  mov edx, DWORD PTR [ebp-0x20]
 804b807:  cmp DWORD PTR gs:0xc, 0x0
 804b80f:  je 804b812
 804b811:  sub DWORD PTR [edx], 0x1
 804b815:  jne 804ebaa
 804b81b:  mov eax, DWORD PTR [edx+0x440]
 804b821:  cmp eax, 0x80d1d40
 804b826:  mov DWORD PTR [ebp-0x20], eax
 804b829:  jne 804b715
 804b82f:  mov eax, DWORD PTR [ebp-0x24]
 804b832:  add esp, 0x28
 804b835:  pop ebx
 804b836:  pop esi
 804b837:  pop edi
 804b838:  pop ebp
 804b839:  ret
 804b83a:  mov edx, eax
 804b83c:  shr edx, 0x6
 804b83f:  cmp edx, 0x26
 804b842:  ja 804b84f
 804b844:  add edx, 0x38
 804b847:  mov DWORD PTR [ebp-0x10], edx
 804b84a:  jmp 804b752
 804b84f:  mov edx, eax
 804b851:  shr edx, 0x9
 804b854:  cmp edx, 0x14
 804b857:  ja 804b8ab
 804b859:  add edx, 0x5b
 804b85c:  mov DWORD PTR [ebp-0x10], edx
 804b85f:  jmp 804b752
 804b864:  mov eax, ds:0x80d1d70
 804b869:  xor edx, edx
 804b86b:  mov esi, DWORD PTR ds:0x80d21bc
 804b871:  mov edi, DWORD PTR [eax+0x4]
 804b874:  and edi, 0xf8
 804b877:  lea eax, [edi+esi-0x11]
 804b87b:  sub eax, DWORD PTR [ebp+0x8]
 804b87e:  div esi
 804b880:  lea ebx, [eax-0x1]
 804b883:  imul ebx, esi
 804b886:  test ebx, ebx
 804b888:  jle 804b8a4
 804b88a:  mov DWORD PTR [esp], 0x0
 804b891:  call DWORD PTR ds:0x80d0d30
 804b897:  mov esi, eax
 804b899:  mov eax, ds:0x80d1d70
 804b89e:  add eax, edi
 804b8a0:  cmp esi, eax
 804b8a2:  je 804b905
 804b8a4:  xor eax, eax
 804b8a6:  jmp 804b7fb
 804b8ab:  mov edx, eax
 804b8ad:  shr edx, 0xc
 804b8b0:  cmp edx, 0xa
 804b8b3:  ja 804b8c0
 804b8b5:  add edx, 0x6e
 804b8b8:  mov DWORD PTR [ebp-0x10], edx
 804b8bb:  jmp 804b752
 804b8c0:  mov edx, eax
 804b8c2:  shr edx, 0xf
 804b8c5:  cmp edx, 0x4
 804b8c8:  ja 804b8d5
 804b8ca:  add edx, 0x77
 804b8cd:  mov DWORD PTR [ebp-0x10], edx
 804b8d0:  jmp 804b752
 804b8d5:  mov edx, eax
 804b8d7:  shr edx, 0x12
 804b8da:  cmp edx, 0x2
 804b8dd:  mov DWORD PTR [ebp-0x10], 0x7e
 804b8e4:  ja 804b752
 804b8ea:  add edx, 0x7c
 804b8ed:  mov DWORD PTR [ebp-0x10], edx
 804b8f0:  jmp 804b752
 804b8f5:  call 804a310
 804b8fa:  lea esi, [esi]
 804b900:  jmp 804b707
 804b905:  neg ebx
 804b907:  mov DWORD PTR [esp], ebx
 804b90a:  call DWORD PTR ds:0x80d0d30
 804b910:  mov eax, ds:0x80d1d28
 804b915:  test eax, eax
 804b917:  je 804b91b
 804b919:  call eax
 804b91b:  mov DWORD PTR [esp], 0x0
 804b922:  call DWORD PTR ds:0x80d0d30
 804b928:  test eax, eax
 804b92a:  lea esi, [esi]
 804b930:  je 804b8a4
 804b936:  mov edx, esi
 804b938:  sub edx, eax
 804b93a:  je 804b8a4
 804b940:  mov eax, edi
 804b942:  sub DWORD PTR ds:0x80d2184, edx
 804b948:  sub eax, edx
 804b94a:  mov edx, DWORD PTR ds:0x80d1d70
 804b950:  or eax, 0x1
 804b953:  mov DWORD PTR [edx+0x4], eax
 804b956:  mov eax, 0x1
 804b95b:  jmp 804b7fb

0804b960 <_int_malloc>:
 804b960:  push ebp
 804b961:  mov ebp, esp
 804b963:  push edi
 804b964:  push esi
 804b965:  push ebx
 804b966:  sub esp, 0x78
 804b969:  cmp DWORD PTR [ebp+0xc], 0xdf
 804b96d:  ja 804c14f
 804b973:  mov eax, DWORD PTR [ebp+0xc]
 804b976:  mov DWORD PTR [ebp-0x5c], 0x10
 804b97d:  add eax, 0xb
 804b980:  cmp eax, 0xf
 804b983:  ja 804ba50
 804b989:  mov eax, DWORD PTR [ebp-0x5c]
 804b98c:  cmp eax, DWORD PTR ds:0x80d21d0
 804b992:  ja 804b9e0
 804b994:  mov edx, DWORD PTR [ebp+0x8]
 804b997:  shr eax, 0x3
 804b99a:  lea esi, [eax-0x2]
 804b99d:  mov ebx, DWORD PTR [edx+esi*4+0x8]
 804b9a1:  test ebx, ebx
 804b9a3:  je 804b9e0
 804b9a5:  mov eax, DWORD PTR [ebx+0x4]
 804b9a8:  lea edi, [ebx+0x8]
 804b9ab:  shr eax, 0x3
 804b9ae:  sub eax, 0x2
 804b9b1:  cmp esi, eax
 804b9b3:  jne 804c36d
 804b9b9:  mov eax, DWORD PTR [ebx+0x8]
 804b9bc:  mov ecx, DWORD PTR [ebp+0x8]
 804b9bf:  mov DWORD PTR [ecx+esi*4+0x8], eax
 804b9c3:  mov eax, ds:0x80d21d4
 804b9c8:  test eax, eax
 804b9ca:  jne 804c34e
 804b9d0:  add esp, 0x78
 804b9d3:  mov eax, edi
 804b9d5:  pop ebx
 804b9d6:  pop esi
 804b9d7:  pop edi
 804b9d8:  pop ebp
 804b9d9:  ret
 804b9da:  lea esi, [esi]
 804b9e0:  cmp DWORD PTR [ebp-0x5c], 0x1ff
 804b9e7:  ja 804ba70
 804b9ed:  mov esi, DWORD PTR [ebp-0x5c]
 804b9f0:  mov eax, DWORD PTR [ebp+0x8]
 804b9f3:  shr esi, 0x3
 804b9f6:  add eax, 0x38
 804b9f9:  lea ecx, [eax+esi*8-0x10]
 804b9fd:  mov edx, DWORD PTR [ecx+0xc]
 804ba00:  mov DWORD PTR [ebp-0x58], esi
 804ba03:  mov DWORD PTR [ebp-0x60], eax
 804ba06:  cmp edx, ecx
 804ba08:  je 804baad
 804ba0e:  test edx, edx
 804ba10:  je 804c198
 804ba16:  mov ebx, DWORD PTR [ebp-0x5c]
 804ba19:  mov eax, DWORD PTR [edx+0xc]
 804ba1c:  or DWORD PTR [edx+ebx+0x4], 0x1
 804ba21:  cmp DWORD PTR [ebp+0x8], 0x80d1d40
 804ba28:  mov DWORD PTR [ecx+0xc], eax
 804ba2b:  mov DWORD PTR [eax+0x8], ecx
 804ba2e:  je 804ba34
 804ba30:  or DWORD PTR [edx+0x4], 0x4
 804ba34:  mov eax, ds:0x80d21d4
 804ba39:  lea ebx, [edx+0x8]
 804ba3c:  mov edi, ebx
 804ba3e:  test eax, eax
 804ba40:  jne 804c039
 804ba46:  add esp, 0x78
 804ba49:  mov eax, edi
 804ba4b:  pop ebx
 804ba4c:  pop esi
 804ba4d:  pop edi
 804ba4e:  pop ebp
 804ba4f:  ret
 804ba50:  and eax, 0xf8
 804ba53:  mov DWORD PTR [ebp-0x5c], eax
 804ba56:  mov eax, DWORD PTR [ebp-0x5c]
 804ba59:  cmp eax, DWORD PTR ds:0x80d21d0
 804ba5f:  ja 804b9e0
 804ba65:  jmp 804b994
 804ba6a:  lea esi, [esi]
 804ba70:  mov eax, DWORD PTR [ebp-0x5c]
 804ba73:  shr eax, 0x6
 804ba76:  cmp eax, 0x26
 804ba79:  jbe 804bf70
 804ba7f:  mov eax, DWORD PTR [ebp-0x5c]
 804ba82:  shr eax, 0x9
 804ba85:  cmp eax, 0x14
 804ba88:  ja 804c060
 804ba8e:  add eax, 0x5b
 804ba91:  mov DWORD PTR [ebp-0x58], eax
 804ba94:  mov eax, DWORD PTR [ebp+0x8]
 804ba97:  mov edx, DWORD PTR [ebp+0x8]
 804ba9a:  add eax, 0x38
 804ba9d:  test BYTE PTR [edx+0x4], 0x1
 804baa1:  mov DWORD PTR [ebp-0x60], eax
 804baa4:  jne 804baad
 804baa6:  mov eax, edx
 804baa8:  call 8049d90
 804baad:  mov ecx, DWORD PTR [ebp+0x8]
 804bab0:  lea esi, [ebp-0x15]
 804bab3:  mov ebx, DWORD PTR [ebp-0x5c]
 804bab6:  mov DWORD PTR [ebp-0x68], esi
 804bab9:  add ecx, 0x30
 804babc:  shr ebx, 0x3
 804babf:  mov DWORD PTR [ebp-0x34], ecx
 804bac2:  mov DWORD PTR [ebp-0x28], ebx
 804bac5:  mov DWORD PTR [ebp-0x3c], 0x0
 804bacc:  jmp 804bb1d
 804bace:  xchg ax, ax
 804bad0:  mov eax, DWORD PTR [ebp-0x60]
 804bad3:  mov esi, ebx
 804bad5:  shr esi, 0x3
 804bad8:  lea ebx, [eax+esi*8-0x10]
 804badc:  mov edx, DWORD PTR [ebx+0x8]
 804badf:  mov DWORD PTR [ebp-0x6c], edx
 804bae2:  mov edx, esi
 804bae4:  and esi, 0x1f
 804bae7:  mov ecx, esi
 804bae9:  mov esi, DWORD PTR [ebp+0x8]
 804baec:  mov eax, 0x1
 804baf1:  sar edx, 0x5
 804baf4:  shl eax, cl
 804baf6:  add DWORD PTR [ebp-0x3c], 0x1
 804bafa:  or DWORD PTR [esi+edx*4+0x430], eax
 804bb01:  mov eax, DWORD PTR [ebp-0x6c]
 804bb04:  cmp DWORD PTR [ebp-0x3c], 0x2710
 804bb0b:  mov DWORD PTR [edi+0xc], ebx
 804bb0e:  mov DWORD PTR [edi+0x8], eax
 804bb11:  mov DWORD PTR [eax+0xc], edi
 804bb14:  mov DWORD PTR [ebx+0x8], edi
 804bb17:  je 804bd28
 804bb1d:  mov edx, DWORD PTR [ebp-0x34]
 804bb20:  mov edi, DWORD PTR [edx+0xc]
 804bb23:  cmp edx, edi
 804bb25:  je 804bd28
 804bb2b:  mov edx, DWORD PTR [edi+0x4]
 804bb2e:  mov esi, DWORD PTR [edi+0xc]
 804bb31:  cmp edx, 0x8
 804bb34:  jbe 804be79
 804bb3a:  mov eax, DWORD PTR [ebp+0x8]
 804bb3d:  cmp edx, DWORD PTR [eax+0x444]
 804bb43:  ja 804be79
 804bb49:  mov ebx, edx
 804bb4b:  and ebx, 0xf8
 804bb4e:  cmp DWORD PTR [ebp-0x5c], 0x1ff
 804bb55:  ja 804bb60
 804bb57:  cmp DWORD PTR [ebp-0x34], esi
 804bb5a:  je 804bc68
 804bb60:  mov ecx, DWORD PTR [ebp-0x34]
 804bb63:  cmp DWORD PTR [ebp-0x5c], ebx
 804bb66:  mov DWORD PTR [ecx+0xc], esi
 804bb69:  mov DWORD PTR [esi+0x8], ecx
 804bb6c:  je 804be48
 804bb72:  cmp ebx, 0x1ff
 804bb78:  jbe 804bad0
 804bb7e:  mov eax, ebx
 804bb80:  shr eax, 0x6
 804bb83:  cmp eax, 0x26
 804bb86:  ja 804bbf8
 804bb88:  lea esi, [eax+0x38]
 804bb8b:  lea eax, [esi*8-0x10]
 804bb92:  mov edx, DWORD PTR [ebp-0x60]
 804bb95:  add edx, eax
 804bb97:  mov ecx, DWORD PTR [edx+0x8]
 804bb9a:  cmp ecx, edx
 804bb9c:  mov DWORD PTR [ebp-0x6c], ecx
 804bb9f:  je 804bc1b
 804bba1:  mov eax, ebx
 804bba3:  mov ebx, DWORD PTR [edx+0xc]
 804bba6:  or eax, 0x1
 804bba9:  cmp eax, DWORD PTR [ebx+0x4]
 804bbac:  jb 804bc28
 804bbae:  mov edx, DWORD PTR [ecx+0x4]
 804bbb1:  cmp eax, edx
 804bbb3:  jae 804bbc8
 804bbb5:  lea esi, [esi]
 804bbb8:  mov ebx, DWORD PTR [ebp-0x6c]
 804bbbb:  mov ebx, DWORD PTR [ebx+0x10]
 804bbbe:  mov edx, DWORD PTR [ebx+0x4]
 804bbc1:  mov DWORD PTR [ebp-0x6c], ebx
 804bbc4:  cmp eax, edx
 804bbc6:  jb 804bbb8
 804bbc8:  mov ecx, DWORD PTR [ebp-0x6c]
 804bbcb:  cmp eax, edx
 804bbcd:  mov DWORD PTR [ebp-0x38], ecx
 804bbd0:  je 804bcf8
 804bbd6:  mov eax, DWORD PTR [ecx+0x14]
 804bbd9:  mov DWORD PTR [edi+0x10], ecx
 804bbdc:  mov DWORD PTR [edi+0x14], eax
 804bbdf:  mov DWORD PTR [ecx+0x14], edi
 804bbe2:  mov eax, DWORD PTR [edi+0x14]
 804bbe5:  mov ecx, DWORD PTR [ebp-0x38]
 804bbe8:  mov DWORD PTR [eax+0x10], edi
 804bbeb:  mov ebx, DWORD PTR [ecx+0xc]
 804bbee:  mov DWORD PTR [ebp-0x6c], ecx
 804bbf1:  jmp 804bae2
 804bbf6:  xchg ax, ax
 804bbf8:  mov eax, ebx
 804bbfa:  shr eax, 0x9
 804bbfd:  cmp eax, 0x14
 804bc00:  ja 804bc48
 804bc02:  mov edx, DWORD PTR [ebp-0x60]
 804bc05:  lea esi, [eax+0x5b]
 804bc08:  lea eax, [esi*8-0x10]
 804bc0f:  add edx, eax
 804bc11:  mov ecx, DWORD PTR [edx+0x8]
 804bc14:  cmp ecx, edx
 804bc16:  mov DWORD PTR [ebp-0x6c], ecx
 804bc19:  jne 804bba1
 804bc1b:  mov ebx, ecx
 804bc1d:  mov DWORD PTR [edi+0x14], edi
 804bc20:  mov DWORD PTR [edi+0x10], edi
 804bc23:  jmp 804bae2
 804bc28:  mov eax, DWORD PTR [ebp-0x6c]
 804bc2b:  mov DWORD PTR [ebp-0x6c], edx
 804bc2e:  mov DWORD PTR [edi+0x10], eax
 804bc31:  mov ecx, eax
 804bc33:  mov eax, DWORD PTR [eax+0x14]
 804bc36:  mov DWORD PTR [edi+0x14], eax
 804bc39:  mov DWORD PTR [eax+0x10], edi
 804bc3c:  mov DWORD PTR [ecx+0x14], edi
 804bc3f:  jmp 804bae2
 804bc44:  lea esi, [esi]
 804bc48:  mov eax, ebx
 804bc4a:  shr eax, 0xc
 804bc4d:  cmp eax, 0xa
 804bc50:  ja 804bd08
 804bc56:  lea esi, [eax+0x6e]
 804bc59:  lea eax, [esi*8-0x10]
 804bc60:  jmp 804bb92
 804bc65:  lea esi, [esi]
 804bc68:  mov ecx, DWORD PTR [ebp+0x8]
 804bc6b:  mov edx, DWORD PTR [ecx+0x34]
 804bc6e:  cmp edx, edi
 804bc70:  jne 804bb60
 804bc76:  mov eax, DWORD PTR [ebp-0x5c]
 804bc79:  add eax, 0x10
 804bc7c:  cmp ebx, eax
 804bc7e:  jbe 804bb60
 804bc84:  mov esi, DWORD PTR [ebp-0x5c]
 804bc87:  mov eax, DWORD PTR [ebp-0x34]
 804bc8a:  sub ebx, DWORD PTR [ebp-0x5c]
 804bc8d:  lea ecx, [edi+esi]
 804bc90:  mov esi, DWORD PTR [ebp+0x8]
 804bc93:  cmp ebx, 0x1ff
 804bc99:  mov DWORD PTR [eax+0x8], ecx
 804bc9c:  mov DWORD PTR [eax+0xc], ecx
 804bc9f:  mov DWORD PTR [esi+0x34], ecx
 804bca2:  mov DWORD PTR [ecx+0x8], eax
 804bca5:  mov DWORD PTR [ecx+0xc], eax
 804bca8:  jbe 804bcb8
 804bcaa:  mov DWORD PTR [ecx+0x10], 0x0
 804bcb1:  mov DWORD PTR [ecx+0x14], 0x0
 804bcb8:  xor eax, eax
 804bcba:  cmp DWORD PTR [ebp+0x8], 0x80d1d40
 804bcc1:  mov DWORD PTR [ecx+ebx], ebx
 804bcc4:  setne al
 804bcc7:  or DWORD PTR [ebp-0x5c], 0x1
 804bccb:  shl eax, 0x2
 804bcce:  or DWORD PTR [ebp-0x5c], eax
 804bcd1:  mov eax, DWORD PTR [ebp-0x5c]
 804bcd4:  mov DWORD PTR [edx+0x4], eax
 804bcd7:  mov eax, ebx
 804bcd9:  or eax, 0x1
 804bcdc:  mov DWORD PTR [ecx+0x4], eax
 804bcdf:  mov eax, ds:0x80d21d4
 804bce4:  lea ebx, [edx+0x8]
 804bce7:  mov edi, ebx
 804bce9:  test eax, eax
 804bceb:  je 804b9d0
 804bcf1:  jmp 804bf4c
 804bcf6:  xchg ax, ax
 804bcf8:  mov ebx, DWORD PTR [ecx+0x8]
 804bcfb:  mov DWORD PTR [ebp-0x38], ebx
 804bcfe:  mov ecx, ebx
 804bd00:  jmp 804bbeb
 804bd05:  lea esi, [esi]
 804bd08:  mov eax, ebx
 804bd0a:  shr eax, 0xf
 804bd0d:  cmp eax, 0x4
 804bd10:  ja 804bdd8
 804bd16:  lea esi, [eax+0x77]
 804bd19:  lea eax, [esi*8-0x10]
 804bd20:  jmp 804bb92
 804bd25:  lea esi, [esi]
 804bd28:  cmp DWORD PTR [ebp-0x5c], 0x1ff
 804bd2f:  ja 804bea8
 804bd35:  mov ecx, DWORD PTR [ebp-0x58]
 804bd38:  mov edx, 0x1
 804bd3d:  mov esi, DWORD PTR [ebp-0x60]
 804bd40:  mov eax, DWORD PTR [ebp+0x8]
 804bd43:  add ecx, 0x1
 804bd46:  mov edi, ecx
 804bd48:  shr edi, 0x5
 804bd4b:  lea ebx, [esi+ecx*8-0x10]
 804bd4f:  mov esi, DWORD PTR [eax+edi*4+0x430]
 804bd56:  and ecx, 0x1f
 804bd59:  shl edx, cl
 804bd5b:  nop
 804bd5c:  lea esi, [esi]
 804bd60:  cmp edx, esi
 804bd62:  ja 804bd68
 804bd64:  test edx, edx
 804bd66:  jne 804bdad
 804bd68:  mov edx, DWORD PTR [ebp+0x8]
 804bd6b:  lea eax, [edx+edi*4+0x434]
 804bd72:  lea esi, [esi]
 804bd78:  add edi, 0x1
 804bd7b:  cmp edi, 0x3
 804bd7e:  ja 804be00
 804bd84:  mov esi, DWORD PTR [eax]
 804bd86:  add eax, 0x4
 804bd89:  test esi, esi
 804bd8b:  je 804bd78
 804bd8d:  mov eax, edi
 804bd8f:  mov ebx, DWORD PTR [ebp-0x60]
 804bd92:  mov edx, 0x1
 804bd97:  shl eax, 0x4
 804bd9a:  neg eax
 804bd9c:  add eax, 0x1
 804bd9f:  shl eax, 0x4
 804bda2:  sub ebx, eax
 804bda4:  test edx, esi
 804bda6:  jne 804bdb1
 804bda8:  add ebx, 0x8
 804bdab:  add edx, edx
 804bdad:  test edx, esi
 804bdaf:  je 804bda8
 804bdb1:  mov ecx, DWORD PTR [ebx+0xc]
 804bdb4:  cmp ecx, ebx
 804bdb6:  mov DWORD PTR [ebp-0x30], ecx
 804bdb9:  jne 804bf7b
 804bdbf:  mov eax, edx
 804bdc1:  add ebx, 0x8
 804bdc4:  not eax
 804bdc6:  add edx, edx
 804bdc8:  and esi, eax
 804bdca:  mov eax, DWORD PTR [ebp+0x8]
 804bdcd:  mov DWORD PTR [eax+edi*4+0x430], esi
 804bdd4:  jmp 804bd60
 804bdd6:  xchg ax, ax
 804bdd8:  mov edx, ebx
 804bdda:  mov esi, 0x7e
 804bddf:  shr edx, 0x12
 804bde2:  mov eax, 0x3e0
 804bde7:  cmp edx, 0x2
 804bdea:  ja 804bb92
 804bdf0:  lea esi, [edx+0x7c]
 804bdf3:  lea eax, [esi*8-0x10]
 804bdfa:  jmp 804bb92
 804bdff:  nop
 804be00:  mov eax, DWORD PTR [ebp+0x8]
 804be03:  mov edx, DWORD PTR [ebp-0x5c]
 804be06:  mov eax, DWORD PTR [eax+0x30]
 804be09:  add edx, 0x10
 804be0c:  mov DWORD PTR [ebp-0x2c], edx
 804be0f:  mov edi, DWORD PTR [eax+0x4]
 804be12:  mov DWORD PTR [ebp-0x64], eax
 804be15:  mov DWORD PTR [ebp-0x24], eax
 804be18:  and edi, 0xf8
 804be1b:  cmp edi, edx
 804be1d:  jae 804c317
 804be23:  mov ecx, DWORD PTR [ebp+0x8]
 804be26:  test BYTE PTR [ecx+0x4], 0x1
 804be2a:  jne 804c1c6
 804be30:  mov eax, ecx
 804be32:  call 8049d90
 804be37:  mov ebx, DWORD PTR [ebp-0x28]
 804be3a:  mov DWORD PTR [ebp-0x58], ebx
 804be3d:  jmp 804bac5
 804be42:  lea esi, [esi]
 804be48:  mov ebx, DWORD PTR [ebp-0x5c]
 804be4b:  or DWORD PTR [edi+ebx+0x4], 0x1
 804be50:  cmp DWORD PTR [ebp+0x8], 0x80d1d40
 804be57:  je 804be5d
 804be59:  or DWORD PTR [edi+0x4], 0x4
 804be5d:  mov eax, ds:0x80d21d4
 804be62:  lea ebx, [edi+0x8]
 804be65:  mov edi, ebx
 804be67:  test eax, eax
 804be69:  jne 804c039
 804be6f:  add esp, 0x78
 804be72:  mov eax, edi
 804be74:  pop ebx
 804be75:  pop esi
 804be76:  pop edi
 804be77:  pop ebp
 804be78:  ret
 804be79:  mov ebx, DWORD PTR ds:0x80d0d44
 804be7f:  mov eax, ebx
 804be81:  and eax, 0x5
 804be84:  cmp eax, 0x5
 804be87:  je 804c12c
 804be8d:  test bl, 0x1
 804be90:  jne 804c089
 804be96:  and ebx, 0x2
 804be99:  je 804bb49
 804be9f:  nop
 804bea0:  call 8055a00
 804bea5:  lea esi, [esi]
 804bea8:  mov ecx, DWORD PTR [ebp-0x58]
 804beab:  mov ebx, DWORD PTR [ebp-0x60]
 804beae:  lea edx, [ebx+ecx*8-0x10]
 804beb2:  mov eax, DWORD PTR [edx+0x8]
 804beb5:  cmp eax, edx
 804beb7:  je 804bd35
 804bebd:  mov esi, DWORD PTR [ebp-0x5c]
 804bec0:  cmp esi, DWORD PTR [eax+0x4]
 804bec3:  ja 804bd35
 804bec9:  mov eax, DWORD PTR [eax+0x14]
 804becc:  mov ecx, DWORD PTR [eax+0x4]
 804becf:  mov esi, ecx
 804bed1:  and esi, 0xf8
 804bed4:  cmp DWORD PTR [ebp-0x5c], esi
 804bed7:  ja 804bec9
 804bed9:  cmp DWORD PTR [edx+0xc], eax
 804bedc:  je 804c6eb
 804bee2:  mov ebx, DWORD PTR [eax+0x8]
 804bee5:  cmp DWORD PTR [ebx+0x4], ecx
 804bee8:  je 804c72e
 804beee:  mov edx, ebx
 804bef0:  mov ebx, eax
 804bef2:  mov edi, esi
 804bef4:  mov eax, DWORD PTR [ebx+0xc]
 804bef7:  sub edi, DWORD PTR [ebp-0x5c]
 804befa:  cmp DWORD PTR [edx+0xc], ebx
 804befd:  jne 804c718
 804bf03:  cmp ebx, DWORD PTR [eax+0x8]
 804bf06:  jne 804c718
 804bf0c:  cmp DWORD PTR [ebx+0x4], 0x1ff
 804bf13:  mov DWORD PTR [edx+0xc], eax
 804bf16:  mov DWORD PTR [eax+0x8], edx
 804bf19:  ja 804c6f5
 804bf1f:  cmp edi, 0xf
 804bf22:  ja 804c386
 804bf28:  or DWORD PTR [ebx+esi+0x4], 0x1
 804bf2d:  cmp DWORD PTR [ebp+0x8], 0x80d1d40
 804bf34:  je 804bf3a
 804bf36:  or DWORD PTR [ebx+0x4], 0x4
 804bf3a:  mov eax, ds:0x80d21d4
 804bf3f:  add ebx, 0x8
 804bf42:  mov edi, ebx
 804bf44:  test eax, eax
 804bf46:  je 804b9d0
 804bf4c:  mov edx, DWORD PTR [ebp+0xc]
 804bf4f:  not eax
 804bf51:  mov edi, ebx
 804bf53:  and eax, 0xff
 804bf58:  mov DWORD PTR [esp+0x4], eax
 804bf5c:  mov DWORD PTR [esp], ebx
 804bf5f:  mov DWORD PTR [esp+0x8], edx
 804bf63:  call 804ef50
 804bf68:  jmp 804b9d0
 804bf6d:  lea esi, [esi]
 804bf70:  add eax, 0x38
 804bf73:  mov DWORD PTR [ebp-0x58], eax
 804bf76:  jmp 804ba94
 804bf7b:  mov ebx, DWORD PTR [ecx+0x4]
 804bf7e:  mov edx, DWORD PTR [ecx+0x8]
 804bf81:  mov eax, DWORD PTR [ecx+0xc]
 804bf84:  and ebx, 0xf8
 804bf87:  mov esi, ebx
 804bf89:  sub esi, DWORD PTR [ebp-0x5c]
 804bf8c:  cmp DWORD PTR [edx+0xc], ecx
 804bf8f:  jne 804c3e9
 804bf95:  cmp ecx, DWORD PTR [eax+0x8]
 804bf98:  jne 804c3e9
 804bf9e:  mov DWORD PTR [edx+0xc], eax
 804bfa1:  mov DWORD PTR [eax+0x8], edx
 804bfa4:  mov eax, DWORD PTR [ebp-0x30]
 804bfa7:  cmp DWORD PTR [eax+0x4], 0x1ff
 804bfae:  ja 804c169
 804bfb4:  cmp esi, 0xf
 804bfb7:  jbe 804c103
 804bfbd:  mov ebx, DWORD PTR [ebp-0x34]
 804bfc0:  mov edx, DWORD PTR [ebp-0x30]
 804bfc3:  add edx, DWORD PTR [ebp-0x5c]
 804bfc6:  cmp DWORD PTR [ebp-0x5c], 0x1ff
 804bfcd:  mov eax, DWORD PTR [ebx+0x8]
 804bfd0:  mov DWORD PTR [edx+0xc], ebx
 804bfd3:  mov DWORD PTR [edx+0x8], eax
 804bfd6:  mov DWORD PTR [eax+0xc], edx
 804bfd9:  mov DWORD PTR [ebx+0x8], edx
 804bfdc:  ja 804bfe4
 804bfde:  mov eax, DWORD PTR [ebp+0x8]
 804bfe1:  mov DWORD PTR [eax+0x34], edx
 804bfe4:  cmp esi, 0x1ff
 804bfea:  jbe 804bffa
 804bfec:  mov DWORD PTR [edx+0x10], 0x0
 804bff3:  mov DWORD PTR [edx+0x14], 0x0
 804bffa:  xor eax, eax
 804bffc:  mov ebx, DWORD PTR [ebp-0x30]
 804bfff:  cmp DWORD PTR [ebp+0x8], 0x80d1d40
 804c006:  mov DWORD PTR [edx+esi], esi
 804c009:  setne al
 804c00c:  or DWORD PTR [ebp-0x5c], 0x1
 804c010:  shl eax, 0x2
 804c013:  or DWORD PTR [ebp-0x5c], eax
 804c016:  mov eax, esi
 804c018:  mov ecx, DWORD PTR [ebp-0x5c]
 804c01b:  or eax, 0x1
 804c01e:  mov DWORD PTR [ebx+0x4], ecx
 804c021:  mov DWORD PTR [edx+0x4], eax
 804c024:  mov ebx, DWORD PTR [ebp-0x30]
 804c027:  mov eax, ds:0x80d21d4
 804c02c:  add ebx, 0x8
 804c02f:  test eax, eax
 804c031:  mov edi, ebx
 804c033:  je 804b9d0
 804c039:  mov esi, DWORD PTR [ebp+0xc]
 804c03c:  not eax
 804c03e:  mov edi, ebx
 804c040:  and eax, 0xff
 804c045:  mov DWORD PTR [esp+0x4], eax
 804c049:  mov DWORD PTR [esp], ebx
 804c04c:  mov DWORD PTR [esp+0x8], esi
 804c050:  call 804ef50
 804c055:  jmp 804b9d0
 804c05a:  lea esi, [esi]
 804c060:  mov eax, DWORD PTR [ebp-0x5c]
 804c063:  shr eax, 0xc
 804c066:  cmp eax, 0xa
 804c069:  jbe 804c121
 804c06f:  mov eax, DWORD PTR [ebp-0x5c]
 804c072:  shr eax, 0xf
 804c075:  cmp eax, 0x4
 804c078:  ja 804c1a5
 804c07e:  add eax, 0x77
 804c081:  mov DWORD PTR [ebp-0x58], eax
 804c084:  jmp 804ba94
 804c089:  mov BYTE PTR [ebp-0xd], 0x0
 804c08d:  lea edx, [ebp-0xd]
 804c090:  lea eax, [edi+0x8]
 804c093:  mov DWORD PTR [esp+0x4], edx
 804c097:  mov DWORD PTR [esp+0xc], 0x0
 804c09f:  mov DWORD PTR [esp+0x8], 0x10
 804c0a7:  mov DWORD PTR [esp], eax
 804c0aa:  call 8057700
 804c0af:  cmp eax, DWORD PTR [ebp-0x68]
 804c0b2:  mov edx, eax
 804c0b4:  jbe 804c0c6
 804c0b6:  xchg ax, ax
 804c0b8:  sub eax, 0x1
 804c0bb:  mov BYTE PTR [eax], 0x30
 804c0be:  cmp eax, DWORD PTR [ebp-0x68]
 804c0c1:  ja 804c0b8
 804c0c3:  lea edx, [ebp-0x15]
 804c0c6:  mov eax, ds:0x80d2e6c
 804c0cb:  mov ecx, 0x80afcac
 804c0d0:  mov eax, DWORD PTR [eax]
 804c0d2:  test eax, eax
 804c0d4:  je 804c0d8
 804c0d6:  mov ecx, eax
 804c0d8:  and ebx, 0x2
 804c0db:  mov DWORD PTR [esp+0x10], edx
 804c0df:  mov DWORD PTR [esp+0xc], 0x80afd59
 804c0e7:  mov DWORD PTR [esp+0x8], ecx
 804c0eb:  mov DWORD PTR [esp+0x4], 0x80afe50
 804c0f3:  mov DWORD PTR [esp], ebx
 804c0f6:  call 8048df0
 804c0fb:  mov edx, DWORD PTR [edi+0x4]
 804c0fe:  jmp 804bb49
 804c103:  mov ecx, DWORD PTR [ebp-0x30]
 804c106:  or DWORD PTR [ecx+ebx+0x4], 0x1
 804c10b:  cmp DWORD PTR [ebp+0x8], 0x80d1d40
 804c112:  je 804c024
 804c118:  or DWORD PTR [ecx+0x4], 0x4
 804c11c:  jmp 804c024
 804c121:  add eax, 0x6e
 804c124:  mov DWORD PTR [ebp-0x58], eax
 804c127:  jmp 804ba94
 804c12c:  and ebx, 0x2
 804c12f:  mov DWORD PTR [esp+0x8], 0x80afd59
 804c137:  mov DWORD PTR [esp+0x4], 0x80c6765
 804c13f:  mov DWORD PTR [esp], ebx
 804c142:  call 8048df0
 804c147:  mov edx, DWORD PTR [edi+0x4]
 804c14a:  jmp 804bb49
 804c14f:  mov edx, 0xffffffe8
 804c155:  xor edi, edi
 804c157:  mov eax, gs:0x0
 804c15d:  mov DWORD PTR [eax+edx], 0xc
 804c164:  jmp 804b9d0
 804c169:  mov ecx, DWORD PTR [eax+0x10]
 804c16c:  test ecx, ecx
 804c16e:  je 804bfb4
 804c174:  mov edi, DWORD PTR [edx+0x10]
 804c177:  test edi, edi
 804c179:  je 804c66a
 804c17f:  mov edx, DWORD PTR [ebp-0x30]
 804c182:  mov eax, DWORD PTR [edx+0x14]
 804c185:  mov DWORD PTR [ecx+0x14], eax
 804c188:  mov eax, DWORD PTR [edx+0x14]
 804c18b:  mov DWORD PTR [eax+0x10], ecx
 804c18e:  jmp 804bfb4
 804c193:  nop
 804c194:  lea esi, [esi]
 804c198:  mov eax, DWORD PTR [ebp+0x8]
 804c19b:  call 8049d90
 804c1a0:  jmp 804baad
 804c1a5:  mov eax, DWORD PTR [ebp-0x5c]
 804c1a8:  mov DWORD PTR [ebp-0x58], 0x7e
 804c1af:  shr eax, 0x12
 804c1b2:  cmp eax, 0x2
 804c1b5:  ja 804ba94
 804c1bb:  add eax, 0x7c
 804c1be:  mov DWORD PTR [ebp-0x58], eax
 804c1c1:  jmp 804ba94
 804c1c6:  mov eax, ds:0x80d21bc
 804c1cb:  mov esi, DWORD PTR [ebp-0x5c]
 804c1ce:  sub eax, 0x1
 804c1d1:  cmp esi, DWORD PTR ds:0x80d21a8
 804c1d7:  mov DWORD PTR [ebp-0x4c], eax
 804c1da:  jb 804c3e0
 804c1e0:  mov eax, ds:0x80d21ac
 804c1e5:  cmp eax, DWORD PTR ds:0x80d21b0
 804c1eb:  jge 804c3e0
 804c1f1:  mov edx, DWORD PTR [ebp-0x4c]
 804c1f4:  mov eax, DWORD PTR [ebp-0x5c]
 804c1f7:  lea ebx, [edx+eax+0x4]
 804c1fb:  mov eax, edx
 804c1fd:  not eax
 804c1ff:  and ebx, eax
 804c201:  cmp DWORD PTR [ebp-0x5c], ebx
 804c204:  jb 804c5d4
 804c20a:  mov ecx, DWORD PTR [ebp+0x8]
 804c20d:  mov BYTE PTR [ebp-0x4d], 0x1
 804c211:  mov ecx, DWORD PTR [ecx+0x30]
 804c214:  mov edi, DWORD PTR [ecx+0x4]
 804c217:  mov DWORD PTR [ebp-0x64], ecx
 804c21a:  mov DWORD PTR [ebp-0x24], ecx
 804c21d:  and edi, 0xf8
 804c220:  cmp DWORD PTR [ebp+0x8], 0x80d1d40
 804c227:  je 804c477
 804c22d:  mov ebx, DWORD PTR [ebp-0x64]
 804c230:  and ebx, 0xfff00000
 804c236:  mov esi, DWORD PTR [ebx+0x8]
 804c239:  mov DWORD PTR [ebp-0x54], esi
 804c23c:  mov esi, DWORD PTR [ebp-0x2c]
 804c23f:  sub esi, edi
 804c241:  test esi, esi
 804c243:  jle 804c400
 804c249:  call 804f4a0
 804c24e:  sub eax, 0x1
 804c251:  lea edx, [esi+eax]
 804c254:  not eax
 804c256:  and edx, eax
 804c258:  mov eax, DWORD PTR [ebp-0x54]
 804c25b:  lea esi, [edx+eax]
 804c25e:  cmp esi, 0x100000
 804c264:  ja 804c400
 804c26a:  mov edx, DWORD PTR [ebx+0xc]
 804c26d:  cmp esi, edx
 804c26f:  ja 804c68b
 804c275:  mov ecx, DWORD PTR [ebp+0x8]
 804c278:  mov DWORD PTR [ebx+0x8], esi
 804c27b:  mov eax, ds:0x80d21dc
 804c280:  sub esi, DWORD PTR [ebp-0x54]
 804c283:  add DWORD PTR [ecx+0x444], esi
 804c289:  add eax, DWORD PTR [ebx+0x8]
 804c28c:  mov esi, DWORD PTR [ebp-0x24]
 804c28f:  add ebx, DWORD PTR [ebx+0x8]
 804c292:  sub ebx, DWORD PTR [ebp-0x24]
 804c295:  sub eax, DWORD PTR [ebp-0x54]
 804c298:  or ebx, 0x1
 804c29b:  mov ds:0x80d21dc, eax
 804c2a0:  mov DWORD PTR [esi+0x4], ebx
 804c2a3:  mov edx, DWORD PTR [ebp+0x8]
 804c2a6:  mov eax, DWORD PTR [edx+0x444]
 804c2ac:  cmp eax, DWORD PTR [edx+0x448]
 804c2b2:  jbe 804c2ba
 804c2b4:  mov DWORD PTR [edx+0x448], eax
 804c2ba:  mov ecx, DWORD PTR [ebp-0x64]
 804c2bd:  mov ebx, DWORD PTR [ecx+0x4]
 804c2c0:  and ebx, 0xf8
 804c2c3:  cmp DWORD PTR [ebp-0x2c], ebx
 804c2c6:  ja 804c14f
 804c2cc:  mov esi, DWORD PTR [ebp+0x8]
 804c2cf:  xor edx, edx
 804c2d1:  mov eax, DWORD PTR [ebp-0x5c]
 804c2d4:  add ecx, DWORD PTR [ebp-0x5c]
 804c2d7:  cmp esi, 0x80d1d40
 804c2dd:  setne dl
 804c2e0:  or eax, 0x1
 804c2e3:  shl edx, 0x2
 804c2e6:  or eax, edx
 804c2e8:  mov edx, DWORD PTR [ebp-0x64]
 804c2eb:  sub ebx, DWORD PTR [ebp-0x5c]
 804c2ee:  mov DWORD PTR [esi+0x30], ecx
 804c2f1:  or ebx, 0x1
 804c2f4:  mov DWORD PTR [edx+0x4], eax
 804c2f7:  mov DWORD PTR [ecx+0x4], ebx
 804c2fa:  mov ebx, edx
 804c2fc:  add ebx, 0x8
 804c2ff:  test ebx, ebx
 804c301:  je 804c310
 804c303:  mov eax, ds:0x80d21d4
 804c308:  test eax, eax
 804c30a:  jne 804c6bf
 804c310:  mov edi, ebx
 804c312:  jmp 804b9d0
 804c317:  mov ebx, DWORD PTR [ebp+0x8]
 804c31a:  mov ecx, eax
 804c31c:  xor edx, edx
 804c31e:  mov eax, DWORD PTR [ebp-0x5c]
 804c321:  add ecx, DWORD PTR [ebp-0x5c]
 804c324:  mov esi, DWORD PTR [ebp-0x64]
 804c327:  cmp ebx, 0x80d1d40
 804c32d:  setne dl
 804c330:  or eax, 0x1
 804c333:  sub edi, DWORD PTR [ebp-0x5c]
 804c336:  shl edx, 0x2
 804c339:  or eax, edx
 804c33b:  or edi, 0x1
 804c33e:  mov DWORD PTR [ebx+0x30], ecx
 804c341:  mov ebx, esi
 804c343:  mov DWORD PTR [esi+0x4], eax
 804c346:  mov DWORD PTR [ecx+0x4], edi
 804c349:  jmp 804bf3a
 804c34e:  mov ebx, DWORD PTR [ebp+0xc]
 804c351:  not eax
 804c353:  and eax, 0xff
 804c358:  mov DWORD PTR [esp+0x4], eax
 804c35c:  mov DWORD PTR [esp], edi
 804c35f:  mov DWORD PTR [esp+0x8], ebx
 804c363:  call 804ef50
 804c368:  jmp 804b9d0
 804c36d:  mov eax, ds:0x80d0d44
 804c372:  lea edi, [ebx+0x8]
 804c375:  mov edx, 0x80aff6c
 804c37a:  mov ecx, edi
 804c37c:  call 8049610
 804c381:  jmp 804b9b9
 804c386:  mov ecx, DWORD PTR [ebp-0x34]
 804c389:  cmp edi, 0x1ff
 804c38f:  mov eax, DWORD PTR [ebp-0x5c]
 804c392:  lea edx, [ebx+eax]
 804c395:  mov eax, DWORD PTR [ecx+0x8]
 804c398:  mov DWORD PTR [edx+0xc], ecx
 804c39b:  mov DWORD PTR [edx+0x8], eax
 804c39e:  mov DWORD PTR [eax+0xc], edx
 804c3a1:  mov DWORD PTR [ecx+0x8], edx
 804c3a4:  jbe 804c3b4
 804c3a6:  mov DWORD PTR [edx+0x10], 0x0
 804c3ad:  mov DWORD PTR [edx+0x14], 0x0
 804c3b4:  xor eax, eax
 804c3b6:  cmp DWORD PTR [ebp+0x8], 0x80d1d40
 804c3bd:  mov DWORD PTR [edx+edi], edi
 804c3c0:  setne al
 804c3c3:  or DWORD PTR [ebp-0x5c], 0x1
 804c3c7:  shl eax, 0x2
 804c3ca:  or DWORD PTR [ebp-0x5c], eax
 804c3cd:  mov eax, edi
 804c3cf:  mov esi, DWORD PTR [ebp-0x5c]
 804c3d2:  or eax, 0x1
 804c3d5:  mov DWORD PTR [ebx+0x4], esi
 804c3d8:  mov DWORD PTR [edx+0x4], eax
 804c3db:  jmp 804bf3a
 804c3e0:  mov BYTE PTR [ebp-0x4d], 0x0
 804c3e4:  jmp 804c220
 804c3e9:  mov ecx, DWORD PTR [ebp-0x30]
 804c3ec:  mov edx, 0x80afcd3
 804c3f1:  mov eax, ds:0x80d0d44
 804c3f6:  call 8049610
 804c3fb:  jmp 804bfb4
 804c400:  mov eax, DWORD PTR [ebp-0x5c]
 804c403:  mov edx, DWORD PTR ds:0x80d21a4
 804c409:  add eax, 0x20
 804c40c:  call 8049760
 804c411:  test eax, eax
 804c413:  mov edx, eax
 804c415:  je 804c826
 804c41b:  mov eax, DWORD PTR [ebp+0x8]
 804c41e:  mov ecx, DWORD PTR [ebp+0x8]
 804c421:  mov DWORD PTR [edx+0x4], ebx
 804c424:  lea ebx, [edx+0x10]
 804c427:  mov DWORD PTR [edx], eax
 804c429:  mov eax, DWORD PTR [edx+0x8]
 804c42c:  add DWORD PTR [ecx+0x444], eax
 804c432:  mov eax, DWORD PTR [edx+0x8]
 804c435:  lea edx, [edi-0x8]
 804c438:  mov DWORD PTR [ecx+0x30], ebx
 804c43b:  mov ecx, DWORD PTR [ebp-0x64]
 804c43e:  add DWORD PTR ds:0x80d21dc, eax
 804c444:  sub eax, 0x10
 804c447:  or eax, 0x1
 804c44a:  add ecx, edx
 804c44c:  mov DWORD PTR [ebx+0x4], eax
 804c44f:  lea eax, [edi-0x10]
 804c452:  cmp eax, 0xf
 804c455:  mov DWORD PTR [ecx+0x4], 0x1
 804c45c:  ja 804c7f0
 804c462:  mov esi, DWORD PTR [ebp-0x64]
 804c465:  mov eax, edx
 804c467:  or eax, 0x1
 804c46a:  mov DWORD PTR [ecx], edx
 804c46c:  mov DWORD PTR [ebp-0x64], ebx
 804c46f:  mov DWORD PTR [esi+0x4], eax
 804c472:  jmp 804c2a3
 804c477:  mov eax, ds:0x80d21a4
 804c47c:  mov ecx, DWORD PTR [ebp-0x5c]
 804c47f:  lea edx, [ecx+eax+0x10]
 804c483:  mov eax, ds:0x80d1d44
 804c488:  and eax, 0x2
 804c48b:  jne 804c48f
 804c48d:  sub edx, edi
 804c48f:  mov ebx, DWORD PTR [ebp-0x4c]
 804c492:  mov ecx, DWORD PTR [ebp-0x4c]
 804c495:  not ebx
 804c497:  lea esi, [edx+ecx]
 804c49a:  and esi, ebx
 804c49c:  test esi, esi
 804c49e:  mov DWORD PTR [ebp-0x20], ebx
 804c4a1:  mov DWORD PTR [ebp-0x1c], esi
 804c4a4:  jle 804c75c
 804c4aa:  mov DWORD PTR [esp], esi
 804c4ad:  call DWORD PTR ds:0x80d0d30
 804c4b3:  test eax, eax
 804c4b5:  mov ebx, eax
 804c4b7:  je 804c754
 804c4bd:  mov eax, ds:0x80d1d28
 804c4c2:  test eax, eax
 804c4c4:  je 804c4c8
 804c4c6:  call eax
 804c4c8:  mov DWORD PTR [ebp-0x44], 0x0
 804c4cf:  mov edx, 0x1
 804c4d4:  mov eax, ds:0x80d21cc
 804c4d9:  test eax, eax
 804c4db:  jne 804c4e3
 804c4dd:  mov DWORD PTR ds:0x80d21cc, ebx
 804c4e3:  mov eax, DWORD PTR [ebp-0x64]
 804c4e6:  mov ecx, esi
 804c4e8:  add ecx, DWORD PTR ds:0x80d2184
 804c4ee:  add eax, edi
 804c4f0:  test dl, dl
 804c4f2:  mov DWORD PTR ds:0x80d2184, ecx
 804c4f8:  je 804c502
 804c4fa:  cmp eax, ebx
 804c4fc:  je 804c83e
 804c502:  test edi, edi
 804c504:  setne BYTE PTR [ebp-0x3d]
 804c508:  test BYTE PTR ds:0x80d1d44, 0x2
 804c50f:  jne 804c866
 804c515:  cmp BYTE PTR [ebp-0x3d], 0x0
 804c519:  je 804c530
 804c51b:  cmp eax, ebx
 804c51d:  ja 804c5c6
 804c523:  mov edx, ebx
 804c525:  sub edx, eax
 804c527:  mov eax, edx
 804c529:  add eax, ecx
 804c52b:  mov ds:0x80d2184, eax
 804c530:  mov edx, ebx
 804c532:  xor eax, eax
 804c534:  and edx, 0x7
 804c537:  mov DWORD PTR [ebp-0x48], ebx
 804c53a:  je 804c549
 804c53c:  mov eax, 0x8
 804c541:  sub eax, edx
 804c543:  lea ecx, [ebx+eax]
 804c546:  mov DWORD PTR [ebp-0x48], ecx
 804c549:  lea edx, [eax+edi]
 804c54c:  lea eax, [edx+esi]
 804c54f:  lea eax, [ebx+eax]
 804c552:  sub edx, eax
 804c554:  add eax, DWORD PTR [ebp-0x4c]
 804c557:  and eax, DWORD PTR [ebp-0x20]
 804c55a:  lea ebx, [edx+eax]
 804c55d:  mov DWORD PTR [esp], ebx
 804c560:  call DWORD PTR ds:0x80d0d30
 804c566:  test eax, eax
 804c568:  mov DWORD PTR [ebp-0x44], eax
 804c56b:  je 804c5ab
 804c56d:  mov eax, ds:0x80d1d28
 804c572:  test eax, eax
 804c574:  je 804c578
 804c576:  call eax
 804c578:  mov edx, ebx
 804c57a:  mov eax, DWORD PTR [ebp-0x44]
 804c57d:  mov esi, DWORD PTR [ebp-0x48]
 804c580:  add eax, ebx
 804c582:  sub eax, esi
 804c584:  or eax, 0x1
 804c587:  mov DWORD PTR [esi+0x4], eax
 804c58a:  add DWORD PTR ds:0x80d2184, edx
 804c590:  cmp BYTE PTR [ebp-0x3d], 0x0
 804c594:  mov DWORD PTR ds:0x80d1d70, esi
 804c59a:  jne 804c889
 804c5a0:  mov eax, DWORD PTR [ebp-0x48]
 804c5a3:  mov DWORD PTR [ebp-0x64], eax
 804c5a6:  jmp 804c2a3
 804c5ab:  mov DWORD PTR [esp], 0x0
 804c5b2:  call DWORD PTR ds:0x80d0d30
 804c5b8:  mov DWORD PTR [ebp-0x44], eax
 804c5bb:  mov eax, DWORD PTR [ebp-0x44]
 804c5be:  xor ebx, ebx
 804c5c0:  xor edx, edx
 804c5c2:  test eax, eax
 804c5c4:  jne 804c57a
 804c5c6:  mov ebx, DWORD PTR ds:0x80d1d70
 804c5cc:  mov DWORD PTR [ebp-0x64], ebx
 804c5cf:  jmp 804c2a3
 804c5d4:  mov DWORD PTR [esp+0x14], 0x0
 804c5dc:  mov DWORD PTR [esp+0x10], 0xffffffff
 804c5e4:  mov DWORD PTR [esp+0xc], 0x22
 804c5ec:  mov DWORD PTR [esp+0x8], 0x3
 804c5f4:  mov DWORD PTR [esp+0x4], ebx
 804c5f8:  mov DWORD PTR [esp], 0x0
 804c5ff:  call 8050000
 804c604:  cmp eax, 0xff
 804c607:  mov edx, eax
 804c609:  je 804c64f
 804c60b:  mov eax, ebx
 804c60d:  or eax, 0x2
 804c610:  mov DWORD PTR [edx+0x4], eax
 804c613:  mov eax, ds:0x80d21ac
 804c618:  add eax, 0x1
 804c61b:  cmp eax, DWORD PTR ds:0x80d21b4
 804c621:  mov ds:0x80d21ac, eax
 804c626:  jle 804c62d
 804c628:  mov ds:0x80d21b4, eax
 804c62d:  mov eax, ebx
 804c62f:  add eax, DWORD PTR ds:0x80d21c0
 804c635:  cmp eax, DWORD PTR ds:0x80d21c4
 804c63b:  mov ds:0x80d21c0, eax
 804c640:  jbe 804c647
 804c642:  mov ds:0x80d21c4, eax
 804c647:  lea ebx, [edx+0x8]
 804c64a:  jmp 804c2ff
 804c64f:  mov ebx, DWORD PTR [ebp+0x8]
 804c652:  mov BYTE PTR [ebp-0x4d], 0x1
 804c656:  mov ebx, DWORD PTR [ebx+0x30]
 804c659:  mov edi, DWORD PTR [ebx+0x4]
 804c65c:  mov DWORD PTR [ebp-0x64], ebx
 804c65f:  mov DWORD PTR [ebp-0x24], ebx
 804c662:  and edi, 0xf8
 804c665:  jmp 804c220
 804c66a:  cmp eax, ecx
 804c66c:  je 804c6e0
 804c66e:  mov DWORD PTR [edx+0x10], ecx
 804c671:  mov ecx, DWORD PTR [ebp-0x30]
 804c674:  mov eax, DWORD PTR [ecx+0x14]
 804c677:  mov DWORD PTR [edx+0x14], eax
 804c67a:  mov eax, DWORD PTR [ecx+0x10]
 804c67d:  mov DWORD PTR [eax+0x14], edx
 804c680:  mov eax, DWORD PTR [ecx+0x14]
 804c683:  mov DWORD PTR [eax+0x10], edx
 804c686:  jmp 804bfb4
 804c68b:  mov eax, esi
 804c68d:  sub eax, edx
 804c68f:  mov DWORD PTR [esp+0x4], eax
 804c693:  lea eax, [ebx+edx]
 804c696:  mov DWORD PTR [esp+0x8], 0x3
 804c69e:  mov DWORD PTR [esp], eax
 804c6a1:  call 8050070
 804c6a6:  test eax, eax
 804c6a8:  jne 804c400
 804c6ae:  mov edx, DWORD PTR [ebp+0x8]
 804c6b1:  mov DWORD PTR [ebx+0xc], esi
 804c6b4:  mov edx, DWORD PTR [edx+0x30]
 804c6b7:  mov DWORD PTR [ebp-0x64], edx
 804c6ba:  jmp 804c275
 804c6bf:  mov ecx, DWORD PTR [ebp+0xc]
 804c6c2:  not eax
 804c6c4:  mov edi, ebx
 804c6c6:  and eax, 0xff
 804c6cb:  mov DWORD PTR [esp+0x4], eax
 804c6cf:  mov DWORD PTR [esp], ebx
 804c6d2:  mov DWORD PTR [esp+0x8], ecx
 804c6d6:  call 804ef50
 804c6db:  jmp 804b9d0
 804c6e0:  mov DWORD PTR [edx+0x14], edx
 804c6e3:  mov DWORD PTR [edx+0x10], edx
 804c6e6:  jmp 804bfb4
 804c6eb:  mov edx, DWORD PTR [eax+0x8]
 804c6ee:  mov ebx, eax
 804c6f0:  jmp 804bef2
 804c6f5:  mov ecx, DWORD PTR [ebx+0x10]
 804c6f8:  test ecx, ecx
 804c6fa:  je 804bf1f
 804c700:  mov eax, DWORD PTR [edx+0x10]
 804c703:  test eax, eax
 804c705:  je 804c736
 804c707:  mov eax, DWORD PTR [ebx+0x14]
 804c70a:  mov DWORD PTR [ecx+0x14], eax
 804c70d:  mov eax, DWORD PTR [ebx+0x14]
 804c710:  mov DWORD PTR [eax+0x10], ecx
 804c713:  jmp 804bf1f
 804c718:  mov eax, ds:0x80d0d44
 804c71d:  mov ecx, ebx
 804c71f:  mov edx, 0x80afcd3
 804c724:  call 8049610
 804c729:  jmp 804bf1f
 804c72e:  mov edx, DWORD PTR [ebx+0x8]
 804c731:  jmp 804bef2
 804c736:  cmp ebx, ecx
 804c738:  je 804c792
 804c73a:  mov eax, DWORD PTR [ebx+0x14]
 804c73d:  mov DWORD PTR [edx+0x10], ecx
 804c740:  mov DWORD PTR [edx+0x14], eax
 804c743:  mov eax, DWORD PTR [ebx+0x10]
 804c746:  mov DWORD PTR [eax+0x14], edx
 804c749:  mov eax, DWORD PTR [ebx+0x14]
 804c74c:  mov DWORD PTR [eax+0x10], edx
 804c74f:  jmp 804bf1f
 804c754:  mov eax, ds:0x80d1d44
 804c759:  and eax, 0x2
 804c75c:  test eax, eax
 804c75e:  jne 804c770
 804c760:  mov ebx, DWORD PTR [ebp-0x4c]
 804c763:  lea eax, [edi+ebx]
 804c766:  add eax, esi
 804c768:  mov esi, DWORD PTR [ebp-0x20]
 804c76b:  and eax, esi
 804c76d:  mov DWORD PTR [ebp-0x1c], eax
 804c770:  mov esi, DWORD PTR [ebp-0x1c]
 804c773:  cmp esi, 0xfffff
 804c779:  ja 804c780
 804c77b:  mov esi, 0x100000
 804c780:  cmp DWORD PTR [ebp-0x5c], esi
 804c783:  jb 804c79d
 804c785:  mov eax, ds:0x80d1d70
 804c78a:  mov DWORD PTR [ebp-0x64], eax
 804c78d:  jmp 804c2a3
 804c792:  mov DWORD PTR [edx+0x14], edx
 804c795:  mov DWORD PTR [edx+0x10], edx
 804c798:  jmp 804bf1f
 804c79d:  mov DWORD PTR [esp+0x14], 0x0
 804c7a5:  mov DWORD PTR [esp+0x10], 0xffffffff
 804c7ad:  mov DWORD PTR [esp+0xc], 0x22
 804c7b5:  mov DWORD PTR [esp+0x8], 0x3
 804c7bd:  mov DWORD PTR [esp+0x4], esi
 804c7c1:  mov DWORD PTR [esp], 0x0
 804c7c8:  call 8050000
 804c7cd:  cmp eax, 0xff
 804c7d0:  mov ebx, eax
 804c7d2:  je 804c858
 804c7d8:  or DWORD PTR ds:0x80d1d44, 0x2
 804c7df:  test eax, eax
 804c7e1:  je 804c84a
 804c7e3:  add eax, esi
 804c7e5:  mov DWORD PTR [ebp-0x44], eax
 804c7e8:  sete dl
 804c7eb:  jmp 804c4d4
 804c7f0:  mov ebx, DWORD PTR [ebp-0x64]
 804c7f3:  mov DWORD PTR [ecx], 0x8
 804c7f9:  mov DWORD PTR [ebx+eax+0x4], 0x9
 804c801:  or eax, 0x5
 804c804:  mov DWORD PTR [ebx+0x4], eax
 804c807:  mov eax, ebx
 804c809:  add eax, 0x8
 804c80c:  mov DWORD PTR [esp+0x4], eax
 804c810:  mov esi, DWORD PTR [ebp+0x8]
 804c813:  mov DWORD PTR [esp], esi
 804c816:  call 804ac70
 804c81b:  mov eax, DWORD PTR [esi+0x30]
 804c81e:  mov DWORD PTR [ebp-0x64], eax
 804c821:  jmp 804c2a3
 804c826:  cmp BYTE PTR [ebp-0x4d], 0x0
 804c82a:  je 804c1f1
 804c830:  mov eax, DWORD PTR [ebp+0x8]
 804c833:  mov eax, DWORD PTR [eax+0x30]
 804c836:  mov DWORD PTR [ebp-0x64], eax
 804c839:  jmp 804c2a3
 804c83e:  mov edx, DWORD PTR [ebp-0x64]
 804c841:  lea eax, [esi+edi]
 804c844:  or eax, 0x1
 804c847:  mov DWORD PTR [edx+0x4], eax
 804c84a:  mov ecx, DWORD PTR ds:0x80d1d70
 804c850:  mov DWORD PTR [ebp-0x64], ecx
 804c853:  jmp 804c2a3
 804c858:  mov edx, DWORD PTR ds:0x80d1d70
 804c85e:  mov DWORD PTR [ebp-0x64], edx
 804c861:  jmp 804c2a3
 804c866:  test dl, dl
 804c868:  mov DWORD PTR [ebp-0x48], ebx
 804c86b:  je 804c5bb
 804c871:  mov DWORD PTR [esp], 0x0
 804c878:  call DWORD PTR ds:0x80d0d30
 804c87e:  mov DWORD PTR [ebp-0x48], ebx
 804c881:  mov DWORD PTR [ebp-0x44], eax
 804c884:  jmp 804c5bb
 804c889:  mov ecx, DWORD PTR [ebp-0x64]
 804c88c:  lea eax, [edi-0x10]
 804c88f:  mov edx, eax
 804c891:  or edx, 0x1
 804c894:  cmp eax, 0xf
 804c897:  mov DWORD PTR [ecx+0x4], edx
 804c89a:  mov DWORD PTR [ecx+eax+0x4], 0x9
 804c8a2:  mov DWORD PTR [ecx+eax+0xc], 0x9
 804c8aa:  ja 804c8b7
 804c8ac:  mov ebx, DWORD PTR [ebp-0x48]
 804c8af:  mov DWORD PTR [ebp-0x64], ebx
 804c8b2:  jmp 804c2a3
 804c8b7:  mov eax, DWORD PTR [ebp-0x64]
 804c8ba:  mov DWORD PTR [esp], 0x80d1d40
 804c8c1:  add eax, 0x8
 804c8c4:  mov DWORD PTR [esp+0x4], eax
 804c8c8:  call 804ac70
 804c8cd:  mov esi, DWORD PTR ds:0x80d1d70
 804c8d3:  mov DWORD PTR [ebp-0x64], esi
 804c8d6:  jmp 804c2a3
 804c8db:  nop
 804c8dc:  lea esi, [esi]

0804c8e0 <malloc_check>:
 804c8e0:  push ebp
 804c8e1:  mov ebp, esp
 804c8e3:  push edi
 804c8e4:  push esi
 804c8e5:  push ebx
 804c8e6:  sub esp, 0x8
 804c8e9:  mov ebx, DWORD PTR [ebp+0x8]
 804c8ec:  cmp ebx, 0xff
 804c8ef:  je 804c9d1
 804c8f5:  xor eax, eax
 804c8f7:  mov ecx, 0x1
 804c8fc:  cmp DWORD PTR gs:0xc, 0x0
 804c904:  je 804c907
 804c906:  cmpxchg DWORD PTR ds:0x80d1d40, ecx
 804c90e:  jne 804ebb6
 804c914:  call 8049bb0
 804c919:  xor edi, edi
 804c91b:  xor edx, edx
 804c91d:  test eax, eax
 804c91f:  js 804c938
 804c921:  lea eax, [ebx+0x1]
 804c924:  mov DWORD PTR [esp+0x4], eax
 804c928:  mov DWORD PTR [esp], 0x80d1d40
 804c92f:  call 804b960
 804c934:  mov edx, eax
 804c936:  mov edi, eax
 804c938:  cmp DWORD PTR gs:0xc, 0x0
 804c940:  je 804c943
 804c942:  sub DWORD PTR ds:0x80d1d40, 0x1
 804c94a:  jne 804ebc6
 804c950:  test edx, edx
 804c952:  je 804c9b7
 804c954:  lea esi, [edx-0x8]
 804c957:  mov edx, DWORD PTR [esi+0x4]
 804c95a:  mov eax, edx
 804c95c:  and eax, 0x2
 804c95f:  cmp eax, 0x1
 804c962:  sbb eax, eax
 804c964:  and edx, 0xf8
 804c967:  and eax, 0xfc
 804c96a:  add eax, 0x9
 804c96d:  sub edx, eax
 804c96f:  cmp ebx, edx
 804c971:  jae 804c9a8
 804c973:  mov ecx, edx
 804c975:  sub ecx, ebx
 804c977:  cmp ecx, 0xff
 804c97d:  lea eax, [edi+edx]
 804c980:  ja 804c99b
 804c982:  jmp 804c9c8
 804c984:  lea esi, [esi]
 804c988:  sub ecx, 0xff
 804c98e:  sub eax, 0xff
 804c993:  cmp ecx, 0xff
 804c999:  jbe 804c9c8
 804c99b:  sub edx, 0xff
 804c9a1:  cmp ebx, edx
 804c9a3:  mov BYTE PTR [eax], 0xff
 804c9a6:  jb 804c988
 804c9a8:  mov eax, esi
 804c9aa:  mov edx, edi
 804c9ac:  shr eax, 0xb
 804c9af:  shr esi, 0x3
 804c9b2:  xor eax, esi
 804c9b4:  mov BYTE PTR [edi+ebx], al
 804c9b7:  add esp, 0x8
 804c9ba:  mov eax, edx
 804c9bc:  pop ebx
 804c9bd:  pop esi
 804c9be:  pop edi
 804c9bf:  pop ebp
 804c9c0:  ret
 804c9c1:  lea esi, [esi]
 804c9c8:  mov eax, edx
 804c9ca:  sub al, bl
 804c9cc:  mov BYTE PTR [edi+edx], al
 804c9cf:  jmp 804c9a8
 804c9d1:  mov edx, 0xffffffe8
 804c9d7:  mov eax, gs:0x0
 804c9dd:  mov DWORD PTR [eax+edx], 0xc
 804c9e4:  xor edx, edx
 804c9e6:  jmp 804c9b7
 804c9e8:  nop
 804c9e9:  lea esi, [esi]

0804c9f0 <_int_memalign>:
 804c9f0:  push ebp
 804c9f1:  mov ebp, esp
 804c9f3:  sub esp, 0x20
 804c9f6:  mov DWORD PTR [ebp-0xc], ebx
 804c9f9:  mov ebx, DWORD PTR [ebp+0xc]
 804c9fc:  mov eax, DWORD PTR [ebp+0x8]
 804c9ff:  mov DWORD PTR [ebp-0x8], esi
 804ca02:  mov edx, DWORD PTR [ebp+0x10]
 804ca05:  mov DWORD PTR [ebp-0x4], edi
 804ca08:  cmp ebx, 0x8
 804ca0b:  mov DWORD PTR [ebp-0x18], eax
 804ca0e:  jbe 804cb90
 804ca14:  cmp ebx, 0xf
 804ca17:  ja 804ca48
 804ca19:  mov ebx, 0x10
 804ca1e:  cmp edx, 0xdf
 804ca21:  jbe 804ca6d
 804ca23:  mov eax, gs:0x0
 804ca29:  mov edx, 0xffffffe8
 804ca2f:  mov DWORD PTR [eax+edx], 0xc
 804ca36:  xor eax, eax
 804ca38:  mov ebx, DWORD PTR [ebp-0xc]
 804ca3b:  mov esi, DWORD PTR [ebp-0x8]
 804ca3e:  mov edi, DWORD PTR [ebp-0x4]
 804ca41:  mov esp, ebp
 804ca43:  pop ebp
 804ca44:  ret
 804ca45:  lea esi, [esi]
 804ca48:  lea eax, [ebx-0x1]
 804ca4b:  test eax, ebx
 804ca4d:  je 804ca1e
 804ca4f:  cmp ebx, 0x10
 804ca52:  je 804ca1e
 804ca54:  mov eax, 0x10
 804ca59:  lea esi, [esi]
 804ca60:  add eax, eax
 804ca62:  cmp ebx, eax
 804ca64:  ja 804ca60
 804ca66:  cmp edx, 0xdf
 804ca69:  mov ebx, eax
 804ca6b:  ja 804ca23
 804ca6d:  lea eax, [edx+0xb]
 804ca70:  cmp eax, 0xf
 804ca73:  mov DWORD PTR [ebp-0x14], 0x10
 804ca7a:  ja 804cba8
 804ca80:  mov edx, DWORD PTR [ebp-0x14]
 804ca83:  lea eax, [edx+ebx+0x10]
 804ca87:  mov DWORD PTR [esp+0x4], eax
 804ca8b:  mov ecx, DWORD PTR [ebp-0x18]
 804ca8e:  mov DWORD PTR [esp], ecx
 804ca91:  call 804b960
 804ca96:  mov ecx, eax
 804ca98:  xor eax, eax
 804ca9a:  test ecx, ecx
 804ca9c:  je 804ca38
 804ca9e:  lea eax, [ecx-0x8]
 804caa1:  xor edx, edx
 804caa3:  mov DWORD PTR [ebp-0x10], eax
 804caa6:  mov eax, ecx
 804caa8:  div ebx
 804caaa:  test edx, edx
 804caac:  je 804cb2a
 804caae:  mov edx, ebx
 804cab0:  neg edx
 804cab2:  lea eax, [ecx+ebx-0x1]
 804cab6:  and eax, edx
 804cab8:  lea edi, [eax-0x8]
 804cabb:  mov esi, edi
 804cabd:  sub esi, DWORD PTR [ebp-0x10]
 804cac0:  cmp esi, 0xf
 804cac3:  ja 804cacc
 804cac5:  add edi, ebx
 804cac7:  mov esi, edi
 804cac9:  sub esi, DWORD PTR [ebp-0x10]
 804cacc:  mov edx, DWORD PTR [ebp-0x10]
 804cacf:  mov eax, DWORD PTR [edx+0x4]
 804cad2:  mov edx, eax
 804cad4:  and edx, 0xf8
 804cad7:  sub edx, esi
 804cad9:  test al, 0x2
 804cadb:  jne 804cbb8
 804cae1:  cmp DWORD PTR [ebp-0x18], 0x80d1d40
 804cae8:  je 804cbcb
 804caee:  mov ecx, DWORD PTR [ebp-0x10]
 804caf1:  mov eax, edx
 804caf3:  or eax, 0x5
 804caf6:  mov DWORD PTR [edi+0x4], eax
 804caf9:  mov eax, 0x4
 804cafe:  or DWORD PTR [edi+edx+0x4], 0x1
 804cb03:  mov edx, DWORD PTR [ecx+0x4]
 804cb06:  and edx, 0x7
 804cb09:  or eax, edx
 804cb0b:  mov edx, DWORD PTR [ebp-0x10]
 804cb0e:  or eax, esi
 804cb10:  mov DWORD PTR [edx+0x4], eax
 804cb13:  mov eax, edx
 804cb15:  add eax, 0x8
 804cb18:  mov DWORD PTR [esp+0x4], eax
 804cb1c:  mov ecx, DWORD PTR [ebp-0x18]
 804cb1f:  mov DWORD PTR [esp], ecx
 804cb22:  call 804ac70
 804cb27:  mov DWORD PTR [ebp-0x10], edi
 804cb2a:  mov edx, DWORD PTR [ebp-0x10]
 804cb2d:  mov eax, DWORD PTR [edx+0x4]
 804cb30:  test al, 0x2
 804cb32:  jne 804cb84
 804cb34:  mov ecx, eax
 804cb36:  mov eax, DWORD PTR [ebp-0x14]
 804cb39:  and ecx, 0xf8
 804cb3c:  add eax, 0x10
 804cb3f:  cmp ecx, eax
 804cb41:  jbe 804cb84
 804cb43:  add edx, DWORD PTR [ebp-0x14]
 804cb46:  xor eax, eax
 804cb48:  cmp DWORD PTR [ebp-0x18], 0x80d1d40
 804cb4f:  setne al
 804cb52:  sub ecx, DWORD PTR [ebp-0x14]
 804cb55:  shl eax, 0x2
 804cb58:  or ecx, 0x1
 804cb5b:  or ecx, eax
 804cb5d:  mov DWORD PTR [edx+0x4], ecx
 804cb60:  mov ecx, DWORD PTR [ebp-0x10]
 804cb63:  add edx, 0x8
 804cb66:  mov eax, DWORD PTR [ecx+0x4]
 804cb69:  and eax, 0x7
 804cb6c:  or DWORD PTR [ebp-0x14], eax
 804cb6f:  mov eax, DWORD PTR [ebp-0x14]
 804cb72:  mov DWORD PTR [ecx+0x4], eax
 804cb75:  mov DWORD PTR [esp+0x4], edx
 804cb79:  mov edx, DWORD PTR [ebp-0x18]
 804cb7c:  mov DWORD PTR [esp], edx
 804cb7f:  call 804ac70
 804cb84:  mov eax, DWORD PTR [ebp-0x10]
 804cb87:  add eax, 0x8
 804cb8a:  jmp 804ca38
 804cb8f:  nop
 804cb90:  mov DWORD PTR [ebp+0xc], edx
 804cb93:  mov ebx, DWORD PTR [ebp-0xc]
 804cb96:  mov esi, DWORD PTR [ebp-0x8]
 804cb99:  mov edi, DWORD PTR [ebp-0x4]
 804cb9c:  mov esp, ebp
 804cb9e:  pop ebp
 804cb9f:  jmp 804b960
 804cba4:  lea esi, [esi]
 804cba8:  and eax, 0xf8
 804cbab:  mov DWORD PTR [ebp-0x14], eax
 804cbae:  jmp 804ca80
 804cbb3:  nop
 804cbb4:  lea esi, [esi]
 804cbb8:  add esi, DWORD PTR [ecx-0x8]
 804cbbb:  or edx, 0x2
 804cbbe:  mov DWORD PTR [edi+0x4], edx
 804cbc1:  lea eax, [edi+0x8]
 804cbc4:  mov DWORD PTR [edi], esi
 804cbc6:  jmp 804ca38
 804cbcb:  mov ecx, DWORD PTR [ebp-0x10]
 804cbce:  mov eax, edx
 804cbd0:  or eax, 0x1
 804cbd3:  mov DWORD PTR [edi+0x4], eax
 804cbd6:  xor eax, eax
 804cbd8:  or DWORD PTR [edi+edx+0x4], 0x1
 804cbdd:  mov edx, DWORD PTR [ecx+0x4]
 804cbe0:  and edx, 0x7
 804cbe3:  jmp 804cb09
 804cbe8:  nop
 804cbe9:  lea esi, [esi]

0804cbf0 <_int_realloc>:
 804cbf0:  push ebp
 804cbf1:  mov ebp, esp
 804cbf3:  push edi
 804cbf4:  push esi
 804cbf5:  push ebx
 804cbf6:  sub esp, 0x20
 804cbf9:  mov eax, DWORD PTR [ebp+0x10]
 804cbfc:  cmp eax, 0xdf
 804cbff:  ja 804cf50
 804cc05:  add eax, 0xb
 804cc08:  cmp eax, 0xf
 804cc0b:  mov DWORD PTR [ebp-0x18], 0x10
 804cc12:  ja 804cce8
 804cc18:  mov eax, DWORD PTR [ebp+0xc]
 804cc1b:  mov edx, 0x80afd75
 804cc20:  sub eax, 0x8
 804cc23:  mov ebx, DWORD PTR [eax+0x4]
 804cc26:  test al, 0x7
 804cc28:  mov DWORD PTR [ebp-0x14], eax
 804cc2b:  mov ecx, ebx
 804cc2d:  jne 804cf78
 804cc33:  cmp ebx, 0x8
 804cc36:  jbe 804d008
 804cc3c:  mov esi, DWORD PTR [ebp+0x8]
 804cc3f:  mov edx, ebx
 804cc41:  and edx, 0xf8
 804cc44:  mov DWORD PTR [ebp-0x10], edx
 804cc47:  mov edx, DWORD PTR [esi+0x444]
 804cc4d:  cmp DWORD PTR [ebp-0x10], edx
 804cc50:  jae 804d008
 804cc56:  test bl, 0x2
 804cc59:  je 804ccf8
 804cc5f:  mov eax, DWORD PTR [ebp-0x14]
 804cc62:  mov ecx, DWORD PTR [ebp-0x18]
 804cc65:  mov esi, DWORD PTR [eax]
 804cc67:  mov eax, ds:0x80d21bc
 804cc6c:  sub eax, 0x1
 804cc6f:  lea edx, [eax+esi+0x4]
 804cc73:  not eax
 804cc75:  lea ebx, [edx+ecx]
 804cc78:  and ebx, eax
 804cc7a:  mov edi, ebx
 804cc7c:  sub edi, esi
 804cc7e:  cmp edi, DWORD PTR [ebp-0x10]
 804cc81:  je 804ccdb
 804cc83:  mov DWORD PTR [esp+0xc], 0x1
 804cc8b:  mov DWORD PTR [esp+0x8], ebx
 804cc8f:  mov eax, DWORD PTR [ebp-0x10]
 804cc92:  add eax, esi
 804cc94:  mov DWORD PTR [esp+0x4], eax
 804cc98:  sub DWORD PTR [ebp-0x14], esi
 804cc9b:  mov eax, DWORD PTR [ebp-0x14]
 804cc9e:  mov DWORD PTR [esp], eax
 804cca1:  call 8050120
 804cca6:  cmp eax, 0xff
 804cca9:  je 804ce88
 804ccaf:  lea edx, [eax+esi]
 804ccb2:  or edi, 0x2
 804ccb5:  mov DWORD PTR [edx+0x4], edi
 804ccb8:  mov eax, ebx
 804ccba:  sub eax, DWORD PTR [ebp-0x10]
 804ccbd:  add eax, DWORD PTR ds:0x80d21c0
 804ccc3:  cmp eax, DWORD PTR ds:0x80d21c4
 804ccc9:  mov ds:0x80d21c0, eax
 804ccce:  jbe 804ccd5
 804ccd0:  mov ds:0x80d21c4, eax
 804ccd5:  add edx, 0x8
 804ccd8:  mov DWORD PTR [ebp+0xc], edx
 804ccdb:  mov eax, DWORD PTR [ebp+0xc]
 804ccde:  add esp, 0x20
 804cce1:  pop ebx
 804cce2:  pop esi
 804cce3:  pop edi
 804cce4:  pop ebp
 804cce5:  ret
 804cce6:  xchg ax, ax
 804cce8:  and eax, 0xf8
 804cceb:  mov DWORD PTR [ebp-0x18], eax
 804ccee:  jmp 804cc18
 804ccf3:  nop
 804ccf4:  lea esi, [esi]
 804ccf8:  mov esi, DWORD PTR [ebp-0x14]
 804ccfb:  add esi, DWORD PTR [ebp-0x10]
 804ccfe:  mov eax, DWORD PTR [esi+0x4]
 804cd01:  cmp eax, 0x8
 804cd04:  jbe 804cf6f
 804cd0a:  and eax, 0xf8
 804cd0d:  cmp edx, eax
 804cd0f:  jbe 804cf6f
 804cd15:  mov edi, DWORD PTR [ebp-0x10]
 804cd18:  cmp DWORD PTR [ebp-0x18], edi
 804cd1b:  ja 804cd60
 804cd1d:  mov edx, edi
 804cd1f:  sub edx, DWORD PTR [ebp-0x18]
 804cd22:  cmp edx, 0xf
 804cd25:  ja 804ce30
 804cd2b:  xor eax, eax
 804cd2d:  cmp DWORD PTR [ebp+0x8], 0x80d1d40
 804cd34:  setne al
 804cd37:  and ecx, 0x7
 804cd3a:  or ecx, edi
 804cd3c:  shl eax, 0x2
 804cd3f:  or eax, ecx
 804cd41:  mov ecx, DWORD PTR [ebp-0x14]
 804cd44:  mov DWORD PTR [ecx+0x4], eax
 804cd47:  or DWORD PTR [ecx+edi+0x4], 0x1
 804cd4c:  add ecx, 0x8
 804cd4f:  mov DWORD PTR [ebp+0xc], ecx
 804cd52:  mov eax, DWORD PTR [ebp+0xc]
 804cd55:  add esp, 0x20
 804cd58:  pop ebx
 804cd59:  pop esi
 804cd5a:  pop edi
 804cd5b:  pop ebp
 804cd5c:  ret
 804cd5d:  lea esi, [esi]
 804cd60:  mov edx, DWORD PTR [ebp+0x8]
 804cd63:  cmp DWORD PTR [edx+0x30], esi
 804cd66:  je 804cfb0
 804cd6c:  test BYTE PTR [esi+eax+0x4], 0x1
 804cd71:  jne 804cd82
 804cd73:  mov edx, DWORD PTR [ebp-0x10]
 804cd76:  lea edi, [eax+edx]
 804cd79:  cmp DWORD PTR [ebp-0x18], edi
 804cd7c:  jbe 804cef0
 804cd82:  mov eax, DWORD PTR [ebp-0x18]
 804cd85:  sub eax, 0x7
 804cd88:  mov DWORD PTR [esp+0x4], eax
 804cd8c:  mov ecx, DWORD PTR [ebp+0x8]
 804cd8f:  mov DWORD PTR [esp], ecx
 804cd92:  call 804b960
 804cd97:  test eax, eax
 804cd99:  mov edx, eax
 804cd9b:  je 804cff8
 804cda1:  lea ebx, [eax-0x8]
 804cda4:  cmp ebx, esi
 804cda6:  mov eax, DWORD PTR [ebx+0x4]
 804cda9:  je 804d018
 804cdaf:  mov eax, DWORD PTR [ebp-0x10]
 804cdb2:  sub eax, 0x4
 804cdb5:  mov ecx, eax
 804cdb7:  shr ecx, 0x2
 804cdba:  cmp ecx, 0x9
 804cdbd:  ja 804cf98
 804cdc3:  mov esi, DWORD PTR [ebp+0xc]
 804cdc6:  cmp ecx, 0x4
 804cdc9:  mov eax, DWORD PTR [esi]
 804cdcb:  mov DWORD PTR [edx], eax
 804cdcd:  mov eax, DWORD PTR [esi+0x4]
 804cdd0:  mov DWORD PTR [edx+0x4], eax
 804cdd3:  mov eax, DWORD PTR [esi+0x8]
 804cdd6:  mov DWORD PTR [edx+0x8], eax
 804cdd9:  jbe 804ce10
 804cddb:  mov eax, DWORD PTR [esi+0xc]
 804cdde:  cmp ecx, 0x6
 804cde1:  mov DWORD PTR [edx+0xc], eax
 804cde4:  mov eax, DWORD PTR [esi+0x10]
 804cde7:  mov DWORD PTR [edx+0x10], eax
 804cdea:  jbe 804ce10
 804cdec:  mov eax, DWORD PTR [esi+0x14]
 804cdef:  cmp ecx, 0x9
 804cdf2:  mov DWORD PTR [edx+0x14], eax
 804cdf5:  mov eax, DWORD PTR [esi+0x18]
 804cdf8:  mov DWORD PTR [edx+0x18], eax
 804cdfb:  jne 804ce10
 804cdfd:  mov eax, DWORD PTR [esi+0x1c]
 804ce00:  mov DWORD PTR [edx+0x1c], eax
 804ce03:  mov eax, DWORD PTR [esi+0x20]
 804ce06:  mov DWORD PTR [edx+0x20], eax
 804ce09:  lea esi, [esi]
 804ce10:  mov eax, DWORD PTR [ebp+0xc]
 804ce13:  add ebx, 0x8
 804ce16:  mov DWORD PTR [esp+0x4], eax
 804ce1a:  mov edx, DWORD PTR [ebp+0x8]
 804ce1d:  mov DWORD PTR [esp], edx
 804ce20:  call 804ac70
 804ce25:  mov DWORD PTR [ebp+0xc], ebx
 804ce28:  jmp 804ccdb
 804ce2d:  lea esi, [esi]
 804ce30:  mov ebx, DWORD PTR [ebp-0x14]
 804ce33:  mov eax, ecx
 804ce35:  add ebx, DWORD PTR [ebp-0x18]
 804ce38:  and eax, 0x7
 804ce3b:  cmp DWORD PTR [ebp+0x8], 0x80d1d40
 804ce42:  je 804d030
 804ce48:  or DWORD PTR [ebp-0x18], 0x4
 804ce4c:  mov ecx, 0x4
 804ce51:  or DWORD PTR [ebp-0x18], eax
 804ce54:  mov eax, DWORD PTR [ebp-0x18]
 804ce57:  mov esi, DWORD PTR [ebp-0x14]
 804ce5a:  mov DWORD PTR [esi+0x4], eax
 804ce5d:  mov eax, edx
 804ce5f:  or eax, 0x1
 804ce62:  or eax, ecx
 804ce64:  mov DWORD PTR [ebx+0x4], eax
 804ce67:  lea eax, [ebx+0x8]
 804ce6a:  or DWORD PTR [ebx+edx+0x4], 0x1
 804ce6f:  mov DWORD PTR [esp+0x4], eax
 804ce73:  mov edx, DWORD PTR [ebp+0x8]
 804ce76:  mov DWORD PTR [esp], edx
 804ce79:  call 804ac70
 804ce7e:  mov ecx, DWORD PTR [ebp-0x14]
 804ce81:  jmp 804cd4c
 804ce86:  xchg ax, ax
 804ce88:  mov eax, DWORD PTR [ebp-0x18]
 804ce8b:  add eax, 0x4
 804ce8e:  cmp DWORD PTR [ebp-0x10], eax
 804ce91:  jae 804ccdb
 804ce97:  mov eax, DWORD PTR [ebp-0x18]
 804ce9a:  sub eax, 0x7
 804ce9d:  mov DWORD PTR [esp+0x4], eax
 804cea1:  mov edx, DWORD PTR [ebp+0x8]
 804cea4:  mov DWORD PTR [esp], edx
 804cea7:  call 804b960
 804ceac:  test eax, eax
 804ceae:  mov ebx, eax
 804ceb0:  je 804cff8
 804ceb6:  mov eax, DWORD PTR [ebp-0x10]
 804ceb9:  sub eax, 0x8
 804cebc:  mov DWORD PTR [esp+0x8], eax
 804cec0:  mov ecx, DWORD PTR [ebp+0xc]
 804cec3:  mov DWORD PTR [esp], ebx
 804cec6:  mov DWORD PTR [esp+0x4], ecx
 804ceca:  call 804efc0
 804cecf:  mov esi, DWORD PTR [ebp+0xc]
 804ced2:  mov DWORD PTR [esp+0x4], esi
 804ced6:  mov eax, DWORD PTR [ebp+0x8]
 804ced9:  mov DWORD PTR [esp], eax
 804cedc:  call 804ac70
 804cee1:  mov DWORD PTR [ebp+0xc], ebx
 804cee4:  jmp 804ccdb
 804cee9:  lea esi, [esi]
 804cef0:  mov edx, DWORD PTR [esi+0x8]
 804cef3:  mov eax, DWORD PTR [esi+0xc]
 804cef6:  cmp DWORD PTR [edx+0xc], esi
 804cef9:  jne 804d040
 804ceff:  cmp esi, DWORD PTR [eax+0x8]
 804cf02:  jne 804d040
 804cf08:  cmp DWORD PTR [esi+0x4], 0x1ff
 804cf0f:  mov ecx, ebx
 804cf11:  mov DWORD PTR [edx+0xc], eax
 804cf14:  mov DWORD PTR [eax+0x8], edx
 804cf17:  jbe 804cd1d
 804cf1d:  mov eax, DWORD PTR [esi+0x10]
 804cf20:  mov ecx, ebx
 804cf22:  test eax, eax
 804cf24:  mov DWORD PTR [ebp-0x1c], eax
 804cf27:  je 804cd1d
 804cf2d:  mov eax, DWORD PTR [edx+0x10]
 804cf30:  test eax, eax
 804cf32:  je 804d05c
 804cf38:  mov eax, DWORD PTR [esi+0x14]
 804cf3b:  mov ecx, ebx
 804cf3d:  mov edx, DWORD PTR [ebp-0x1c]
 804cf40:  mov DWORD PTR [edx+0x14], eax
 804cf43:  mov eax, DWORD PTR [esi+0x14]
 804cf46:  mov DWORD PTR [eax+0x10], edx
 804cf49:  jmp 804cd1d
 804cf4e:  xchg ax, ax
 804cf50:  mov edx, 0xffffffe8
 804cf56:  mov eax, gs:0x0
 804cf5c:  mov DWORD PTR [ebp+0xc], 0x0
 804cf63:  mov DWORD PTR [eax+edx], 0xc
 804cf6a:  jmp 804ccdb
 804cf6f:  mov edx, 0x80afdac
 804cf74:  lea esi, [esi]
 804cf78:  mov ecx, DWORD PTR [ebp+0xc]
 804cf7b:  mov eax, ds:0x80d0d44
 804cf80:  call 8049610
 804cf85:  mov DWORD PTR [ebp+0xc], 0x0
 804cf8c:  jmp 804ccdb
 804cf91:  lea esi, [esi]
 804cf98:  mov DWORD PTR [esp+0x8], eax
 804cf9c:  mov ecx, DWORD PTR [ebp+0xc]
 804cf9f:  mov DWORD PTR [esp], edx
 804cfa2:  mov DWORD PTR [esp+0x4], ecx
 804cfa6:  call 804efc0
 804cfab:  jmp 804ce10
 804cfb0:  lea edx, [eax+edi]
 804cfb3:  mov eax, DWORD PTR [ebp-0x18]
 804cfb6:  add eax, 0x10
 804cfb9:  cmp edx, eax
 804cfbb:  jb 804cd82
 804cfc1:  xor eax, eax
 804cfc3:  mov ecx, DWORD PTR [ebp-0x14]
 804cfc6:  cmp DWORD PTR [ebp+0x8], 0x80d1d40
 804cfcd:  mov esi, DWORD PTR [ebp+0x8]
 804cfd0:  setne al
 804cfd3:  and ebx, 0x7
 804cfd6:  or ebx, DWORD PTR [ebp-0x18]
 804cfd9:  shl eax, 0x2
 804cfdc:  sub edx, DWORD PTR [ebp-0x18]
 804cfdf:  or ebx, eax
 804cfe1:  mov eax, ecx
 804cfe3:  add eax, DWORD PTR [ebp-0x18]
 804cfe6:  or edx, 0x1
 804cfe9:  mov DWORD PTR [ecx+0x4], ebx
 804cfec:  mov DWORD PTR [esi+0x30], eax
 804cfef:  mov DWORD PTR [eax+0x4], edx
 804cff2:  jmp 804ccdb
 804cff7:  nop
 804cff8:  mov DWORD PTR [ebp+0xc], 0x0
 804cfff:  jmp 804ccdb
 804d004:  lea esi, [esi]
 804d008:  mov edx, 0x80afd90
 804d00d:  jmp 804cf78
 804d012:  lea esi, [esi]
 804d018:  mov esi, DWORD PTR [ebp-0x10]
 804d01b:  and eax, 0xf8
 804d01e:  lea edi, [eax+esi]
 804d021:  mov eax, DWORD PTR [ebp-0x14]
 804d024:  mov ecx, DWORD PTR [eax+0x4]
 804d027:  jmp 804cd1d
 804d02c:  lea esi, [esi]
 804d030:  mov ecx, DWORD PTR [ebp-0x14]
 804d033:  or eax, DWORD PTR [ebp-0x18]
 804d036:  mov DWORD PTR [ecx+0x4], eax
 804d039:  xor ecx, ecx
 804d03b:  jmp 804ce5d
 804d040:  mov eax, ds:0x80d0d44
 804d045:  mov ecx, esi
 804d047:  mov edx, 0x80afcd3
 804d04c:  call 8049610
 804d051:  mov esi, DWORD PTR [ebp-0x14]
 804d054:  mov ecx, DWORD PTR [esi+0x4]
 804d057:  jmp 804cd1d
 804d05c:  cmp esi, DWORD PTR [ebp-0x1c]
 804d05f:  je 804d080
 804d061:  mov eax, DWORD PTR [esi+0x14]
 804d064:  mov ecx, DWORD PTR [ebp-0x1c]
 804d067:  mov DWORD PTR [edx+0x14], eax
 804d06a:  mov DWORD PTR [edx+0x10], ecx
 804d06d:  mov eax, DWORD PTR [esi+0x10]
 804d070:  mov ecx, ebx
 804d072:  mov DWORD PTR [eax+0x14], edx
 804d075:  mov eax, DWORD PTR [esi+0x14]
 804d078:  mov DWORD PTR [eax+0x10], edx
 804d07b:  jmp 804cd1d
 804d080:  mov DWORD PTR [edx+0x14], edx
 804d083:  mov ecx, ebx
 804d085:  mov DWORD PTR [edx+0x10], edx
 804d088:  jmp 804cd1d
 804d08d:  lea esi, [esi]

0804d090 <realloc_check>:
 804d090:  push ebp
 804d091:  mov ebp, esp
 804d093:  push edi
 804d094:  push esi
 804d095:  push ebx
 804d096:  sub esp, 0x30
 804d099:  mov edi, DWORD PTR [ebp+0xc]
 804d09c:  cmp edi, 0xff
 804d09f:  je 804d2b4
 804d0a5:  mov eax, DWORD PTR [ebp+0x8]
 804d0a8:  test eax, eax
 804d0aa:  je 804d298
 804d0b0:  test edi, edi
 804d0b2:  je 804d2ce
 804d0b8:  xor eax, eax
 804d0ba:  mov ecx, 0x1
 804d0bf:  cmp DWORD PTR gs:0xc, 0x0
 804d0c7:  je 804d0ca
 804d0c9:  cmpxchg DWORD PTR ds:0x80d1d40, ecx
 804d0d1:  jne 804ebd6
 804d0d7:  mov eax, DWORD PTR [ebp+0x8]
 804d0da:  lea edx, [ebp-0x10]
 804d0dd:  call 80493b0
 804d0e2:  mov esi, eax
 804d0e4:  cmp DWORD PTR gs:0xc, 0x0
 804d0ec:  je 804d0ef
 804d0ee:  sub DWORD PTR ds:0x80d1d40, 0x1
 804d0f6:  jne 804ebe6
 804d0fc:  test esi, esi
 804d0fe:  je 804d286
 804d104:  mov edx, DWORD PTR [esi+0x4]
 804d107:  lea ecx, [edi+0x1]
 804d10a:  cmp ecx, 0xdf
 804d10d:  mov DWORD PTR [ebp-0x24], ecx
 804d110:  mov DWORD PTR [ebp-0x28], edx
 804d113:  ja 804d2b4
 804d119:  lea eax, [edi+0xc]
 804d11c:  cmp eax, 0xf
 804d11f:  mov DWORD PTR [ebp-0x20], 0x10
 804d126:  ja 804d258
 804d12c:  xor eax, eax
 804d12e:  mov ecx, 0x1
 804d133:  cmp DWORD PTR gs:0xc, 0x0
 804d13b:  je 804d13e
 804d13d:  cmpxchg DWORD PTR ds:0x80d1d40, ecx
 804d145:  jne 804ebf6
 804d14b:  mov ecx, DWORD PTR [esi+0x4]
 804d14e:  test cl, 0x2
 804d151:  jne 804d220
 804d157:  call 8049bb0
 804d15c:  test eax, eax
 804d15e:  js 804d278
 804d164:  mov edx, DWORD PTR [ebp-0x24]
 804d167:  mov DWORD PTR [esp+0x8], edx
 804d16b:  mov ecx, DWORD PTR [ebp+0x8]
 804d16e:  mov DWORD PTR [esp], 0x80d1d40
 804d175:  mov DWORD PTR [esp+0x4], ecx
 804d179:  call 804cbf0
 804d17e:  mov ebx, eax
 804d180:  test ebx, ebx
 804d182:  mov esi, ebx
 804d184:  je 804d278
 804d18a:  cmp DWORD PTR gs:0xc, 0x0
 804d192:  je 804d195
 804d194:  sub DWORD PTR ds:0x80d1d40, 0x1
 804d19c:  jne 804ec06
 804d1a2:  test ebx, ebx
 804d1a4:  je 804d20f
 804d1a6:  sub ebx, 0x8
 804d1a9:  mov edx, DWORD PTR [ebx+0x4]
 804d1ac:  mov eax, edx
 804d1ae:  and eax, 0x2
 804d1b1:  cmp eax, 0x1
 804d1b4:  sbb eax, eax
 804d1b6:  and edx, 0xf8
 804d1b9:  and eax, 0xfc
 804d1bc:  add eax, 0x9
 804d1bf:  sub edx, eax
 804d1c1:  cmp edi, edx
 804d1c3:  jae 804d200
 804d1c5:  mov ecx, edx
 804d1c7:  sub ecx, edi
 804d1c9:  cmp ecx, 0xff
 804d1cf:  lea eax, [esi+edx]
 804d1d2:  ja 804d1f3
 804d1d4:  jmp 804d268
 804d1d9:  lea esi, [esi]
 804d1e0:  sub ecx, 0xff
 804d1e6:  sub eax, 0xff
 804d1eb:  cmp ecx, 0xff
 804d1f1:  jbe 804d268
 804d1f3:  sub edx, 0xff
 804d1f9:  cmp edi, edx
 804d1fb:  mov BYTE PTR [eax], 0xff
 804d1fe:  jb 804d1e0
 804d200:  mov eax, ebx
 804d202:  shr eax, 0xb
 804d205:  shr ebx, 0x3
 804d208:  xor eax, ebx
 804d20a:  mov ebx, esi
 804d20c:  mov BYTE PTR [esi+edi], al
 804d20f:  add esp, 0x30
 804d212:  mov eax, ebx
 804d214:  pop ebx
 804d215:  pop esi
 804d216:  pop edi
 804d217:  pop ebp
 804d218:  ret
 804d219:  lea esi, [esi]
 804d220:  mov eax, ds:0x80d21bc
 804d225:  and ecx, 0xf8
 804d228:  mov ebx, DWORD PTR [esi]
 804d22a:  sub eax, 0x1
 804d22d:  lea edx, [eax+ebx+0x4]
 804d231:  not eax
 804d233:  mov DWORD PTR [ebp-0x18], ebx
 804d236:  mov ebx, edx
 804d238:  add ecx, DWORD PTR [ebp-0x18]
 804d23b:  add ebx, DWORD PTR [ebp-0x20]
 804d23e:  mov DWORD PTR [ebp-0x14], ecx
 804d241:  mov ecx, esi
 804d243:  and ebx, eax
 804d245:  cmp ebx, DWORD PTR [ebp-0x14]
 804d248:  jne 804d2e8
 804d24e:  lea ebx, [ecx+0x8]
 804d251:  jmp 804d180
 804d256:  xchg ax, ax
 804d258:  and eax, 0xf8
 804d25b:  mov DWORD PTR [ebp-0x20], eax
 804d25e:  jmp 804d12c
 804d263:  nop
 804d264:  lea esi, [esi]
 804d268:  mov eax, edx
 804d26a:  mov ecx, edi
 804d26c:  sub al, cl
 804d26e:  mov BYTE PTR [esi+edx], al
 804d271:  jmp 804d200
 804d273:  nop
 804d274:  lea esi, [esi]
 804d278:  mov eax, DWORD PTR [ebp-0x10]
 804d27b:  xor ebx, ebx
 804d27d:  xor esi, esi
 804d27f:  not BYTE PTR [eax]
 804d281:  jmp 804d18a
 804d286:  mov ecx, DWORD PTR [ebp+0x8]
 804d289:  mov edx, 0x80afd75
 804d28e:  mov eax, ds:0x80d0d44
 804d293:  call 8049610
 804d298:  mov DWORD PTR [esp], edi
 804d29b:  mov DWORD PTR [esp+0x4], 0x0
 804d2a3:  call 804c8e0
 804d2a8:  add esp, 0x30
 804d2ab:  mov ebx, eax
 804d2ad:  mov eax, ebx
 804d2af:  pop ebx
 804d2b0:  pop esi
 804d2b1:  pop edi
 804d2b2:  pop ebp
 804d2b3:  ret
 804d2b4:  mov edx, 0xffffffe8
 804d2ba:  xor ebx, ebx
 804d2bc:  mov eax, gs:0x0
 804d2c2:  mov DWORD PTR [eax+edx], 0xc
 804d2c9:  jmp 804d20f
 804d2ce:  mov DWORD PTR [esp+0x4], 0x0
 804d2d6:  mov eax, DWORD PTR [ebp+0x8]
 804d2d9:  xor ebx, ebx
 804d2db:  mov DWORD PTR [esp], eax
 804d2de:  call 804b5d0
 804d2e3:  jmp 804d20f
 804d2e8:  mov DWORD PTR [esp+0xc], 0x1
 804d2f0:  mov eax, esi
 804d2f2:  mov DWORD PTR [esp+0x8], ebx
 804d2f6:  mov ecx, DWORD PTR [ebp-0x14]
 804d2f9:  mov DWORD PTR [esp+0x4], ecx
 804d2fd:  sub eax, DWORD PTR [ebp-0x18]
 804d300:  mov DWORD PTR [esp], eax
 804d303:  call 8050120
 804d308:  cmp eax, 0xff
 804d30b:  je 804d343
 804d30d:  mov edx, DWORD PTR [ebp-0x18]
 804d310:  lea ecx, [eax+edx]
 804d313:  mov eax, ebx
 804d315:  sub eax, edx
 804d317:  or eax, 0x2
 804d31a:  mov DWORD PTR [ecx+0x4], eax
 804d31d:  mov eax, ebx
 804d31f:  sub eax, DWORD PTR [ebp-0x14]
 804d322:  add eax, DWORD PTR ds:0x80d21c0
 804d328:  cmp eax, DWORD PTR ds:0x80d21c4
 804d32e:  mov ds:0x80d21c0, eax
 804d333:  jbe 804d24e
 804d339:  mov ds:0x80d21c4, eax
 804d33e:  jmp 804d24e
 804d343:  mov ecx, DWORD PTR [ebp-0x28]
 804d346:  mov ebx, DWORD PTR [ebp+0x8]
 804d349:  and ecx, 0xf8
 804d34c:  mov eax, ecx
 804d34e:  sub eax, 0x4
 804d351:  cmp DWORD PTR [ebp-0x20], eax
 804d354:  mov DWORD PTR [ebp-0x1c], ecx
 804d357:  ja 804d360
 804d359:  mov esi, ebx
 804d35b:  jmp 804d18a
 804d360:  call 8049bb0
 804d365:  test eax, eax
 804d367:  nop
 804d368:  js 804d278
 804d36e:  mov ebx, DWORD PTR [ebp-0x24]
 804d371:  mov DWORD PTR [esp], 0x80d1d40
 804d378:  mov DWORD PTR [esp+0x4], ebx
 804d37c:  call 804b960
 804d381:  test eax, eax
 804d383:  mov ebx, eax
 804d385:  je 804d278
 804d38b:  mov eax, DWORD PTR [ebp-0x1c]
 804d38e:  sub eax, 0x8
 804d391:  mov DWORD PTR [esp+0x8], eax
 804d395:  mov eax, DWORD PTR [ebp+0x8]
 804d398:  mov DWORD PTR [esp], ebx
 804d39b:  mov DWORD PTR [esp+0x4], eax
 804d39f:  call 804efc0
 804d3a4:  mov eax, esi
 804d3a6:  mov esi, ebx
 804d3a8:  call 80496f0
 804d3ad:  jmp 804d18a
 804d3b2:  lea esi, [esi]
 804d3b9:  lea edi, [edi]

0804d3c0 <__calloc>:
 804d3c0:  push ebp
 804d3c1:  mov ebp, esp
 804d3c3:  sub esp, 0x20
 804d3c6:  mov ecx, DWORD PTR [ebp+0x8]
 804d3c9:  mov eax, DWORD PTR [ebp+0xc]
 804d3cc:  mov DWORD PTR [ebp-0x4], edi
 804d3cf:  mov edi, DWORD PTR [ebp+0xc]
 804d3d2:  mov DWORD PTR [ebp-0xc], ebx
 804d3d5:  mov ebx, DWORD PTR ds:0x80d0d34
 804d3db:  mov DWORD PTR [ebp-0x8], esi
 804d3de:  or eax, ecx
 804d3e0:  imul edi, ecx
 804d3e3:  cmp eax, 0xffff
 804d3e8:  ja 804d5dd
 804d3ee:  test ebx, ebx
 804d3f0:  je 804d430
 804d3f2:  mov eax, DWORD PTR [ebp+0x4]
 804d3f5:  mov DWORD PTR [esp], edi
 804d3f8:  mov DWORD PTR [esp+0x4], eax
 804d3fc:  call ebx
 804d3fe:  test eax, eax
 804d400:  mov ebx, eax
 804d402:  je 804d41a
 804d404:  mov DWORD PTR [esp+0x8], edi
 804d408:  mov DWORD PTR [esp+0x4], 0x0
 804d410:  mov DWORD PTR [esp], eax
 804d413:  call 804ef50
 804d418:  mov ebx, eax
 804d41a:  mov eax, ebx
 804d41c:  mov esi, DWORD PTR [ebp-0x8]
 804d41f:  mov ebx, DWORD PTR [ebp-0xc]
 804d422:  mov edi, DWORD PTR [ebp-0x4]
 804d425:  mov esp, ebp
 804d427:  pop ebp
 804d428:  ret
 804d429:  lea esi, [esi]
 804d430:  mov edx, 0xffffffec
 804d436:  mov eax, gs:0x0
 804d43c:  mov esi, DWORD PTR [eax+edx]
 804d43f:  test esi, esi
 804d441:  je 804d550
 804d447:  mov eax, ebx
 804d449:  mov edx, 0x1
 804d44e:  cmp DWORD PTR gs:0xc, 0x0
 804d456:  je 804d459
 804d458:  cmpxchg DWORD PTR [esi], edx
 804d45c:  test eax, eax
 804d45e:  jne 804d550
 804d464:  mov eax, DWORD PTR [esi+0x30]
 804d467:  mov edx, DWORD PTR [eax+0x4]
 804d46a:  mov DWORD PTR [ebp-0x14], eax
 804d46d:  and edx, 0xf8
 804d470:  cmp esi, 0x80d1d40
 804d476:  mov DWORD PTR [ebp-0x10], edx
 804d479:  je 804d48e
 804d47b:  and eax, 0xfff00000
 804d480:  add eax, DWORD PTR [eax+0xc]
 804d483:  sub eax, DWORD PTR [ebp-0x14]
 804d486:  cmp edx, eax
 804d488:  jb 804d570
 804d48e:  mov DWORD PTR [esp+0x4], edi
 804d492:  mov DWORD PTR [esp], esi
 804d495:  call 804b960
 804d49a:  mov ebx, eax
 804d49c:  cmp DWORD PTR gs:0xc, 0x0
 804d4a4:  je 804d4a7
 804d4a6:  sub DWORD PTR [esi], 0x1
 804d4aa:  jne 804ec16
 804d4b0:  test ebx, ebx
 804d4b2:  je 804d617
 804d4b8:  lea edx, [ebx-0x8]
 804d4bb:  mov eax, DWORD PTR [edx+0x4]
 804d4be:  test al, 0x2
 804d4c0:  jne 804d580
 804d4c6:  mov ecx, DWORD PTR ds:0x80d21d4
 804d4cc:  and eax, 0xf8
 804d4cf:  test ecx, ecx
 804d4d1:  jne 804d4dc
 804d4d3:  cmp edx, DWORD PTR [ebp-0x14]
 804d4d6:  je 804d5c8
 804d4dc:  sub eax, 0x4
 804d4df:  mov edx, eax
 804d4e1:  shr edx, 0x2
 804d4e4:  cmp edx, 0x9
 804d4e7:  ja 804d5a8
 804d4ed:  cmp edx, 0x4
 804d4f0:  mov DWORD PTR [ebx], 0x0
 804d4f6:  mov DWORD PTR [ebx+0x4], 0x0
 804d4fd:  mov DWORD PTR [ebx+0x8], 0x0
 804d504:  jbe 804d41a
 804d50a:  cmp edx, 0x6
 804d50d:  mov DWORD PTR [ebx+0xc], 0x0
 804d514:  mov DWORD PTR [ebx+0x10], 0x0
 804d51b:  jbe 804d41a
 804d521:  cmp edx, 0x9
 804d524:  mov DWORD PTR [ebx+0x14], 0x0
 804d52b:  mov DWORD PTR [ebx+0x18], 0x0
 804d532:  jne 804d41a
 804d538:  mov DWORD PTR [ebx+0x1c], 0x0
 804d53f:  mov DWORD PTR [ebx+0x20], 0x0
 804d546:  jmp 804d41a
 804d54b:  nop
 804d54c:  lea esi, [esi]
 804d550:  mov eax, esi
 804d552:  mov edx, edi
 804d554:  call 8049950
 804d559:  xor ebx, ebx
 804d55b:  test eax, eax
 804d55d:  mov esi, eax
 804d55f:  jne 804d464
 804d565:  jmp 804d41a
 804d56a:  lea esi, [esi]
 804d570:  mov DWORD PTR [ebp-0x10], eax
 804d573:  nop
 804d574:  lea esi, [esi]
 804d578:  jmp 804d48e
 804d57d:  lea esi, [esi]
 804d580:  mov esi, DWORD PTR ds:0x80d21d4
 804d586:  test esi, esi
 804d588:  je 804d41a
 804d58e:  mov DWORD PTR [esp+0x8], edi
 804d592:  mov DWORD PTR [esp+0x4], 0x0
 804d59a:  mov DWORD PTR [esp], ebx
 804d59d:  call 804ef50
 804d5a2:  jmp 804d41a
 804d5a7:  nop
 804d5a8:  mov DWORD PTR [esp+0x8], eax
 804d5ac:  mov DWORD PTR [esp+0x4], 0x0
 804d5b4:  mov DWORD PTR [esp], ebx
 804d5b7:  call 804ef50
 804d5bc:  jmp 804d41a
 804d5c1:  lea esi, [esi]
 804d5c8:  cmp eax, DWORD PTR [ebp-0x10]
 804d5cb:  jbe 804d4dc
 804d5d1:  mov eax, DWORD PTR [ebp-0x10]
 804d5d4:  lea esi, [esi]
 804d5d8:  jmp 804d4dc
 804d5dd:  mov eax, DWORD PTR [ebp+0xc]
 804d5e0:  test eax, eax
 804d5e2:  lea esi, [esi]
 804d5e8:  je 804d3ee
 804d5ee:  xor edx, edx
 804d5f0:  mov eax, edi
 804d5f2:  div DWORD PTR [ebp+0xc]
 804d5f5:  cmp eax, ecx
 804d5f7:  je 804d3ee
 804d5fd:  mov edx, 0xffffffe8
 804d603:  xor ebx, ebx
 804d605:  mov eax, gs:0x0
 804d60b:  mov DWORD PTR [eax+edx], 0xc
 804d612:  jmp 804d41a
 804d617:  cmp esi, 0x80d1d40
 804d61d:  je 804d675
 804d61f:  mov eax, ebx
 804d621:  mov ecx, 0x1
 804d626:  cmp DWORD PTR gs:0xc, 0x0
 804d62e:  je 804d631
 804d630:  cmpxchg DWORD PTR ds:0x80d1d40, ecx
 804d638:  jne 804ec22
 804d63e:  mov DWORD PTR [esp+0x4], edi
 804d642:  mov DWORD PTR [esp], 0x80d1d40
 804d649:  call 804b960
 804d64e:  mov ebx, eax
 804d650:  cmp DWORD PTR gs:0xc, 0x0
 804d658:  je 804d65b
 804d65a:  sub DWORD PTR ds:0x80d1d40, 0x1
 804d662:  jne 804ec32
 804d668:  test ebx, ebx
 804d66a:  jne 804d4b8
 804d670:  jmp 804d41a
 804d675:  mov eax, ebx
 804d677:  mov ecx, 0x1
 804d67c:  cmp DWORD PTR gs:0xc, 0x0
 804d684:  je 804d687
 804d686:  cmpxchg DWORD PTR [esi], ecx
 804d68a:  jne 804ec42
 804d690:  cmp DWORD PTR ds:0x80d2180, 0x1
 804d697:  mov edx, edi
 804d699:  sbb eax, eax
 804d69b:  not eax
 804d69d:  and eax, 0x80d1d40
 804d6a2:  call 8049950
 804d6a7:  mov esi, eax
 804d6a9:  cmp DWORD PTR gs:0xc, 0x0
 804d6b1:  je 804d6b4
 804d6b3:  sub DWORD PTR ds:0x80d1d40, 0x1
 804d6bb:  jne 804ec4e
 804d6c1:  test esi, esi
 804d6c3:  je 804d41a
 804d6c9:  mov DWORD PTR [esp+0x4], edi
 804d6cd:  mov DWORD PTR [esp], esi
 804d6d0:  call 804b960
 804d6d5:  mov ebx, eax
 804d6d7:  cmp DWORD PTR gs:0xc, 0x0
 804d6df:  je 804d6e2
 804d6e1:  sub DWORD PTR [esi], 0x1
 804d6e5:  jne 804ec5e
 804d6eb:  jmp 804d668

0804d6f0 <__libc_malloc>:
 804d6f0:  push ebp
 804d6f1:  mov ebp, esp
 804d6f3:  sub esp, 0x14
 804d6f6:  mov ecx, DWORD PTR ds:0x80d0d34
 804d6fc:  mov DWORD PTR [ebp-0x8], esi
 804d6ff:  mov esi, DWORD PTR [ebp+0x8]
 804d702:  mov DWORD PTR [ebp-0xc], ebx
 804d705:  mov DWORD PTR [ebp-0x4], edi
 804d708:  test ecx, ecx
 804d70a:  je 804d730
 804d70c:  mov eax, DWORD PTR [ebp+0x4]
 804d70f:  mov DWORD PTR [esp], esi
 804d712:  mov DWORD PTR [esp+0x4], eax
 804d716:  call ecx
 804d718:  mov ebx, eax
 804d71a:  mov eax, ebx
 804d71c:  mov esi, DWORD PTR [ebp-0x8]
 804d71f:  mov ebx, DWORD PTR [ebp-0xc]
 804d722:  mov edi, DWORD PTR [ebp-0x4]
 804d725:  mov esp, ebp
 804d727:  pop ebp
 804d728:  ret
 804d729:  lea esi, [esi]
 804d730:  mov edx, 0xffffffec
 804d736:  mov eax, gs:0x0
 804d73c:  mov edi, DWORD PTR [eax+edx]
 804d73f:  test edi, edi
 804d741:  je 804d75c
 804d743:  mov eax, ecx
 804d745:  mov edx, 0x1
 804d74a:  cmp DWORD PTR gs:0xc, 0x0
 804d752:  je 804d755
 804d754:  cmpxchg DWORD PTR [edi], edx
 804d758:  test eax, eax
 804d75a:  je 804d76d
 804d75c:  mov eax, edi
 804d75e:  mov edx, esi
 804d760:  call 8049950
 804d765:  xor ebx, ebx
 804d767:  test eax, eax
 804d769:  mov edi, eax
 804d76b:  je 804d71a
 804d76d:  mov DWORD PTR [esp+0x4], esi
 804d771:  mov DWORD PTR [esp], edi
 804d774:  call 804b960
 804d779:  test eax, eax
 804d77b:  mov ebx, eax
 804d77d:  je 804d795
 804d77f:  cmp DWORD PTR gs:0xc, 0x0
 804d787:  je 804d78a
 804d789:  sub DWORD PTR [edi], 0x1
 804d78d:  jne 804ec6a
 804d793:  jmp 804d71a
 804d795:  cmp edi, 0x80d1d40
 804d79b:  je 804d7ff
 804d79d:  cmp DWORD PTR gs:0xc, 0x0
 804d7a5:  je 804d7a8
 804d7a7:  sub DWORD PTR [edi], 0x1
 804d7ab:  jne 804ec76
 804d7b1:  mov ecx, 0x1
 804d7b6:  mov eax, ebx
 804d7b8:  cmp DWORD PTR gs:0xc, 0x0
 804d7c0:  je 804d7c3
 804d7c2:  cmpxchg DWORD PTR ds:0x80d1d40, ecx
 804d7ca:  jne 804ec82
 804d7d0:  mov DWORD PTR [esp+0x4], esi
 804d7d4:  mov DWORD PTR [esp], 0x80d1d40
 804d7db:  call 804b960
 804d7e0:  mov ebx, eax
 804d7e2:  cmp DWORD PTR gs:0xc, 0x0
 804d7ea:  je 804d7ed
 804d7ec:  sub DWORD PTR ds:0x80d1d40, 0x1
 804d7f4:  jne 804ec92
 804d7fa:  jmp 804d71a
 804d7ff:  cmp DWORD PTR ds:0x80d2180, 0x1
 804d806:  mov edx, esi
 804d808:  sbb eax, eax
 804d80a:  not eax
 804d80c:  and eax, 0x80d1d40
 804d811:  call 8049950
 804d816:  mov edi, eax
 804d818:  cmp DWORD PTR gs:0xc, 0x0
 804d820:  je 804d823
 804d822:  sub DWORD PTR ds:0x80d1d40, 0x1
 804d82a:  jne 804eca2
 804d830:  test edi, edi
 804d832:  je 804d71a
 804d838:  mov DWORD PTR [esp+0x4], esi
 804d83c:  mov DWORD PTR [esp], edi
 804d83f:  call 804b960
 804d844:  mov ebx, eax
 804d846:  cmp DWORD PTR gs:0xc, 0x0
 804d84e:  je 804d851
 804d850:  sub DWORD PTR [edi], 0x1
 804d854:  jne 804ecb2
 804d85a:  jmp 804d71a
 804d85f:  nop

0804d860 <malloc_hook_ini>:
 804d860:  push ebp
 804d861:  mov ebp, esp
 804d863:  push ebx
 804d864:  mov ebx, DWORD PTR [ebp+0x8]
 804d867:  mov DWORD PTR ds:0x80d0d34, 0x0
 804d871:  call 804a310
 804d876:  mov DWORD PTR [ebp+0x8], ebx
 804d879:  pop ebx
 804d87a:  pop ebp
 804d87b:  jmp 804d6f0

0804d880 <__libc_memalign>:
 804d880:  push ebp
 804d881:  mov ebp, esp
 804d883:  sub esp, 0x20
 804d886:  mov DWORD PTR [ebp-0x8], esi
 804d889:  mov esi, DWORD PTR [ebp+0xc]
 804d88c:  mov DWORD PTR [ebp-0x4], edi
 804d88f:  mov edi, DWORD PTR [ebp+0x8]
 804d892:  mov DWORD PTR [ebp-0xc], ebx
 804d895:  mov edx, DWORD PTR ds:0x80d0d3c
 804d89b:  test edx, edx
 804d89d:  je 804d8c0
 804d89f:  mov eax, DWORD PTR [ebp+0x4]
 804d8a2:  mov DWORD PTR [esp+0x4], esi
 804d8a6:  mov DWORD PTR [esp], edi
 804d8a9:  mov DWORD PTR [esp+0x8], eax
 804d8ad:  call edx
 804d8af:  mov ebx, eax
 804d8b1:  mov eax, ebx
 804d8b3:  mov esi, DWORD PTR [ebp-0x8]
 804d8b6:  mov ebx, DWORD PTR [ebp-0xc]
 804d8b9:  mov edi, DWORD PTR [ebp-0x4]
 804d8bc:  mov esp, ebp
 804d8be:  pop ebp
 804d8bf:  ret
 804d8c0:  cmp edi, 0x8
 804d8c3:  ja 804d8e0
 804d8c5:  mov DWORD PTR [ebp+0x8], esi
 804d8c8:  mov ebx, DWORD PTR [ebp-0xc]
 804d8cb:  mov esi, DWORD PTR [ebp-0x8]
 804d8ce:  mov edi, DWORD PTR [ebp-0x4]
 804d8d1:  mov esp, ebp
 804d8d3:  pop ebp
 804d8d4:  jmp 804d6f0
 804d8d9:  lea esi, [esi]
 804d8e0:  cmp edi, 0xf
 804d8e3:  ja 804d8ea
 804d8e5:  mov edi, 0x10
 804d8ea:  mov edx, 0xffffffec
 804d8f0:  mov eax, gs:0x0
 804d8f6:  mov edx, DWORD PTR [eax+edx]
 804d8f9:  test edx, edx
 804d8fb:  mov DWORD PTR [ebp-0x14], edx
 804d8fe:  je 804d91b
 804d900:  mov ecx, edx
 804d902:  xor eax, eax
 804d904:  mov edx, 0x1
 804d909:  cmp DWORD PTR gs:0xc, 0x0
 804d911:  je 804d914
 804d913:  cmpxchg DWORD PTR [ecx], edx
 804d917:  test eax, eax
 804d919:  je 804d930
 804d91b:  mov eax, DWORD PTR [ebp-0x14]
 804d91e:  lea edx, [edi+esi+0x10]
 804d922:  xor ebx, ebx
 804d924:  call 8049950
 804d929:  test eax, eax
 804d92b:  mov DWORD PTR [ebp-0x14], eax
 804d92e:  je 804d8b1
 804d930:  mov DWORD PTR [esp+0x8], esi
 804d934:  mov DWORD PTR [esp+0x4], edi
 804d938:  mov eax, DWORD PTR [ebp-0x14]
 804d93b:  mov DWORD PTR [esp], eax
 804d93e:  call 804c9f0
 804d943:  test eax, eax
 804d945:  mov ebx, eax
 804d947:  je 804d965
 804d949:  mov ecx, DWORD PTR [ebp-0x14]
 804d94c:  cmp DWORD PTR gs:0xc, 0x0
 804d954:  je 804d957
 804d956:  sub DWORD PTR [ecx], 0x1
 804d95a:  jne 804ecbe
 804d960:  jmp 804d8b1
 804d965:  cmp DWORD PTR [ebp-0x14], 0x80d1d40
 804d96c:  je 804d9d7
 804d96e:  mov edx, DWORD PTR [ebp-0x14]
 804d971:  cmp DWORD PTR gs:0xc, 0x0
 804d979:  je 804d97c
 804d97b:  sub DWORD PTR [edx], 0x1
 804d97f:  jne 804ecca
 804d985:  mov ecx, 0x1
 804d98a:  mov eax, ebx
 804d98c:  cmp DWORD PTR gs:0xc, 0x0
 804d994:  je 804d997
 804d996:  cmpxchg DWORD PTR ds:0x80d1d40, ecx
 804d99e:  jne 804ecd6
 804d9a4:  mov DWORD PTR [esp+0x8], esi
 804d9a8:  mov DWORD PTR [esp+0x4], edi
 804d9ac:  mov DWORD PTR [esp], 0x80d1d40
 804d9b3:  call 804c9f0
 804d9b8:  mov ebx, eax
 804d9ba:  cmp DWORD PTR gs:0xc, 0x0
 804d9c2:  je 804d9c5
 804d9c4:  sub DWORD PTR ds:0x80d1d40, 0x1
 804d9cc:  jne 804ece6
 804d9d2:  jmp 804d8b1
 804d9d7:  cmp DWORD PTR ds:0x80d2180, 0x1
 804d9de:  sbb ecx, ecx
 804d9e0:  not ecx
 804d9e2:  and ecx, 0x80d1d40
 804d9e8:  cmp DWORD PTR gs:0xc, 0x0
 804d9f0:  je 804d9f3
 804d9f2:  sub DWORD PTR ds:0x80d1d40, 0x1
 804d9fa:  jne 804ecf6
 804da00:  mov edx, esi
 804da02:  mov eax, ecx
 804da04:  call 8049950
 804da09:  test eax, eax
 804da0b:  mov DWORD PTR [ebp-0x10], eax
 804da0e:  je 804d8b1
 804da14:  mov DWORD PTR [esp+0x8], esi
 804da18:  mov DWORD PTR [esp+0x4], edi
 804da1c:  mov DWORD PTR [esp], eax
 804da1f:  call 804c9f0
 804da24:  mov edx, DWORD PTR [ebp-0x10]
 804da27:  mov ebx, eax
 804da29:  cmp DWORD PTR gs:0xc, 0x0
 804da31:  je 804da34
 804da33:  sub DWORD PTR [edx], 0x1
 804da37:  jne 804ed06
 804da3d:  jmp 804d8b1
 804da42:  lea esi, [esi]
 804da49:  lea edi, [edi]

0804da50 <memalign_hook_ini>:
 804da50:  push ebp
 804da51:  mov ebp, esp
 804da53:  sub esp, 0x8
 804da56:  mov DWORD PTR [esp], ebx
 804da59:  mov DWORD PTR [esp+0x4], esi
 804da5d:  mov esi, DWORD PTR [ebp+0x8]
 804da60:  mov ebx, DWORD PTR [ebp+0xc]
 804da63:  mov DWORD PTR ds:0x80d0d3c, 0x0
 804da6d:  call 804a310
 804da72:  mov DWORD PTR [ebp+0x8], esi
 804da75:  mov DWORD PTR [ebp+0xc], ebx
 804da78:  mov ebx, DWORD PTR [esp]
 804da7b:  mov esi, DWORD PTR [esp+0x4]
 804da7f:  mov esp, ebp
 804da81:  pop ebp
 804da82:  jmp 804d880
 804da87:  mov esi, esi
 804da89:  lea edi, [edi]

0804da90 <__posix_memalign>:
 804da90:  push ebp
 804da91:  mov ebp, esp
 804da93:  push ebx
 804da94:  sub esp, 0xc
 804da97:  mov ecx, DWORD PTR [ebp+0xc]
 804da9a:  mov ebx, DWORD PTR ds:0x80d0d3c
 804daa0:  test cl, 0x3
 804daa3:  jne 804dab1
 804daa5:  mov edx, ecx
 804daa7:  shr edx, 0x2
 804daaa:  lea eax, [edx-0x1]
 804daad:  test eax, edx
 804daaf:  je 804dac0
 804dab1:  mov eax, 0x16
 804dab6:  add esp, 0xc
 804dab9:  pop ebx
 804daba:  pop ebp
 804dabb:  ret
 804dabc:  lea esi, [esi]
 804dac0:  test ecx, ecx
 804dac2:  je 804dab1
 804dac4:  test ebx, ebx
 804dac6:  xchg ax, ax
 804dac8:  je 804daf8
 804daca:  mov eax, DWORD PTR [ebp+0x4]
 804dacd:  mov DWORD PTR [esp+0x8], eax
 804dad1:  mov eax, DWORD PTR [ebp+0x10]
 804dad4:  mov DWORD PTR [esp], ecx
 804dad7:  mov DWORD PTR [esp+0x4], eax
 804dadb:  call ebx
 804dadd:  mov edx, eax
 804dadf:  test edx, edx
 804dae1:  mov eax, 0xc
 804dae6:  je 804dab6
 804dae8:  mov eax, DWORD PTR [ebp+0x8]
 804daeb:  mov DWORD PTR [eax], edx
 804daed:  add esp, 0xc
 804daf0:  xor eax, eax
 804daf2:  pop ebx
 804daf3:  pop ebp
 804daf4:  ret
 804daf5:  lea esi, [esi]
 804daf8:  mov eax, DWORD PTR [ebp+0x10]
 804dafb:  mov DWORD PTR [esp], ecx
 804dafe:  mov DWORD PTR [esp+0x4], eax
 804db02:  call 804d880
 804db07:  mov edx, eax
 804db09:  jmp 804dadf
 804db0b:  nop
 804db0c:  lea esi, [esi]

0804db10 <__libc_realloc>:
 804db10:  push ebp
 804db11:  mov ebp, esp
 804db13:  sub esp, 0x34
 804db16:  mov DWORD PTR [ebp-0xc], ebx
 804db19:  mov ebx, DWORD PTR [ebp+0x8]
 804db1c:  mov DWORD PTR [ebp-0x4], edi
 804db1f:  mov edi, DWORD PTR [ebp+0xc]
 804db22:  mov DWORD PTR [ebp-0x8], esi
 804db25:  mov edx, DWORD PTR ds:0x80d0d38
 804db2b:  test edx, edx
 804db2d:  je 804db50
 804db2f:  mov eax, DWORD PTR [ebp+0x4]
 804db32:  mov DWORD PTR [esp], ebx
 804db35:  mov DWORD PTR [esp+0x4], edi
 804db39:  mov DWORD PTR [esp+0x8], eax
 804db3d:  call edx
 804db3f:  mov ebx, eax
 804db41:  mov eax, ebx
 804db43:  mov esi, DWORD PTR [ebp-0x8]
 804db46:  mov ebx, DWORD PTR [ebp-0xc]
 804db49:  mov edi, DWORD PTR [ebp-0x4]
 804db4c:  mov esp, ebp
 804db4e:  pop ebp
 804db4f:  ret
 804db50:  test edi, edi
 804db52:  je 804dc28
 804db58:  test ebx, ebx
 804db5a:  je 804dc88
 804db60:  lea eax, [ebx-0x8]
 804db63:  mov edx, DWORD PTR [eax+0x4]
 804db66:  mov DWORD PTR [ebp-0x24], eax
 804db69:  mov ecx, edx
 804db6b:  and ecx, 0xf8
 804db6e:  mov eax, ecx
 804db70:  neg eax
 804db72:  cmp DWORD PTR [ebp-0x24], eax
 804db75:  mov DWORD PTR [ebp-0x20], ecx
 804db78:  ja 804dd2a
 804db7e:  test BYTE PTR [ebp-0x24], 0x7
 804db82:  jne 804dd2a
 804db88:  cmp edi, 0xdf
 804db8b:  ja 804dd10
 804db91:  lea eax, [edi+0xb]
 804db94:  mov esi, 0x10
 804db99:  cmp eax, 0xf
 804db9c:  ja 804dc40
 804dba2:  test dl, 0x2
 804dba5:  jne 804dc4e
 804dbab:  and edx, 0x4
 804dbae:  mov esi, 0x80d1d40
 804dbb3:  je 804dbc1
 804dbb5:  and DWORD PTR [ebp-0x24], 0xfff00000
 804dbbc:  mov ecx, DWORD PTR [ebp-0x24]
 804dbbf:  mov esi, DWORD PTR [ecx]
 804dbc1:  xor eax, eax
 804dbc3:  mov ecx, 0x1
 804dbc8:  cmp DWORD PTR gs:0xc, 0x0
 804dbd0:  je 804dbd3
 804dbd2:  cmpxchg DWORD PTR [esi], ecx
 804dbd6:  jne 804ed12
 804dbdc:  mov edx, 0xffffffec
 804dbe2:  mov eax, gs:0x0
 804dbe8:  mov DWORD PTR [eax+edx], esi
 804dbeb:  mov DWORD PTR [esp+0x8], edi
 804dbef:  mov DWORD PTR [esp+0x4], ebx
 804dbf3:  mov DWORD PTR [esp], esi
 804dbf6:  call 804cbf0
 804dbfb:  mov DWORD PTR [ebp-0x10], eax
 804dbfe:  cmp DWORD PTR gs:0xc, 0x0
 804dc06:  je 804dc09
 804dc08:  sub DWORD PTR [esi], 0x1
 804dc0c:  jne 804ed1e
 804dc12:  mov eax, DWORD PTR [ebp-0x10]
 804dc15:  test eax, eax
 804dc17:  je 804dca0
 804dc1d:  mov ebx, DWORD PTR [ebp-0x10]
 804dc20:  jmp 804db41
 804dc25:  lea esi, [esi]
 804dc28:  test ebx, ebx
 804dc2a:  je 804dc88
 804dc2c:  mov DWORD PTR [esp], ebx
 804dc2f:  xor ebx, ebx
 804dc31:  call 804b4a0
 804dc36:  xchg ax, ax
 804dc38:  jmp 804db41
 804dc3d:  lea esi, [esi]
 804dc40:  mov esi, eax
 804dc42:  and esi, 0xf8
 804dc45:  test dl, 0x2
 804dc48:  je 804dbab
 804dc4e:  mov edx, DWORD PTR [ebp-0x24]
 804dc51:  mov eax, ds:0x80d21bc
 804dc56:  mov ecx, DWORD PTR [ebp-0x20]
 804dc59:  mov edx, DWORD PTR [edx]
 804dc5b:  sub eax, 0x1
 804dc5e:  mov DWORD PTR [ebp-0x18], edx
 804dc61:  lea edx, [eax+edx+0x4]
 804dc65:  not eax
 804dc67:  add ecx, DWORD PTR [ebp-0x18]
 804dc6a:  add edx, esi
 804dc6c:  and edx, eax
 804dc6e:  mov DWORD PTR [ebp-0x1c], edx
 804dc71:  cmp edx, ecx
 804dc73:  mov DWORD PTR [ebp-0x14], ecx
 804dc76:  jne 804dd49
 804dc7c:  mov ebx, DWORD PTR [ebp-0x24]
 804dc7f:  add ebx, 0x8
 804dc82:  jmp 804db41
 804dc87:  nop
 804dc88:  mov DWORD PTR [ebp+0x8], edi
 804dc8b:  mov ebx, DWORD PTR [ebp-0xc]
 804dc8e:  mov esi, DWORD PTR [ebp-0x8]
 804dc91:  mov edi, DWORD PTR [ebp-0x4]
 804dc94:  mov esp, ebp
 804dc96:  pop ebp
 804dc97:  jmp 804d6f0
 804dc9c:  lea esi, [esi]
 804dca0:  mov DWORD PTR [esp], edi
 804dca3:  call 804d6f0
 804dca8:  test eax, eax
 804dcaa:  mov edi, eax
 804dcac:  je 804dd42
 804dcb2:  mov eax, DWORD PTR [ebp-0x20]
 804dcb5:  mov DWORD PTR [esp+0x4], ebx
 804dcb9:  mov DWORD PTR [esp], edi
 804dcbc:  sub eax, 0x4
 804dcbf:  mov DWORD PTR [esp+0x8], eax
 804dcc3:  call 804efc0
 804dcc8:  mov eax, DWORD PTR [ebp-0x10]
 804dccb:  mov ecx, 0x1
 804dcd0:  cmp DWORD PTR gs:0xc, 0x0
 804dcd8:  je 804dcdb
 804dcda:  cmpxchg DWORD PTR [esi], ecx
 804dcde:  jne 804ed2a
 804dce4:  mov DWORD PTR [esp+0x4], ebx
 804dce8:  mov DWORD PTR [esp], esi
 804dceb:  call 804ac70
 804dcf0:  cmp DWORD PTR gs:0xc, 0x0
 804dcf8:  je 804dcfb
 804dcfa:  sub DWORD PTR [esi], 0x1
 804dcfe:  jne 804ed36
 804dd04:  mov ebx, edi
 804dd06:  jmp 804db41
 804dd0b:  nop
 804dd0c:  lea esi, [esi]
 804dd10:  mov edx, 0xffffffe8
 804dd16:  xor ebx, ebx
 804dd18:  mov eax, gs:0x0
 804dd1e:  mov DWORD PTR [eax+edx], 0xc
 804dd25:  jmp 804db41
 804dd2a:  mov eax, ds:0x80d0d44
 804dd2f:  mov ecx, ebx
 804dd31:  mov edx, 0x80afd75
 804dd36:  xor ebx, ebx
 804dd38:  call 8049610
 804dd3d:  jmp 804db41
 804dd42:  xor ebx, ebx
 804dd44:  jmp 804db41
 804dd49:  mov DWORD PTR [esp+0xc], 0x1
 804dd51:  mov DWORD PTR [esp+0x8], edx
 804dd55:  mov DWORD PTR [esp+0x4], ecx
 804dd59:  mov eax, DWORD PTR [ebp-0x24]
 804dd5c:  sub eax, DWORD PTR [ebp-0x18]
 804dd5f:  mov DWORD PTR [esp], eax
 804dd62:  call 8050120
 804dd67:  cmp eax, 0xff
 804dd6a:  je 804dda8
 804dd6c:  add eax, DWORD PTR [ebp-0x18]
 804dd6f:  mov DWORD PTR [ebp-0x24], eax
 804dd72:  mov eax, DWORD PTR [ebp-0x1c]
 804dd75:  sub eax, DWORD PTR [ebp-0x18]
 804dd78:  mov edx, DWORD PTR [ebp-0x24]
 804dd7b:  or eax, 0x2
 804dd7e:  mov DWORD PTR [edx+0x4], eax
 804dd81:  mov eax, DWORD PTR [ebp-0x1c]
 804dd84:  sub eax, DWORD PTR [ebp-0x14]
 804dd87:  add eax, DWORD PTR ds:0x80d21c0
 804dd8d:  cmp eax, DWORD PTR ds:0x80d21c4
 804dd93:  mov ds:0x80d21c0, eax
 804dd98:  jbe 804dc7c
 804dd9e:  mov ds:0x80d21c4, eax
 804dda3:  jmp 804dc7c
 804dda8:  mov eax, DWORD PTR [ebp-0x20]
 804ddab:  sub eax, 0x4
 804ddae:  cmp esi, eax
 804ddb0:  jbe 804db41
 804ddb6:  mov DWORD PTR [esp], edi
 804ddb9:  call 804d6f0
 804ddbe:  test eax, eax
 804ddc0:  mov esi, eax
 804ddc2:  je 804dd42
 804ddc8:  mov eax, DWORD PTR [ebp-0x20]
 804ddcb:  mov DWORD PTR [esp+0x4], ebx
 804ddcf:  mov ebx, esi
 804ddd1:  mov DWORD PTR [esp], esi
 804ddd4:  sub eax, 0x8
 804ddd7:  mov DWORD PTR [esp+0x8], eax
 804dddb:  call 804efc0
 804dde0:  mov eax, DWORD PTR [ebp-0x24]
 804dde3:  call 80496f0
 804dde8:  jmp 804db41
 804dded:  lea esi, [esi]

0804ddf0 <realloc_hook_ini>:
 804ddf0:  push ebp
 804ddf1:  mov ebp, esp
 804ddf3:  sub esp, 0x8
 804ddf6:  mov DWORD PTR [esp], ebx
 804ddf9:  mov DWORD PTR [esp+0x4], esi
 804ddfd:  mov esi, DWORD PTR [ebp+0x8]
 804de00:  mov ebx, DWORD PTR [ebp+0xc]
 804de03:  mov DWORD PTR ds:0x80d0d34, 0x0
 804de0d:  mov DWORD PTR ds:0x80d0d38, 0x0
 804de17:  call 804a310
 804de1c:  mov DWORD PTR [ebp+0xc], ebx
 804de1f:  mov DWORD PTR [ebp+0x8], esi
 804de22:  mov ebx, DWORD PTR [esp]
 804de25:  mov esi, DWORD PTR [esp+0x4]
 804de29:  mov esp, ebp
 804de2b:  pop ebp
 804de2c:  jmp 804db10
 804de31:  jmp 804de40
 804de33:  nop
 804de34:  nop
 804de35:  nop
 804de36:  nop
 804de37:  nop
 804de38:  nop
 804de39:  nop
 804de3a:  nop
 804de3b:  nop
 804de3c:  nop
 804de3d:  nop
 804de3e:  nop
 804de3f:  nop

0804de40 <malloc_atfork>:
 804de40:  push ebp
 804de41:  mov eax, gs:0x0
 804de47:  mov ebp, esp
 804de49:  sub esp, 0x14
 804de4c:  mov edx, 0xffffffec
 804de52:  mov DWORD PTR [ebp-0xc], ebx
 804de55:  mov ebx, DWORD PTR [ebp+0x8]
 804de58:  mov DWORD PTR [ebp-0x8], esi
 804de5b:  mov DWORD PTR [ebp-0x4], edi
 804de5e:  cmp DWORD PTR [eax+edx], 0xff
 804de62:  je 804deb0
 804de64:  xor eax, eax
 804de66:  mov ecx, 0x1
 804de6b:  cmp DWORD PTR gs:0xc, 0x0
 804de73:  je 804de76
 804de75:  cmpxchg DWORD PTR ds:0x80d21d8, ecx
 804de7d:  jne 804ed42
 804de83:  cmp DWORD PTR gs:0xc, 0x0
 804de8b:  je 804de8e
 804de8d:  sub DWORD PTR ds:0x80d21d8, 0x1
 804de95:  jne 804ed52
 804de9b:  mov DWORD PTR [ebp+0x8], ebx
 804de9e:  mov esi, DWORD PTR [ebp-0x8]
 804dea1:  mov ebx, DWORD PTR [ebp-0xc]
 804dea4:  mov edi, DWORD PTR [ebp-0x4]
 804dea7:  mov esp, ebp
 804dea9:  pop ebp
 804deaa:  jmp 804d6f0
 804deaf:  nop
 804deb0:  cmp DWORD PTR ds:0x80d21e0, 0x804c8e0
 804deba:  je 804ded7
 804debc:  mov DWORD PTR [ebp+0xc], ebx
 804debf:  mov esi, DWORD PTR [ebp-0x8]
 804dec2:  mov DWORD PTR [ebp+0x8], 0x80d1d40
 804dec9:  mov ebx, DWORD PTR [ebp-0xc]
 804decc:  mov edi, DWORD PTR [ebp-0x4]
 804decf:  mov esp, ebp
 804ded1:  pop ebp
 804ded2:  jmp 804b960
 804ded7:  call 8049bb0
 804dedc:  xor esi, esi
 804dede:  test eax, eax
 804dee0:  js 804df5d
 804dee2:  lea eax, [ebx+0x1]
 804dee5:  mov DWORD PTR [esp+0x4], eax
 804dee9:  mov DWORD PTR [esp], 0x80d1d40
 804def0:  call 804b960
 804def5:  test eax, eax
 804def7:  mov esi, eax
 804def9:  je 804df5d
 804defb:  lea edi, [eax-0x8]
 804defe:  mov edx, DWORD PTR [edi+0x4]
 804df01:  mov eax, edx
 804df03:  and eax, 0x2
 804df06:  cmp eax, 0x1
 804df09:  sbb eax, eax
 804df0b:  and edx, 0xf8
 804df0e:  and eax, 0xfc
 804df11:  add eax, 0x9
 804df14:  sub edx, eax
 804df16:  cmp ebx, edx
 804df18:  jae 804df50
 804df1a:  mov ecx, edx
 804df1c:  sub ecx, ebx
 804df1e:  cmp ecx, 0xff
 804df24:  lea eax, [esi+edx]
 804df27:  ja 804df43
 804df29:  jmp 804df6c
 804df2b:  nop
 804df2c:  lea esi, [esi]
 804df30:  sub ecx, 0xff
 804df36:  sub eax, 0xff
 804df3b:  cmp ecx, 0xff
 804df41:  jbe 804df6c
 804df43:  sub edx, 0xff
 804df49:  cmp ebx, edx
 804df4b:  mov BYTE PTR [eax], 0xff
 804df4e:  jb 804df30
 804df50:  mov eax, edi
 804df52:  shr eax, 0xb
 804df55:  shr edi, 0x3
 804df58:  xor eax, edi
 804df5a:  mov BYTE PTR [esi+ebx], al
 804df5d:  mov eax, esi
 804df5f:  mov ebx, DWORD PTR [ebp-0xc]
 804df62:  mov esi, DWORD PTR [ebp-0x8]
 804df65:  mov edi, DWORD PTR [ebp-0x4]
 804df68:  mov esp, ebp
 804df6a:  pop ebp
 804df6b:  ret
 804df6c:  mov eax, edx
 804df6e:  sub al, bl
 804df70:  mov BYTE PTR [esi+edx], al
 804df73:  jmp 804df50
 804df75:  lea esi, [esi]
 804df79:  lea edi, [edi]

0804df80 <memalign_check>:
 804df80:  push ebp
 804df81:  mov ebp, esp
 804df83:  push edi
 804df84:  push esi
 804df85:  push ebx
 804df86:  sub esp, 0x10
 804df89:  mov ebx, DWORD PTR [ebp+0x8]
 804df8c:  mov esi, DWORD PTR [ebp+0xc]
 804df8f:  cmp ebx, 0x8
 804df92:  jbe 804e0b0
 804df98:  cmp ebx, 0xf
 804df9b:  jbe 804e090
 804dfa1:  cmp esi, 0xff
 804dfa4:  je 804e188
 804dfaa:  lea eax, [esi+0x1]
 804dfad:  cmp eax, 0xdf
 804dfb0:  mov DWORD PTR [ebp-0x10], eax
 804dfb3:  ja 804e188
 804dfb9:  xor eax, eax
 804dfbb:  mov ecx, 0x1
 804dfc0:  cmp DWORD PTR gs:0xc, 0x0
 804dfc8:  je 804dfcb
 804dfca:  cmpxchg DWORD PTR ds:0x80d1d40, ecx
 804dfd2:  jne 804ed62
 804dfd8:  call 8049bb0
 804dfdd:  xor edi, edi
 804dfdf:  xor edx, edx
 804dfe1:  test eax, eax
 804dfe3:  js 804e000
 804dfe5:  mov ecx, DWORD PTR [ebp-0x10]
 804dfe8:  mov DWORD PTR [esp+0x4], ebx
 804dfec:  mov DWORD PTR [esp], 0x80d1d40
 804dff3:  mov DWORD PTR [esp+0x8], ecx
 804dff7:  call 804c9f0
 804dffc:  mov edx, eax
 804dffe:  mov edi, eax
 804e000:  cmp DWORD PTR gs:0xc, 0x0
 804e008:  je 804e00b
 804e00a:  sub DWORD PTR ds:0x80d1d40, 0x1
 804e012:  jne 804ed72
 804e018:  test edx, edx
 804e01a:  je 804e07f
 804e01c:  lea ebx, [edx-0x8]
 804e01f:  mov edx, DWORD PTR [ebx+0x4]
 804e022:  mov eax, edx
 804e024:  and eax, 0x2
 804e027:  cmp eax, 0x1
 804e02a:  sbb eax, eax
 804e02c:  and edx, 0xf8
 804e02f:  and eax, 0xfc
 804e032:  add eax, 0x9
 804e035:  sub edx, eax
 804e037:  cmp esi, edx
 804e039:  jae 804e070
 804e03b:  mov ecx, edx
 804e03d:  sub ecx, esi
 804e03f:  cmp ecx, 0xff
 804e045:  lea eax, [edi+edx]
 804e048:  ja 804e063
 804e04a:  jmp 804e0a0
 804e04c:  lea esi, [esi]
 804e050:  sub ecx, 0xff
 804e056:  sub eax, 0xff
 804e05b:  cmp ecx, 0xff
 804e061:  jbe 804e0a0
 804e063:  sub edx, 0xff
 804e069:  cmp esi, edx
 804e06b:  mov BYTE PTR [eax], 0xff
 804e06e:  jb 804e050
 804e070:  mov eax, ebx
 804e072:  mov edx, edi
 804e074:  shr eax, 0xb
 804e077:  shr ebx, 0x3
 804e07a:  xor eax, ebx
 804e07c:  mov BYTE PTR [edi+esi], al
 804e07f:  add esp, 0x10
 804e082:  mov eax, edx
 804e084:  pop ebx
 804e085:  pop esi
 804e086:  pop edi
 804e087:  pop ebp
 804e088:  ret
 804e089:  lea esi, [esi]
 804e090:  mov ebx, 0x10
 804e095:  jmp 804dfa1
 804e09a:  lea esi, [esi]
 804e0a0:  mov eax, edx
 804e0a2:  mov ecx, esi
 804e0a4:  sub al, cl
 804e0a6:  mov BYTE PTR [edi+edx], al
 804e0a9:  jmp 804e070
 804e0ab:  nop
 804e0ac:  lea esi, [esi]
 804e0b0:  cmp esi, 0xff
 804e0b3:  je 804e188
 804e0b9:  xor eax, eax
 804e0bb:  mov ecx, 0x1
 804e0c0:  cmp DWORD PTR gs:0xc, 0x0
 804e0c8:  je 804e0cb
 804e0ca:  cmpxchg DWORD PTR ds:0x80d1d40, ecx
 804e0d2:  jne 804ed82
 804e0d8:  call 8049bb0
 804e0dd:  xor edi, edi
 804e0df:  xor edx, edx
 804e0e1:  test eax, eax
 804e0e3:  js 804e0fc
 804e0e5:  lea eax, [esi+0x1]
 804e0e8:  mov DWORD PTR [esp+0x4], eax
 804e0ec:  mov DWORD PTR [esp], 0x80d1d40
 804e0f3:  call 804b960
 804e0f8:  mov edx, eax
 804e0fa:  mov edi, eax
 804e0fc:  cmp DWORD PTR gs:0xc, 0x0
 804e104:  je 804e107
 804e106:  sub DWORD PTR ds:0x80d1d40, 0x1
 804e10e:  jne 804ed92
 804e114:  test edx, edx
 804e116:  je 804e07f
 804e11c:  lea ebx, [edx-0x8]
 804e11f:  mov edx, DWORD PTR [ebx+0x4]
 804e122:  mov eax, edx
 804e124:  and eax, 0x2
 804e127:  cmp eax, 0x1
 804e12a:  sbb eax, eax
 804e12c:  and edx, 0xf8
 804e12f:  and eax, 0xfc
 804e132:  add eax, 0x9
 804e135:  sub edx, eax
 804e137:  cmp esi, edx
 804e139:  jae 804e070
 804e13f:  mov ecx, edx
 804e141:  sub ecx, esi
 804e143:  cmp ecx, 0xff
 804e149:  lea eax, [edi+edx]
 804e14c:  ja 804e16f
 804e14e:  jmp 804e0a0
 804e153:  nop
 804e154:  lea esi, [esi]
 804e158:  sub ecx, 0xff
 804e15e:  sub eax, 0xff
 804e163:  cmp ecx, 0xff
 804e169:  jbe 804e0a0
 804e16f:  sub edx, 0xff
 804e175:  cmp esi, edx
 804e177:  mov BYTE PTR [eax], 0xff
 804e17a:  jb 804e158
 804e17c:  jmp 804e070
 804e181:  lea esi, [esi]
 804e188:  mov edx, 0xffffffe8
 804e18e:  mov eax, gs:0x0
 804e194:  mov DWORD PTR [eax+edx], 0xc
 804e19b:  xor edx, edx
 804e19d:  jmp 804e07f
 804e1a2:  lea esi, [esi]
 804e1a9:  lea edi, [edi]

0804e1b0 <_int_valloc>:
 804e1b0:  push ebp
 804e1b1:  mov ebp, esp
 804e1b3:  push ebx
 804e1b4:  sub esp, 0xc
 804e1b7:  mov ebx, DWORD PTR [ebp+0x8]
 804e1ba:  test BYTE PTR [ebx+0x4], 0x1
 804e1be:  jne 804e1c7
 804e1c0:  mov eax, ebx
 804e1c2:  call 8049d90
 804e1c7:  mov eax, DWORD PTR [ebp+0xc]
 804e1ca:  mov DWORD PTR [esp], ebx
 804e1cd:  mov DWORD PTR [esp+0x8], eax
 804e1d1:  mov eax, ds:0x80d21bc
 804e1d6:  mov DWORD PTR [esp+0x4], eax
 804e1da:  call 804c9f0
 804e1df:  add esp, 0xc
 804e1e2:  pop ebx
 804e1e3:  pop ebp
 804e1e4:  ret
 804e1e5:  lea esi, [esi]
 804e1e9:  lea edi, [edi]

0804e1f0 <__libc_valloc>:
 804e1f0:  push ebp
 804e1f1:  mov ebp, esp
 804e1f3:  sub esp, 0x20
 804e1f6:  mov eax, ds:0x80d0d40
 804e1fb:  mov DWORD PTR [ebp-0x4], edi
 804e1fe:  mov edi, DWORD PTR [ebp+0x8]
 804e201:  mov DWORD PTR [ebp-0xc], ebx
 804e204:  mov DWORD PTR [ebp-0x8], esi
 804e207:  test eax, eax
 804e209:  js 804e240
 804e20b:  mov ecx, DWORD PTR ds:0x80d0d3c
 804e211:  mov esi, DWORD PTR ds:0x80d21bc
 804e217:  test ecx, ecx
 804e219:  je 804e248
 804e21b:  mov eax, DWORD PTR [ebp+0x4]
 804e21e:  mov DWORD PTR [esp+0x4], edi
 804e222:  mov DWORD PTR [esp], esi
 804e225:  mov DWORD PTR [esp+0x8], eax
 804e229:  call ecx
 804e22b:  mov ebx, eax
 804e22d:  mov eax, ebx
 804e22f:  mov esi, DWORD PTR [ebp-0x8]
 804e232:  mov ebx, DWORD PTR [ebp-0xc]
 804e235:  mov edi, DWORD PTR [ebp-0x4]
 804e238:  mov esp, ebp
 804e23a:  pop ebp
 804e23b:  ret
 804e23c:  lea esi, [esi]
 804e240:  call 804a310
 804e245:  jmp 804e20b
 804e247:  nop
 804e248:  mov edx, 0xffffffec
 804e24e:  mov eax, gs:0x0
 804e254:  mov edx, DWORD PTR [eax+edx]
 804e257:  test edx, edx
 804e259:  mov DWORD PTR [ebp-0x14], edx
 804e25c:  je 804e27a
 804e25e:  mov eax, ecx
 804e260:  mov edx, 0x1
 804e265:  mov ecx, DWORD PTR [ebp-0x14]
 804e268:  cmp DWORD PTR gs:0xc, 0x0
 804e270:  je 804e273
 804e272:  cmpxchg DWORD PTR [ecx], edx
 804e276:  test eax, eax
 804e278:  je 804e28f
 804e27a:  mov eax, DWORD PTR [ebp-0x14]
 804e27d:  lea edx, [esi+edi+0x10]
 804e281:  xor ebx, ebx
 804e283:  call 8049950
 804e288:  test eax, eax
 804e28a:  mov DWORD PTR [ebp-0x14], eax
 804e28d:  je 804e22d
 804e28f:  mov eax, DWORD PTR [ebp-0x14]
 804e292:  mov DWORD PTR [esp+0x4], edi
 804e296:  mov DWORD PTR [esp], eax
 804e299:  call 804e1b0
 804e29e:  mov edx, DWORD PTR [ebp-0x14]
 804e2a1:  mov ebx, eax
 804e2a3:  cmp DWORD PTR gs:0xc, 0x0
 804e2ab:  je 804e2ae
 804e2ad:  sub DWORD PTR [edx], 0x1
 804e2b1:  jne 804eda2
 804e2b7:  test ebx, ebx
 804e2b9:  jne 804e22d
 804e2bf:  cmp edx, 0x80d1d40
 804e2c5:  je 804e319
 804e2c7:  mov eax, ebx
 804e2c9:  mov ecx, 0x1
 804e2ce:  cmp DWORD PTR gs:0xc, 0x0
 804e2d6:  je 804e2d9
 804e2d8:  cmpxchg DWORD PTR ds:0x80d1d40, ecx
 804e2e0:  jne 804edae
 804e2e6:  mov DWORD PTR [esp+0x8], edi
 804e2ea:  mov DWORD PTR [esp+0x4], esi
 804e2ee:  mov DWORD PTR [esp], 0x80d1d40
 804e2f5:  call 804c9f0
 804e2fa:  mov ebx, eax
 804e2fc:  cmp DWORD PTR gs:0xc, 0x0
 804e304:  je 804e307
 804e306:  sub DWORD PTR ds:0x80d1d40, 0x1
 804e30e:  jne 804edbe
 804e314:  jmp 804e22d
 804e319:  cmp DWORD PTR ds:0x80d2180, 0x1
 804e320:  mov edx, edi
 804e322:  sbb eax, eax
 804e324:  not eax
 804e326:  and eax, 0x80d1d40
 804e32b:  call 8049950
 804e330:  test eax, eax
 804e332:  mov DWORD PTR [ebp-0x10], eax
 804e335:  je 804e22d
 804e33b:  mov DWORD PTR [esp+0x8], edi
 804e33f:  mov DWORD PTR [esp+0x4], esi
 804e343:  mov DWORD PTR [esp], eax
 804e346:  call 804c9f0
 804e34b:  mov ecx, DWORD PTR [ebp-0x10]
 804e34e:  mov ebx, eax
 804e350:  cmp DWORD PTR gs:0xc, 0x0
 804e358:  je 804e35b
 804e35a:  sub DWORD PTR [ecx], 0x1
 804e35e:  jne 804edce
 804e364:  jmp 804e22d
 804e369:  lea esi, [esi]

0804e370 <__libc_pvalloc>:
 804e370:  push ebp
 804e371:  mov ebp, esp
 804e373:  sub esp, 0x1c
 804e376:  mov eax, ds:0x80d0d40
 804e37b:  mov DWORD PTR [ebp-0xc], ebx
 804e37e:  mov DWORD PTR [ebp-0x8], esi
 804e381:  mov DWORD PTR [ebp-0x4], edi
 804e384:  test eax, eax
 804e386:  js 804e4c8
 804e38c:  mov eax, ds:0x80d21bc
 804e391:  mov edi, DWORD PTR [ebp+0x8]
 804e394:  mov ecx, DWORD PTR ds:0x80d0d3c
 804e39a:  mov DWORD PTR [ebp-0x10], eax
 804e39d:  sub eax, 0x1
 804e3a0:  add edi, eax
 804e3a2:  not eax
 804e3a4:  and edi, eax
 804e3a6:  test ecx, ecx
 804e3a8:  je 804e3d0
 804e3aa:  mov eax, DWORD PTR [ebp+0x4]
 804e3ad:  mov ebx, DWORD PTR [ebp-0x10]
 804e3b0:  mov DWORD PTR [esp+0x4], edi
 804e3b4:  mov DWORD PTR [esp+0x8], eax
 804e3b8:  mov DWORD PTR [esp], ebx
 804e3bb:  call ecx
 804e3bd:  mov esi, eax
 804e3bf:  mov eax, esi
 804e3c1:  mov ebx, DWORD PTR [ebp-0xc]
 804e3c4:  mov esi, DWORD PTR [ebp-0x8]
 804e3c7:  mov edi, DWORD PTR [ebp-0x4]
 804e3ca:  mov esp, ebp
 804e3cc:  pop ebp
 804e3cd:  ret
 804e3ce:  xchg ax, ax
 804e3d0:  mov edx, 0xffffffec
 804e3d6:  mov eax, gs:0x0
 804e3dc:  mov ebx, DWORD PTR [eax+edx]
 804e3df:  test ebx, ebx
 804e3e1:  je 804e4b0
 804e3e7:  mov eax, ecx
 804e3e9:  mov edx, 0x1
 804e3ee:  cmp DWORD PTR gs:0xc, 0x0
 804e3f6:  je 804e3f9
 804e3f8:  cmpxchg DWORD PTR [ebx], edx
 804e3fc:  test eax, eax
 804e3fe:  jne 804e4b0
 804e404:  test BYTE PTR [ebx+0x4], 0x1
 804e408:  je 804e4d8
 804e40e:  mov eax, ds:0x80d21bc
 804e413:  mov ecx, DWORD PTR [ebp+0x8]
 804e416:  mov DWORD PTR [esp], ebx
 804e419:  mov DWORD PTR [esp+0x4], eax
 804e41d:  lea edx, [eax+ecx-0x1]
 804e421:  mov ecx, eax
 804e423:  neg ecx
 804e425:  and edx, ecx
 804e427:  mov DWORD PTR [esp+0x8], edx
 804e42b:  call 804c9f0
 804e430:  mov esi, eax
 804e432:  cmp DWORD PTR gs:0xc, 0x0
 804e43a:  je 804e43d
 804e43c:  sub DWORD PTR [ebx], 0x1
 804e440:  jne 804edda
 804e446:  test esi, esi
 804e448:  jne 804e3bf
 804e44e:  cmp ebx, 0x80d1d40
 804e454:  je 804e4f0
 804e45a:  mov eax, esi
 804e45c:  mov ecx, 0x1
 804e461:  cmp DWORD PTR gs:0xc, 0x0
 804e469:  je 804e46c
 804e46b:  cmpxchg DWORD PTR ds:0x80d1d40, ecx
 804e473:  jne 804ede6
 804e479:  mov ebx, DWORD PTR [ebp-0x10]
 804e47c:  mov DWORD PTR [esp+0x8], edi
 804e480:  mov DWORD PTR [esp], 0x80d1d40
 804e487:  mov DWORD PTR [esp+0x4], ebx
 804e48b:  call 804c9f0
 804e490:  mov esi, eax
 804e492:  cmp DWORD PTR gs:0xc, 0x0
 804e49a:  je 804e49d
 804e49c:  sub DWORD PTR ds:0x80d1d40, 0x1
 804e4a4:  jne 804edf6
 804e4aa:  jmp 804e3bf
 804e4af:  nop
 804e4b0:  mov eax, DWORD PTR [ebp-0x10]
 804e4b3:  mov ecx, DWORD PTR [ebp+0x8]
 804e4b6:  lea edx, [ecx+eax*2+0x10]
 804e4ba:  mov eax, ebx
 804e4bc:  call 8049950
 804e4c1:  mov ebx, eax
 804e4c3:  jmp 804e404
 804e4c8:  call 804a310
 804e4cd:  lea esi, [esi]
 804e4d0:  jmp 804e38c
 804e4d5:  lea esi, [esi]
 804e4d8:  mov eax, ebx
 804e4da:  lea esi, [esi]
 804e4e0:  call 8049d90
 804e4e5:  lea esi, [esi]
 804e4e8:  jmp 804e40e
 804e4ed:  lea esi, [esi]
 804e4f0:  cmp DWORD PTR ds:0x80d2180, 0x1
 804e4f7:  mov ebx, DWORD PTR [ebp+0x8]
 804e4fa:  mov ecx, DWORD PTR [ebp-0x10]
 804e4fd:  sbb eax, eax
 804e4ff:  not eax
 804e501:  and eax, 0x80d1d40
 804e506:  lea edx, [ebx+ecx*2+0x10]
 804e50a:  call 8049950
 804e50f:  test eax, eax
 804e511:  mov ebx, eax
 804e513:  je 804e3bf
 804e519:  mov eax, DWORD PTR [ebp-0x10]
 804e51c:  mov DWORD PTR [esp+0x8], edi
 804e520:  mov DWORD PTR [esp], ebx
 804e523:  mov DWORD PTR [esp+0x4], eax
 804e527:  call 804c9f0
 804e52c:  mov esi, eax
 804e52e:  cmp DWORD PTR gs:0xc, 0x0
 804e536:  je 804e539
 804e538:  sub DWORD PTR [ebx], 0x1
 804e53c:  jne 804ee06
 804e542:  jmp 804e3bf
 804e547:  mov esi, esi
 804e549:  lea edi, [edi]

0804e550 <__malloc_get_state>:
 804e550:  push ebp
 804e551:  mov ebp, esp
 804e553:  push ebx
 804e554:  sub esp, 0x4
 804e557:  mov DWORD PTR [esp], 0x448
 804e55e:  call 804d6f0
 804e563:  mov ebx, eax
 804e565:  xor eax, eax
 804e567:  test ebx, ebx
 804e569:  je 804e6c3
 804e56f:  xor eax, eax
 804e571:  mov ecx, 0x1
 804e576:  cmp DWORD PTR gs:0xc, 0x0
 804e57e:  je 804e581
 804e580:  cmpxchg DWORD PTR ds:0x80d1d40, ecx
 804e588:  jne 804ee12
 804e58e:  mov eax, 0x80d1d40
 804e593:  call 8049d90
 804e598:  mov ecx, 0x80d1d70
 804e59d:  mov edx, 0x2
 804e5a2:  mov DWORD PTR [ebx+0x8], 0x0
 804e5a9:  mov DWORD PTR [ebx+0xc], 0x0
 804e5b0:  mov eax, ds:0x80d1d70
 804e5b5:  mov DWORD PTR [ebx], 0x444c4541
 804e5bb:  mov DWORD PTR [ebx+0x4], 0x3
 804e5c2:  mov DWORD PTR [ebx+0x14], 0x0
 804e5c9:  mov DWORD PTR [ebx+0x10], eax
 804e5cc:  jmp 804e5e9
 804e5ce:  xchg ax, ax
 804e5d0:  mov DWORD PTR [ebx+edx*8+0x8], eax
 804e5d4:  mov eax, DWORD PTR [ecx+0xc]
 804e5d7:  add ecx, 0x8
 804e5da:  mov DWORD PTR [ebx+edx*8+0xc], eax
 804e5de:  add edx, 0x1
 804e5e1:  cmp edx, 0x81
 804e5e7:  je 804e610
 804e5e9:  mov eax, DWORD PTR [ecx+0x8]
 804e5ec:  cmp eax, ecx
 804e5ee:  jne 804e5d0
 804e5f0:  mov DWORD PTR [ebx+edx*8+0xc], 0x0
 804e5f8:  add ecx, 0x8
 804e5fb:  mov DWORD PTR [ebx+edx*8+0x8], 0x0
 804e603:  add edx, 0x1
 804e606:  cmp edx, 0x81
 804e60c:  jne 804e5e9
 804e60e:  xchg ax, ax
 804e610:  mov eax, ds:0x80d21cc
 804e615:  mov DWORD PTR [ebx+0x410], eax
 804e61b:  mov eax, ds:0x80d2184
 804e620:  mov DWORD PTR [ebx+0x414], eax
 804e626:  mov eax, ds:0x80d21a0
 804e62b:  mov DWORD PTR [ebx+0x430], 0x0
 804e635:  mov DWORD PTR [ebx+0x418], eax
 804e63b:  mov eax, ds:0x80d21a4
 804e640:  mov DWORD PTR [ebx+0x41c], eax
 804e646:  mov eax, ds:0x80d21b0
 804e64b:  mov DWORD PTR [ebx+0x420], eax
 804e651:  mov eax, ds:0x80d21a8
 804e656:  mov DWORD PTR [ebx+0x424], eax
 804e65c:  mov eax, ds:0x80d0d44
 804e661:  mov DWORD PTR [ebx+0x428], eax
 804e667:  mov eax, ds:0x80d2188
 804e66c:  mov DWORD PTR [ebx+0x42c], eax
 804e672:  mov eax, ds:0x80d21ac
 804e677:  mov DWORD PTR [ebx+0x434], eax
 804e67d:  mov eax, ds:0x80d21b4
 804e682:  mov DWORD PTR [ebx+0x438], eax
 804e688:  mov eax, ds:0x80d21c0
 804e68d:  mov DWORD PTR [ebx+0x43c], eax
 804e693:  mov eax, ds:0x80d21c4
 804e698:  mov DWORD PTR [ebx+0x440], eax
 804e69e:  mov eax, ds:0x80d2210
 804e6a3:  mov DWORD PTR [ebx+0x444], eax
 804e6a9:  cmp DWORD PTR gs:0xc, 0x0
 804e6b1:  je 804e6b4
 804e6b3:  sub DWORD PTR ds:0x80d1d40, 0x1
 804e6bb:  jne 804ee22
 804e6c1:  mov eax, ebx
 804e6c3:  add esp, 0x4
 804e6c6:  pop ebx
 804e6c7:  pop ebp
 804e6c8:  ret
 804e6c9:  lea esi, [esi]

0804e6d0 <__malloc_stats>:
 804e6d0:  push ebp
 804e6d1:  mov ebp, esp
 804e6d3:  push edi
 804e6d4:  push esi
 804e6d5:  push ebx
 804e6d6:  sub esp, 0x20
 804e6d9:  mov eax, ds:0x80d21c0
 804e6de:  mov DWORD PTR [ebp-0x10], eax
 804e6e1:  mov eax, ds:0x80d0d40
 804e6e6:  test eax, eax
 804e6e8:  js 804e8d9
 804e6ee:  mov edx, DWORD PTR ds:0x80d11e4
 804e6f4:  mov edi, 0x80d1d40
 804e6f9:  mov DWORD PTR [ebp-0x14], 0x0
 804e700:  mov eax, DWORD PTR [edx+0x3c]
 804e703:  mov DWORD PTR [ebp-0x1c], eax
 804e706:  or eax, 0x2
 804e709:  mov DWORD PTR [edx+0x3c], eax
 804e70c:  mov edx, DWORD PTR [ebp-0x10]
 804e70f:  mov DWORD PTR [ebp-0x18], edx
 804e712:  xor eax, eax
 804e714:  mov ecx, 0x1
 804e719:  cmp DWORD PTR gs:0xc, 0x0
 804e721:  je 804e724
 804e723:  cmpxchg DWORD PTR [edi], ecx
 804e727:  jne 804ee32
 804e72d:  mov eax, DWORD PTR [edi+0x30]
 804e730:  test eax, eax
 804e732:  je 804e817
 804e738:  mov esi, DWORD PTR [eax+0x4]
 804e73b:  xor ebx, ebx
 804e73d:  xor ecx, ecx
 804e73f:  mov edx, DWORD PTR [edi+ebx*4+0x8]
 804e743:  test edx, edx
 804e745:  je 804e757
 804e747:  nop
 804e748:  mov eax, DWORD PTR [edx+0x4]
 804e74b:  mov edx, DWORD PTR [edx+0x8]
 804e74e:  and eax, 0xf8
 804e751:  add ecx, eax
 804e753:  test edx, edx
 804e755:  jne 804e748
 804e757:  add ebx, 0x1
 804e75a:  cmp ebx, 0xa
 804e75d:  jne 804e73f
 804e75f:  and esi, 0xf8
 804e762:  add ecx, esi
 804e764:  lea ebx, [edi+0x30]
 804e767:  lea esi, [edi+0x428]
 804e76d:  lea esi, [esi]
 804e770:  mov edx, DWORD PTR [ebx+0xc]
 804e773:  cmp ebx, edx
 804e775:  je 804e787
 804e777:  nop
 804e778:  mov eax, DWORD PTR [edx+0x4]
 804e77b:  mov edx, DWORD PTR [edx+0xc]
 804e77e:  and eax, 0xf8
 804e781:  add ecx, eax
 804e783:  cmp ebx, edx
 804e785:  jne 804e778
 804e787:  add ebx, 0x8
 804e78a:  cmp ebx, esi
 804e78c:  jne 804e770
 804e78e:  mov eax, DWORD PTR [ebp-0x14]
 804e791:  mov ebx, DWORD PTR [edi+0x444]
 804e797:  mov DWORD PTR [esp+0x4], 0x80afdc9
 804e79f:  mov DWORD PTR [esp+0x8], eax
 804e7a3:  mov eax, ds:0x80d11e4
 804e7a8:  mov esi, ebx
 804e7aa:  sub esi, ecx
 804e7ac:  mov DWORD PTR [esp], eax
 804e7af:  call 80617a0
 804e7b4:  mov eax, ds:0x80d11e4
 804e7b9:  mov DWORD PTR [esp+0x8], ebx
 804e7bd:  mov DWORD PTR [esp+0x4], 0x80afdd4
 804e7c5:  mov DWORD PTR [esp], eax
 804e7c8:  call 80617a0
 804e7cd:  mov eax, ds:0x80d11e4
 804e7d2:  mov DWORD PTR [esp+0x8], esi
 804e7d6:  mov DWORD PTR [esp+0x4], 0x80afded
 804e7de:  mov DWORD PTR [esp], eax
 804e7e1:  call 80617a0
 804e7e6:  add DWORD PTR [ebp-0x10], ebx
 804e7e9:  add DWORD PTR [ebp-0x18], esi
 804e7ec:  cmp DWORD PTR gs:0xc, 0x0
 804e7f4:  je 804e7f7
 804e7f6:  sub DWORD PTR [edi], 0x1
 804e7fa:  jne 804ee3e
 804e800:  mov edi, DWORD PTR [edi+0x440]
 804e806:  cmp edi, 0x80d1d40
 804e80c:  je 804e82d
 804e80e:  add DWORD PTR [ebp-0x14], 0x1
 804e812:  jmp 804e712
 804e817:  mov eax, edi
 804e819:  call 8049d90
 804e81e:  mov eax, DWORD PTR [edi+0x30]
 804e821:  lea esi, [esi]
 804e828:  jmp 804e738
 804e82d:  mov eax, ds:0x80d11e4
 804e832:  mov DWORD PTR [esp+0x8], 0x14
 804e83a:  mov DWORD PTR [esp+0x4], 0x1
 804e842:  mov DWORD PTR [esp], 0x80afe06
 804e849:  mov DWORD PTR [esp+0xc], eax
 804e84d:  call 8062710
 804e852:  mov edx, DWORD PTR [ebp-0x10]
 804e855:  mov eax, ds:0x80d11e4
 804e85a:  mov DWORD PTR [esp+0x4], 0x80afdd4
 804e862:  mov DWORD PTR [esp+0x8], edx
 804e866:  mov DWORD PTR [esp], eax
 804e869:  call 80617a0
 804e86e:  mov eax, DWORD PTR [ebp-0x18]
 804e871:  mov DWORD PTR [esp+0x4], 0x80afded
 804e879:  mov DWORD PTR [esp+0x8], eax
 804e87d:  mov eax, ds:0x80d11e4
 804e882:  mov DWORD PTR [esp], eax
 804e885:  call 80617a0
 804e88a:  mov eax, ds:0x80d21b4
 804e88f:  mov DWORD PTR [esp+0x4], 0x80afe1b
 804e897:  mov DWORD PTR [esp+0x8], eax
 804e89b:  mov eax, ds:0x80d11e4
 804e8a0:  mov DWORD PTR [esp], eax
 804e8a3:  call 80617a0
 804e8a8:  mov eax, ds:0x80d21c4
 804e8ad:  mov DWORD PTR [esp+0x4], 0x80afe34
 804e8b5:  mov DWORD PTR [esp+0x8], eax
 804e8b9:  mov eax, ds:0x80d11e4
 804e8be:  mov DWORD PTR [esp], eax
 804e8c1:  call 80617a0
 804e8c6:  mov eax, ds:0x80d11e4
 804e8cb:  mov edx, DWORD PTR [ebp-0x1c]
 804e8ce:  or DWORD PTR [eax+0x3c], edx
 804e8d1:  add esp, 0x20
 804e8d4:  pop ebx
 804e8d5:  pop esi
 804e8d6:  pop edi
 804e8d7:  pop ebp
 804e8d8:  ret
 804e8d9:  call 804a310
 804e8de:  jmp 804e6ee
 804e8e3:  lea esi, [esi]
 804e8e9:  lea edi, [edi]

0804e8f0 <__libc_mallopt>:
 804e8f0:  mov ecx, DWORD PTR ds:0x80d0d40
 804e8f6:  push ebp
 804e8f7:  mov ebp, esp
 804e8f9:  test ecx, ecx
 804e8fb:  js 804ea40
 804e901:  xor eax, eax
 804e903:  mov ecx, 0x1
 804e908:  cmp DWORD PTR gs:0xc, 0x0
 804e910:  je 804e913
 804e912:  cmpxchg DWORD PTR ds:0x80d1d40, ecx
 804e91a:  jne 804ee4a
 804e920:  mov eax, 0x80d1d40
 804e925:  call 8049d90
 804e92a:  mov eax, DWORD PTR [ebp+0x8]
 804e92d:  add eax, 0x6
 804e930:  cmp eax, 0x7
 804e933:  jbe 804e958
 804e935:  mov ecx, 0x1
 804e93a:  cmp DWORD PTR gs:0xc, 0x0
 804e942:  je 804e945
 804e944:  sub DWORD PTR ds:0x80d1d40, 0x1
 804e94c:  jne 804ee5a
 804e952:  mov eax, ecx
 804e954:  pop ebp
 804e955:  ret
 804e956:  xchg ax, ax
 804e958:  jmp DWORD PTR [eax*4+0x80affb0]
 804e95f:  nop
 804e960:  xor ecx, ecx
 804e962:  cmp DWORD PTR [ebp+0xc], 0x50
 804e966:  ja 804e93a
 804e968:  mov edx, DWORD PTR [ebp+0xc]
 804e96b:  mov eax, 0x8
 804e970:  test edx, edx
 804e972:  je 804e989
 804e974:  mov edx, DWORD PTR [ebp+0xc]
 804e977:  mov eax, 0x10
 804e97c:  add edx, 0xb
 804e97f:  cmp edx, 0xf
 804e982:  jbe 804e989
 804e984:  mov eax, edx
 804e986:  and eax, 0xf8
 804e989:  mov ds:0x80d21d0, eax
 804e98e:  mov ecx, 0x1
 804e993:  jmp 804e93a
 804e995:  lea esi, [esi]
 804e998:  mov eax, DWORD PTR [ebp+0xc]
 804e99b:  mov ds:0x80d21d4, eax
 804e9a0:  jmp 804e935
 804e9a2:  lea esi, [esi]
 804e9a8:  mov eax, DWORD PTR [ebp+0xc]
 804e9ab:  mov ecx, 0x1
 804e9b0:  mov ds:0x80d0d44, eax
 804e9b5:  jmp 804e93a
 804e9b7:  nop
 804e9b8:  mov eax, DWORD PTR [ebp+0xc]
 804e9bb:  mov ecx, 0x1
 804e9c0:  mov DWORD PTR ds:0x80d21b8, 0x1
 804e9ca:  mov ds:0x80d21b0, eax
 804e9cf:  jmp 804e93a
 804e9d4:  lea esi, [esi]
 804e9d8:  xor ecx, ecx
 804e9da:  cmp DWORD PTR [ebp+0xc], 0x80000
 804e9e1:  ja 804e9f0
 804e9e3:  mov eax, DWORD PTR [ebp+0xc]
 804e9e6:  mov ecx, 0x1
 804e9eb:  mov ds:0x80d21a8, eax
 804e9f0:  mov DWORD PTR ds:0x80d21b8, 0x1
 804e9fa:  jmp 804e93a
 804e9ff:  nop
 804ea00:  mov eax, DWORD PTR [ebp+0xc]
 804ea03:  mov ecx, 0x1
 804ea08:  mov DWORD PTR ds:0x80d21b8, 0x1
 804ea12:  mov ds:0x80d21a4, eax
 804ea17:  jmp 804e93a
 804ea1c:  lea esi, [esi]
 804ea20:  mov eax, DWORD PTR [ebp+0xc]
 804ea23:  mov ecx, 0x1
 804ea28:  mov DWORD PTR ds:0x80d21b8, 0x1
 804ea32:  mov ds:0x80d21a0, eax
 804ea37:  jmp 804e93a
 804ea3c:  lea esi, [esi]
 804ea40:  call 804a310
 804ea45:  jmp 804e901

0804ea4a <_L_lock_52>:
 804ea4a:  lea ecx, [edi]
 804ea4c:  call 8050230
 804ea51:  jmp 804918b

0804ea56 <_L_lock_102>:
 804ea56:  lea ecx, ds:0x80d21d8
 804ea5c:  call 8050230
 804ea61:  jmp 804921b

0804ea66 <_L_unlock_138>:
 804ea66:  lea eax, [ecx]
 804ea68:  call 8050260
 804ea6d:  jmp 8049284

0804ea72 <_L_unlock_145>:
 804ea72:  lea eax, ds:0x80d21d8
 804ea78:  call 8050260
 804ea7d:  jmp 80492aa

0804ea82 <_L_lock_1066>:
 804ea82:  lea ecx, ds:0x80d21d8
 804ea88:  call 8050230
 804ea8d:  jmp 80499e6

0804ea92 <_L_unlock_1080>:
 804ea92:  lea eax, ds:0x80d21d8
 804ea98:  call 8050260
 804ea9d:  jmp 8049a0c

0804eaa2 <_L_lock_1237>:
 804eaa2:  lea ecx, [esi]
 804eaa4:  call 8050230
 804eaa9:  jmp 8049b0c

0804eaae <_L_unlock_1247>:
 804eaae:  lea eax, ds:0x80d21d8
 804eab4:  call 8050260
 804eab9:  jmp 8049b35

0804eabe <_L_lock_1271>:
 804eabe:  lea ecx, ds:0x80d1d40
 804eac4:  call 8050230
 804eac9:  jmp 8049b5d

0804eace <_L_lock_2189>:
 804eace:  lea ecx, ds:0x80d1d40
 804ead4:  call 8050230
 804ead9:  jmp 804a1dd

0804eade <_L_unlock_2205>:
 804eade:  lea eax, ds:0x80d1d40
 804eae4:  call 8050260
 804eae9:  jmp 804a20c

0804eaee <_L_lock_2764>:
 804eaee:  lea ecx, ds:0x80d1d40
 804eaf4:  call 8050230
 804eaf9:  jmp 804a76d

0804eafe <_L_unlock_3011>:
 804eafe:  lea eax, ds:0x80d1d40
 804eb04:  call 8050260
 804eb09:  jmp 804aa9c

0804eb0e <_L_lock_3085>:
 804eb0e:  lea ecx, ds:0x80d1d40
 804eb14:  call 8050230
 804eb19:  jmp 804ab55

0804eb1e <_L_unlock_3166>:
 804eb1e:  lea eax, ds:0x80d1d40
 804eb24:  call 8050260
 804eb29:  jmp 804ac09

0804eb2e <_L_lock_4298>:
 804eb2e:  lea ecx, [ebx]
 804eb30:  call 8050230
 804eb35:  jmp 804b3e9

0804eb3a <_L_unlock_4306>:
 804eb3a:  lea eax, [ebx]
 804eb3c:  call 8050260
 804eb41:  jmp 804b409

0804eb46 <_L_lock_4486>:
 804eb46:  lea ecx, [ebx]
 804eb48:  call 8050230
 804eb4d:  jmp 804b50a

0804eb52 <_L_unlock_4495>:
 804eb52:  lea eax, [ebx]
 804eb54:  call 8050260
 804eb59:  jmp 804b52a

0804eb5e <_L_lock_4622>:
 804eb5e:  lea ecx, ds:0x80d1d40
 804eb64:  call 8050230
 804eb69:  jmp 804b602

0804eb6e <_L_unlock_4647>:
 804eb6e:  lea eax, ds:0x80d1d40
 804eb74:  call 8050260
 804eb79:  jmp 804b643

0804eb7e <_L_unlock_4667>:
 804eb7e:  lea eax, ds:0x80d1d40
 804eb84:  call 8050260
 804eb89:  jmp 804b668

0804eb8e <_L_unlock_4722>:
 804eb8e:  lea eax, ds:0x80d1d40
 804eb94:  call 8050260
 804eb99:  jmp 804b6c0

0804eb9e <_L_lock_4804>:
 804eb9e:  lea ecx, [edx]
 804eba0:  call 8050230
 804eba5:  jmp 804b733

0804ebaa <_L_unlock_4957>:
 804ebaa:  lea eax, [edx]
 804ebac:  call 8050260
 804ebb1:  jmp 804b81b

0804ebb6 <_L_lock_7650>:
 804ebb6:  lea ecx, ds:0x80d1d40
 804ebbc:  call 8050230
 804ebc1:  jmp 804c914

0804ebc6 <_L_unlock_7672>:
 804ebc6:  lea eax, ds:0x80d1d40
 804ebcc:  call 8050260
 804ebd1:  jmp 804c950

0804ebd6 <_L_lock_8731>:
 804ebd6:  lea ecx, ds:0x80d1d40
 804ebdc:  call 8050230
 804ebe1:  jmp 804d0d7

0804ebe6 <_L_unlock_8741>:
 804ebe6:  lea eax, ds:0x80d1d40
 804ebec:  call 8050260
 804ebf1:  jmp 804d0fc

0804ebf6 <_L_lock_8768>:
 804ebf6:  lea ecx, ds:0x80d1d40
 804ebfc:  call 8050230
 804ec01:  jmp 804d14b

0804ec06 <_L_unlock_8802>:
 804ec06:  lea eax, ds:0x80d1d40
 804ec0c:  call 8050260
 804ec11:  jmp 804d1a2

0804ec16 <_L_unlock_9291>:
 804ec16:  lea eax, [esi]
 804ec18:  call 8050260
 804ec1d:  jmp 804d4b0

0804ec22 <_L_lock_9478>:
 804ec22:  lea ecx, ds:0x80d1d40
 804ec28:  call 8050230
 804ec2d:  jmp 804d63e

0804ec32 <_L_unlock_9487>:
 804ec32:  lea eax, ds:0x80d1d40
 804ec38:  call 8050260
 804ec3d:  jmp 804d668

0804ec42 <_L_lock_9509>:
 804ec42:  lea ecx, [esi]
 804ec44:  call 8050230
 804ec49:  jmp 804d690

0804ec4e <_L_unlock_9522>:
 804ec4e:  lea eax, ds:0x80d1d40
 804ec54:  call 8050260
 804ec59:  jmp 804d6c1

0804ec5e <_L_unlock_9534>:
 804ec5e:  lea eax, [esi]
 804ec60:  call 8050260
 804ec65:  jmp 804d6eb

0804ec6a <_L_unlock_9638>:
 804ec6a:  lea eax, [edi]
 804ec6c:  call 8050260
 804ec71:  jmp 804d793

0804ec76 <_L_unlock_9650>:
 804ec76:  lea eax, [edi]
 804ec78:  call 8050260
 804ec7d:  jmp 804d7b1

0804ec82 <_L_lock_9659>:
 804ec82:  lea ecx, ds:0x80d1d40
 804ec88:  call 8050230
 804ec8d:  jmp 804d7d0

0804ec92 <_L_unlock_9668>:
 804ec92:  lea eax, ds:0x80d1d40
 804ec98:  call 8050260
 804ec9d:  jmp 804d7fa

0804eca2 <_L_unlock_9685>:
 804eca2:  lea eax, ds:0x80d1d40
 804eca8:  call 8050260
 804ecad:  jmp 804d830

0804ecb2 <_L_unlock_9697>:
 804ecb2:  lea eax, [edi]
 804ecb4:  call 8050260
 804ecb9:  jmp 804d85a

0804ecbe <_L_unlock_9856>:
 804ecbe:  lea eax, [ecx]
 804ecc0:  call 8050260
 804ecc5:  jmp 804d960

0804ecca <_L_unlock_9869>:
 804ecca:  lea eax, [edx]
 804eccc:  call 8050260
 804ecd1:  jmp 804d985

0804ecd6 <_L_lock_9878>:
 804ecd6:  lea ecx, ds:0x80d1d40
 804ecdc:  call 8050230
 804ece1:  jmp 804d9a4

0804ece6 <_L_unlock_9888>:
 804ece6:  lea eax, ds:0x80d1d40
 804ecec:  call 8050260
 804ecf1:  jmp 804d9d2

0804ecf6 <_L_unlock_9902>:
 804ecf6:  lea eax, ds:0x80d1d40
 804ecfc:  call 8050260
 804ed01:  jmp 804da00

0804ed06 <_L_unlock_9921>:
 804ed06:  lea eax, [edx]
 804ed08:  call 8050260
 804ed0d:  jmp 804da3d

0804ed12 <_L_lock_10179>:
 804ed12:  lea ecx, [esi]
 804ed14:  call 8050230
 804ed19:  jmp 804dbdc

0804ed1e <_L_unlock_10193>:
 804ed1e:  lea eax, [esi]
 804ed20:  call 8050260
 804ed25:  jmp 804dc12

0804ed2a <_L_lock_10314>:
 804ed2a:  lea ecx, [esi]
 804ed2c:  call 8050230
 804ed31:  jmp 804dce4

0804ed36 <_L_unlock_10322>:
 804ed36:  lea eax, [esi]
 804ed38:  call 8050260
 804ed3d:  jmp 804dd04

0804ed42 <_L_lock_10491>:
 804ed42:  lea ecx, ds:0x80d21d8
 804ed48:  call 8050230
 804ed4d:  jmp 804de83

0804ed52 <_L_unlock_10494>:
 804ed52:  lea eax, ds:0x80d21d8
 804ed58:  call 8050260
 804ed5d:  jmp 804de9b

0804ed62 <_L_lock_10661>:
 804ed62:  lea ecx, ds:0x80d1d40
 804ed68:  call 8050230
 804ed6d:  jmp 804dfd8

0804ed72 <_L_unlock_10684>:
 804ed72:  lea eax, ds:0x80d1d40
 804ed78:  call 8050260
 804ed7d:  jmp 804e018

0804ed82 <_L_lock_10813>:
 804ed82:  lea ecx, ds:0x80d1d40
 804ed88:  call 8050230
 804ed8d:  jmp 804e0d8

0804ed92 <_L_unlock_10839>:
 804ed92:  lea eax, ds:0x80d1d40
 804ed98:  call 8050260
 804ed9d:  jmp 804e114

0804eda2 <_L_unlock_11059>:
 804eda2:  lea eax, [edx]
 804eda4:  call 8050260
 804eda9:  jmp 804e2b7

0804edae <_L_lock_11074>:
 804edae:  lea ecx, ds:0x80d1d40
 804edb4:  call 8050230
 804edb9:  jmp 804e2e6

0804edbe <_L_unlock_11084>:
 804edbe:  lea eax, ds:0x80d1d40
 804edc4:  call 8050260
 804edc9:  jmp 804e314

0804edce <_L_unlock_11114>:
 804edce:  lea eax, [ecx]
 804edd0:  call 8050260
 804edd5:  jmp 804e364

0804edda <_L_unlock_11238>:
 804edda:  lea eax, [ebx]
 804eddc:  call 8050260
 804ede1:  jmp 804e446

0804ede6 <_L_lock_11253>:
 804ede6:  lea ecx, ds:0x80d1d40
 804edec:  call 8050230
 804edf1:  jmp 804e479

0804edf6 <_L_unlock_11265>:
 804edf6:  lea eax, ds:0x80d1d40
 804edfc:  call 8050260
 804ee01:  jmp 804e4aa

0804ee06 <_L_unlock_11351>:
 804ee06:  lea eax, [ebx]
 804ee08:  call 8050260
 804ee0d:  jmp 804e542

0804ee12 <_L_lock_11378>:
 804ee12:  lea ecx, ds:0x80d1d40
 804ee18:  call 8050230
 804ee1d:  jmp 804e58e

0804ee22 <_L_unlock_11446>:
 804ee22:  lea eax, ds:0x80d1d40
 804ee28:  call 8050260
 804ee2d:  jmp 804e6c1

0804ee32 <_L_lock_11506>:
 804ee32:  lea ecx, [edi]
 804ee34:  call 8050230
 804ee39:  jmp 804e72d

0804ee3e <_L_unlock_11604>:
 804ee3e:  lea eax, [edi]
 804ee40:  call 8050260
 804ee45:  jmp 804e800

0804ee4a <_L_lock_11717>:
 804ee4a:  lea ecx, ds:0x80d1d40
 804ee50:  call 8050230
 804ee55:  jmp 804e920

0804ee5a <_L_unlock_11736>:
 804ee5a:  lea eax, ds:0x80d1d40
 804ee60:  call 8050260
 804ee65:  jmp 804e952
 804ee6a:  nop
 804ee6b:  nop
 804ee6c:  nop
 804ee6d:  nop
 804ee6e:  nop
 804ee6f:  nop

0804ee70 <__default_morecore>:
 804ee70:  push ebp
 804ee71:  mov ebp, esp
 804ee73:  sub esp, 0x4
 804ee76:  mov eax, DWORD PTR [ebp+0x8]
 804ee79:  mov DWORD PTR [esp], eax
 804ee7c:  call 804f410
 804ee81:  leave
 804ee82:  mov edx, eax
 804ee84:  xor eax, eax
 804ee86:  cmp edx, 0xff
 804ee89:  sete al
 804ee8c:  sub eax, 0x1
 804ee8f:  and eax, edx
 804ee91:  ret
 804ee92:  nop
 804ee93:  nop
 804ee94:  nop
 804ee95:  nop
 804ee96:  nop
 804ee97:  nop
 804ee98:  nop
 804ee99:  nop
 804ee9a:  nop
 804ee9b:  nop
 804ee9c:  nop
 804ee9d:  nop
 804ee9e:  nop
 804ee9f:  nop

0804eea0 <strlen>:
 804eea0:  mov ecx, DWORD PTR [esp+0x4]
 804eea4:  mov eax, ecx
 804eea6:  and ecx, 0x3
 804eea9:  je 804eed3
 804eeab:  cmp BYTE PTR [eax], ch
 804eead:  je 804ef4a
 804eeb3:  inc eax
 804eeb4:  xor ecx, 0x3
 804eeb7:  je 804eed3
 804eeb9:  cmp BYTE PTR [eax], ch
 804eebb:  je 804ef4a
 804eec1:  add eax, 0x1
 804eec4:  sub ecx, 0x1
 804eec7:  je 804eed3
 804eec9:  cmp BYTE PTR [eax], ch
 804eecb:  je 804ef4a
 804eecd:  sub eax, 0xf
 804eed0:  add eax, 0x10
 804eed3:  mov ecx, DWORD PTR [eax]
 804eed5:  mov edx, 0xfefefeff
 804eeda:  add edx, ecx
 804eedc:  jae 804ef37
 804eede:  xor edx, ecx
 804eee0:  or edx, 0xfefefeff
 804eee6:  inc edx
 804eee7:  jne 804ef37
 804eee9:  mov ecx, DWORD PTR [eax+0x4]
 804eeec:  mov edx, 0xfefefeff
 804eef1:  add edx, ecx
 804eef3:  jae 804ef34
 804eef5:  xor edx, ecx
 804eef7:  or edx, 0xfefefeff
 804eefd:  inc edx
 804eefe:  jne 804ef34
 804ef00:  mov ecx, DWORD PTR [eax+0x8]
 804ef03:  mov edx, 0xfefefeff
 804ef08:  add edx, ecx
 804ef0a:  jae 804ef31
 804ef0c:  xor edx, ecx
 804ef0e:  or edx, 0xfefefeff
 804ef14:  inc edx
 804ef15:  jne 804ef31
 804ef17:  mov ecx, DWORD PTR [eax+0xc]
 804ef1a:  mov edx, 0xfefefeff
 804ef1f:  add edx, ecx
 804ef21:  jae 804ef2e
 804ef23:  xor edx, ecx
 804ef25:  or edx, 0xfefefeff
 804ef2b:  inc edx
 804ef2c:  je 804eed0
 804ef2e:  add eax, 0x4
 804ef31:  add eax, 0x4
 804ef34:  add eax, 0x4
 804ef37:  test cl, cl
 804ef39:  je 804ef4a
 804ef3b:  inc eax
 804ef3c:  test ch, ch
 804ef3e:  je 804ef4a
 804ef40:  inc eax
 804ef41:  test ecx, 0xff0000
 804ef47:  je 804ef4a
 804ef49:  inc eax
 804ef4a:  sub eax, DWORD PTR [esp+0x4]
 804ef4e:  ret
 804ef4f:  nop

0804ef50 <memset>:
 804ef50:  push ebp
 804ef51:  mov ebp, esp
 804ef53:  sub esp, 0xc
 804ef56:  mov DWORD PTR [esp+0x4], esi
 804ef5a:  movzx ecx, BYTE PTR [ebp+0xc]
 804ef5e:  mov esi, DWORD PTR [ebp+0x8]
 804ef61:  mov DWORD PTR [esp], ebx
 804ef64:  mov ebx, DWORD PTR [ebp+0x10]
 804ef67:  mov DWORD PTR [esp+0x8], edi
 804ef6b:  mov eax, ecx
 804ef6d:  mov edi, esi
 804ef6f:  cld
 804ef70:  cmp ebx, 0xb
 804ef73:  jbe 804ef9c
 804ef75:  mov edx, ecx
 804ef77:  shl edx, 0x8
 804ef7a:  or edx, ecx
 804ef7c:  mov ecx, esi
 804ef7e:  mov eax, edx
 804ef80:  neg ecx
 804ef82:  shl eax, 0x10
 804ef85:  and ecx, 0x3
 804ef88:  or eax, edx
 804ef8a:  mov edx, ebx
 804ef8c:  sub edx, ecx
 804ef8e:  rep stosb
 804ef90:  mov ecx, edx
 804ef92:  shr ecx, 0x2
 804ef95:  rep stosd
 804ef97:  mov ebx, edx
 804ef99:  and ebx, 0x3
 804ef9c:  mov ecx, ebx
 804ef9e:  rep stosb
 804efa0:  mov eax, esi
 804efa2:  mov ebx, DWORD PTR [esp]
 804efa5:  mov esi, DWORD PTR [esp+0x4]
 804efa9:  mov edi, DWORD PTR [esp+0x8]
 804efad:  mov esp, ebp
 804efaf:  pop ebp
 804efb0:  ret
 804efb1:  nop
 804efb2:  nop
 804efb3:  nop
 804efb4:  nop
 804efb5:  nop
 804efb6:  nop
 804efb7:  nop
 804efb8:  nop
 804efb9:  nop
 804efba:  nop
 804efbb:  nop
 804efbc:  nop
 804efbd:  nop
 804efbe:  nop
 804efbf:  nop

0804efc0 <memcpy>:
 804efc0:  push ebp
 804efc1:  mov ebp, esp
 804efc3:  sub esp, 0x8
 804efc6:  mov eax, DWORD PTR [ebp+0x10]
 804efc9:  mov edx, DWORD PTR [ebp+0x8]
 804efcc:  mov DWORD PTR [esp], esi
 804efcf:  mov esi, DWORD PTR [ebp+0xc]
 804efd2:  mov DWORD PTR [esp+0x4], edi
 804efd6:  cmp eax, 0x7
 804efd9:  mov edi, edx
 804efdb:  jbe 804eff4
 804efdd:  mov ecx, edx
 804efdf:  neg ecx
 804efe1:  and ecx, 0x3
 804efe4:  sub eax, ecx
 804efe6:  cld
 804efe7:  rep movsb
 804efe9:  mov ecx, eax
 804efeb:  shr ecx, 0x2
 804efee:  cld
 804efef:  rep movsd
 804eff1:  and eax, 0x3
 804eff4:  mov ecx, eax
 804eff6:  cld
 804eff7:  rep movsb
 804eff9:  mov eax, edx
 804effb:  mov esi, DWORD PTR [esp]
 804effe:  mov edi, DWORD PTR [esp+0x4]
 804f002:  mov esp, ebp
 804f004:  pop ebp
 804f005:  ret
 804f006:  nop
 804f007:  nop
 804f008:  nop
 804f009:  nop
 804f00a:  nop
 804f00b:  nop
 804f00c:  nop
 804f00d:  nop
 804f00e:  nop
 804f00f:  nop

0804f010 <__strchrnul>:
 804f010:  push edi
 804f011:  mov eax, DWORD PTR [esp+0x8]
 804f015:  mov edx, DWORD PTR [esp+0xc]
 804f019:  mov dh, dl
 804f01b:  mov ecx, edx
 804f01d:  shl edx, 0x10
 804f020:  mov dx, cx
 804f023:  test al, 0x3
 804f025:  je 804f073
 804f027:  mov cl, BYTE PTR [eax]
 804f029:  cmp dl, cl
 804f02b:  je 804f16d
 804f031:  test cl, cl
 804f033:  je 804f16d
 804f039:  inc eax
 804f03a:  test al, 0x3
 804f03c:  je 804f073
 804f03e:  mov cl, BYTE PTR [eax]
 804f040:  cmp dl, cl
 804f042:  je 804f16d
 804f048:  test cl, cl
 804f04a:  je 804f16d
 804f050:  inc eax
 804f051:  test al, 0x3
 804f053:  je 804f073
 804f055:  mov cl, BYTE PTR [eax]
 804f057:  cmp dl, cl
 804f059:  je 804f16d
 804f05f:  test cl, cl
 804f061:  je 804f16d
 804f067:  inc eax
 804f068:  jmp 804f073
 804f06a:  lea esi, [esi]
 804f070:  add eax, 0x10
 804f073:  mov ecx, DWORD PTR [eax]
 804f075:  xor ecx, edx
 804f077:  mov edi, 0xfefefeff
 804f07c:  add edi, ecx
 804f07e:  jae 804f14f
 804f084:  xor edi, ecx
 804f086:  or edi, 0xfefefeff
 804f08c:  inc edi
 804f08d:  jne 804f14f
 804f093:  xor ecx, edx
 804f095:  mov edi, 0xfefefeff
 804f09a:  add edi, ecx
 804f09c:  jae 804f14f
 804f0a2:  xor edi, ecx
 804f0a4:  or edi, 0xfefefeff
 804f0aa:  inc edi
 804f0ab:  jne 804f14f
 804f0b1:  mov ecx, DWORD PTR [eax+0x4]
 804f0b4:  xor ecx, edx
 804f0b6:  mov edi, 0xfefefeff
 804f0bb:  add edi, ecx
 804f0bd:  jae 804f14c
 804f0c3:  xor edi, ecx
 804f0c5:  or edi, 0xfefefeff
 804f0cb:  inc edi
 804f0cc:  jne 804f14c
 804f0ce:  xor ecx, edx
 804f0d0:  mov edi, 0xfefefeff
 804f0d5:  add edi, ecx
 804f0d7:  jae 804f14c
 804f0d9:  xor edi, ecx
 804f0db:  or edi, 0xfefefeff
 804f0e1:  inc edi
 804f0e2:  jne 804f14c
 804f0e4:  mov ecx, DWORD PTR [eax+0x8]
 804f0e7:  xor ecx, edx
 804f0e9:  mov edi, 0xfefefeff
 804f0ee:  add edi, ecx
 804f0f0:  jae 804f149
 804f0f2:  xor edi, ecx
 804f0f4:  or edi, 0xfefefeff
 804f0fa:  inc edi
 804f0fb:  jne 804f149
 804f0fd:  xor ecx, edx
 804f0ff:  mov edi, 0xfefefeff
 804f104:  add edi, ecx
 804f106:  jae 804f149
 804f108:  xor edi, ecx
 804f10a:  or edi, 0xfefefeff
 804f110:  inc edi
 804f111:  jne 804f149
 804f113:  mov ecx, DWORD PTR [eax+0xc]
 804f116:  xor ecx, edx
 804f118:  mov edi, 0xfefefeff
 804f11d:  add edi, ecx
 804f11f:  jae 804f146
 804f121:  xor edi, ecx
 804f123:  or edi, 0xfefefeff
 804f129:  inc edi
 804f12a:  jne 804f146
 804f12c:  xor ecx, edx
 804f12e:  mov edi, 0xfefefeff
 804f133:  add edi, ecx
 804f135:  jae 804f146
 804f137:  xor edi, ecx
 804f139:  or edi, 0xfefefeff
 804f13f:  inc edi
 804f140:  je 804f070
 804f146:  add eax, 0x4
 804f149:  add eax, 0x4
 804f14c:  add eax, 0x4
 804f14f:  test cl, cl
 804f151:  je 804f16d
 804f153:  cmp cl, dl
 804f155:  je 804f16d
 804f157:  inc eax
 804f158:  test ch, ch
 804f15a:  je 804f16d
 804f15c:  cmp ch, dl
 804f15e:  je 804f16d
 804f160:  inc eax
 804f161:  shr ecx, 0x10
 804f164:  test cl, cl
 804f166:  je 804f16d
 804f168:  cmp cl, dl
 804f16a:  je 804f16d
 804f16c:  inc eax
 804f16d:  pop edi
 804f16e:  ret
 804f16f:  nop

0804f170 <_exit>:
 804f170:  mov ebx, DWORD PTR [esp+0x4]
 804f174:  mov eax, 0xfc
 804f179:  int 0x80
 804f17b:  mov eax, 0x1
 804f180:  int 0x80
 804f182:  hlt
 804f183:  nop
 804f184:  nop
 804f185:  nop
 804f186:  nop
 804f187:  nop
 804f188:  nop
 804f189:  nop
 804f18a:  nop
 804f18b:  nop
 804f18c:  nop
 804f18d:  nop
 804f18e:  nop
 804f18f:  nop

0804f190 <__exit_thread>:
 804f190:  mov edx, ebx
 804f192:  mov ebx, DWORD PTR [esp+0x4]
 804f196:  mov eax, 0x1
 804f19b:  int 0x80
 804f19d:  mov ebx, edx
 804f19f:  cmp eax, 0xfffff001
 804f1a4:  jae 8051470
 804f1aa:  nop
 804f1ab:  nop
 804f1ac:  nop
 804f1ad:  nop
 804f1ae:  nop
 804f1af:  nop

0804f1b0 <___fxstat64>:
 804f1b0:  push ebp
 804f1b1:  mov ebp, esp
 804f1b3:  mov ecx, DWORD PTR [ebp+0x10]
 804f1b6:  push ebx
 804f1b7:  mov ebx, DWORD PTR [ebp+0xc]
 804f1ba:  mov eax, 0xc5
 804f1bf:  int 0x80
 804f1c1:  mov ecx, eax
 804f1c3:  cmp ecx, 0xfffff000
 804f1c9:  ja 804f1ce
 804f1cb:  pop ebx
 804f1cc:  pop ebp
 804f1cd:  ret
 804f1ce:  mov eax, gs:0x0
 804f1d4:  neg ecx
 804f1d6:  mov edx, 0xffffffe8
 804f1dc:  mov DWORD PTR [eax+edx], ecx
 804f1df:  mov eax, 0xffffffff
 804f1e4:  jmp 804f1cb
 804f1e6:  nop
 804f1e7:  nop
 804f1e8:  nop
 804f1e9:  nop
 804f1ea:  nop
 804f1eb:  nop
 804f1ec:  nop
 804f1ed:  nop
 804f1ee:  nop
 804f1ef:  nop

0804f1f0 <__libc_open>:
 804f1f0:  cmp DWORD PTR gs:0xc, 0x0
 804f1f8:  jne 804f21b

0804f1fa <__open_nocancel>:
 804f1fa:  push ebx
 804f1fb:  mov edx, DWORD PTR [esp+0x10]
 804f1ff:  mov ecx, DWORD PTR [esp+0xc]
 804f203:  mov ebx, DWORD PTR [esp+0x8]
 804f207:  mov eax, 0x5
 804f20c:  int 0x80
 804f20e:  pop ebx
 804f20f:  cmp eax, 0xfffff001
 804f214:  jae 8051470
 804f21a:  ret
 804f21b:  call 80502f0
 804f220:  push eax
 804f221:  push ebx
 804f222:  mov edx, DWORD PTR [esp+0x14]
 804f226:  mov ecx, DWORD PTR [esp+0x10]
 804f22a:  mov ebx, DWORD PTR [esp+0xc]
 804f22e:  mov eax, 0x5
 804f233:  int 0x80
 804f235:  pop ebx
 804f236:  xchg DWORD PTR [esp], eax
 804f239:  call 80502b0
 804f23e:  pop eax
 804f23f:  cmp eax, 0xfffff001
 804f244:  jae 8051470
 804f24a:  ret
 804f24b:  nop
 804f24c:  nop
 804f24d:  nop
 804f24e:  nop
 804f24f:  nop

0804f250 <__libc_read>:
 804f250:  cmp DWORD PTR gs:0xc, 0x0
 804f258:  jne 804f27b

0804f25a <__read_nocancel>:
 804f25a:  push ebx
 804f25b:  mov edx, DWORD PTR [esp+0x10]
 804f25f:  mov ecx, DWORD PTR [esp+0xc]
 804f263:  mov ebx, DWORD PTR [esp+0x8]
 804f267:  mov eax, 0x3
 804f26c:  int 0x80
 804f26e:  pop ebx
 804f26f:  cmp eax, 0xfffff001
 804f274:  jae 8051470
 804f27a:  ret
 804f27b:  call 80502f0
 804f280:  push eax
 804f281:  push ebx
 804f282:  mov edx, DWORD PTR [esp+0x14]
 804f286:  mov ecx, DWORD PTR [esp+0x10]
 804f28a:  mov ebx, DWORD PTR [esp+0xc]
 804f28e:  mov eax, 0x3
 804f293:  int 0x80
 804f295:  pop ebx
 804f296:  xchg DWORD PTR [esp], eax
 804f299:  call 80502b0
 804f29e:  pop eax
 804f29f:  cmp eax, 0xfffff001
 804f2a4:  jae 8051470
 804f2aa:  ret
 804f2ab:  nop
 804f2ac:  nop
 804f2ad:  nop
 804f2ae:  nop
 804f2af:  nop

0804f2b0 <__libc_write>:
 804f2b0:  cmp DWORD PTR gs:0xc, 0x0
 804f2b8:  jne 804f2db

0804f2ba <__write_nocancel>:
 804f2ba:  push ebx
 804f2bb:  mov edx, DWORD PTR [esp+0x10]
 804f2bf:  mov ecx, DWORD PTR [esp+0xc]
 804f2c3:  mov ebx, DWORD PTR [esp+0x8]
 804f2c7:  mov eax, 0x4
 804f2cc:  int 0x80
 804f2ce:  pop ebx
 804f2cf:  cmp eax, 0xfffff001
 804f2d4:  jae 8051470
 804f2da:  ret
 804f2db:  call 80502f0
 804f2e0:  push eax
 804f2e1:  push ebx
 804f2e2:  mov edx, DWORD PTR [esp+0x14]
 804f2e6:  mov ecx, DWORD PTR [esp+0x10]
 804f2ea:  mov ebx, DWORD PTR [esp+0xc]
 804f2ee:  mov eax, 0x4
 804f2f3:  int 0x80
 804f2f5:  pop ebx
 804f2f6:  xchg DWORD PTR [esp], eax
 804f2f9:  call 80502b0
 804f2fe:  pop eax
 804f2ff:  cmp eax, 0xfffff001
 804f304:  jae 8051470
 804f30a:  ret
 804f30b:  nop
 804f30c:  nop
 804f30d:  nop
 804f30e:  nop
 804f30f:  nop

0804f310 <__fcntl_nocancel>:
 804f310:  push ebp
 804f311:  mov ebp, esp
 804f313:  mov edx, DWORD PTR [ebp+0x10]
 804f316:  push ebx
 804f317:  mov ecx, DWORD PTR [ebp+0xc]
 804f31a:  mov ebx, DWORD PTR [ebp+0x8]
 804f31d:  mov eax, 0xdd
 804f322:  int 0x80
 804f324:  mov ecx, eax
 804f326:  cmp ecx, 0xfffff000
 804f32c:  ja 804f331
 804f32e:  pop ebx
 804f32f:  pop ebp
 804f330:  ret
 804f331:  mov eax, gs:0x0
 804f337:  neg ecx
 804f339:  mov edx, 0xffffffe8
 804f33f:  mov DWORD PTR [eax+edx], ecx
 804f342:  mov eax, 0xffffffff
 804f347:  jmp 804f32e
 804f349:  lea esi, [esi]

0804f350 <__libc_fcntl>:
 804f350:  push ebp
 804f351:  mov ebp, esp
 804f353:  sub esp, 0xc
 804f356:  mov DWORD PTR [esp+0x8], edi
 804f35a:  mov edi, DWORD PTR [ebp+0x10]
 804f35d:  mov DWORD PTR [esp], ebx
 804f360:  mov DWORD PTR [esp+0x4], esi
 804f364:  mov eax, gs:0xc
 804f36a:  test eax, eax
 804f36c:  jne 804f399
 804f36e:  mov ebx, DWORD PTR [ebp+0x8]
 804f371:  mov edx, edi
 804f373:  mov ecx, DWORD PTR [ebp+0xc]
 804f376:  mov eax, 0xdd
 804f37b:  int 0x80
 804f37d:  cmp eax, 0xfffff000
 804f382:  mov esi, eax
 804f384:  mov ebx, eax
 804f386:  ja 804f3d2
 804f388:  mov eax, ebx
 804f38a:  mov esi, DWORD PTR [esp+0x4]
 804f38e:  mov ebx, DWORD PTR [esp]
 804f391:  mov edi, DWORD PTR [esp+0x8]
 804f395:  mov esp, ebp
 804f397:  pop ebp
 804f398:  ret
 804f399:  cmp DWORD PTR [ebp+0xc], 0x7
 804f39d:  je 804f3a5
 804f39f:  cmp DWORD PTR [ebp+0xc], 0xe
 804f3a3:  jne 804f36e
 804f3a5:  lea esi, [esi]
 804f3a8:  call 80502f0
 804f3ad:  mov ebx, DWORD PTR [ebp+0x8]
 804f3b0:  mov edx, edi
 804f3b2:  mov ecx, DWORD PTR [ebp+0xc]
 804f3b5:  mov esi, eax
 804f3b7:  mov eax, 0xdd
 804f3bc:  int 0x80
 804f3be:  cmp eax, 0xfffff000
 804f3c3:  mov edi, eax
 804f3c5:  mov ebx, eax
 804f3c7:  ja 804f3ea
 804f3c9:  mov eax, esi
 804f3cb:  call 80502b0
 804f3d0:  jmp 804f388
 804f3d2:  mov edx, 0xffffffe8
 804f3d8:  neg esi
 804f3da:  mov ebx, 0xffffffff
 804f3df:  mov eax, gs:0x0
 804f3e5:  mov DWORD PTR [eax+edx], esi
 804f3e8:  jmp 804f388
 804f3ea:  mov edx, 0xffffffe8
 804f3f0:  neg edi
 804f3f2:  mov ebx, 0xffffffff
 804f3f7:  mov eax, gs:0x0
 804f3fd:  mov DWORD PTR [eax+edx], edi
 804f400:  jmp 804f3c9
 804f402:  nop
 804f403:  nop
 804f404:  nop
 804f405:  nop
 804f406:  nop
 804f407:  nop
 804f408:  nop
 804f409:  nop
 804f40a:  nop
 804f40b:  nop
 804f40c:  nop
 804f40d:  nop
 804f40e:  nop
 804f40f:  nop

0804f410 <__sbrk>:
 804f410:  push ebp
 804f411:  mov ebp, esp
 804f413:  sub esp, 0xc
 804f416:  mov DWORD PTR [ebp-0x4], esi
 804f419:  mov esi, DWORD PTR [ebp+0x8]
 804f41c:  mov DWORD PTR [ebp-0x8], ebx
 804f41f:  mov edx, DWORD PTR ds:0x80d2a24
 804f425:  test edx, edx
 804f427:  je 804f448
 804f429:  mov eax, ds:0x80d0d94
 804f42e:  test eax, eax
 804f430:  jne 804f448
 804f432:  test esi, esi
 804f434:  jne 804f470
 804f436:  mov ebx, DWORD PTR ds:0x80d2a24
 804f43c:  mov esi, DWORD PTR [ebp-0x4]
 804f43f:  mov eax, ebx
 804f441:  mov ebx, DWORD PTR [ebp-0x8]
 804f444:  mov esp, ebp
 804f446:  pop ebp
 804f447:  ret
 804f448:  mov DWORD PTR [esp], 0x0
 804f44f:  call 8073360
 804f454:  test eax, eax
 804f456:  jns 804f432
 804f458:  mov ebx, 0xffffffff
 804f45d:  mov esi, DWORD PTR [ebp-0x4]
 804f460:  mov eax, ebx
 804f462:  mov ebx, DWORD PTR [ebp-0x8]
 804f465:  mov esp, ebp
 804f467:  pop ebp
 804f468:  ret
 804f469:  lea esi, [esi]
 804f470:  mov ebx, DWORD PTR ds:0x80d2a24
 804f476:  lea eax, [ebx+esi]
 804f479:  mov DWORD PTR [esp], eax
 804f47c:  call 8073360
 804f481:  test eax, eax
 804f483:  js 804f458
 804f485:  mov eax, ebx
 804f487:  mov esi, DWORD PTR [ebp-0x4]
 804f48a:  mov ebx, DWORD PTR [ebp-0x8]
 804f48d:  mov esp, ebp
 804f48f:  pop ebp
 804f490:  ret
 804f491:  nop
 804f492:  nop
 804f493:  nop
 804f494:  nop
 804f495:  nop
 804f496:  nop
 804f497:  nop
 804f498:  nop
 804f499:  nop
 804f49a:  nop
 804f49b:  nop
 804f49c:  nop
 804f49d:  nop
 804f49e:  nop
 804f49f:  nop

0804f4a0 <__getpagesize>:
 804f4a0:  mov eax, ds:0x80d2e2c
 804f4a5:  push ebp
 804f4a6:  mov ebp, esp
 804f4a8:  test eax, eax
 804f4aa:  je 804f4b0
 804f4ac:  pop ebp
 804f4ad:  ret
 804f4ae:  xchg ax, ax
 804f4b0:  mov ax, 0x1000
 804f4b4:  pop ebp
 804f4b5:  ret
 804f4b6:  nop
 804f4b7:  nop
 804f4b8:  nop
 804f4b9:  nop
 804f4ba:  nop
 804f4bb:  nop
 804f4bc:  nop
 804f4bd:  nop
 804f4be:  nop
 804f4bf:  nop

0804f4c0 <cancel_handler>:
 804f4c0:  push ebp
 804f4c1:  mov ebp, esp
 804f4c3:  cmp DWORD PTR gs:0xc, 0x0
 804f4cb:  je 804f4ce
 804f4cd:  sub DWORD PTR ds:0x80d222c, 0x1
 804f4d5:  jne 804ffa9
 804f4db:  pop ebp
 804f4dc:  ret
 804f4dd:  lea esi, [esi]

0804f4e0 <setlogmask>:
 804f4e0:  push ebp
 804f4e1:  mov eax, ds:0x80d0d48
 804f4e6:  mov ebp, esp
 804f4e8:  mov edx, DWORD PTR [ebp+0x8]
 804f4eb:  test edx, edx
 804f4ed:  je 804f4f5
 804f4ef:  mov DWORD PTR ds:0x80d0d48, edx
 804f4f5:  pop ebp
 804f4f6:  ret
 804f4f7:  mov esi, esi
 804f4f9:  lea edi, [edi]

0804f500 <closelog>:
 804f500:  push ebp
 804f501:  xor eax, eax
 804f503:  mov ebp, esp
 804f505:  mov ecx, 0x1
 804f50a:  push ebx
 804f50b:  sub esp, 0x4
 804f50e:  cmp DWORD PTR gs:0xc, 0x0
 804f516:  je 804f519
 804f518:  cmpxchg DWORD PTR ds:0x80d222c, ecx
 804f520:  jne 804ffb9
 804f526:  mov eax, ds:0x80d2220
 804f52b:  test eax, eax
 804f52d:  jne 804f558
 804f52f:  mov DWORD PTR [esp], 0x0
 804f536:  mov DWORD PTR ds:0x80d2228, 0x0
 804f540:  mov DWORD PTR ds:0x80d0d4c, 0x2
 804f54a:  call 804f4c0
 804f54f:  add esp, 0x4
 804f552:  pop ebx
 804f553:  pop ebp
 804f554:  ret
 804f555:  lea esi, [esi]
 804f558:  mov eax, ds:0x80d0d50
 804f55d:  mov DWORD PTR [esp], eax
 804f560:  call 8073140
 804f565:  mov DWORD PTR ds:0x80d0d50, 0xffffffff
 804f56f:  mov DWORD PTR ds:0x80d2220, 0x0
 804f579:  jmp 804f52f
 804f57b:  mov ebx, eax
 804f57d:  mov DWORD PTR [esp], 0x0
 804f584:  call 804f4c0
 804f589:  mov DWORD PTR [esp], ebx
 804f58c:  call 80abe50
 804f591:  jmp 804f5a0
 804f593:  nop
 804f594:  nop
 804f595:  nop
 804f596:  nop
 804f597:  nop
 804f598:  nop
 804f599:  nop
 804f59a:  nop
 804f59b:  nop
 804f59c:  nop
 804f59d:  nop
 804f59e:  nop
 804f59f:  nop

0804f5a0 <openlog_internal>:
 804f5a0:  push ebp
 804f5a1:  mov ebp, esp
 804f5a3:  push edi
 804f5a4:  push esi
 804f5a5:  push ebx
 804f5a6:  sub esp, 0x10
 804f5a9:  test eax, eax
 804f5ab:  je 804f5b2
 804f5ad:  mov ds:0x80d2228, eax
 804f5b2:  test ecx, ecx
 804f5b4:  mov DWORD PTR ds:0x80d2224, edx
 804f5ba:  je 804f5c8
 804f5bc:  test ecx, 0xfffffc07
 804f5c2:  je 804f6e8
 804f5c8:  cmp DWORD PTR ds:0x80d0d50, 0xff
 804f5cf:  je 804f6fb
 804f5d5:  mov eax, ds:0x80d0d50
 804f5da:  mov edx, DWORD PTR ds:0x80d2220
 804f5e0:  test edx, edx
 804f5e2:  jne 804f6db
 804f5e8:  mov edx, DWORD PTR gs:0x0
 804f5ef:  mov edi, 0xffffffe8
 804f5f5:  mov DWORD PTR [ebp-0x10], edx
 804f5f8:  mov esi, DWORD PTR [edx+edi]
 804f5fb:  mov DWORD PTR [esp+0x8], 0x6e
 804f603:  mov DWORD PTR [esp+0x4], 0x80d2240
 804f60b:  mov DWORD PTR [esp], eax
 804f60e:  call 8050150
 804f613:  add eax, 0x1
 804f616:  jne 804f910
 804f61c:  mov eax, DWORD PTR [ebp-0x10]
 804f61f:  mov ebx, DWORD PTR [eax+edi]
 804f622:  mov eax, ds:0x80d0d50
 804f627:  mov DWORD PTR ds:0x80d0d50, 0xffffffff
 804f631:  mov DWORD PTR [esp], eax
 804f634:  call 8073140
 804f639:  mov edx, DWORD PTR [ebp-0x10]
 804f63c:  cmp ebx, 0x5b
 804f63f:  mov DWORD PTR [edx+edi], esi
 804f642:  jne 804f6db
 804f648:  xor eax, eax
 804f64a:  cmp DWORD PTR ds:0x80d0d4c, 0x2
 804f651:  setne al
 804f654:  add eax, 0x1
 804f657:  cmp DWORD PTR ds:0x80d0d50, 0xff
 804f65e:  mov ds:0x80d0d4c, eax
 804f663:  je 804f7e0
 804f669:  mov eax, ds:0x80d0d50
 804f66e:  mov edx, DWORD PTR ds:0x80d2220
 804f674:  test edx, edx
 804f676:  jne 804f6db
 804f678:  mov edx, DWORD PTR [ebp-0x10]
 804f67b:  mov esi, DWORD PTR [edx+edi]
 804f67e:  mov DWORD PTR [esp+0x8], 0x6e
 804f686:  mov DWORD PTR [esp+0x4], 0x80d2240
 804f68e:  mov DWORD PTR [esp], eax
 804f691:  call 8050150
 804f696:  add eax, 0x1
 804f699:  jne 804f910
 804f69f:  mov eax, DWORD PTR [ebp-0x10]
 804f6a2:  mov ebx, DWORD PTR [eax+edi]
 804f6a5:  mov eax, ds:0x80d0d50
 804f6aa:  mov DWORD PTR ds:0x80d0d50, 0xffffffff
 804f6b4:  mov DWORD PTR [esp], eax
 804f6b7:  call 8073140
 804f6bc:  mov edx, DWORD PTR [ebp-0x10]
 804f6bf:  cmp ebx, 0x5b
 804f6c2:  mov DWORD PTR [edx+edi], esi
 804f6c5:  jne 804f6db
 804f6c7:  xor eax, eax
 804f6c9:  cmp DWORD PTR ds:0x80d0d4c, 0x2
 804f6d0:  setne al
 804f6d3:  add eax, 0x1
 804f6d6:  mov ds:0x80d0d4c, eax
 804f6db:  add esp, 0x10
 804f6de:  pop ebx
 804f6df:  pop esi
 804f6e0:  pop edi
 804f6e1:  pop ebp
 804f6e2:  ret
 804f6e3:  nop
 804f6e4:  lea esi, [esi]
 804f6e8:  cmp DWORD PTR ds:0x80d0d50, 0xff
 804f6ef:  mov DWORD PTR ds:0x80d0d54, ecx
 804f6f5:  jne 804f5d5
 804f6fb:  mov WORD PTR ds:0x80d2240, 0x1
 804f704:  mov DWORD PTR [esp+0x8], 0x6c
 804f70c:  mov DWORD PTR [esp+0x4], 0x80affd0
 804f714:  mov DWORD PTR [esp], 0x80d2242
 804f71b:  call 806b2f0
 804f720:  test BYTE PTR ds:0x80d2224, 0x8
 804f727:  je 804f7c8
 804f72d:  mov edi, DWORD PTR ds:0x80d2db0
 804f733:  test edi, edi
 804f735:  js 804f8c0
 804f73b:  mov eax, ds:0x80d0d4c
 804f740:  mov DWORD PTR [esp+0x8], 0x0
 804f748:  mov DWORD PTR [esp], 0x1
 804f74f:  or eax, 0x80000
 804f754:  mov DWORD PTR [esp+0x4], eax
 804f758:  call 8050210
 804f75d:  mov ebx, DWORD PTR ds:0x80d2db0
 804f763:  test ebx, ebx
 804f765:  mov ds:0x80d0d50, eax
 804f76a:  jne 804f780
 804f76c:  add eax, 0x1
 804f76f:  je 804f91f
 804f775:  mov ecx, 0x1
 804f77a:  mov DWORD PTR ds:0x80d2db0, ecx
 804f780:  mov ecx, DWORD PTR ds:0x80d2db0
 804f786:  test ecx, ecx
 804f788:  js 804f8c0
 804f78e:  mov eax, ds:0x80d0d50
 804f793:  cmp eax, 0xff
 804f796:  je 804f6db
 804f79c:  mov esi, DWORD PTR ds:0x80d2db0
 804f7a2:  test esi, esi
 804f7a4:  jns 804f5da
 804f7aa:  mov DWORD PTR [esp+0x8], 0x1
 804f7b2:  mov DWORD PTR [esp+0x4], 0x2
 804f7ba:  mov DWORD PTR [esp], eax
 804f7bd:  call 804f350
 804f7c2:  lea esi, [esi]
 804f7c8:  mov eax, ds:0x80d0d50
 804f7cd:  cmp eax, 0xff
 804f7d0:  jne 804f5da
 804f7d6:  jmp 804f6db
 804f7db:  nop
 804f7dc:  lea esi, [esi]
 804f7e0:  mov WORD PTR ds:0x80d2240, 0x1
 804f7e9:  mov DWORD PTR [esp+0x8], 0x6c
 804f7f1:  mov DWORD PTR [esp+0x4], 0x80affd0
 804f7f9:  mov DWORD PTR [esp], 0x80d2242
 804f800:  call 806b2f0
 804f805:  test BYTE PTR ds:0x80d2224, 0x8
 804f80c:  je 804f8a8
 804f812:  mov eax, ds:0x80d2db0
 804f817:  test eax, eax
 804f819:  js 804f8e8
 804f81f:  mov eax, ds:0x80d0d4c
 804f824:  mov DWORD PTR [esp+0x8], 0x0
 804f82c:  mov DWORD PTR [esp], 0x1
 804f833:  or eax, 0x80000
 804f838:  mov DWORD PTR [esp+0x4], eax
 804f83c:  call 8050210
 804f841:  mov esi, DWORD PTR ds:0x80d2db0
 804f847:  test esi, esi
 804f849:  mov ds:0x80d0d50, eax
 804f84e:  jne 804f863
 804f850:  cmp eax, 0xff
 804f853:  je 804f93f
 804f859:  mov eax, 0x1
 804f85e:  mov ds:0x80d2db0, eax
 804f863:  mov ebx, DWORD PTR ds:0x80d2db0
 804f869:  test ebx, ebx
 804f86b:  js 804f8e8
 804f86d:  mov eax, ds:0x80d0d50
 804f872:  cmp eax, 0xff
 804f875:  je 804f6db
 804f87b:  mov ecx, DWORD PTR ds:0x80d2db0
 804f881:  test ecx, ecx
 804f883:  jns 804f66e
 804f889:  mov DWORD PTR [esp+0x8], 0x1
 804f891:  mov DWORD PTR [esp+0x4], 0x2
 804f899:  mov DWORD PTR [esp], eax
 804f89c:  call 804f350
 804f8a1:  lea esi, [esi]
 804f8a8:  mov eax, ds:0x80d0d50
 804f8ad:  cmp eax, 0xff
 804f8b0:  jne 804f66e
 804f8b6:  jmp 804f6db
 804f8bb:  nop
 804f8bc:  lea esi, [esi]
 804f8c0:  mov eax, ds:0x80d0d4c
 804f8c5:  mov DWORD PTR [esp+0x8], 0x0
 804f8cd:  mov DWORD PTR [esp], 0x1
 804f8d4:  mov DWORD PTR [esp+0x4], eax
 804f8d8:  call 8050210
 804f8dd:  mov ds:0x80d0d50, eax
 804f8e2:  jmp 804f78e
 804f8e7:  nop
 804f8e8:  mov eax, ds:0x80d0d4c
 804f8ed:  mov DWORD PTR [esp+0x8], 0x0
 804f8f5:  mov DWORD PTR [esp], 0x1
 804f8fc:  mov DWORD PTR [esp+0x4], eax
 804f900:  call 8050210
 804f905:  mov ds:0x80d0d50, eax
 804f90a:  jmp 804f86d
 804f90f:  nop
 804f910:  mov DWORD PTR ds:0x80d2220, 0x1
 804f91a:  jmp 804f6db
 804f91f:  mov edx, 0xffffffe8
 804f925:  mov ecx, 0xffffffff
 804f92a:  mov eax, gs:0x0
 804f930:  cmp DWORD PTR [eax+edx], 0x16
 804f934:  jne 804f775
 804f93a:  jmp 804f77a
 804f93f:  mov edx, DWORD PTR [ebp-0x10]
 804f942:  cmp DWORD PTR [edx+edi], 0x16
 804f946:  jne 804f859
 804f94c:  lea esi, [esi]
 804f950:  jmp 804f85e
 804f955:  lea esi, [esi]
 804f959:  lea edi, [edi]

0804f960 <openlog>:
 804f960:  push ebp
 804f961:  mov ebp, esp
 804f963:  sub esp, 0x14
 804f966:  mov eax, DWORD PTR [ebp+0x10]
 804f969:  mov DWORD PTR [ebp-0xc], ebx
 804f96c:  mov ebx, 0x1
 804f971:  mov edx, DWORD PTR [ebp+0xc]
 804f974:  mov DWORD PTR [ebp-0x8], esi
 804f977:  xor esi, esi
 804f979:  mov ecx, ebx
 804f97b:  mov DWORD PTR [ebp-0x4], edi
 804f97e:  mov edi, DWORD PTR [ebp+0x8]
 804f981:  mov DWORD PTR [ebp-0x10], eax
 804f984:  mov eax, esi
 804f986:  cmp DWORD PTR gs:0xc, 0x0
 804f98e:  je 804f991
 804f990:  cmpxchg DWORD PTR ds:0x80d222c, ecx
 804f998:  jne 804ffc9
 804f99e:  mov ecx, DWORD PTR [ebp-0x10]
 804f9a1:  mov eax, edi
 804f9a3:  call 804f5a0
 804f9a8:  mov DWORD PTR [ebp+0x8], 0x0
 804f9af:  mov ebx, DWORD PTR [ebp-0xc]
 804f9b2:  mov esi, DWORD PTR [ebp-0x8]
 804f9b5:  mov edi, DWORD PTR [ebp-0x4]
 804f9b8:  mov esp, ebp
 804f9ba:  pop ebp
 804f9bb:  jmp 804f4c0
 804f9c0:  mov ebx, eax
 804f9c2:  mov DWORD PTR [esp], 0x0
 804f9c9:  call 804f4c0
 804f9ce:  mov DWORD PTR [esp], ebx
 804f9d1:  call 80abe50
 804f9d6:  lea esi, [esi]
 804f9d9:  lea edi, [edi]

0804f9e0 <__vsyslog_chk>:
 804f9e0:  push ebp
 804f9e1:  mov eax, gs:0x0
 804f9e7:  mov ebp, esp
 804f9e9:  push edi
 804f9ea:  push esi
 804f9eb:  push ebx
 804f9ec:  sub esp, 0x98
 804f9f2:  mov ebx, DWORD PTR [ebp+0x8]
 804f9f5:  mov edx, 0xffffffe8
 804f9fb:  mov DWORD PTR [ebp-0x14], 0x0
 804fa02:  mov DWORD PTR [ebp-0x18], 0x0
 804fa09:  test ebx, 0xfffffc00
 804fa0f:  mov DWORD PTR [ebp-0x8c], eax
 804fa15:  mov edi, DWORD PTR [eax+edx]
 804fa18:  jne 804fc58
 804fa1e:  mov eax, ds:0x80d0d48
 804fa23:  mov ecx, ebx
 804fa25:  and ecx, 0x7
 804fa28:  sar eax, cl
 804fa2a:  test al, 0x1
 804fa2c:  je 804fc4c
 804fa32:  test ebx, 0x3f8
 804fa38:  jne 804fa40
 804fa3a:  or ebx, DWORD PTR ds:0x80d0d54
 804fa40:  lea eax, [ebp-0x18]
 804fa43:  mov DWORD PTR [esp+0x4], eax
 804fa47:  lea eax, [ebp-0x14]
 804fa4a:  mov DWORD PTR [esp], eax
 804fa4d:  call 8065640
 804fa52:  test eax, eax
 804fa54:  mov esi, eax
 804fa56:  je 804fc80
 804fa5c:  or DWORD PTR [eax], 0x8000
 804fa62:  mov DWORD PTR [esp+0x8], ebx
 804fa66:  lea ebx, [ebp-0x10]
 804fa69:  mov DWORD PTR [esp+0x4], 0x80affd9
 804fa71:  mov DWORD PTR [esp], eax
 804fa74:  call 80617a0
 804fa79:  mov DWORD PTR [esp], ebx
 804fa7c:  call 806d460
 804fa81:  lea eax, [ebp-0x88]
 804fa87:  mov DWORD PTR [esp], ebx
 804fa8a:  mov DWORD PTR [esp+0x4], eax
 804fa8e:  call 806d430
 804fa93:  mov ebx, DWORD PTR [esi+0x14]
 804fa96:  mov DWORD PTR [esp+0x10], 0x80b03e0
 804fa9e:  mov DWORD PTR [esp+0x8], 0x80affde
 804faa6:  mov DWORD PTR [esp+0xc], eax
 804faaa:  mov eax, DWORD PTR [esi+0x18]
 804faad:  mov DWORD PTR [esp], ebx
 804fab0:  sub eax, ebx
 804fab2:  mov DWORD PTR [esp+0x4], eax
 804fab6:  call 8071a00
 804fabb:  add ebx, eax
 804fabd:  mov DWORD PTR [esi+0x14], ebx
 804fac0:  mov DWORD PTR [esp], esi
 804fac3:  call 8062540
 804fac8:  mov ebx, eax
 804faca:  mov eax, ds:0x80d2228
 804facf:  test eax, eax
 804fad1:  je 804fee0
 804fad7:  mov DWORD PTR [esp+0x4], esi
 804fadb:  mov DWORD PTR [esp], eax
 804fade:  call 8065ae0
 804fae3:  test BYTE PTR ds:0x80d2224, 0x1
 804faea:  jne 804fe90
 804faf0:  mov eax, ds:0x80d2228
 804faf5:  test eax, eax
 804faf7:  je 804fb20
 804faf9:  mov eax, DWORD PTR [esi+0x14]
 804fafc:  cmp eax, DWORD PTR [esi+0x18]
 804faff:  jae 804fec8
 804fb05:  mov BYTE PTR [eax], 0x3a
 804fb08:  add eax, 0x1
 804fb0b:  mov DWORD PTR [esi+0x14], eax
 804fb0e:  cmp eax, DWORD PTR [esi+0x18]
 804fb11:  jae 804feb0
 804fb17:  mov BYTE PTR [eax], 0x20
 804fb1a:  add eax, 0x1
 804fb1d:  mov DWORD PTR [esi+0x14], eax
 804fb20:  mov eax, DWORD PTR [ebp-0x8c]
 804fb26:  mov edx, 0xffffffe8
 804fb2c:  cmp DWORD PTR [ebp+0xc], 0xff
 804fb30:  mov DWORD PTR [eax+edx], edi
 804fb33:  je 804fe70
 804fb39:  mov edx, DWORD PTR [ebp+0x14]
 804fb3c:  mov eax, DWORD PTR [ebp+0x10]
 804fb3f:  mov DWORD PTR [esp], esi
 804fb42:  mov DWORD PTR [esp+0xc], edx
 804fb46:  mov edx, DWORD PTR [ebp+0xc]
 804fb49:  mov DWORD PTR [esp+0x8], eax
 804fb4d:  mov DWORD PTR [esp+0x4], edx
 804fb51:  call 80507e0
 804fb56:  mov edi, ebx
 804fb58:  mov DWORD PTR [esp], esi
 804fb5b:  call 8062010
 804fb60:  test BYTE PTR ds:0x80d2224, 0x20
 804fb67:  je 804fbc2
 804fb69:  mov ecx, DWORD PTR [ebp-0x14]
 804fb6c:  mov esi, 0x1
 804fb71:  mov edx, DWORD PTR [ebp-0x18]
 804fb74:  lea eax, [ecx+edi]
 804fb77:  mov DWORD PTR [ebp-0x3c], eax
 804fb7a:  mov eax, edx
 804fb7c:  sub eax, edi
 804fb7e:  mov DWORD PTR [ebp-0x38], eax
 804fb81:  cmp BYTE PTR [ecx+edx-0x1], 0xa
 804fb86:  je 804fb9b
 804fb88:  mov DWORD PTR [ebp-0x34], 0x80b5234
 804fb8f:  mov esi, 0x2
 804fb94:  mov DWORD PTR [ebp-0x30], 0x1
 804fb9b:  lea eax, [ebp-0x59]
 804fb9e:  cmp ecx, eax
 804fba0:  sete al
 804fba3:  movzx eax, al
 804fba6:  lea ebx, [eax-0x1]
 804fba9:  lea eax, [ebp-0x3c]
 804fbac:  and ebx, ecx
 804fbae:  mov DWORD PTR [esp+0x8], esi
 804fbb2:  mov DWORD PTR [esp+0x4], eax
 804fbb6:  mov DWORD PTR [esp], 0x2
 804fbbd:  call 8073540
 804fbc2:  mov eax, DWORD PTR [ebp-0x14]
 804fbc5:  mov ecx, 0x1
 804fbca:  mov DWORD PTR [ebp-0x1c], 0x0
 804fbd1:  mov DWORD PTR [ebp-0x20], eax
 804fbd4:  xor eax, eax
 804fbd6:  cmp DWORD PTR gs:0xc, 0x0
 804fbde:  je 804fbe1
 804fbe0:  cmpxchg DWORD PTR ds:0x80d222c, ecx
 804fbe8:  jne 804ffd9
 804fbee:  mov eax, ds:0x80d2220
 804fbf3:  test eax, eax
 804fbf5:  je 804fe50
 804fbfb:  cmp DWORD PTR ds:0x80d0d4c, 0x1
 804fc02:  je 804fe40
 804fc08:  mov eax, ds:0x80d2220
 804fc0d:  test eax, eax
 804fc0f:  jne 804fd10
 804fc15:  test BYTE PTR ds:0x80d2224, 0x2
 804fc1c:  jne 804fdf1
 804fc22:  cmp DWORD PTR gs:0xc, 0x0
 804fc2a:  je 804fc2d
 804fc2c:  sub DWORD PTR ds:0x80d222c, 0x1
 804fc34:  jne 804ffe9
 804fc3a:  mov edx, DWORD PTR [ebp-0x14]
 804fc3d:  lea eax, [ebp-0x59]
 804fc40:  cmp edx, eax
 804fc42:  je 804fc4c
 804fc44:  mov DWORD PTR [esp], edx
 804fc47:  call 804b4a0
 804fc4c:  add esp, 0x98
 804fc52:  pop ebx
 804fc53:  pop esi
 804fc54:  pop edi
 804fc55:  pop ebp
 804fc56:  ret
 804fc57:  nop
 804fc58:  mov DWORD PTR [esp+0x8], ebx
 804fc5c:  and ebx, 0x3ff
 804fc62:  mov DWORD PTR [esp+0x4], 0x80b0000
 804fc6a:  mov DWORD PTR [esp], 0x23
 804fc71:  call 804ff80
 804fc76:  jmp 804fa1e
 804fc7b:  nop
 804fc7c:  lea esi, [esi]
 804fc80:  lea eax, [ebp-0x59]
 804fc83:  mov edi, 0x66666667
 804fc88:  mov DWORD PTR [ebp-0x90], eax
 804fc8e:  lea esi, [ebp-0x20]
 804fc91:  mov DWORD PTR [ebp-0x59], 0x2074756f
 804fc98:  mov ebx, esi
 804fc9a:  mov DWORD PTR [ebp-0x55], 0x6d20666f
 804fca1:  mov DWORD PTR [ebp-0x51], 0x726f6d65
 804fca8:  mov DWORD PTR [ebp-0x4d], 0x5b2079
 804fcaf:  call 8072590
 804fcb4:  mov ecx, eax
 804fcb6:  xchg ax, ax
 804fcb8:  mov eax, ecx
 804fcba:  sub ebx, 0x1
 804fcbd:  imul edi
 804fcbf:  mov eax, ecx
 804fcc1:  sar eax, 0x1f
 804fcc4:  sar edx, 0x2
 804fcc7:  sub edx, eax
 804fcc9:  lea eax, [edx+edx*4]
 804fccc:  add eax, eax
 804fcce:  sub ecx, eax
 804fcd0:  test edx, edx
 804fcd2:  lea eax, [ecx+0x30]
 804fcd5:  mov ecx, edx
 804fcd7:  mov BYTE PTR [ebx], al
 804fcd9:  jne 804fcb8
 804fcdb:  lea edx, [ebp-0x4a]
 804fcde:  sub esi, ebx
 804fce0:  mov DWORD PTR [esp], edx
 804fce3:  xor edi, edi
 804fce5:  mov DWORD PTR [esp+0x8], esi
 804fce9:  mov DWORD PTR [esp+0x4], ebx
 804fced:  call 806c310
 804fcf2:  mov BYTE PTR [eax], 0x5d
 804fcf5:  lea edx, [eax+0x1]
 804fcf8:  mov BYTE PTR [eax+0x1], 0x0
 804fcfc:  lea eax, [ebp-0x59]
 804fcff:  sub edx, DWORD PTR [ebp-0x90]
 804fd05:  mov DWORD PTR [ebp-0x14], eax
 804fd08:  mov DWORD PTR [ebp-0x18], edx
 804fd0b:  jmp 804fb60
 804fd10:  mov eax, DWORD PTR [ebp-0x18]
 804fd13:  mov DWORD PTR [esp+0xc], 0x4000
 804fd1b:  mov DWORD PTR [esp+0x8], eax
 804fd1f:  mov eax, DWORD PTR [ebp-0x14]
 804fd22:  mov DWORD PTR [esp+0x4], eax
 804fd26:  mov eax, ds:0x80d0d50
 804fd2b:  mov DWORD PTR [esp], eax
 804fd2e:  call 80501b0
 804fd33:  test eax, eax
 804fd35:  jns 804fc22
 804fd3b:  mov eax, ds:0x80d2220
 804fd40:  test eax, eax
 804fd42:  je 804fc15
 804fd48:  mov eax, ds:0x80d0d50
 804fd4d:  mov DWORD PTR [esp], eax
 804fd50:  call 8073140
 804fd55:  mov edx, DWORD PTR ds:0x80d2224
 804fd5b:  xor ecx, ecx
 804fd5d:  mov eax, ds:0x80d2228
 804fd62:  mov DWORD PTR ds:0x80d0d50, 0xffffffff
 804fd6c:  mov DWORD PTR ds:0x80d2220, 0x0
 804fd76:  or edx, 0x8
 804fd79:  call 804f5a0
 804fd7e:  mov eax, ds:0x80d2220
 804fd83:  test eax, eax
 804fd85:  je 804fc15
 804fd8b:  mov eax, DWORD PTR [ebp-0x18]
 804fd8e:  mov DWORD PTR [esp+0xc], 0x4000
 804fd96:  mov DWORD PTR [esp+0x8], eax
 804fd9a:  mov eax, DWORD PTR [ebp-0x14]
 804fd9d:  mov DWORD PTR [esp+0x4], eax
 804fda1:  mov eax, ds:0x80d0d50
 804fda6:  mov DWORD PTR [esp], eax
 804fda9:  call 80501b0
 804fdae:  test eax, eax
 804fdb0:  jns 804fc22
 804fdb6:  mov eax, ds:0x80d2220
 804fdbb:  test eax, eax
 804fdbd:  je 804fc15
 804fdc3:  mov eax, ds:0x80d0d50
 804fdc8:  mov DWORD PTR [esp], eax
 804fdcb:  call 8073140
 804fdd0:  test BYTE PTR ds:0x80d2224, 0x2
 804fdd7:  mov DWORD PTR ds:0x80d0d50, 0xffffffff
 804fde1:  mov DWORD PTR ds:0x80d2220, 0x0
 804fdeb:  je 804fc22
 804fdf1:  mov DWORD PTR [esp+0x8], 0x0
 804fdf9:  mov DWORD PTR [esp+0x4], 0x101
 804fe01:  mov DWORD PTR [esp], 0x80affed
 804fe08:  call 804f1f0
 804fe0d:  test eax, eax
 804fe0f:  mov ebx, eax
 804fe11:  js 804fc22
 804fe17:  add edi, DWORD PTR [ebp-0x14]
 804fe1a:  mov DWORD PTR [esp+0x4], 0x80afffa
 804fe22:  mov DWORD PTR [esp], eax
 804fe25:  mov DWORD PTR [esp+0x8], edi
 804fe29:  call 8061800
 804fe2e:  mov DWORD PTR [esp], ebx
 804fe31:  call 8073140
 804fe36:  jmp 804fc22
 804fe3b:  nop
 804fe3c:  lea esi, [esi]
 804fe40:  add DWORD PTR [ebp-0x18], 0x1
 804fe44:  lea esi, [esi]
 804fe48:  jmp 804fc08
 804fe4d:  lea esi, [esi]
 804fe50:  mov edx, DWORD PTR ds:0x80d2224
 804fe56:  xor ecx, ecx
 804fe58:  mov eax, ds:0x80d2228
 804fe5d:  or edx, 0x8
 804fe60:  call 804f5a0
 804fe65:  jmp 804fbfb
 804fe6a:  lea esi, [esi]
 804fe70:  mov edx, DWORD PTR [ebp+0x14]
 804fe73:  mov eax, DWORD PTR [ebp+0x10]
 804fe76:  mov DWORD PTR [esp], esi
 804fe79:  mov DWORD PTR [esp+0x8], edx
 804fe7d:  mov DWORD PTR [esp+0x4], eax
 804fe81:  call 8058740
 804fe86:  jmp 804fb56
 804fe8b:  nop
 804fe8c:  lea esi, [esi]
 804fe90:  call 8072590
 804fe95:  mov DWORD PTR [esp+0x4], 0x80affe8
 804fe9d:  mov DWORD PTR [esp], esi
 804fea0:  mov DWORD PTR [esp+0x8], eax
 804fea4:  call 80617a0
 804fea9:  jmp 804faf0
 804feae:  xchg ax, ax
 804feb0:  mov DWORD PTR [esp+0x4], 0x20
 804feb8:  mov DWORD PTR [esp], esi
 804febb:  call 8068460
 804fec0:  jmp 804fb20
 804fec5:  lea esi, [esi]
 804fec8:  mov DWORD PTR [esp+0x4], 0x3a
 804fed0:  mov DWORD PTR [esp], esi
 804fed3:  call 8068460
 804fed8:  mov eax, DWORD PTR [esi+0x14]
 804fedb:  jmp 804fb0e
 804fee0:  mov eax, ds:0x80d0d5c
 804fee5:  test eax, eax
 804fee7:  mov ds:0x80d2228, eax
 804feec:  je 804fae3
 804fef2:  jmp 804fad7
 804fef7:  mov esi, eax
 804fef9:  lea eax, [ebp-0x20]
 804fefc:  mov DWORD PTR [esp], eax
 804feff:  call 804f4c0
 804ff04:  mov DWORD PTR [esp], esi
 804ff07:  call 80abe50
 804ff0c:  mov esi, eax
 804ff0e:  mov DWORD PTR [esp], ebx
 804ff11:  call 804b4a0
 804ff16:  mov DWORD PTR [esp], esi
 804ff19:  call 80abe50
 804ff1e:  xchg ax, ax

0804ff20 <__vsyslog>:
 804ff20:  push ebp
 804ff21:  mov ebp, esp
 804ff23:  sub esp, 0x10
 804ff26:  mov eax, DWORD PTR [ebp+0x10]
 804ff29:  mov DWORD PTR [esp+0x4], 0xffffffff
 804ff31:  mov DWORD PTR [esp+0xc], eax
 804ff35:  mov eax, DWORD PTR [ebp+0xc]
 804ff38:  mov DWORD PTR [esp+0x8], eax
 804ff3c:  mov eax, DWORD PTR [ebp+0x8]
 804ff3f:  mov DWORD PTR [esp], eax
 804ff42:  call 804f9e0
 804ff47:  leave
 804ff48:  ret
 804ff49:  lea esi, [esi]

0804ff50 <__syslog_chk>:
 804ff50:  push ebp
 804ff51:  mov ebp, esp
 804ff53:  sub esp, 0x10
 804ff56:  lea eax, [ebp+0x14]
 804ff59:  mov DWORD PTR [esp+0xc], eax
 804ff5d:  mov eax, DWORD PTR [ebp+0x10]
 804ff60:  mov DWORD PTR [esp+0x8], eax
 804ff64:  mov eax, DWORD PTR [ebp+0xc]
 804ff67:  mov DWORD PTR [esp+0x4], eax
 804ff6b:  mov eax, DWORD PTR [ebp+0x8]
 804ff6e:  mov DWORD PTR [esp], eax
 804ff71:  call 804f9e0
 804ff76:  leave
 804ff77:  ret
 804ff78:  nop
 804ff79:  lea esi, [esi]

0804ff80 <__syslog>:
 804ff80:  push ebp
 804ff81:  mov ebp, esp
 804ff83:  sub esp, 0x10
 804ff86:  lea eax, [ebp+0x10]
 804ff89:  mov DWORD PTR [esp+0xc], eax
 804ff8d:  mov eax, DWORD PTR [ebp+0xc]
 804ff90:  mov DWORD PTR [esp+0x4], 0xffffffff
 804ff98:  mov DWORD PTR [esp+0x8], eax
 804ff9c:  mov eax, DWORD PTR [ebp+0x8]
 804ff9f:  mov DWORD PTR [esp], eax
 804ffa2:  call 804f9e0
 804ffa7:  leave
 804ffa8:  ret

0804ffa9 <_L_unlock_9>:
 804ffa9:  lea eax, ds:0x80d222c
 804ffaf:  call 8050260
 804ffb4:  jmp 804f4db

0804ffb9 <_L_lock_63>:
 804ffb9:  lea ecx, ds:0x80d222c
 804ffbf:  call 8050230
 804ffc4:  jmp 804f526

0804ffc9 <_L_lock_504>:
 804ffc9:  lea ecx, ds:0x80d222c
 804ffcf:  call 8050230
 804ffd4:  jmp 804f99e

0804ffd9 <_L_lock_787>:
 804ffd9:  lea ecx, ds:0x80d222c
 804ffdf:  call 8050230
 804ffe4:  jmp 804fbee

0804ffe9 <_L_unlock_814>:
 804ffe9:  lea eax, ds:0x80d222c
 804ffef:  call 8050260
 804fff4:  jmp 804fc3a
 804fff9:  nop
 804fffa:  nop
 804fffb:  nop
 804fffc:  nop
 804fffd:  nop
 804fffe:  nop
 804ffff:  nop

08050000 <__mmap>:
 8050000:  push ebp
 8050001:  push ebx
 8050002:  push esi
 8050003:  push edi
 8050004:  mov ebx, DWORD PTR [esp+0x14]
 8050008:  mov ecx, DWORD PTR [esp+0x18]
 805000c:  mov edx, DWORD PTR [esp+0x1c]
 8050010:  mov esi, DWORD PTR [esp+0x20]
 8050014:  mov edi, DWORD PTR [esp+0x24]
 8050018:  mov ebp, DWORD PTR [esp+0x28]
 805001c:  test ebp, 0xfff
 8050022:  mov eax, 0xffffffea
 8050027:  jne 8050033
 8050029:  shr ebp, 0xc
 805002c:  mov eax, 0xc0
 8050031:  int 0x80
 8050033:  pop edi
 8050034:  pop esi
 8050035:  pop ebx
 8050036:  pop ebp
 8050037:  cmp eax, 0xfffff000
 805003c:  ja 8051470
 8050042:  ret
 8050043:  nop
 8050044:  nop
 8050045:  nop
 8050046:  nop
 8050047:  nop
 8050048:  nop
 8050049:  nop
 805004a:  nop
 805004b:  nop
 805004c:  nop
 805004d:  nop
 805004e:  nop
 805004f:  nop

08050050 <__munmap>:
 8050050:  mov edx, ebx
 8050052:  mov ecx, DWORD PTR [esp+0x8]
 8050056:  mov ebx, DWORD PTR [esp+0x4]
 805005a:  mov eax, 0x5b
 805005f:  int 0x80
 8050061:  mov ebx, edx
 8050063:  cmp eax, 0xfffff001
 8050068:  jae 8051470
 805006e:  ret
 805006f:  nop

08050070 <__mprotect>:
 8050070:  push ebx
 8050071:  mov edx, DWORD PTR [esp+0x10]
 8050075:  mov ecx, DWORD PTR [esp+0xc]
 8050079:  mov ebx, DWORD PTR [esp+0x8]
 805007d:  mov eax, 0x7d
 8050082:  int 0x80
 8050084:  pop ebx
 8050085:  cmp eax, 0xfffff001
 805008a:  jae 8051470
 8050090:  ret
 8050091:  nop
 8050092:  nop
 8050093:  nop
 8050094:  nop
 8050095:  nop
 8050096:  nop
 8050097:  nop
 8050098:  nop
 8050099:  nop
 805009a:  nop
 805009b:  nop
 805009c:  nop
 805009d:  nop
 805009e:  nop
 805009f:  nop

080500a0 <madvise>:
 80500a0:  push ebx
 80500a1:  mov edx, DWORD PTR [esp+0x10]
 80500a5:  mov ecx, DWORD PTR [esp+0xc]
 80500a9:  mov ebx, DWORD PTR [esp+0x8]
 80500ad:  mov eax, 0xdb
 80500b2:  int 0x80
 80500b4:  pop ebx
 80500b5:  cmp eax, 0xfffff001
 80500ba:  jae 8051470
 80500c0:  ret
 80500c1:  nop
 80500c2:  nop
 80500c3:  nop
 80500c4:  nop
 80500c5:  nop
 80500c6:  nop
 80500c7:  nop
 80500c8:  nop
 80500c9:  nop
 80500ca:  nop
 80500cb:  nop
 80500cc:  nop
 80500cd:  nop
 80500ce:  nop
 80500cf:  nop

080500d0 <__init_misc>:
 80500d0:  push ebp
 80500d1:  mov ebp, esp
 80500d3:  sub esp, 0x10
 80500d6:  mov DWORD PTR [ebp-0x4], esi
 80500d9:  mov esi, DWORD PTR [ebp+0xc]
 80500dc:  mov DWORD PTR [ebp-0x8], ebx
 80500df:  test esi, esi
 80500e1:  je 805010c
 80500e3:  mov ebx, DWORD PTR [esi]
 80500e5:  test ebx, ebx
 80500e7:  je 805010c
 80500e9:  mov DWORD PTR [esp+0x4], 0x2f
 80500f1:  mov DWORD PTR [esp], ebx
 80500f4:  call 806b430
 80500f9:  test eax, eax
 80500fb:  je 8050118
 80500fd:  add eax, 0x1
 8050100:  mov ds:0x80d0d5c, eax
 8050105:  mov eax, DWORD PTR [esi]
 8050107:  mov ds:0x80d0d58, eax
 805010c:  mov ebx, DWORD PTR [ebp-0x8]
 805010f:  mov esi, DWORD PTR [ebp-0x4]
 8050112:  mov esp, ebp
 8050114:  pop ebp
 8050115:  ret
 8050116:  xchg ax, ax
 8050118:  mov DWORD PTR ds:0x80d0d5c, ebx
 805011e:  jmp 8050105

08050120 <__mremap>:
 8050120:  push edi
 8050121:  push esi
 8050122:  push ebx
 8050123:  mov edi, DWORD PTR [esp+0x20]
 8050127:  mov esi, DWORD PTR [esp+0x1c]
 805012b:  mov edx, DWORD PTR [esp+0x18]
 805012f:  mov ecx, DWORD PTR [esp+0x14]
 8050133:  mov ebx, DWORD PTR [esp+0x10]
 8050137:  mov eax, 0xa3
 805013c:  int 0x80
 805013e:  pop ebx
 805013f:  pop esi
 8050140:  pop edi
 8050141:  cmp eax, 0xfffff001
 8050146:  jae 8051470
 805014c:  ret
 805014d:  nop
 805014e:  nop
 805014f:  nop

08050150 <__connect_internal>:
 8050150:  cmp DWORD PTR gs:0xc, 0x0
 8050158:  jne 8050178
 805015a:  mov edx, ebx
 805015c:  mov eax, 0x66
 8050161:  mov ebx, 0x3
 8050166:  lea ecx, [esp+0x4]
 805016a:  int 0x80
 805016c:  mov ebx, edx
 805016e:  cmp eax, 0x83
 8050171:  jae 8051470
 8050177:  ret
 8050178:  push esi
 8050179:  call 80502f0
 805017e:  mov esi, eax
 8050180:  mov edx, ebx
 8050182:  mov eax, 0x66
 8050187:  mov ebx, 0x3
 805018c:  lea ecx, [esp+0x8]
 8050190:  int 0x80
 8050192:  mov ebx, edx
 8050194:  xchg esi, eax
 8050195:  call 80502b0
 805019a:  mov eax, esi
 805019c:  pop esi
 805019d:  cmp eax, 0x83
 80501a0:  jae 8051470
 80501a6:  ret
 80501a7:  nop
 80501a8:  nop
 80501a9:  nop
 80501aa:  nop
 80501ab:  nop
 80501ac:  nop
 80501ad:  nop
 80501ae:  nop
 80501af:  nop

080501b0 <__libc_send>:
 80501b0:  cmp DWORD PTR gs:0xc, 0x0
 80501b8:  jne 80501d8
 80501ba:  mov edx, ebx
 80501bc:  mov eax, 0x66
 80501c1:  mov ebx, 0x9
 80501c6:  lea ecx, [esp+0x4]
 80501ca:  int 0x80
 80501cc:  mov ebx, edx
 80501ce:  cmp eax, 0x83
 80501d1:  jae 8051470
 80501d7:  ret
 80501d8:  push esi
 80501d9:  call 80502f0
 80501de:  mov esi, eax
 80501e0:  mov edx, ebx
 80501e2:  mov eax, 0x66
 80501e7:  mov ebx, 0x9
 80501ec:  lea ecx, [esp+0x8]
 80501f0:  int 0x80
 80501f2:  mov ebx, edx
 80501f4:  xchg esi, eax
 80501f5:  call 80502b0
 80501fa:  mov eax, esi
 80501fc:  pop esi
 80501fd:  cmp eax, 0x83
 8050200:  jae 8051470
 8050206:  ret
 8050207:  nop
 8050208:  nop
 8050209:  nop
 805020a:  nop
 805020b:  nop
 805020c:  nop
 805020d:  nop
 805020e:  nop
 805020f:  nop

08050210 <__socket>:
 8050210:  mov edx, ebx
 8050212:  mov eax, 0x66
 8050217:  mov ebx, 0x1
 805021c:  lea ecx, [esp+0x4]
 8050220:  int 0x80
 8050222:  mov ebx, edx
 8050224:  cmp eax, 0x83
 8050227:  jae 8051470
 805022d:  ret
 805022e:  nop
 805022f:  nop

08050230 <__lll_lock_wait_private>:
 8050230:  push edx
 8050231:  push ebx
 8050232:  push esi
 8050233:  mov edx, 0x2
 8050238:  mov ebx, ecx
 805023a:  xor esi, esi
 805023c:  mov ecx, DWORD PTR gs:0x20
 8050243:  cmp eax, edx
 8050245:  jne 805024e
 8050247:  mov eax, 0xf0
 805024c:  int 0x80
 805024e:  mov eax, edx
 8050250:  xchg DWORD PTR [ebx], eax
 8050252:  test eax, eax
 8050254:  jne 8050247
 8050256:  pop esi
 8050257:  pop ebx
 8050258:  pop edx
 8050259:  ret
 805025a:  lea esi, [esi]

08050260 <__lll_unlock_wake_private>:
 8050260:  push ebx
 8050261:  push ecx
 8050262:  push edx
 8050263:  mov ebx, eax
 8050265:  mov DWORD PTR [eax], 0x0
 805026b:  mov ecx, DWORD PTR gs:0x20
 8050272:  or ecx, 0x1
 8050275:  mov edx, 0x1
 805027a:  mov eax, 0xf0
 805027f:  int 0x80
 8050281:  pop edx
 8050282:  pop ecx
 8050283:  pop ebx
 8050284:  ret
 8050285:  nop
 8050286:  nop
 8050287:  nop
 8050288:  nop
 8050289:  nop
 805028a:  nop
 805028b:  nop
 805028c:  nop
 805028d:  nop
 805028e:  nop
 805028f:  nop

08050290 <__libc_cleanup_routine>:
 8050290:  push ebp
 8050291:  mov ebp, esp
 8050293:  mov edx, DWORD PTR [ebp+0x8]
 8050296:  mov eax, DWORD PTR [edx+0x8]
 8050299:  test eax, eax
 805029b:  jne 80502a0
 805029d:  pop ebp
 805029e:  ret
 805029f:  nop
 80502a0:  mov eax, DWORD PTR [edx+0x4]
 80502a3:  mov DWORD PTR [ebp+0x8], eax
 80502a6:  mov ecx, DWORD PTR [edx]
 80502a8:  pop ebp
 80502a9:  jmp ecx
 80502ab:  nop
 80502ac:  lea esi, [esi]

080502b0 <__libc_disable_asynccancel>:
 80502b0:  push ebp
 80502b1:  test al, 0x2
 80502b3:  mov ebp, esp
 80502b5:  jne 80502d6
 80502b7:  mov edx, DWORD PTR gs:0x64
 80502be:  mov ecx, edx
 80502c0:  and ecx, 0xfd
 80502c3:  cmp ecx, edx
 80502c5:  je 80502d6
 80502c7:  mov eax, edx
 80502c9:  cmpxchg DWORD PTR gs:0x64, ecx
 80502d2:  cmp edx, eax
 80502d4:  jne 80502d8
 80502d6:  pop ebp
 80502d7:  ret
 80502d8:  mov edx, eax
 80502da:  lea esi, [esi]
 80502e0:  jmp 80502be
 80502e2:  lea esi, [esi]
 80502e9:  lea edi, [edi]

080502f0 <__libc_enable_asynccancel>:
 80502f0:  push ebp
 80502f1:  mov ebp, esp
 80502f3:  mov edx, DWORD PTR gs:0x64
 80502fa:  mov ecx, edx
 80502fc:  or ecx, 0x2
 80502ff:  test dl, 0x8
 8050302:  jne 8050317
 8050304:  mov eax, edx
 8050306:  cmpxchg DWORD PTR gs:0x64, ecx
 805030f:  cmp edx, eax
 8050311:  jne 805034a
 8050313:  mov eax, edx
 8050315:  pop ebp
 8050316:  ret
 8050317:  test dl, 0x11
 805031a:  jne 8050313
 805031c:  mov eax, edx
 805031e:  cmpxchg DWORD PTR gs:0x64, ecx
 8050327:  cmp edx, eax
 8050329:  jne 805034a
 805032b:  mov DWORD PTR gs:0x200, 0xffffffff
 8050336:  or DWORD PTR gs:0x64, 0x10
 805033f:  mov eax, gs:0x60
 8050345:  call 0
 805034a:  mov edx, eax
 805034c:  jmp 80502fa
 805034e:  nop
 805034f:  nop

08050350 <__linkin_atfork>:
 8050350:  push ebp
 8050351:  mov ebp, esp
 8050353:  mov ecx, DWORD PTR [ebp+0x8]
 8050356:  xchg ax, ax
 8050358:  mov edx, DWORD PTR ds:0x80d2eb8
 805035e:  mov eax, edx
 8050360:  cmp DWORD PTR gs:0xc, 0x0
 8050368:  je 805036b
 805036a:  cmpxchg DWORD PTR ds:0x80d2eb8, ecx
 8050372:  cmp edx, eax
 8050374:  jne 8050358
 8050376:  mov DWORD PTR [ecx], edx
 8050378:  pop ebp
 8050379:  ret
 805037a:  lea esi, [esi]

08050380 <__register_atfork>:
 8050380:  push ebp
 8050381:  xor eax, eax
 8050383:  mov ebp, esp
 8050385:  mov ecx, 0x1
 805038a:  push esi
 805038b:  push ebx
 805038c:  sub esp, 0x8
 805038f:  cmp DWORD PTR gs:0xc, 0x0
 8050397:  je 805039a
 8050399:  cmpxchg DWORD PTR ds:0x80d22c0, ecx
 80503a1:  jne 805048d
 80503a7:  mov esi, 0x80d22e0
 80503ac:  mov eax, esi
 80503ae:  xor ecx, ecx
 80503b0:  jmp 80503c7
 80503b2:  lea esi, [esi]
 80503b8:  add ecx, 0x1
 80503bb:  add eax, 0x1c
 80503be:  cmp ecx, 0x30
 80503c1:  je 8050450
 80503c7:  mov edx, DWORD PTR [eax+0x18]
 80503ca:  test edx, edx
 80503cc:  jne 80503b8
 80503ce:  imul eax, ecx, 0x1c
 80503d1:  lea eax, [esi+eax]
 80503d4:  mov ebx, eax
 80503d6:  add ebx, 0x4
 80503d9:  mov DWORD PTR [eax+0x18], 0x1
 80503e0:  mov DWORD PTR [eax+0x1c], 0x0
 80503e7:  je 805042d
 80503e9:  mov edx, DWORD PTR [ebp+0x8]
 80503ec:  mov DWORD PTR [eax+0x8], edx
 80503ef:  mov edx, DWORD PTR [ebp+0xc]
 80503f2:  mov DWORD PTR [eax+0xc], edx
 80503f5:  mov edx, DWORD PTR [ebp+0x10]
 80503f8:  mov DWORD PTR [eax+0x10], edx
 80503fb:  mov edx, DWORD PTR [ebp+0x14]
 80503fe:  mov DWORD PTR [eax+0x14], edx
 8050401:  lea esi, [esi]
 8050408:  mov edx, DWORD PTR ds:0x80d2eb8
 805040e:  mov eax, edx
 8050410:  cmp DWORD PTR gs:0xc, 0x0
 8050418:  je 805041b
 805041a:  cmpxchg DWORD PTR ds:0x80d2eb8, ebx
 8050422:  cmp edx, eax
 8050424:  jne 8050408
 8050426:  imul eax, ecx, 0x1c
 8050429:  mov DWORD PTR [esi+eax+0x4], edx
 805042d:  cmp DWORD PTR gs:0xc, 0x0
 8050435:  je 8050438
 8050437:  sub DWORD PTR ds:0x80d22c0, 0x1
 805043f:  jne 805049d
 8050441:  cmp ebx, 0x1
 8050444:  sbb eax, eax
 8050446:  add esp, 0x8
 8050449:  and eax, 0xc
 805044c:  pop ebx
 805044d:  pop esi
 805044e:  pop ebp
 805044f:  ret
 8050450:  mov esi, DWORD PTR [esi]
 8050452:  test esi, esi
 8050454:  jne 80503ac
 805045a:  mov DWORD PTR [esp+0x4], 0x544
 8050462:  xor ebx, ebx
 8050464:  mov DWORD PTR [esp], 0x1
 805046b:  call 804d3c0
 8050470:  test eax, eax
 8050472:  mov esi, eax
 8050474:  je 805042d
 8050476:  mov eax, ds:0x80d22e0
 805047b:  mov ecx, 0x2f
 8050480:  mov DWORD PTR [esi], eax
 8050482:  mov DWORD PTR ds:0x80d22e0, esi
 8050488:  jmp 80503ce

0805048d <_L_lock_123>:
 805048d:  lea ecx, ds:0x80d22c0
 8050493:  call 8050230
 8050498:  jmp 80503a7

0805049d <_L_unlock_217>:
 805049d:  lea eax, ds:0x80d22c0
 80504a3:  call 8050260
 80504a8:  jmp 8050441
 80504aa:  nop
 80504ab:  nop
 80504ac:  nop
 80504ad:  nop
 80504ae:  nop
 80504af:  nop

080504b0 <__backtrace>:
 80504b0:  push ebp
 80504b1:  mov eax, 0xffffffff
 80504b6:  mov ebp, esp
 80504b8:  push edi
 80504b9:  push esi
 80504ba:  mov esi, 0xffffffff
 80504bf:  push ebx
 80504c0:  sub esp, 0x1c
 80504c3:  mov edi, DWORD PTR [ebp+0xc]
 80504c6:  mov DWORD PTR [ebp-0x20], 0x0
 80504cd:  mov DWORD PTR [ebp-0x18], 0x0
 80504d4:  mov DWORD PTR [ebp-0x14], 0x0
 80504db:  test edi, edi
 80504dd:  mov DWORD PTR [ebp-0x10], 0x0
 80504e4:  mov DWORD PTR [ebp-0x1c], 0xffffffff
 80504eb:  jle 8050521
 80504ed:  mov eax, DWORD PTR [ebp+0x8]
 80504f0:  mov DWORD PTR [ebp-0x18], edi
 80504f3:  mov DWORD PTR [esp], 0x8050580
 80504fa:  mov DWORD PTR [ebp-0x20], eax
 80504fd:  lea eax, [ebp-0x20]
 8050500:  mov DWORD PTR [esp+0x4], eax
 8050504:  call 80ac020
 8050509:  mov esi, DWORD PTR [ebp-0x1c]
 805050c:  cmp esi, 0x1
 805050f:  jle 805051f
 8050511:  mov eax, DWORD PTR [ebp-0x20]
 8050514:  lea ecx, [esi-0x1]
 8050517:  mov eax, DWORD PTR [eax+esi*4-0x4]
 805051b:  test eax, eax
 805051d:  je 8050560
 805051f:  mov eax, esi
 8050521:  cmp edi, eax
 8050523:  mov ecx, esi
 8050525:  jle 8050560
 8050527:  mov eax, DWORD PTR [ebp+0x8]
 805052a:  mov edx, DWORD PTR [ebp-0x14]
 805052d:  mov ecx, DWORD PTR [ebp-0x1c]
 8050530:  lea ebx, [eax+esi*4]
 8050533:  jmp 805053a
 8050535:  lea esi, [esi]
 8050538:  mov esi, ecx
 805053a:  cmp DWORD PTR [ebp-0x10], edx
 805053d:  ja 8050560
 805053f:  cmp DWORD PTR ds:0x80d0cd4, edx
 8050545:  jb 8050560
 8050547:  test dl, 0x3
 805054a:  jne 8050560
 805054c:  mov eax, DWORD PTR [edx+0x4]
 805054f:  lea ecx, [esi+0x1]
 8050552:  mov edx, DWORD PTR [edx]
 8050554:  mov DWORD PTR [ebx], eax
 8050556:  add ebx, 0x4
 8050559:  cmp edi, ecx
 805055b:  jg 8050538
 805055d:  lea esi, [esi]
 8050560:  xor eax, eax
 8050562:  cmp ecx, 0xff
 8050565:  sete al
 8050568:  add esp, 0x1c
 805056b:  sub eax, 0x1
 805056e:  and ecx, eax
 8050570:  mov eax, ecx
 8050572:  pop ebx
 8050573:  pop esi
 8050574:  pop edi
 8050575:  pop ebp
 8050576:  ret
 8050577:  mov esi, esi
 8050579:  lea edi, [edi]

08050580 <backtrace_helper>:
 8050580:  push ebp
 8050581:  mov eax, 0xffffffff
 8050586:  mov ebp, esp
 8050588:  sub esp, 0x14
 805058b:  mov DWORD PTR [ebp-0x8], esi
 805058e:  mov esi, DWORD PTR [ebp+0xc]
 8050591:  mov DWORD PTR [ebp-0x4], edi
 8050594:  mov edi, DWORD PTR [ebp+0x8]
 8050597:  mov DWORD PTR [ebp-0xc], ebx
 805059a:  mov edx, DWORD PTR [esi+0x4]
 805059d:  cmp edx, 0xff
 80505a0:  je 80505b8
 80505a2:  lea ebx, [edx*4]
 80505a9:  add ebx, DWORD PTR [esi]
 80505ab:  mov DWORD PTR [esp], edi
 80505ae:  call 80aba70
 80505b3:  mov DWORD PTR [ebx], eax
 80505b5:  mov eax, DWORD PTR [esi+0x4]
 80505b8:  add eax, 0x1
 80505bb:  mov edx, 0x5
 80505c0:  cmp eax, DWORD PTR [esi+0x8]
 80505c3:  mov DWORD PTR [esi+0x4], eax
 80505c6:  je 80505e8
 80505c8:  mov DWORD PTR [esp+0x4], 0x5
 80505d0:  mov DWORD PTR [esp], edi
 80505d3:  call 80ab980
 80505d8:  mov DWORD PTR [esi+0xc], eax
 80505db:  mov DWORD PTR [esp], edi
 80505de:  call 80ab9f0
 80505e3:  xor edx, edx
 80505e5:  mov DWORD PTR [esi+0x10], eax
 80505e8:  mov ebx, DWORD PTR [ebp-0xc]
 80505eb:  mov eax, edx
 80505ed:  mov esi, DWORD PTR [ebp-0x8]
 80505f0:  mov edi, DWORD PTR [ebp-0x4]
 80505f3:  mov esp, ebp
 80505f5:  pop ebp
 80505f6:  ret
 80505f7:  nop
 80505f8:  nop
 80505f9:  nop
 80505fa:  nop
 80505fb:  nop
 80505fc:  nop
 80505fd:  nop
 80505fe:  nop
 80505ff:  nop

08050600 <__backtrace_symbols_fd>:
 8050600:  push ebp
 8050601:  mov ebp, esp
 8050603:  push edi
 8050604:  push esi
 8050605:  push ebx
 8050606:  sub esp, 0x84
 805060c:  mov eax, DWORD PTR [ebp+0xc]
 805060f:  test eax, eax
 8050611:  jle 80507a8
 8050617:  lea eax, [ebp-0xc]
 805061a:  lea edx, [ebp-0x14]
 805061d:  mov DWORD PTR [ebp-0x80], eax
 8050620:  mov DWORD PTR [ebp-0x78], 0x0
 8050627:  mov DWORD PTR [ebp-0x7c], edx
 805062a:  jmp 80506bc
 805062f:  nop
 8050630:  xor eax, eax
 8050632:  mov esi, 0x1
 8050637:  mov ebx, 0x2
 805063c:  mov edi, 0x3
 8050641:  lea ecx, [ebp-0xc]
 8050644:  mov edx, DWORD PTR [ebp-0x78]
 8050647:  mov DWORD PTR [esp+0x4], ecx
 805064b:  mov ecx, DWORD PTR [ebp+0x8]
 805064e:  mov DWORD PTR [ebp+eax*8-0x74], 0x80b0030
 8050656:  mov DWORD PTR [ebp+eax*8-0x70], 0x3
 805065e:  mov DWORD PTR [esp+0xc], 0x0
 8050666:  mov DWORD PTR [esp+0x8], 0x10
 805066e:  mov eax, DWORD PTR [ecx+edx*4]
 8050671:  mov DWORD PTR [esp], eax
 8050674:  call 8057700
 8050679:  mov edx, DWORD PTR [ebp-0x80]
 805067c:  lea ecx, [ebp-0x74]
 805067f:  mov DWORD PTR [esp+0x8], edi
 8050683:  mov DWORD PTR [esp+0x4], ecx
 8050687:  sub edx, eax
 8050689:  mov DWORD PTR [ebp+esi*8-0x74], eax
 805068d:  mov DWORD PTR [ebp+esi*8-0x70], edx
 8050691:  mov DWORD PTR [ebp+ebx*8-0x74], 0x80b44ab
 8050699:  mov DWORD PTR [ebp+ebx*8-0x70], 0x2
 80506a1:  mov ebx, DWORD PTR [ebp+0x10]
 80506a4:  mov DWORD PTR [esp], ebx
 80506a7:  call 8073540
 80506ac:  add DWORD PTR [ebp-0x78], 0x1
 80506b0:  mov eax, DWORD PTR [ebp-0x78]
 80506b3:  cmp DWORD PTR [ebp+0xc], eax
 80506b6:  jle 80507a8
 80506bc:  mov ecx, DWORD PTR [ebp-0x78]
 80506bf:  lea edx, [ebp-0x2c]
 80506c2:  mov ebx, DWORD PTR [ebp+0x8]
 80506c5:  mov eax, DWORD PTR [ebx+ecx*4]
 80506c8:  xor ecx, ecx
 80506ca:  mov DWORD PTR [esp], 0x0
 80506d1:  call 8050f50
 80506d6:  sub esp, 0x4
 80506d9:  test eax, eax
 80506db:  je 8050630
 80506e1:  mov eax, DWORD PTR [ebp-0x2c]
 80506e4:  test eax, eax
 80506e6:  je 8050630
 80506ec:  cmp BYTE PTR [eax], 0x0
 80506ef:  je 8050630
 80506f5:  mov DWORD PTR [ebp-0x74], eax
 80506f8:  mov DWORD PTR [esp], eax
 80506fb:  call 804eea0
 8050700:  mov DWORD PTR [ebp-0x70], eax
 8050703:  mov eax, DWORD PTR [ebp-0x24]
 8050706:  test eax, eax
 8050708:  je 80507c0
 805070e:  mov DWORD PTR [ebp-0x6c], 0x80b0026
 8050715:  mov DWORD PTR [ebp-0x68], 0x1
 805071c:  mov DWORD PTR [ebp-0x64], eax
 805071f:  mov DWORD PTR [esp], eax
 8050722:  call 804eea0
 8050727:  mov edx, DWORD PTR [ebp-0x78]
 805072a:  mov ecx, DWORD PTR [ebp+0x8]
 805072d:  mov DWORD PTR [ebp-0x60], eax
 8050730:  mov eax, DWORD PTR [ebp-0x20]
 8050733:  cmp DWORD PTR [ecx+edx*4], eax
 8050736:  jae 80507b0
 8050738:  mov ebx, DWORD PTR [ebp+0x8]
 805073b:  mov ecx, edx
 805073d:  mov edx, eax
 805073f:  mov DWORD PTR [ebp-0x5c], 0x80b002c
 8050746:  sub edx, DWORD PTR [ebx+ecx*4]
 8050749:  lea eax, [ebp-0x14]
 805074c:  mov esi, 0x7
 8050751:  mov DWORD PTR [esp], edx
 8050754:  mov ebx, 0x8
 8050759:  mov edi, 0x9
 805075e:  mov DWORD PTR [ebp-0x58], 0x3
 8050765:  mov DWORD PTR [esp+0xc], 0x0
 805076d:  mov DWORD PTR [esp+0x8], 0x10
 8050775:  mov DWORD PTR [esp+0x4], eax
 8050779:  call 8057700
 805077e:  mov edx, DWORD PTR [ebp-0x7c]
 8050781:  mov DWORD PTR [ebp-0x4c], 0x80b4faf
 8050788:  mov DWORD PTR [ebp-0x48], 0x1
 805078f:  sub edx, eax
 8050791:  mov DWORD PTR [ebp-0x54], eax
 8050794:  mov eax, 0x6
 8050799:  mov DWORD PTR [ebp-0x50], edx
 805079c:  jmp 8050641
 80507a1:  lea esi, [esi]
 80507a8:  lea esp, [ebp-0xc]
 80507ab:  pop ebx
 80507ac:  pop esi
 80507ad:  pop edi
 80507ae:  pop ebp
 80507af:  ret
 80507b0:  mov DWORD PTR [ebp-0x5c], 0x80b0028
 80507b7:  mov edx, DWORD PTR [ecx+edx*4]
 80507ba:  sub edx, eax
 80507bc:  jmp 8050749
 80507be:  xchg ax, ax
 80507c0:  mov al, 0x1
 80507c2:  mov esi, 0x2
 80507c7:  mov ebx, 0x3
 80507cc:  mov edi, 0x4
 80507d1:  jmp 8050641
 80507d6:  nop
 80507d7:  nop
 80507d8:  nop
 80507d9:  nop
 80507da:  nop
 80507db:  nop
 80507dc:  nop
 80507dd:  nop
 80507de:  nop
 80507df:  nop

080507e0 <___vfprintf_chk>:
 80507e0:  push ebp
 80507e1:  mov ebp, esp
 80507e3:  sub esp, 0x20
 80507e6:  mov DWORD PTR [ebp-0xc], ebx
 80507e9:  mov ebx, DWORD PTR [ebp+0x8]
 80507ec:  mov DWORD PTR [ebp-0x4], edi
 80507ef:  mov edi, DWORD PTR [ebp+0xc]
 80507f2:  mov DWORD PTR [ebp-0x8], esi
 80507f5:  cmp WORD PTR [ebx], 0x0
 80507f9:  js 8050838
 80507fb:  mov eax, DWORD PTR [ebx+0x48]
 80507fe:  mov esi, DWORD PTR gs:0x8
 8050805:  cmp DWORD PTR [eax+0x8], esi
 8050808:  je 8050834
 805080a:  mov edx, eax
 805080c:  mov ecx, 0x1
 8050811:  mov DWORD PTR [ebp-0x14], 0x0
 8050818:  xor eax, eax
 805081a:  cmp DWORD PTR gs:0xc, 0x0
 8050822:  je 8050825
 8050824:  cmpxchg DWORD PTR [edx], ecx
 8050828:  jne 80508e2
 805082e:  mov eax, DWORD PTR [ebx+0x48]
 8050831:  mov DWORD PTR [eax+0x8], esi
 8050834:  add DWORD PTR [eax+0x4], 0x1
 8050838:  test edi, edi
 805083a:  jle 8050840
 805083c:  or DWORD PTR [ebx+0x3c], 0x4
 8050840:  mov eax, DWORD PTR [ebp+0x14]
 8050843:  mov DWORD PTR [esp], ebx
 8050846:  mov DWORD PTR [esp+0x8], eax
 805084a:  mov eax, DWORD PTR [ebp+0x10]
 805084d:  mov DWORD PTR [esp+0x4], eax
 8050851:  call 8058740
 8050856:  test edi, edi
 8050858:  mov ecx, eax
 805085a:  jle 8050860
 805085c:  and DWORD PTR [ebx+0x3c], 0xfb
 8050860:  and DWORD PTR [ebx+0x3c], 0xeb
 8050864:  cmp WORD PTR [ebx], 0x0
 8050868:  js 8050898
 805086a:  mov edx, DWORD PTR [ebx+0x48]
 805086d:  mov eax, DWORD PTR [edx+0x4]
 8050870:  sub eax, 0x1
 8050873:  test eax, eax
 8050875:  mov DWORD PTR [edx+0x4], eax
 8050878:  jne 8050898
 805087a:  mov DWORD PTR [edx+0x8], 0x0
 8050881:  cmp DWORD PTR gs:0xc, 0x0
 8050889:  je 805088c
 805088b:  sub DWORD PTR [edx], 0x1
 805088f:  jne 80508ee
 8050891:  lea esi, [esi]
 8050898:  mov ebx, DWORD PTR [ebp-0xc]
 805089b:  mov eax, ecx
 805089d:  mov esi, DWORD PTR [ebp-0x8]
 80508a0:  mov edi, DWORD PTR [ebp-0x4]
 80508a3:  mov esp, ebp
 80508a5:  pop ebp
 80508a6:  ret
 80508a7:  and DWORD PTR [ebx+0x3c], 0xeb
 80508ab:  mov ecx, eax
 80508ad:  cmp WORD PTR [ebx], 0x0
 80508b1:  js 80508da
 80508b3:  mov edx, DWORD PTR [ebx+0x48]
 80508b6:  mov eax, DWORD PTR [edx+0x4]
 80508b9:  sub eax, 0x1
 80508bc:  test eax, eax
 80508be:  mov DWORD PTR [edx+0x4], eax
 80508c1:  jne 80508da
 80508c3:  mov DWORD PTR [edx+0x8], 0x0
 80508ca:  cmp DWORD PTR gs:0xc, 0x0
 80508d2:  je 80508d5
 80508d4:  sub DWORD PTR [edx], 0x1
 80508d8:  jne 80508f7
 80508da:  mov DWORD PTR [esp], ecx
 80508dd:  call 80abe50

080508e2 <_L_lock_41>:
 80508e2:  lea ecx, [edx]
 80508e4:  call 8050230
 80508e9:  jmp 805082e

080508ee <_L_unlock_94>:
 80508ee:  lea eax, [edx]
 80508f0:  call 8050260
 80508f5:  jmp 8050891

080508f7 <_L_unlock_142>:
 80508f7:  lea eax, [edx]
 80508f9:  call 8050260
 80508fe:  jmp 80508da

08050900 <_dl_sysinfo_int80>:
 8050900:  int 0x80
 8050902:  ret
 8050903:  lea esi, [esi]
 8050909:  lea edi, [edi]

08050910 <_dl_aux_init>:
 8050910:  push ebp
 8050911:  mov ebp, esp
 8050913:  push edi
 8050914:  push esi
 8050915:  push ebx
 8050916:  sub esp, 0x2c
 8050919:  mov edx, DWORD PTR [eax]
 805091b:  test edx, edx
 805091d:  je 8050a2e
 8050923:  mov ecx, DWORD PTR ds:0x80d2e64
 8050929:  mov ebx, DWORD PTR ds:0x80d0cd8
 805092f:  mov esi, DWORD PTR ds:0x80d2e08
 8050935:  mov edi, DWORD PTR ds:0x80d0d78
 805093b:  mov DWORD PTR [ebp-0x34], ecx
 805093e:  mov ecx, DWORD PTR ds:0x80d2828
 8050944:  mov DWORD PTR [ebp-0x30], ebx
 8050947:  mov ebx, DWORD PTR ds:0x80d282c
 805094d:  mov DWORD PTR [ebp-0x2c], esi
 8050950:  mov esi, DWORD PTR ds:0x80d2df4
 8050956:  mov DWORD PTR [ebp-0x28], edi
 8050959:  mov edi, DWORD PTR ds:0x80d2e00
 805095f:  mov DWORD PTR [ebp-0x24], ecx
 8050962:  mov ecx, DWORD PTR ds:0x80d2e2c
 8050968:  mov DWORD PTR [ebp-0x20], ebx
 805096b:  mov ebx, DWORD PTR ds:0x80d2e14
 8050971:  mov DWORD PTR [ebp-0x18], esi
 8050974:  mov DWORD PTR [ebp-0x14], edi
 8050977:  mov DWORD PTR [ebp-0x10], ecx
 805097a:  xor ecx, ecx
 805097c:  mov DWORD PTR [ebp-0x1c], ebx
 805097f:  xor ebx, ebx
 8050981:  mov DWORD PTR [ebp-0x38], 0x0
 8050988:  sub edx, 0x3
 805098b:  cmp edx, 0x1e
 805098e:  ja 80509a0
 8050990:  jmp DWORD PTR [edx*4+0x80b0040]
 8050997:  nop
 8050998:  mov esi, DWORD PTR [eax+0x4]
 805099b:  mov DWORD PTR [ebp-0x10], esi
 805099e:  xchg ax, ax
 80509a0:  add eax, 0x8
 80509a3:  mov edx, DWORD PTR [eax]
 80509a5:  test edx, edx
 80509a7:  jne 8050988
 80509a9:  lea esi, [esi]
 80509b0:  mov esi, DWORD PTR [ebp-0x34]
 80509b3:  cmp ecx, 0xf
 80509b6:  mov edi, DWORD PTR [ebp-0x30]
 80509b9:  mov eax, DWORD PTR [ebp-0x2c]
 80509bc:  mov edx, DWORD PTR [ebp-0x28]
 80509bf:  mov DWORD PTR ds:0x80d2e64, esi
 80509c5:  mov esi, DWORD PTR [ebp-0x24]
 80509c8:  mov DWORD PTR ds:0x80d0cd8, edi
 80509ce:  mov edi, DWORD PTR [ebp-0x20]
 80509d1:  mov ds:0x80d2e08, eax
 80509d6:  mov eax, DWORD PTR [ebp-0x18]
 80509d9:  mov DWORD PTR ds:0x80d0d78, edx
 80509df:  mov edx, DWORD PTR [ebp-0x14]
 80509e2:  mov DWORD PTR ds:0x80d2828, esi
 80509e8:  mov esi, DWORD PTR [ebp-0x10]
 80509eb:  mov DWORD PTR ds:0x80d282c, edi
 80509f1:  mov edi, DWORD PTR [ebp-0x1c]
 80509f4:  mov ds:0x80d2df4, eax
 80509f9:  mov DWORD PTR ds:0x80d2e00, edx
 80509ff:  mov DWORD PTR ds:0x80d2e2c, esi
 8050a05:  mov DWORD PTR ds:0x80d2e14, edi
 8050a0b:  jne 8050a2e
 8050a0d:  mov eax, DWORD PTR [ebp-0x38]
 8050a10:  test ebx, ebx
 8050a12:  setne dl
 8050a15:  mov DWORD PTR ds:0x80d2e64, 0x1
 8050a1f:  test eax, eax
 8050a21:  setne al
 8050a24:  or eax, edx
 8050a26:  and eax, 0x1
 8050a29:  mov ds:0x80d0cd8, eax
 8050a2e:  add esp, 0x2c
 8050a31:  pop ebx
 8050a32:  pop esi
 8050a33:  pop edi
 8050a34:  pop ebp
 8050a35:  ret
 8050a36:  xchg ax, ax
 8050a38:  mov edx, DWORD PTR [eax+0x4]
 8050a3b:  add eax, 0x8
 8050a3e:  mov DWORD PTR [ebp-0x2c], edx
 8050a41:  mov edx, DWORD PTR [eax]
 8050a43:  test edx, edx
 8050a45:  jne 8050988
 8050a4b:  jmp 80509b0
 8050a50:  mov edi, DWORD PTR [eax+0x4]
 8050a53:  add eax, 0x8
 8050a56:  mov edx, DWORD PTR [eax]
 8050a58:  mov DWORD PTR [ebp-0x28], edi
 8050a5b:  test edx, edx
 8050a5d:  jne 8050988
 8050a63:  jmp 80509b0
 8050a68:  mov edx, DWORD PTR [eax+0x4]
 8050a6b:  add eax, 0x8
 8050a6e:  mov ecx, 0xffffffff
 8050a73:  mov DWORD PTR [ebp-0x34], 0x1
 8050a7a:  mov DWORD PTR [ebp-0x30], edx
 8050a7d:  mov edx, DWORD PTR [eax]
 8050a7f:  test edx, edx
 8050a81:  jne 8050988
 8050a87:  jmp 80509b0
 8050a8c:  lea esi, [esi]
 8050a90:  mov edi, DWORD PTR [eax+0x4]
 8050a93:  add eax, 0x8
 8050a96:  mov edx, DWORD PTR [eax]
 8050a98:  mov DWORD PTR [ebp-0x14], edi
 8050a9b:  test edx, edx
 8050a9d:  jne 8050988
 8050aa3:  jmp 80509b0
 8050aa8:  mov esi, DWORD PTR [eax+0x4]
 8050aab:  add eax, 0x8
 8050aae:  xor edi, edi
 8050ab0:  mov edx, DWORD PTR [eax]
 8050ab2:  mov DWORD PTR [ebp-0x20], edi
 8050ab5:  mov DWORD PTR [ebp-0x24], esi
 8050ab8:  test edx, edx
 8050aba:  jne 8050988
 8050ac0:  jmp 80509b0
 8050ac5:  lea esi, [esi]
 8050ac8:  mov edi, DWORD PTR [eax+0x4]
 8050acb:  add eax, 0x8
 8050ace:  or ecx, 0x8
 8050ad1:  mov edx, DWORD PTR [eax]
 8050ad3:  xor DWORD PTR [ebp-0x38], edi
 8050ad6:  test edx, edx
 8050ad8:  jne 8050988
 8050ade:  jmp 80509b0
 8050ae3:  nop
 8050ae4:  lea esi, [esi]
 8050ae8:  mov esi, DWORD PTR [eax+0x4]
 8050aeb:  add eax, 0x8
 8050aee:  or ecx, 0x4
 8050af1:  mov edx, DWORD PTR [eax]
 8050af3:  xor DWORD PTR [ebp-0x38], esi
 8050af6:  test edx, edx
 8050af8:  jne 8050988
 8050afe:  jmp 80509b0
 8050b03:  nop
 8050b04:  lea esi, [esi]
 8050b08:  xor ebx, DWORD PTR [eax+0x4]
 8050b0b:  add eax, 0x8
 8050b0e:  mov edx, DWORD PTR [eax]
 8050b10:  or ecx, 0x2
 8050b13:  test edx, edx
 8050b15:  jne 8050988
 8050b1b:  jmp 80509b0
 8050b20:  xor ebx, DWORD PTR [eax+0x4]
 8050b23:  add eax, 0x8
 8050b26:  mov edx, DWORD PTR [eax]
 8050b28:  or ecx, 0x1
 8050b2b:  test edx, edx
 8050b2d:  jne 8050988
 8050b33:  jmp 80509b0
 8050b38:  mov esi, DWORD PTR [eax+0x4]
 8050b3b:  add eax, 0x8
 8050b3e:  mov edx, DWORD PTR [eax]
 8050b40:  mov DWORD PTR [ebp-0x1c], esi
 8050b43:  test edx, edx
 8050b45:  jne 8050988
 8050b4b:  jmp 80509b0
 8050b50:  mov edx, DWORD PTR [eax+0x4]
 8050b53:  add eax, 0x8
 8050b56:  mov DWORD PTR [ebp-0x18], edx
 8050b59:  mov edx, DWORD PTR [eax]
 8050b5b:  test edx, edx
 8050b5d:  jne 8050988
 8050b63:  jmp 80509b0
 8050b68:  nop
 8050b69:  lea esi, [esi]

08050b70 <_dl_important_hwcaps>:
 8050b70:  push ebp
 8050b71:  mov eax, 0x80d2834
 8050b76:  mov ebp, esp
 8050b78:  mov DWORD PTR ds:0x80d2838, 0x0
 8050b82:  mov DWORD PTR ds:0x80d2834, 0x80d2830
 8050b8c:  mov DWORD PTR [ecx], 0x1
 8050b92:  pop ebp
 8050b93:  ret 0x4
 8050b96:  lea esi, [esi]
 8050b99:  lea edi, [edi]

08050ba0 <_dl_non_dynamic_init>:
 8050ba0:  push ebp
 8050ba1:  mov ebp, esp
 8050ba3:  push edi
 8050ba4:  push esi
 8050ba5:  push ebx
 8050ba6:  sub esp, 0x14
 8050ba9:  mov ebx, DWORD PTR ds:0x80d2e2c
 8050baf:  test ebx, ebx
 8050bb1:  je 8050eb0
 8050bb7:  mov DWORD PTR [esp], 0x80b032a
 8050bbe:  call 80562f0
 8050bc3:  mov edx, 0x80c2c93
 8050bc8:  test eax, eax
 8050bca:  je 8050bce
 8050bcc:  mov edx, eax
 8050bce:  xor eax, eax
 8050bd0:  cmp BYTE PTR [edx], 0x0
 8050bd3:  mov DWORD PTR [esp], 0x80b0332
 8050bda:  setne al
 8050bdd:  mov ds:0x80d2e10, eax
 8050be2:  call 80562f0
 8050be7:  call 8075740
 8050bec:  mov DWORD PTR [esp], 0x80b0342
 8050bf3:  call 80562f0
 8050bf8:  mov edx, 0x80c2c93
 8050bfd:  test eax, eax
 8050bff:  je 8050c03
 8050c01:  mov edx, eax
 8050c03:  xor eax, eax
 8050c05:  cmp BYTE PTR [edx], 0x0
 8050c08:  mov DWORD PTR [esp], 0x80b034e
 8050c0f:  sete al
 8050c12:  mov ds:0x80d2df0, eax
 8050c17:  call 80562f0
 8050c1c:  mov edx, 0x80c2c93
 8050c21:  test eax, eax
 8050c23:  je 8050c27
 8050c25:  mov edx, eax
 8050c27:  xor eax, eax
 8050c29:  cmp BYTE PTR [edx], 0x0
 8050c2c:  mov DWORD PTR [esp], 0x80b035a
 8050c33:  setne al
 8050c36:  mov ds:0x80d2de8, eax
 8050c3b:  call 80562f0
 8050c40:  mov edx, 0x80c2c93
 8050c45:  test eax, eax
 8050c47:  je 8050c4b
 8050c49:  mov edx, eax
 8050c4b:  xor eax, eax
 8050c4d:  cmp BYTE PTR [edx], 0x0
 8050c50:  mov DWORD PTR [esp], 0x80b036a
 8050c57:  sete al
 8050c5a:  mov ds:0x80d2e04, eax
 8050c5f:  call 80562f0
 8050c64:  test eax, eax
 8050c66:  mov ds:0x80d2dc0, eax
 8050c6b:  je 8050e38
 8050c71:  cmp BYTE PTR [eax], 0x0
 8050c74:  je 8050e38
 8050c7a:  mov edx, DWORD PTR ds:0x80d0cd8
 8050c80:  test edx, edx
 8050c82:  je 8050cd7
 8050c84:  mov eax, 0x80b032a
 8050c89:  cmp eax, 0x80b0200
 8050c8e:  jbe 8050cbb
 8050c90:  mov ebx, 0x80b0200
 8050c95:  lea esi, [esi]
 8050c98:  mov DWORD PTR [esp], ebx
 8050c9b:  call 8056460
 8050ca0:  mov DWORD PTR [esp], ebx
 8050ca3:  mov DWORD PTR [esp+0x4], 0x0
 8050cab:  call 806c400
 8050cb0:  lea ebx, [eax+0x1]
 8050cb3:  cmp ebx, 0x80b032a
 8050cb9:  jb 8050c98
 8050cbb:  mov DWORD PTR [esp+0x4], 0x0
 8050cc3:  mov DWORD PTR [esp], 0x80b037c
 8050cca:  call 8073190
 8050ccf:  test eax, eax
 8050cd1:  jne 8050ec0
 8050cd7:  mov eax, ds:0x80d2dec
 8050cdc:  test eax, eax
 8050cde:  je 8050ce9
 8050ce0:  cmp BYTE PTR [eax], 0x0
 8050ce3:  je 8050e58
 8050ce9:  mov DWORD PTR [esp], 0x80b039a
 8050cf0:  call 80562f0
 8050cf5:  test eax, eax
 8050cf7:  mov ebx, eax
 8050cf9:  je 8050dd6
 8050cff:  lea edi, [ebp-0x10]
 8050d02:  mov DWORD PTR [esp+0xc], 0x0
 8050d0a:  mov DWORD PTR [esp+0x8], 0x0
 8050d12:  mov DWORD PTR [esp+0x4], edi
 8050d16:  mov DWORD PTR [esp], eax
 8050d19:  call 8056ac0
 8050d1e:  cmp eax, 0xfe
 8050d23:  ja 8050dd6
 8050d29:  mov edx, DWORD PTR [ebp-0x10]
 8050d2c:  cmp ebx, edx
 8050d2e:  je 8050dd6
 8050d34:  movzx ecx, BYTE PTR [edx]
 8050d37:  xor ebx, ebx
 8050d39:  xor esi, esi
 8050d3b:  test cl, cl
 8050d3d:  je 8050e78
 8050d43:  cmp cl, 0x2e
 8050d46:  jne 8050dd6
 8050d4c:  lea ebx, [edx+0x1]
 8050d4f:  mov esi, eax
 8050d51:  mov DWORD PTR [esp+0xc], 0x0
 8050d59:  shl esi, 0x10
 8050d5c:  mov DWORD PTR [esp+0x8], 0x0
 8050d64:  mov DWORD PTR [esp+0x4], edi
 8050d68:  mov DWORD PTR [esp], ebx
 8050d6b:  call 8056ac0
 8050d70:  cmp eax, 0xfe
 8050d75:  ja 8050dd6
 8050d77:  mov edx, DWORD PTR [ebp-0x10]
 8050d7a:  cmp ebx, edx
 8050d7c:  je 8050dd6
 8050d7e:  movzx ecx, BYTE PTR [edx]
 8050d81:  mov ebx, 0x1
 8050d86:  test cl, cl
 8050d88:  je 8050e78
 8050d8e:  cmp cl, 0x2e
 8050d91:  jne 8050dd6
 8050d93:  mov ebx, eax
 8050d95:  shl ebx, 0x8
 8050d98:  or ebx, esi
 8050d9a:  lea esi, [edx+0x1]
 8050d9d:  mov DWORD PTR [esp+0xc], 0x0
 8050da5:  mov DWORD PTR [esp+0x8], 0x0
 8050dad:  mov DWORD PTR [esp+0x4], edi
 8050db1:  mov DWORD PTR [esp], esi
 8050db4:  call 8056ac0
 8050db9:  cmp eax, 0xfe
 8050dbe:  ja 8050dd6
 8050dc0:  cmp DWORD PTR [ebp-0x10], esi
 8050dc3:  je 8050dd6
 8050dc5:  or eax, ebx
 8050dc7:  test eax, eax
 8050dc9:  lea esi, [esi]
 8050dd0:  jne 8050e90
 8050dd6:  mov eax, ds:0x80d2dec
 8050ddb:  test eax, eax
 8050ddd:  je 8050dec
 8050ddf:  mov DWORD PTR [esp], eax
 8050de2:  call 804eea0
 8050de7:  mov ds:0x80d2dcc, eax
 8050dec:  mov ebx, DWORD PTR ds:0x80d2df4
 8050df2:  test ebx, ebx
 8050df4:  je 8050e2d
 8050df6:  mov esi, DWORD PTR ds:0x80d2e14
 8050dfc:  test esi, esi
 8050dfe:  je 8050e2d
 8050e00:  cmp DWORD PTR [ebx], 0x6474e551
 8050e06:  je 8050ea0
 8050e0c:  lea edx, [ebx+0x20]
 8050e0f:  xor ecx, ecx
 8050e11:  jmp 8050e26
 8050e13:  nop
 8050e14:  lea esi, [esi]
 8050e18:  mov eax, DWORD PTR [edx]
 8050e1a:  mov ebx, edx
 8050e1c:  add edx, 0x20
 8050e1f:  cmp eax, 0x6474e551
 8050e24:  je 8050ea0
 8050e26:  add ecx, 0x1
 8050e29:  cmp ecx, esi
 8050e2b:  jb 8050e18
 8050e2d:  add esp, 0x14
 8050e30:  pop ebx
 8050e31:  pop esi
 8050e32:  pop edi
 8050e33:  pop ebp
 8050e34:  ret
 8050e35:  lea esi, [esi]
 8050e38:  mov ecx, DWORD PTR ds:0x80d0cd8
 8050e3e:  mov eax, 0x80b00c5
 8050e43:  test ecx, ecx
 8050e45:  je 8050e68
 8050e47:  mov ds:0x80d2dc0, eax
 8050e4c:  jmp 8050c7a
 8050e51:  lea esi, [esi]
 8050e58:  mov DWORD PTR ds:0x80d2dec, 0x0
 8050e62:  jmp 8050ce9
 8050e67:  nop
 8050e68:  mov eax, 0x80b00bc
 8050e6d:  mov ds:0x80d2dc0, eax
 8050e72:  jmp 8050c7a
 8050e77:  nop
 8050e78:  mov ecx, 0x2
 8050e7d:  sub ecx, ebx
 8050e7f:  shl ecx, 0x3
 8050e82:  shl eax, cl
 8050e84:  or eax, esi
 8050e86:  test eax, eax
 8050e88:  je 8050dd6
 8050e8e:  xchg ax, ax
 8050e90:  mov ds:0x80d2e24, eax
 8050e95:  jmp 8050dd6
 8050e9a:  lea esi, [esi]
 8050ea0:  mov eax, DWORD PTR [ebx+0x18]
 8050ea3:  mov ds:0x80d0d70, eax
 8050ea8:  add esp, 0x14
 8050eab:  pop ebx
 8050eac:  pop esi
 8050ead:  pop edi
 8050eae:  pop ebp
 8050eaf:  ret
 8050eb0:  call 804f4a0
 8050eb5:  mov ds:0x80d2e2c, eax
 8050eba:  jmp 8050bb7
 8050ebf:  nop
 8050ec0:  mov DWORD PTR [esp], 0x80b038c
 8050ec7:  call 8056460
 8050ecc:  jmp 8050cd7
 8050ed1:  nop
 8050ed2:  nop
 8050ed3:  nop
 8050ed4:  nop
 8050ed5:  nop
 8050ed6:  nop
 8050ed7:  nop
 8050ed8:  nop
 8050ed9:  nop
 8050eda:  nop
 8050edb:  nop
 8050edc:  nop
 8050edd:  nop
 8050ede:  nop
 8050edf:  nop

08050ee0 <_dl_addr_inside_object>:
 8050ee0:  push ebp
 8050ee1:  mov ebp, esp
 8050ee3:  push edi
 8050ee4:  push esi
 8050ee5:  mov esi, eax
 8050ee7:  push ebx
 8050ee8:  sub esp, 0x4
 8050eeb:  mov eax, DWORD PTR [eax]
 8050eed:  mov DWORD PTR [ebp-0x10], edx
 8050ef0:  xor edx, edx
 8050ef2:  sub DWORD PTR [ebp-0x10], eax
 8050ef5:  movzx eax, WORD PTR [esi+0x158]
 8050efc:  sub eax, 0x1
 8050eff:  mov ebx, eax
 8050f01:  mov edi, eax
 8050f03:  shl ebx, 0x5
 8050f06:  jmp 8050f0e
 8050f08:  add edx, 0x1
 8050f0b:  sub ebx, 0x20
 8050f0e:  mov eax, edi
 8050f10:  sub eax, edx
 8050f12:  add eax, 0x1
 8050f15:  je 8050f40
 8050f17:  mov ecx, ebx
 8050f19:  add ecx, DWORD PTR [esi+0x150]
 8050f1f:  cmp DWORD PTR [ecx], 0x1
 8050f22:  jne 8050f08
 8050f24:  mov eax, DWORD PTR [ebp-0x10]
 8050f27:  sub eax, DWORD PTR [ecx+0x8]
 8050f2a:  cmp eax, DWORD PTR [ecx+0x14]
 8050f2d:  jae 8050f08
 8050f2f:  add esp, 0x4
 8050f32:  mov eax, 0x1
 8050f37:  pop ebx
 8050f38:  pop esi
 8050f39:  pop edi
 8050f3a:  pop ebp
 8050f3b:  ret
 8050f3c:  lea esi, [esi]
 8050f40:  add esp, 0x4
 8050f43:  xor eax, eax
 8050f45:  pop ebx
 8050f46:  pop esi
 8050f47:  pop edi
 8050f48:  pop ebp
 8050f49:  ret
 8050f4a:  lea esi, [esi]

08050f50 <_dl_addr>:
 8050f50:  push ebp
 8050f51:  mov ebp, esp
 8050f53:  push edi
 8050f54:  push esi
 8050f55:  push ebx
 8050f56:  sub esp, 0x38
 8050f59:  mov DWORD PTR [ebp-0x38], eax
 8050f5c:  mov eax, 0x0
 8050f61:  test eax, eax
 8050f63:  mov DWORD PTR [ebp-0x3c], edx
 8050f66:  mov DWORD PTR [ebp-0x40], ecx
 8050f69:  je 8050f77
 8050f6b:  mov DWORD PTR [esp], 0x80d0d7c
 8050f72:  call 0
 8050f77:  mov edi, DWORD PTR ds:0x80d2e40
 8050f7d:  test edi, edi
 8050f7f:  je 805114b
 8050f85:  lea esi, [esi]
 8050f88:  mov eax, DWORD PTR [ebp-0x38]
 8050f8b:  cmp eax, DWORD PTR [edi+0x1ac]
 8050f91:  jb 8051140
 8050f97:  cmp eax, DWORD PTR [edi+0x1b0]
 8050f9d:  jae 8051140
 8050fa3:  cmp BYTE PTR [edi+0x195], 0x0
 8050faa:  js 8050ff3
 8050fac:  sub eax, DWORD PTR [edi]
 8050fae:  xor ecx, ecx
 8050fb0:  mov DWORD PTR [ebp-0x1c], eax
 8050fb3:  movzx eax, WORD PTR [edi+0x158]
 8050fba:  sub eax, 0x1
 8050fbd:  mov ebx, eax
 8050fbf:  mov esi, eax
 8050fc1:  shl ebx, 0x5
 8050fc4:  jmp 8050fce
 8050fc6:  xchg ax, ax
 8050fc8:  add ecx, 0x1
 8050fcb:  sub ebx, 0x20
 8050fce:  mov eax, esi
 8050fd0:  sub eax, ecx
 8050fd2:  add eax, 0x1
 8050fd5:  je 8051140
 8050fdb:  mov edx, ebx
 8050fdd:  add edx, DWORD PTR [edi+0x150]
 8050fe3:  cmp DWORD PTR [edx], 0x1
 8050fe6:  jne 8050fc8
 8050fe8:  mov eax, DWORD PTR [ebp-0x1c]
 8050feb:  sub eax, DWORD PTR [edx+0x8]
 8050fee:  cmp eax, DWORD PTR [edx+0x14]
 8050ff1:  jae 8050fc8
 8050ff3:  mov eax, DWORD PTR [edi+0x4]
 8050ff6:  mov edx, DWORD PTR [ebp-0x3c]
 8050ff9:  mov DWORD PTR [edx], eax
 8050ffb:  mov eax, DWORD PTR [edi+0x1ac]
 8051001:  mov DWORD PTR [edx+0x4], eax
 8051004:  mov eax, DWORD PTR [edi+0x4]
 8051007:  cmp BYTE PTR [eax], 0x0
 805100a:  jne 805101e
 805100c:  test BYTE PTR [edi+0x194], 0x3
 8051013:  jne 805101e
 8051015:  mov eax, ds:0x80d0cd0
 805101a:  mov eax, DWORD PTR [eax]
 805101c:  mov DWORD PTR [edx], eax
 805101e:  mov eax, DWORD PTR [edi+0x38]
 8051021:  mov eax, DWORD PTR [eax+0x4]
 8051024:  mov DWORD PTR [ebp-0x20], eax
 8051027:  mov ecx, eax
 8051029:  mov eax, DWORD PTR [edi+0x34]
 805102c:  mov eax, DWORD PTR [eax+0x4]
 805102f:  mov DWORD PTR [ebp-0x2c], eax
 8051032:  mov eax, DWORD PTR [edi+0x48]
 8051035:  mov eax, DWORD PTR [eax+0x4]
 8051038:  mov DWORD PTR [ebp-0x30], eax
 805103b:  mov eax, DWORD PTR [edi+0x14c]
 8051041:  test eax, eax
 8051043:  je 80511c1
 8051049:  mov ecx, DWORD PTR [edi+0x178]
 805104f:  test ecx, ecx
 8051051:  mov DWORD PTR [ebp-0x28], ecx
 8051054:  je 805116e
 805105a:  mov eax, DWORD PTR [edi+0x188]
 8051060:  mov DWORD PTR [ebp-0x34], 0x0
 8051067:  mov DWORD PTR [ebp-0x14], 0x0
 805106e:  mov DWORD PTR [ebp-0x24], eax
 8051071:  mov ecx, eax
 8051073:  nop
 8051074:  lea esi, [esi]
 8051078:  mov edx, DWORD PTR [ebp-0x34]
 805107b:  mov eax, DWORD PTR [ecx+edx*4]
 805107e:  mov edx, DWORD PTR [ebp-0x14]
 8051081:  test eax, eax
 8051083:  mov DWORD PTR [ebp-0x10], edx
 8051086:  je 8051126
 805108c:  mov ecx, DWORD PTR [ebp-0x20]
 805108f:  lea esi, [eax*4]
 8051096:  shl eax, 0x4
 8051099:  add esi, DWORD PTR [edi+0x18c]
 805109f:  lea edx, [ecx+eax+0xe]
 80510a3:  jmp 80510b1
 80510a5:  lea esi, [esi]
 80510a8:  mov eax, DWORD PTR [ebp-0x10]
 80510ab:  add esi, 0x4
 80510ae:  mov DWORD PTR [ebp-0x14], eax
 80510b1:  movzx ebx, WORD PTR [edx]
 80510b4:  lea eax, [edx-0xe]
 80510b7:  mov DWORD PTR [ebp-0x10], eax
 80510ba:  test bx, bx
 80510bd:  jne 80510c6
 80510bf:  mov eax, DWORD PTR [edx-0xa]
 80510c2:  test eax, eax
 80510c4:  je 8051118
 80510c6:  movzx eax, BYTE PTR [edx-0x2]
 80510ca:  and eax, 0xf
 80510cd:  cmp eax, 0x6
 80510d0:  je 8051118
 80510d2:  mov ecx, DWORD PTR [edx-0xa]
 80510d5:  mov DWORD PTR [ebp-0x18], ecx
 80510d8:  add ecx, DWORD PTR [edi]
 80510da:  cmp DWORD PTR [ebp-0x38], ecx
 80510dd:  jb 8051118
 80510df:  test bx, bx
 80510e2:  je 80510eb
 80510e4:  mov eax, DWORD PTR [edx-0x6]
 80510e7:  test eax, eax
 80510e9:  jne 80510f5
 80510eb:  cmp DWORD PTR [ebp-0x38], ecx
 80510ee:  xchg ax, ax
 80510f0:  je 80510fc
 80510f2:  mov eax, DWORD PTR [edx-0x6]
 80510f5:  add eax, ecx
 80510f7:  cmp DWORD PTR [ebp-0x38], eax
 80510fa:  jae 8051118
 80510fc:  mov eax, DWORD PTR [ebp-0x14]
 80510ff:  test eax, eax
 8051101:  je 805110e
 8051103:  mov eax, DWORD PTR [ebp-0x14]
 8051106:  mov ecx, DWORD PTR [ebp-0x18]
 8051109:  cmp ecx, DWORD PTR [eax+0x4]
 805110c:  jbe 8051118
 805110e:  mov eax, DWORD PTR [ebp-0x30]
 8051111:  cmp eax, DWORD PTR [edx-0xe]
 8051114:  ja 805111e
 8051116:  xchg ax, ax
 8051118:  mov ecx, DWORD PTR [ebp-0x14]
 805111b:  mov DWORD PTR [ebp-0x10], ecx
 805111e:  add edx, 0x10
 8051121:  test BYTE PTR [esi], 0x1
 8051124:  je 80510a8
 8051126:  add DWORD PTR [ebp-0x34], 0x1
 805112a:  mov edx, DWORD PTR [ebp-0x34]
 805112d:  cmp DWORD PTR [ebp-0x28], edx
 8051130:  jbe 8051175
 8051132:  mov ecx, DWORD PTR [ebp-0x10]
 8051135:  mov DWORD PTR [ebp-0x14], ecx
 8051138:  mov ecx, DWORD PTR [ebp-0x24]
 805113b:  jmp 8051078
 8051140:  mov edi, DWORD PTR [edi+0xc]
 8051143:  test edi, edi
 8051145:  jne 8050f88
 805114b:  xor ebx, ebx
 805114d:  mov eax, 0x0
 8051152:  test eax, eax
 8051154:  je 8051162
 8051156:  mov DWORD PTR [esp], 0x80d0d7c
 805115d:  call 0
 8051162:  add esp, 0x38
 8051165:  mov eax, ebx
 8051167:  pop ebx
 8051168:  pop esi
 8051169:  pop edi
 805116a:  pop ebp
 805116b:  ret 0x4
 805116e:  mov DWORD PTR [ebp-0x10], 0x0
 8051175:  mov ecx, DWORD PTR [ebp-0x40]
 8051178:  test ecx, ecx
 805117a:  je 8051181
 805117c:  mov ecx, DWORD PTR [ebp-0x40]
 805117f:  mov DWORD PTR [ecx], edi
 8051181:  mov edx, DWORD PTR [ebp+0x8]
 8051184:  test edx, edx
 8051186:  je 8051190
 8051188:  mov edx, DWORD PTR [ebp-0x10]
 805118b:  mov eax, DWORD PTR [ebp+0x8]
 805118e:  mov DWORD PTR [eax], edx
 8051190:  mov eax, DWORD PTR [ebp-0x10]
 8051193:  test eax, eax
 8051195:  je 8051262
 805119b:  mov ecx, DWORD PTR [ebp-0x10]
 805119e:  mov ebx, 0x1
 80511a3:  mov eax, DWORD PTR [ebp-0x3c]
 80511a6:  mov ecx, DWORD PTR [ecx]
 80511a8:  add DWORD PTR [ebp-0x2c], ecx
 80511ab:  mov edx, DWORD PTR [ebp-0x2c]
 80511ae:  mov ecx, DWORD PTR [ebp-0x10]
 80511b1:  mov DWORD PTR [eax+0x8], edx
 80511b4:  mov edx, DWORD PTR [ebp-0x3c]
 80511b7:  mov eax, DWORD PTR [ecx+0x4]
 80511ba:  add eax, DWORD PTR [edi]
 80511bc:  mov DWORD PTR [edx+0xc], eax
 80511bf:  jmp 805114d
 80511c1:  mov eax, DWORD PTR [edi+0x30]
 80511c4:  mov esi, DWORD PTR [ebp-0x2c]
 80511c7:  test eax, eax
 80511c9:  je 80511d9
 80511cb:  mov eax, DWORD PTR [eax+0x4]
 80511ce:  mov esi, DWORD PTR [ebp-0x20]
 80511d1:  mov eax, DWORD PTR [eax+0x4]
 80511d4:  shl eax, 0x4
 80511d7:  add esi, eax
 80511d9:  cmp DWORD PTR [ebp-0x20], esi
 80511dc:  mov DWORD PTR [ebp-0x10], 0x0
 80511e3:  jb 80511ef
 80511e5:  jmp 805116e
 80511e7:  nop
 80511e8:  add ecx, 0x10
 80511eb:  cmp ecx, esi
 80511ed:  jae 8051175
 80511ef:  movzx edx, BYTE PTR [ecx+0xc]
 80511f3:  mov eax, edx
 80511f5:  shr al, 0x4
 80511f8:  sub eax, 0x1
 80511fb:  cmp al, 0x1
 80511fd:  ja 80511e8
 80511ff:  mov eax, edx
 8051201:  and eax, 0xf
 8051204:  cmp eax, 0x6
 8051207:  je 80511e8
 8051209:  movzx eax, WORD PTR [ecx+0xe]
 805120d:  test ax, ax
 8051210:  je 8051257
 8051212:  mov ebx, DWORD PTR [ecx+0x4]
 8051215:  mov edx, ebx
 8051217:  add edx, DWORD PTR [edi]
 8051219:  cmp DWORD PTR [ebp-0x38], edx
 805121c:  jb 80511e8
 805121e:  test ax, ax
 8051221:  je 805122a
 8051223:  mov eax, DWORD PTR [ecx+0x8]
 8051226:  test eax, eax
 8051228:  jne 8051235
 805122a:  cmp DWORD PTR [ebp-0x38], edx
 805122d:  lea esi, [esi]
 8051230:  je 805123c
 8051232:  mov eax, DWORD PTR [ecx+0x8]
 8051235:  add eax, edx
 8051237:  cmp DWORD PTR [ebp-0x38], eax
 805123a:  jae 80511e8
 805123c:  mov eax, DWORD PTR [ebp-0x10]
 805123f:  test eax, eax
 8051241:  je 805124b
 8051243:  mov eax, DWORD PTR [ebp-0x10]
 8051246:  cmp ebx, DWORD PTR [eax+0x4]
 8051249:  jbe 80511e8
 805124b:  mov edx, DWORD PTR [ebp-0x30]
 805124e:  cmp edx, DWORD PTR [ecx]
 8051250:  jbe 80511e8
 8051252:  mov DWORD PTR [ebp-0x10], ecx
 8051255:  jmp 80511e8
 8051257:  mov ebx, DWORD PTR [ecx+0x4]
 805125a:  test ebx, ebx
 805125c:  je 80511e8
 805125e:  xchg ax, ax
 8051260:  jmp 8051215
 8051262:  mov ecx, DWORD PTR [ebp-0x3c]
 8051265:  mov ebx, 0x1
 805126a:  mov DWORD PTR [ecx+0x8], 0x0
 8051271:  mov DWORD PTR [ecx+0xc], 0x0
 8051278:  jmp 805114d
 805127d:  nop
 805127e:  nop
 805127f:  nop

08051280 <__libc_init_secure>:
 8051280:  mov eax, ds:0x80d2e64
 8051285:  push ebp
 8051286:  mov ebp, esp
 8051288:  push ebx
 8051289:  test eax, eax
 805128b:  je 8051290
 805128d:  pop ebx
 805128e:  pop ebp
 805128f:  ret
 8051290:  call 80725e0
 8051295:  mov ebx, eax
 8051297:  nop
 8051298:  call 80725d0
 805129d:  cmp ebx, eax
 805129f:  je 80512b0
 80512a1:  mov edx, 0x1
 80512a6:  pop ebx
 80512a7:  mov DWORD PTR ds:0x80d0cd8, edx
 80512ad:  pop ebp
 80512ae:  ret
 80512af:  nop
 80512b0:  call 8072600
 80512b5:  mov ebx, eax
 80512b7:  call 80725f0
 80512bc:  xor edx, edx
 80512be:  cmp ebx, eax
 80512c0:  jne 80512a1
 80512c2:  lea esi, [esi]
 80512c8:  jmp 80512a6
 80512ca:  nop
 80512cb:  nop
 80512cc:  nop
 80512cd:  nop
 80512ce:  nop
 80512cf:  nop

080512d0 <_dl_discover_osversion>:
 80512d0:  push ebp
 80512d1:  mov ebp, esp
 80512d3:  push edi
 80512d4:  push esi
 80512d5:  push ebx
 80512d6:  sub esp, 0x1d4
 80512dc:  lea eax, [ebp-0x1d2]
 80512e2:  mov DWORD PTR [esp], eax
 80512e5:  call 80722f0
 80512ea:  test eax, eax
 80512ec:  jne 805136b
 80512ee:  lea eax, [ebp-0x150]
 80512f4:  mov edx, eax
 80512f6:  xor esi, esi
 80512f8:  xor edi, edi
 80512fa:  movzx ecx, BYTE PTR [edx]
 80512fd:  lea eax, [ecx-0x30]
 8051300:  cmp al, 0x9
 8051302:  ja 8051346
 8051304:  lea ebx, [edx+0x1]
 8051307:  movzx edx, BYTE PTR [edx+0x1]
 805130b:  movsx eax, cl
 805130e:  lea ecx, [eax-0x30]
 8051311:  lea eax, [edx-0x30]
 8051314:  cmp al, 0x9
 8051316:  ja 805132f
 8051318:  lea eax, [ecx+ecx*4]
 805131b:  movsx edx, dl
 805131e:  add ebx, 0x1
 8051321:  lea ecx, [edx+eax*2-0x30]
 8051325:  movzx edx, BYTE PTR [ebx]
 8051328:  lea eax, [edx-0x30]
 805132b:  cmp al, 0x9
 805132d:  jbe 8051318
 805132f:  shl esi, 0x8
 8051332:  add edi, 0x1
 8051335:  or esi, ecx
 8051337:  cmp dl, 0x2e
 805133a:  jne 8051346
 805133c:  cmp edi, 0x3
 805133f:  je 805135e
 8051341:  lea edx, [ebx+0x1]
 8051344:  jmp 80512fa
 8051346:  cmp edi, 0x2
 8051349:  lea esi, [esi]
 8051350:  jg 805135e
 8051352:  mov ecx, 0x3
 8051357:  sub ecx, edi
 8051359:  shl ecx, 0x3
 805135c:  shl esi, cl
 805135e:  mov eax, esi
 8051360:  add esp, 0x1d4
 8051366:  pop ebx
 8051367:  pop esi
 8051368:  pop edi
 8051369:  pop ebp
 805136a:  ret
 805136b:  mov DWORD PTR [esp+0x4], 0x0
 8051373:  mov DWORD PTR [esp], 0x80b03ab
 805137a:  call 804f1f0
 805137f:  test eax, eax
 8051381:  mov ebx, eax
 8051383:  jns 805138c
 8051385:  mov eax, 0xffffffff
 805138a:  jmp 8051360
 805138c:  lea edi, [ebp-0x4c]
 805138f:  mov DWORD PTR [esp+0x8], 0x40
 8051397:  mov DWORD PTR [esp+0x4], edi
 805139b:  mov DWORD PTR [esp], eax
 805139e:  call 804f250
 80513a3:  mov DWORD PTR [esp], ebx
 80513a6:  mov esi, eax
 80513a8:  call 8073140
 80513ad:  test esi, esi
 80513af:  jle 8051385
 80513b1:  cmp esi, 0x3f
 80513b4:  mov eax, esi
 80513b6:  jle 80513bd
 80513b8:  mov eax, 0x3f
 80513bd:  mov BYTE PTR [edi+eax], 0x0
 80513c1:  mov eax, edi
 80513c3:  jmp 80512f4
 80513c8:  nop
 80513c9:  nop
 80513ca:  nop
 80513cb:  nop
 80513cc:  nop
 80513cd:  nop
 80513ce:  nop
 80513cf:  nop

080513d0 <_dl_start>:
 80513d0:  push ebp
 80513d1:  mov ebp, esp
 80513d3:  sub esp, 0x8
 80513d6:  call 8055a00
 80513db:  nop
 80513dc:  lea esi, [esi]

080513e0 <__libc_init_first>:
 80513e0:  push ebp
 80513e1:  mov eax, 0x0
 80513e6:  mov ebp, esp
 80513e8:  sub esp, 0x18
 80513eb:  test eax, eax
 80513ed:  mov DWORD PTR [ebp-0xc], ebx
 80513f0:  mov ebx, DWORD PTR [ebp+0x10]
 80513f3:  mov DWORD PTR [ebp-0x8], esi
 80513f6:  mov esi, DWORD PTR [ebp+0xc]
 80513f9:  mov DWORD PTR [ebp-0x4], edi
 80513fc:  mov edi, DWORD PTR [ebp+0x8]
 80513ff:  jne 8051450
 8051401:  movzx eax, WORD PTR ds:0x80d0da0
 8051408:  mov DWORD PTR ds:0x80d0d94, 0x0
 8051412:  mov DWORD PTR [esp], eax
 8051415:  call 80559a0
 805141a:  mov DWORD PTR ds:0x80d2e68, edi
 8051420:  mov DWORD PTR ds:0x80d2e6c, esi
 8051426:  mov DWORD PTR ds:0x80d2218, ebx
 805142c:  call 8051280
 8051431:  call 8050ba0
 8051436:  mov DWORD PTR [ebp+0x10], ebx
 8051439:  mov ebx, DWORD PTR [ebp-0xc]
 805143c:  mov DWORD PTR [ebp+0xc], esi
 805143f:  mov esi, DWORD PTR [ebp-0x8]
 8051442:  mov DWORD PTR [ebp+0x8], edi
 8051445:  mov edi, DWORD PTR [ebp-0x4]
 8051448:  mov esp, ebp
 805144a:  pop ebp
 805144b:  jmp 80500d0
 8051450:  mov eax, ds:0x0
 8051455:  test eax, eax
 8051457:  jne 8051401
 8051459:  mov DWORD PTR ds:0x80d0d94, 0x1
 8051463:  jmp 805141a
 8051465:  nop
 8051466:  nop
 8051467:  nop
 8051468:  nop
 8051469:  nop
 805146a:  nop
 805146b:  nop
 805146c:  nop
 805146d:  nop
 805146e:  nop
 805146f:  nop

08051470 <__syscall_error>:
 8051470:  neg eax

08051472 <__syscall_error_1>:
 8051472:  mov ecx, DWORD PTR gs:0x0
 8051479:  mov DWORD PTR [ecx-0x18], eax
 805147f:  mov eax, 0xffffffff
 8051484:  ret
 8051485:  nop
 8051486:  nop
 8051487:  nop
 8051488:  nop
 8051489:  nop
 805148a:  nop
 805148b:  nop
 805148c:  nop
 805148d:  nop
 805148e:  nop
 805148f:  nop

08051490 <__assert_fail>:
 8051490:  push ebp
 8051491:  mov eax, 0x0
 8051496:  mov ebp, esp
 8051498:  push edi
 8051499:  push esi
 805149a:  push ebx
 805149b:  sub esp, 0x2c
 805149e:  test eax, eax
 80514a0:  mov ebx, DWORD PTR [ebp+0x14]
 80514a3:  je 80514b9
 80514a5:  mov DWORD PTR [esp+0x4], 0x0
 80514ad:  mov DWORD PTR [esp], 0x1
 80514b4:  call 0
 80514b9:  test ebx, ebx
 80514bb:  mov DWORD PTR [ebp-0x14], 0x80b44cd
 80514c2:  je 8051590
 80514c8:  mov esi, DWORD PTR ds:0x80d0d5c
 80514ce:  mov edi, 0x80b44cd
 80514d3:  cmp BYTE PTR [esi], 0x0
 80514d6:  jne 80514dd
 80514d8:  mov edi, 0x80c2c93
 80514dd:  mov DWORD PTR [esp+0x8], 0x5
 80514e5:  mov DWORD PTR [esp+0x4], 0x80b0468
 80514ed:  mov DWORD PTR [esp], 0x80c3c9c
 80514f4:  call 80515a0
 80514f9:  mov edx, DWORD PTR [ebp+0x8]
 80514fc:  mov DWORD PTR [esp+0x18], ebx
 8051500:  mov DWORD PTR [esp+0xc], edi
 8051504:  mov DWORD PTR [esp+0x8], esi
 8051508:  mov DWORD PTR [esp+0x20], edx
 805150c:  mov edx, DWORD PTR [ebp-0x14]
 805150f:  mov DWORD PTR [esp+0x4], eax
 8051513:  lea eax, [ebp-0x10]
 8051516:  mov DWORD PTR [esp], eax
 8051519:  mov DWORD PTR [esp+0x1c], edx
 805151d:  mov edx, DWORD PTR [ebp+0x10]
 8051520:  mov DWORD PTR [esp+0x14], edx
 8051524:  mov edx, DWORD PTR [ebp+0xc]
 8051527:  mov DWORD PTR [esp+0x10], edx
 805152b:  call 80617d0
 8051530:  test eax, eax
 8051532:  js 8051570
 8051534:  mov eax, DWORD PTR [ebp-0x10]
 8051537:  mov DWORD PTR [esp+0x4], 0x80c6acf
 805153f:  mov DWORD PTR [esp], 0x0
 8051546:  mov DWORD PTR [esp+0x8], eax
 805154a:  call 8061f30
 805154f:  mov eax, ds:0x80d11e4
 8051554:  mov DWORD PTR [esp], eax
 8051557:  call 8062200
 805155c:  mov eax, DWORD PTR [ebp-0x10]
 805155f:  mov DWORD PTR [esp], eax
 8051562:  call 804b4a0
 8051567:  call 8055a00
 805156c:  lea esi, [esi]
 8051570:  mov DWORD PTR [esp+0x8], 0x12
 8051578:  mov DWORD PTR [esp+0x4], 0x80b0454
 8051580:  mov DWORD PTR [esp], 0x2
 8051587:  call 804f2b0
 805158c:  jmp 8051567
 805158e:  xchg ax, ax
 8051590:  mov ebx, 0x80c2c93
 8051595:  mov DWORD PTR [ebp-0x14], ebx
 8051598:  jmp 80514c8
 805159d:  nop
 805159e:  nop
 805159f:  nop

080515a0 <__dcgettext>:
 80515a0:  push ebp
 80515a1:  mov ebp, esp
 80515a3:  sub esp, 0x18
 80515a6:  mov eax, DWORD PTR [ebp+0x10]
 80515a9:  mov DWORD PTR [esp+0x10], 0x0
 80515b1:  mov DWORD PTR [esp+0xc], 0x0
 80515b9:  mov DWORD PTR [esp+0x8], 0x0
 80515c1:  mov DWORD PTR [esp+0x14], eax
 80515c5:  mov eax, DWORD PTR [ebp+0xc]
 80515c8:  mov DWORD PTR [esp+0x4], eax
 80515cc:  mov eax, DWORD PTR [ebp+0x8]
 80515cf:  mov DWORD PTR [esp], eax
 80515d2:  call 80522e0
 80515d7:  leave
 80515d8:  ret
 80515d9:  nop
 80515da:  nop
 80515db:  nop
 80515dc:  nop
 80515dd:  nop
 80515de:  nop
 80515df:  nop

080515e0 <plural_eval>:
 80515e0:  push ebp
 80515e1:  mov ebp, esp
 80515e3:  sub esp, 0xc
 80515e6:  mov DWORD PTR [esp], ebx
 80515e9:  mov ebx, eax
 80515eb:  mov DWORD PTR [esp+0x4], esi
 80515ef:  mov esi, edx
 80515f1:  mov DWORD PTR [esp+0x8], edi
 80515f5:  mov eax, DWORD PTR [ebx]
 80515f7:  cmp eax, 0x1
 80515fa:  je 805167c
 8051600:  jle 80516a0
 8051606:  cmp eax, 0x2
 8051609:  je 8051628
 805160b:  cmp eax, 0x3
 805160e:  xchg ax, ax
 8051610:  je 8051660
 8051612:  xor esi, esi
 8051614:  mov eax, esi
 8051616:  mov ebx, DWORD PTR [esp]
 8051619:  mov esi, DWORD PTR [esp+0x4]
 805161d:  mov edi, DWORD PTR [esp+0x8]
 8051621:  mov esp, ebp
 8051623:  pop ebp
 8051624:  ret
 8051625:  lea esi, [esi]
 8051628:  mov eax, DWORD PTR [ebx+0x8]
 805162b:  mov edx, esi
 805162d:  call 80515e0
 8051632:  mov edi, eax
 8051634:  mov eax, DWORD PTR [ebx+0x4]
 8051637:  cmp eax, 0xf
 805163a:  je 8051690
 805163c:  cmp eax, 0xe
 805163f:  jne 80516e0
 8051645:  test edi, edi
 8051647:  je 8051612
 8051649:  mov eax, DWORD PTR [ebx+0xc]
 805164c:  mov edx, esi
 805164e:  call 80515e0
 8051653:  test eax, eax
 8051655:  setne al
 8051658:  movzx esi, al
 805165b:  jmp 8051614
 805165d:  lea esi, [esi]
 8051660:  mov eax, DWORD PTR [ebx+0x8]
 8051663:  mov edx, esi
 8051665:  call 80515e0
 805166a:  cmp eax, 0x1
 805166d:  sbb eax, eax
 805166f:  not eax
 8051671:  mov ebx, DWORD PTR [ebx+eax*4+0x10]
 8051675:  mov eax, DWORD PTR [ebx]
 8051677:  cmp eax, 0x1
 805167a:  jne 8051600
 805167c:  mov eax, DWORD PTR [ebx+0x8]
 805167f:  mov edx, esi
 8051681:  call 80515e0
 8051686:  test eax, eax
 8051688:  sete al
 805168b:  movzx esi, al
 805168e:  jmp 8051614
 8051690:  test edi, edi
 8051692:  je 8051649
 8051694:  mov esi, 0x1
 8051699:  jmp 8051614
 805169e:  xchg ax, ax
 80516a0:  test eax, eax
 80516a2:  lea esi, [esi]
 80516a8:  jne 8051612
 80516ae:  mov eax, DWORD PTR [ebx+0x4]
 80516b1:  test eax, eax
 80516b3:  nop
 80516b4:  lea esi, [esi]
 80516b8:  je 8051614
 80516be:  sub eax, 0x1
 80516c1:  lea esi, [esi]
 80516c8:  jne 8051612
 80516ce:  mov esi, DWORD PTR [ebx+0x8]
 80516d1:  lea esi, [esi]
 80516d8:  jmp 8051614
 80516dd:  lea esi, [esi]
 80516e0:  mov eax, DWORD PTR [ebx+0xc]
 80516e3:  mov edx, esi
 80516e5:  call 80515e0
 80516ea:  mov ecx, eax
 80516ec:  mov eax, DWORD PTR [ebx+0x4]
 80516ef:  sub eax, 0x3
 80516f2:  cmp eax, 0xa
 80516f5:  ja 8051612
 80516fb:  jmp DWORD PTR [eax*4+0x80b0490]
 8051702:  cmp edi, ecx
 8051704:  setne al
 8051707:  movzx esi, al
 805170a:  jmp 8051614
 805170f:  cmp edi, ecx
 8051711:  sete al
 8051714:  movzx esi, al
 8051717:  jmp 8051614
 805171c:  cmp edi, ecx
 805171e:  setae al
 8051721:  movzx esi, al
 8051724:  jmp 8051614
 8051729:  cmp edi, ecx
 805172b:  setbe al
 805172e:  movzx esi, al
 8051731:  jmp 8051614
 8051736:  cmp edi, ecx
 8051738:  seta al
 805173b:  movzx esi, al
 805173e:  jmp 8051614
 8051743:  cmp edi, ecx
 8051745:  setb al
 8051748:  movzx esi, al
 805174b:  jmp 8051614
 8051750:  mov esi, edi
 8051752:  sub esi, ecx
 8051754:  jmp 8051614
 8051759:  lea esi, [ecx+edi]
 805175c:  jmp 8051614
 8051761:  mov eax, edi
 8051763:  xor edx, edx
 8051765:  div ecx
 8051767:  mov esi, edx
 8051769:  jmp 8051614
 805176e:  mov eax, edi
 8051770:  xor edx, edx
 8051772:  div ecx
 8051774:  mov esi, eax
 8051776:  jmp 8051614
 805177b:  mov esi, ecx
 805177d:  imul esi, edi
 8051780:  jmp 8051614
 8051785:  lea esi, [esi]
 8051789:  lea edi, [edi]

08051790 <transcmp>:
 8051790:  push ebp
 8051791:  mov ebp, esp
 8051793:  push esi
 8051794:  push ebx
 8051795:  sub esp, 0x8
 8051798:  mov esi, DWORD PTR [ebp+0xc]
 805179b:  mov ebx, DWORD PTR [ebp+0x8]
 805179e:  mov edx, DWORD PTR [esi+0x10]
 80517a1:  test edx, edx
 80517a3:  je 8051808
 80517a5:  mov eax, DWORD PTR [ebx+0x10]
 80517a8:  lea edx, [esi+0x1c]
 80517ab:  test eax, eax
 80517ad:  je 8051818
 80517af:  lea eax, [ebx+0x1c]
 80517b2:  mov DWORD PTR [esp+0x4], edx
 80517b6:  mov DWORD PTR [esp], eax
 80517b9:  call 806af90
 80517be:  test eax, eax
 80517c0:  je 80517d0
 80517c2:  add esp, 0x8
 80517c5:  pop ebx
 80517c6:  pop esi
 80517c7:  pop ebp
 80517c8:  ret
 80517c9:  lea esi, [esi]
 80517d0:  mov eax, DWORD PTR [esi]
 80517d2:  mov DWORD PTR [esp+0x4], eax
 80517d6:  mov eax, DWORD PTR [ebx]
 80517d8:  mov DWORD PTR [esp], eax
 80517db:  call 806af90
 80517e0:  test eax, eax
 80517e2:  jne 80517c2
 80517e4:  mov eax, DWORD PTR [esi+0x8]
 80517e7:  mov DWORD PTR [esp+0x4], eax
 80517eb:  mov eax, DWORD PTR [ebx+0x8]
 80517ee:  mov DWORD PTR [esp], eax
 80517f1:  call 806af90
 80517f6:  test eax, eax
 80517f8:  jne 80517c2
 80517fa:  mov eax, DWORD PTR [ebx+0x4]
 80517fd:  sub eax, DWORD PTR [esi+0x4]
 8051800:  jmp 80517c2
 8051802:  lea esi, [esi]
 8051808:  mov eax, DWORD PTR [ebx+0x10]
 805180b:  mov edx, DWORD PTR [esi+0x1c]
 805180e:  test eax, eax
 8051810:  jne 80517af
 8051812:  lea esi, [esi]
 8051818:  mov eax, DWORD PTR [ebx+0x1c]
 805181b:  jmp 80517b2
 805181d:  lea esi, [esi]

08051820 <_nl_find_msg>:
 8051820:  push ebp
 8051821:  mov ebp, esp
 8051823:  push edi
 8051824:  push esi
 8051825:  push ebx
 8051826:  sub esp, 0x74
 8051829:  mov DWORD PTR [ebp-0x5c], ecx
 805182c:  mov ecx, DWORD PTR [eax+0x4]
 805182f:  mov DWORD PTR [ebp-0x54], eax
 8051832:  mov DWORD PTR [ebp-0x58], edx
 8051835:  test ecx, ecx
 8051837:  jle 8051ba8
 805183d:  mov eax, DWORD PTR [eax+0x8]
 8051840:  test eax, eax
 8051842:  mov DWORD PTR [ebp-0x50], eax
 8051845:  je 8051958
 805184b:  mov edx, DWORD PTR [eax+0x14]
 805184e:  xor edi, edi
 8051850:  mov eax, DWORD PTR [eax+0x30]
 8051853:  mov DWORD PTR [ebp-0x44], edx
 8051856:  mov esi, edx
 8051858:  test eax, eax
 805185a:  je 80519a8
 8051860:  mov ecx, DWORD PTR [ebp-0x5c]
 8051863:  mov DWORD PTR [esp], ecx
 8051866:  call 804eea0
 805186b:  mov ebx, DWORD PTR [ebp-0x5c]
 805186e:  mov DWORD PTR [ebp-0x60], eax
 8051871:  mov DWORD PTR [esp], ebx
 8051874:  call 8055960
 8051879:  mov esi, DWORD PTR [ebp-0x50]
 805187c:  xor edx, edx
 805187e:  mov ecx, DWORD PTR [esi+0x2c]
 8051881:  mov edi, eax
 8051883:  div ecx
 8051885:  mov eax, edi
 8051887:  mov esi, edx
 8051889:  lea edx, [ecx-0x2]
 805188c:  mov ebx, edx
 805188e:  xor edx, edx
 8051890:  div ebx
 8051892:  mov eax, DWORD PTR [ebp-0x50]
 8051895:  mov ebx, ecx
 8051897:  mov eax, DWORD PTR [eax+0x34]
 805189a:  mov DWORD PTR [ebp-0x28], eax
 805189d:  add edx, 0x1
 80518a0:  sub ebx, edx
 80518a2:  mov DWORD PTR [ebp-0x34], edx
 80518a5:  sub edx, ecx
 80518a7:  mov DWORD PTR [ebp-0x6c], ebx
 80518aa:  mov DWORD PTR [ebp-0x70], edx
 80518ad:  lea esi, [esi]
 80518b0:  mov eax, DWORD PTR [ebp-0x28]
 80518b3:  test eax, eax
 80518b5:  jne 8051942
 80518bb:  mov ecx, DWORD PTR [ebp-0x50]
 80518be:  mov eax, DWORD PTR [ecx+0x30]
 80518c1:  mov eax, DWORD PTR [eax+esi*4]
 80518c4:  test eax, eax
 80518c6:  je 8051958
 80518cc:  lea ebx, [eax-0x1]
 80518cf:  cmp DWORD PTR [ebp-0x44], ebx
 80518d2:  jbe 8051a00
 80518d8:  mov eax, DWORD PTR [ebp-0x50]
 80518db:  mov edi, DWORD PTR [eax+0xc]
 80518de:  test edi, edi
 80518e0:  jne 8051b58
 80518e6:  mov edx, DWORD PTR [eax+0x18]
 80518e9:  lea ecx, [ebx*8]
 80518f0:  mov eax, DWORD PTR [edx+ebx*8]
 80518f3:  cmp eax, DWORD PTR [ebp-0x60]
 80518f6:  jb 805192b
 80518f8:  mov eax, DWORD PTR [ebp-0x50]
 80518fb:  test edi, edi
 80518fd:  mov eax, DWORD PTR [eax]
 80518ff:  mov DWORD PTR [ebp-0x4c], eax
 8051902:  jne 8051b70
 8051908:  mov eax, DWORD PTR [edx+ecx+0x4]
 805190c:  add eax, DWORD PTR [ebp-0x4c]
 805190f:  mov DWORD PTR [esp+0x4], eax
 8051913:  mov edx, DWORD PTR [ebp-0x5c]
 8051916:  mov DWORD PTR [esp], edx
 8051919:  call 806af90
 805191e:  test eax, eax
 8051920:  sete al
 8051923:  test al, al
 8051925:  jne 8051a38
 805192b:  cmp esi, DWORD PTR [ebp-0x6c]
 805192e:  jb 8051b50
 8051934:  mov eax, DWORD PTR [ebp-0x28]
 8051937:  add esi, DWORD PTR [ebp-0x70]
 805193a:  test eax, eax
 805193c:  je 80518bb
 8051942:  mov edx, DWORD PTR [ebp-0x50]
 8051945:  mov eax, DWORD PTR [edx+0x30]
 8051948:  mov eax, DWORD PTR [eax+esi*4]
 805194b:  bswap eax
 805194d:  test eax, eax
 805194f:  jne 80518cc
 8051955:  lea esi, [esi]
 8051958:  mov DWORD PTR [ebp-0x3c], 0x0
 805195f:  mov eax, DWORD PTR [ebp-0x3c]
 8051962:  lea esp, [ebp-0xc]
 8051965:  pop ebx
 8051966:  pop esi
 8051967:  pop edi
 8051968:  pop ebp
 8051969:  ret 0x8
 805196c:  lea esi, [esi]
 8051970:  cmp edi, ebx
 8051972:  mov esi, ebx
 8051974:  jae 8051958
 8051976:  mov edx, DWORD PTR [ebp-0x20]
 8051979:  lea ebx, [esi+edi]
 805197c:  shr ebx, 1
 805197e:  mov eax, DWORD PTR [edx+ebx*8+0x4]
 8051982:  bswap eax
 8051984:  add eax, DWORD PTR [ebp-0x24]
 8051987:  mov DWORD PTR [esp+0x4], eax
 805198b:  mov ecx, DWORD PTR [ebp-0x5c]
 805198e:  mov DWORD PTR [esp], ecx
 8051991:  call 806af90
 8051996:  test eax, eax
 8051998:  js 8051970
 805199a:  test eax, eax
 805199c:  mov DWORD PTR [ebp-0x40], ebx
 805199f:  je 8051a3b
 80519a5:  lea edi, [ebx+0x1]
 80519a8:  cmp esi, edi
 80519aa:  jbe 8051958
 80519ac:  mov eax, DWORD PTR [ebp-0x50]
 80519af:  mov edx, DWORD PTR [ebp-0x50]
 80519b2:  mov ebx, DWORD PTR [ebp-0x50]
 80519b5:  mov eax, DWORD PTR [eax+0x18]
 80519b8:  mov ebx, DWORD PTR [ebx]
 80519ba:  mov DWORD PTR [ebp-0x20], eax
 80519bd:  mov eax, DWORD PTR [edx+0xc]
 80519c0:  mov DWORD PTR [ebp-0x24], ebx
 80519c3:  test eax, eax
 80519c5:  je 80519d6
 80519c7:  jmp 8051976
 80519c9:  lea esi, [esi]
 80519d0:  cmp ebx, edi
 80519d2:  mov esi, ebx
 80519d4:  jbe 8051958
 80519d6:  mov ecx, DWORD PTR [ebp-0x20]
 80519d9:  lea ebx, [esi+edi]
 80519dc:  mov eax, DWORD PTR [ebp-0x24]
 80519df:  shr ebx, 1
 80519e1:  add eax, DWORD PTR [ecx+ebx*8+0x4]
 80519e5:  mov DWORD PTR [esp+0x4], eax
 80519e9:  mov eax, DWORD PTR [ebp-0x5c]
 80519ec:  mov DWORD PTR [esp], eax
 80519ef:  call 806af90
 80519f4:  test eax, eax
 80519f6:  js 80519d0
 80519f8:  jmp 805199a
 80519fa:  lea esi, [esi]
 8051a00:  mov ecx, DWORD PTR [ebp-0x50]
 8051a03:  mov eax, ebx
 8051a05:  sub eax, DWORD PTR [ebp-0x44]
 8051a08:  mov edx, DWORD PTR [ebp-0x60]
 8051a0b:  shl eax, 0x3
 8051a0e:  add eax, DWORD PTR [ecx+0x24]
 8051a11:  cmp edx, DWORD PTR [eax]
 8051a13:  jae 805192b
 8051a19:  mov eax, DWORD PTR [eax+0x4]
 8051a1c:  mov DWORD PTR [esp+0x4], eax
 8051a20:  mov ecx, DWORD PTR [ebp-0x5c]
 8051a23:  mov DWORD PTR [esp], ecx
 8051a26:  call 806af90
 8051a2b:  test eax, eax
 8051a2d:  sete al
 8051a30:  test al, al
 8051a32:  je 805192b
 8051a38:  mov DWORD PTR [ebp-0x40], ebx
 8051a3b:  mov ebx, DWORD PTR [ebp-0x44]
 8051a3e:  cmp DWORD PTR [ebp-0x40], ebx
 8051a41:  jb 8051b80
 8051a47:  mov eax, DWORD PTR [ebp-0x40]
 8051a4a:  mov ecx, DWORD PTR [ebp-0x50]
 8051a4d:  sub eax, DWORD PTR [ebp-0x44]
 8051a50:  shl eax, 0x3
 8051a53:  add eax, DWORD PTR [ecx+0x28]
 8051a56:  mov ebx, DWORD PTR [eax+0x4]
 8051a59:  mov eax, DWORD PTR [eax]
 8051a5b:  mov DWORD PTR [ebp-0x3c], ebx
 8051a5e:  mov DWORD PTR [ebp-0x38], eax
 8051a61:  mov eax, DWORD PTR [ebp+0x8]
 8051a64:  test eax, eax
 8051a66:  je 8051b3b
 8051a6c:  mov edi, DWORD PTR [ebp-0x58]
 8051a6f:  test edi, edi
 8051a71:  je 8051bd8
 8051a77:  mov esi, DWORD PTR [ebp-0x58]
 8051a7a:  mov eax, DWORD PTR [esi+0x8]
 8051a7d:  test eax, eax
 8051a7f:  mov edi, eax
 8051a81:  je 8051bd8
 8051a87:  mov eax, 0x0
 8051a8c:  test eax, eax
 8051a8e:  je 8051a9e
 8051a90:  mov eax, DWORD PTR [ebp-0x50]
 8051a93:  add eax, 0x40
 8051a96:  mov DWORD PTR [esp], eax
 8051a99:  call 0
 8051a9e:  mov eax, DWORD PTR [ebp-0x50]
 8051aa1:  mov edx, DWORD PTR [eax+0x3c]
 8051aa4:  test edx, edx
 8051aa6:  je 8051c0d
 8051aac:  mov ecx, eax
 8051aae:  mov esi, edx
 8051ab0:  lea eax, [edx+edx*2]
 8051ab3:  lea ebx, [eax*4-0xc]
 8051aba:  add ebx, DWORD PTR [ecx+0x38]
 8051abd:  jmp 8051acb
 8051abf:  nop
 8051ac0:  sub ebx, 0xc
 8051ac3:  test esi, esi
 8051ac5:  je 8051c0d
 8051acb:  mov eax, DWORD PTR [ebx]
 8051acd:  sub esi, 0x1
 8051ad0:  mov DWORD PTR [ebp-0x30], ebx
 8051ad3:  mov DWORD PTR [esp+0x4], edi
 8051ad7:  mov DWORD PTR [esp], eax
 8051ada:  call 806af90
 8051adf:  test eax, eax
 8051ae1:  jne 8051ac0
 8051ae3:  mov ebx, 0x0
 8051ae8:  test ebx, ebx
 8051aea:  je 8051afa
 8051aec:  mov eax, DWORD PTR [ebp-0x50]
 8051aef:  add eax, 0x40
 8051af2:  mov DWORD PTR [esp], eax
 8051af5:  call 0
 8051afa:  mov ebx, DWORD PTR [ebp-0x30]
 8051afd:  test ebx, ebx
 8051aff:  je 8051c19
 8051b05:  mov edx, DWORD PTR [ebp-0x30]
 8051b08:  cmp DWORD PTR [edx+0x4], 0xff
 8051b0c:  je 8051b3b
 8051b0e:  mov eax, DWORD PTR [edx+0x8]
 8051b11:  test eax, eax
 8051b13:  je 8052164
 8051b19:  cmp eax, 0xff
 8051b1c:  je 8052158
 8051b22:  mov ecx, DWORD PTR [ebp-0x40]
 8051b25:  mov eax, DWORD PTR [eax+ecx*4]
 8051b28:  test eax, eax
 8051b2a:  je 8051c9b
 8051b30:  lea edx, [eax+0x4]
 8051b33:  mov eax, DWORD PTR [eax]
 8051b35:  mov DWORD PTR [ebp-0x3c], edx
 8051b38:  mov DWORD PTR [ebp-0x38], eax
 8051b3b:  mov ebx, DWORD PTR [ebp-0x38]
 8051b3e:  mov ecx, DWORD PTR [ebp+0xc]
 8051b41:  mov eax, DWORD PTR [ebp-0x3c]
 8051b44:  mov DWORD PTR [ecx], ebx
 8051b46:  lea esp, [ebp-0xc]
 8051b49:  pop ebx
 8051b4a:  pop esi
 8051b4b:  pop edi
 8051b4c:  pop ebp
 8051b4d:  ret 0x8
 8051b50:  add esi, DWORD PTR [ebp-0x34]
 8051b53:  jmp 80518b0
 8051b58:  mov edx, DWORD PTR [eax+0x18]
 8051b5b:  lea ecx, [ebx*8]
 8051b62:  mov eax, DWORD PTR [edx+ebx*8]
 8051b65:  bswap eax
 8051b67:  jmp 80518f3
 8051b6c:  lea esi, [esi]
 8051b70:  mov eax, DWORD PTR [edx+ecx+0x4]
 8051b74:  bswap eax
 8051b76:  jmp 805190c
 8051b7b:  nop
 8051b7c:  lea esi, [esi]
 8051b80:  mov esi, DWORD PTR [ebp-0x50]
 8051b83:  mov eax, DWORD PTR [esi+0xc]
 8051b86:  mov ecx, DWORD PTR [esi]
 8051b88:  test eax, eax
 8051b8a:  jne 8051bb5
 8051b8c:  mov eax, DWORD PTR [ebp-0x40]
 8051b8f:  shl eax, 0x3
 8051b92:  add eax, DWORD PTR [esi+0x1c]
 8051b95:  add ecx, DWORD PTR [eax+0x4]
 8051b98:  mov eax, DWORD PTR [eax]
 8051b9a:  mov DWORD PTR [ebp-0x3c], ecx
 8051b9d:  add eax, 0x1
 8051ba0:  mov DWORD PTR [ebp-0x38], eax
 8051ba3:  jmp 8051a61
 8051ba8:  call 8052c90
 8051bad:  mov eax, DWORD PTR [ebp-0x54]
 8051bb0:  jmp 805183d
 8051bb5:  mov eax, DWORD PTR [ebp-0x40]
 8051bb8:  shl eax, 0x3
 8051bbb:  add eax, DWORD PTR [esi+0x1c]
 8051bbe:  mov edx, DWORD PTR [eax+0x4]
 8051bc1:  mov eax, DWORD PTR [eax]
 8051bc3:  bswap edx
 8051bc5:  bswap eax
 8051bc7:  lea edx, [ecx+edx]
 8051bca:  add eax, 0x1
 8051bcd:  mov DWORD PTR [ebp-0x3c], edx
 8051bd0:  mov DWORD PTR [ebp-0x38], eax
 8051bd3:  jmp 8051a61
 8051bd8:  mov esi, DWORD PTR ds:0x80d286c
 8051bde:  test esi, esi
 8051be0:  je 8051e62
 8051be6:  mov edi, DWORD PTR ds:0x80d2870
 8051bec:  test edi, edi
 8051bee:  jne 8051a87
 8051bf4:  mov edx, 0xffffffd8
 8051bfa:  mov eax, gs:0x0
 8051c00:  mov eax, DWORD PTR [eax+edx]
 8051c03:  mov eax, DWORD PTR [eax]
 8051c05:  mov edi, DWORD PTR [eax+0x5c]
 8051c08:  jmp 8051a87
 8051c0d:  mov DWORD PTR [ebp-0x30], 0x0
 8051c14:  jmp 8051ae3
 8051c19:  mov eax, 0x0
 8051c1e:  test eax, eax
 8051c20:  je 8051c30
 8051c22:  mov eax, DWORD PTR [ebp-0x50]
 8051c25:  add eax, 0x40
 8051c28:  mov DWORD PTR [esp], eax
 8051c2b:  call 0
 8051c30:  mov esi, DWORD PTR [ebp-0x50]
 8051c33:  mov esi, DWORD PTR [esi+0x3c]
 8051c36:  test esi, esi
 8051c38:  mov DWORD PTR [ebp-0x1c], esi
 8051c3b:  je 8051e8c
 8051c41:  mov edx, DWORD PTR [ebp-0x50]
 8051c44:  lea eax, [esi+esi*2]
 8051c47:  mov edx, DWORD PTR [edx+0x38]
 8051c4a:  mov DWORD PTR [ebp-0x2c], edx
 8051c4d:  lea ebx, [edx+eax*4-0xc]
 8051c51:  jmp 8051c63
 8051c53:  nop
 8051c54:  lea esi, [esi]
 8051c58:  sub ebx, 0xc
 8051c5b:  test esi, esi
 8051c5d:  je 8051e95
 8051c63:  mov eax, DWORD PTR [ebx]
 8051c65:  sub esi, 0x1
 8051c68:  mov DWORD PTR [ebp-0x30], ebx
 8051c6b:  mov DWORD PTR [esp+0x4], edi
 8051c6f:  mov DWORD PTR [esp], eax
 8051c72:  call 806af90
 8051c77:  test eax, eax
 8051c79:  jne 8051c58
 8051c7b:  mov eax, 0x0
 8051c80:  test eax, eax
 8051c82:  je 8051b05
 8051c88:  mov eax, DWORD PTR [ebp-0x50]
 8051c8b:  add eax, 0x40
 8051c8e:  mov DWORD PTR [esp], eax
 8051c91:  call 0
 8051c96:  jmp 8051b05
 8051c9b:  mov ecx, 0x1
 8051ca0:  cmp DWORD PTR gs:0xc, 0x0
 8051ca8:  je 8051cab
 8051caa:  cmpxchg DWORD PTR ds:0x80d2868, ecx
 8051cb2:  jne 80529ad
 8051cb8:  mov eax, ds:0x80d2864
 8051cbd:  lea edi, [ebp-0x18]
 8051cc0:  mov ebx, DWORD PTR [ebp-0x3c]
 8051cc3:  add eax, 0x4
 8051cc6:  mov DWORD PTR [ebp-0x10], ebx
 8051cc9:  xor ebx, ebx
 8051ccb:  mov DWORD PTR [ebp-0x14], eax
 8051cce:  jmp 8051d25
 8051cd0:  test ebx, ebx
 8051cd2:  je 8051dc8
 8051cd8:  add ebx, 0x1
 8051cdb:  imul eax, ebx, 0xff0
 8051ce1:  mov ds:0x80d2860, eax
 8051ce6:  mov DWORD PTR [esp+0x4], eax
 8051cea:  mov eax, ds:0x80d28a4
 8051cef:  mov DWORD PTR [esp], eax
 8051cf2:  call 804db10
 8051cf7:  test eax, eax
 8051cf9:  mov edx, eax
 8051cfb:  je 8051e15
 8051d01:  mov eax, ds:0x80d28a4
 8051d06:  mov eax, DWORD PTR [eax]
 8051d08:  sub DWORD PTR ds:0x80d2860, 0x4
 8051d0f:  mov DWORD PTR [edx], eax
 8051d11:  lea eax, [edx+0x4]
 8051d14:  mov ds:0x80d2864, eax
 8051d19:  lea eax, [edx+0x8]
 8051d1c:  mov DWORD PTR ds:0x80d28a4, edx
 8051d22:  mov DWORD PTR [ebp-0x14], eax
 8051d25:  mov edx, DWORD PTR ds:0x80d2860
 8051d2b:  cmp edx, 0x3
 8051d2e:  jbe 8051cd0
 8051d30:  mov esi, DWORD PTR [ebp-0x30]
 8051d33:  sub edx, 0x4
 8051d36:  mov ecx, DWORD PTR [ebp-0x38]
 8051d39:  add ecx, DWORD PTR [ebp-0x10]
 8051d3c:  mov eax, DWORD PTR [esi+0x4]
 8051d3f:  mov DWORD PTR [esp+0x8], edi
 8051d43:  add edx, DWORD PTR [ebp-0x14]
 8051d46:  mov DWORD PTR [esp+0x4], edx
 8051d4a:  lea edx, [ebp-0x14]
 8051d4d:  mov DWORD PTR [esp], edx
 8051d50:  lea edx, [ebp-0x10]
 8051d53:  call 807ff90
 8051d58:  sub esp, 0xc
 8051d5b:  test eax, eax
 8051d5d:  jne 8051df8
 8051d63:  mov ecx, DWORD PTR [ebp-0x14]
 8051d66:  mov edx, DWORD PTR ds:0x80d2864
 8051d6c:  mov ebx, DWORD PTR [ebp-0x30]
 8051d6f:  mov esi, DWORD PTR [ebp-0x40]
 8051d72:  mov eax, ecx
 8051d74:  sub eax, edx
 8051d76:  sub eax, 0x4
 8051d79:  mov DWORD PTR [edx], eax
 8051d7b:  mov eax, DWORD PTR [ebx+0x8]
 8051d7e:  mov DWORD PTR [eax+esi*4], edx
 8051d81:  sub edx, ecx
 8051d83:  add DWORD PTR ds:0x80d2860, edx
 8051d89:  mov eax, ds:0x80d2860
 8051d8e:  and DWORD PTR ds:0x80d2860, 0xfc
 8051d95:  and eax, 0x3
 8051d98:  add ecx, eax
 8051d9a:  mov DWORD PTR ds:0x80d2864, ecx
 8051da0:  cmp DWORD PTR gs:0xc, 0x0
 8051da8:  je 8051dab
 8051daa:  sub DWORD PTR ds:0x80d2868, 0x1
 8051db2:  jne 80529bd
 8051db8:  mov eax, DWORD PTR [ebx+0x8]
 8051dbb:  mov eax, DWORD PTR [eax+esi*4]
 8051dbe:  jmp 8051b30
 8051dc3:  nop
 8051dc4:  lea esi, [esi]
 8051dc8:  mov DWORD PTR ds:0x80d2860, 0xff0
 8051dd2:  mov DWORD PTR [esp], 0xff0
 8051dd9:  call 804d6f0
 8051dde:  test eax, eax
 8051de0:  mov edx, eax
 8051de2:  je 8051e2a
 8051de4:  mov ebx, 0x1
 8051de9:  mov eax, ds:0x80d28a4
 8051dee:  jmp 8051d08
 8051df3:  nop
 8051df4:  lea esi, [esi]
 8051df8:  cmp eax, 0x4
 8051dfb:  je 8051d63
 8051e01:  cmp eax, 0x5
 8051e04:  jne 80520d6
 8051e0a:  mov eax, DWORD PTR [ebp-0x3c]
 8051e0d:  mov DWORD PTR [ebp-0x10], eax
 8051e10:  jmp 8051cd0
 8051e15:  mov edx, DWORD PTR ds:0x80d28a4
 8051e1b:  mov eax, DWORD PTR [edx]
 8051e1d:  mov ds:0x80d28a4, eax
 8051e22:  mov DWORD PTR [esp], edx
 8051e25:  call 804b4a0
 8051e2a:  mov DWORD PTR ds:0x80d2864, 0x0
 8051e34:  mov DWORD PTR ds:0x80d2860, 0x0
 8051e3e:  cmp DWORD PTR gs:0xc, 0x0
 8051e46:  je 8051e49
 8051e48:  sub DWORD PTR ds:0x80d2868, 0x1
 8051e50:  jne 80529cd
 8051e56:  mov DWORD PTR [ebp-0x3c], 0xffffffff
 8051e5d:  jmp 805195f
 8051e62:  mov DWORD PTR [esp], 0x80b04bc
 8051e69:  call 80562f0
 8051e6e:  test eax, eax
 8051e70:  mov esi, eax
 8051e72:  je 8051e7d
 8051e74:  cmp BYTE PTR [eax], 0x0
 8051e77:  jne 80520fa
 8051e7d:  mov DWORD PTR ds:0x80d286c, 0x1
 8051e87:  jmp 8051be6
 8051e8c:  mov eax, DWORD PTR [ebp-0x50]
 8051e8f:  mov eax, DWORD PTR [eax+0x38]
 8051e92:  mov DWORD PTR [ebp-0x2c], eax
 8051e95:  mov ebx, DWORD PTR [ebp-0x1c]
 8051e98:  lea eax, [ebx+ebx*2+0x3]
 8051e9c:  shl eax, 0x2
 8051e9f:  mov DWORD PTR [esp+0x4], eax
 8051ea3:  mov esi, DWORD PTR [ebp-0x2c]
 8051ea6:  mov DWORD PTR [esp], esi
 8051ea9:  call 804db10
 8051eae:  test eax, eax
 8051eb0:  mov ebx, eax
 8051eb2:  je 8052217
 8051eb8:  mov edx, DWORD PTR [ebp-0x50]
 8051ebb:  mov DWORD PTR [edx+0x38], eax
 8051ebe:  mov DWORD PTR [esp], edi
 8051ec1:  call 806b010
 8051ec6:  test eax, eax
 8051ec8:  mov DWORD PTR [ebp-0x48], eax
 8051ecb:  je 8052217
 8051ed1:  mov ecx, DWORD PTR [ebp-0x1c]
 8051ed4:  lea eax, [ecx+ecx*2]
 8051ed7:  mov ecx, 0x80c2c93
 8051edc:  lea eax, [ebx+eax*4]
 8051edf:  mov ebx, DWORD PTR [ebp-0x48]
 8051ee2:  mov DWORD PTR [ebp-0x30], eax
 8051ee5:  mov DWORD PTR [eax+0x4], 0xffffffff
 8051eec:  mov DWORD PTR [eax], ebx
 8051eee:  lea eax, [ebp-0x18]
 8051ef1:  mov DWORD PTR [esp+0x4], eax
 8051ef5:  mov DWORD PTR [esp], 0x0
 8051efc:  mov edx, DWORD PTR [ebp-0x58]
 8051eff:  mov eax, DWORD PTR [ebp-0x54]
 8051f02:  call 8051820
 8051f07:  sub esp, 0x8
 8051f0a:  test eax, eax
 8051f0c:  je 80520c0
 8051f12:  mov DWORD PTR [esp+0x4], 0x80b04cb
 8051f1a:  mov DWORD PTR [esp], eax
 8051f1d:  call 806bbe0
 8051f22:  test eax, eax
 8051f24:  je 80520c0
 8051f2a:  movzx edx, BYTE PTR [eax+0x8]
 8051f2e:  lea ebx, [eax+0x8]
 8051f31:  test dl, dl
 8051f33:  je 80521c9
 8051f39:  cmp dl, 0x20
 8051f3c:  je 80521c9
 8051f42:  cmp dl, 0x9
 8051f45:  je 80521c9
 8051f4b:  cmp dl, 0xa
 8051f4e:  xchg ax, ax
 8051f50:  je 80521c9
 8051f56:  xor ecx, ecx
 8051f58:  jmp 8051f7a
 8051f5a:  lea esi, [esi]
 8051f60:  cmp dl, 0x20
 8051f63:  nop
 8051f64:  lea esi, [esi]
 8051f68:  je 8051f86
 8051f6a:  cmp dl, 0x9
 8051f6d:  lea esi, [esi]
 8051f70:  je 8051f86
 8051f72:  cmp dl, 0xa
 8051f75:  lea esi, [esi]
 8051f78:  je 8051f86
 8051f7a:  add ecx, 0x1
 8051f7d:  movzx edx, BYTE PTR [eax+ecx+0x8]
 8051f82:  test dl, dl
 8051f84:  jne 8051f60
 8051f86:  lea eax, [ecx+0x1]
 8051f89:  add eax, 0x12
 8051f8c:  xor edi, edi
 8051f8e:  and eax, 0xfc
 8051f91:  sub esp, eax
 8051f93:  lea esi, [esp+0x1b]
 8051f97:  and esi, 0xf0
 8051f9a:  mov DWORD PTR [ebp-0x64], esi
 8051f9d:  mov DWORD PTR [esp+0x8], ecx
 8051fa1:  mov DWORD PTR [esp+0x4], ebx
 8051fa5:  mov DWORD PTR [esp], esi
 8051fa8:  call 806c310
 8051fad:  mov BYTE PTR [eax], 0x0
 8051fb0:  mov edx, DWORD PTR [ebp-0x48]
 8051fb3:  jmp 8051fc5
 8051fb5:  lea esi, [esi]
 8051fb8:  cmp al, 0x2f
 8051fba:  sete al
 8051fbd:  add edx, 0x1
 8051fc0:  movzx eax, al
 8051fc3:  add edi, eax
 8051fc5:  movzx eax, BYTE PTR [edx]
 8051fc8:  test al, al
 8051fca:  jne 8051fb8
 8051fcc:  sub edx, DWORD PTR [ebp-0x48]
 8051fcf:  lea eax, [edx+0x1d]
 8051fd2:  mov edx, DWORD PTR [ebp-0x48]
 8051fd5:  and eax, 0xfc
 8051fd8:  sub esp, eax
 8051fda:  lea eax, [esp+0x1b]
 8051fde:  and eax, 0xf0
 8051fe1:  mov DWORD PTR [ebp-0x68], eax
 8051fe4:  movzx eax, BYTE PTR [edx]
 8051fe7:  mov ebx, DWORD PTR [ebp-0x68]
 8051fea:  test al, al
 8051fec:  mov edx, ebx
 8051fee:  je 8052025
 8051ff0:  mov ecx, DWORD PTR ds:0x80b041c
 8051ff6:  xor edx, edx
 8051ff8:  mov DWORD PTR [ebp-0x74], ecx
 8051ffb:  mov ebx, ecx
 8051ffd:  jmp 8052004
 8051fff:  mov ebx, DWORD PTR [ebp-0x74]
 8052002:  mov edx, ecx
 8052004:  movsx eax, al
 8052007:  mov esi, DWORD PTR [ebp-0x68]
 805200a:  mov eax, DWORD PTR [ebx+eax*4]
 805200d:  lea ecx, [edx+0x1]
 8052010:  mov ebx, esi
 8052012:  mov BYTE PTR [esi+edx], al
 8052015:  mov esi, DWORD PTR [ebp-0x48]
 8052018:  add ebx, ecx
 805201a:  movzx eax, BYTE PTR [esi+edx+0x1]
 805201f:  test al, al
 8052021:  jne 8051fff
 8052023:  mov edx, ebx
 8052025:  cmp edi, 0x1
 8052028:  jbe 805212e
 805202e:  mov BYTE PTR [edx], 0x0
 8052031:  xor edi, edi
 8052033:  mov edx, DWORD PTR [ebp-0x64]
 8052036:  jmp 8052045
 8052038:  cmp al, 0x2f
 805203a:  sete al
 805203d:  add edx, 0x1
 8052040:  movzx eax, al
 8052043:  add edi, eax
 8052045:  movzx eax, BYTE PTR [edx]
 8052048:  test al, al
 805204a:  jne 8052038
 805204c:  sub edx, DWORD PTR [ebp-0x64]
 805204f:  mov ecx, DWORD PTR [ebp-0x64]
 8052052:  lea eax, [edx+0x15]
 8052055:  and eax, 0xfc
 8052058:  sub esp, eax
 805205a:  movzx eax, BYTE PTR [ecx]
 805205d:  lea edx, [esp+0x1b]
 8052061:  and edx, 0xf0
 8052064:  mov ebx, edx
 8052066:  mov ecx, edx
 8052068:  test al, al
 805206a:  je 8052094
 805206c:  mov esi, DWORD PTR ds:0x80b041c
 8052072:  mov ecx, edx
 8052074:  mov ebx, DWORD PTR [ebp-0x64]
 8052077:  mov DWORD PTR [ebp-0x74], esi
 805207a:  mov esi, DWORD PTR [ebp-0x74]
 805207d:  movsx eax, al
 8052080:  add ebx, 0x1
 8052083:  mov eax, DWORD PTR [esi+eax*4]
 8052086:  mov BYTE PTR [ecx], al
 8052088:  movzx eax, BYTE PTR [ebx]
 805208b:  add ecx, 0x1
 805208e:  test al, al
 8052090:  jne 805207a
 8052092:  mov ebx, ecx
 8052094:  cmp edi, 0x1
 8052097:  jbe 80521af
 805209d:  mov BYTE PTR [ecx], 0x0
 80520a0:  mov ecx, DWORD PTR [ebp-0x30]
 80520a3:  mov DWORD PTR [esp], 0x1
 80520aa:  mov eax, DWORD PTR [ebp-0x68]
 80520ad:  add ecx, 0x4
 80520b0:  call 807f860
 80520b5:  sub esp, 0x4
 80520b8:  test eax, eax
 80520ba:  jne 80521d5
 80520c0:  mov ebx, DWORD PTR [ebp-0x30]
 80520c3:  mov esi, DWORD PTR [ebp-0x50]
 80520c6:  mov DWORD PTR [ebx+0x8], 0x0
 80520cd:  add DWORD PTR [esi+0x3c], 0x1
 80520d1:  jmp 8051c7b
 80520d6:  cmp DWORD PTR gs:0xc, 0x0
 80520de:  je 80520e1
 80520e0:  sub DWORD PTR ds:0x80d2868, 0x1
 80520e8:  jne 80529dd
 80520ee:  mov DWORD PTR [ebp-0x3c], 0x0
 80520f5:  jmp 805195f
 80520fa:  mov DWORD PTR [esp], eax
 80520fd:  call 804eea0
 8052102:  lea edi, [eax+0x1]
 8052105:  mov DWORD PTR [esp], edi
 8052108:  call 804d6f0
 805210d:  test eax, eax
 805210f:  mov ebx, eax
 8052111:  je 8052123
 8052113:  mov DWORD PTR [esp+0x8], edi
 8052117:  mov DWORD PTR [esp+0x4], esi
 805211b:  mov DWORD PTR [esp], eax
 805211e:  call 804efc0
 8052123:  mov DWORD PTR ds:0x80d2870, ebx
 8052129:  jmp 8051e7d
 805212e:  test edi, edi
 8052130:  mov BYTE PTR [ebx], 0x2f
 8052133:  lea edx, [ebx+0x1]
 8052136:  jne 805202e
 805213c:  mov BYTE PTR [ebx+0x1], 0x2f
 8052140:  lea edx, [ebx+0xa]
 8052143:  mov DWORD PTR [ebx+0x2], 0x4e415254
 805214a:  mov DWORD PTR [ebx+0x6], 0x54494c53
 8052151:  jmp 805202e
 8052156:  xchg ax, ax
 8052158:  mov DWORD PTR [ebp-0x3c], 0xffffffff
 805215f:  jmp 805195f
 8052164:  mov ecx, 0x1
 8052169:  cmp DWORD PTR gs:0xc, 0x0
 8052171:  je 8052174
 8052173:  cmpxchg DWORD PTR ds:0x80d2868, ecx
 805217b:  jne 80529ed
 8052181:  mov ecx, DWORD PTR [edx+0x8]
 8052184:  test ecx, ecx
 8052186:  je 805223e
 805218c:  cmp DWORD PTR gs:0xc, 0x0
 8052194:  je 8052197
 8052196:  sub DWORD PTR ds:0x80d2868, 0x1
 805219e:  jne 80529fd
 80521a4:  mov edx, DWORD PTR [ebp-0x30]
 80521a7:  mov eax, DWORD PTR [edx+0x8]
 80521aa:  jmp 8051b19
 80521af:  test edi, edi
 80521b1:  mov BYTE PTR [ebx], 0x2f
 80521b4:  lea ecx, [ebx+0x1]
 80521b7:  jne 805209d
 80521bd:  mov BYTE PTR [ebx+0x1], 0x2f
 80521c1:  lea ecx, [ebx+0x2]
 80521c4:  jmp 805209d
 80521c9:  xor ecx, ecx
 80521cb:  mov eax, 0x1
 80521d0:  jmp 8051f89
 80521d5:  add eax, 0x1
 80521d8:  je 8052208
 80521da:  mov eax, 0x0
 80521df:  test eax, eax
 80521e1:  je 80521f1
 80521e3:  mov eax, DWORD PTR [ebp-0x50]
 80521e6:  add eax, 0x40
 80521e9:  mov DWORD PTR [esp], eax
 80521ec:  call 0
 80521f1:  mov edx, DWORD PTR [ebp-0x48]
 80521f4:  mov DWORD PTR [esp], edx
 80521f7:  call 804b4a0
 80521fc:  mov DWORD PTR [ebp-0x3c], 0x0
 8052203:  jmp 805195f
 8052208:  mov ecx, DWORD PTR [ebp-0x30]
 805220b:  mov DWORD PTR [ecx+0x4], 0xffffffff
 8052212:  jmp 80520c0
 8052217:  mov eax, 0x0
 805221c:  test eax, eax
 805221e:  je 8052158
 8052224:  mov eax, DWORD PTR [ebp-0x50]
 8052227:  add eax, 0x40
 805222a:  mov DWORD PTR [esp], eax
 805222d:  call 0
 8052232:  mov DWORD PTR [ebp-0x3c], 0xffffffff
 8052239:  jmp 805195f
 805223e:  mov DWORD PTR [esp+0x4], 0x4
 8052246:  mov ecx, DWORD PTR [ebp-0x50]
 8052249:  mov ecx, DWORD PTR [ecx+0x20]
 805224c:  add DWORD PTR [ebp-0x44], ecx
 805224f:  mov ebx, DWORD PTR [ebp-0x44]
 8052252:  mov DWORD PTR [esp], ebx
 8052255:  call 804d3c0
 805225a:  mov esi, DWORD PTR [ebp-0x30]
 805225d:  test eax, eax
 805225f:  mov DWORD PTR [esi+0x8], eax
 8052262:  jne 8051cb8
 8052268:  mov DWORD PTR [esi+0x8], 0xffffffff
 805226f:  jmp 805218c
 8052274:  lea esi, [esi]
 805227a:  lea edi, [edi]

08052280 <plural_lookup>:
 8052280:  push ebp
 8052281:  mov ebp, esp
 8052283:  push edi
 8052284:  mov edi, ecx
 8052286:  push esi
 8052287:  push ebx
 8052288:  sub esp, 0x8
 805228b:  mov ebx, DWORD PTR [eax+0x8]
 805228e:  mov eax, DWORD PTR [ebx+0x60]
 8052291:  call 80515e0
 8052296:  cmp eax, DWORD PTR [ebx+0x64]
 8052299:  mov ebx, edi
 805229b:  mov esi, eax
 805229d:  sbb eax, eax
 805229f:  add ebx, DWORD PTR [ebp+0x8]
 80522a2:  and esi, eax
 80522a4:  mov eax, edi
 80522a6:  xchg ax, ax
 80522a8:  test esi, esi
 80522aa:  je 80522c8
 80522ac:  mov DWORD PTR [esp+0x4], 0x0
 80522b4:  sub esi, 0x1
 80522b7:  mov DWORD PTR [esp], eax
 80522ba:  call 806c400
 80522bf:  add eax, 0x1
 80522c2:  cmp eax, ebx
 80522c4:  jb 80522a8
 80522c6:  mov eax, edi
 80522c8:  add esp, 0x8
 80522cb:  pop ebx
 80522cc:  pop esi
 80522cd:  pop edi
 80522ce:  pop ebp
 80522cf:  ret 0x4
 80522d2:  lea esi, [esi]
 80522d9:  lea edi, [edi]

080522e0 <__dcigettext>:
 80522e0:  push ebp
 80522e1:  mov ebp, esp
 80522e3:  push edi
 80522e4:  xor edi, edi
 80522e6:  push esi
 80522e7:  push ebx
 80522e8:  sub esp, 0x5c
 80522eb:  mov edx, DWORD PTR [ebp+0xc]
 80522ee:  test edx, edx
 80522f0:  je 805252a
 80522f6:  cmp DWORD PTR [ebp+0x1c], 0xc
 80522fa:  ja 8052513
 8052300:  cmp DWORD PTR [ebp+0x1c], 0x6
 8052304:  je 8052513
 805230a:  mov esi, 0x0
 805230f:  test esi, esi
 8052311:  je 805232b
 8052313:  mov DWORD PTR [esp], 0x80d2a80
 805231a:  call 0
 805231f:  mov DWORD PTR [esp], 0x80d2840
 8052326:  call 0
 805232b:  mov eax, DWORD PTR [ebp+0x8]
 805232e:  test eax, eax
 8052330:  je 8052850
 8052336:  mov edx, DWORD PTR [ebp+0xc]
 8052339:  mov ecx, DWORD PTR [ebp+0x8]
 805233c:  mov eax, DWORD PTR [ebp+0x1c]
 805233f:  mov DWORD PTR [ebp-0x20], 0x0
 8052346:  mov DWORD PTR [ebp-0x14], edx
 8052349:  mov DWORD PTR [ebp-0x30], ecx
 805234c:  mov DWORD PTR [ebp-0x2c], eax
 805234f:  mov DWORD PTR [esp], eax
 8052352:  call 808ad90
 8052357:  mov DWORD PTR [esp], eax
 805235a:  mov ebx, eax
 805235c:  call 804eea0
 8052361:  lea edx, [eax+0x1]
 8052364:  add eax, 0x13
 8052367:  and eax, 0xfc
 805236a:  sub esp, eax
 805236c:  lea eax, [esp+0x1b]
 8052370:  and eax, 0xf0
 8052373:  mov DWORD PTR [esp+0x8], edx
 8052377:  mov DWORD PTR [esp+0x4], ebx
 805237b:  mov DWORD PTR [esp], eax
 805237e:  call 804efc0
 8052383:  test esi, esi
 8052385:  mov DWORD PTR [ebp-0x48], eax
 8052388:  mov DWORD PTR [ebp-0x28], eax
 805238b:  je 8052399
 805238d:  mov DWORD PTR [esp], 0x80d2880
 8052394:  call 0
 8052399:  lea eax, [ebp-0x30]
 805239c:  mov DWORD PTR [esp+0x8], 0x8051790
 80523a4:  mov DWORD PTR [esp+0x4], 0x80d28a0
 80523ac:  mov DWORD PTR [esp], eax
 80523af:  call 80736f0
 80523b4:  mov edx, 0x0
 80523b9:  test edx, edx
 80523bb:  mov DWORD PTR [ebp-0x38], eax
 80523be:  je 80523cc
 80523c0:  mov DWORD PTR [esp], 0x80d2880
 80523c7:  call 0
 80523cc:  mov eax, DWORD PTR [ebp-0x38]
 80523cf:  test eax, eax
 80523d1:  je 80523e7
 80523d3:  mov ecx, DWORD PTR [ebp-0x38]
 80523d6:  mov edx, DWORD PTR [ecx]
 80523d8:  mov eax, DWORD PTR [edx+0xc]
 80523db:  cmp eax, DWORD PTR ds:0x80d2e74
 80523e1:  je 80527fa
 80523e7:  mov edx, DWORD PTR gs:0x0
 80523ee:  mov ecx, 0xffffffe8
 80523f4:  mov eax, ds:0x80d2e70
 80523f9:  mov DWORD PTR [ebp-0x5c], edx
 80523fc:  mov ecx, DWORD PTR [edx+ecx]
 80523ff:  test eax, eax
 8052401:  mov DWORD PTR [ebp-0x34], eax
 8052404:  mov DWORD PTR [ebp-0x3c], ecx
 8052407:  jne 8052426
 8052409:  jmp 805253b
 805240e:  xchg ax, ax
 8052410:  jl 8052534
 8052416:  mov ecx, DWORD PTR [ebp-0x34]
 8052419:  mov ecx, DWORD PTR [ecx]
 805241b:  test ecx, ecx
 805241d:  mov DWORD PTR [ebp-0x34], ecx
 8052420:  je 805253b
 8052426:  mov eax, DWORD PTR [ebp-0x34]
 8052429:  add eax, 0xc
 805242c:  mov DWORD PTR [esp+0x4], eax
 8052430:  mov edx, DWORD PTR [ebp+0x8]
 8052433:  mov DWORD PTR [esp], edx
 8052436:  call 806af90
 805243b:  cmp eax, 0x0
 805243e:  jne 8052410
 8052440:  mov eax, DWORD PTR [ebp-0x34]
 8052443:  mov eax, DWORD PTR [eax+0x4]
 8052446:  mov DWORD PTR [ebp-0x40], eax
 8052449:  cmp BYTE PTR [eax], 0x2f
 805244c:  je 8052542
 8052452:  mov DWORD PTR [esp], eax
 8052455:  mov ebx, 0x1002
 805245a:  call 804eea0
 805245f:  lea esi, [eax+0x1]
 8052462:  jmp 8052482
 8052464:  lea esi, [esi]
 8052468:  mov edx, DWORD PTR [ebp-0x5c]
 805246b:  mov eax, 0xffffffe8
 8052470:  cmp DWORD PTR [edx+eax], 0x22
 8052474:  jne 805280d
 805247a:  mov eax, ebx
 805247c:  shr eax, 1
 805247e:  lea ebx, [ebx+eax+0x20]
 8052482:  lea eax, [ebx+esi+0x12]
 8052486:  mov ecx, DWORD PTR [ebp-0x5c]
 8052489:  and eax, 0xfc
 805248c:  mov edx, 0xffffffe8
 8052492:  sub esp, eax
 8052494:  lea eax, [esp+0x1b]
 8052498:  and eax, 0xf0
 805249b:  mov DWORD PTR [ebp-0x40], eax
 805249e:  mov DWORD PTR [ecx+edx], 0x0
 80524a5:  mov DWORD PTR [esp+0x4], ebx
 80524a9:  mov DWORD PTR [esp], eax
 80524ac:  call 80731b0
 80524b1:  test eax, eax
 80524b3:  je 8052468
 80524b5:  mov ecx, DWORD PTR [ebp-0x34]
 80524b8:  mov ebx, DWORD PTR [ecx+0x4]
 80524bb:  mov DWORD PTR [esp+0x4], 0x0
 80524c3:  mov eax, DWORD PTR [ebp-0x40]
 80524c6:  mov DWORD PTR [esp], eax
 80524c9:  call 806c400
 80524ce:  mov WORD PTR [eax], 0x2f
 80524d3:  add eax, 0x1
 80524d6:  mov DWORD PTR [esp+0x4], ebx
 80524da:  mov DWORD PTR [esp], eax
 80524dd:  call 806afe0
 80524e2:  jmp 8052542
 80524e4:  mov ecx, 0x0
 80524e9:  test ecx, ecx
 80524eb:  je 8052505
 80524ed:  mov DWORD PTR [esp], 0x80d2a80
 80524f4:  call 0
 80524f9:  mov DWORD PTR [esp], 0x80d2840
 8052500:  call 0
 8052505:  mov ecx, DWORD PTR [ebp-0x3c]
 8052508:  mov edx, DWORD PTR [ebp-0x5c]
 805250b:  mov eax, 0xffffffe8
 8052510:  mov DWORD PTR [edx+eax], ecx
 8052513:  mov eax, DWORD PTR [ebp+0x14]
 8052516:  mov edi, DWORD PTR [ebp+0xc]
 8052519:  test eax, eax
 805251b:  je 805252a
 805251d:  cmp DWORD PTR [ebp+0x18], 0x1
 8052521:  mov edi, DWORD PTR [ebp+0x10]
 8052524:  je 8052785
 805252a:  lea esp, [ebp-0xc]
 805252d:  mov eax, edi
 805252f:  pop ebx
 8052530:  pop esi
 8052531:  pop edi
 8052532:  pop ebp
 8052533:  ret
 8052534:  mov DWORD PTR [ebp-0x34], 0x0
 805253b:  mov DWORD PTR [ebp-0x40], 0x80b04ec
 8052542:  mov edx, DWORD PTR [ebp+0x1c]
 8052545:  mov DWORD PTR [esp], 0x80b04d4
 805254c:  movzx eax, BYTE PTR [edx+0x80b6289]
 8052553:  lea edi, [eax+0x80b6200]
 8052559:  call 80562f0
 805255e:  test eax, eax
 8052560:  mov esi, eax
 8052562:  je 805285d
 8052568:  cmp BYTE PTR [eax], 0x0
 805256b:  je 805285d
 8052571:  mov ecx, DWORD PTR [ebp+0x1c]
 8052574:  mov DWORD PTR [esp], ecx
 8052577:  call 808ad90
 805257c:  mov ebx, eax
 805257e:  movzx eax, BYTE PTR [eax]
 8052581:  cmp al, BYTE PTR ds:0x80b1f00
 8052587:  jne 80527f3
 805258d:  cmp BYTE PTR [ebx+0x1], 0x0
 8052591:  jne 80527f3
 8052597:  mov eax, DWORD PTR [ebp+0x8]
 805259a:  mov DWORD PTR [esp], eax
 805259d:  call 804eea0
 80525a2:  mov DWORD PTR [ebp-0x4c], eax
 80525a5:  mov DWORD PTR [esp], edi
 80525a8:  call 804eea0
 80525ad:  mov edx, DWORD PTR [ebp-0x4c]
 80525b0:  lea eax, [edx+eax+0x17]
 80525b4:  and eax, 0xfc
 80525b7:  sub esp, eax
 80525b9:  lea ecx, [esp+0x1b]
 80525bd:  and ecx, 0xf0
 80525c0:  mov DWORD PTR [ebp-0x50], ecx
 80525c3:  mov DWORD PTR [esp], ecx
 80525c6:  mov DWORD PTR [esp+0x4], edi
 80525ca:  call 806c360
 80525cf:  mov WORD PTR [eax], 0x2f
 80525d4:  mov edx, DWORD PTR [ebp-0x4c]
 80525d7:  add eax, 0x1
 80525da:  mov DWORD PTR [esp+0x8], edx
 80525de:  mov ecx, DWORD PTR [ebp+0x8]
 80525e1:  mov DWORD PTR [esp], eax
 80525e4:  mov DWORD PTR [esp+0x4], ecx
 80525e8:  call 806c310
 80525ed:  mov DWORD PTR [eax], 0x6f6d2e
 80525f3:  mov DWORD PTR [esp], ebx
 80525f6:  call 804eea0
 80525fb:  add eax, 0x13
 80525fe:  and eax, 0xfc
 8052601:  sub esp, eax
 8052603:  lea eax, [esp+0x1b]
 8052607:  and eax, 0xf0
 805260a:  mov DWORD PTR [ebp-0x54], eax
 805260d:  lea esi, [esi]
 8052610:  movzx eax, BYTE PTR [ebx]
 8052613:  cmp al, 0x3a
 8052615:  je 8052778
 805261b:  test al, al
 805261d:  mov edx, DWORD PTR [ebp-0x54]
 8052620:  jne 805272c
 8052626:  mov BYTE PTR [edx], 0x43
 8052629:  mov edx, DWORD PTR [ebp-0x54]
 805262c:  mov BYTE PTR [edx+0x1], 0x0
 8052630:  mov edx, DWORD PTR [ebp-0x54]
 8052633:  movzx eax, BYTE PTR [edx]
 8052636:  cmp al, BYTE PTR ds:0x80b1f00
 805263c:  jne 8052648
 805263e:  cmp BYTE PTR [edx+0x1], 0x0
 8052642:  je 80524e4
 8052648:  mov esi, DWORD PTR [ebp-0x54]
 805264b:  mov edi, 0x80b04dd
 8052650:  mov ecx, 0x6
 8052655:  repz cmpsb
 8052657:  je 80524e4
 805265d:  mov eax, DWORD PTR [ebp-0x34]
 8052660:  mov DWORD PTR [esp], eax
 8052663:  mov ecx, DWORD PTR [ebp-0x50]
 8052666:  mov edx, DWORD PTR [ebp-0x54]
 8052669:  mov eax, DWORD PTR [ebp-0x40]
 805266c:  call 8052a10
 8052671:  sub esp, 0x4
 8052674:  test eax, eax
 8052676:  mov DWORD PTR [ebp-0x44], eax
 8052679:  je 8052610
 805267b:  lea edx, [ebp-0x10]
 805267e:  mov DWORD PTR [esp+0x4], edx
 8052682:  mov DWORD PTR [esp], 0x1
 8052689:  mov ecx, DWORD PTR [ebp+0xc]
 805268c:  mov edx, DWORD PTR [ebp-0x34]
 805268f:  call 8051820
 8052694:  sub esp, 0x8
 8052697:  test eax, eax
 8052699:  mov edi, eax
 805269b:  je 8052798
 80526a1:  cmp edi, 0xff
 80526a4:  je 80524e4
 80526aa:  test edi, edi
 80526ac:  je 8052610
 80526b2:  mov esi, DWORD PTR [ebp-0x38]
 80526b5:  test esi, esi
 80526b7:  nop
 80526b8:  je 80528aa
 80526be:  mov edx, DWORD PTR [ebp-0x38]
 80526c1:  mov ecx, DWORD PTR [ebp-0x44]
 80526c4:  mov eax, DWORD PTR [edx]
 80526c6:  mov edx, DWORD PTR ds:0x80d2e74
 80526cc:  mov DWORD PTR [eax+0x10], ecx
 80526cf:  mov DWORD PTR [eax+0xc], edx
 80526d2:  mov edx, DWORD PTR [ebp-0x10]
 80526d5:  mov DWORD PTR [eax+0x14], edi
 80526d8:  mov DWORD PTR [eax+0x18], edx
 80526db:  mov ebx, DWORD PTR [ebp+0x14]
 80526de:  mov ecx, DWORD PTR [ebp-0x3c]
 80526e1:  mov edx, DWORD PTR [ebp-0x5c]
 80526e4:  mov eax, 0xffffffe8
 80526e9:  test ebx, ebx
 80526eb:  mov DWORD PTR [edx+eax], ecx
 80526ee:  jne 805286f
 80526f4:  mov eax, 0x0
 80526f9:  test eax, eax
 80526fb:  je 805252a
 8052701:  mov DWORD PTR [esp], 0x80d2a80
 8052708:  call 0
 805270d:  mov DWORD PTR [esp], 0x80d2840
 8052714:  call 0
 8052719:  lea esp, [ebp-0xc]
 805271c:  mov eax, edi
 805271e:  pop ebx
 805271f:  pop esi
 8052720:  pop edi
 8052721:  pop ebp
 8052722:  ret
 8052723:  nop
 8052724:  lea esi, [esi]
 8052728:  cmp al, 0x3a
 805272a:  je 805273b
 805272c:  add ebx, 0x1
 805272f:  mov BYTE PTR [edx], al
 8052731:  movzx eax, BYTE PTR [ebx]
 8052734:  add edx, 0x1
 8052737:  test al, al
 8052739:  jne 8052728
 805273b:  mov BYTE PTR [edx], 0x0
 805273e:  mov eax, ds:0x80d0cd8
 8052743:  test eax, eax
 8052745:  je 8052630
 805274b:  mov DWORD PTR [esp+0x4], 0x2f
 8052753:  mov ecx, DWORD PTR [ebp-0x54]
 8052756:  mov DWORD PTR [esp], ecx
 8052759:  call 806ae20
 805275e:  test eax, eax
 8052760:  je 8052630
 8052766:  movzx eax, BYTE PTR [ebx]
 8052769:  cmp al, 0x3a
 805276b:  jne 805261b
 8052771:  lea esi, [esi]
 8052778:  add ebx, 0x1
 805277b:  nop
 805277c:  lea esi, [esi]
 8052780:  jmp 8052610
 8052785:  mov edi, DWORD PTR [ebp+0xc]
 8052788:  lea esp, [ebp-0xc]
 805278b:  pop ebx
 805278c:  pop esi
 805278d:  mov eax, edi
 805278f:  pop edi
 8052790:  pop ebp
 8052791:  ret
 8052792:  lea esi, [esi]
 8052798:  mov ecx, DWORD PTR [ebp-0x44]
 805279b:  mov eax, DWORD PTR [ecx+0x10]
 805279e:  test eax, eax
 80527a0:  je 8052610
 80527a6:  xor esi, esi
 80527a8:  jmp 80527c2
 80527aa:  lea esi, [esi]
 80527b0:  mov edx, DWORD PTR [ebp-0x44]
 80527b3:  add esi, 0x1
 80527b6:  mov eax, DWORD PTR [edx+esi*4+0x10]
 80527ba:  test eax, eax
 80527bc:  je 8052610
 80527c2:  lea edx, [ebp-0x10]
 80527c5:  mov DWORD PTR [esp+0x4], edx
 80527c9:  mov DWORD PTR [esp], 0x1
 80527d0:  mov ecx, DWORD PTR [ebp+0xc]
 80527d3:  mov edx, DWORD PTR [ebp-0x34]
 80527d6:  call 8051820
 80527db:  sub esp, 0x8
 80527de:  test eax, eax
 80527e0:  mov edi, eax
 80527e2:  je 80527b0
 80527e4:  mov ecx, DWORD PTR [ebp-0x44]
 80527e7:  mov esi, DWORD PTR [ecx+esi*4+0x10]
 80527eb:  mov DWORD PTR [ebp-0x44], esi
 80527ee:  jmp 80526a1
 80527f3:  mov ebx, esi
 80527f5:  jmp 8052597
 80527fa:  mov eax, DWORD PTR [ebp+0x14]
 80527fd:  test eax, eax
 80527ff:  jne 805288c
 8052805:  mov edi, DWORD PTR [edx+0x14]
 8052808:  jmp 80526f4
 805280d:  mov edx, 0x0
 8052812:  test edx, edx
 8052814:  je 805282e
 8052816:  mov DWORD PTR [esp], 0x80d2a80
 805281d:  call 0
 8052822:  mov DWORD PTR [esp], 0x80d2840
 8052829:  call 0
 805282e:  mov eax, DWORD PTR [ebp-0x3c]
 8052831:  mov ecx, DWORD PTR [ebp-0x5c]
 8052834:  mov edx, 0xffffffe8
 805283a:  mov edi, DWORD PTR [ebp+0xc]
 805283d:  mov DWORD PTR [ecx+edx], eax
 8052840:  mov eax, DWORD PTR [ebp+0x14]
 8052843:  test eax, eax
 8052845:  je 805252a
 805284b:  jmp 805251d
 8052850:  mov eax, ds:0x80d0d98
 8052855:  mov DWORD PTR [ebp+0x8], eax
 8052858:  jmp 8052336
 805285d:  mov ecx, DWORD PTR [ebp+0x1c]
 8052860:  mov DWORD PTR [esp], ecx
 8052863:  call 808ad90
 8052868:  mov ebx, eax
 805286a:  jmp 8052597
 805286f:  mov eax, DWORD PTR [ebp-0x10]
 8052872:  mov ecx, edi
 8052874:  mov DWORD PTR [esp], eax
 8052877:  mov edx, DWORD PTR [ebp+0x18]
 805287a:  mov eax, DWORD PTR [ebp-0x44]
 805287d:  call 8052280
 8052882:  sub esp, 0x4
 8052885:  mov edi, eax
 8052887:  jmp 80526f4
 805288c:  mov ecx, DWORD PTR [edx+0x14]
 805288f:  mov eax, DWORD PTR [edx+0x10]
 8052892:  mov edx, DWORD PTR [edx+0x18]
 8052895:  mov DWORD PTR [esp], edx
 8052898:  mov edx, DWORD PTR [ebp+0x18]
 805289b:  call 8052280
 80528a0:  sub esp, 0x4
 80528a3:  mov edi, eax
 80528a5:  jmp 80526f4
 80528aa:  mov ecx, DWORD PTR [ebp+0xc]
 80528ad:  mov DWORD PTR [esp], ecx
 80528b0:  call 804eea0
 80528b5:  lea ebx, [eax+0x1]
 80528b8:  mov eax, DWORD PTR [ebp-0x48]
 80528bb:  mov DWORD PTR [esp], eax
 80528be:  call 804eea0
 80528c3:  mov edx, DWORD PTR [ebp-0x4c]
 80528c6:  lea eax, [edx+eax+0x1e]
 80528ca:  add eax, ebx
 80528cc:  mov DWORD PTR [esp], eax
 80528cf:  call 804d6f0
 80528d4:  test eax, eax
 80528d6:  mov DWORD PTR [ebp-0x58], eax
 80528d9:  je 80526db
 80528df:  mov DWORD PTR [esp+0x8], ebx
 80528e3:  mov ecx, DWORD PTR [ebp+0xc]
 80528e6:  add eax, 0x1c
 80528e9:  mov DWORD PTR [esp], eax
 80528ec:  mov DWORD PTR [esp+0x4], ecx
 80528f0:  call 806c310
 80528f5:  mov ebx, DWORD PTR [ebp-0x4c]
 80528f8:  add ebx, 0x1
 80528fb:  mov DWORD PTR [esp+0x8], ebx
 80528ff:  mov esi, eax
 8052901:  mov eax, DWORD PTR [ebp+0x8]
 8052904:  mov DWORD PTR [esp], esi
 8052907:  lea ebx, [esi+ebx]
 805290a:  mov DWORD PTR [esp+0x4], eax
 805290e:  call 804efc0
 8052913:  mov edx, DWORD PTR [ebp-0x48]
 8052916:  mov DWORD PTR [esp], ebx
 8052919:  mov DWORD PTR [esp+0x4], edx
 805291d:  call 806afe0
 8052922:  mov ecx, DWORD PTR [ebp-0x58]
 8052925:  mov eax, DWORD PTR [ebp+0x1c]
 8052928:  mov edx, DWORD PTR [ebp-0x44]
 805292b:  mov DWORD PTR [ecx], esi
 805292d:  mov DWORD PTR [ecx+0x4], eax
 8052930:  mov eax, ds:0x80d2e74
 8052935:  mov DWORD PTR [ecx+0x8], ebx
 8052938:  mov DWORD PTR [ecx+0x10], edx
 805293b:  mov DWORD PTR [ecx+0x14], edi
 805293e:  mov DWORD PTR [ecx+0xc], eax
 8052941:  mov eax, DWORD PTR [ebp-0x10]
 8052944:  mov DWORD PTR [ecx+0x18], eax
 8052947:  mov eax, 0x0
 805294c:  test eax, eax
 805294e:  je 805295c
 8052950:  mov DWORD PTR [esp], 0x80d2880
 8052957:  call 0
 805295c:  mov DWORD PTR [esp+0x8], 0x8051790
 8052964:  mov DWORD PTR [esp+0x4], 0x80d28a0
 805296c:  mov ecx, DWORD PTR [ebp-0x58]
 805296f:  mov DWORD PTR [esp], ecx
 8052972:  call 8073c10
 8052977:  mov ebx, eax
 8052979:  mov eax, 0x0
 805297e:  test eax, eax
 8052980:  je 805298e
 8052982:  mov DWORD PTR [esp], 0x80d2880
 8052989:  call 0
 805298e:  test ebx, ebx
 8052990:  je 805299d
 8052992:  mov edx, DWORD PTR [ebp-0x58]
 8052995:  cmp DWORD PTR [ebx], edx
 8052997:  je 80526db
 805299d:  mov ecx, DWORD PTR [ebp-0x58]
 80529a0:  mov DWORD PTR [esp], ecx
 80529a3:  call 804b4a0
 80529a8:  jmp 80526db

080529ad <_L_lock_1232>:
 80529ad:  lea ecx, ds:0x80d2868
 80529b3:  call 8050230
 80529b8:  jmp 8051cb8

080529bd <_L_unlock_1339>:
 80529bd:  lea eax, ds:0x80d2868
 80529c3:  call 8050260
 80529c8:  jmp 8051db8

080529cd <_L_unlock_1406>:
 80529cd:  lea eax, ds:0x80d2868
 80529d3:  call 8050260
 80529d8:  jmp 8051e56

080529dd <_L_unlock_1783>:
 80529dd:  lea eax, ds:0x80d2868
 80529e3:  call 8050260
 80529e8:  jmp 80520ee

080529ed <_L_lock_1899>:
 80529ed:  lea ecx, ds:0x80d2868
 80529f3:  call 8050230
 80529f8:  jmp 8052181

080529fd <_L_unlock_1909>:
 80529fd:  lea eax, ds:0x80d2868
 8052a03:  call 8050260
 8052a08:  jmp 80521a4
 8052a0d:  nop
 8052a0e:  nop
 8052a0f:  nop

08052a10 <_nl_find_domain>:
 8052a10:  push ebp
 8052a11:  mov ebp, esp
 8052a13:  push edi
 8052a14:  mov edi, eax
 8052a16:  push esi
 8052a17:  mov eax, 0x0
 8052a1c:  push ebx
 8052a1d:  mov ebx, edx
 8052a1f:  sub esp, 0x4c
 8052a22:  test eax, eax
 8052a24:  mov DWORD PTR [ebp-0x2c], ecx
 8052a27:  je 8052a35
 8052a29:  mov DWORD PTR [esp], 0x80d28c0
 8052a30:  call 0
 8052a35:  mov DWORD PTR [esp], edi
 8052a38:  call 804eea0
 8052a3d:  mov edx, DWORD PTR [ebp-0x2c]
 8052a40:  mov DWORD PTR [esp+0x28], 0x0
 8052a48:  mov DWORD PTR [esp+0x20], 0x0
 8052a50:  mov DWORD PTR [esp+0x1c], 0x0
 8052a58:  mov DWORD PTR [esp+0x24], edx
 8052a5c:  mov DWORD PTR [esp+0x18], 0x0
 8052a64:  add eax, 0x1
 8052a67:  mov DWORD PTR [esp+0x14], 0x0
 8052a6f:  mov DWORD PTR [esp+0x10], ebx
 8052a73:  mov DWORD PTR [esp+0xc], 0x0
 8052a7b:  mov DWORD PTR [esp+0x8], eax
 8052a7f:  mov DWORD PTR [esp+0x4], edi
 8052a83:  mov DWORD PTR [esp], 0x80d28e0
 8052a8a:  call 8054610
 8052a8f:  mov esi, eax
 8052a91:  mov eax, 0x0
 8052a96:  test eax, eax
 8052a98:  je 8052aa6
 8052a9a:  mov DWORD PTR [esp], 0x80d28c0
 8052aa1:  call 0
 8052aa6:  test esi, esi
 8052aa8:  je 8052b1a
 8052aaa:  mov ebx, DWORD PTR [esi+0x4]
 8052aad:  test ebx, ebx
 8052aaf:  jle 8052b08
 8052ab1:  mov ecx, DWORD PTR [esi+0x8]
 8052ab4:  test ecx, ecx
 8052ab6:  je 8052ac8
 8052ab8:  lea esp, [ebp-0xc]
 8052abb:  mov eax, esi
 8052abd:  pop ebx
 8052abe:  pop esi
 8052abf:  pop edi
 8052ac0:  pop ebp
 8052ac1:  ret 0x4
 8052ac4:  lea esi, [esi]
 8052ac8:  mov eax, DWORD PTR [esi+0x10]
 8052acb:  test eax, eax
 8052acd:  je 8052ab8
 8052acf:  mov ebx, esi
 8052ad1:  jmp 8052aec
 8052ad3:  nop
 8052ad4:  lea esi, [esi]
 8052ad8:  mov eax, DWORD PTR [ebx+0x10]
 8052adb:  mov edi, DWORD PTR [eax+0x8]
 8052ade:  test edi, edi
 8052ae0:  jne 8052ab8
 8052ae2:  mov eax, DWORD PTR [ebx+0x14]
 8052ae5:  add ebx, 0x4
 8052ae8:  test eax, eax
 8052aea:  je 8052ab8
 8052aec:  mov edx, DWORD PTR [eax+0x4]
 8052aef:  test edx, edx
 8052af1:  jg 8052ad8
 8052af3:  mov edx, DWORD PTR [ebp+0x8]
 8052af6:  call 8052c90
 8052afb:  nop
 8052afc:  lea esi, [esi]
 8052b00:  jmp 8052ad8
 8052b02:  lea esi, [esi]
 8052b08:  mov edx, DWORD PTR [ebp+0x8]
 8052b0b:  mov eax, esi
 8052b0d:  call 8052c90
 8052b12:  lea esi, [esi]
 8052b18:  jmp 8052ab1
 8052b1a:  mov DWORD PTR [esp], ebx
 8052b1d:  call 80542c0
 8052b22:  test eax, eax
 8052b24:  mov DWORD PTR [ebp-0x28], eax
 8052b27:  nop
 8052b28:  je 8052b59
 8052b2a:  mov DWORD PTR [esp], eax
 8052b2d:  call 804eea0
 8052b32:  lea edx, [eax+0x1]
 8052b35:  add eax, 0x13
 8052b38:  and eax, 0xfc
 8052b3b:  sub esp, eax
 8052b3d:  mov DWORD PTR [esp+0x8], edx
 8052b41:  mov edx, DWORD PTR [ebp-0x28]
 8052b44:  lea eax, [esp+0x3b]
 8052b48:  and eax, 0xf0
 8052b4b:  mov DWORD PTR [esp], eax
 8052b4e:  mov DWORD PTR [esp+0x4], edx
 8052b52:  call 804efc0
 8052b57:  mov ebx, eax
 8052b59:  lea eax, [ebp-0x20]
 8052b5c:  mov DWORD PTR [esp+0x14], eax
 8052b60:  lea eax, [ebp-0x1c]
 8052b63:  mov DWORD PTR [esp+0x10], eax
 8052b67:  lea eax, [ebp-0x18]
 8052b6a:  mov DWORD PTR [esp+0xc], eax
 8052b6e:  lea eax, [ebp-0x14]
 8052b71:  mov DWORD PTR [esp+0x8], eax
 8052b75:  lea eax, [ebp-0x10]
 8052b78:  mov DWORD PTR [esp+0x4], eax
 8052b7c:  mov DWORD PTR [esp], ebx
 8052b7f:  call 8054ab0
 8052b84:  mov DWORD PTR [ebp-0x24], eax
 8052b87:  add eax, 0x1
 8052b8a:  je 8052ab8
 8052b90:  mov eax, 0x0
 8052b95:  test eax, eax
 8052b97:  je 8052ba5
 8052b99:  mov DWORD PTR [esp], 0x80d28c0
 8052ba0:  call 0
 8052ba5:  mov DWORD PTR [esp], edi
 8052ba8:  call 804eea0
 8052bad:  mov edx, DWORD PTR [ebp-0x2c]
 8052bb0:  mov DWORD PTR [esp+0x28], 0x1
 8052bb8:  mov DWORD PTR [esp+0x4], edi
 8052bbc:  mov DWORD PTR [esp], 0x80d28e0
 8052bc3:  mov DWORD PTR [esp+0x24], edx
 8052bc7:  mov edx, DWORD PTR [ebp-0x14]
 8052bca:  add eax, 0x1
 8052bcd:  mov DWORD PTR [esp+0x8], eax
 8052bd1:  mov DWORD PTR [esp+0x20], edx
 8052bd5:  mov edx, DWORD PTR [ebp-0x20]
 8052bd8:  mov DWORD PTR [esp+0x1c], edx
 8052bdc:  mov edx, DWORD PTR [ebp-0x1c]
 8052bdf:  mov DWORD PTR [esp+0x18], edx
 8052be3:  mov edx, DWORD PTR [ebp-0x18]
 8052be6:  mov DWORD PTR [esp+0x14], edx
 8052bea:  mov edx, DWORD PTR [ebp-0x10]
 8052bed:  mov DWORD PTR [esp+0x10], edx
 8052bf1:  mov edx, DWORD PTR [ebp-0x24]
 8052bf4:  mov DWORD PTR [esp+0xc], edx
 8052bf8:  call 8054610
 8052bfd:  mov esi, eax
 8052bff:  mov eax, 0x0
 8052c04:  test eax, eax
 8052c06:  je 8052c14
 8052c08:  mov DWORD PTR [esp], 0x80d28c0
 8052c0f:  call 0
 8052c14:  test esi, esi
 8052c16:  je 8052c26
 8052c18:  mov ebx, DWORD PTR [esi+0x4]
 8052c1b:  test ebx, ebx
 8052c1d:  jle 8052c7a
 8052c1f:  mov ecx, DWORD PTR [esi+0x8]
 8052c22:  test ecx, ecx
 8052c24:  je 8052c45
 8052c26:  test BYTE PTR [ebp-0x24], 0x1
 8052c2a:  je 8052ab8
 8052c30:  mov eax, DWORD PTR [ebp-0x20]
 8052c33:  mov DWORD PTR [esp], eax
 8052c36:  call 804b4a0
 8052c3b:  nop
 8052c3c:  lea esi, [esi]
 8052c40:  jmp 8052ab8
 8052c45:  mov eax, DWORD PTR [esi+0x10]
 8052c48:  test eax, eax
 8052c4a:  je 8052c26
 8052c4c:  mov ebx, esi
 8052c4e:  xchg ax, ax
 8052c50:  jmp 8052c66
 8052c52:  mov eax, DWORD PTR [ebx+0x10]
 8052c55:  mov eax, DWORD PTR [eax+0x8]
 8052c58:  test eax, eax
 8052c5a:  jne 8052c26
 8052c5c:  mov eax, DWORD PTR [ebx+0x14]
 8052c5f:  add ebx, 0x4
 8052c62:  test eax, eax
 8052c64:  je 8052c26
 8052c66:  mov edx, DWORD PTR [eax+0x4]
 8052c69:  test edx, edx
 8052c6b:  jg 8052c52
 8052c6d:  mov edx, DWORD PTR [ebp+0x8]
 8052c70:  call 8052c90
 8052c75:  lea esi, [esi]
 8052c78:  jmp 8052c52
 8052c7a:  mov edx, DWORD PTR [ebp+0x8]
 8052c7d:  mov eax, esi
 8052c7f:  call 8052c90
 8052c84:  lea esi, [esi]
 8052c88:  jmp 8052c1f
 8052c8a:  nop
 8052c8b:  nop
 8052c8c:  nop
 8052c8d:  nop
 8052c8e:  nop
 8052c8f:  nop

08052c90 <_nl_load_domain>:
 8052c90:  push ebp
 8052c91:  mov ebp, esp
 8052c93:  push edi
 8052c94:  push esi
 8052c95:  push ebx
 8052c96:  sub esp, 0x100
 8052c9c:  mov DWORD PTR [ebp-0xdc], edx
 8052ca2:  mov edx, DWORD PTR gs:0x8
 8052ca9:  cmp DWORD PTR ds:0x80d28ec, edx
 8052caf:  mov DWORD PTR [ebp-0xd8], eax
 8052cb5:  je 8052cdc
 8052cb7:  xor eax, eax
 8052cb9:  mov ecx, 0x1
 8052cbe:  cmp DWORD PTR gs:0xc, 0x0
 8052cc6:  je 8052cc9
 8052cc8:  cmpxchg DWORD PTR ds:0x80d28e4, ecx
 8052cd0:  jne 8053cf2
 8052cd6:  mov DWORD PTR ds:0x80d28ec, edx
 8052cdc:  mov edx, DWORD PTR ds:0x80d28e8
 8052ce2:  lea eax, [edx+0x1]
 8052ce5:  mov ds:0x80d28e8, eax
 8052cea:  mov eax, DWORD PTR [ebp-0xd8]
 8052cf0:  mov ecx, DWORD PTR [eax+0x4]
 8052cf3:  test ecx, ecx
 8052cf5:  je 8052d30
 8052cf7:  test edx, edx
 8052cf9:  mov DWORD PTR ds:0x80d28e8, edx
 8052cff:  jne 8052d23
 8052d01:  mov DWORD PTR ds:0x80d28ec, 0x0
 8052d0b:  cmp DWORD PTR gs:0xc, 0x0
 8052d13:  je 8052d16
 8052d15:  sub DWORD PTR ds:0x80d28e4, 0x1
 8052d1d:  jne 8053d02
 8052d23:  lea esp, [ebp-0xc]
 8052d26:  pop ebx
 8052d27:  pop esi
 8052d28:  pop edi
 8052d29:  pop ebp
 8052d2a:  ret
 8052d2b:  nop
 8052d2c:  lea esi, [esi]
 8052d30:  mov DWORD PTR [eax+0x4], 0xffffffff
 8052d37:  mov DWORD PTR [eax+0x8], 0x0
 8052d3e:  mov eax, DWORD PTR [eax]
 8052d40:  test eax, eax
 8052d42:  je 8052e30
 8052d48:  mov DWORD PTR [esp+0x4], 0x0
 8052d50:  mov DWORD PTR [esp], eax
 8052d53:  call 804f1fa
 8052d58:  cmp eax, 0xff
 8052d5b:  mov ebx, eax
 8052d5d:  je 8052e30
 8052d63:  lea eax, [ebp-0x78]
 8052d66:  mov DWORD PTR [esp+0x8], eax
 8052d6a:  mov DWORD PTR [esp+0x4], ebx
 8052d6e:  mov DWORD PTR [esp], 0x3
 8052d75:  call 804f1b0
 8052d7a:  test eax, eax
 8052d7c:  jne 8052ee4
 8052d82:  mov edi, DWORD PTR [ebp-0x48]
 8052d85:  mov ecx, DWORD PTR [ebp-0x4c]
 8052d88:  test edi, edi
 8052d8a:  mov DWORD PTR [ebp-0xe4], ecx
 8052d90:  jne 8052ee4
 8052d96:  cmp ecx, 0x2f
 8052d99:  jbe 8052ee4
 8052d9f:  mov DWORD PTR [esp+0x14], 0x0
 8052da7:  mov DWORD PTR [esp+0x10], ebx
 8052dab:  mov DWORD PTR [esp+0xc], 0x2
 8052db3:  mov DWORD PTR [esp+0x8], 0x1
 8052dbb:  mov DWORD PTR [esp+0x4], ecx
 8052dbf:  mov DWORD PTR [esp], 0x0
 8052dc6:  call 8050000
 8052dcb:  mov DWORD PTR [ebp-0xd0], eax
 8052dd1:  add eax, 0x1
 8052dd4:  je 8052e7c
 8052dda:  mov eax, 0x6
 8052ddf:  int 0x80
 8052de1:  mov DWORD PTR [ebp-0xcc], 0x1
 8052deb:  mov ecx, DWORD PTR [ebp-0xd0]
 8052df1:  mov eax, DWORD PTR [ecx]
 8052df3:  cmp eax, 0x950412de
 8052df8:  je 8052ef0
 8052dfe:  cmp eax, 0xde120495
 8052e03:  je 8052ef0
 8052e09:  mov esi, DWORD PTR [ebp-0xcc]
 8052e0f:  test esi, esi
 8052e11:  je 80534e8
 8052e17:  mov ebx, DWORD PTR [ebp-0xe4]
 8052e1d:  mov DWORD PTR [esp], ecx
 8052e20:  mov DWORD PTR [esp+0x4], ebx
 8052e24:  call 8050050
 8052e29:  lea esi, [esi]
 8052e30:  mov eax, DWORD PTR [ebp-0xd8]
 8052e36:  mov DWORD PTR [eax+0x4], 0x1
 8052e3d:  mov eax, ds:0x80d28e8
 8052e42:  sub eax, 0x1
 8052e45:  test eax, eax
 8052e47:  mov ds:0x80d28e8, eax
 8052e4c:  jne 8052d23
 8052e52:  mov DWORD PTR ds:0x80d28ec, 0x0
 8052e5c:  cmp DWORD PTR gs:0xc, 0x0
 8052e64:  je 8052e67
 8052e66:  sub DWORD PTR ds:0x80d28e4, 0x1
 8052e6e:  jne 8053d12
 8052e74:  lea esp, [ebp-0xc]
 8052e77:  pop ebx
 8052e78:  pop esi
 8052e79:  pop edi
 8052e7a:  pop ebp
 8052e7b:  ret
 8052e7c:  mov esi, DWORD PTR [ebp-0xe4]
 8052e82:  mov DWORD PTR [esp], esi
 8052e85:  call 804d6f0
 8052e8a:  test eax, eax
 8052e8c:  mov DWORD PTR [ebp-0xd0], eax
 8052e92:  je 8052ee4
 8052e94:  mov edi, eax
 8052e96:  mov eax, gs:0x0
 8052e9c:  mov esi, DWORD PTR [ebp-0xe4]
 8052ea2:  mov DWORD PTR [ebp-0xec], eax
 8052ea8:  jmp 8052ebe
 8052eaa:  lea esi, [esi]
 8052eb0:  test eax, eax
 8052eb2:  jle 8052ee4
 8052eb4:  sub esi, eax
 8052eb6:  je 805380c
 8052ebc:  add edi, eax
 8052ebe:  mov DWORD PTR [esp+0x8], esi
 8052ec2:  mov DWORD PTR [esp+0x4], edi
 8052ec6:  mov DWORD PTR [esp], ebx
 8052ec9:  call 804f25a
 8052ece:  cmp eax, 0xff
 8052ed1:  jne 8052eb0
 8052ed3:  mov eax, 0xffffffe8
 8052ed8:  mov edx, DWORD PTR [ebp-0xec]
 8052ede:  cmp DWORD PTR [edx+eax], 0x4
 8052ee2:  je 8052ebe
 8052ee4:  mov eax, 0x6
 8052ee9:  int 0x80
 8052eeb:  jmp 8052e30
 8052ef0:  mov DWORD PTR [esp], 0x68
 8052ef7:  call 804d6f0
 8052efc:  test eax, eax
 8052efe:  mov edi, eax
 8052f00:  je 8052e30
 8052f06:  mov edx, DWORD PTR [ebp-0xd0]
 8052f0c:  mov ecx, DWORD PTR [ebp-0xcc]
 8052f12:  mov ebx, DWORD PTR [ebp-0xe4]
 8052f18:  mov eax, DWORD PTR [ebp-0xd8]
 8052f1e:  mov DWORD PTR [edi], edx
 8052f20:  mov DWORD PTR [edi+0x4], ecx
 8052f23:  mov DWORD PTR [edi+0x8], ebx
 8052f26:  cmp DWORD PTR [edx], 0x950412de
 8052f2c:  mov DWORD PTR [eax+0x8], edi
 8052f2f:  mov DWORD PTR [edi+0x10], 0x0
 8052f36:  setne al
 8052f39:  movzx edx, al
 8052f3c:  test edx, edx
 8052f3e:  mov DWORD PTR [edi+0xc], edx
 8052f41:  jne 8053620
 8052f47:  mov eax, DWORD PTR [ebp-0xd0]
 8052f4d:  mov ecx, DWORD PTR [eax+0x4]
 8052f50:  mov eax, ecx
 8052f52:  sar eax, 0x10
 8052f55:  cmp eax, 0x1
 8052f58:  jbe 8052fa0
 8052f5a:  mov eax, DWORD PTR [edi+0x10]
 8052f5d:  mov DWORD PTR [esp], eax
 8052f60:  call 804b4a0
 8052f65:  mov ebx, DWORD PTR [ebp-0xcc]
 8052f6b:  test ebx, ebx
 8052f6d:  jne 80534a8
 8052f73:  mov ebx, DWORD PTR [ebp-0xd0]
 8052f79:  mov DWORD PTR [esp], ebx
 8052f7c:  call 804b4a0
 8052f81:  mov DWORD PTR [esp], edi
 8052f84:  call 804b4a0
 8052f89:  mov esi, DWORD PTR [ebp-0xd8]
 8052f8f:  mov DWORD PTR [esi+0x8], 0x0
 8052f96:  jmp 8052e30
 8052f9b:  nop
 8052f9c:  lea esi, [esi]
 8052fa0:  test edx, edx
 8052fa2:  jne 8053640
 8052fa8:  mov ebx, DWORD PTR [ebp-0xd0]
 8052fae:  mov eax, DWORD PTR [ebx+0x8]
 8052fb1:  mov ebx, DWORD PTR [edi+0xc]
 8052fb4:  mov DWORD PTR [edi+0x14], eax
 8052fb7:  test ebx, ebx
 8052fb9:  jne 8053630
 8052fbf:  mov edx, DWORD PTR [ebp-0xd0]
 8052fc5:  mov eax, DWORD PTR [edx+0xc]
 8052fc8:  mov edx, DWORD PTR [edi+0xc]
 8052fcb:  add eax, DWORD PTR [ebp-0xd0]
 8052fd1:  test edx, edx
 8052fd3:  mov DWORD PTR [edi+0x18], eax
 8052fd6:  jne 8053660
 8052fdc:  mov esi, DWORD PTR [ebp-0xd0]
 8052fe2:  mov eax, DWORD PTR [esi+0x10]
 8052fe5:  add eax, DWORD PTR [ebp-0xd0]
 8052feb:  mov DWORD PTR [edi+0x1c], eax
 8052fee:  mov eax, DWORD PTR [edi+0xc]
 8052ff1:  test eax, eax
 8052ff3:  jne 8053650
 8052ff9:  mov ebx, DWORD PTR [ebp-0xd0]
 8052fff:  mov eax, DWORD PTR [ebx+0x14]
 8053002:  xor edx, edx
 8053004:  cmp eax, 0x2
 8053007:  mov DWORD PTR [edi+0x2c], eax
 805300a:  jbe 8053022
 805300c:  mov eax, DWORD PTR [edi+0xc]
 805300f:  test eax, eax
 8053011:  jne 805369d
 8053017:  mov edx, DWORD PTR [ebp-0xd0]
 805301d:  mov eax, DWORD PTR [edx+0x18]
 8053020:  add edx, eax
 8053022:  mov ebx, DWORD PTR [edi+0xc]
 8053025:  test cx, cx
 8053028:  mov DWORD PTR [edi+0x30], edx
 805302b:  mov DWORD PTR [ebp-0xe8], ebx
 8053031:  mov DWORD PTR [edi+0x34], ebx
 8053034:  je 8053430
 805303a:  mov eax, DWORD PTR [edi+0x30]
 805303d:  test eax, eax
 805303f:  je 8052f5a
 8053045:  mov eax, DWORD PTR [ebp-0xe8]
 805304b:  test eax, eax
 805304d:  jne 80536b1
 8053053:  mov eax, DWORD PTR [ebp-0xd0]
 8053059:  mov eax, DWORD PTR [eax+0x24]
 805305c:  mov DWORD PTR [ebp-0xc8], eax
 8053062:  mov eax, DWORD PTR [ebp-0xc8]
 8053068:  test eax, eax
 805306a:  je 8053430
 8053070:  mov eax, DWORD PTR [ebp-0xe8]
 8053076:  test eax, eax
 8053078:  jne 80536ec
 805307e:  mov ebx, DWORD PTR [ebp-0xd0]
 8053084:  mov esi, DWORD PTR [ebp-0xd0]
 805308a:  mov ebx, DWORD PTR [ebx+0x1c]
 805308d:  mov edx, DWORD PTR [esi+0x20]
 8053090:  mov DWORD PTR [ebp-0xc4], ebx
 8053096:  mov ebx, esi
 8053098:  add ebx, edx
 805309a:  mov edx, DWORD PTR [ebp-0xc4]
 80530a0:  lea eax, [edx*4+0x10]
 80530a7:  sub esp, eax
 80530a9:  lea ecx, [esp+0x27]
 80530ad:  and ecx, 0xf0
 80530b0:  test edx, edx
 80530b2:  mov DWORD PTR [ebp-0xe0], ecx
 80530b8:  je 805311b
 80530ba:  xor ecx, ecx
 80530bc:  lea esi, [esi]
 80530c0:  mov esi, DWORD PTR [edi+0xc]
 80530c3:  test esi, esi
 80530c5:  jne 8053500
 80530cb:  mov edx, DWORD PTR [ebp-0xd0]
 80530d1:  mov eax, DWORD PTR [ebx+ecx*8]
 80530d4:  add edx, DWORD PTR [ebx+ecx*8+0x4]
 80530d8:  test eax, eax
 80530da:  je 8052f5a
 80530e0:  cmp BYTE PTR [edx+eax-0x1], 0x0
 80530e5:  jne 8052f5a
 80530eb:  movzx eax, BYTE PTR [edx]
 80530ee:  cmp al, 0x50
 80530f0:  je 8053518
 80530f6:  cmp al, 0x49
 80530f8:  jne 8053105
 80530fa:  cmp BYTE PTR [edx+0x1], 0x0
 80530fe:  mov eax, 0x80b0516
 8053103:  je 8053107
 8053105:  xor eax, eax
 8053107:  mov edx, DWORD PTR [ebp-0xe0]
 805310d:  mov DWORD PTR [edx+ecx*4], eax
 8053110:  add ecx, 0x1
 8053113:  cmp ecx, DWORD PTR [ebp-0xc4]
 8053119:  jb 80530c0
 805311b:  mov ebx, DWORD PTR [ebp-0xe8]
 8053121:  test ebx, ebx
 8053123:  jne 80537ef
 8053129:  mov ebx, DWORD PTR [ebp-0xd0]
 805312f:  mov esi, DWORD PTR [ebp-0xd0]
 8053135:  add ebx, DWORD PTR [ebx+0x28]
 8053138:  mov eax, DWORD PTR [esi+0x2c]
 805313b:  mov DWORD PTR [ebp-0xc0], ebx
 8053141:  add eax, DWORD PTR [ebp-0xd0]
 8053147:  mov DWORD PTR [ebp-0xb8], 0x0
 8053151:  mov DWORD PTR [ebp-0x88], 0x0
 805315b:  mov DWORD PTR [ebp-0xbc], eax
 8053161:  mov eax, DWORD PTR [edi+0x2c]
 8053164:  shl eax, 0x2
 8053167:  mov DWORD PTR [ebp-0xb4], eax
 805316d:  lea esi, [esi]
 8053170:  mov DWORD PTR [ebp-0x8c], 0x0
 805317a:  mov ecx, DWORD PTR [ebp-0xe8]
 8053180:  test ecx, ecx
 8053182:  je 8053670
 8053188:  mov edx, DWORD PTR [ebp-0x8c]
 805318e:  test edx, edx
 8053190:  jne 80536c7
 8053196:  mov edx, DWORD PTR [ebp-0x88]
 805319c:  mov ecx, DWORD PTR [ebp-0xc0]
 80531a2:  mov eax, DWORD PTR [ecx+edx*4]
 80531a5:  mov edx, DWORD PTR [ebp-0xd0]
 80531ab:  bswap eax
 80531ad:  add edx, eax
 80531af:  mov eax, DWORD PTR [edx+0x8]
 80531b2:  bswap eax
 80531b4:  add eax, 0x1
 80531b7:  setne al
 80531ba:  xor esi, esi
 80531bc:  test al, al
 80531be:  je 8053210
 80531c0:  mov eax, DWORD PTR [ebp-0xe8]
 80531c6:  lea ebx, [edx+0x4]
 80531c9:  test eax, eax
 80531cb:  jne 805371c
 80531d1:  xor eax, eax
 80531d3:  jmp 8053203
 80531d5:  lea esi, [esi]
 80531d8:  cmp eax, DWORD PTR [ebp-0xc4]
 80531de:  jae 8052f5a
 80531e4:  mov edx, DWORD PTR [ebp-0xe0]
 80531ea:  mov eax, DWORD PTR [edx+eax*4]
 80531ed:  test eax, eax
 80531ef:  je 805370d
 80531f5:  mov DWORD PTR [esp], eax
 80531f8:  add ebx, 0x8
 80531fb:  call 804eea0
 8053200:  lea eax, [esi+eax]
 8053203:  mov esi, eax
 8053205:  mov eax, DWORD PTR [ebx+0x4]
 8053208:  add esi, DWORD PTR [ebx]
 805320a:  cmp eax, 0xff
 805320d:  jne 80531d8
 805320f:  nop
 8053210:  mov ebx, DWORD PTR [ebp-0x8c]
 8053216:  mov DWORD PTR [ebp+ebx*4-0x18], esi
 805321a:  add ebx, 0x1
 805321d:  cmp ebx, 0x2
 8053220:  mov DWORD PTR [ebp-0x8c], ebx
 8053226:  jne 805317a
 805322c:  mov esi, DWORD PTR [ebp-0x14]
 805322f:  add DWORD PTR [ebp-0xb4], esi
 8053235:  mov eax, DWORD PTR [ebp-0x18]
 8053238:  add DWORD PTR [ebp-0xb8], 0x1
 805323f:  add DWORD PTR [ebp-0xb4], eax
 8053245:  add DWORD PTR [ebp-0x88], 0x1
 805324c:  mov edx, DWORD PTR [ebp-0x88]
 8053252:  cmp DWORD PTR [ebp-0xc8], edx
 8053258:  ja 8053170
 805325e:  mov eax, DWORD PTR [ebp-0xb8]
 8053264:  test eax, eax
 8053266:  je 8053430
 805326c:  mov eax, DWORD PTR [ebp-0xb8]
 8053272:  shl eax, 0x4
 8053275:  add eax, DWORD PTR [ebp-0xb4]
 805327b:  mov DWORD PTR [esp], eax
 805327e:  call 804d6f0
 8053283:  test eax, eax
 8053285:  mov DWORD PTR [ebp-0xd4], eax
 805328b:  je 8052f5a
 8053291:  mov DWORD PTR [edi+0x10], eax
 8053294:  mov eax, DWORD PTR [ebp-0xb8]
 805329a:  mov ecx, DWORD PTR [ebp-0xd4]
 80532a0:  mov DWORD PTR [ebp-0x90], 0x0
 80532aa:  mov DWORD PTR [ebp-0xac], 0x0
 80532b4:  shl eax, 0x3
 80532b7:  add ecx, eax
 80532b9:  add eax, ecx
 80532bb:  mov DWORD PTR [ebp-0x80], eax
 80532be:  mov eax, DWORD PTR [edi+0x2c]
 80532c1:  mov ebx, DWORD PTR [ebp-0x80]
 80532c4:  mov DWORD PTR [ebp-0x84], ecx
 80532ca:  lea eax, [ebx+eax*4]
 80532cd:  mov DWORD PTR [ebp-0x94], eax
 80532d3:  mov ebx, DWORD PTR [edi+0xc]
 80532d6:  xor ecx, ecx
 80532d8:  test ebx, ebx
 80532da:  je 80537c4
 80532e0:  test ecx, ecx
 80532e2:  jne 8053919
 80532e8:  mov esi, DWORD PTR [ebp-0x90]
 80532ee:  mov edx, DWORD PTR [ebp-0xc0]
 80532f4:  mov eax, DWORD PTR [edx+esi*4]
 80532f7:  mov edx, DWORD PTR [ebp-0xd0]
 80532fd:  bswap eax
 80532ff:  add edx, eax
 8053301:  mov eax, DWORD PTR [edx+0x8]
 8053304:  bswap eax
 8053306:  add eax, 0x1
 8053309:  setne al
 805330c:  test al, al
 805330e:  je 805333c
 8053310:  add edx, 0x4
 8053313:  test ebx, ebx
 8053315:  je 8053334
 8053317:  jmp 80534d9
 805331c:  lea esi, [esi]
 8053320:  mov esi, DWORD PTR [ebp-0xe0]
 8053326:  mov eax, DWORD PTR [esi+eax*4]
 8053329:  test eax, eax
 805332b:  je 8053764
 8053331:  add edx, 0x8
 8053334:  mov eax, DWORD PTR [edx+0x4]
 8053337:  cmp eax, 0xff
 805333a:  jne 8053320
 805333c:  add ecx, 0x1
 805333f:  cmp ecx, 0x2
 8053342:  jne 80532d8
 8053344:  mov eax, DWORD PTR [ebp-0xac]
 805334a:  mov DWORD PTR [ebp-0x7c], 0x0
 8053351:  shl eax, 0x3
 8053354:  test ebx, ebx
 8053356:  mov DWORD PTR [ebp-0x98], eax
 805335c:  je 8053401
 8053362:  mov eax, DWORD PTR [ebp-0x7c]
 8053365:  test eax, eax
 8053367:  jne 8053b65
 805336d:  mov edx, DWORD PTR [ebp-0x90]
 8053373:  mov ecx, DWORD PTR [ebp-0xc0]
 8053379:  mov eax, DWORD PTR [ecx+edx*4]
 805337c:  mov edx, DWORD PTR [ebp-0xd0]
 8053382:  bswap eax
 8053384:  add edx, eax
 8053386:  mov eax, DWORD PTR [edx]
 8053388:  bswap eax
 805338a:  mov ecx, DWORD PTR [ebp-0x7c]
 805338d:  add eax, DWORD PTR [ebp-0xd0]
 8053393:  test ecx, ecx
 8053395:  mov DWORD PTR [ebp-0xa8], eax
 805339b:  mov eax, DWORD PTR [ebp-0xd4]
 80533a1:  je 80533a9
 80533a3:  mov eax, DWORD PTR [ebp-0x84]
 80533a9:  add eax, DWORD PTR [ebp-0x98]
 80533af:  test ebx, ebx
 80533b1:  mov DWORD PTR [ebp-0xa0], eax
 80533b7:  jne 805392d
 80533bd:  cmp DWORD PTR [edx+0x8], 0xff
 80533c1:  sete al
 80533c4:  test al, al
 80533c6:  je 8053835
 80533cc:  test ebx, ebx
 80533ce:  jne 8053b8d
 80533d4:  mov eax, DWORD PTR [edx+0x4]
 80533d7:  mov ebx, DWORD PTR [ebp-0xa0]
 80533dd:  mov esi, DWORD PTR [ebp-0xa8]
 80533e3:  mov DWORD PTR [ebx], eax
 80533e5:  mov DWORD PTR [ebx+0x4], esi
 80533e8:  add DWORD PTR [ebp-0x7c], 0x1
 80533ec:  cmp DWORD PTR [ebp-0x7c], 0x2
 80533f0:  je 805375d
 80533f6:  mov ebx, DWORD PTR [edi+0xc]
 80533f9:  test ebx, ebx
 80533fb:  jne 8053362
 8053401:  mov esi, DWORD PTR [ebp-0x7c]
 8053404:  test esi, esi
 8053406:  jne 8053b79
 805340c:  mov ecx, DWORD PTR [ebp-0x90]
 8053412:  mov esi, DWORD PTR [ebp-0xc0]
 8053418:  mov eax, DWORD PTR [esi+ecx*4]
 805341b:  mov edx, DWORD PTR [ebp-0xd0]
 8053421:  add edx, eax
 8053423:  mov eax, DWORD PTR [edx]
 8053425:  jmp 805338a
 805342a:  lea esi, [esi]
 8053430:  mov DWORD PTR [edi+0x20], 0x0
 8053437:  mov DWORD PTR [edi+0x24], 0x0
 805343e:  mov DWORD PTR [edi+0x28], 0x0
 8053445:  mov eax, 0x0
 805344a:  test eax, eax
 805344c:  mov DWORD PTR [edi+0x38], 0x0
 8053453:  mov DWORD PTR [edi+0x3c], 0x0
 805345a:  je 805346f
 805345c:  lea eax, [edi+0x40]
 805345f:  mov DWORD PTR [esp+0x4], 0x0
 8053467:  mov DWORD PTR [esp], eax
 805346a:  call 0
 805346f:  lea eax, [ebp-0x10]
 8053472:  mov ecx, 0x80c2c93
 8053477:  mov DWORD PTR [esp+0x4], eax
 805347b:  mov DWORD PTR [esp], 0x0
 8053482:  mov edx, DWORD PTR [ebp-0xdc]
 8053488:  mov eax, DWORD PTR [ebp-0xd8]
 805348e:  call 8051820
 8053493:  lea ecx, [edi+0x64]
 8053496:  lea edx, [edi+0x60]
 8053499:  sub esp, 0x8
 805349c:  call 8055840
 80534a1:  jmp 8052e30
 80534a6:  xchg ax, ax
 80534a8:  mov edx, DWORD PTR [ebp-0xe4]
 80534ae:  mov DWORD PTR [esp+0x4], edx
 80534b2:  mov ecx, DWORD PTR [ebp-0xd0]
 80534b8:  mov DWORD PTR [esp], ecx
 80534bb:  call 8050050
 80534c0:  jmp 8052f81
 80534c5:  mov esi, DWORD PTR [ebp-0xe0]
 80534cb:  mov eax, DWORD PTR [esi+eax*4]
 80534ce:  test eax, eax
 80534d0:  je 8053764
 80534d6:  add edx, 0x8
 80534d9:  mov eax, DWORD PTR [edx+0x4]
 80534dc:  bswap eax
 80534de:  cmp eax, 0xff
 80534e1:  jne 80534c5
 80534e3:  jmp 805333c
 80534e8:  mov esi, DWORD PTR [ebp-0xd0]
 80534ee:  mov DWORD PTR [esp], esi
 80534f1:  call 804b4a0
 80534f6:  jmp 8052e30
 80534fb:  nop
 80534fc:  lea esi, [esi]
 8053500:  mov edx, DWORD PTR [ebp-0xd0]
 8053506:  mov eax, DWORD PTR [ebx+ecx*8+0x4]
 805350a:  bswap eax
 805350c:  add edx, eax
 805350e:  mov eax, DWORD PTR [ebx+ecx*8]
 8053511:  bswap eax
 8053513:  jmp 80530d8
 8053518:  cmp BYTE PTR [edx+0x1], 0x52
 805351c:  jne 8053105
 8053522:  cmp BYTE PTR [edx+0x2], 0x49
 8053526:  jne 8053105
 805352c:  movzx esi, BYTE PTR [edx+0x3]
 8053530:  mov eax, esi
 8053532:  cmp al, 0x64
 8053534:  sete BYTE PTR [ebp-0x99]
 805353b:  cmp al, 0x69
 805353d:  sete BYTE PTR [ebp-0x9a]
 8053544:  cmp BYTE PTR [ebp-0x99], 0x0
 805354b:  jne 8053576
 805354d:  cmp BYTE PTR [ebp-0x9a], 0x0
 8053554:  jne 8053576
 8053556:  cmp al, 0x6f
 8053558:  je 8053576
 805355a:  cmp al, 0x75
 805355c:  lea esi, [esi]
 8053560:  je 8053576
 8053562:  cmp al, 0x78
 8053564:  lea esi, [esi]
 8053568:  je 8053576
 805356a:  cmp al, 0x58
 805356c:  lea esi, [esi]
 8053570:  jne 8053105
 8053576:  movzx eax, BYTE PTR [edx+0x4]
 805357a:  cmp al, 0x38
 805357c:  lea esi, [esi]
 8053580:  je 8053822
 8053586:  cmp al, 0x31
 8053588:  je 80538c9
 805358e:  cmp al, 0x33
 8053590:  jne 805393d
 8053596:  cmp BYTE PTR [edx+0x5], 0x32
 805359a:  lea esi, [esi]
 80535a0:  jne 8053105
 80535a6:  cmp BYTE PTR [edx+0x6], 0x0
 80535aa:  lea esi, [esi]
 80535b0:  jne 8053105
 80535b6:  cmp BYTE PTR [ebp-0x99], 0x0
 80535bd:  mov eax, 0x80b2ab3
 80535c2:  jne 8053107
 80535c8:  cmp BYTE PTR [ebp-0x9a], 0x0
 80535cf:  mov eax, 0x80b5693
 80535d4:  jne 8053107
 80535da:  mov edx, esi
 80535dc:  mov eax, 0x80b4317
 80535e1:  cmp dl, 0x6f
 80535e4:  je 8053107
 80535ea:  mov edx, esi
 80535ec:  mov eax, 0x80b1ed1
 80535f1:  cmp dl, 0x75
 80535f4:  je 8053107
 80535fa:  mov edx, esi
 80535fc:  mov eax, 0x80b002a
 8053601:  cmp dl, 0x78
 8053604:  je 8053107
 805360a:  mov eax, esi
 805360c:  cmp al, 0x58
 805360e:  jne 8053cad
 8053614:  mov eax, 0x80b04e1
 8053619:  jmp 8053107
 805361e:  xchg ax, ax
 8053620:  mov esi, DWORD PTR [ebp-0xd0]
 8053626:  mov ecx, DWORD PTR [esi+0x4]
 8053629:  bswap ecx
 805362b:  jmp 8052f50
 8053630:  mov esi, DWORD PTR [ebp-0xd0]
 8053636:  mov eax, DWORD PTR [esi+0xc]
 8053639:  bswap eax
 805363b:  jmp 8052fc8
 8053640:  mov edx, DWORD PTR [ebp-0xd0]
 8053646:  mov eax, DWORD PTR [edx+0x8]
 8053649:  bswap eax
 805364b:  jmp 8052fb1
 8053650:  mov edx, DWORD PTR [ebp-0xd0]
 8053656:  mov eax, DWORD PTR [edx+0x14]
 8053659:  bswap eax
 805365b:  jmp 8053002
 8053660:  mov ebx, DWORD PTR [ebp-0xd0]
 8053666:  mov eax, DWORD PTR [ebx+0x10]
 8053669:  bswap eax
 805366b:  jmp 8052fe5
 8053670:  mov eax, DWORD PTR [ebp-0x8c]
 8053676:  test eax, eax
 8053678:  jne 80536db
 805367a:  mov edx, DWORD PTR [ebp-0x88]
 8053680:  mov ecx, DWORD PTR [ebp-0xc0]
 8053686:  mov eax, DWORD PTR [ecx+edx*4]
 8053689:  mov edx, DWORD PTR [ebp-0xd0]
 805368f:  add edx, eax
 8053691:  cmp DWORD PTR [edx+0x8], 0xff
 8053695:  setne al
 8053698:  jmp 80531ba
 805369d:  mov esi, DWORD PTR [ebp-0xd0]
 80536a3:  mov edx, esi
 80536a5:  mov eax, DWORD PTR [esi+0x18]
 80536a8:  bswap eax
 80536aa:  add edx, eax
 80536ac:  jmp 8053022
 80536b1:  mov esi, DWORD PTR [ebp-0xd0]
 80536b7:  mov esi, DWORD PTR [esi+0x24]
 80536ba:  bswap esi
 80536bc:  mov DWORD PTR [ebp-0xc8], esi
 80536c2:  jmp 8053062
 80536c7:  mov ebx, DWORD PTR [ebp-0x88]
 80536cd:  mov esi, DWORD PTR [ebp-0xbc]
 80536d3:  mov eax, DWORD PTR [esi+ebx*4]
 80536d6:  jmp 80531a5
 80536db:  mov ebx, DWORD PTR [ebp-0x88]
 80536e1:  mov esi, DWORD PTR [ebp-0xbc]
 80536e7:  mov eax, DWORD PTR [esi+ebx*4]
 80536ea:  jmp 8053689
 80536ec:  mov edx, DWORD PTR [ebp-0xd0]
 80536f2:  mov ebx, DWORD PTR [ebp-0xd0]
 80536f8:  mov eax, DWORD PTR [edx+0x1c]
 80536fb:  mov edx, DWORD PTR [edx+0x20]
 80536fe:  bswap eax
 8053700:  bswap edx
 8053702:  mov DWORD PTR [ebp-0xc4], eax
 8053708:  jmp 8053098
 805370d:  mov edx, DWORD PTR [ebp-0x8c]
 8053713:  mov DWORD PTR [ebp+edx*4-0x18], esi
 8053717:  jmp 8053245
 805371c:  xor edx, edx
 805371e:  jmp 8053747
 8053720:  cmp DWORD PTR [ebp-0xc4], eax
 8053726:  jbe 8052f5a
 805372c:  mov ecx, DWORD PTR [ebp-0xe0]
 8053732:  mov eax, DWORD PTR [ecx+eax*4]
 8053735:  test eax, eax
 8053737:  je 805370d
 8053739:  mov DWORD PTR [esp], eax
 805373c:  add ebx, 0x8
 805373f:  call 804eea0
 8053744:  lea edx, [esi+eax]
 8053747:  mov eax, DWORD PTR [ebx]
 8053749:  bswap eax
 805374b:  lea esi, [eax+edx]
 805374e:  mov eax, DWORD PTR [ebx+0x4]
 8053751:  bswap eax
 8053753:  cmp eax, 0xff
 8053756:  jne 8053720
 8053758:  jmp 8053210
 805375d:  add DWORD PTR [ebp-0xac], 0x1
 8053764:  add DWORD PTR [ebp-0x90], 0x1
 805376b:  mov ebx, DWORD PTR [ebp-0x90]
 8053771:  cmp DWORD PTR [ebp-0xc8], ebx
 8053777:  ja 80532d3
 805377d:  mov esi, DWORD PTR [ebp-0xb8]
 8053783:  cmp DWORD PTR [ebp-0xac], esi
 8053789:  jne 8053cad
 805378f:  mov eax, DWORD PTR [edi+0x2c]
 8053792:  test eax, eax
 8053794:  je 8053b97
 805379a:  xor edx, edx
 805379c:  mov ecx, DWORD PTR [edi+0x30]
 805379f:  jmp 80537b6
 80537a1:  mov eax, DWORD PTR [ecx+edx*4]
 80537a4:  mov ebx, DWORD PTR [ebp-0x80]
 80537a7:  mov DWORD PTR [ebx+edx*4], eax
 80537aa:  add edx, 0x1
 80537ad:  cmp edx, DWORD PTR [edi+0x2c]
 80537b0:  jae 8053b97
 80537b6:  mov eax, DWORD PTR [edi+0x34]
 80537b9:  test eax, eax
 80537bb:  je 80537a1
 80537bd:  mov eax, DWORD PTR [ecx+edx*4]
 80537c0:  bswap eax
 80537c2:  jmp 80537a4
 80537c4:  test ecx, ecx
 80537c6:  jne 8053905
 80537cc:  mov esi, DWORD PTR [ebp-0x90]
 80537d2:  mov edx, DWORD PTR [ebp-0xc0]
 80537d8:  mov eax, DWORD PTR [edx+esi*4]
 80537db:  mov edx, DWORD PTR [ebp-0xd0]
 80537e1:  add edx, eax
 80537e3:  cmp DWORD PTR [edx+0x8], 0xff
 80537e7:  setne al
 80537ea:  jmp 805330c
 80537ef:  mov ecx, DWORD PTR [ebp-0xd0]
 80537f5:  mov eax, DWORD PTR [ecx+0x28]
 80537f8:  bswap eax
 80537fa:  add eax, ecx
 80537fc:  mov DWORD PTR [ebp-0xc0], eax
 8053802:  mov eax, DWORD PTR [ecx+0x2c]
 8053805:  bswap eax
 8053807:  jmp 8053141
 805380c:  mov eax, 0x6
 8053811:  int 0x80
 8053813:  mov DWORD PTR [ebp-0xcc], 0x0
 805381d:  jmp 8052deb
 8053822:  cmp BYTE PTR [edx+0x5], 0x0
 8053826:  jne 8053105
 805382c:  lea esi, [esi]
 8053830:  jmp 80535b6
 8053835:  mov ecx, DWORD PTR [ebp-0x94]
 805383b:  add edx, 0x4
 805383e:  mov eax, DWORD PTR [ebp-0xa0]
 8053844:  mov DWORD PTR [ebp-0xa4], edx
 805384a:  mov DWORD PTR [eax+0x4], ecx
 805384d:  jmp 8053899
 805384f:  mov esi, DWORD PTR [ebp-0xa4]
 8053855:  mov ebx, DWORD PTR [esi]
 8053857:  mov esi, DWORD PTR [esi+0x4]
 805385a:  test ebx, ebx
 805385c:  jne 80538d8
 805385e:  cmp esi, 0xff
 8053861:  je 80538b3
 8053863:  mov eax, DWORD PTR [ebp-0xe0]
 8053869:  mov ebx, DWORD PTR [eax+esi*4]
 805386c:  mov DWORD PTR [esp], ebx
 805386f:  call 804eea0
 8053874:  mov DWORD PTR [esp+0x4], ebx
 8053878:  mov DWORD PTR [esp+0x8], eax
 805387c:  mov edx, DWORD PTR [ebp-0x94]
 8053882:  mov esi, eax
 8053884:  mov DWORD PTR [esp], edx
 8053887:  call 804efc0
 805388c:  add DWORD PTR [ebp-0x94], esi
 8053892:  add DWORD PTR [ebp-0xa4], 0x8
 8053899:  mov eax, DWORD PTR [edi+0xc]
 805389c:  test eax, eax
 805389e:  je 805384f
 80538a0:  mov ebx, DWORD PTR [ebp-0xa4]
 80538a6:  mov eax, DWORD PTR [ebx]
 80538a8:  mov esi, DWORD PTR [ebx+0x4]
 80538ab:  bswap eax
 80538ad:  bswap esi
 80538af:  mov ebx, eax
 80538b1:  jmp 805385a
 80538b3:  mov ecx, DWORD PTR [ebp-0xa0]
 80538b9:  mov eax, DWORD PTR [ebp-0x94]
 80538bf:  sub eax, DWORD PTR [ecx+0x4]
 80538c2:  mov DWORD PTR [ecx], eax
 80538c4:  jmp 80533e8
 80538c9:  cmp BYTE PTR [edx+0x5], 0x36
 80538cd:  jne 8053105
 80538d3:  jmp 80535a6
 80538d8:  mov DWORD PTR [esp+0x8], ebx
 80538dc:  mov edx, DWORD PTR [ebp-0xa8]
 80538e2:  mov DWORD PTR [esp+0x4], edx
 80538e6:  mov ecx, DWORD PTR [ebp-0x94]
 80538ec:  mov DWORD PTR [esp], ecx
 80538ef:  call 804efc0
 80538f4:  add DWORD PTR [ebp-0x94], ebx
 80538fa:  add DWORD PTR [ebp-0xa8], ebx
 8053900:  jmp 805385e
 8053905:  mov esi, DWORD PTR [ebp-0x90]
 805390b:  mov edx, DWORD PTR [ebp-0xbc]
 8053911:  mov eax, DWORD PTR [edx+esi*4]
 8053914:  jmp 80537db
 8053919:  mov esi, DWORD PTR [ebp-0x90]
 805391f:  mov edx, DWORD PTR [ebp-0xbc]
 8053925:  mov eax, DWORD PTR [edx+esi*4]
 8053928:  jmp 80532f7
 805392d:  mov eax, DWORD PTR [edx+0x8]
 8053930:  bswap eax
 8053932:  add eax, 0x1
 8053935:  sete al
 8053938:  jmp 80533c4
 805393d:  cmp al, 0x36
 805393f:  jne 80539c0
 8053941:  cmp BYTE PTR [edx+0x5], 0x34
 8053945:  jne 8053105
 805394b:  cmp BYTE PTR [edx+0x6], 0x0
 805394f:  nop
 8053950:  jne 8053105
 8053956:  cmp BYTE PTR [ebp-0x99], 0x0
 805395d:  mov eax, 0x80b04fe
 8053962:  jne 8053107
 8053968:  cmp BYTE PTR [ebp-0x9a], 0x0
 805396f:  mov eax, 0x80b0502
 8053974:  jne 8053107
 805397a:  mov edx, esi
 805397c:  mov eax, 0x80b0506
 8053981:  cmp dl, 0x6f
 8053984:  je 8053107
 805398a:  mov edx, esi
 805398c:  mov eax, 0x80b050a
 8053991:  cmp dl, 0x75
 8053994:  je 8053107
 805399a:  mov edx, esi
 805399c:  mov eax, 0x80b050e
 80539a1:  cmp dl, 0x78
 80539a4:  je 8053107
 80539aa:  mov eax, esi
 80539ac:  cmp al, 0x58
 80539ae:  jne 8053cad
 80539b4:  mov eax, 0x80b0512
 80539b9:  jmp 8053107
 80539be:  xchg ax, ax
 80539c0:  cmp al, 0x4c
 80539c2:  jne 8053a58
 80539c8:  cmp BYTE PTR [edx+0x5], 0x45
 80539cc:  lea esi, [esi]
 80539d0:  jne 8053105
 80539d6:  cmp BYTE PTR [edx+0x6], 0x41
 80539da:  lea esi, [esi]
 80539e0:  jne 8053105
 80539e6:  cmp BYTE PTR [edx+0x7], 0x53
 80539ea:  lea esi, [esi]
 80539f0:  jne 8053105
 80539f6:  cmp BYTE PTR [edx+0x8], 0x54
 80539fa:  lea esi, [esi]
 8053a00:  jne 8053105
 8053a06:  movzx eax, BYTE PTR [edx+0x9]
 8053a0a:  cmp al, 0x38
 8053a0c:  lea esi, [esi]
 8053a10:  je 8053c6e
 8053a16:  cmp al, 0x31
 8053a18:  je 8053cb5
 8053a1e:  cmp al, 0x33
 8053a20:  je 8053cdd
 8053a26:  cmp al, 0x36
 8053a28:  jne 8053105
 8053a2e:  cmp BYTE PTR [edx+0xa], 0x34
 8053a32:  lea esi, [esi]
 8053a38:  jne 8053105
 8053a3e:  cmp BYTE PTR [edx+0xb], 0x0
 8053a42:  lea esi, [esi]
 8053a48:  jne 8053105
 8053a4e:  xchg ax, ax
 8053a50:  jmp 8053956
 8053a55:  lea esi, [esi]
 8053a58:  cmp al, 0x46
 8053a5a:  lea esi, [esi]
 8053a60:  jne 8053ae0
 8053a62:  cmp BYTE PTR [edx+0x5], 0x41
 8053a66:  xchg ax, ax
 8053a68:  jne 8053105
 8053a6e:  cmp BYTE PTR [edx+0x6], 0x53
 8053a72:  lea esi, [esi]
 8053a78:  jne 8053105
 8053a7e:  cmp BYTE PTR [edx+0x7], 0x54
 8053a82:  lea esi, [esi]
 8053a88:  jne 8053105
 8053a8e:  movzx eax, BYTE PTR [edx+0x8]
 8053a92:  cmp al, 0x38
 8053a94:  lea esi, [esi]
 8053a98:  je 8053c9a
 8053a9e:  cmp al, 0x31
 8053aa0:  je 8053c85
 8053aa6:  cmp al, 0x33
 8053aa8:  je 8053c64
 8053aae:  cmp al, 0x36
 8053ab0:  jne 8053105
 8053ab6:  cmp BYTE PTR [edx+0x9], 0x34
 8053aba:  lea esi, [esi]
 8053ac0:  jne 8053105
 8053ac6:  cmp BYTE PTR [edx+0xa], 0x0
 8053aca:  lea esi, [esi]
 8053ad0:  jne 8053105
 8053ad6:  xchg ax, ax
 8053ad8:  jmp 8053956
 8053add:  lea esi, [esi]
 8053ae0:  cmp al, 0x4d
 8053ae2:  lea esi, [esi]
 8053ae8:  jne 8053b20
 8053aea:  cmp BYTE PTR [edx+0x5], 0x41
 8053aee:  xchg ax, ax
 8053af0:  jne 8053105
 8053af6:  cmp BYTE PTR [edx+0x6], 0x58
 8053afa:  lea esi, [esi]
 8053b00:  jne 8053105
 8053b06:  cmp BYTE PTR [edx+0x7], 0x0
 8053b0a:  lea esi, [esi]
 8053b10:  jne 8053105
 8053b16:  xchg ax, ax
 8053b18:  jmp 8053956
 8053b1d:  lea esi, [esi]
 8053b20:  cmp al, 0x50
 8053b22:  lea esi, [esi]
 8053b28:  jne 8053105
 8053b2e:  cmp BYTE PTR [edx+0x5], 0x54
 8053b32:  lea esi, [esi]
 8053b38:  jne 8053105
 8053b3e:  cmp BYTE PTR [edx+0x6], 0x52
 8053b42:  lea esi, [esi]
 8053b48:  jne 8053105
 8053b4e:  cmp BYTE PTR [edx+0x7], 0x0
 8053b52:  lea esi, [esi]
 8053b58:  jne 8053105
 8053b5e:  xchg ax, ax
 8053b60:  jmp 80535b6
 8053b65:  mov esi, DWORD PTR [ebp-0x90]
 8053b6b:  mov edx, DWORD PTR [ebp-0xbc]
 8053b71:  mov eax, DWORD PTR [edx+esi*4]
 8053b74:  jmp 805337c
 8053b79:  mov edx, DWORD PTR [ebp-0x90]
 8053b7f:  mov ecx, DWORD PTR [ebp-0xbc]
 8053b85:  mov eax, DWORD PTR [ecx+edx*4]
 8053b88:  jmp 805341b
 8053b8d:  mov eax, DWORD PTR [edx+0x4]
 8053b90:  bswap eax
 8053b92:  jmp 80533d7
 8053b97:  mov DWORD PTR [ebp-0xb0], 0x0
 8053ba1:  mov esi, DWORD PTR [ebp-0xb0]
 8053ba7:  mov edx, DWORD PTR [ebp-0xd4]
 8053bad:  mov eax, DWORD PTR [edx+esi*8+0x4]
 8053bb1:  mov DWORD PTR [esp], eax
 8053bb4:  call 8055960
 8053bb9:  mov ecx, DWORD PTR [edi+0x2c]
 8053bbc:  xor edx, edx
 8053bbe:  mov DWORD PTR [ebp-0xf0], eax
 8053bc4:  div ecx
 8053bc6:  mov eax, DWORD PTR [ebp-0xf0]
 8053bcc:  mov ebx, edx
 8053bce:  lea edx, [ecx-0x2]
 8053bd1:  mov esi, edx
 8053bd3:  xor edx, edx
 8053bd5:  div esi
 8053bd7:  lea eax, [edx+0x1]
 8053bda:  mov edx, ecx
 8053bdc:  mov esi, eax
 8053bde:  sub edx, eax
 8053be0:  sub esi, ecx
 8053be2:  mov DWORD PTR [ebp-0xf4], esi
 8053be8:  mov esi, DWORD PTR [ebp-0x80]
 8053beb:  lea ecx, [esi+ebx*4]
 8053bee:  mov esi, DWORD PTR [ecx]
 8053bf0:  test esi, esi
 8053bf2:  je 8053c0a
 8053bf4:  cmp ebx, edx
 8053bf6:  jb 8053c60
 8053bf8:  mov esi, DWORD PTR [ebp-0x80]
 8053bfb:  add ebx, DWORD PTR [ebp-0xf4]
 8053c01:  lea ecx, [esi+ebx*4]
 8053c04:  mov esi, DWORD PTR [ecx]
 8053c06:  test esi, esi
 8053c08:  jne 8053bf4
 8053c0a:  mov edx, DWORD PTR [ebp-0xb0]
 8053c10:  mov eax, DWORD PTR [edi+0x14]
 8053c13:  lea eax, [edx+eax+0x1]
 8053c17:  add edx, 0x1
 8053c1a:  cmp DWORD PTR [ebp-0xac], edx
 8053c20:  mov DWORD PTR [ecx], eax
 8053c22:  mov DWORD PTR [ebp-0xb0], edx
 8053c28:  ja 8053ba1
 8053c2e:  mov ecx, DWORD PTR [ebp-0xac]
 8053c34:  mov ebx, DWORD PTR [ebp-0xd4]
 8053c3a:  mov esi, DWORD PTR [ebp-0x84]
 8053c40:  mov eax, DWORD PTR [ebp-0x80]
 8053c43:  mov DWORD PTR [edi+0x20], ecx
 8053c46:  mov DWORD PTR [edi+0x24], ebx
 8053c49:  mov DWORD PTR [edi+0x28], esi
 8053c4c:  mov DWORD PTR [edi+0x30], eax
 8053c4f:  mov DWORD PTR [edi+0x34], 0x0
 8053c56:  jmp 8053445
 8053c5b:  nop
 8053c5c:  lea esi, [esi]
 8053c60:  add ebx, eax
 8053c62:  jmp 8053be8
 8053c64:  cmp BYTE PTR [edx+0x9], 0x32
 8053c68:  jne 8053105
 8053c6e:  cmp BYTE PTR [edx+0xa], 0x0
 8053c72:  lea esi, [esi]
 8053c78:  jne 8053105
 8053c7e:  xchg ax, ax
 8053c80:  jmp 80535b6
 8053c85:  cmp BYTE PTR [edx+0x9], 0x36
 8053c89:  lea esi, [esi]
 8053c90:  jne 8053105
 8053c96:  xchg ax, ax
 8053c98:  jmp 8053c6e
 8053c9a:  cmp BYTE PTR [edx+0x9], 0x0
 8053c9e:  xchg ax, ax
 8053ca0:  jne 8053105
 8053ca6:  xchg ax, ax
 8053ca8:  jmp 80535b6
 8053cad:  lea esi, [esi]
 8053cb0:  call 8055a00
 8053cb5:  cmp BYTE PTR [edx+0xa], 0x36
 8053cb9:  lea esi, [esi]
 8053cc0:  jne 8053105
 8053cc6:  cmp BYTE PTR [edx+0xb], 0x0
 8053cca:  lea esi, [esi]
 8053cd0:  jne 8053105
 8053cd6:  xchg ax, ax
 8053cd8:  jmp 80535b6
 8053cdd:  cmp BYTE PTR [edx+0xa], 0x32
 8053ce1:  lea esi, [esi]
 8053ce8:  jne 8053105
 8053cee:  xchg ax, ax
 8053cf0:  jmp 8053cc6

08053cf2 <_L_lock_154>:
 8053cf2:  lea ecx, ds:0x80d28e4
 8053cf8:  call 8050230
 8053cfd:  jmp 8052cd6

08053d02 <_L_unlock_178>:
 8053d02:  lea eax, ds:0x80d28e4
 8053d08:  call 8050260
 8053d0d:  jmp 8052d23

08053d12 <_L_unlock_345>:
 8053d12:  lea eax, ds:0x80d28e4
 8053d18:  call 8050260
 8053d1d:  jmp 8052e74
 8053d22:  nop
 8053d23:  nop
 8053d24:  nop
 8053d25:  nop
 8053d26:  nop
 8053d27:  nop
 8053d28:  nop
 8053d29:  nop
 8053d2a:  nop
 8053d2b:  nop
 8053d2c:  nop
 8053d2d:  nop
 8053d2e:  nop
 8053d2f:  nop

08053d30 <read_alias_file>:
 8053d30:  push ebp
 8053d31:  mov ebp, esp
 8053d33:  push edi
 8053d34:  push esi
 8053d35:  push ebx
 8053d36:  lea ecx, [edx+0x20]
 8053d39:  sub esp, 0x1d0
 8053d3f:  and ecx, 0xfc
 8053d42:  sub esp, ecx
 8053d44:  lea ebx, [esp+0x1f]
 8053d48:  and ebx, 0xf0
 8053d4b:  mov DWORD PTR [esp+0x8], edx
 8053d4f:  mov DWORD PTR [esp+0x4], eax
 8053d53:  mov DWORD PTR [esp], ebx
 8053d56:  call 806c310
 8053d5b:  mov DWORD PTR [eax], 0x636f6c2f
 8053d61:  mov DWORD PTR [eax+0x4], 0x2e656c61
 8053d68:  mov DWORD PTR [eax+0x8], 0x61696c61
 8053d6f:  mov WORD PTR [eax+0xc], 0x73
 8053d75:  mov DWORD PTR [esp+0x4], 0x80b0518
 8053d7d:  mov DWORD PTR [esp], ebx
 8053d80:  call 8062450
 8053d85:  mov DWORD PTR [ebp-0x1b4], 0x0
 8053d8f:  test eax, eax
 8053d91:  mov DWORD PTR [ebp-0x1b8], eax
 8053d97:  je 8054121
 8053d9d:  mov edx, eax
 8053d9f:  mov eax, DWORD PTR [eax]
 8053da1:  mov ecx, DWORD PTR gs:0x0
 8053da8:  mov DWORD PTR [ebp-0x1b4], 0x0
 8053db2:  or ah, 0x80
 8053db5:  mov DWORD PTR [edx], eax
 8053db7:  mov DWORD PTR [ebp-0x1c0], ecx
 8053dbd:  test al, 0x10
 8053dbf:  jne 8054105
 8053dc5:  lea esi, [esi]
 8053dc8:  mov ebx, DWORD PTR [ebp-0x1b8]
 8053dce:  lea eax, [ebp-0x19c]
 8053dd4:  mov DWORD PTR [esp+0x4], 0x190
 8053ddc:  mov DWORD PTR [esp], eax
 8053ddf:  mov DWORD PTR [esp+0x8], ebx
 8053de3:  call 8065a10
 8053de8:  test eax, eax
 8053dea:  je 8054105
 8053df0:  lea edx, [ebp-0x19c]
 8053df6:  mov DWORD PTR [esp+0x4], 0xa
 8053dfe:  lea esi, [ebp-0x19c]
 8053e04:  mov DWORD PTR [esp], edx
 8053e07:  call 806ae20
 8053e0c:  mov ecx, DWORD PTR [ebp-0x1c0]
 8053e12:  mov ebx, 0xfffffff4
 8053e18:  mov DWORD PTR [ebp-0x1bc], eax
 8053e1e:  mov eax, 0xffffffd8
 8053e23:  mov eax, DWORD PTR [ecx+eax]
 8053e26:  mov ecx, DWORD PTR [ecx+ebx]
 8053e29:  mov DWORD PTR [ebp-0x1a4], eax
 8053e2f:  jmp 8053e48
 8053e31:  lea esi, [esi]
 8053e38:  movzx edx, BYTE PTR [esi]
 8053e3b:  movzx eax, dl
 8053e3e:  test BYTE PTR [ecx+eax*2+0x1], 0x20
 8053e43:  je 8053e70
 8053e45:  add esi, 0x1
 8053e48:  test ecx, ecx
 8053e4a:  jne 8053e38
 8053e4c:  mov edx, DWORD PTR [ebp-0x1a4]
 8053e52:  mov eax, DWORD PTR [edx]
 8053e54:  movzx edx, BYTE PTR [esi]
 8053e57:  mov eax, DWORD PTR [eax+0x24]
 8053e5a:  lea ecx, [eax+0x100]
 8053e60:  movzx eax, dl
 8053e63:  test BYTE PTR [ecx+eax*2+0x1], 0x20
 8053e68:  jne 8053e45
 8053e6a:  lea esi, [esi]
 8053e70:  mov eax, DWORD PTR [ebp-0x1c0]
 8053e76:  test dl, dl
 8053e78:  mov ebx, 0xfffffff4
 8053e7e:  mov DWORD PTR [eax+ebx], ecx
 8053e81:  je 80540eb
 8053e87:  cmp dl, 0x23
 8053e8a:  je 80540eb
 8053e90:  movzx edx, BYTE PTR [esi+0x1]
 8053e94:  xor ebx, ebx
 8053e96:  lea edi, [esi+0x1]
 8053e99:  test dl, dl
 8053e9b:  jne 8053ec0
 8053e9d:  jmp 805425d
 8053ea2:  lea esi, [esi]
 8053ea8:  movzx eax, dl
 8053eab:  test BYTE PTR [ecx+eax*2+0x1], 0x20
 8053eb0:  jne 8053ee0
 8053eb2:  add edi, 0x1
 8053eb5:  movzx edx, BYTE PTR [edi]
 8053eb8:  test dl, dl
 8053eba:  je 8054180
 8053ec0:  test ecx, ecx
 8053ec2:  jne 8053ea8
 8053ec4:  mov ecx, DWORD PTR [ebp-0x1a4]
 8053eca:  mov eax, DWORD PTR [ecx]
 8053ecc:  mov eax, DWORD PTR [eax+0x24]
 8053ecf:  lea ecx, [eax+0x100]
 8053ed5:  movzx eax, dl
 8053ed8:  test BYTE PTR [ecx+eax*2+0x1], 0x20
 8053edd:  je 8053eb2
 8053edf:  nop
 8053ee0:  mov ebx, DWORD PTR [ebp-0x1c0]
 8053ee6:  mov edx, 0xfffffff4
 8053eec:  mov DWORD PTR [ebx+edx], ecx
 8053eef:  mov eax, edx
 8053ef1:  mov BYTE PTR [edi], 0x0
 8053ef4:  add edi, 0x1
 8053ef7:  movzx ebx, BYTE PTR [edi]
 8053efa:  mov ecx, DWORD PTR [ebp-0x1c0]
 8053f00:  mov edx, DWORD PTR [ecx+eax]
 8053f03:  jmp 8053f18
 8053f05:  lea esi, [esi]
 8053f08:  movzx eax, bl
 8053f0b:  test BYTE PTR [edx+eax*2+0x1], 0x20
 8053f10:  je 8053f38
 8053f12:  add edi, 0x1
 8053f15:  movzx ebx, BYTE PTR [edi]
 8053f18:  test edx, edx
 8053f1a:  jne 8053f08
 8053f1c:  mov edx, DWORD PTR [ebp-0x1a4]
 8053f22:  mov eax, DWORD PTR [edx]
 8053f24:  mov eax, DWORD PTR [eax+0x24]
 8053f27:  lea edx, [eax+0x100]
 8053f2d:  movzx eax, bl
 8053f30:  test BYTE PTR [edx+eax*2+0x1], 0x20
 8053f35:  jne 8053f12
 8053f37:  nop
 8053f38:  mov eax, DWORD PTR [ebp-0x1c0]
 8053f3e:  test bl, bl
 8053f40:  mov ecx, 0xfffffff4
 8053f46:  mov DWORD PTR [eax+ecx], edx
 8053f49:  je 80540eb
 8053f4f:  lea ecx, [edi+0x1]
 8053f52:  mov DWORD PTR [ebp-0x1c4], ecx
 8053f58:  movzx ecx, BYTE PTR [edi+0x1]
 8053f5c:  test cl, cl
 8053f5e:  jne 8053f8a
 8053f60:  jmp 8053fd5
 8053f62:  lea esi, [esi]
 8053f68:  movzx eax, cl
 8053f6b:  test BYTE PTR [edx+eax*2+0x1], 0x20
 8053f70:  jne 8053fb0
 8053f72:  add DWORD PTR [ebp-0x1c4], 0x1
 8053f79:  mov ebx, DWORD PTR [ebp-0x1c4]
 8053f7f:  movzx ecx, BYTE PTR [ebx]
 8053f82:  test cl, cl
 8053f84:  je 8054208
 8053f8a:  test edx, edx
 8053f8c:  jne 8053f68
 8053f8e:  mov edx, DWORD PTR [ebp-0x1a4]
 8053f94:  mov eax, DWORD PTR [edx]
 8053f96:  mov eax, DWORD PTR [eax+0x24]
 8053f99:  lea edx, [eax+0x100]
 8053f9f:  movzx eax, cl
 8053fa2:  test BYTE PTR [edx+eax*2+0x1], 0x20
 8053fa7:  je 8053f72
 8053fa9:  lea esi, [esi]
 8053fb0:  mov eax, DWORD PTR [ebp-0x1c0]
 8053fb6:  cmp cl, 0xa
 8053fb9:  mov ebx, 0xfffffff4
 8053fbf:  mov DWORD PTR [eax+ebx], edx
 8053fc2:  jne 805421b
 8053fc8:  mov edx, DWORD PTR [ebp-0x1c4]
 8053fce:  mov BYTE PTR [edx], 0x0
 8053fd1:  mov BYTE PTR [edx+0x1], 0xa
 8053fd5:  mov eax, ds:0x80d2900
 8053fda:  cmp DWORD PTR ds:0x80d28fc, eax
 8053fe0:  jb 805401c
 8053fe2:  test eax, eax
 8053fe4:  mov ebx, 0x64
 8053fe9:  mov edx, 0x320
 8053fee:  je 8053ff8
 8053ff0:  mov edx, eax
 8053ff2:  lea ebx, [eax+eax]
 8053ff5:  shl edx, 0x4
 8053ff8:  mov DWORD PTR [esp+0x4], edx
 8053ffc:  mov eax, ds:0x80d2f3c
 8054001:  mov DWORD PTR [esp], eax
 8054004:  call 804db10
 8054009:  test eax, eax
 805400b:  je 8054105
 8054011:  mov ds:0x80d2f3c, eax
 8054016:  mov DWORD PTR ds:0x80d2900, ebx
 805401c:  mov DWORD PTR [esp], esi
 805401f:  call 804eea0
 8054024:  add eax, 0x1
 8054027:  mov DWORD PTR [ebp-0x1b0], eax
 805402d:  mov DWORD PTR [esp], edi
 8054030:  call 804eea0
 8054035:  mov ecx, DWORD PTR ds:0x80d28f8
 805403b:  add eax, 0x1
 805403e:  mov edx, eax
 8054040:  add edx, DWORD PTR [ebp-0x1b0]
 8054046:  mov DWORD PTR [ebp-0x1ac], eax
 805404c:  mov eax, edx
 805404e:  add eax, DWORD PTR ds:0x80d28f4
 8054054:  cmp eax, ecx
 8054056:  ja 8054198
 805405c:  mov edx, DWORD PTR ds:0x80d28fc
 8054062:  mov eax, ds:0x80d2f38
 8054067:  lea ebx, [edx*8]
 805406e:  mov edx, DWORD PTR [ebp-0x1b0]
 8054074:  add eax, DWORD PTR ds:0x80d28f4
 805407a:  add ebx, DWORD PTR ds:0x80d2f3c
 8054080:  mov DWORD PTR [esp+0x4], esi
 8054084:  mov DWORD PTR [esp+0x8], edx
 8054088:  mov DWORD PTR [esp], eax
 805408b:  call 804efc0
 8054090:  mov ecx, DWORD PTR [ebp-0x1ac]
 8054096:  mov DWORD PTR [ebx], eax
 8054098:  mov eax, DWORD PTR [ebp-0x1b0]
 805409e:  add eax, DWORD PTR ds:0x80d28f4
 80540a4:  mov ebx, DWORD PTR ds:0x80d28fc
 80540aa:  mov ds:0x80d28f4, eax
 80540af:  add eax, DWORD PTR ds:0x80d2f38
 80540b5:  shl ebx, 0x3
 80540b8:  add ebx, DWORD PTR ds:0x80d2f3c
 80540be:  mov DWORD PTR [esp+0x8], ecx
 80540c2:  mov DWORD PTR [esp+0x4], edi
 80540c6:  mov DWORD PTR [esp], eax
 80540c9:  call 804efc0
 80540ce:  add DWORD PTR ds:0x80d28fc, 0x1
 80540d5:  add DWORD PTR [ebp-0x1b4], 0x1
 80540dc:  mov DWORD PTR [ebx+0x4], eax
 80540df:  mov ebx, DWORD PTR [ebp-0x1ac]
 80540e5:  add DWORD PTR ds:0x80d28f4, ebx
 80540eb:  mov edx, DWORD PTR [ebp-0x1bc]
 80540f1:  test edx, edx
 80540f3:  je 8054130
 80540f5:  mov edx, DWORD PTR [ebp-0x1b8]
 80540fb:  mov eax, DWORD PTR [edx]
 80540fd:  test al, 0x10
 80540ff:  je 8053dc8
 8054105:  mov eax, DWORD PTR [ebp-0x1b8]
 805410b:  mov DWORD PTR [esp], eax
 805410e:  call 8062010
 8054113:  mov eax, DWORD PTR [ebp-0x1b4]
 8054119:  test eax, eax
 805411b:  jne 8054229
 8054121:  mov eax, DWORD PTR [ebp-0x1b4]
 8054127:  lea esp, [ebp-0xc]
 805412a:  pop ebx
 805412b:  pop esi
 805412c:  pop edi
 805412d:  pop ebp
 805412e:  ret
 805412f:  nop
 8054130:  mov ecx, DWORD PTR [ebp-0x1b8]
 8054136:  lea ebx, [ebp-0x19c]
 805413c:  mov DWORD PTR [esp+0x4], 0x190
 8054144:  mov DWORD PTR [esp], ebx
 8054147:  mov DWORD PTR [esp+0x8], ecx
 805414b:  call 8065a10
 8054150:  test eax, eax
 8054152:  je 80540f5
 8054154:  lea ecx, [ebp-0x19c]
 805415a:  mov DWORD PTR [esp+0x4], 0xa
 8054162:  mov DWORD PTR [esp], ecx
 8054165:  call 806ae20
 805416a:  test eax, eax
 805416c:  je 8054130
 805416e:  mov ebx, DWORD PTR [ebp-0x1b8]
 8054174:  mov eax, DWORD PTR [ebx]
 8054176:  jmp 8053dbd
 805417b:  nop
 805417c:  lea esi, [esi]
 8054180:  mov ebx, DWORD PTR [ebp-0x1c0]
 8054186:  mov edx, 0xfffffff4
 805418c:  mov DWORD PTR [ebx+edx], ecx
 805418f:  mov eax, edx
 8054191:  xor ebx, ebx
 8054193:  jmp 8053efa
 8054198:  cmp edx, 0x400
 805419e:  mov eax, edx
 80541a0:  jae 80541a7
 80541a2:  mov eax, 0x400
 80541a7:  add eax, ecx
 80541a9:  mov DWORD PTR [ebp-0x1a8], eax
 80541af:  mov DWORD PTR [esp+0x4], eax
 80541b3:  mov eax, ds:0x80d2f38
 80541b8:  mov DWORD PTR [esp], eax
 80541bb:  call 804db10
 80541c0:  test eax, eax
 80541c2:  mov DWORD PTR [ebp-0x1cc], eax
 80541c8:  je 8054105
 80541ce:  mov ecx, DWORD PTR ds:0x80d2f38
 80541d4:  cmp ecx, eax
 80541d6:  jne 8054267
 80541dc:  mov edx, DWORD PTR ds:0x80d28fc
 80541e2:  mov ecx, DWORD PTR [ebp-0x1cc]
 80541e8:  mov ebx, DWORD PTR [ebp-0x1a8]
 80541ee:  mov DWORD PTR ds:0x80d2f38, ecx
 80541f4:  mov eax, ecx
 80541f6:  mov DWORD PTR ds:0x80d28f8, ebx
 80541fc:  jmp 8054067
 8054201:  lea esi, [esi]
 8054208:  mov ecx, DWORD PTR [ebp-0x1c0]
 805420e:  mov eax, 0xfffffff4
 8054213:  mov DWORD PTR [ecx+eax], edx
 8054216:  jmp 8053fd5
 805421b:  mov ecx, DWORD PTR [ebp-0x1c4]
 8054221:  mov BYTE PTR [ecx], 0x0
 8054224:  jmp 8053fd5
 8054229:  mov DWORD PTR [esp+0xc], 0x80543d0
 8054231:  mov DWORD PTR [esp+0x8], 0x8
 8054239:  mov eax, ds:0x80d28fc
 805423e:  mov DWORD PTR [esp+0x4], eax
 8054242:  mov eax, ds:0x80d2f3c
 8054247:  mov DWORD PTR [esp], eax
 805424a:  call 80562c0
 805424f:  mov eax, DWORD PTR [ebp-0x1b4]
 8054255:  lea esp, [ebp-0xc]
 8054258:  pop ebx
 8054259:  pop esi
 805425a:  pop edi
 805425b:  pop ebp
 805425c:  ret
 805425d:  mov eax, 0xfffffff4
 8054262:  jmp 8053efa
 8054267:  mov edx, DWORD PTR ds:0x80d28fc
 805426d:  test edx, edx
 805426f:  je 80541e2
 8054275:  mov ebx, DWORD PTR [ebp-0x1cc]
 805427b:  mov eax, ds:0x80d2f3c
 8054280:  mov DWORD PTR [ebp-0x1c8], 0x0
 805428a:  sub ebx, ecx
 805428c:  mov ecx, DWORD PTR [ebp-0x1c8]
 8054292:  mov DWORD PTR [ebp-0x1c4], eax
 8054298:  mov eax, ebx
 805429a:  mov DWORD PTR [ebp-0x1a0], ebx
 80542a0:  mov ebx, DWORD PTR [ebp-0x1c4]
 80542a6:  add DWORD PTR [ebx+ecx*8], eax
 80542a9:  add DWORD PTR [ebx+ecx*8+0x4], eax
 80542ad:  add ecx, 0x1
 80542b0:  cmp edx, ecx
 80542b2:  mov DWORD PTR [ebp-0x1c8], ecx
 80542b8:  ja 80542a6
 80542ba:  jmp 80541e2
 80542bf:  nop

080542c0 <_nl_expand_alias>:
 80542c0:  push ebp
 80542c1:  xor eax, eax
 80542c3:  mov ebp, esp
 80542c5:  mov ecx, 0x1
 80542ca:  push esi
 80542cb:  push ebx
 80542cc:  sub esp, 0x1c
 80542cf:  mov ebx, DWORD PTR [ebp+0x8]
 80542d2:  cmp DWORD PTR gs:0xc, 0x0
 80542da:  je 80542dd
 80542dc:  cmpxchg DWORD PTR ds:0x80d28f0, ecx
 80542e4:  jne 80543e9
 80542ea:  mov eax, ds:0x80d28fc
 80542ef:  lea esi, [ebp-0x10]
 80542f2:  mov DWORD PTR [ebp-0x10], ebx
 80542f5:  test eax, eax
 80542f7:  jne 805435c
 80542f9:  lea esi, [esi]
 8054300:  mov edx, DWORD PTR ds:0x80d0d9c
 8054306:  movzx ecx, BYTE PTR [edx]
 8054309:  lea esi, [esi]
 8054310:  test cl, cl
 8054312:  je 80543a2
 8054318:  cmp cl, 0x3a
 805431b:  jne 805432f
 805431d:  lea esi, [esi]
 8054320:  add edx, 0x1
 8054323:  movzx ecx, BYTE PTR [edx]
 8054326:  cmp cl, 0x3a
 8054329:  je 8054320
 805432b:  test cl, cl
 805432d:  je 8054310
 805432f:  mov eax, edx
 8054331:  add edx, 0x1
 8054334:  movzx ecx, BYTE PTR [edx]
 8054337:  test cl, cl
 8054339:  jne 8054390
 805433b:  cmp eax, edx
 805433d:  jae 8054310
 805433f:  mov DWORD PTR ds:0x80d0d9c, edx
 8054345:  sub edx, eax
 8054347:  call 8053d30
 805434c:  test eax, eax
 805434e:  je 8054300
 8054350:  mov eax, ds:0x80d28fc
 8054355:  mov DWORD PTR [ebp-0x10], ebx
 8054358:  test eax, eax
 805435a:  je 8054300
 805435c:  mov DWORD PTR [esp+0x8], eax
 8054360:  mov eax, ds:0x80d2f3c
 8054365:  mov DWORD PTR [esp+0x10], 0x80543d0
 805436d:  mov DWORD PTR [esp+0xc], 0x8
 8054375:  mov DWORD PTR [esp], esi
 8054378:  mov DWORD PTR [esp+0x4], eax
 805437c:  call 8055c60
 8054381:  test eax, eax
 8054383:  je 8054300
 8054389:  mov ecx, DWORD PTR [eax+0x4]
 805438c:  jmp 80543aa
 805438e:  xchg ax, ax
 8054390:  cmp cl, 0x3a
 8054393:  nop
 8054394:  lea esi, [esi]
 8054398:  jne 8054331
 805439a:  lea esi, [esi]
 80543a0:  jmp 805433b
 80543a2:  mov DWORD PTR ds:0x80d0d9c, edx
 80543a8:  xor ecx, ecx
 80543aa:  cmp DWORD PTR gs:0xc, 0x0
 80543b2:  je 80543b5
 80543b4:  sub DWORD PTR ds:0x80d28f0, 0x1
 80543bc:  jne 80543f9
 80543be:  add esp, 0x1c
 80543c1:  mov eax, ecx
 80543c3:  pop ebx
 80543c4:  pop esi
 80543c5:  pop ebp
 80543c6:  ret
 80543c7:  mov esi, esi
 80543c9:  lea edi, [edi]

080543d0 <alias_compare>:
 80543d0:  push ebp
 80543d1:  mov ebp, esp
 80543d3:  mov eax, DWORD PTR [ebp+0xc]
 80543d6:  mov eax, DWORD PTR [eax]
 80543d8:  mov DWORD PTR [ebp+0xc], eax
 80543db:  mov eax, DWORD PTR [ebp+0x8]
 80543de:  mov eax, DWORD PTR [eax]
 80543e0:  mov DWORD PTR [ebp+0x8], eax
 80543e3:  pop ebp
 80543e4:  jmp 806c3b0

080543e9 <_L_lock_611>:
 80543e9:  lea ecx, ds:0x80d28f0
 80543ef:  call 8050230
 80543f4:  jmp 80542ea

080543f9 <_L_unlock_724>:
 80543f9:  lea eax, ds:0x80d28f0
 80543ff:  call 8050260
 8054404:  jmp 80543be
 8054406:  nop
 8054407:  nop
 8054408:  nop
 8054409:  nop
 805440a:  nop
 805440b:  nop
 805440c:  nop
 805440d:  nop
 805440e:  nop
 805440f:  nop

08054410 <_nl_normalize_codeset>:
 8054410:  push ebp
 8054411:  mov eax, 0x4
 8054416:  mov ebp, esp
 8054418:  push edi
 8054419:  push esi
 805441a:  push ebx
 805441b:  sub esp, 0x18
 805441e:  mov edx, DWORD PTR [ebp+0xc]
 8054421:  mov DWORD PTR [ebp-0x18], 0x1
 8054428:  test edx, edx
 805442a:  je 80544c9
 8054430:  mov ecx, DWORD PTR gs:0x0
 8054437:  xor ebx, ebx
 8054439:  mov eax, 0xffffffd8
 805443e:  mov DWORD PTR [ebp-0x1c], 0x0
 8054445:  mov esi, 0xfffffff4
 805444b:  mov DWORD PTR [ebp-0x18], 0x1
 8054452:  mov eax, DWORD PTR [ecx+eax]
 8054455:  mov DWORD PTR [ebp-0x10], eax
 8054458:  jmp 805449b
 805445a:  lea esi, [esi]
 8054460:  mov edi, DWORD PTR [ebp+0x8]
 8054463:  mov edx, DWORD PTR [ecx+esi]
 8054466:  movzx eax, BYTE PTR [edi+ebx]
 805446a:  test BYTE PTR [edx+eax*2], 0x8
 805446e:  lea edi, [eax+eax]
 8054471:  je 8054493
 8054473:  add DWORD PTR [ebp-0x1c], 0x1
 8054477:  test edx, edx
 8054479:  je 8054598
 805447f:  mov eax, DWORD PTR [ecx+esi]
 8054482:  movzx eax, WORD PTR [eax+edi]
 8054486:  and eax, 0x400
 805448b:  cmp eax, 0x1
 805448e:  sbb eax, eax
 8054490:  and DWORD PTR [ebp-0x18], eax
 8054493:  add ebx, 0x1
 8054496:  cmp DWORD PTR [ebp+0xc], ebx
 8054499:  jbe 80544b8
 805449b:  mov edi, DWORD PTR [ecx+esi]
 805449e:  test edi, edi
 80544a0:  jne 8054460
 80544a2:  mov edx, DWORD PTR [ebp-0x10]
 80544a5:  mov eax, DWORD PTR [edx]
 80544a7:  mov eax, DWORD PTR [eax+0x24]
 80544aa:  add eax, 0x100
 80544af:  mov DWORD PTR [ecx+esi], eax
 80544b2:  jmp 8054460
 80544b4:  lea esi, [esi]
 80544b8:  mov esi, DWORD PTR [ebp-0x18]
 80544bb:  test esi, esi
 80544bd:  jne 80545e0
 80544c3:  mov eax, DWORD PTR [ebp-0x1c]
 80544c6:  add eax, 0x1
 80544c9:  mov DWORD PTR [esp], eax
 80544cc:  call 804d6f0
 80544d1:  test eax, eax
 80544d3:  mov DWORD PTR [ebp-0x20], eax
 80544d6:  je 8054571
 80544dc:  mov ebx, DWORD PTR [ebp-0x18]
 80544df:  mov DWORD PTR [ebp-0x14], eax
 80544e2:  test ebx, ebx
 80544e4:  jne 80545f0
 80544ea:  mov ecx, DWORD PTR [ebp+0xc]
 80544ed:  test ecx, ecx
 80544ef:  je 8054568
 80544f1:  xor edi, edi
 80544f3:  mov ecx, DWORD PTR gs:0x0
 80544fa:  mov esi, 0xfffffff4
 8054500:  jmp 8054532
 8054502:  lea esi, [esi]
 8054508:  mov ebx, 0xfffffffc
 805450e:  mov eax, DWORD PTR [ecx+ebx]
 8054511:  test eax, eax
 8054513:  je 80545b8
 8054519:  mov eax, DWORD PTR [ecx+ebx]
 805451c:  mov eax, DWORD PTR [eax+edx*4]
 805451f:  mov edx, DWORD PTR [ebp-0x14]
 8054522:  mov BYTE PTR [edx], al
 8054524:  add edx, 0x1
 8054527:  mov DWORD PTR [ebp-0x14], edx
 805452a:  add edi, 0x1
 805452d:  cmp DWORD PTR [ebp+0xc], edi
 8054530:  jbe 8054568
 8054532:  mov edx, DWORD PTR [ecx+esi]
 8054535:  test edx, edx
 8054537:  je 8054580
 8054539:  mov edx, DWORD PTR [ebp+0x8]
 805453c:  mov eax, DWORD PTR [ecx+esi]
 805453f:  movzx ebx, BYTE PTR [edx+edi]
 8054543:  movzx edx, bl
 8054546:  test BYTE PTR [eax+edx*2+0x1], 0x4
 805454b:  jne 8054508
 805454d:  lea eax, [edx-0x30]
 8054550:  cmp eax, 0x9
 8054553:  ja 805452a
 8054555:  mov eax, DWORD PTR [ebp-0x14]
 8054558:  add edi, 0x1
 805455b:  mov BYTE PTR [eax], bl
 805455d:  add eax, 0x1
 8054560:  cmp DWORD PTR [ebp+0xc], edi
 8054563:  mov DWORD PTR [ebp-0x14], eax
 8054566:  ja 8054532
 8054568:  mov edx, DWORD PTR [ebp-0x14]
 805456b:  mov BYTE PTR [edx], 0x0
 805456e:  mov eax, DWORD PTR [ebp-0x20]
 8054571:  add esp, 0x18
 8054574:  pop ebx
 8054575:  pop esi
 8054576:  pop edi
 8054577:  pop ebp
 8054578:  ret
 8054579:  lea esi, [esi]
 8054580:  mov eax, 0xffffffd8
 8054585:  mov eax, DWORD PTR [ecx+eax]
 8054588:  mov eax, DWORD PTR [eax]
 805458a:  mov eax, DWORD PTR [eax+0x24]
 805458d:  add eax, 0x100
 8054592:  mov DWORD PTR [ecx+esi], eax
 8054595:  jmp 8054539
 8054597:  nop
 8054598:  mov edx, DWORD PTR [ebp-0x10]
 805459b:  mov edi, DWORD PTR [ebp+0x8]
 805459e:  mov eax, DWORD PTR [edx]
 80545a0:  mov eax, DWORD PTR [eax+0x24]
 80545a3:  add eax, 0x100
 80545a8:  mov DWORD PTR [ecx+esi], eax
 80545ab:  movzx eax, BYTE PTR [edi+ebx]
 80545af:  lea edi, [eax+eax]
 80545b2:  jmp 805447f
 80545b7:  nop
 80545b8:  mov eax, 0xffffffd8
 80545bd:  mov eax, DWORD PTR [ecx+eax]
 80545c0:  mov eax, DWORD PTR [eax]
 80545c2:  mov eax, DWORD PTR [eax+0x30]
 80545c5:  add eax, 0x200
 80545ca:  mov DWORD PTR [ecx+ebx], eax
 80545cd:  mov eax, DWORD PTR [ebp+0x8]
 80545d0:  movzx edx, BYTE PTR [eax+edi]
 80545d4:  jmp 8054519
 80545d9:  lea esi, [esi]
 80545e0:  mov eax, DWORD PTR [ebp-0x1c]
 80545e3:  add eax, 0x4
 80545e6:  jmp 80544c9
 80545eb:  nop
 80545ec:  lea esi, [esi]
 80545f0:  mov eax, DWORD PTR [ebp-0x20]
 80545f3:  mov DWORD PTR [eax], 0x6f7369
 80545f9:  add eax, 0x3
 80545fc:  mov DWORD PTR [ebp-0x14], eax
 80545ff:  jmp 80544ea
 8054604:  lea esi, [esi]
 805460a:  lea edi, [edi]

08054610 <_nl_make_l10nflist>:
 8054610:  push ebp
 8054611:  mov ebp, esp
 8054613:  push edi
 8054614:  push esi
 8054615:  push ebx
 8054616:  sub esp, 0x58
 8054619:  mov eax, DWORD PTR [ebp+0x18]
 805461c:  mov DWORD PTR [esp], eax
 805461f:  call 804eea0
 8054624:  mov edx, DWORD PTR [ebp+0x14]
 8054627:  and edx, 0x4
 805462a:  mov DWORD PTR [ebp-0x28], edx
 805462d:  mov DWORD PTR [ebp-0x30], eax
 8054630:  jne 80549c0
 8054636:  mov DWORD PTR [ebp-0x2c], 0x0
 805463d:  mov edx, DWORD PTR [ebp+0x14]
 8054640:  and edx, 0x2
 8054643:  mov DWORD PTR [ebp-0x24], edx
 8054646:  jne 80549a8
 805464c:  xor edi, edi
 805464e:  mov edx, DWORD PTR [ebp+0x14]
 8054651:  and edx, 0x1
 8054654:  mov DWORD PTR [ebp-0x20], edx
 8054657:  jne 8054990
 805465d:  xor esi, esi
 805465f:  mov edx, DWORD PTR [ebp+0x14]
 8054662:  and edx, 0x8
 8054665:  mov DWORD PTR [ebp-0x1c], edx
 8054668:  jne 8054978
 805466e:  xor ebx, ebx
 8054670:  mov edx, DWORD PTR [ebp+0x2c]
 8054673:  mov DWORD PTR [esp], edx
 8054676:  call 804eea0
 805467b:  mov edx, DWORD PTR [ebp-0x30]
 805467e:  lea eax, [edx+eax+0x2]
 8054682:  add eax, DWORD PTR [ebp+0x10]
 8054685:  add eax, DWORD PTR [ebp-0x2c]
 8054688:  add eax, edi
 805468a:  add eax, esi
 805468c:  add eax, ebx
 805468e:  mov DWORD PTR [esp], eax
 8054691:  call 804d6f0
 8054696:  mov DWORD PTR [ebp-0x18], 0x0
 805469d:  test eax, eax
 805469f:  mov ebx, eax
 80546a1:  je 805494e
 80546a7:  mov eax, DWORD PTR [ebp+0x10]
 80546aa:  mov DWORD PTR [esp+0x8], eax
 80546ae:  mov edx, DWORD PTR [ebp+0xc]
 80546b1:  mov DWORD PTR [esp], ebx
 80546b4:  mov DWORD PTR [esp+0x4], edx
 80546b8:  call 804efc0
 80546bd:  mov DWORD PTR [esp+0x8], 0x3a
 80546c5:  mov eax, DWORD PTR [ebp+0x10]
 80546c8:  mov DWORD PTR [esp], ebx
 80546cb:  mov DWORD PTR [esp+0x4], eax
 80546cf:  call 806c510
 80546d4:  mov edx, DWORD PTR [ebp+0x10]
 80546d7:  lea eax, [ebx+edx-0x1]
 80546db:  mov BYTE PTR [eax], 0x2f
 80546de:  mov edx, DWORD PTR [ebp+0x18]
 80546e1:  add eax, 0x1
 80546e4:  mov DWORD PTR [esp], eax
 80546e7:  mov DWORD PTR [esp+0x4], edx
 80546eb:  call 806c360
 80546f0:  mov edi, DWORD PTR [ebp-0x28]
 80546f3:  test edi, edi
 80546f5:  jne 8054a38
 80546fb:  mov esi, DWORD PTR [ebp-0x24]
 80546fe:  test esi, esi
 8054700:  jne 8054a18
 8054706:  mov ecx, DWORD PTR [ebp-0x20]
 8054709:  test ecx, ecx
 805470b:  jne 80549f8
 8054711:  mov edx, DWORD PTR [ebp-0x1c]
 8054714:  test edx, edx
 8054716:  jne 80549d8
 805471c:  mov BYTE PTR [eax], 0x2f
 805471f:  mov edx, DWORD PTR [ebp+0x2c]
 8054722:  add eax, 0x1
 8054725:  mov DWORD PTR [esp], eax
 8054728:  xor esi, esi
 805472a:  mov DWORD PTR [esp+0x4], edx
 805472e:  call 806afe0
 8054733:  mov eax, DWORD PTR [ebp+0x8]
 8054736:  mov eax, DWORD PTR [eax]
 8054738:  test eax, eax
 805473a:  mov DWORD PTR [ebp-0x18], eax
 805473d:  je 8054aa0
 8054743:  nop
 8054744:  lea esi, [esi]
 8054748:  mov edx, DWORD PTR [ebp-0x18]
 805474b:  mov eax, DWORD PTR [edx]
 805474d:  test eax, eax
 805474f:  je 805476f
 8054751:  mov DWORD PTR [esp+0x4], ebx
 8054755:  mov DWORD PTR [esp], eax
 8054758:  call 806af90
 805475d:  cmp eax, 0x0
 8054760:  je 8054960
 8054766:  jl 8054a58
 805476c:  mov esi, DWORD PTR [ebp-0x18]
 805476f:  mov eax, DWORD PTR [ebp-0x18]
 8054772:  mov eax, DWORD PTR [eax+0xc]
 8054775:  test eax, eax
 8054777:  mov DWORD PTR [ebp-0x18], eax
 805477a:  jne 8054748
 805477c:  mov edi, DWORD PTR [ebp+0x30]
 805477f:  test edi, edi
 8054781:  je 8054960
 8054787:  mov edx, DWORD PTR [ebp+0x10]
 805478a:  mov DWORD PTR [esp+0x4], edx
 805478e:  mov eax, DWORD PTR [ebp+0xc]
 8054791:  mov DWORD PTR [esp], eax
 8054794:  call 806c4d0
 8054799:  mov edx, DWORD PTR [ebp+0x14]
 805479c:  mov ecx, DWORD PTR [ebp+0x14]
 805479f:  and edx, 0xffffaaaa
 80547a5:  and ecx, 0x5555
 80547ab:  sar edx, 1
 80547ad:  add edx, ecx
 80547af:  mov ecx, edx
 80547b1:  and edx, 0x3333
 80547b7:  and ecx, 0xffffcccc
 80547bd:  sar ecx, 0x2
 80547c0:  add ecx, edx
 80547c2:  mov edx, ecx
 80547c4:  sar edx, 0x4
 80547c7:  add edx, ecx
 80547c9:  and edx, 0xf0f
 80547cf:  mov ecx, edx
 80547d1:  sar ecx, 0x8
 80547d4:  add ecx, edx
 80547d6:  shl eax, cl
 80547d8:  lea eax, [eax*4+0x14]
 80547df:  mov DWORD PTR [esp], eax
 80547e2:  call 804d6f0
 80547e7:  test eax, eax
 80547e9:  mov DWORD PTR [ebp-0x18], eax
 80547ec:  mov DWORD PTR [ebp-0x34], eax
 80547ef:  je 8054960
 80547f5:  mov DWORD PTR [eax], ebx
 80547f7:  mov eax, DWORD PTR [ebp+0x10]
 80547fa:  mov DWORD PTR [esp+0x4], eax
 80547fe:  mov edx, DWORD PTR [ebp+0xc]
 8054801:  mov DWORD PTR [esp], edx
 8054804:  call 806c4d0
 8054809:  mov edx, 0x1
 805480e:  sub eax, 0x1
 8054811:  je 8054a78
 8054817:  mov eax, DWORD PTR [ebp-0x34]
 805481a:  test esi, esi
 805481c:  mov DWORD PTR [eax+0x4], edx
 805481f:  mov DWORD PTR [eax+0x8], 0x0
 8054826:  je 8054a8b
 805482c:  mov edx, eax
 805482e:  mov eax, DWORD PTR [esi+0xc]
 8054831:  mov DWORD PTR [edx+0xc], eax
 8054834:  mov DWORD PTR [esi+0xc], edx
 8054837:  mov eax, DWORD PTR [ebp+0x10]
 805483a:  mov DWORD PTR [esp+0x4], eax
 805483e:  mov edx, DWORD PTR [ebp+0xc]
 8054841:  mov DWORD PTR [esp], edx
 8054844:  call 806c4d0
 8054849:  mov edi, DWORD PTR [ebp+0x14]
 805484c:  mov DWORD PTR [ebp-0x14], 0x0
 8054853:  sub eax, 0x1
 8054856:  sete al
 8054859:  movzx eax, al
 805485c:  sub edi, eax
 805485e:  mov eax, DWORD PTR [ebp+0x14]
 8054861:  test edi, edi
 8054863:  not eax
 8054865:  mov DWORD PTR [ebp-0x10], eax
 8054868:  js 8054940
 805486e:  mov edx, DWORD PTR [ebp+0xc]
 8054871:  add edx, DWORD PTR [ebp+0x10]
 8054874:  mov DWORD PTR [ebp-0x38], edx
 8054877:  jmp 8054889
 8054879:  lea esi, [esi]
 8054880:  sub edi, 0x1
 8054883:  js 8054940
 8054889:  test DWORD PTR [ebp-0x10], edi
 805488c:  jne 8054880
 805488e:  mov ecx, DWORD PTR [ebp+0x10]
 8054891:  xor ebx, ebx
 8054893:  mov eax, DWORD PTR [ebp-0x14]
 8054896:  mov edx, DWORD PTR [ebp-0x34]
 8054899:  test ecx, ecx
 805489b:  lea esi, [edx+eax*4+0x10]
 805489f:  je 8054880
 80548a1:  test ebx, ebx
 80548a3:  je 8054938
 80548a9:  lea esi, [esi]
 80548b0:  cmp ebx, DWORD PTR [ebp-0x38]
 80548b3:  jae 8054880
 80548b5:  mov DWORD PTR [esp+0x4], 0x0
 80548bd:  mov DWORD PTR [esp], ebx
 80548c0:  call 806c400
 80548c5:  add eax, 0x1
 80548c8:  cmp DWORD PTR [ebp-0x38], eax
 80548cb:  jbe 8054880
 80548cd:  mov ebx, eax
 80548cf:  test ebx, ebx
 80548d1:  je 8054880
 80548d3:  mov DWORD PTR [esp], ebx
 80548d6:  call 804eea0
 80548db:  mov DWORD PTR [esp+0x28], 0x1
 80548e3:  mov edx, DWORD PTR [ebp+0x2c]
 80548e6:  mov DWORD PTR [esp+0x24], edx
 80548ea:  mov edx, DWORD PTR [ebp+0x28]
 80548ed:  add eax, 0x1
 80548f0:  mov DWORD PTR [esp+0x20], edx
 80548f4:  mov edx, DWORD PTR [ebp+0x24]
 80548f7:  mov DWORD PTR [esp+0x1c], edx
 80548fb:  mov edx, DWORD PTR [ebp+0x20]
 80548fe:  mov DWORD PTR [esp+0x18], edx
 8054902:  mov edx, DWORD PTR [ebp+0x1c]
 8054905:  mov DWORD PTR [esp+0x14], edx
 8054909:  mov edx, DWORD PTR [ebp+0x18]
 805490c:  mov DWORD PTR [esp+0xc], edi
 8054910:  mov DWORD PTR [esp+0x8], eax
 8054914:  mov DWORD PTR [esp+0x4], ebx
 8054918:  mov DWORD PTR [esp+0x10], edx
 805491c:  mov eax, DWORD PTR [ebp+0x8]
 805491f:  mov DWORD PTR [esp], eax
 8054922:  call 8054610
 8054927:  add DWORD PTR [ebp-0x14], 0x1
 805492b:  mov DWORD PTR [esi], eax
 805492d:  add esi, 0x4
 8054930:  test ebx, ebx
 8054932:  jne 80548b0
 8054938:  mov ebx, DWORD PTR [ebp+0xc]
 805493b:  jmp 80548cf
 805493d:  lea esi, [esi]
 8054940:  mov edx, DWORD PTR [ebp-0x14]
 8054943:  mov eax, DWORD PTR [ebp-0x34]
 8054946:  mov DWORD PTR [eax+edx*4+0x10], 0x0
 805494e:  mov eax, DWORD PTR [ebp-0x18]
 8054951:  add esp, 0x58
 8054954:  pop ebx
 8054955:  pop esi
 8054956:  pop edi
 8054957:  pop ebp
 8054958:  ret
 8054959:  lea esi, [esi]
 8054960:  mov DWORD PTR [esp], ebx
 8054963:  call 804b4a0
 8054968:  mov eax, DWORD PTR [ebp-0x18]
 805496b:  add esp, 0x58
 805496e:  pop ebx
 805496f:  pop esi
 8054970:  pop edi
 8054971:  pop ebp
 8054972:  ret
 8054973:  nop
 8054974:  lea esi, [esi]
 8054978:  mov eax, DWORD PTR [ebp+0x28]
 805497b:  mov DWORD PTR [esp], eax
 805497e:  call 804eea0
 8054983:  lea ebx, [eax+0x1]
 8054986:  jmp 8054670
 805498b:  nop
 805498c:  lea esi, [esi]
 8054990:  mov eax, DWORD PTR [ebp+0x24]
 8054993:  mov DWORD PTR [esp], eax
 8054996:  call 804eea0
 805499b:  lea esi, [eax+0x1]
 805499e:  jmp 805465f
 80549a3:  nop
 80549a4:  lea esi, [esi]
 80549a8:  mov eax, DWORD PTR [ebp+0x20]
 80549ab:  mov DWORD PTR [esp], eax
 80549ae:  call 804eea0
 80549b3:  lea edi, [eax+0x1]
 80549b6:  jmp 805464e
 80549bb:  nop
 80549bc:  lea esi, [esi]
 80549c0:  mov eax, DWORD PTR [ebp+0x1c]
 80549c3:  mov DWORD PTR [esp], eax
 80549c6:  call 804eea0
 80549cb:  add eax, 0x1
 80549ce:  mov DWORD PTR [ebp-0x2c], eax
 80549d1:  jmp 805463d
 80549d6:  xchg ax, ax
 80549d8:  mov BYTE PTR [eax], 0x40
 80549db:  mov edx, DWORD PTR [ebp+0x28]
 80549de:  add eax, 0x1
 80549e1:  mov DWORD PTR [esp], eax
 80549e4:  mov DWORD PTR [esp+0x4], edx
 80549e8:  call 806c360
 80549ed:  jmp 805471c
 80549f2:  lea esi, [esi]
 80549f8:  mov BYTE PTR [eax], 0x2e
 80549fb:  mov edx, DWORD PTR [ebp+0x24]
 80549fe:  add eax, 0x1
 8054a01:  mov DWORD PTR [esp], eax
 8054a04:  mov DWORD PTR [esp+0x4], edx
 8054a08:  call 806c360
 8054a0d:  jmp 8054711
 8054a12:  lea esi, [esi]
 8054a18:  mov BYTE PTR [eax], 0x2e
 8054a1b:  mov edx, DWORD PTR [ebp+0x20]
 8054a1e:  add eax, 0x1
 8054a21:  mov DWORD PTR [esp], eax
 8054a24:  mov DWORD PTR [esp+0x4], edx
 8054a28:  call 806c360
 8054a2d:  jmp 8054706
 8054a32:  lea esi, [esi]
 8054a38:  mov BYTE PTR [eax], 0x5f
 8054a3b:  mov edx, DWORD PTR [ebp+0x1c]
 8054a3e:  add eax, 0x1
 8054a41:  mov DWORD PTR [esp], eax
 8054a44:  mov DWORD PTR [esp+0x4], edx
 8054a48:  call 806c360
 8054a4d:  jmp 80546fb
 8054a52:  lea esi, [esi]
 8054a58:  mov edi, DWORD PTR [ebp+0x30]
 8054a5b:  mov DWORD PTR [ebp-0x18], 0x0
 8054a62:  test edi, edi
 8054a64:  jne 8054787
 8054a6a:  lea esi, [esi]
 8054a70:  jmp 8054960
 8054a75:  lea esi, [esi]
 8054a78:  mov eax, DWORD PTR [ebp+0x14]
 8054a7b:  xor edx, edx
 8054a7d:  and eax, 0x3
 8054a80:  cmp eax, 0x3
 8054a83:  sete dl
 8054a86:  jmp 8054817
 8054a8b:  mov edx, DWORD PTR [ebp+0x8]
 8054a8e:  mov eax, DWORD PTR [edx]
 8054a90:  mov edx, DWORD PTR [ebp-0x34]
 8054a93:  mov DWORD PTR [edx+0xc], eax
 8054a96:  mov eax, DWORD PTR [ebp+0x8]
 8054a99:  mov DWORD PTR [eax], edx
 8054a9b:  jmp 8054837
 8054aa0:  mov esi, eax
 8054aa2:  jmp 805477c
 8054aa7:  nop
 8054aa8:  nop
 8054aa9:  nop
 8054aaa:  nop
 8054aab:  nop
 8054aac:  nop
 8054aad:  nop
 8054aae:  nop
 8054aaf:  nop

08054ab0 <_nl_explode_name>:
 8054ab0:  push ebp
 8054ab1:  mov ebp, esp
 8054ab3:  push edi
 8054ab4:  push esi
 8054ab5:  push ebx
 8054ab6:  sub esp, 0xc
 8054ab9:  mov eax, DWORD PTR [ebp+0x10]
 8054abc:  mov ecx, DWORD PTR [ebp+0x8]
 8054abf:  mov edi, DWORD PTR [ebp+0x14]
 8054ac2:  mov edx, DWORD PTR [ebp+0x18]
 8054ac5:  mov DWORD PTR [eax], 0x0
 8054acb:  mov eax, DWORD PTR [ebp+0x1c]
 8054ace:  mov DWORD PTR [edi], 0x0
 8054ad4:  mov DWORD PTR [edx], 0x0
 8054ada:  mov DWORD PTR [eax], 0x0
 8054ae0:  mov eax, DWORD PTR [ebp+0xc]
 8054ae3:  mov DWORD PTR [eax], ecx
 8054ae5:  movzx eax, BYTE PTR [ecx]
 8054ae8:  test al, al
 8054aea:  jne 8054b40
 8054aec:  mov DWORD PTR [esp], ecx
 8054aef:  xor esi, esi
 8054af1:  mov DWORD PTR [esp+0x4], 0x0
 8054af9:  call 806c400
 8054afe:  movzx ecx, BYTE PTR [eax]
 8054b01:  mov ebx, eax
 8054b03:  nop
 8054b04:  lea esi, [esi]
 8054b08:  cmp cl, 0x40
 8054b0b:  je 8054bc8
 8054b11:  mov eax, DWORD PTR [edi]
 8054b13:  test eax, eax
 8054b15:  je 8054b20
 8054b17:  cmp BYTE PTR [eax], 0x0
 8054b1a:  je 8054bb8
 8054b20:  mov edx, DWORD PTR [ebp+0x18]
 8054b23:  mov eax, DWORD PTR [edx]
 8054b25:  test eax, eax
 8054b27:  je 8054b31
 8054b29:  cmp BYTE PTR [eax], 0x0
 8054b2c:  jne 8054b31
 8054b2e:  and esi, 0xfd
 8054b31:  add esp, 0xc
 8054b34:  mov eax, esi
 8054b36:  pop ebx
 8054b37:  pop esi
 8054b38:  pop edi
 8054b39:  pop ebp
 8054b3a:  ret
 8054b3b:  nop
 8054b3c:  lea esi, [esi]
 8054b40:  cmp al, 0x5f
 8054b42:  je 8054aec
 8054b44:  cmp al, 0x40
 8054b46:  je 8054aec
 8054b48:  cmp al, 0x2e
 8054b4a:  lea esi, [esi]
 8054b50:  je 8054aec
 8054b52:  mov eax, ecx
 8054b54:  lea esi, [esi]
 8054b58:  add eax, 0x1
 8054b5b:  movzx edx, BYTE PTR [eax]
 8054b5e:  test dl, dl
 8054b60:  jne 8054b90
 8054b62:  cmp ecx, eax
 8054b64:  mov ebx, eax
 8054b66:  je 8054aec
 8054b68:  xor esi, esi
 8054b6a:  cmp dl, 0x40
 8054b6d:  mov ecx, edx
 8054b6f:  je 8054bc8
 8054b71:  xor eax, eax
 8054b73:  cmp dl, 0x5f
 8054b76:  mov esi, 0x2
 8054b7b:  je 8054c70
 8054b81:  cmp cl, 0x2e
 8054b84:  je 8054be8
 8054b86:  mov esi, eax
 8054b88:  jmp 8054b08
 8054b8d:  lea esi, [esi]
 8054b90:  cmp dl, 0x5f
 8054b93:  nop
 8054b94:  lea esi, [esi]
 8054b98:  je 8054b62
 8054b9a:  cmp dl, 0x40
 8054b9d:  lea esi, [esi]
 8054ba0:  je 8054b62
 8054ba2:  cmp dl, 0x2e
 8054ba5:  lea esi, [esi]
 8054ba8:  jne 8054b58
 8054baa:  lea esi, [esi]
 8054bb0:  jmp 8054b62
 8054bb2:  lea esi, [esi]
 8054bb8:  and esi, 0xfb
 8054bbb:  nop
 8054bbc:  lea esi, [esi]
 8054bc0:  jmp 8054b20
 8054bc5:  lea esi, [esi]
 8054bc8:  mov BYTE PTR [ebx], 0x0
 8054bcb:  mov edx, DWORD PTR [ebp+0x10]
 8054bce:  lea eax, [ebx+0x1]
 8054bd1:  mov DWORD PTR [edx], eax
 8054bd3:  cmp BYTE PTR [ebx+0x1], 0x0
 8054bd7:  je 8054b11
 8054bdd:  or esi, 0x8
 8054be0:  jmp 8054b11
 8054be5:  lea esi, [esi]
 8054be8:  mov BYTE PTR [ebx], 0x0
 8054beb:  mov eax, DWORD PTR [ebp+0x18]
 8054bee:  lea edx, [ebx+0x1]
 8054bf1:  mov DWORD PTR [eax], edx
 8054bf3:  movzx ecx, BYTE PTR [ebx+0x1]
 8054bf7:  test cl, cl
 8054bf9:  je 8054ce0
 8054bff:  cmp cl, 0x40
 8054c02:  mov ebx, edx
 8054c04:  je 8054ce0
 8054c0a:  lea esi, [esi]
 8054c10:  add ebx, 0x1
 8054c13:  movzx ecx, BYTE PTR [ebx]
 8054c16:  test cl, cl
 8054c18:  jne 8054cc8
 8054c1e:  cmp ebx, edx
 8054c20:  je 8054b08
 8054c26:  mov eax, ebx
 8054c28:  sub eax, edx
 8054c2a:  mov DWORD PTR [esp], edx
 8054c2d:  mov DWORD PTR [esp+0x4], eax
 8054c31:  call 8054410
 8054c36:  mov edx, DWORD PTR [ebp+0x1c]
 8054c39:  test eax, eax
 8054c3b:  mov DWORD PTR [ebp-0x10], eax
 8054c3e:  mov DWORD PTR [edx], eax
 8054c40:  je 8054ced
 8054c46:  mov edx, DWORD PTR [ebp+0x18]
 8054c49:  mov eax, DWORD PTR [edx]
 8054c4b:  mov edx, DWORD PTR [ebp-0x10]
 8054c4e:  mov DWORD PTR [esp], eax
 8054c51:  mov DWORD PTR [esp+0x4], edx
 8054c55:  call 806af90
 8054c5a:  test eax, eax
 8054c5c:  je 8054cfd
 8054c62:  or esi, 0x1
 8054c65:  movzx ecx, BYTE PTR [ebx]
 8054c68:  jmp 8054b08
 8054c6d:  lea esi, [esi]
 8054c70:  mov BYTE PTR [ebx], 0x0
 8054c73:  add ebx, 0x1
 8054c76:  mov DWORD PTR [edi], ebx
 8054c78:  movzx eax, BYTE PTR [ebx]
 8054c7b:  test al, al
 8054c7d:  mov ecx, eax
 8054c7f:  jne 8054cac
 8054c81:  lea esi, [esi]
 8054c88:  cmp cl, 0x2e
 8054c8b:  mov eax, 0x4
 8054c90:  mov esi, 0x6
 8054c95:  jne 8054b86
 8054c9b:  jmp 8054be8
 8054ca0:  add ebx, 0x1
 8054ca3:  movzx eax, BYTE PTR [ebx]
 8054ca6:  test al, al
 8054ca8:  mov ecx, eax
 8054caa:  je 8054c88
 8054cac:  cmp al, 0x2e
 8054cae:  je 8054c88
 8054cb0:  cmp al, 0x40
 8054cb2:  jne 8054ca0
 8054cb4:  mov ecx, eax
 8054cb6:  mov esi, 0x4
 8054cbb:  nop
 8054cbc:  lea esi, [esi]
 8054cc0:  jmp 8054b08
 8054cc5:  lea esi, [esi]
 8054cc8:  cmp cl, 0x40
 8054ccb:  nop
 8054ccc:  lea esi, [esi]
 8054cd0:  jne 8054c10
 8054cd6:  xchg ax, ax
 8054cd8:  jmp 8054c1e
 8054cdd:  lea esi, [esi]
 8054ce0:  mov ebx, edx
 8054ce2:  lea esi, [esi]
 8054ce8:  jmp 8054b08
 8054ced:  mov esi, 0xffffffff
 8054cf2:  lea esi, [esi]
 8054cf8:  jmp 8054b31
 8054cfd:  mov eax, DWORD PTR [ebp-0x10]
 8054d00:  mov DWORD PTR [esp], eax
 8054d03:  call 804b4a0
 8054d08:  movzx ecx, BYTE PTR [ebx]
 8054d0b:  jmp 8054b08

08054d10 <__gettext_free_exp>:
 8054d10:  push ebp
 8054d11:  mov ebp, esp
 8054d13:  push edi
 8054d14:  mov edi, eax
 8054d16:  push esi
 8054d17:  push ebx
 8054d18:  sub esp, 0x4
 8054d1b:  test eax, eax
 8054d1d:  je 8054d45
 8054d1f:  mov eax, DWORD PTR [eax]
 8054d21:  cmp eax, 0x2
 8054d24:  je 8054d85
 8054d26:  cmp eax, 0x3
 8054d29:  je 8054d50
 8054d2b:  sub eax, 0x1
 8054d2e:  xchg ax, ax
 8054d30:  je 8054dbd
 8054d36:  mov DWORD PTR [esp], edi
 8054d39:  lea esi, [esi]
 8054d40:  call 804b4a0
 8054d45:  add esp, 0x4
 8054d48:  pop ebx
 8054d49:  pop esi
 8054d4a:  pop edi
 8054d4b:  pop ebp
 8054d4c:  ret
 8054d4d:  lea esi, [esi]
 8054d50:  mov ebx, DWORD PTR [edi+0x10]
 8054d53:  test ebx, ebx
 8054d55:  je 8054d85
 8054d57:  mov eax, DWORD PTR [ebx]
 8054d59:  cmp eax, 0x2
 8054d5c:  je 8054fb5
 8054d62:  cmp eax, 0x3
 8054d65:  je 8054fa8
 8054d6b:  sub eax, 0x1
 8054d6e:  xchg ax, ax
 8054d70:  je 8054fbd
 8054d76:  mov DWORD PTR [esp], ebx
 8054d79:  lea esi, [esi]
 8054d80:  call 804b4a0
 8054d85:  mov esi, DWORD PTR [edi+0xc]
 8054d88:  test esi, esi
 8054d8a:  je 8054dbd
 8054d8c:  mov eax, DWORD PTR [esi]
 8054d8e:  cmp eax, 0x2
 8054d91:  je 8054e98
 8054d97:  cmp eax, 0x3
 8054d9a:  je 8054e90
 8054da0:  sub eax, 0x1
 8054da3:  nop
 8054da4:  lea esi, [esi]
 8054da8:  je 8054ed5
 8054dae:  mov DWORD PTR [esp], esi
 8054db1:  lea esi, [esi]
 8054db8:  call 804b4a0
 8054dbd:  mov esi, DWORD PTR [edi+0x8]
 8054dc0:  test esi, esi
 8054dc2:  je 8054d36
 8054dc8:  mov eax, DWORD PTR [esi]
 8054dca:  cmp eax, 0x2
 8054dcd:  je 8054e18
 8054dcf:  cmp eax, 0x3
 8054dd2:  je 8054f68
 8054dd8:  sub eax, 0x1
 8054ddb:  nop
 8054ddc:  lea esi, [esi]
 8054de0:  je 8054e4d
 8054de2:  mov DWORD PTR [esp], esi
 8054de5:  lea esi, [esi]
 8054de8:  call 804b4a0
 8054ded:  lea esi, [esi]
 8054df0:  jmp 8054d36
 8054df5:  lea esi, [esi]
 8054df8:  mov eax, DWORD PTR [ebx+0x10]
 8054dfb:  call 8054d10
 8054e00:  mov eax, DWORD PTR [ebx+0xc]
 8054e03:  call 8054d10
 8054e08:  mov eax, DWORD PTR [ebx+0x8]
 8054e0b:  call 8054d10
 8054e10:  mov DWORD PTR [esp], ebx
 8054e13:  call 804b4a0
 8054e18:  mov ebx, DWORD PTR [esi+0xc]
 8054e1b:  test ebx, ebx
 8054e1d:  je 8054e4d
 8054e1f:  mov eax, DWORD PTR [ebx]
 8054e21:  cmp eax, 0x2
 8054e24:  je 8054f30
 8054e2a:  cmp eax, 0x3
 8054e2d:  je 8054f28
 8054e33:  sub eax, 0x1
 8054e36:  xchg ax, ax
 8054e38:  je 8054f38
 8054e3e:  mov DWORD PTR [esp], ebx
 8054e41:  lea esi, [esi]
 8054e48:  call 804b4a0
 8054e4d:  mov ebx, DWORD PTR [esi+0x8]
 8054e50:  test ebx, ebx
 8054e52:  je 8054de2
 8054e54:  mov eax, DWORD PTR [ebx]
 8054e56:  cmp eax, 0x2
 8054e59:  je 8054f10
 8054e5f:  cmp eax, 0x3
 8054e62:  je 8054f08
 8054e68:  sub eax, 0x1
 8054e6b:  nop
 8054e6c:  lea esi, [esi]
 8054e70:  je 8054f18
 8054e76:  mov DWORD PTR [esp], ebx
 8054e79:  lea esi, [esi]
 8054e80:  call 804b4a0
 8054e85:  lea esi, [esi]
 8054e88:  jmp 8054de2
 8054e8d:  lea esi, [esi]
 8054e90:  mov eax, DWORD PTR [esi+0x10]
 8054e93:  call 8054d10
 8054e98:  mov ebx, DWORD PTR [esi+0xc]
 8054e9b:  test ebx, ebx
 8054e9d:  lea esi, [esi]
 8054ea0:  je 8054ed5
 8054ea2:  mov eax, DWORD PTR [ebx]
 8054ea4:  cmp eax, 0x2
 8054ea7:  je 8054fd8
 8054ead:  cmp eax, 0x3
 8054eb0:  je 8054fd0
 8054eb6:  sub eax, 0x1
 8054eb9:  lea esi, [esi]
 8054ec0:  je 8054fe0
 8054ec6:  mov DWORD PTR [esp], ebx
 8054ec9:  lea esi, [esi]
 8054ed0:  call 804b4a0
 8054ed5:  mov ebx, DWORD PTR [esi+0x8]
 8054ed8:  test ebx, ebx
 8054eda:  je 8054dae
 8054ee0:  mov eax, DWORD PTR [ebx]
 8054ee2:  cmp eax, 0x2
 8054ee5:  je 8054f50
 8054ee7:  cmp eax, 0x3
 8054eea:  je 8054f48
 8054eec:  sub eax, 0x1
 8054eef:  nop
 8054ef0:  je 8054f58
 8054ef2:  mov DWORD PTR [esp], ebx
 8054ef5:  lea esi, [esi]
 8054ef8:  call 804b4a0
 8054efd:  lea esi, [esi]
 8054f00:  jmp 8054dae
 8054f05:  lea esi, [esi]
 8054f08:  mov eax, DWORD PTR [ebx+0x10]
 8054f0b:  call 8054d10
 8054f10:  mov eax, DWORD PTR [ebx+0xc]
 8054f13:  call 8054d10
 8054f18:  mov eax, DWORD PTR [ebx+0x8]
 8054f1b:  call 8054d10
 8054f20:  jmp 8054e76
 8054f25:  lea esi, [esi]
 8054f28:  mov eax, DWORD PTR [ebx+0x10]
 8054f2b:  call 8054d10
 8054f30:  mov eax, DWORD PTR [ebx+0xc]
 8054f33:  call 8054d10
 8054f38:  mov eax, DWORD PTR [ebx+0x8]
 8054f3b:  call 8054d10
 8054f40:  jmp 8054e3e
 8054f45:  lea esi, [esi]
 8054f48:  mov eax, DWORD PTR [ebx+0x10]
 8054f4b:  call 8054d10
 8054f50:  mov eax, DWORD PTR [ebx+0xc]
 8054f53:  call 8054d10
 8054f58:  mov eax, DWORD PTR [ebx+0x8]
 8054f5b:  call 8054d10
 8054f60:  jmp 8054ef2
 8054f62:  lea esi, [esi]
 8054f68:  mov ebx, DWORD PTR [esi+0x10]
 8054f6b:  test ebx, ebx
 8054f6d:  lea esi, [esi]
 8054f70:  je 8054e18
 8054f76:  mov eax, DWORD PTR [ebx]
 8054f78:  cmp eax, 0x2
 8054f7b:  nop
 8054f7c:  lea esi, [esi]
 8054f80:  je 8054e00
 8054f86:  cmp eax, 0x3
 8054f89:  je 8054df8
 8054f8f:  sub eax, 0x1
 8054f92:  lea esi, [esi]
 8054f98:  jne 8054e10
 8054f9e:  xchg ax, ax
 8054fa0:  jmp 8054e08
 8054fa5:  lea esi, [esi]
 8054fa8:  mov eax, DWORD PTR [ebx+0x10]
 8054fab:  nop
 8054fac:  lea esi, [esi]
 8054fb0:  call 8054d10
 8054fb5:  mov eax, DWORD PTR [ebx+0xc]
 8054fb8:  call 8054d10
 8054fbd:  mov eax, DWORD PTR [ebx+0x8]
 8054fc0:  call 8054d10
 8054fc5:  jmp 8054d76
 8054fca:  lea esi, [esi]
 8054fd0:  mov eax, DWORD PTR [ebx+0x10]
 8054fd3:  call 8054d10
 8054fd8:  mov eax, DWORD PTR [ebx+0xc]
 8054fdb:  call 8054d10
 8054fe0:  mov eax, DWORD PTR [ebx+0x8]
 8054fe3:  call 8054d10
 8054fe8:  jmp 8054ec6
 8054fed:  lea esi, [esi]

08054ff0 <new_exp>:
 8054ff0:  push ebp
 8054ff1:  mov ebp, esp
 8054ff3:  push edi
 8054ff4:  mov edi, eax
 8054ff6:  push esi
 8054ff7:  mov esi, eax
 8054ff9:  push ebx
 8054ffa:  mov ebx, ecx
 8054ffc:  sub esp, 0xc
 8054fff:  sub edi, 0x1
 8055002:  mov DWORD PTR [ebp-0x14], edx
 8055005:  js 805502a
 8055007:  lea ecx, [ecx+eax*4-0x8]
 805500b:  mov eax, DWORD PTR [ebx+edi*4]
 805500e:  mov edx, edi
 8055010:  test eax, eax
 8055012:  jne 8055021
 8055014:  jmp 8055080
 8055016:  xchg ax, ax
 8055018:  mov eax, DWORD PTR [ecx]
 805501a:  sub ecx, 0x4
 805501d:  test eax, eax
 805501f:  je 8055080
 8055021:  sub edx, 0x1
 8055024:  lea esi, [esi]
 8055028:  jns 8055018
 805502a:  mov DWORD PTR [esp], 0x14
 8055031:  call 804d6f0
 8055036:  test eax, eax
 8055038:  mov DWORD PTR [ebp-0x10], eax
 805503b:  je 805507c
 805503d:  mov edx, DWORD PTR [ebp-0x14]
 8055040:  test edi, edi
 8055042:  mov DWORD PTR [eax], esi
 8055044:  mov DWORD PTR [eax+0x4], edx
 8055047:  js 80550e7
 805504d:  mov edx, DWORD PTR [ebp-0x10]
 8055050:  lea eax, [edi*4]
 8055057:  lea ecx, [ebx+eax]
 805505a:  lea ebx, [edx+eax+0x8]
 805505e:  xor edx, edx
 8055060:  mov eax, DWORD PTR [ecx]
 8055062:  add edx, 0x1
 8055065:  sub ecx, 0x4
 8055068:  mov DWORD PTR [ebx], eax
 805506a:  sub ebx, 0x4
 805506d:  cmp edx, esi
 805506f:  jne 8055060
 8055071:  mov eax, DWORD PTR [ebp-0x10]
 8055074:  add esp, 0xc
 8055077:  pop ebx
 8055078:  pop esi
 8055079:  pop edi
 805507a:  pop ebp
 805507b:  ret
 805507c:  test edi, edi
 805507e:  js 80550e7
 8055080:  lea esi, [ebx+edi*4]
 8055083:  jmp 80550ad
 8055085:  lea esi, [esi]
 8055088:  cmp eax, 0x3
 805508b:  nop
 805508c:  lea esi, [esi]
 8055090:  je 80550d0
 8055092:  sub eax, 0x1
 8055095:  lea esi, [esi]
 8055098:  je 80550c2
 805509a:  mov DWORD PTR [esp], ebx
 805509d:  lea esi, [esi]
 80550a0:  call 804b4a0
 80550a5:  sub esi, 0x4
 80550a8:  sub edi, 0x1
 80550ab:  js 80550e0
 80550ad:  mov ebx, DWORD PTR [esi]
 80550af:  test ebx, ebx
 80550b1:  je 80550a5
 80550b3:  mov eax, DWORD PTR [ebx]
 80550b5:  cmp eax, 0x2
 80550b8:  jne 8055088
 80550ba:  mov eax, DWORD PTR [ebx+0xc]
 80550bd:  call 8054d10
 80550c2:  mov eax, DWORD PTR [ebx+0x8]
 80550c5:  call 8054d10
 80550ca:  jmp 805509a
 80550cc:  lea esi, [esi]
 80550d0:  mov eax, DWORD PTR [ebx+0x10]
 80550d3:  call 8054d10
 80550d8:  jmp 80550ba
 80550da:  lea esi, [esi]
 80550e0:  mov DWORD PTR [ebp-0x10], 0x0
 80550e7:  mov eax, DWORD PTR [ebp-0x10]
 80550ea:  add esp, 0xc
 80550ed:  pop ebx
 80550ee:  pop esi
 80550ef:  pop edi
 80550f0:  pop ebp
 80550f1:  ret
 80550f2:  lea esi, [esi]
 80550f9:  lea edi, [edi]

08055100 <__gettextparse>:
 8055100:  push ebp
 8055101:  mov ebp, esp
 8055103:  push edi
 8055104:  push esi
 8055105:  push ebx
 8055106:  lea edx, [ebp-0x1b4]
 805510c:  sub esp, 0x4f8
 8055112:  lea edi, [ebp-0x4d4]
 8055118:  mov ebx, edx
 805511a:  mov DWORD PTR [ebp-0x4f4], 0xfffffffe
 8055124:  mov esi, edi
 8055126:  mov DWORD PTR [ebp-0x4f0], 0x0
 8055130:  mov DWORD PTR [ebp-0x4ec], 0x0
 805513a:  mov DWORD PTR [ebp-0x4e8], 0xc8
 8055144:  movzx eax, WORD PTR [ebp-0x4f0]
 805514b:  mov ecx, DWORD PTR [ebp-0x4e8]
 8055151:  mov DWORD PTR [ebp-0x4e0], edx
 8055157:  mov DWORD PTR [ebp-0x4dc], edi
 805515d:  mov WORD PTR [ebx], ax
 8055160:  lea eax, [edx+ecx*2-0x2]
 8055164:  cmp ebx, eax
 8055166:  jb 8055241
 805516c:  cmp DWORD PTR [ebp-0x4e8], 0x270f
 8055176:  ja 8055834
 805517c:  sub ebx, edx
 805517e:  shl DWORD PTR [ebp-0x4e8], 1
 8055184:  sar ebx, 1
 8055186:  cmp DWORD PTR [ebp-0x4e8], 0x2710
 8055190:  lea esi, [ebx+0x1]
 8055193:  jbe 805519f
 8055195:  mov DWORD PTR [ebp-0x4e8], 0x2710
 805519f:  mov ebx, DWORD PTR [ebp-0x4e8]
 80551a5:  mov ecx, DWORD PTR [ebp-0x4e8]
 80551ab:  add ebx, ebx
 80551ad:  lea eax, [ebx+ecx]
 80551b0:  add ebx, 0x3
 80551b3:  lea eax, [eax+eax+0x14]
 80551b7:  and ebx, 0xfc
 80551ba:  sub esp, eax
 80551bc:  lea eax, [esp+0x1b]
 80551c0:  and eax, 0xf0
 80551c3:  mov DWORD PTR [ebp-0x4e0], eax
 80551c9:  lea eax, [esi+esi]
 80551cc:  mov DWORD PTR [esp+0x4], edx
 80551d0:  mov edx, DWORD PTR [ebp-0x4e0]
 80551d6:  mov DWORD PTR [esp+0x8], eax
 80551da:  mov DWORD PTR [esp], edx
 80551dd:  call 804efc0
 80551e2:  lea eax, [esi*4]
 80551e9:  add ebx, DWORD PTR [ebp-0x4e0]
 80551ef:  mov DWORD PTR [esp+0x4], edi
 80551f3:  mov DWORD PTR [esp+0x8], eax
 80551f7:  mov DWORD PTR [ebp-0x4dc], ebx
 80551fd:  mov DWORD PTR [esp], ebx
 8055200:  call 804efc0
 8055205:  mov edx, 0x1
 805520a:  mov ebx, DWORD PTR [ebp-0x4e0]
 8055210:  mov ecx, edx
 8055212:  mov edi, DWORD PTR [ebp-0x4e0]
 8055218:  sub ecx, esi
 805521a:  lea eax, [ecx+ecx]
 805521d:  sub ebx, eax
 805521f:  mov eax, DWORD PTR [ebp-0x4e8]
 8055225:  sub eax, edx
 8055227:  lea eax, [edi+eax*2]
 805522a:  cmp ebx, eax
 805522c:  jae 8055400
 8055232:  mov esi, DWORD PTR [ebp-0x4dc]
 8055238:  lea eax, [ecx*4]
 805523f:  sub esi, eax
 8055241:  mov eax, DWORD PTR [ebp-0x4f0]
 8055247:  movsx ecx, WORD PTR [eax+eax+0x80b0760]
 805524f:  cmp ecx, 0xffff8000
 8055255:  je 805529f
 8055257:  cmp DWORD PTR [ebp-0x4f4], 0xfe
 805525e:  je 8055478
 8055264:  mov edi, DWORD PTR [ebp-0x4f4]
 805526a:  test edi, edi
 805526c:  jle 80554cd
 8055272:  cmp DWORD PTR [ebp-0x4f4], 0x105
 805527c:  mov edi, 0x12
 8055281:  jbe 8055440
 8055287:  lea edx, [edi+ecx]
 805528a:  cmp edx, 0x35
 805528d:  ja 805529f
 805528f:  movsx eax, WORD PTR [edx+edx+0x80b08c0]
 8055297:  cmp eax, edi
 8055299:  je 805533a
 805529f:  mov eax, DWORD PTR [ebp-0x4f0]
 80552a5:  movsx edi, WORD PTR [eax+eax+0x80b09c0]
 80552ad:  test edi, edi
 80552af:  je 8055358
 80552b5:  movsx edx, WORD PTR [edi+edi+0x80b09f8]
 80552bd:  mov eax, 0x1
 80552c2:  sub eax, edx
 80552c4:  cmp edi, 0xc
 80552c7:  mov DWORD PTR [ebp-0x4e4], edx
 80552cd:  mov ecx, DWORD PTR [esi+eax*4]
 80552d0:  jbe 8055438
 80552d6:  mov eax, DWORD PTR [ebp-0x4e4]
 80552dc:  mov edx, esi
 80552de:  shl eax, 0x2
 80552e1:  sub edx, eax
 80552e3:  mov eax, DWORD PTR [ebp-0x4e4]
 80552e9:  mov DWORD PTR [edx+0x4], ecx
 80552ec:  lea esi, [edx+0x4]
 80552ef:  add eax, eax
 80552f1:  sub ebx, eax
 80552f3:  movsx eax, WORD PTR [edi+edi+0x80b0a12]
 80552fb:  movzx ecx, WORD PTR [ebx]
 80552fe:  lea edi, [eax-0x10]
 8055301:  movsx eax, WORD PTR [edi+edi+0x80b0a2c]
 8055309:  movsx edx, cx
 805530c:  lea eax, [edx+eax]
 805530f:  cmp eax, 0x35
 8055312:  jbe 8055410
 8055318:  movsx edi, WORD PTR [edi+edi+0x80b0a30]
 8055320:  mov DWORD PTR [ebp-0x4f0], edi
 8055326:  add ebx, 0x2
 8055329:  mov edx, DWORD PTR [ebp-0x4e0]
 805532f:  mov edi, DWORD PTR [ebp-0x4dc]
 8055335:  jmp 8055144
 805533a:  movsx eax, WORD PTR [edx+edx+0x80b0940]
 8055342:  cmp eax, 0x0
 8055345:  jge 805551d
 805534b:  cmp eax, 0xffff8000
 8055350:  jne 8055653
 8055356:  xchg ax, ax
 8055358:  cmp DWORD PTR [ebp-0x4ec], 0x3
 805535f:  jne 805538d
 8055361:  lea esi, [esi]
 8055368:  jmp 8055500
 805536d:  lea esi, [esi]
 8055370:  cmp ebx, DWORD PTR [ebp-0x4e0]
 8055376:  je 8055400
 805537c:  sub ebx, 0x2
 805537f:  sub esi, 0x4
 8055382:  movsx eax, WORD PTR [ebx]
 8055385:  movsx ecx, WORD PTR [eax+eax+0x80b0760]
 805538d:  cmp ecx, 0xffff8000
 8055393:  je 8055370
 8055395:  lea eax, [ecx+0x1]
 8055398:  cmp eax, 0x35
 805539b:  ja 8055370
 805539d:  cmp WORD PTR [eax+eax+0x80b08c0], 0x1
 80553a6:  jne 8055370
 80553a8:  movsx eax, WORD PTR [eax+eax+0x80b0940]
 80553b0:  cmp eax, 0x0
 80553b3:  jl 80553e0
 80553b5:  je 8055370
 80553b7:  cmp eax, 0x1b
 80553ba:  je 805582d
 80553c0:  mov ecx, DWORD PTR [ebp-0x4f8]
 80553c6:  add esi, 0x4
 80553c9:  mov DWORD PTR [ebp-0x4f0], eax
 80553cf:  mov DWORD PTR [ebp-0x4ec], 0x3
 80553d9:  mov DWORD PTR [esi], ecx
 80553db:  jmp 8055326
 80553e0:  cmp eax, 0xffff8000
 80553e5:  je 8055370
 80553e7:  mov edi, eax
 80553e9:  neg edi
 80553eb:  mov DWORD PTR [ebp-0x4ec], 0x3
 80553f5:  jmp 80552b5
 80553fa:  lea esi, [esi]
 8055400:  mov eax, 0x1
 8055405:  lea esp, [ebp-0xc]
 8055408:  pop ebx
 8055409:  pop esi
 805540a:  pop edi
 805540b:  pop ebp
 805540c:  ret
 805540d:  lea esi, [esi]
 8055410:  cmp cx, WORD PTR [eax+eax+0x80b08c0]
 8055418:  jne 8055318
 805541e:  movsx eax, WORD PTR [eax+eax+0x80b0940]
 8055426:  mov DWORD PTR [ebp-0x4f0], eax
 805542c:  jmp 8055326
 8055431:  lea esi, [esi]
 8055438:  jmp DWORD PTR [edi*4+0x80b0520]
 805543f:  nop
 8055440:  mov eax, DWORD PTR [ebp-0x4f4]
 8055446:  movsx edi, BYTE PTR [eax+0x80b07a0]
 805544d:  jmp 8055287
 8055452:  mov eax, DWORD PTR [esi]
 8055454:  mov ecx, DWORD PTR [esi-0x8]
 8055457:  mov edx, DWORD PTR [esi-0x4]
 805545a:  mov DWORD PTR [ebp-0x14], eax
 805545d:  mov eax, 0x2
 8055462:  mov DWORD PTR [ebp-0x18], ecx
 8055465:  lea ecx, [ebp-0x18]
 8055468:  call 8054ff0
 805546d:  mov ecx, eax
 805546f:  jmp 80552d6
 8055474:  lea esi, [esi]
 8055478:  mov edi, DWORD PTR [ebp+0x8]
 805547b:  mov edx, DWORD PTR [edi]
 805547d:  movzx eax, BYTE PTR [edx]
 8055480:  test al, al
 8055482:  je 80554ea
 8055484:  lea esi, [esi]
 8055488:  cmp al, 0x20
 805548a:  je 80554e0
 805548c:  cmp al, 0x9
 805548e:  je 80554e0
 8055490:  movsx edi, al
 8055493:  cmp al, 0x7c
 8055495:  mov DWORD PTR [ebp-0x4f4], edi
 805549b:  lea edi, [edx+0x1]
 805549e:  mov DWORD PTR [ebp-0x4d8], edi
 80554a4:  jbe 8055568
 80554aa:  mov DWORD PTR [ebp-0x4f4], 0x100
 80554b4:  mov edi, DWORD PTR [ebp-0x4d8]
 80554ba:  mov edx, DWORD PTR [ebp+0x8]
 80554bd:  mov DWORD PTR [edx], edi
 80554bf:  mov edi, DWORD PTR [ebp-0x4f4]
 80554c5:  test edi, edi
 80554c7:  jg 8055272
 80554cd:  mov DWORD PTR [ebp-0x4f4], 0x0
 80554d7:  xor edi, edi
 80554d9:  jmp 8055287
 80554de:  xchg ax, ax
 80554e0:  add edx, 0x1
 80554e3:  movzx eax, BYTE PTR [edx]
 80554e6:  test al, al
 80554e8:  jne 8055488
 80554ea:  mov eax, DWORD PTR [ebp+0x8]
 80554ed:  xor edi, edi
 80554ef:  mov DWORD PTR [ebp-0x4f4], 0x0
 80554f9:  mov DWORD PTR [eax], edx
 80554fb:  jmp 8055287
 8055500:  mov edx, DWORD PTR [ebp-0x4f4]
 8055506:  test edx, edx
 8055508:  je 8055400
 805550e:  mov DWORD PTR [ebp-0x4f4], 0xfffffffe
 8055518:  jmp 805538d
 805551d:  je 8055358
 8055523:  cmp eax, 0x1b
 8055526:  xchg ax, ax
 8055528:  je 805582d
 805552e:  mov ecx, DWORD PTR [ebp-0x4f4]
 8055534:  test ecx, ecx
 8055536:  xchg ax, ax
 8055538:  je 8055544
 805553a:  mov DWORD PTR [ebp-0x4f4], 0xfffffffe
 8055544:  mov edx, DWORD PTR [ebp-0x4f8]
 805554a:  add esi, 0x4
 805554d:  mov DWORD PTR [ebp-0x4f0], eax
 8055553:  cmp DWORD PTR [ebp-0x4ec], 0x1
 805555a:  adc DWORD PTR [ebp-0x4ec], 0xff
 8055561:  mov DWORD PTR [esi], edx
 8055563:  jmp 8055326
 8055568:  movzx eax, al
 805556b:  jmp DWORD PTR [eax*4+0x80b0554]
 8055572:  xor ecx, ecx
 8055574:  xor edx, edx
 8055576:  xor eax, eax
 8055578:  call 8054ff0
 805557d:  mov ecx, eax
 805557f:  jmp 80552d6
 8055584:  mov eax, DWORD PTR [esi]
 8055586:  lea ecx, [ebp-0x10]
 8055589:  mov edx, 0x2
 805558e:  mov DWORD PTR [ebp-0x10], eax
 8055591:  mov eax, 0x1
 8055596:  call 8054ff0
 805559b:  mov ecx, eax
 805559d:  jmp 80552d6
 80555a2:  xor ecx, ecx
 80555a4:  xor eax, eax
 80555a6:  mov edx, 0x1
 80555ab:  call 8054ff0
 80555b0:  test eax, eax
 80555b2:  mov ecx, eax
 80555b4:  je 80552d6
 80555ba:  mov eax, DWORD PTR [esi]
 80555bc:  mov DWORD PTR [ecx+0x8], eax
 80555bf:  jmp 80552d6
 80555c4:  mov ecx, DWORD PTR [esi-0x4]
 80555c7:  jmp 80552d6
 80555cc:  mov edx, DWORD PTR [esi]
 80555ce:  lea ecx, [ebp-0x18]
 80555d1:  mov eax, DWORD PTR [esi-0x8]
 80555d4:  mov DWORD PTR [ebp-0x14], edx
 80555d7:  mov edx, 0xe
 80555dc:  mov DWORD PTR [ebp-0x18], eax
 80555df:  mov eax, 0x2
 80555e4:  call 8054ff0
 80555e9:  mov ecx, eax
 80555eb:  jmp 80552d6
 80555f0:  mov edx, DWORD PTR [esi]
 80555f2:  lea ecx, [ebp-0x18]
 80555f5:  mov eax, DWORD PTR [esi-0x8]
 80555f8:  mov DWORD PTR [ebp-0x14], edx
 80555fb:  mov edx, 0xf
 8055600:  mov DWORD PTR [ebp-0x18], eax
 8055603:  mov eax, 0x2
 8055608:  call 8054ff0
 805560d:  mov ecx, eax
 805560f:  jmp 80552d6
 8055614:  mov ecx, DWORD PTR [esi]
 8055616:  mov edx, DWORD PTR [esi-0x8]
 8055619:  mov eax, DWORD PTR [esi-0x10]
 805561c:  mov DWORD PTR [ebp-0x1c], ecx
 805561f:  lea ecx, [ebp-0x24]
 8055622:  mov DWORD PTR [ebp-0x20], edx
 8055625:  mov edx, 0x10
 805562a:  mov DWORD PTR [ebp-0x24], eax
 805562d:  mov eax, 0x3
 8055632:  call 8054ff0
 8055637:  mov ecx, eax
 8055639:  jmp 80552d6
 805563e:  mov eax, DWORD PTR [esi]
 8055640:  test eax, eax
 8055642:  je 8055400
 8055648:  mov edx, DWORD PTR [ebp+0x8]
 805564b:  mov DWORD PTR [edx+0x4], eax
 805564e:  jmp 80552d6
 8055653:  mov edi, eax
 8055655:  neg edi
 8055657:  jmp 80552b5
 805565c:  mov DWORD PTR [ebp-0x4f8], 0x5
 8055666:  mov DWORD PTR [ebp-0x4f4], 0x104
 8055670:  jmp 80554b4
 8055675:  mov edi, DWORD PTR [ebp-0x4d8]
 805567b:  cmp BYTE PTR [edi], 0x3d
 805567e:  jne 80554b4
 8055684:  add edi, 0x1
 8055687:  mov DWORD PTR [ebp-0x4d8], edi
 805568d:  mov DWORD PTR [ebp-0x4f8], 0xd
 8055697:  mov DWORD PTR [ebp-0x4f4], 0x101
 80556a1:  jmp 80554b4
 80556a6:  mov DWORD PTR [ebp-0x4d8], edx
 80556ac:  mov DWORD PTR [ebp-0x4f4], 0x0
 80556b6:  jmp 80554b4
 80556bb:  mov eax, DWORD PTR [ebp-0x4d8]
 80556c1:  mov DWORD PTR [ebp-0x4f8], 0x9
 80556cb:  mov DWORD PTR [ebp-0x4f4], 0x102
 80556d5:  cmp BYTE PTR [eax], 0x3d
 80556d8:  jne 80554b4
 80556de:  add eax, 0x1
 80556e1:  mov DWORD PTR [ebp-0x4d8], eax
 80556e7:  mov DWORD PTR [ebp-0x4f8], 0xb
 80556f1:  jmp 80554b4
 80556f6:  mov edx, DWORD PTR [ebp-0x4d8]
 80556fc:  cmp BYTE PTR [edx], 0x3d
 80556ff:  jne 80554aa
 8055705:  add edx, 0x1
 8055708:  mov DWORD PTR [ebp-0x4d8], edx
 805570e:  mov DWORD PTR [ebp-0x4f8], 0xc
 8055718:  mov DWORD PTR [ebp-0x4f4], 0x101
 8055722:  jmp 80554b4
 8055727:  mov edi, DWORD PTR [ebp-0x4d8]
 805572d:  mov DWORD PTR [ebp-0x4f8], 0x8
 8055737:  mov DWORD PTR [ebp-0x4f4], 0x102
 8055741:  cmp BYTE PTR [edi], 0x3d
 8055744:  jne 80554b4
 805574a:  add edi, 0x1
 805574d:  mov DWORD PTR [ebp-0x4d8], edi
 8055753:  mov DWORD PTR [ebp-0x4f8], 0xa
 805575d:  jmp 80554b4
 8055762:  mov edi, DWORD PTR [ebp-0x4f4]
 8055768:  sub edi, 0x30
 805576b:  jmp 8055781
 805576d:  lea esi, [esi]
 8055770:  add DWORD PTR [ebp-0x4d8], 0x1
 8055777:  movsx edx, dl
 805577a:  lea eax, [edi+edi*4]
 805577d:  lea edi, [edx+eax*2-0x30]
 8055781:  mov eax, DWORD PTR [ebp-0x4d8]
 8055787:  movzx edx, BYTE PTR [eax]
 805578a:  lea eax, [edx-0x30]
 805578d:  cmp al, 0x9
 805578f:  jbe 8055770
 8055791:  mov DWORD PTR [ebp-0x4f8], edi
 8055797:  mov DWORD PTR [ebp-0x4f4], 0x105
 80557a1:  jmp 80554b4
 80557a6:  mov DWORD PTR [ebp-0x4f8], 0x4
 80557b0:  mov DWORD PTR [ebp-0x4f4], 0x104
 80557ba:  jmp 80554b4
 80557bf:  mov DWORD PTR [ebp-0x4f8], 0x7
 80557c9:  mov DWORD PTR [ebp-0x4f4], 0x103
 80557d3:  jmp 80554b4
 80557d8:  mov DWORD PTR [ebp-0x4f8], 0x6
 80557e2:  mov DWORD PTR [ebp-0x4f4], 0x103
 80557ec:  jmp 80554b4
 80557f1:  mov DWORD PTR [ebp-0x4f8], 0x3
 80557fb:  mov DWORD PTR [ebp-0x4f4], 0x104
 8055805:  jmp 80554b4
 805580a:  mov edx, DWORD PTR [ebp-0x4d8]
 8055810:  movsx eax, BYTE PTR [edx]
 8055813:  cmp DWORD PTR [ebp-0x4f4], eax
 8055819:  jne 80554aa
 805581f:  add edx, 0x1
 8055822:  mov DWORD PTR [ebp-0x4d8], edx
 8055828:  jmp 80554b4
 805582d:  xor eax, eax
 805582f:  jmp 8055405
 8055834:  mov eax, 0x2
 8055839:  jmp 8055405
 805583e:  nop
 805583f:  nop

08055840 <__gettext_extract_plural>:
 8055840:  push ebp
 8055841:  mov ebp, esp
 8055843:  push edi
 8055844:  push esi
 8055845:  push ebx
 8055846:  mov ebx, eax
 8055848:  sub esp, 0x28
 805584b:  test eax, eax
 805584d:  mov DWORD PTR [ebp-0x20], edx
 8055850:  mov DWORD PTR [ebp-0x24], ecx
 8055853:  je 8055938
 8055859:  mov DWORD PTR [esp+0x4], 0x80b0a34
 8055861:  mov DWORD PTR [esp], eax
 8055864:  call 806bbe0
 8055869:  mov DWORD PTR [esp+0x4], 0x80b0a3c
 8055871:  mov DWORD PTR [esp], ebx
 8055874:  mov DWORD PTR [ebp-0x28], eax
 8055877:  call 806bbe0
 805587c:  mov edx, DWORD PTR [ebp-0x28]
 805587f:  test edx, edx
 8055881:  je 8055938
 8055887:  test eax, eax
 8055889:  je 8055938
 805588f:  movzx ecx, BYTE PTR [eax+0x9]
 8055893:  lea ebx, [eax+0x9]
 8055896:  test cl, cl
 8055898:  je 8055938
 805589e:  mov edi, DWORD PTR gs:0x0
 80558a5:  mov eax, 0xffffffd8
 80558aa:  mov esi, 0xfffffff4
 80558b0:  mov eax, DWORD PTR [edi+eax]
 80558b3:  mov DWORD PTR [ebp-0x1c], eax
 80558b6:  jmp 80558cf
 80558b8:  mov eax, DWORD PTR [edi+esi]
 80558bb:  movzx edx, cl
 80558be:  test BYTE PTR [eax+edx*2+0x1], 0x20
 80558c3:  je 80558f8
 80558c5:  add ebx, 0x1
 80558c8:  movzx ecx, BYTE PTR [ebx]
 80558cb:  test cl, cl
 80558cd:  je 8055938
 80558cf:  mov eax, DWORD PTR [edi+esi]
 80558d2:  test eax, eax
 80558d4:  jne 80558b8
 80558d6:  mov edx, DWORD PTR [ebp-0x1c]
 80558d9:  mov eax, DWORD PTR [edx]
 80558db:  mov eax, DWORD PTR [eax+0x24]
 80558de:  add eax, 0x100
 80558e3:  mov DWORD PTR [edi+esi], eax
 80558e6:  movzx ecx, BYTE PTR [ebx]
 80558e9:  mov eax, DWORD PTR [edi+esi]
 80558ec:  movzx edx, cl
 80558ef:  test BYTE PTR [eax+edx*2+0x1], 0x20
 80558f4:  jne 80558c5
 80558f6:  xchg ax, ax
 80558f8:  lea eax, [ecx-0x30]
 80558fb:  cmp al, 0x9
 80558fd:  ja 8055938
 80558ff:  lea eax, [ebp-0x10]
 8055902:  mov DWORD PTR [esp+0x8], 0xa
 805590a:  mov DWORD PTR [esp+0x4], eax
 805590e:  mov DWORD PTR [esp], ebx
 8055911:  call 8056a80
 8055916:  cmp ebx, DWORD PTR [ebp-0x10]
 8055919:  je 8055938
 805591b:  mov edx, DWORD PTR [ebp-0x24]
 805591e:  mov DWORD PTR [edx], eax
 8055920:  mov eax, DWORD PTR [ebp-0x28]
 8055923:  add eax, 0x7
 8055926:  mov DWORD PTR [ebp-0x18], eax
 8055929:  lea eax, [ebp-0x18]
 805592c:  mov DWORD PTR [esp], eax
 805592f:  call 8055100
 8055934:  test eax, eax
 8055936:  je 8055952
 8055938:  mov eax, DWORD PTR [ebp-0x20]
 805593b:  mov edx, DWORD PTR [ebp-0x24]
 805593e:  mov DWORD PTR [eax], 0x80b0a48
 8055944:  mov DWORD PTR [edx], 0x2
 805594a:  add esp, 0x28
 805594d:  pop ebx
 805594e:  pop esi
 805594f:  pop edi
 8055950:  pop ebp
 8055951:  ret
 8055952:  mov eax, DWORD PTR [ebp-0x14]
 8055955:  mov edx, DWORD PTR [ebp-0x20]
 8055958:  mov DWORD PTR [edx], eax
 805595a:  jmp 805594a
 805595c:  nop
 805595d:  nop
 805595e:  nop
 805595f:  nop

08055960 <__hash_string>:
 8055960:  push ebp
 8055961:  xor eax, eax
 8055963:  mov ebp, esp
 8055965:  push ebx
 8055966:  mov ebx, DWORD PTR [ebp+0x8]
 8055969:  jmp 805598f
 805596b:  nop
 805596c:  lea esi, [esi]
 8055970:  mov edx, eax
 8055972:  movzx eax, cl
 8055975:  shl edx, 0x4
 8055978:  lea eax, [edx+eax]
 805597b:  mov edx, eax
 805597d:  and edx, 0xf0000000
 8055983:  je 805598c
 8055985:  xor eax, edx
 8055987:  shr edx, 0x18
 805598a:  xor eax, edx
 805598c:  add ebx, 0x1
 805598f:  movzx ecx, BYTE PTR [ebx]
 8055992:  test cl, cl
 8055994:  jne 8055970
 8055996:  pop ebx
 8055997:  pop ebp
 8055998:  ret
 8055999:  nop
 805599a:  nop
 805599b:  nop
 805599c:  nop
 805599d:  nop
 805599e:  nop
 805599f:  nop

080559a0 <__setfpucw>:
 80559a0:  push ebp
 80559a1:  mov ebp, esp
 80559a3:  sub esp, 0x10
 80559a6:  movzx ecx, WORD PTR [ebp+0x8]
 80559aa:  fnstcw WORD PTR [ebp-0x2]
 80559ad:  movzx eax, WORD PTR [ebp-0x2]
 80559b1:  mov edx, ecx
 80559b3:  and dx, 0xf3f
 80559b8:  and ax, 0xf0c0
 80559bc:  or edx, eax
 80559be:  mov WORD PTR [ebp-0x2], dx
 80559c2:  fldcw WORD PTR [ebp-0x2]
 80559c5:  test BYTE PTR ds:0x80d282b, 0x2
 80559cc:  je 80559f8
 80559ce:  movzx eax, cx
 80559d1:  mov edx, eax
 80559d3:  and eax, 0xc00
 80559d8:  and edx, 0x3d
 80559db:  shl eax, 0x3
 80559de:  shl edx, 0x7
 80559e1:  stmxcsr DWORD PTR [ebp-0x8]
 80559e5:  or edx, eax
 80559e7:  mov eax, DWORD PTR [ebp-0x8]
 80559ea:  and eax, 0xffff817f
 80559ef:  or edx, eax
 80559f1:  mov DWORD PTR [ebp-0x8], edx
 80559f4:  ldmxcsr DWORD PTR [ebp-0x8]
 80559f8:  leave
 80559f9:  ret
 80559fa:  nop
 80559fb:  nop
 80559fc:  nop
 80559fd:  nop
 80559fe:  nop
 80559ff:  nop

08055a00 <abort>:
 8055a00:  push ebp
 8055a01:  mov ebp, esp
 8055a03:  push edi
 8055a04:  sub esp, 0x118
 8055a0a:  mov edx, DWORD PTR gs:0x8
 8055a11:  cmp DWORD PTR ds:0x80d2910, edx
 8055a17:  je 8055a3e
 8055a19:  xor eax, eax
 8055a1b:  mov ecx, 0x1
 8055a20:  cmp DWORD PTR gs:0xc, 0x0
 8055a28:  je 8055a2b
 8055a2a:  cmpxchg DWORD PTR ds:0x80d2908, ecx
 8055a32:  jne 8055c23
 8055a38:  mov DWORD PTR ds:0x80d2910, edx
 8055a3e:  mov eax, ds:0x80d2904
 8055a43:  add DWORD PTR ds:0x80d290c, 0x1
 8055a4a:  test eax, eax
 8055a4c:  je 8055a9b
 8055a4e:  cmp DWORD PTR ds:0x80d2904, 0x1
 8055a55:  je 8055c08
 8055a5b:  mov eax, ds:0x80d2904
 8055a60:  cmp eax, 0x2
 8055a63:  je 8055b25
 8055a69:  cmp eax, 0x3
 8055a6c:  je 8055ba9
 8055a72:  cmp DWORD PTR ds:0x80d2904, 0x4
 8055a79:  je 8055b0c
 8055a7f:  cmp DWORD PTR ds:0x80d2904, 0x5
 8055a86:  je 8055af1
 8055a88:  mov eax, ds:0x80d2904
 8055a8d:  cmp eax, 0x6
 8055a90:  je 8055ada
 8055a92:  cmp eax, 0x7
 8055a95:  je 8055adb
 8055a97:  nop
 8055a98:  hlt
 8055a99:  jmp 8055a98
 8055a9b:  lea edx, [ebp-0x84]
 8055aa1:  xor eax, eax
 8055aa3:  mov edi, edx
 8055aa5:  mov ecx, 0x20
 8055aaa:  rep stosd
 8055aac:  mov DWORD PTR ds:0x80d2904, 0x1
 8055ab6:  mov DWORD PTR [esp+0x8], 0x0
 8055abe:  or DWORD PTR [ebp-0x84], 0x20
 8055ac5:  mov DWORD PTR [esp+0x4], edx
 8055ac9:  mov DWORD PTR [esp], 0x1
 8055ad0:  call 808b240
 8055ad5:  jmp 8055a4e
 8055ada:  hlt
 8055adb:  mov DWORD PTR ds:0x80d2904, 0x8
 8055ae5:  mov DWORD PTR [esp], 0x7f
 8055aec:  call 804f170
 8055af1:  mov DWORD PTR [esp], 0x6
 8055af8:  mov DWORD PTR ds:0x80d2904, 0x6
 8055b02:  call 808b060
 8055b07:  jmp 8055a88
 8055b0c:  mov DWORD PTR ds:0x80d2904, 0x5
 8055b16:  call 8065a00
 8055b1b:  nop
 8055b1c:  lea esi, [esi]
 8055b20:  jmp 8055a7f
 8055b25:  mov eax, ds:0x80d290c
 8055b2a:  mov DWORD PTR ds:0x80d2904, 0x0
 8055b34:  sub eax, 0x1
 8055b37:  test eax, eax
 8055b39:  mov ds:0x80d290c, eax
 8055b3e:  jne 8055b62
 8055b40:  mov DWORD PTR ds:0x80d2910, 0x0
 8055b4a:  cmp DWORD PTR gs:0xc, 0x0
 8055b52:  je 8055b55
 8055b54:  sub DWORD PTR ds:0x80d2908, 0x1
 8055b5c:  jne 8055c33
 8055b62:  mov DWORD PTR [esp], 0x6
 8055b69:  call 808b060
 8055b6e:  mov edx, DWORD PTR gs:0x8
 8055b75:  cmp DWORD PTR ds:0x80d2910, edx
 8055b7b:  je 8055ba2
 8055b7d:  xor eax, eax
 8055b7f:  mov ecx, 0x1
 8055b84:  cmp DWORD PTR gs:0xc, 0x0
 8055b8c:  je 8055b8f
 8055b8e:  cmpxchg DWORD PTR ds:0x80d2908, ecx
 8055b96:  jne 8055c43
 8055b9c:  mov DWORD PTR ds:0x80d2910, edx
 8055ba2:  add DWORD PTR ds:0x80d290c, 0x1
 8055ba9:  lea edx, [ebp-0x110]
 8055baf:  xor eax, eax
 8055bb1:  mov ecx, 0x23
 8055bb6:  mov edi, edx
 8055bb8:  rep stosd
 8055bba:  lea eax, [ebp-0x90]
 8055bc0:  mov DWORD PTR ds:0x80d2904, 0x4
 8055bca:  mov DWORD PTR [eax], 0xffffffff
 8055bd0:  sub eax, 0x4
 8055bd3:  cmp eax, edx
 8055bd5:  jne 8055bca
 8055bd7:  mov DWORD PTR [ebp-0x8c], 0x0
 8055be1:  mov DWORD PTR [ebp-0x110], 0x0
 8055beb:  mov DWORD PTR [esp+0x8], 0x0
 8055bf3:  mov DWORD PTR [esp+0x4], eax
 8055bf7:  mov DWORD PTR [esp], 0x6
 8055bfe:  call 808b200
 8055c03:  jmp 8055a72
 8055c08:  mov DWORD PTR [esp], 0x0
 8055c0f:  mov DWORD PTR ds:0x80d2904, 0x2
 8055c19:  call 8069350
 8055c1e:  jmp 8055a5b

08055c23 <_L_lock_22>:
 8055c23:  lea ecx, ds:0x80d2908
 8055c29:  call 8050230
 8055c2e:  jmp 8055a38

08055c33 <_L_unlock_140>:
 8055c33:  lea eax, ds:0x80d2908
 8055c39:  call 8050260
 8055c3e:  jmp 8055b62

08055c43 <_L_lock_163>:
 8055c43:  lea ecx, ds:0x80d2908
 8055c49:  call 8050230
 8055c4e:  jmp 8055b9c
 8055c53:  nop
 8055c54:  nop
 8055c55:  nop
 8055c56:  nop
 8055c57:  nop
 8055c58:  nop
 8055c59:  nop
 8055c5a:  nop
 8055c5b:  nop
 8055c5c:  nop
 8055c5d:  nop
 8055c5e:  nop
 8055c5f:  nop

08055c60 <bsearch>:
 8055c60:  push ebp
 8055c61:  mov ebp, esp
 8055c63:  push edi
 8055c64:  push esi
 8055c65:  push ebx
 8055c66:  sub esp, 0xc
 8055c69:  mov edi, DWORD PTR [ebp+0x10]
 8055c6c:  mov DWORD PTR [ebp-0x10], 0x0
 8055c73:  cmp DWORD PTR [ebp-0x10], edi
 8055c76:  jb 8055c87
 8055c78:  jmp 8055cc0
 8055c7a:  lea esi, [esi]
 8055c80:  cmp ebx, DWORD PTR [ebp-0x10]
 8055c83:  mov edi, ebx
 8055c85:  jbe 8055cc0
 8055c87:  mov eax, DWORD PTR [ebp-0x10]
 8055c8a:  mov esi, DWORD PTR [ebp+0xc]
 8055c8d:  lea ebx, [edi+eax]
 8055c90:  mov eax, DWORD PTR [ebp+0x14]
 8055c93:  shr ebx, 1
 8055c95:  imul eax, ebx
 8055c98:  add esi, eax
 8055c9a:  mov eax, DWORD PTR [ebp+0x8]
 8055c9d:  mov DWORD PTR [esp+0x4], esi
 8055ca1:  mov DWORD PTR [esp], eax
 8055ca4:  call DWORD PTR [ebp+0x18]
 8055ca7:  cmp eax, 0x0
 8055caa:  jl 8055c80
 8055cac:  je 8055cc2
 8055cae:  add ebx, 0x1
 8055cb1:  mov DWORD PTR [ebp-0x10], ebx
 8055cb4:  cmp DWORD PTR [ebp-0x10], edi
 8055cb7:  nop
 8055cb8:  jb 8055c87
 8055cba:  lea esi, [esi]
 8055cc0:  xor esi, esi
 8055cc2:  add esp, 0xc
 8055cc5:  mov eax, esi
 8055cc7:  pop ebx
 8055cc8:  pop esi
 8055cc9:  pop edi
 8055cca:  pop ebp
 8055ccb:  ret
 8055ccc:  nop
 8055ccd:  nop
 8055cce:  nop
 8055ccf:  nop

08055cd0 <msort_with_tmp>:
 8055cd0:  push ebp
 8055cd1:  mov ebp, esp
 8055cd3:  push edi
 8055cd4:  push esi
 8055cd5:  push ebx
 8055cd6:  sub esp, 0x4c
 8055cd9:  cmp ecx, 0x1
 8055cdc:  mov DWORD PTR [ebp-0x30], eax
 8055cdf:  mov DWORD PTR [ebp-0x34], edx
 8055ce2:  mov DWORD PTR [ebp-0x38], ecx
 8055ce5:  jbe 8055df3
 8055ceb:  mov ebx, edx
 8055ced:  mov edi, ecx
 8055cef:  mov DWORD PTR [ebp-0x2c], edx
 8055cf2:  mov edx, DWORD PTR [ebp-0x30]
 8055cf5:  shr ecx, 1
 8055cf7:  mov eax, ecx
 8055cf9:  sub edi, ecx
 8055cfb:  mov DWORD PTR [ebp-0x28], ecx
 8055cfe:  imul eax, DWORD PTR [edx]
 8055d01:  mov edx, DWORD PTR [ebp-0x34]
 8055d04:  add ebx, eax
 8055d06:  mov eax, DWORD PTR [ebp-0x30]
 8055d09:  call 8055cd0
 8055d0e:  mov eax, DWORD PTR [ebp-0x30]
 8055d11:  mov ecx, edi
 8055d13:  mov edx, ebx
 8055d15:  call 8055cd0
 8055d1a:  mov ecx, DWORD PTR [ebp-0x30]
 8055d1d:  mov edx, DWORD PTR [ecx+0x8]
 8055d20:  mov eax, DWORD PTR [ecx]
 8055d22:  mov esi, DWORD PTR [ecx+0x10]
 8055d25:  mov ecx, DWORD PTR [ecx+0xc]
 8055d28:  mov DWORD PTR [ebp-0x20], edx
 8055d2b:  mov edx, DWORD PTR [ebp-0x30]
 8055d2e:  mov DWORD PTR [ebp-0x24], eax
 8055d31:  mov DWORD PTR [ebp-0x1c], ecx
 8055d34:  mov eax, DWORD PTR [edx+0x4]
 8055d37:  cmp eax, 0x1
 8055d3a:  je 8055e00
 8055d40:  jae 8055da8
 8055d42:  test edi, edi
 8055d44:  je 8055d88
 8055d46:  mov edx, DWORD PTR [ebp-0x1c]
 8055d49:  mov ecx, DWORD PTR [ebp-0x2c]
 8055d4c:  mov DWORD PTR [esp+0x4], ebx
 8055d50:  mov DWORD PTR [esp+0x8], edx
 8055d54:  mov DWORD PTR [esp], ecx
 8055d57:  call DWORD PTR [ebp-0x20]
 8055d5a:  test eax, eax
 8055d5c:  jle 8055ed0
 8055d62:  mov eax, DWORD PTR [ebx]
 8055d64:  sub edi, 0x1
 8055d67:  add ebx, 0x4
 8055d6a:  mov DWORD PTR [esi], eax
 8055d6c:  mov eax, DWORD PTR [ebp-0x28]
 8055d6f:  add esi, 0x4
 8055d72:  test eax, eax
 8055d74:  je 8055dd0
 8055d76:  test edi, edi
 8055d78:  jne 8055d46
 8055d7a:  mov eax, DWORD PTR [ebp-0x28]
 8055d7d:  test eax, eax
 8055d7f:  je 8055dd0
 8055d81:  lea esi, [esi]
 8055d88:  mov eax, DWORD PTR [ebp-0x28]
 8055d8b:  imul eax, DWORD PTR [ebp-0x24]
 8055d8f:  mov edx, DWORD PTR [ebp-0x2c]
 8055d92:  mov DWORD PTR [esp], esi
 8055d95:  mov DWORD PTR [esp+0x8], eax
 8055d99:  mov DWORD PTR [esp+0x4], edx
 8055d9d:  call 804efc0
 8055da2:  jmp 8055dd0
 8055da4:  lea esi, [esi]
 8055da8:  cmp eax, 0x2
 8055dab:  je 8055f48
 8055db1:  cmp eax, 0x3
 8055db4:  lea esi, [esi]
 8055db8:  je 8055ee8
 8055dbe:  xchg ax, ax
 8055dc0:  mov edx, DWORD PTR [ebp-0x28]
 8055dc3:  test edx, edx
 8055dc5:  lea esi, [esi]
 8055dc8:  jne 8055e40
 8055dca:  lea esi, [esi]
 8055dd0:  sub DWORD PTR [ebp-0x38], edi
 8055dd3:  mov ecx, DWORD PTR [ebp-0x38]
 8055dd6:  imul ecx, DWORD PTR [ebp-0x24]
 8055dda:  mov edx, DWORD PTR [ebp-0x30]
 8055ddd:  mov eax, DWORD PTR [edx+0x10]
 8055de0:  mov DWORD PTR [esp+0x8], ecx
 8055de4:  mov ecx, DWORD PTR [ebp-0x34]
 8055de7:  mov DWORD PTR [esp+0x4], eax
 8055deb:  mov DWORD PTR [esp], ecx
 8055dee:  call 804efc0
 8055df3:  add esp, 0x4c
 8055df6:  pop ebx
 8055df7:  pop esi
 8055df8:  pop edi
 8055df9:  pop ebp
 8055dfa:  ret
 8055dfb:  nop
 8055dfc:  lea esi, [esi]
 8055e00:  test edi, edi
 8055e02:  je 8055d88
 8055e04:  mov ecx, DWORD PTR [ebp-0x1c]
 8055e07:  mov eax, DWORD PTR [ebp-0x2c]
 8055e0a:  mov DWORD PTR [esp+0x4], ebx
 8055e0e:  mov DWORD PTR [esp+0x8], ecx
 8055e12:  mov DWORD PTR [esp], eax
 8055e15:  call DWORD PTR [ebp-0x20]
 8055e18:  test eax, eax
 8055e1a:  jle 8055e88
 8055e1c:  mov eax, DWORD PTR [ebx]
 8055e1e:  sub edi, 0x1
 8055e21:  mov edx, DWORD PTR [ebx+0x4]
 8055e24:  add ebx, 0x8
 8055e27:  mov DWORD PTR [esi], eax
 8055e29:  mov DWORD PTR [esi+0x4], edx
 8055e2c:  mov eax, DWORD PTR [ebp-0x28]
 8055e2f:  add esi, 0x8
 8055e32:  test eax, eax
 8055e34:  je 8055dd0
 8055e36:  test edi, edi
 8055e38:  jne 8055e04
 8055e3a:  jmp 8055d7a
 8055e3f:  nop
 8055e40:  test edi, edi
 8055e42:  lea esi, [esi]
 8055e48:  je 8055d7a
 8055e4e:  mov eax, DWORD PTR [ebp-0x1c]
 8055e51:  mov edx, DWORD PTR [ebp-0x2c]
 8055e54:  mov DWORD PTR [esp+0x4], ebx
 8055e58:  mov DWORD PTR [esp+0x8], eax
 8055e5c:  mov DWORD PTR [esp], edx
 8055e5f:  call DWORD PTR [ebp-0x20]
 8055e62:  test eax, eax
 8055e64:  jle 8055ea8
 8055e66:  mov ecx, DWORD PTR [ebp-0x24]
 8055e69:  sub edi, 0x1
 8055e6c:  mov DWORD PTR [esp+0x4], ebx
 8055e70:  mov DWORD PTR [esp], esi
 8055e73:  mov DWORD PTR [esp+0x8], ecx
 8055e77:  call 806c310
 8055e7c:  add ebx, DWORD PTR [ebp-0x24]
 8055e7f:  mov esi, eax
 8055e81:  jmp 8055dc0
 8055e86:  xchg ax, ax
 8055e88:  mov ecx, DWORD PTR [ebp-0x2c]
 8055e8b:  sub DWORD PTR [ebp-0x28], 0x1
 8055e8f:  mov eax, DWORD PTR [ecx]
 8055e91:  mov edx, DWORD PTR [ecx+0x4]
 8055e94:  add ecx, 0x8
 8055e97:  mov DWORD PTR [ebp-0x2c], ecx
 8055e9a:  mov DWORD PTR [esi], eax
 8055e9c:  mov DWORD PTR [esi+0x4], edx
 8055e9f:  jmp 8055e2c
 8055ea1:  lea esi, [esi]
 8055ea8:  mov ecx, DWORD PTR [ebp-0x24]
 8055eab:  mov eax, DWORD PTR [ebp-0x2c]
 8055eae:  mov DWORD PTR [esp], esi
 8055eb1:  mov DWORD PTR [esp+0x8], ecx
 8055eb5:  mov DWORD PTR [esp+0x4], eax
 8055eb9:  call 806c310
 8055ebe:  mov edx, DWORD PTR [ebp-0x24]
 8055ec1:  add DWORD PTR [ebp-0x2c], edx
 8055ec4:  sub DWORD PTR [ebp-0x28], 0x1
 8055ec8:  mov esi, eax
 8055eca:  jmp 8055dc0
 8055ecf:  nop
 8055ed0:  mov edx, DWORD PTR [ebp-0x2c]
 8055ed3:  sub DWORD PTR [ebp-0x28], 0x1
 8055ed7:  mov eax, DWORD PTR [edx]
 8055ed9:  add edx, 0x4
 8055edc:  mov DWORD PTR [ebp-0x2c], edx
 8055edf:  mov DWORD PTR [esi], eax
 8055ee1:  jmp 8055d6c
 8055ee6:  xchg ax, ax
 8055ee8:  test edi, edi
 8055eea:  je 8055d88
 8055ef0:  mov eax, DWORD PTR [ebp-0x1c]
 8055ef3:  mov edx, DWORD PTR [ebp-0x2c]
 8055ef6:  mov DWORD PTR [esp+0x8], eax
 8055efa:  mov eax, DWORD PTR [ebx]
 8055efc:  mov DWORD PTR [esp+0x4], eax
 8055f00:  mov eax, DWORD PTR [edx]
 8055f02:  mov DWORD PTR [esp], eax
 8055f05:  call DWORD PTR [ebp-0x20]
 8055f08:  test eax, eax
 8055f0a:  jle 8055f30
 8055f0c:  mov eax, DWORD PTR [ebx]
 8055f0e:  sub edi, 0x1
 8055f11:  add ebx, 0x4
 8055f14:  mov DWORD PTR [esi], eax
 8055f16:  mov ecx, DWORD PTR [ebp-0x28]
 8055f19:  add esi, 0x4
 8055f1c:  test ecx, ecx
 8055f1e:  je 8055dd0
 8055f24:  test edi, edi
 8055f26:  jne 8055ef0
 8055f28:  jmp 8055d7a
 8055f2d:  lea esi, [esi]
 8055f30:  mov ecx, DWORD PTR [ebp-0x2c]
 8055f33:  sub DWORD PTR [ebp-0x28], 0x1
 8055f37:  mov eax, DWORD PTR [ecx]
 8055f39:  add ecx, 0x4
 8055f3c:  mov DWORD PTR [ebp-0x2c], ecx
 8055f3f:  mov DWORD PTR [esi], eax
 8055f41:  jmp 8055f16
 8055f43:  nop
 8055f44:  lea esi, [esi]
 8055f48:  mov ecx, DWORD PTR [ebp-0x24]
 8055f4b:  mov eax, DWORD PTR [ebp-0x24]
 8055f4e:  mov DWORD PTR [ebp-0x3c], 0x4
 8055f55:  sub DWORD PTR [ebp-0x3c], eax
 8055f58:  add ecx, esi
 8055f5a:  mov DWORD PTR [ebp-0x14], ecx
 8055f5d:  jmp 8055f77
 8055f5f:  nop
 8055f60:  mov DWORD PTR [ebp-0x18], ebx
 8055f63:  sub edi, 0x1
 8055f66:  add ebx, DWORD PTR [ebp-0x24]
 8055f69:  cmp esi, DWORD PTR [ebp-0x14]
 8055f6c:  jb 8055fbf
 8055f6e:  mov ecx, DWORD PTR [ebp-0x24]
 8055f71:  add DWORD PTR [ebp-0x14], ecx
 8055f74:  mov esi, DWORD PTR [ebp-0x10]
 8055f77:  mov eax, DWORD PTR [ebp-0x28]
 8055f7a:  test eax, eax
 8055f7c:  je 8055dd0
 8055f82:  test edi, edi
 8055f84:  je 8055d7a
 8055f8a:  mov eax, DWORD PTR [ebp-0x24]
 8055f8d:  mov edx, DWORD PTR [ebp-0x1c]
 8055f90:  mov ecx, DWORD PTR [ebp-0x2c]
 8055f93:  mov DWORD PTR [esp+0x4], ebx
 8055f97:  add eax, esi
 8055f99:  mov DWORD PTR [ebp-0x10], eax
 8055f9c:  mov DWORD PTR [esp+0x8], edx
 8055fa0:  mov DWORD PTR [esp], ecx
 8055fa3:  call DWORD PTR [ebp-0x20]
 8055fa6:  test eax, eax
 8055fa8:  jg 8055f60
 8055faa:  mov eax, DWORD PTR [ebp-0x2c]
 8055fad:  mov edx, DWORD PTR [ebp-0x24]
 8055fb0:  add DWORD PTR [ebp-0x2c], edx
 8055fb3:  sub DWORD PTR [ebp-0x28], 0x1
 8055fb7:  cmp esi, DWORD PTR [ebp-0x14]
 8055fba:  mov DWORD PTR [ebp-0x18], eax
 8055fbd:  jae 8055f6e
 8055fbf:  mov edx, DWORD PTR [ebp-0x14]
 8055fc2:  xor ecx, ecx
 8055fc4:  lea eax, [edx+0x3]
 8055fc7:  mov edx, DWORD PTR [ebp-0x10]
 8055fca:  add edx, DWORD PTR [ebp-0x3c]
 8055fcd:  sub eax, edx
 8055fcf:  mov edx, DWORD PTR [ebp-0x18]
 8055fd2:  shr eax, 0x2
 8055fd5:  add eax, 0x1
 8055fd8:  mov DWORD PTR [ebp-0x40], eax
 8055fdb:  mov eax, DWORD PTR [edx+ecx*4]
 8055fde:  mov DWORD PTR [esi+ecx*4], eax
 8055fe1:  add ecx, 0x1
 8055fe4:  cmp ecx, DWORD PTR [ebp-0x40]
 8055fe7:  je 8055f6e
 8055fe9:  jmp 8055fdb
 8055feb:  nop
 8055fec:  lea esi, [esi]

08055ff0 <qsort_r>:
 8055ff0:  push ebp
 8055ff1:  mov ebp, esp
 8055ff3:  push edi
 8055ff4:  push esi
 8055ff5:  push ebx
 8055ff6:  sub esp, 0x5c
 8055ff9:  mov edx, DWORD PTR [ebp+0x10]
 8055ffc:  mov eax, DWORD PTR [ebp+0xc]
 8055fff:  cmp edx, 0x20
 8056002:  lea eax, [edx+eax*8]
 8056005:  mov DWORD PTR [ebp-0x40], eax
 8056008:  ja 8056011
 805600a:  imul edx, DWORD PTR [ebp+0xc]
 805600e:  mov DWORD PTR [ebp-0x40], edx
 8056011:  cmp DWORD PTR [ebp-0x40], 0x3ff
 8056018:  jbe 8056278
 805601e:  mov eax, ds:0x80d2918
 8056023:  test eax, eax
 8056025:  je 80561d0
 805602b:  mov eax, DWORD PTR [ebp-0x40]
 805602e:  xor edx, edx
 8056030:  div DWORD PTR ds:0x80d2914
 8056036:  cmp eax, DWORD PTR ds:0x80d2918
 805603c:  ja 80561a0
 8056042:  mov esi, 0xffffffe8
 8056048:  mov ebx, DWORD PTR gs:0x0
 805604f:  mov eax, DWORD PTR [ebp-0x40]
 8056052:  mov edi, DWORD PTR [ebx+esi]
 8056055:  mov DWORD PTR [esp], eax
 8056058:  call 804d6f0
 805605d:  mov DWORD PTR [ebx+esi], edi
 8056060:  test eax, eax
 8056062:  mov DWORD PTR [ebp-0x3c], eax
 8056065:  je 80561a0
 805606b:  mov DWORD PTR [ebp-0x10], eax
 805606e:  mov edx, DWORD PTR [ebp+0x10]
 8056071:  mov eax, DWORD PTR [ebp+0x14]
 8056074:  cmp DWORD PTR [ebp+0x10], 0x20
 8056078:  mov DWORD PTR [ebp-0x1c], 0x4
 805607f:  mov DWORD PTR [ebp-0x20], edx
 8056082:  mov edx, DWORD PTR [ebp+0x18]
 8056085:  mov DWORD PTR [ebp-0x18], eax
 8056088:  mov DWORD PTR [ebp-0x14], edx
 805608b:  jbe 8056210
 8056091:  mov eax, DWORD PTR [ebp+0x8]
 8056094:  mov edx, DWORD PTR [ebp-0x10]
 8056097:  mov DWORD PTR [ebp-0x38], eax
 805609a:  mov eax, DWORD PTR [ebp+0xc]
 805609d:  shl eax, 0x2
 80560a0:  add edx, eax
 80560a2:  add eax, edx
 80560a4:  cmp edx, eax
 80560a6:  mov DWORD PTR [ebp-0x44], edx
 80560a9:  mov DWORD PTR [ebp-0x34], eax
 80560ac:  jae 80560c5
 80560ae:  mov eax, edx
 80560b0:  mov edx, DWORD PTR [ebp+0x8]
 80560b3:  nop
 80560b4:  lea esi, [esi]
 80560b8:  mov DWORD PTR [eax], edx
 80560ba:  add eax, 0x4
 80560bd:  add edx, DWORD PTR [ebp+0x10]
 80560c0:  cmp DWORD PTR [ebp-0x34], eax
 80560c3:  ja 80560b8
 80560c5:  mov ecx, DWORD PTR [ebp+0xc]
 80560c8:  lea eax, [ebp-0x20]
 80560cb:  mov edx, DWORD PTR [ebp-0x44]
 80560ce:  mov DWORD PTR [ebp-0x20], 0x4
 80560d5:  mov DWORD PTR [ebp-0x1c], 0x3
 80560dc:  call 8055cd0
 80560e1:  mov eax, DWORD PTR [ebp+0xc]
 80560e4:  test eax, eax
 80560e6:  je 805625e
 80560ec:  mov DWORD PTR [ebp-0x30], 0x0
 80560f3:  nop
 80560f4:  lea esi, [esi]
 80560f8:  mov eax, DWORD PTR [ebp-0x30]
 80560fb:  mov edx, DWORD PTR [ebp-0x44]
 80560fe:  mov esi, DWORD PTR [edx+eax*4]
 8056101:  cmp esi, DWORD PTR [ebp-0x38]
 8056104:  je 805617e
 8056106:  mov eax, DWORD PTR [ebp+0x10]
 8056109:  mov DWORD PTR [esp+0x8], eax
 805610d:  mov edx, DWORD PTR [ebp-0x38]
 8056110:  mov DWORD PTR [esp+0x4], edx
 8056114:  mov eax, DWORD PTR [ebp-0x34]
 8056117:  mov DWORD PTR [esp], eax
 805611a:  call 804efc0
 805611f:  mov edx, DWORD PTR [ebp-0x38]
 8056122:  mov ecx, DWORD PTR [ebp-0x30]
 8056125:  mov DWORD PTR [ebp-0x48], edx
 8056128:  mov ebx, esi
 805612a:  xor edx, edx
 805612c:  sub ebx, DWORD PTR [ebp+0x8]
 805612f:  mov edi, esi
 8056131:  mov eax, ebx
 8056133:  div DWORD PTR [ebp+0x10]
 8056136:  mov edx, DWORD PTR [ebp-0x44]
 8056139:  mov ebx, eax
 805613b:  mov eax, DWORD PTR [ebp-0x48]
 805613e:  mov DWORD PTR [edx+ecx*4], eax
 8056141:  mov edx, DWORD PTR [ebp+0x10]
 8056144:  mov DWORD PTR [esp+0x4], esi
 8056148:  mov DWORD PTR [esp], eax
 805614b:  mov DWORD PTR [esp+0x8], edx
 805614f:  call 804efc0
 8056154:  mov eax, DWORD PTR [ebp-0x44]
 8056157:  mov ecx, ebx
 8056159:  mov DWORD PTR [ebp-0x48], esi
 805615c:  lea edx, [eax+ebx*4]
 805615f:  mov esi, DWORD PTR [edx]
 8056161:  cmp esi, DWORD PTR [ebp-0x38]
 8056164:  jne 8056128
 8056166:  mov DWORD PTR [edx], edi
 8056168:  mov edx, DWORD PTR [ebp+0x10]
 805616b:  mov DWORD PTR [esp+0x8], edx
 805616f:  mov eax, DWORD PTR [ebp-0x34]
 8056172:  mov DWORD PTR [esp], edi
 8056175:  mov DWORD PTR [esp+0x4], eax
 8056179:  call 804efc0
 805617e:  add DWORD PTR [ebp-0x30], 0x1
 8056182:  mov edx, DWORD PTR [ebp-0x30]
 8056185:  cmp DWORD PTR [ebp+0xc], edx
 8056188:  jbe 805625e
 805618e:  mov eax, DWORD PTR [ebp+0x10]
 8056191:  add DWORD PTR [ebp-0x38], eax
 8056194:  jmp 80560f8
 8056199:  lea esi, [esi]
 80561a0:  mov edx, DWORD PTR [ebp+0x18]
 80561a3:  mov DWORD PTR [esp+0x10], edx
 80561a7:  mov eax, DWORD PTR [ebp+0x14]
 80561aa:  mov DWORD PTR [esp+0xc], eax
 80561ae:  mov edx, DWORD PTR [ebp+0x10]
 80561b1:  mov DWORD PTR [esp+0x8], edx
 80561b5:  mov eax, DWORD PTR [ebp+0xc]
 80561b8:  mov DWORD PTR [esp+0x4], eax
 80561bc:  mov edx, DWORD PTR [ebp+0x8]
 80561bf:  mov DWORD PTR [esp], edx
 80561c2:  call 808b2e0
 80561c7:  lea esp, [ebp-0xc]
 80561ca:  pop ebx
 80561cb:  pop esi
 80561cc:  pop edi
 80561cd:  pop ebp
 80561ce:  ret
 80561cf:  nop
 80561d0:  mov DWORD PTR [esp], 0x55
 80561d7:  call 8072b70
 80561dc:  cmp eax, 0xff
 80561df:  je 8056299
 80561e5:  mov edx, eax
 80561e7:  sar edx, 0x1f
 80561ea:  shr edx, 0x1e
 80561ed:  add edx, eax
 80561ef:  sar edx, 0x2
 80561f2:  mov DWORD PTR ds:0x80d2918, edx
 80561f8:  mov DWORD PTR [esp], 0x1e
 80561ff:  call 8072b70
 8056204:  mov ds:0x80d2914, eax
 8056209:  jmp 805602b
 805620e:  xchg ax, ax
 8056210:  test BYTE PTR [ebp+0x10], 0x3
 8056214:  jne 8056250
 8056216:  test BYTE PTR [ebp+0x8], 0x3
 805621a:  lea esi, [esi]
 8056220:  jne 8056250
 8056222:  cmp DWORD PTR [ebp+0x10], 0x4
 8056226:  xchg ax, ax
 8056228:  je 80562b6
 805622e:  cmp DWORD PTR [ebp+0x10], 0x8
 8056232:  lea esi, [esi]
 8056238:  jne 80562ad
 805623a:  test BYTE PTR [ebp+0x8], 0x7
 805623e:  xchg ax, ax
 8056240:  jne 80562ad
 8056242:  mov DWORD PTR [ebp-0x1c], 0x1
 8056249:  lea esi, [esi]
 8056250:  mov ecx, DWORD PTR [ebp+0xc]
 8056253:  lea eax, [ebp-0x20]
 8056256:  mov edx, DWORD PTR [ebp+0x8]
 8056259:  call 8055cd0
 805625e:  mov edx, DWORD PTR [ebp-0x3c]
 8056261:  mov DWORD PTR [esp], edx
 8056264:  call 804b4a0
 8056269:  lea esp, [ebp-0xc]
 805626c:  pop ebx
 805626d:  pop esi
 805626e:  pop edi
 805626f:  pop ebp
 8056270:  ret
 8056271:  lea esi, [esi]
 8056278:  mov eax, DWORD PTR [ebp-0x40]
 805627b:  mov DWORD PTR [ebp-0x3c], 0x0
 8056282:  add eax, 0x1e
 8056285:  and eax, 0xf0
 8056288:  sub esp, eax
 805628a:  lea eax, [esp+0x23]
 805628e:  and eax, 0xf0
 8056291:  mov DWORD PTR [ebp-0x10], eax
 8056294:  jmp 805606e
 8056299:  mov DWORD PTR ds:0x80d2918, 0x7fffffff
 80562a3:  mov eax, ds:0x80d2918
 80562a8:  jmp 80561e5
 80562ad:  mov DWORD PTR [ebp-0x1c], 0x2
 80562b4:  jmp 8056250
 80562b6:  mov DWORD PTR [ebp-0x1c], 0x0
 80562bd:  jmp 8056250
 80562bf:  nop

080562c0 <qsort>:
 80562c0:  push ebp
 80562c1:  mov ebp, esp
 80562c3:  sub esp, 0x18
 80562c6:  mov eax, DWORD PTR [ebp+0x14]
 80562c9:  mov DWORD PTR [esp+0x10], 0x0
 80562d1:  mov DWORD PTR [esp+0xc], eax
 80562d5:  mov eax, DWORD PTR [ebp+0x10]
 80562d8:  mov DWORD PTR [esp+0x8], eax
 80562dc:  mov eax, DWORD PTR [ebp+0xc]
 80562df:  mov DWORD PTR [esp+0x4], eax
 80562e3:  mov eax, DWORD PTR [ebp+0x8]
 80562e6:  mov DWORD PTR [esp], eax
 80562e9:  call 8055ff0
 80562ee:  leave
 80562ef:  ret

080562f0 <getenv>:
 80562f0:  push ebp
 80562f1:  mov ebp, esp
 80562f3:  sub esp, 0x20
 80562f6:  mov DWORD PTR [ebp-0xc], ebx
 80562f9:  mov ebx, DWORD PTR [ebp+0x8]
 80562fc:  mov DWORD PTR [ebp-0x8], esi
 80562ff:  mov DWORD PTR [ebp-0x4], edi
 8056302:  mov DWORD PTR [esp], ebx
 8056305:  call 804eea0
 805630a:  mov esi, DWORD PTR ds:0x80d2218
 8056310:  test esi, esi
 8056312:  jne 8056328
 8056314:  xor eax, eax
 8056316:  mov ebx, DWORD PTR [ebp-0xc]
 8056319:  mov esi, DWORD PTR [ebp-0x8]
 805631c:  mov edi, DWORD PTR [ebp-0x4]
 805631f:  mov esp, ebp
 8056321:  pop ebp
 8056322:  ret
 8056323:  nop
 8056324:  lea esi, [esi]
 8056328:  cmp BYTE PTR [ebx], 0x0
 805632b:  je 8056314
 805632d:  cmp BYTE PTR [ebx+0x1], 0x0
 8056331:  jne 8056378
 8056333:  mov eax, DWORD PTR [esi]
 8056335:  movzx edx, BYTE PTR [ebx]
 8056338:  test eax, eax
 805633a:  je 8056314
 805633c:  movzx edx, dl
 805633f:  or dh, 0x3d
 8056342:  cmp dx, WORD PTR [eax]
 8056345:  jne 805635e
 8056347:  jmp 80563e0
 805634c:  lea esi, [esi]
 8056350:  cmp dx, WORD PTR [eax]
 8056353:  nop
 8056354:  lea esi, [esi]
 8056358:  je 80563e0
 805635e:  add esi, 0x4
 8056361:  mov eax, DWORD PTR [esi]
 8056363:  test eax, eax
 8056365:  lea esi, [esi]
 8056368:  jne 8056350
 805636a:  lea esi, [esi]
 8056370:  jmp 8056314
 8056372:  lea esi, [esi]
 8056378:  movzx edi, WORD PTR [ebx]
 805637b:  add ebx, 0x2
 805637e:  sub eax, 0x2
 8056381:  mov DWORD PTR [ebp-0x10], ebx
 8056384:  mov ebx, DWORD PTR [esi]
 8056386:  mov DWORD PTR [ebp-0x14], eax
 8056389:  test ebx, ebx
 805638b:  jne 80563c5
 805638d:  jmp 8056314
 805638f:  mov eax, DWORD PTR [ebp-0x14]
 8056392:  mov edx, DWORD PTR [ebp-0x10]
 8056395:  mov DWORD PTR [esp+0x8], eax
 8056399:  lea eax, [ebx+0x2]
 805639c:  mov DWORD PTR [esp+0x4], edx
 80563a0:  mov DWORD PTR [esp], eax
 80563a3:  call 806b230
 80563a8:  test eax, eax
 80563aa:  jne 80563b8
 80563ac:  mov eax, DWORD PTR [ebp-0x14]
 80563af:  cmp BYTE PTR [ebx+eax+0x2], 0x3d
 80563b4:  je 80563d2
 80563b6:  xchg ax, ax
 80563b8:  add esi, 0x4
 80563bb:  mov ebx, DWORD PTR [esi]
 80563bd:  test ebx, ebx
 80563bf:  je 8056314
 80563c5:  cmp di, WORD PTR [ebx]
 80563c8:  jne 80563b8
 80563ca:  lea esi, [esi]
 80563d0:  jmp 805638f
 80563d2:  lea eax, [ebx+eax+0x3]
 80563d6:  xchg ax, ax
 80563d8:  jmp 8056316
 80563dd:  lea esi, [esi]
 80563e0:  add eax, 0x2
 80563e3:  nop
 80563e4:  lea esi, [esi]
 80563e8:  jmp 8056316
 80563ed:  nop
 80563ee:  nop
 80563ef:  nop

080563f0 <__clearenv>:
 80563f0:  push ebp
 80563f1:  xor eax, eax
 80563f3:  mov ebp, esp
 80563f5:  mov ecx, 0x1
 80563fa:  sub esp, 0x4
 80563fd:  cmp DWORD PTR gs:0xc, 0x0
 8056405:  je 8056408
 8056407:  cmpxchg DWORD PTR ds:0x80d291c, ecx
 805640f:  jne 805693c
 8056415:  mov eax, ds:0x80d2218
 805641a:  cmp eax, DWORD PTR ds:0x80d2924
 8056420:  je 8056448
 8056422:  mov DWORD PTR ds:0x80d2218, 0x0
 805642c:  cmp DWORD PTR gs:0xc, 0x0
 8056434:  je 8056437
 8056436:  sub DWORD PTR ds:0x80d291c, 0x1
 805643e:  jne 805694c
 8056444:  xor eax, eax
 8056446:  leave
 8056447:  ret
 8056448:  test eax, eax
 805644a:  je 8056422
 805644c:  mov DWORD PTR [esp], eax
 805644f:  call 804b4a0
 8056454:  mov DWORD PTR ds:0x80d2924, 0x0
 805645e:  jmp 8056422

08056460 <__unsetenv>:
 8056460:  push ebp
 8056461:  mov ebp, esp
 8056463:  sub esp, 0x1c
 8056466:  mov DWORD PTR [ebp-0x8], esi
 8056469:  mov esi, DWORD PTR [ebp+0x8]
 805646c:  mov DWORD PTR [ebp-0xc], ebx
 805646f:  mov DWORD PTR [ebp-0x4], edi
 8056472:  test esi, esi
 8056474:  je 805647b
 8056476:  cmp BYTE PTR [esi], 0x0
 8056479:  jne 80564a0
 805647b:  mov eax, gs:0x0
 8056481:  mov edx, 0xffffffe8
 8056487:  mov DWORD PTR [eax+edx], 0x16
 805648e:  mov eax, 0xffffffff
 8056493:  mov ebx, DWORD PTR [ebp-0xc]
 8056496:  mov esi, DWORD PTR [ebp-0x8]
 8056499:  mov edi, DWORD PTR [ebp-0x4]
 805649c:  mov esp, ebp
 805649e:  pop ebp
 805649f:  ret
 80564a0:  mov DWORD PTR [esp+0x4], 0x3d
 80564a8:  mov DWORD PTR [esp], esi
 80564ab:  call 806ae20
 80564b0:  test eax, eax
 80564b2:  mov ebx, eax
 80564b4:  jne 805647b
 80564b6:  mov DWORD PTR [esp], esi
 80564b9:  call 804eea0
 80564be:  mov ecx, 0x1
 80564c3:  mov DWORD PTR [ebp-0x10], eax
 80564c6:  mov eax, ebx
 80564c8:  cmp DWORD PTR gs:0xc, 0x0
 80564d0:  je 80564d3
 80564d2:  cmpxchg DWORD PTR ds:0x80d291c, ecx
 80564da:  jne 805695c
 80564e0:  mov edi, DWORD PTR ds:0x80d2218
 80564e6:  test edi, edi
 80564e8:  je 8056519
 80564ea:  mov ebx, DWORD PTR [edi]
 80564ec:  test ebx, ebx
 80564ee:  je 8056519
 80564f0:  mov eax, DWORD PTR [ebp-0x10]
 80564f3:  mov DWORD PTR [esp+0x4], esi
 80564f7:  mov DWORD PTR [esp], ebx
 80564fa:  mov DWORD PTR [esp+0x8], eax
 80564fe:  call 806b230
 8056503:  test eax, eax
 8056505:  jne 8056510
 8056507:  mov eax, DWORD PTR [ebp-0x10]
 805650a:  cmp BYTE PTR [ebx+eax], 0x3d
 805650e:  je 8056538
 8056510:  add edi, 0x4
 8056513:  mov ebx, DWORD PTR [edi]
 8056515:  test ebx, ebx
 8056517:  jne 80564f0
 8056519:  cmp DWORD PTR gs:0xc, 0x0
 8056521:  je 8056524
 8056523:  sub DWORD PTR ds:0x80d291c, 0x1
 805652b:  jne 805696c
 8056531:  xor eax, eax
 8056533:  jmp 8056493
 8056538:  mov edx, edi
 805653a:  lea esi, [esi]
 8056540:  add edx, 0x4
 8056543:  mov eax, DWORD PTR [edx]
 8056545:  test eax, eax
 8056547:  mov DWORD PTR [edx-0x4], eax
 805654a:  jne 8056540
 805654c:  jmp 80564ea
 805654e:  xchg ax, ax

08056550 <__add_to_environ>:
 8056550:  push ebp
 8056551:  mov ebp, esp
 8056553:  push edi
 8056554:  push esi
 8056555:  push ebx
 8056556:  sub esp, 0x2c
 8056559:  mov eax, DWORD PTR [ebp+0x8]
 805655c:  mov DWORD PTR [esp], eax
 805655f:  call 804eea0
 8056564:  mov ebx, DWORD PTR [ebp+0xc]
 8056567:  mov DWORD PTR [ebp-0x18], 0x0
 805656e:  test ebx, ebx
 8056570:  mov DWORD PTR [ebp-0x28], eax
 8056573:  je 8056586
 8056575:  mov edx, DWORD PTR [ebp+0xc]
 8056578:  mov DWORD PTR [esp], edx
 805657b:  call 804eea0
 8056580:  add eax, 0x1
 8056583:  mov DWORD PTR [ebp-0x18], eax
 8056586:  xor eax, eax
 8056588:  mov ecx, 0x1
 805658d:  cmp DWORD PTR gs:0xc, 0x0
 8056595:  je 8056598
 8056597:  cmpxchg DWORD PTR ds:0x80d291c, ecx
 805659f:  jne 805697c
 80565a5:  mov esi, DWORD PTR ds:0x80d2218
 80565ab:  xor edi, edi
 80565ad:  mov eax, 0x8
 80565b2:  test esi, esi
 80565b4:  je 805660b
 80565b6:  mov ebx, DWORD PTR [esi]
 80565b8:  xor edi, edi
 80565ba:  test ebx, ebx
 80565bc:  je 8056604
 80565be:  xchg ax, ax
 80565c0:  mov eax, DWORD PTR [ebp-0x28]
 80565c3:  mov DWORD PTR [esp+0x8], eax
 80565c7:  mov edx, DWORD PTR [ebp+0x8]
 80565ca:  mov DWORD PTR [esp], ebx
 80565cd:  mov DWORD PTR [esp+0x4], edx
 80565d1:  call 806b230
 80565d6:  test eax, eax
 80565d8:  jne 80565e3
 80565da:  mov eax, DWORD PTR [ebp-0x28]
 80565dd:  cmp BYTE PTR [ebx+eax], 0x3d
 80565e1:  je 80565ef
 80565e3:  add esi, 0x4
 80565e6:  add edi, 0x1
 80565e9:  mov ebx, DWORD PTR [esi]
 80565eb:  test ebx, ebx
 80565ed:  jne 80565c0
 80565ef:  test esi, esi
 80565f1:  lea eax, [edi*4+0x8]
 80565f8:  je 805660b
 80565fa:  mov ecx, DWORD PTR [esi]
 80565fc:  test ecx, ecx
 80565fe:  jne 8056779
 8056604:  lea eax, [edi*4+0x8]
 805660b:  mov DWORD PTR [esp+0x4], eax
 805660f:  mov eax, ds:0x80d2924
 8056614:  mov DWORD PTR [esp], eax
 8056617:  call 804db10
 805661c:  test eax, eax
 805661e:  mov ebx, eax
 8056620:  je 8056792
 8056626:  mov edx, DWORD PTR [ebp+0x10]
 8056629:  test edx, edx
 805662b:  je 805668d
 805662d:  mov edx, DWORD PTR [ebp+0x10]
 8056630:  lea esi, [edi*4]
 8056637:  mov DWORD PTR [eax+edi*4], edx
 805663a:  mov eax, ds:0x80d2218
 805663f:  cmp eax, DWORD PTR ds:0x80d2924
 8056645:  je 8056657
 8056647:  mov DWORD PTR [esp+0x8], esi
 805664b:  mov DWORD PTR [esp+0x4], eax
 805664f:  mov DWORD PTR [esp], ebx
 8056652:  call 804efc0
 8056657:  mov DWORD PTR [ebx+edi*4+0x4], 0x0
 805665f:  mov DWORD PTR ds:0x80d2218, ebx
 8056665:  mov DWORD PTR ds:0x80d2924, ebx
 805666b:  cmp DWORD PTR gs:0xc, 0x0
 8056673:  je 8056676
 8056675:  sub DWORD PTR ds:0x80d291c, 0x1
 805667d:  jne 805698c
 8056683:  xor eax, eax
 8056685:  lea esp, [ebp-0xc]
 8056688:  pop ebx
 8056689:  pop esi
 805668a:  pop edi
 805668b:  pop ebp
 805668c:  ret
 805668d:  mov edx, DWORD PTR [ebp-0x18]
 8056690:  lea esi, [edi*4]
 8056697:  mov eax, DWORD PTR [ebp-0x28]
 805669a:  mov DWORD PTR [ebp-0x20], esp
 805669d:  lea eax, [edx+eax+0x1]
 80566a1:  mov DWORD PTR [ebp-0x14], eax
 80566a4:  add eax, 0x12
 80566a7:  and eax, 0xfc
 80566aa:  sub esp, eax
 80566ac:  mov eax, DWORD PTR [ebp-0x28]
 80566af:  lea edx, [esp+0x1b]
 80566b3:  and edx, 0xf0
 80566b6:  mov DWORD PTR [ebp-0x2c], edx
 80566b9:  mov DWORD PTR [esp+0x8], eax
 80566bd:  mov edx, DWORD PTR [ebp+0x8]
 80566c0:  mov DWORD PTR [esp+0x4], edx
 80566c4:  mov eax, DWORD PTR [ebp-0x2c]
 80566c7:  mov DWORD PTR [esp], eax
 80566ca:  call 806c310
 80566cf:  mov BYTE PTR [eax], 0x3d
 80566d2:  mov edx, DWORD PTR [ebp-0x18]
 80566d5:  add eax, 0x1
 80566d8:  mov DWORD PTR [esp+0x8], edx
 80566dc:  mov edx, DWORD PTR [ebp+0xc]
 80566df:  mov DWORD PTR [esp], eax
 80566e2:  mov DWORD PTR [esp+0x4], edx
 80566e6:  call 804efc0
 80566eb:  lea eax, [ebx+esi]
 80566ee:  mov DWORD PTR [ebp-0x10], eax
 80566f1:  mov DWORD PTR [esp+0x8], 0x806af90
 80566f9:  mov DWORD PTR [esp+0x4], 0x80d2920
 8056701:  mov edx, DWORD PTR [ebp-0x2c]
 8056704:  mov DWORD PTR [esp], edx
 8056707:  call 80736f0
 805670c:  test eax, eax
 805670e:  je 805676e
 8056710:  mov eax, DWORD PTR [eax]
 8056712:  mov edx, DWORD PTR [ebp-0x10]
 8056715:  test eax, eax
 8056717:  mov DWORD PTR [edx], eax
 8056719:  jne 8056766
 805671b:  mov eax, DWORD PTR [ebp-0x14]
 805671e:  mov DWORD PTR [esp], eax
 8056721:  call 804d6f0
 8056726:  mov edx, DWORD PTR [ebp-0x10]
 8056729:  test eax, eax
 805672b:  mov DWORD PTR [edx], eax
 805672d:  je 80567b4
 8056733:  mov edx, DWORD PTR [ebp-0x14]
 8056736:  mov DWORD PTR [esp+0x8], edx
 805673a:  mov edx, DWORD PTR [ebp-0x2c]
 805673d:  mov DWORD PTR [esp], eax
 8056740:  mov DWORD PTR [esp+0x4], edx
 8056744:  call 804efc0
 8056749:  mov DWORD PTR [esp+0x8], 0x806af90
 8056751:  mov DWORD PTR [esp+0x4], 0x80d2920
 8056759:  mov edx, DWORD PTR [ebp-0x10]
 805675c:  mov eax, DWORD PTR [edx]
 805675e:  mov DWORD PTR [esp], eax
 8056761:  call 8073c10
 8056766:  mov esp, DWORD PTR [ebp-0x20]
 8056769:  jmp 805663a
 805676e:  mov eax, DWORD PTR [ebp-0x10]
 8056771:  mov DWORD PTR [eax], 0x0
 8056777:  jmp 805671b
 8056779:  mov eax, DWORD PTR [ebp+0x14]
 805677c:  test eax, eax
 805677e:  je 805666b
 8056784:  mov ebx, DWORD PTR [ebp+0x10]
 8056787:  test ebx, ebx
 8056789:  je 80567ec
 805678b:  mov DWORD PTR [esi], ebx
 805678d:  jmp 805666b
 8056792:  cmp DWORD PTR gs:0xc, 0x0
 805679a:  je 805679d
 805679c:  sub DWORD PTR ds:0x80d291c, 0x1
 80567a4:  jne 805699c
 80567aa:  mov eax, 0xffffffff
 80567af:  jmp 8056685
 80567b4:  mov edx, 0xffffffe8
 80567ba:  mov eax, gs:0x0
 80567c0:  mov DWORD PTR [eax+edx], 0xc
 80567c7:  cmp DWORD PTR gs:0xc, 0x0
 80567cf:  je 80567d2
 80567d1:  sub DWORD PTR ds:0x80d291c, 0x1
 80567d9:  jne 80569ac
 80567df:  mov eax, 0xffffffff
 80567e4:  mov esp, DWORD PTR [ebp-0x20]
 80567e7:  jmp 8056685
 80567ec:  mov edx, DWORD PTR [ebp-0x18]
 80567ef:  mov eax, DWORD PTR [ebp-0x28]
 80567f2:  mov DWORD PTR [ebp-0x1c], esp
 80567f5:  lea eax, [edx+eax+0x1]
 80567f9:  mov edx, DWORD PTR [ebp-0x28]
 80567fc:  mov DWORD PTR [ebp-0x24], eax
 80567ff:  add eax, 0x12
 8056802:  and eax, 0xfc
 8056805:  sub esp, eax
 8056807:  mov DWORD PTR [esp+0x8], edx
 805680b:  mov eax, DWORD PTR [ebp+0x8]
 805680e:  lea edi, [esp+0x1b]
 8056812:  and edi, 0xf0
 8056815:  mov DWORD PTR [esp], edi
 8056818:  mov DWORD PTR [esp+0x4], eax
 805681c:  call 806c310
 8056821:  mov BYTE PTR [eax], 0x3d
 8056824:  mov edx, DWORD PTR [ebp-0x18]
 8056827:  add eax, 0x1
 805682a:  mov DWORD PTR [esp+0x8], edx
 805682e:  mov edx, DWORD PTR [ebp+0xc]
 8056831:  mov DWORD PTR [esp], eax
 8056834:  mov DWORD PTR [esp+0x4], edx
 8056838:  call 804efc0
 805683d:  mov DWORD PTR [esp+0x8], 0x806af90
 8056845:  mov DWORD PTR [esp+0x4], 0x80d2920
 805684d:  mov DWORD PTR [esp], edi
 8056850:  call 80736f0
 8056855:  test eax, eax
 8056857:  je 805685f
 8056859:  mov ebx, DWORD PTR [eax]
 805685b:  test ebx, ebx
 805685d:  jne 805689b
 805685f:  mov eax, DWORD PTR [ebp-0x24]
 8056862:  mov DWORD PTR [esp], eax
 8056865:  call 804d6f0
 805686a:  test eax, eax
 805686c:  mov ebx, eax
 805686e:  je 80568a5
 8056870:  mov edx, DWORD PTR [ebp-0x24]
 8056873:  mov DWORD PTR [esp+0x4], edi
 8056877:  mov DWORD PTR [esp], eax
 805687a:  mov DWORD PTR [esp+0x8], edx
 805687e:  call 804efc0
 8056883:  mov DWORD PTR [esp+0x8], 0x806af90
 805688b:  mov DWORD PTR [esp+0x4], 0x80d2920
 8056893:  mov DWORD PTR [esp], ebx
 8056896:  call 8073c10
 805689b:  mov DWORD PTR [esi], ebx
 805689d:  mov esp, DWORD PTR [ebp-0x1c]
 80568a0:  jmp 805666b
 80568a5:  cmp DWORD PTR gs:0xc, 0x0
 80568ad:  je 80568b0
 80568af:  sub DWORD PTR ds:0x80d291c, 0x1
 80568b7:  jne 80569bc
 80568bd:  mov eax, 0xffffffff
 80568c2:  mov esp, DWORD PTR [ebp-0x1c]
 80568c5:  jmp 8056685
 80568ca:  lea esi, [esi]

080568d0 <__setenv>:
 80568d0:  push ebp
 80568d1:  mov ebp, esp
 80568d3:  push ebx
 80568d4:  sub esp, 0x10
 80568d7:  mov ebx, DWORD PTR [ebp+0x8]
 80568da:  test ebx, ebx
 80568dc:  je 80568e3
 80568de:  cmp BYTE PTR [ebx], 0x0
 80568e1:  jne 8056908
 80568e3:  mov eax, gs:0x0
 80568e9:  mov edx, 0xffffffe8
 80568ef:  mov DWORD PTR [eax+edx], 0x16
 80568f6:  mov eax, 0xffffffff
 80568fb:  add esp, 0x10
 80568fe:  pop ebx
 80568ff:  pop ebp
 8056900:  ret
 8056901:  lea esi, [esi]
 8056908:  mov DWORD PTR [esp+0x4], 0x3d
 8056910:  mov DWORD PTR [esp], ebx
 8056913:  call 806ae20
 8056918:  test eax, eax
 805691a:  jne 80568e3
 805691c:  mov eax, DWORD PTR [ebp+0x10]
 805691f:  mov DWORD PTR [esp+0x8], 0x0
 8056927:  mov DWORD PTR [esp], ebx
 805692a:  mov DWORD PTR [esp+0xc], eax
 805692e:  mov eax, DWORD PTR [ebp+0xc]
 8056931:  mov DWORD PTR [esp+0x4], eax
 8056935:  call 8056550
 805693a:  jmp 80568fb

0805693c <_L_lock_17>:
 805693c:  lea ecx, ds:0x80d291c
 8056942:  call 8050230
 8056947:  jmp 8056415

0805694c <_L_unlock_27>:
 805694c:  lea eax, ds:0x80d291c
 8056952:  call 8050260
 8056957:  jmp 8056444

0805695c <_L_lock_111>:
 805695c:  lea ecx, ds:0x80d291c
 8056962:  call 8050230
 8056967:  jmp 80564e0

0805696c <_L_unlock_151>:
 805696c:  lea eax, ds:0x80d291c
 8056972:  call 8050260
 8056977:  jmp 8056531

0805697c <_L_lock_220>:
 805697c:  lea ecx, ds:0x80d291c
 8056982:  call 8050230
 8056987:  jmp 80565a5

0805698c <_L_unlock_321>:
 805698c:  lea eax, ds:0x80d291c
 8056992:  call 8050260
 8056997:  jmp 8056683

0805699c <_L_unlock_471>:
 805699c:  lea eax, ds:0x80d291c
 80569a2:  call 8050260
 80569a7:  jmp 80567aa

080569ac <_L_unlock_487>:
 80569ac:  lea eax, ds:0x80d291c
 80569b2:  call 8050260
 80569b7:  jmp 80567df

080569bc <_L_unlock_584>:
 80569bc:  lea eax, ds:0x80d291c
 80569c2:  call 8050260
 80569c7:  jmp 80568bd
 80569cc:  nop
 80569cd:  nop
 80569ce:  nop
 80569cf:  nop

080569d0 <__secure_getenv>:
 80569d0:  mov edx, DWORD PTR ds:0x80d0cd8
 80569d6:  push ebp
 80569d7:  mov ebp, esp
 80569d9:  mov eax, DWORD PTR [ebp+0x8]
 80569dc:  test edx, edx
 80569de:  je 80569e8
 80569e0:  xor eax, eax
 80569e2:  pop ebp
 80569e3:  ret
 80569e4:  lea esi, [esi]
 80569e8:  mov DWORD PTR [ebp+0x8], eax
 80569eb:  pop ebp
 80569ec:  jmp 80562f0
 80569f1:  nop
 80569f2:  nop
 80569f3:  nop
 80569f4:  nop
 80569f5:  nop
 80569f6:  nop
 80569f7:  nop
 80569f8:  nop
 80569f9:  nop
 80569fa:  nop
 80569fb:  nop
 80569fc:  nop
 80569fd:  nop
 80569fe:  nop
 80569ff:  nop

08056a00 <strtol>:
 8056a00:  push ebp
 8056a01:  mov eax, gs:0x0
 8056a07:  mov ebp, esp
 8056a09:  sub esp, 0x14
 8056a0c:  mov edx, 0xffffffe4
 8056a12:  mov eax, DWORD PTR [eax+edx]
 8056a15:  mov DWORD PTR [esp+0xc], 0x0
 8056a1d:  mov DWORD PTR [esp+0x10], eax
 8056a21:  mov eax, DWORD PTR [ebp+0x10]
 8056a24:  mov DWORD PTR [esp+0x8], eax
 8056a28:  mov eax, DWORD PTR [ebp+0xc]
 8056a2b:  mov DWORD PTR [esp+0x4], eax
 8056a2f:  mov eax, DWORD PTR [ebp+0x8]
 8056a32:  mov DWORD PTR [esp], eax
 8056a35:  call 8056b00
 8056a3a:  leave
 8056a3b:  ret
 8056a3c:  lea esi, [esi]

08056a40 <__strtol_internal>:
 8056a40:  push ebp
 8056a41:  mov eax, gs:0x0
 8056a47:  mov ebp, esp
 8056a49:  sub esp, 0x14
 8056a4c:  mov edx, 0xffffffe4
 8056a52:  mov eax, DWORD PTR [eax+edx]
 8056a55:  mov DWORD PTR [esp+0x10], eax
 8056a59:  mov eax, DWORD PTR [ebp+0x14]
 8056a5c:  mov DWORD PTR [esp+0xc], eax
 8056a60:  mov eax, DWORD PTR [ebp+0x10]
 8056a63:  mov DWORD PTR [esp+0x8], eax
 8056a67:  mov eax, DWORD PTR [ebp+0xc]
 8056a6a:  mov DWORD PTR [esp+0x4], eax
 8056a6e:  mov eax, DWORD PTR [ebp+0x8]
 8056a71:  mov DWORD PTR [esp], eax
 8056a74:  call 8056b00
 8056a79:  leave
 8056a7a:  ret
 8056a7b:  nop
 8056a7c:  nop
 8056a7d:  nop
 8056a7e:  nop
 8056a7f:  nop

08056a80 <strtoul>:
 8056a80:  push ebp
 8056a81:  mov eax, gs:0x0
 8056a87:  mov ebp, esp
 8056a89:  sub esp, 0x14
 8056a8c:  mov edx, 0xffffffe4
 8056a92:  mov eax, DWORD PTR [eax+edx]
 8056a95:  mov DWORD PTR [esp+0xc], 0x0
 8056a9d:  mov DWORD PTR [esp+0x10], eax
 8056aa1:  mov eax, DWORD PTR [ebp+0x10]
 8056aa4:  mov DWORD PTR [esp+0x8], eax
 8056aa8:  mov eax, DWORD PTR [ebp+0xc]
 8056aab:  mov DWORD PTR [esp+0x4], eax
 8056aaf:  mov eax, DWORD PTR [ebp+0x8]
 8056ab2:  mov DWORD PTR [esp], eax
 8056ab5:  call 8056fe0
 8056aba:  leave
 8056abb:  ret
 8056abc:  lea esi, [esi]

08056ac0 <__strtoul_internal>:
 8056ac0:  push ebp
 8056ac1:  mov eax, gs:0x0
 8056ac7:  mov ebp, esp
 8056ac9:  sub esp, 0x14
 8056acc:  mov edx, 0xffffffe4
 8056ad2:  mov eax, DWORD PTR [eax+edx]
 8056ad5:  mov DWORD PTR [esp+0x10], eax
 8056ad9:  mov eax, DWORD PTR [ebp+0x14]
 8056adc:  mov DWORD PTR [esp+0xc], eax
 8056ae0:  mov eax, DWORD PTR [ebp+0x10]
 8056ae3:  mov DWORD PTR [esp+0x8], eax
 8056ae7:  mov eax, DWORD PTR [ebp+0xc]
 8056aea:  mov DWORD PTR [esp+0x4], eax
 8056aee:  mov eax, DWORD PTR [ebp+0x8]
 8056af1:  mov DWORD PTR [esp], eax
 8056af4:  call 8056fe0
 8056af9:  leave
 8056afa:  ret
 8056afb:  nop
 8056afc:  nop
 8056afd:  nop
 8056afe:  nop
 8056aff:  nop

08056b00 <____strtol_l_internal>:
 8056b00:  push ebp
 8056b01:  mov ebp, esp
 8056b03:  push edi
 8056b04:  push esi
 8056b05:  push ebx
 8056b06:  sub esp, 0x44
 8056b09:  mov eax, DWORD PTR [ebp+0x18]
 8056b0c:  mov edx, DWORD PTR [eax+0x4]
 8056b0f:  mov eax, DWORD PTR [ebp+0x14]
 8056b12:  test eax, eax
 8056b14:  jne 8056e73
 8056b1a:  mov DWORD PTR [ebp-0x20], 0x0
 8056b21:  mov DWORD PTR [ebp-0x18], 0x0
 8056b28:  mov eax, DWORD PTR [ebp+0x10]
 8056b2b:  test eax, eax
 8056b2d:  js 8056cf0
 8056b33:  cmp DWORD PTR [ebp+0x10], 0x1
 8056b37:  je 8056cf0
 8056b3d:  cmp DWORD PTR [ebp+0x10], 0x24
 8056b41:  jg 8056cf0
 8056b47:  mov edi, DWORD PTR [ebp+0x8]
 8056b4a:  mov esi, DWORD PTR [ebp+0x18]
 8056b4d:  movzx ecx, BYTE PTR [edi]
 8056b50:  mov edx, edi
 8056b52:  mov ebx, DWORD PTR [esi+0x34]
 8056b55:  movsx eax, cl
 8056b58:  test BYTE PTR [ebx+eax*2+0x1], 0x20
 8056b5d:  je 8056e4e
 8056b63:  nop
 8056b64:  lea esi, [esi]
 8056b68:  add edx, 0x1
 8056b6b:  movzx ecx, BYTE PTR [edx]
 8056b6e:  movsx eax, cl
 8056b71:  test BYTE PTR [ebx+eax*2+0x1], 0x20
 8056b76:  jne 8056b68
 8056b78:  mov DWORD PTR [ebp-0x14], edx
 8056b7b:  test cl, cl
 8056b7d:  je 8056f0e
 8056b83:  cmp cl, 0x2d
 8056b86:  je 8056e3c
 8056b8c:  cmp cl, 0x2b
 8056b8f:  mov DWORD PTR [ebp-0x30], 0x0
 8056b96:  je 8056d37
 8056b9c:  mov eax, DWORD PTR [ebp-0x14]
 8056b9f:  movzx edi, BYTE PTR [eax]
 8056ba2:  mov edx, edi
 8056ba4:  mov esi, edi
 8056ba6:  cmp dl, 0x30
 8056ba9:  je 8056dfa
 8056baf:  mov eax, DWORD PTR [ebp+0x10]
 8056bb2:  test eax, eax
 8056bb4:  je 8056d0d
 8056bba:  cmp DWORD PTR [ebp+0x10], 0xa
 8056bbe:  je 8056d0d
 8056bc4:  mov eax, DWORD PTR [ebp+0x10]
 8056bc7:  sub eax, 0x2
 8056bca:  mov DWORD PTR [ebp-0x28], 0x0
 8056bd1:  mov DWORD PTR [ebp-0x1c], 0x0
 8056bd8:  mov edx, DWORD PTR [eax*4+0x80b0aa0]
 8056bdf:  mov ecx, esi
 8056be1:  movzx eax, BYTE PTR [eax+0x80b0b40]
 8056be8:  test cl, cl
 8056bea:  mov DWORD PTR [ebp-0x2c], edx
 8056bed:  mov BYTE PTR [ebp-0x31], al
 8056bf0:  je 8056d8e
 8056bf6:  mov ebx, DWORD PTR [ebp-0x14]
 8056bf9:  cmp DWORD PTR [ebp-0x28], ebx
 8056bfc:  je 8056d8e
 8056c02:  mov eax, DWORD PTR [ebp-0x1c]
 8056c05:  xor edi, edi
 8056c07:  mov DWORD PTR [ebp-0x24], 0x0
 8056c0e:  sub eax, 0x1
 8056c11:  mov DWORD PTR [ebp-0x3c], eax
 8056c14:  lea esi, [esi]
 8056c18:  lea ecx, [esi-0x30]
 8056c1b:  cmp cl, 0x9
 8056c1e:  jbe 8056c74
 8056c20:  mov eax, DWORD PTR [ebp-0x1c]
 8056c23:  test eax, eax
 8056c25:  je 8056c55
 8056c27:  mov eax, DWORD PTR [ebp-0x20]
 8056c2a:  xor edx, edx
 8056c2c:  mov ecx, esi
 8056c2e:  cmp BYTE PTR [eax], cl
 8056c30:  je 8056c44
 8056c32:  jmp 8056c55
 8056c34:  lea esi, [esi]
 8056c38:  mov ecx, DWORD PTR [ebp-0x20]
 8056c3b:  movzx eax, BYTE PTR [ecx+edx]
 8056c3f:  cmp al, BYTE PTR [ebx+edx]
 8056c42:  jne 8056c4c
 8056c44:  add edx, 0x1
 8056c47:  cmp DWORD PTR [ebp-0x1c], edx
 8056c4a:  ja 8056c38
 8056c4c:  cmp edx, DWORD PTR [ebp-0x1c]
 8056c4f:  je 8056d70
 8056c55:  mov ecx, DWORD PTR [ebp+0x18]
 8056c58:  mov eax, esi
 8056c5a:  movzx edx, al
 8056c5d:  mov eax, DWORD PTR [ecx+0x34]
 8056c60:  test BYTE PTR [eax+edx*2+0x1], 0x4
 8056c65:  je 8056d80
 8056c6b:  mov eax, DWORD PTR [ecx+0x3c]
 8056c6e:  mov eax, DWORD PTR [eax+edx*4]
 8056c71:  lea ecx, [eax-0x37]
 8056c74:  movzx eax, cl
 8056c77:  cmp DWORD PTR [ebp+0x10], eax
 8056c7a:  jle 8056d80
 8056c80:  cmp DWORD PTR [ebp-0x2c], edi
 8056c83:  jb 8056d60
 8056c89:  cmp edi, DWORD PTR [ebp-0x2c]
 8056c8c:  je 8056d50
 8056c92:  mov edx, DWORD PTR [ebp+0x10]
 8056c95:  movzx eax, cl
 8056c98:  imul edx, edi
 8056c9b:  lea edi, [eax+edx]
 8056c9e:  add ebx, 0x1
 8056ca1:  movzx esi, BYTE PTR [ebx]
 8056ca4:  mov eax, esi
 8056ca6:  test al, al
 8056ca8:  je 8056d80
 8056cae:  cmp DWORD PTR [ebp-0x28], ebx
 8056cb1:  jne 8056c18
 8056cb7:  mov esi, DWORD PTR [ebp+0xc]
 8056cba:  test esi, esi
 8056cbc:  je 8056cc3
 8056cbe:  mov edx, DWORD PTR [ebp+0xc]
 8056cc1:  mov DWORD PTR [edx], ebx
 8056cc3:  mov ebx, DWORD PTR [ebp-0x24]
 8056cc6:  test ebx, ebx
 8056cc8:  je 8056dd0
 8056cce:  mov eax, gs:0x0
 8056cd4:  mov edx, 0xffffffe8
 8056cda:  cmp DWORD PTR [ebp-0x30], 0x1
 8056cde:  mov DWORD PTR [eax+edx], 0x22
 8056ce5:  sbb eax, eax
 8056ce7:  sub eax, 0x80000000
 8056cec:  jmp 8056d05
 8056cee:  xchg ax, ax
 8056cf0:  mov eax, gs:0x0
 8056cf6:  mov edx, 0xffffffe8
 8056cfc:  mov DWORD PTR [eax+edx], 0x16
 8056d03:  xor eax, eax
 8056d05:  add esp, 0x44
 8056d08:  pop ebx
 8056d09:  pop esi
 8056d0a:  pop edi
 8056d0b:  pop ebp
 8056d0c:  ret
 8056d0d:  mov eax, DWORD PTR [ebp-0x18]
 8056d10:  test eax, eax
 8056d12:  jne 8056eb5
 8056d18:  mov DWORD PTR [ebp-0x28], 0x0
 8056d1f:  mov eax, 0x8
 8056d24:  mov DWORD PTR [ebp-0x1c], 0x0
 8056d2b:  mov DWORD PTR [ebp+0x10], 0xa
 8056d32:  jmp 8056bd8
 8056d37:  add edx, 0x1
 8056d3a:  mov DWORD PTR [ebp-0x14], edx
 8056d3d:  mov DWORD PTR [ebp-0x30], 0x0
 8056d44:  jmp 8056b9c
 8056d49:  lea esi, [esi]
 8056d50:  cmp cl, BYTE PTR [ebp-0x31]
 8056d53:  jbe 8056c92
 8056d59:  lea esi, [esi]
 8056d60:  mov DWORD PTR [ebp-0x24], 0x1
 8056d67:  jmp 8056c9e
 8056d6c:  lea esi, [esi]
 8056d70:  add ebx, DWORD PTR [ebp-0x3c]
 8056d73:  nop
 8056d74:  lea esi, [esi]
 8056d78:  jmp 8056c9e
 8056d7d:  lea esi, [esi]
 8056d80:  cmp DWORD PTR [ebp-0x14], ebx
 8056d83:  nop
 8056d84:  lea esi, [esi]
 8056d88:  jne 8056cb7
 8056d8e:  mov ecx, DWORD PTR [ebp-0x14]
 8056d91:  mov edx, DWORD PTR [ebp+0xc]
 8056d94:  xor eax, eax
 8056d96:  test edx, edx
 8056d98:  je 8056d05
 8056d9e:  mov eax, ecx
 8056da0:  sub eax, DWORD PTR [ebp+0x8]
 8056da3:  sub eax, 0x1
 8056da6:  jle 8056dbc
 8056da8:  mov ebx, DWORD PTR [ebp+0x18]
 8056dab:  movsx edx, BYTE PTR [ecx-0x1]
 8056daf:  mov eax, DWORD PTR [ebx+0x3c]
 8056db2:  cmp DWORD PTR [eax+edx*4], 0x58
 8056db6:  je 8056e9b
 8056dbc:  mov eax, DWORD PTR [ebp+0x8]
 8056dbf:  mov edi, DWORD PTR [ebp+0xc]
 8056dc2:  mov DWORD PTR [edi], eax
 8056dc4:  xor eax, eax
 8056dc6:  jmp 8056d05
 8056dcb:  nop
 8056dcc:  lea esi, [esi]
 8056dd0:  cmp DWORD PTR [ebp-0x30], 0x1
 8056dd4:  sbb eax, eax
 8056dd6:  sub eax, 0x80000000
 8056ddb:  cmp eax, edi
 8056ddd:  jb 8056cce
 8056de3:  mov ecx, DWORD PTR [ebp-0x30]
 8056de6:  mov eax, edi
 8056de8:  test ecx, ecx
 8056dea:  je 8056d05
 8056df0:  add esp, 0x44
 8056df3:  neg eax
 8056df5:  pop ebx
 8056df6:  pop esi
 8056df7:  pop edi
 8056df8:  pop ebp
 8056df9:  ret
 8056dfa:  mov eax, DWORD PTR [ebp+0x10]
 8056dfd:  test eax, eax
 8056dff:  sete cl
 8056e02:  je 8056e0e
 8056e04:  cmp DWORD PTR [ebp+0x10], 0x10
 8056e08:  jne 8056bba
 8056e0e:  mov eax, DWORD PTR [ebp-0x14]
 8056e11:  movsx edx, BYTE PTR [eax+0x1]
 8056e15:  mov eax, DWORD PTR [ebp+0x18]
 8056e18:  mov eax, DWORD PTR [eax+0x3c]
 8056e1b:  cmp DWORD PTR [eax+edx*4], 0x58
 8056e1f:  je 8056e56
 8056e21:  test cl, cl
 8056e23:  je 8056bba
 8056e29:  mov DWORD PTR [ebp+0x10], 0x8
 8056e30:  mov eax, 0x6
 8056e35:  mov esi, edi
 8056e37:  jmp 8056bca
 8056e3c:  add edx, 0x1
 8056e3f:  mov DWORD PTR [ebp-0x14], edx
 8056e42:  mov DWORD PTR [ebp-0x30], 0x1
 8056e49:  jmp 8056b9c
 8056e4e:  mov DWORD PTR [ebp-0x14], edi
 8056e51:  jmp 8056b7b
 8056e56:  add DWORD PTR [ebp-0x14], 0x2
 8056e5a:  mov eax, 0xe
 8056e5f:  mov edx, DWORD PTR [ebp-0x14]
 8056e62:  mov DWORD PTR [ebp+0x10], 0x10
 8056e69:  movzx edi, BYTE PTR [edx]
 8056e6c:  mov esi, edi
 8056e6e:  jmp 8056bca
 8056e73:  mov ecx, DWORD PTR [edx+0x2c]
 8056e76:  mov DWORD PTR [ebp-0x18], ecx
 8056e79:  movzx eax, BYTE PTR [ecx]
 8056e7c:  sub eax, 0x1
 8056e7f:  cmp al, 0x7d
 8056e81:  ja 8056b1a
 8056e87:  mov edx, DWORD PTR [edx+0x28]
 8056e8a:  mov DWORD PTR [ebp-0x20], edx
 8056e8d:  cmp BYTE PTR [edx], 0x0
 8056e90:  jne 8056b28
 8056e96:  jmp 8056b1a
 8056e9b:  cmp BYTE PTR [ecx-0x2], 0x30
 8056e9f:  nop
 8056ea0:  jne 8056dbc
 8056ea6:  mov esi, DWORD PTR [ebp+0xc]
 8056ea9:  lea eax, [ecx-0x1]
 8056eac:  mov DWORD PTR [esi], eax
 8056eae:  xor eax, eax
 8056eb0:  jmp 8056d05
 8056eb5:  mov ecx, DWORD PTR [ebp-0x20]
 8056eb8:  mov DWORD PTR [esp], ecx
 8056ebb:  call 804eea0
 8056ec0:  test eax, eax
 8056ec2:  mov DWORD PTR [ebp-0x38], eax
 8056ec5:  mov DWORD PTR [ebp-0x1c], eax
 8056ec8:  je 8056ef7
 8056eca:  mov eax, DWORD PTR [ebp-0x20]
 8056ecd:  mov ecx, edi
 8056ecf:  xor edx, edx
 8056ed1:  movzx eax, BYTE PTR [eax]
 8056ed4:  cmp cl, al
 8056ed6:  mov BYTE PTR [ebp-0xd], al
 8056ed9:  je 8056eef
 8056edb:  jmp 8056f16
 8056edd:  lea esi, [esi]
 8056ee0:  mov ecx, DWORD PTR [ebp-0x20]
 8056ee3:  movzx eax, BYTE PTR [ecx+edx]
 8056ee7:  mov ecx, DWORD PTR [ebp-0x14]
 8056eea:  cmp al, BYTE PTR [ecx+edx]
 8056eed:  jne 8056f16
 8056eef:  add edx, 0x1
 8056ef2:  cmp DWORD PTR [ebp-0x38], edx
 8056ef5:  ja 8056ee0
 8056ef7:  mov eax, DWORD PTR [ebp-0x14]
 8056efa:  mov DWORD PTR [ebp+0x10], 0xa
 8056f01:  mov DWORD PTR [ebp-0x28], eax
 8056f04:  mov eax, 0x8
 8056f09:  jmp 8056bd8
 8056f0e:  mov ecx, DWORD PTR [ebp+0x8]
 8056f11:  jmp 8056d91
 8056f16:  mov eax, edi
 8056f18:  mov ecx, DWORD PTR [ebp-0x14]
 8056f1b:  test al, al
 8056f1d:  je 8056f58
 8056f1f:  lea eax, [esi-0x30]
 8056f22:  cmp al, 0x9
 8056f24:  jbe 8056f4c
 8056f26:  xor edx, edx
 8056f28:  mov eax, esi
 8056f2a:  cmp al, BYTE PTR [ebp-0xd]
 8056f2d:  je 8056f44
 8056f2f:  jmp 8056f8f
 8056f31:  lea esi, [esi]
 8056f38:  mov edi, DWORD PTR [ebp-0x20]
 8056f3b:  movzx eax, BYTE PTR [edi+edx]
 8056f3f:  cmp al, BYTE PTR [ecx+edx]
 8056f42:  jne 8056f8f
 8056f44:  add edx, 0x1
 8056f47:  cmp DWORD PTR [ebp-0x38], edx
 8056f4a:  ja 8056f38
 8056f4c:  add ecx, 0x1
 8056f4f:  movzx esi, BYTE PTR [ecx]
 8056f52:  mov eax, esi
 8056f54:  test al, al
 8056f56:  jne 8056f1f
 8056f58:  mov edx, DWORD PTR [ebp-0x18]
 8056f5b:  mov DWORD PTR [esp+0xc], edx
 8056f5f:  mov ebx, DWORD PTR [ebp-0x20]
 8056f62:  mov DWORD PTR [esp+0x4], ecx
 8056f66:  mov DWORD PTR [esp+0x8], ebx
 8056f6a:  mov esi, DWORD PTR [ebp-0x14]
 8056f6d:  mov DWORD PTR [esp], esi
 8056f70:  call 80574b0
 8056f75:  mov edi, DWORD PTR [ebp-0x14]
 8056f78:  mov DWORD PTR [ebp-0x28], eax
 8056f7b:  mov eax, 0x8
 8056f80:  movzx esi, BYTE PTR [edi]
 8056f83:  mov DWORD PTR [ebp+0x10], 0xa
 8056f8a:  jmp 8056bd8
 8056f8f:  mov eax, esi
 8056f91:  movzx edx, al
 8056f94:  test BYTE PTR [ebx+edx*2+0x1], 0x4
 8056f99:  je 8056f58
 8056f9b:  mov esi, DWORD PTR [ebp+0x18]
 8056f9e:  mov eax, DWORD PTR [esi+0x3c]
 8056fa1:  cmp DWORD PTR [eax+edx*4], 0x40
 8056fa5:  jle 8056f4c
 8056fa7:  jmp 8056f58
 8056fa9:  lea esi, [esi]

08056fb0 <__strtol_l>:
 8056fb0:  push ebp
 8056fb1:  mov ebp, esp
 8056fb3:  sub esp, 0x14
 8056fb6:  mov eax, DWORD PTR [ebp+0x14]
 8056fb9:  mov DWORD PTR [esp+0xc], 0x0
 8056fc1:  mov DWORD PTR [esp+0x10], eax
 8056fc5:  mov eax, DWORD PTR [ebp+0x10]
 8056fc8:  mov DWORD PTR [esp+0x8], eax
 8056fcc:  mov eax, DWORD PTR [ebp+0xc]
 8056fcf:  mov DWORD PTR [esp+0x4], eax
 8056fd3:  mov eax, DWORD PTR [ebp+0x8]
 8056fd6:  mov DWORD PTR [esp], eax
 8056fd9:  call 8056b00
 8056fde:  leave
 8056fdf:  ret

08056fe0 <____strtoul_l_internal>:
 8056fe0:  push ebp
 8056fe1:  mov ebp, esp
 8056fe3:  push edi
 8056fe4:  push esi
 8056fe5:  push ebx
 8056fe6:  sub esp, 0x44
 8056fe9:  mov eax, DWORD PTR [ebp+0x18]
 8056fec:  mov edx, DWORD PTR [eax+0x4]
 8056fef:  mov eax, DWORD PTR [ebp+0x14]
 8056ff2:  test eax, eax
 8056ff4:  jne 8057320
 8056ffa:  mov DWORD PTR [ebp-0x20], 0x0
 8057001:  mov DWORD PTR [ebp-0x18], 0x0
 8057008:  mov eax, DWORD PTR [ebp+0x10]
 805700b:  test eax, eax
 805700d:  js 80571c8
 8057013:  cmp DWORD PTR [ebp+0x10], 0x1
 8057017:  je 80571c8
 805701d:  cmp DWORD PTR [ebp+0x10], 0x24
 8057021:  jg 80571c8
 8057027:  mov edi, DWORD PTR [ebp+0x8]
 805702a:  mov esi, DWORD PTR [ebp+0x18]
 805702d:  movzx ecx, BYTE PTR [edi]
 8057030:  mov edx, edi
 8057032:  mov ebx, DWORD PTR [esi+0x34]
 8057035:  movsx eax, cl
 8057038:  test BYTE PTR [ebx+eax*2+0x1], 0x20
 805703d:  je 80572f9
 8057043:  nop
 8057044:  lea esi, [esi]
 8057048:  add edx, 0x1
 805704b:  movzx ecx, BYTE PTR [edx]
 805704e:  movsx eax, cl
 8057051:  test BYTE PTR [ebx+eax*2+0x1], 0x20
 8057056:  jne 8057048
 8057058:  mov DWORD PTR [ebp-0x14], edx
 805705b:  test cl, cl
 805705d:  je 8057365
 8057063:  cmp cl, 0x2d
 8057066:  je 80572e7
 805706c:  cmp cl, 0x2b
 805706f:  mov DWORD PTR [ebp-0x30], 0x0
 8057076:  je 805720f
 805707c:  mov eax, DWORD PTR [ebp-0x14]
 805707f:  movzx eax, BYTE PTR [eax]
 8057082:  cmp al, 0x30
 8057084:  mov esi, eax
 8057086:  mov BYTE PTR [ebp-0x32], al
 8057089:  je 80572a3
 805708f:  mov eax, DWORD PTR [ebp+0x10]
 8057092:  test eax, eax
 8057094:  je 80571e5
 805709a:  cmp DWORD PTR [ebp+0x10], 0xa
 805709e:  je 80571e5
 80570a4:  mov eax, DWORD PTR [ebp+0x10]
 80570a7:  sub eax, 0x2
 80570aa:  mov DWORD PTR [ebp-0x28], 0x0
 80570b1:  mov DWORD PTR [ebp-0x1c], 0x0
 80570b8:  mov edx, DWORD PTR [eax*4+0x80b0aa0]
 80570bf:  mov ecx, esi
 80570c1:  movzx eax, BYTE PTR [eax+0x80b0b40]
 80570c8:  test cl, cl
 80570ca:  mov DWORD PTR [ebp-0x2c], edx
 80570cd:  mov BYTE PTR [ebp-0x31], al
 80570d0:  je 8057266
 80570d6:  mov ebx, DWORD PTR [ebp-0x14]
 80570d9:  cmp DWORD PTR [ebp-0x28], ebx
 80570dc:  je 8057266
 80570e2:  mov edi, DWORD PTR [ebp-0x1c]
 80570e5:  xor edx, edx
 80570e7:  mov DWORD PTR [ebp-0x24], 0x0
 80570ee:  sub edi, 0x1
 80570f1:  mov DWORD PTR [ebp-0x38], edi
 80570f4:  lea esi, [esi]
 80570f8:  lea ecx, [esi-0x30]
 80570fb:  cmp cl, 0x9
 80570fe:  jbe 8057154
 8057100:  mov edi, DWORD PTR [ebp-0x1c]
 8057103:  test edi, edi
 8057105:  je 8057135
 8057107:  mov edi, DWORD PTR [ebp-0x20]
 805710a:  xor ecx, ecx
 805710c:  mov eax, esi
 805710e:  cmp BYTE PTR [edi], al
 8057110:  je 8057124
 8057112:  jmp 8057135
 8057114:  lea esi, [esi]
 8057118:  mov edi, DWORD PTR [ebp-0x20]
 805711b:  movzx eax, BYTE PTR [edi+ecx]
 805711f:  cmp al, BYTE PTR [ebx+ecx]
 8057122:  jne 805712c
 8057124:  add ecx, 0x1
 8057127:  cmp DWORD PTR [ebp-0x1c], ecx
 805712a:  ja 8057118
 805712c:  cmp ecx, DWORD PTR [ebp-0x1c]
 805712f:  je 8057248
 8057135:  mov eax, esi
 8057137:  mov esi, DWORD PTR [ebp+0x18]
 805713a:  movzx ecx, al
 805713d:  mov eax, DWORD PTR [esi+0x34]
 8057140:  test BYTE PTR [eax+ecx*2+0x1], 0x4
 8057145:  je 8057258
 805714b:  mov eax, DWORD PTR [esi+0x3c]
 805714e:  mov eax, DWORD PTR [eax+ecx*4]
 8057151:  lea ecx, [eax-0x37]
 8057154:  movzx eax, cl
 8057157:  cmp DWORD PTR [ebp+0x10], eax
 805715a:  jle 8057258
 8057160:  cmp DWORD PTR [ebp-0x2c], edx
 8057163:  jb 8057238
 8057169:  cmp edx, DWORD PTR [ebp-0x2c]
 805716c:  je 8057228
 8057172:  imul edx, DWORD PTR [ebp+0x10]
 8057176:  movzx eax, cl
 8057179:  lea edx, [eax+edx]
 805717c:  add ebx, 0x1
 805717f:  movzx esi, BYTE PTR [ebx]
 8057182:  mov eax, esi
 8057184:  test al, al
 8057186:  je 8057258
 805718c:  cmp DWORD PTR [ebp-0x28], ebx
 805718f:  jne 80570f8
 8057195:  mov esi, DWORD PTR [ebp+0xc]
 8057198:  mov eax, edx
 805719a:  test esi, esi
 805719c:  je 80571a3
 805719e:  mov ecx, DWORD PTR [ebp+0xc]
 80571a1:  mov DWORD PTR [ecx], ebx
 80571a3:  mov ebx, DWORD PTR [ebp-0x24]
 80571a6:  test ebx, ebx
 80571a8:  jne 805736d
 80571ae:  mov ecx, DWORD PTR [ebp-0x30]
 80571b1:  test ecx, ecx
 80571b3:  je 80571dd
 80571b5:  mov eax, edx
 80571b7:  add esp, 0x44
 80571ba:  neg eax
 80571bc:  pop ebx
 80571bd:  pop esi
 80571be:  pop edi
 80571bf:  pop ebp
 80571c0:  ret
 80571c1:  lea esi, [esi]
 80571c8:  mov eax, gs:0x0
 80571ce:  mov edx, 0xffffffe8
 80571d4:  mov DWORD PTR [eax+edx], 0x16
 80571db:  xor eax, eax
 80571dd:  add esp, 0x44
 80571e0:  pop ebx
 80571e1:  pop esi
 80571e2:  pop edi
 80571e3:  pop ebp
 80571e4:  ret
 80571e5:  mov eax, DWORD PTR [ebp-0x18]
 80571e8:  test eax, eax
 80571ea:  jne 805738a
 80571f0:  mov DWORD PTR [ebp-0x28], 0x0
 80571f7:  mov eax, 0x8
 80571fc:  mov DWORD PTR [ebp-0x1c], 0x0
 8057203:  mov DWORD PTR [ebp+0x10], 0xa
 805720a:  jmp 80570b8
 805720f:  add edx, 0x1
 8057212:  mov DWORD PTR [ebp-0x14], edx
 8057215:  mov DWORD PTR [ebp-0x30], 0x0
 805721c:  jmp 805707c
 8057221:  lea esi, [esi]
 8057228:  cmp cl, BYTE PTR [ebp-0x31]
 805722b:  jbe 8057172
 8057231:  lea esi, [esi]
 8057238:  mov DWORD PTR [ebp-0x24], 0x1
 805723f:  jmp 805717c
 8057244:  lea esi, [esi]
 8057248:  add ebx, DWORD PTR [ebp-0x38]
 805724b:  nop
 805724c:  lea esi, [esi]
 8057250:  jmp 805717c
 8057255:  lea esi, [esi]
 8057258:  cmp DWORD PTR [ebp-0x14], ebx
 805725b:  nop
 805725c:  lea esi, [esi]
 8057260:  jne 8057195
 8057266:  mov ecx, DWORD PTR [ebp-0x14]
 8057269:  mov edx, DWORD PTR [ebp+0xc]
 805726c:  xor eax, eax
 805726e:  test edx, edx
 8057270:  je 80571dd
 8057276:  mov eax, ecx
 8057278:  sub eax, DWORD PTR [ebp+0x8]
 805727b:  sub eax, 0x1
 805727e:  jle 8057294
 8057280:  mov ebx, DWORD PTR [ebp+0x18]
 8057283:  movsx edx, BYTE PTR [ecx-0x1]
 8057287:  mov eax, DWORD PTR [ebx+0x3c]
 805728a:  cmp DWORD PTR [eax+edx*4], 0x58
 805728e:  je 8057348
 8057294:  mov eax, DWORD PTR [ebp+0x8]
 8057297:  mov edi, DWORD PTR [ebp+0xc]
 805729a:  mov DWORD PTR [edi], eax
 805729c:  xor eax, eax
 805729e:  jmp 80571dd
 80572a3:  mov eax, DWORD PTR [ebp+0x10]
 80572a6:  test eax, eax
 80572a8:  sete cl
 80572ab:  je 80572b7
 80572ad:  cmp DWORD PTR [ebp+0x10], 0x10
 80572b1:  jne 805709a
 80572b7:  mov edi, DWORD PTR [ebp-0x14]
 80572ba:  mov eax, DWORD PTR [ebp+0x18]
 80572bd:  movsx edx, BYTE PTR [edi+0x1]
 80572c1:  mov eax, DWORD PTR [eax+0x3c]
 80572c4:  cmp DWORD PTR [eax+edx*4], 0x58
 80572c8:  je 8057301
 80572ca:  test cl, cl
 80572cc:  je 805709a
 80572d2:  mov DWORD PTR [ebp+0x10], 0x8
 80572d9:  mov eax, 0x6
 80572de:  movzx esi, BYTE PTR [ebp-0x32]
 80572e2:  jmp 80570aa
 80572e7:  add edx, 0x1
 80572ea:  mov DWORD PTR [ebp-0x14], edx
 80572ed:  mov DWORD PTR [ebp-0x30], 0x1
 80572f4:  jmp 805707c
 80572f9:  mov DWORD PTR [ebp-0x14], edi
 80572fc:  jmp 805705b
 8057301:  add edi, 0x2
 8057304:  mov eax, 0xe
 8057309:  mov DWORD PTR [ebp-0x14], edi
 805730c:  mov DWORD PTR [ebp+0x10], 0x10
 8057313:  movzx edx, BYTE PTR [edi]
 8057316:  mov BYTE PTR [ebp-0x32], dl
 8057319:  mov esi, edx
 805731b:  jmp 80570aa
 8057320:  mov ecx, DWORD PTR [edx+0x2c]
 8057323:  mov DWORD PTR [ebp-0x18], ecx
 8057326:  movzx eax, BYTE PTR [ecx]
 8057329:  sub eax, 0x1
 805732c:  cmp al, 0x7d
 805732e:  ja 8056ffa
 8057334:  mov edx, DWORD PTR [edx+0x28]
 8057337:  mov DWORD PTR [ebp-0x20], edx
 805733a:  cmp BYTE PTR [edx], 0x0
 805733d:  jne 8057008
 8057343:  jmp 8056ffa
 8057348:  cmp BYTE PTR [ecx-0x2], 0x30
 805734c:  lea esi, [esi]
 8057350:  jne 8057294
 8057356:  mov esi, DWORD PTR [ebp+0xc]
 8057359:  lea eax, [ecx-0x1]
 805735c:  mov DWORD PTR [esi], eax
 805735e:  xor eax, eax
 8057360:  jmp 80571dd
 8057365:  mov ecx, DWORD PTR [ebp+0x8]
 8057368:  jmp 8057269
 805736d:  mov eax, gs:0x0
 8057373:  mov edx, 0xffffffe8
 8057379:  mov DWORD PTR [eax+edx], 0x22
 8057380:  mov eax, 0xffffffff
 8057385:  jmp 80571dd
 805738a:  mov ecx, DWORD PTR [ebp-0x20]
 805738d:  mov DWORD PTR [esp], ecx
 8057390:  call 804eea0
 8057395:  test eax, eax
 8057397:  mov DWORD PTR [ebp-0x3c], eax
 805739a:  mov DWORD PTR [ebp-0x1c], eax
 805739d:  je 80573cf
 805739f:  mov eax, DWORD PTR [ebp-0x20]
 80573a2:  xor edx, edx
 80573a4:  movzx eax, BYTE PTR [eax]
 80573a7:  cmp BYTE PTR [ebp-0x32], al
 80573aa:  mov BYTE PTR [ebp-0xd], al
 80573ad:  je 80573c7
 80573af:  jmp 80573e6
 80573b1:  lea esi, [esi]
 80573b8:  mov ecx, DWORD PTR [ebp-0x20]
 80573bb:  mov edi, DWORD PTR [ebp-0x14]
 80573be:  movzx eax, BYTE PTR [ecx+edx]
 80573c2:  cmp al, BYTE PTR [edi+edx]
 80573c5:  jne 80573e6
 80573c7:  add edx, 0x1
 80573ca:  cmp DWORD PTR [ebp-0x3c], edx
 80573cd:  ja 80573b8
 80573cf:  mov eax, DWORD PTR [ebp-0x14]
 80573d2:  mov DWORD PTR [ebp+0x10], 0xa
 80573d9:  mov DWORD PTR [ebp-0x28], eax
 80573dc:  mov eax, 0x8
 80573e1:  jmp 80570b8
 80573e6:  cmp BYTE PTR [ebp-0x32], 0x0
 80573ea:  mov ecx, DWORD PTR [ebp-0x14]
 80573ed:  je 8057428
 80573ef:  lea eax, [esi-0x30]
 80573f2:  cmp al, 0x9
 80573f4:  jbe 805741c
 80573f6:  xor edx, edx
 80573f8:  mov eax, esi
 80573fa:  cmp BYTE PTR [ebp-0xd], al
 80573fd:  je 8057414
 80573ff:  jmp 805745f
 8057401:  lea esi, [esi]
 8057408:  mov edi, DWORD PTR [ebp-0x20]
 805740b:  movzx eax, BYTE PTR [edi+edx]
 805740f:  cmp al, BYTE PTR [ecx+edx]
 8057412:  jne 805745f
 8057414:  add edx, 0x1
 8057417:  cmp DWORD PTR [ebp-0x3c], edx
 805741a:  ja 8057408
 805741c:  add ecx, 0x1
 805741f:  movzx esi, BYTE PTR [ecx]
 8057422:  mov eax, esi
 8057424:  test al, al
 8057426:  jne 80573ef
 8057428:  mov edx, DWORD PTR [ebp-0x18]
 805742b:  mov DWORD PTR [esp+0xc], edx
 805742f:  mov ebx, DWORD PTR [ebp-0x20]
 8057432:  mov DWORD PTR [esp+0x4], ecx
 8057436:  mov DWORD PTR [esp+0x8], ebx
 805743a:  mov esi, DWORD PTR [ebp-0x14]
 805743d:  mov DWORD PTR [esp], esi
 8057440:  call 80574b0
 8057445:  mov edi, DWORD PTR [ebp-0x14]
 8057448:  mov DWORD PTR [ebp-0x28], eax
 805744b:  mov eax, 0x8
 8057450:  movzx esi, BYTE PTR [edi]
 8057453:  mov DWORD PTR [ebp+0x10], 0xa
 805745a:  jmp 80570b8
 805745f:  mov eax, esi
 8057461:  movzx edx, al
 8057464:  test BYTE PTR [ebx+edx*2+0x1], 0x4
 8057469:  je 8057428
 805746b:  mov esi, DWORD PTR [ebp+0x18]
 805746e:  mov eax, DWORD PTR [esi+0x3c]
 8057471:  cmp DWORD PTR [eax+edx*4], 0x40
 8057475:  jle 805741c
 8057477:  jmp 8057428
 8057479:  lea esi, [esi]

08057480 <__strtoul_l>:
 8057480:  push ebp
 8057481:  mov ebp, esp
 8057483:  sub esp, 0x14
 8057486:  mov eax, DWORD PTR [ebp+0x14]
 8057489:  mov DWORD PTR [esp+0xc], 0x0
 8057491:  mov DWORD PTR [esp+0x10], eax
 8057495:  mov eax, DWORD PTR [ebp+0x10]
 8057498:  mov DWORD PTR [esp+0x8], eax
 805749c:  mov eax, DWORD PTR [ebp+0xc]
 805749f:  mov DWORD PTR [esp+0x4], eax
 80574a3:  mov eax, DWORD PTR [ebp+0x8]
 80574a6:  mov DWORD PTR [esp], eax
 80574a9:  call 8056fe0
 80574ae:  leave
 80574af:  ret

080574b0 <__correctly_grouped_prefixmb>:
 80574b0:  push ebp
 80574b1:  mov ebp, esp
 80574b3:  push edi
 80574b4:  push esi
 80574b5:  push ebx
 80574b6:  sub esp, 0x24
 80574b9:  mov eax, DWORD PTR [ebp+0x14]
 80574bc:  test eax, eax
 80574be:  je 8057591
 80574c4:  mov eax, DWORD PTR [ebp+0x10]
 80574c7:  mov DWORD PTR [esp], eax
 80574ca:  call 804eea0
 80574cf:  mov edx, DWORD PTR [ebp+0x8]
 80574d2:  cmp DWORD PTR [ebp+0xc], edx
 80574d5:  mov DWORD PTR [ebp-0x24], eax
 80574d8:  jbe 8057586
 80574de:  sub eax, 0x1
 80574e1:  mov DWORD PTR [ebp-0x2c], eax
 80574e4:  mov eax, DWORD PTR [ebp+0xc]
 80574e7:  sub eax, 0x1
 80574ea:  cmp DWORD PTR [ebp+0x8], eax
 80574ed:  ja 8057591
 80574f3:  mov ecx, DWORD PTR [ebp+0x10]
 80574f6:  mov ebx, DWORD PTR [ebp+0xc]
 80574f9:  add ebx, DWORD PTR [ebp-0x2c]
 80574fc:  movzx ecx, BYTE PTR [ecx]
 80574ff:  mov BYTE PTR [ebp-0xd], cl
 8057502:  jmp 8057515
 8057504:  lea esi, [esi]
 8057508:  sub ebx, 0x1
 805750b:  mov eax, ebx
 805750d:  sub eax, DWORD PTR [ebp-0x24]
 8057510:  cmp DWORD PTR [ebp+0x8], eax
 8057513:  ja 8057591
 8057515:  mov eax, ebx
 8057517:  movzx ecx, BYTE PTR [ebp-0xd]
 805751b:  sub eax, DWORD PTR [ebp-0x24]
 805751e:  mov DWORD PTR [ebp-0x20], eax
 8057521:  movzx edx, BYTE PTR [ebx-0x1]
 8057525:  cmp dl, cl
 8057527:  mov BYTE PTR [ebp-0xe], dl
 805752a:  jne 8057508
 805752c:  mov eax, DWORD PTR [ebp+0x10]
 805752f:  movzx eax, BYTE PTR [eax+0x1]
 8057533:  test al, al
 8057535:  mov BYTE PTR [ebp-0x15], al
 8057538:  je 8057560
 805753a:  cmp al, BYTE PTR [ebx-0x2]
 805753d:  mov edx, 0x1
 8057542:  je 8057552
 8057544:  jmp 8057508
 8057546:  xchg ax, ax
 8057548:  mov eax, edx
 805754a:  neg eax
 805754c:  cmp cl, BYTE PTR [ebx+eax-0x1]
 8057550:  jne 8057508
 8057552:  mov eax, DWORD PTR [ebp+0x10]
 8057555:  add edx, 0x1
 8057558:  movzx ecx, BYTE PTR [eax+edx]
 805755c:  test cl, cl
 805755e:  jne 8057548
 8057560:  mov ecx, DWORD PTR [ebp+0x14]
 8057563:  mov edx, DWORD PTR [ebp+0xc]
 8057566:  sub edx, DWORD PTR [ebp-0x20]
 8057569:  movsx eax, BYTE PTR [ecx]
 805756c:  add eax, 0x1
 805756f:  cmp edx, eax
 8057571:  je 80575a4
 8057573:  jg 805759c
 8057575:  mov edx, DWORD PTR [ebp-0x20]
 8057578:  mov DWORD PTR [ebp+0xc], edx
 805757b:  mov eax, edx
 805757d:  cmp DWORD PTR [ebp+0x8], eax
 8057580:  jb 80574e7
 8057586:  mov edx, DWORD PTR [ebp+0x8]
 8057589:  cmp DWORD PTR [ebp+0xc], edx
 805758c:  jae 8057591
 805758e:  mov DWORD PTR [ebp+0xc], edx
 8057591:  mov eax, DWORD PTR [ebp+0xc]
 8057594:  add esp, 0x24
 8057597:  pop ebx
 8057598:  pop esi
 8057599:  pop edi
 805759a:  pop ebp
 805759b:  ret
 805759c:  add eax, DWORD PTR [ebp-0x20]
 805759f:  mov DWORD PTR [ebp+0xc], eax
 80575a2:  jmp 805757d
 80575a4:  mov eax, DWORD PTR [ebp-0x20]
 80575a7:  sub eax, 0x1
 80575aa:  mov DWORD PTR [ebp-0x28], eax
 80575ad:  mov DWORD PTR [ebp-0x1c], eax
 80575b0:  mov eax, DWORD PTR [ebp+0x14]
 80575b3:  jmp 8057614
 80575b5:  lea esi, [esi]
 80575b8:  cmp BYTE PTR [ebp-0x16], 0x0
 80575bc:  js 8057637
 80575be:  cmp DWORD PTR [ebp+0x8], edi
 80575c1:  mov ecx, edi
 80575c3:  mov esi, edi
 80575c5:  ja 80576e8
 80575cb:  mov edi, DWORD PTR [ebp-0x20]
 80575ce:  mov ecx, DWORD PTR [ebp-0x28]
 80575d1:  add edi, DWORD PTR [ebp-0x2c]
 80575d4:  cmp BYTE PTR [ebp-0xe], 0x0
 80575d8:  mov esi, ecx
 80575da:  jne 805769d
 80575e0:  cmp DWORD PTR [ebp+0x8], ecx
 80575e3:  ja 80576d9
 80575e9:  lea esi, [esi]
 80575f0:  sub DWORD PTR [ebp-0x28], ecx
 80575f3:  movsx eax, BYTE PTR [ebp-0x16]
 80575f7:  cmp DWORD PTR [ebp-0x28], eax
 80575fa:  jne 80576d9
 8057600:  mov edi, esi
 8057602:  lea esi, [esi]
 8057608:  mov eax, DWORD PTR [ebp-0x14]
 805760b:  lea edx, [edi-0x1]
 805760e:  mov DWORD PTR [ebp-0x20], edi
 8057611:  mov DWORD PTR [ebp-0x28], edx
 8057614:  lea ecx, [eax+0x1]
 8057617:  mov DWORD PTR [ebp-0x14], ecx
 805761a:  movzx edx, BYTE PTR [eax+0x1]
 805761e:  test dl, dl
 8057620:  mov BYTE PTR [ebp-0x16], dl
 8057623:  jne 805762e
 8057625:  movzx ecx, BYTE PTR [eax]
 8057628:  mov DWORD PTR [ebp-0x14], eax
 805762b:  mov BYTE PTR [ebp-0x16], cl
 805762e:  cmp BYTE PTR [ebp-0x16], 0x7f
 8057632:  mov edi, DWORD PTR [ebp-0x28]
 8057635:  jne 80575b8
 8057637:  mov eax, DWORD PTR [ebp-0x28]
 805763a:  cmp DWORD PTR [ebp+0x8], eax
 805763d:  ja 8057591
 8057643:  mov esi, DWORD PTR [ebp-0x20]
 8057646:  add esi, DWORD PTR [ebp-0x2c]
 8057649:  cmp BYTE PTR [ebp-0xd], 0x0
 805764d:  je 8057608
 805764f:  nop
 8057650:  movzx edx, BYTE PTR [ebp-0xd]
 8057654:  cmp BYTE PTR [esi-0x1], dl
 8057657:  jne 805767e
 8057659:  mov eax, DWORD PTR [ebp-0x24]
 805765c:  mov ebx, DWORD PTR [ebp+0x10]
 805765f:  movzx edx, BYTE PTR [ebp-0x15]
 8057663:  lea ecx, [edi+eax]
 8057666:  jmp 805766c
 8057668:  movzx edx, BYTE PTR [ebx+0x1]
 805766c:  test dl, dl
 805766e:  je 8057608
 8057670:  movzx eax, BYTE PTR [ecx-0x2]
 8057674:  add ebx, 0x1
 8057677:  sub ecx, 0x1
 805767a:  cmp al, dl
 805767c:  je 8057668
 805767e:  sub edi, 0x1
 8057681:  sub esi, 0x1
 8057684:  cmp DWORD PTR [ebp+0x8], edi
 8057687:  jbe 8057650
 8057689:  jmp 8057591
 805768e:  xchg ax, ax
 8057690:  lea ecx, [esi-0x1]
 8057693:  sub edi, 0x1
 8057696:  cmp DWORD PTR [ebp+0x8], ecx
 8057699:  ja 80576e6
 805769b:  mov esi, ecx
 805769d:  movzx edx, BYTE PTR [ebp-0xe]
 80576a1:  cmp dl, BYTE PTR [edi-0x1]
 80576a4:  jne 8057690
 80576a6:  mov eax, DWORD PTR [ebp-0x24]
 80576a9:  mov ebx, DWORD PTR [ebp+0x10]
 80576ac:  movzx edx, BYTE PTR [ebp-0x15]
 80576b0:  lea ecx, [esi+eax]
 80576b3:  jmp 80576ca
 80576b5:  lea esi, [esi]
 80576b8:  movzx eax, BYTE PTR [ecx-0x2]
 80576bc:  add ebx, 0x1
 80576bf:  sub ecx, 0x1
 80576c2:  cmp al, dl
 80576c4:  jne 8057690
 80576c6:  movzx edx, BYTE PTR [ebx+0x1]
 80576ca:  test dl, dl
 80576cc:  jne 80576b8
 80576ce:  mov ecx, esi
 80576d0:  cmp DWORD PTR [ebp+0x8], ecx
 80576d3:  jbe 80575f0
 80576d9:  mov ecx, DWORD PTR [ebp-0x1c]
 80576dc:  mov DWORD PTR [ebp+0xc], ecx
 80576df:  mov eax, ecx
 80576e1:  jmp 805757d
 80576e6:  mov esi, ecx
 80576e8:  mov edx, DWORD PTR [ebp-0x28]
 80576eb:  movsx eax, BYTE PTR [ebp-0x16]
 80576ef:  sub edx, ecx
 80576f1:  cmp edx, eax
 80576f3:  jg 80575e0
 80576f9:  jmp 8057591
 80576fe:  nop
 80576ff:  nop

08057700 <_itoa_word>:
 8057700:  push ebp
 8057701:  mov ebp, esp
 8057703:  push edi
 8057704:  push esi
 8057705:  mov esi, 0x80b0d80
 805770a:  push ebx
 805770b:  mov eax, DWORD PTR [ebp+0x14]
 805770e:  mov ecx, DWORD PTR [ebp+0x8]
 8057711:  mov ebx, DWORD PTR [ebp+0xc]
 8057714:  mov edi, DWORD PTR [ebp+0x10]
 8057717:  test eax, eax
 8057719:  jne 8057720
 805771b:  mov esi, 0x80b0d40
 8057720:  cmp edi, 0xa
 8057723:  je 8057780
 8057725:  cmp edi, 0x10
 8057728:  je 8057750
 805772a:  cmp edi, 0x8
 805772d:  je 8057768
 805772f:  nop
 8057730:  mov eax, ecx
 8057732:  xor edx, edx
 8057734:  div edi
 8057736:  sub ebx, 0x1
 8057739:  mov ecx, eax
 805773b:  movzx eax, BYTE PTR [esi+edx]
 805773f:  test ecx, ecx
 8057741:  mov BYTE PTR [ebx], al
 8057743:  jne 8057730
 8057745:  mov eax, ebx
 8057747:  pop ebx
 8057748:  pop esi
 8057749:  pop edi
 805774a:  pop ebp
 805774b:  ret
 805774c:  lea esi, [esi]
 8057750:  mov eax, ecx
 8057752:  sub ebx, 0x1
 8057755:  and eax, 0xf
 8057758:  movzx eax, BYTE PTR [esi+eax]
 805775c:  shr ecx, 0x4
 805775f:  test ecx, ecx
 8057761:  mov BYTE PTR [ebx], al
 8057763:  jne 8057750
 8057765:  jmp 8057745
 8057767:  nop
 8057768:  mov eax, ecx
 805776a:  sub ebx, 0x1
 805776d:  and eax, 0x7
 8057770:  movzx eax, BYTE PTR [esi+eax]
 8057774:  shr ecx, 0x3
 8057777:  test ecx, ecx
 8057779:  mov BYTE PTR [ebx], al
 805777b:  jne 8057768
 805777d:  jmp 8057745
 805777f:  nop
 8057780:  mov edi, 0xcccccccd
 8057785:  lea esi, [esi]
 8057788:  mov eax, ecx
 805778a:  sub ebx, 0x1
 805778d:  mul edi
 805778f:  shr edx, 0x3
 8057792:  lea eax, [edx+edx*4]
 8057795:  add eax, eax
 8057797:  sub ecx, eax
 8057799:  test edx, edx
 805779b:  movzx eax, BYTE PTR [esi+ecx]
 805779f:  mov ecx, edx
 80577a1:  mov BYTE PTR [ebx], al
 80577a3:  jne 8057788
 80577a5:  mov eax, ebx
 80577a7:  pop ebx
 80577a8:  pop esi
 80577a9:  pop edi
 80577aa:  pop ebp
 80577ab:  ret
 80577ac:  lea esi, [esi]

080577b0 <_itoa>:
 80577b0:  push ebp
 80577b1:  mov ebp, esp
 80577b3:  push edi
 80577b4:  push esi
 80577b5:  push ebx
 80577b6:  sub esp, 0x1c
 80577b9:  mov ecx, DWORD PTR [ebp+0x18]
 80577bc:  mov ebx, DWORD PTR [ebp+0x8]
 80577bf:  mov edx, DWORD PTR [ebp+0xc]
 80577c2:  mov DWORD PTR [ebp-0x24], 0x80b0d80
 80577c9:  test ecx, ecx
 80577cb:  jne 80577d4
 80577cd:  mov DWORD PTR [ebp-0x24], 0x80b0d40
 80577d4:  cmp DWORD PTR [ebp+0x14], 0x8
 80577d8:  je 80578e0
 80577de:  cmp DWORD PTR [ebp+0x14], 0x10
 80577e2:  je 80578a0
 80577e8:  mov ecx, DWORD PTR [ebp+0x14]
 80577eb:  test edx, edx
 80577ed:  lea eax, [ecx+ecx*2]
 80577f0:  lea eax, [eax*4+0x80b0b68]
 80577f7:  mov DWORD PTR [ebp-0x20], eax
 80577fa:  je 80579d8
 8057800:  mov esi, DWORD PTR [eax+0x8]
 8057803:  cmp edx, esi
 8057805:  jb 8057a99
 805780b:  mov ecx, edx
 805780d:  xor edx, edx
 805780f:  mov eax, ecx
 8057811:  div esi
 8057813:  mov ecx, eax
 8057815:  mov eax, ebx
 8057817:  div esi
 8057819:  mov DWORD PTR [ebp-0x10], edx
 805781c:  mov edx, ecx
 805781e:  div esi
 8057820:  mov DWORD PTR [ebp-0x18], eax
 8057823:  mov eax, 0x3
 8057828:  mov DWORD PTR [ebp-0x14], edx
 805782b:  mov ebx, DWORD PTR [ebp+0x10]
 805782e:  lea eax, [ebp+eax*4-0x1c]
 8057832:  lea edx, [ebp-0x18]
 8057835:  mov ecx, eax
 8057837:  mov DWORD PTR [ebp-0x28], edx
 805783a:  mov DWORD PTR [ebp-0x1c], eax
 805783d:  mov eax, DWORD PTR [ecx]
 805783f:  xor esi, esi
 8057841:  test eax, eax
 8057843:  je 8057864
 8057845:  lea esi, [esi]
 8057848:  xor edx, edx
 805784a:  mov edi, DWORD PTR [ebp-0x24]
 805784d:  sub ebx, 0x1
 8057850:  div DWORD PTR [ebp+0x14]
 8057853:  add esi, 0x1
 8057856:  mov ecx, eax
 8057858:  movzx eax, BYTE PTR [edi+edx]
 805785c:  test ecx, ecx
 805785e:  mov BYTE PTR [ebx], al
 8057860:  mov eax, ecx
 8057862:  jne 8057848
 8057864:  mov eax, DWORD PTR [ebp-0x28]
 8057867:  cmp DWORD PTR [ebp-0x1c], eax
 805786a:  je 8057a70
 8057870:  mov edx, DWORD PTR [ebp-0x20]
 8057873:  movsx eax, BYTE PTR [edx+0x5]
 8057877:  cmp esi, eax
 8057879:  jge 8057894
 805787b:  nop
 805787c:  lea esi, [esi]
 8057880:  sub ebx, 0x1
 8057883:  add esi, 0x1
 8057886:  mov BYTE PTR [ebx], 0x30
 8057889:  mov ecx, DWORD PTR [ebp-0x20]
 805788c:  movsx eax, BYTE PTR [ecx+0x5]
 8057890:  cmp eax, esi
 8057892:  jg 8057880
 8057894:  sub DWORD PTR [ebp-0x1c], 0x4
 8057898:  mov ecx, DWORD PTR [ebp-0x1c]
 805789b:  jmp 805783d
 805789d:  lea esi, [esi]
 80578a0:  test edx, edx
 80578a2:  jne 80579e8
 80578a8:  mov edx, ebx
 80578aa:  mov edi, DWORD PTR [ebp+0x10]
 80578ad:  mov ebx, DWORD PTR [ebp+0x10]
 80578b0:  jmp 80578bd
 80578b2:  lea esi, [esi]
 80578b8:  mov DWORD PTR [ebp+0x10], ebx
 80578bb:  mov edi, ebx
 80578bd:  mov ecx, DWORD PTR [ebp-0x24]
 80578c0:  mov eax, edx
 80578c2:  sub ebx, 0x1
 80578c5:  and eax, 0xf
 80578c8:  shr edx, 0x4
 80578cb:  test edx, edx
 80578cd:  movzx eax, BYTE PTR [ecx+eax]
 80578d1:  mov BYTE PTR [edi-0x1], al
 80578d4:  jne 80578b8
 80578d6:  add esp, 0x1c
 80578d9:  mov eax, ebx
 80578db:  pop ebx
 80578dc:  pop esi
 80578dd:  pop edi
 80578de:  pop ebp
 80578df:  ret
 80578e0:  test edx, edx
 80578e2:  mov ecx, ebx
 80578e4:  je 80579ab
 80578ea:  mov eax, ebx
 80578ec:  mov ebx, DWORD PTR [ebp-0x24]
 80578ef:  and eax, 0x7
 80578f2:  mov edi, DWORD PTR [ebp+0x10]
 80578f5:  movzx eax, BYTE PTR [ebx+eax]
 80578f9:  mov BYTE PTR [edi-0x1], al
 80578fc:  mov eax, ecx
 80578fe:  shr eax, 0x3
 8057901:  and eax, 0x7
 8057904:  movzx eax, BYTE PTR [ebx+eax]
 8057908:  mov BYTE PTR [edi-0x2], al
 805790b:  mov eax, ecx
 805790d:  shr eax, 0x6
 8057910:  and eax, 0x7
 8057913:  movzx eax, BYTE PTR [ebx+eax]
 8057917:  mov BYTE PTR [edi-0x3], al
 805791a:  mov eax, ecx
 805791c:  shr eax, 0x9
 805791f:  and eax, 0x7
 8057922:  movzx eax, BYTE PTR [ebx+eax]
 8057926:  mov BYTE PTR [edi-0x4], al
 8057929:  mov eax, ecx
 805792b:  shr eax, 0xc
 805792e:  and eax, 0x7
 8057931:  movzx eax, BYTE PTR [ebx+eax]
 8057935:  mov BYTE PTR [edi-0x5], al
 8057938:  mov eax, ecx
 805793a:  shr eax, 0xf
 805793d:  and eax, 0x7
 8057940:  movzx eax, BYTE PTR [ebx+eax]
 8057944:  mov BYTE PTR [edi-0x6], al
 8057947:  mov eax, ecx
 8057949:  shr eax, 0x12
 805794c:  and eax, 0x7
 805794f:  movzx eax, BYTE PTR [ebx+eax]
 8057953:  mov BYTE PTR [edi-0x7], al
 8057956:  mov eax, ecx
 8057958:  shr eax, 0x15
 805795b:  and eax, 0x7
 805795e:  movzx eax, BYTE PTR [ebx+eax]
 8057962:  mov BYTE PTR [edi-0x8], al
 8057965:  mov eax, ecx
 8057967:  shr eax, 0x18
 805796a:  and eax, 0x7
 805796d:  movzx eax, BYTE PTR [ebx+eax]
 8057971:  shr ecx, 0x1b
 8057974:  mov BYTE PTR [edi-0x9], al
 8057977:  mov eax, ecx
 8057979:  and eax, 0x7
 805797c:  movzx eax, BYTE PTR [ebx+eax]
 8057980:  mov ebx, ecx
 8057982:  mov ecx, edx
 8057984:  shr ebx, 0x3
 8057987:  mov BYTE PTR [edi-0xa], al
 805798a:  mov eax, edx
 805798c:  sub edi, 0xa
 805798f:  and eax, 0x1
 8057992:  shl eax, 0x2
 8057995:  or ebx, eax
 8057997:  shr ecx, 1
 8057999:  mov DWORD PTR [ebp+0x10], edi
 805799c:  jne 8057a84
 80579a2:  mov ecx, ebx
 80579a4:  jmp 80579ab
 80579a6:  xchg ax, ax
 80579a8:  mov DWORD PTR [ebp+0x10], ebx
 80579ab:  mov edi, DWORD PTR [ebp-0x24]
 80579ae:  mov eax, ecx
 80579b0:  mov ebx, DWORD PTR [ebp+0x10]
 80579b3:  and eax, 0x7
 80579b6:  mov edx, DWORD PTR [ebp+0x10]
 80579b9:  shr ecx, 0x3
 80579bc:  movzx eax, BYTE PTR [edi+eax]
 80579c0:  sub ebx, 0x1
 80579c3:  test ecx, ecx
 80579c5:  mov BYTE PTR [edx-0x1], al
 80579c8:  jne 80579a8
 80579ca:  add esp, 0x1c
 80579cd:  mov eax, ebx
 80579cf:  pop ebx
 80579d0:  pop esi
 80579d1:  pop edi
 80579d2:  pop ebp
 80579d3:  ret
 80579d4:  lea esi, [esi]
 80579d8:  mov DWORD PTR [ebp-0x18], ebx
 80579db:  mov eax, 0x1
 80579e0:  jmp 805782b
 80579e5:  lea esi, [esi]
 80579e8:  mov ecx, DWORD PTR [ebp-0x24]
 80579eb:  mov eax, ebx
 80579ed:  and eax, 0xf
 80579f0:  mov edi, DWORD PTR [ebp+0x10]
 80579f3:  movzx eax, BYTE PTR [ecx+eax]
 80579f7:  mov BYTE PTR [edi-0x1], al
 80579fa:  mov eax, ebx
 80579fc:  shr eax, 0x4
 80579ff:  and eax, 0xf
 8057a02:  movzx eax, BYTE PTR [ecx+eax]
 8057a06:  mov BYTE PTR [edi-0x2], al
 8057a09:  mov eax, ebx
 8057a0b:  shr eax, 0x8
 8057a0e:  and eax, 0xf
 8057a11:  movzx eax, BYTE PTR [ecx+eax]
 8057a15:  mov BYTE PTR [edi-0x3], al
 8057a18:  mov eax, ebx
 8057a1a:  shr eax, 0xc
 8057a1d:  and eax, 0xf
 8057a20:  movzx eax, BYTE PTR [ecx+eax]
 8057a24:  mov BYTE PTR [edi-0x4], al
 8057a27:  mov eax, ebx
 8057a29:  shr eax, 0x10
 8057a2c:  and eax, 0xf
 8057a2f:  movzx eax, BYTE PTR [ecx+eax]
 8057a33:  mov BYTE PTR [edi-0x5], al
 8057a36:  mov eax, ebx
 8057a38:  shr eax, 0x14
 8057a3b:  and eax, 0xf
 8057a3e:  movzx eax, BYTE PTR [ecx+eax]
 8057a42:  shr ebx, 0x18
 8057a45:  mov BYTE PTR [edi-0x6], al
 8057a48:  mov eax, ebx
 8057a4a:  and eax, 0xf
 8057a4d:  movzx eax, BYTE PTR [ecx+eax]
 8057a51:  shr ebx, 0x4
 8057a54:  mov BYTE PTR [edi-0x7], al
 8057a57:  movzx eax, BYTE PTR [ecx+ebx]
 8057a5b:  mov BYTE PTR [edi-0x8], al
 8057a5e:  sub edi, 0x8
 8057a61:  mov DWORD PTR [ebp+0x10], edi
 8057a64:  mov ebx, edi
 8057a66:  mov edi, DWORD PTR [ebp+0x10]
 8057a69:  jmp 80578bd
 8057a6e:  xchg ax, ax
 8057a70:  cmp ebx, DWORD PTR [ebp+0x10]
 8057a73:  jne 80578d6
 8057a79:  sub ebx, 0x1
 8057a7c:  mov BYTE PTR [ebx], 0x30
 8057a7f:  jmp 80578d6
 8057a84:  mov edx, DWORD PTR [ebp-0x24]
 8057a87:  sub DWORD PTR [ebp+0x10], 0x1
 8057a8b:  movzx eax, BYTE PTR [edx+ebx]
 8057a8f:  mov ebx, DWORD PTR [ebp+0x10]
 8057a92:  mov BYTE PTR [ebx], al
 8057a94:  jmp 80579ab
 8057a99:  mov eax, ebx
 8057a9b:  div esi
 8057a9d:  mov DWORD PTR [ebp-0x18], eax
 8057aa0:  mov eax, 0x2
 8057aa5:  mov DWORD PTR [ebp-0x14], edx
 8057aa8:  jmp 805782b
 8057aad:  lea esi, [esi]

08057ab0 <_fitoa_word>:
 8057ab0:  push ebp
 8057ab1:  mov ebp, esp
 8057ab3:  push edi
 8057ab4:  push esi
 8057ab5:  push ebx
 8057ab6:  lea eax, [ebp-0x1c]
 8057ab9:  sub esp, 0x34
 8057abc:  mov edi, DWORD PTR [ebp+0xc]
 8057abf:  mov DWORD PTR [ebp-0x2c], eax
 8057ac2:  lea eax, [ebp-0xc]
 8057ac5:  mov DWORD PTR [ebp-0x30], eax
 8057ac8:  mov eax, DWORD PTR [ebp+0x14]
 8057acb:  mov DWORD PTR [esp+0xc], eax
 8057acf:  mov eax, DWORD PTR [ebp+0x10]
 8057ad2:  mov DWORD PTR [esp+0x8], eax
 8057ad6:  lea eax, [ebp-0xc]
 8057ad9:  mov DWORD PTR [esp+0x4], eax
 8057add:  mov eax, DWORD PTR [ebp+0x8]
 8057ae0:  mov DWORD PTR [esp], eax
 8057ae3:  call 8057700
 8057ae8:  mov ecx, eax
 8057aea:  lea eax, [ebp-0xc]
 8057aed:  cmp eax, ecx
 8057aef:  jbe 8057b21
 8057af1:  mov eax, DWORD PTR [ebp-0x2c]
 8057af4:  mov DWORD PTR [ebp-0x24], ecx
 8057af7:  sub eax, ecx
 8057af9:  add eax, 0x10
 8057afc:  cmp eax, 0x9
 8057aff:  mov DWORD PTR [ebp-0x28], eax
 8057b02:  ja 8057b30
 8057b04:  mov edx, edi
 8057b06:  xchg ax, ax
 8057b08:  movzx eax, BYTE PTR [ecx]
 8057b0b:  add ecx, 0x1
 8057b0e:  mov BYTE PTR [edx], al
 8057b10:  add edx, 0x1
 8057b13:  cmp DWORD PTR [ebp-0x30], ecx
 8057b16:  ja 8057b08
 8057b18:  mov eax, edi
 8057b1a:  sub eax, DWORD PTR [ebp-0x24]
 8057b1d:  lea edi, [eax+ebp-0xc]
 8057b21:  add esp, 0x34
 8057b24:  mov eax, edi
 8057b26:  pop ebx
 8057b27:  pop esi
 8057b28:  pop edi
 8057b29:  pop ebp
 8057b2a:  ret
 8057b2b:  nop
 8057b2c:  lea esi, [esi]
 8057b30:  mov eax, ecx
 8057b32:  or eax, edi
 8057b34:  test al, 0x3
 8057b36:  jne 8057b04
 8057b38:  lea eax, [ecx+0x4]
 8057b3b:  cmp edi, eax
 8057b3d:  jbe 8057ba0
 8057b3f:  mov esi, DWORD PTR [ebp-0x28]
 8057b42:  xor edx, edx
 8057b44:  mov ebx, edi
 8057b46:  shr esi, 0x2
 8057b49:  lea eax, [esi*4]
 8057b50:  test eax, eax
 8057b52:  mov DWORD PTR [ebp-0x20], eax
 8057b55:  je 8057b78
 8057b57:  nop
 8057b58:  mov eax, DWORD PTR [ecx+edx*4]
 8057b5b:  mov DWORD PTR [edi+edx*4], eax
 8057b5e:  add edx, 0x1
 8057b61:  cmp edx, esi
 8057b63:  jb 8057b58
 8057b65:  mov eax, DWORD PTR [ebp-0x20]
 8057b68:  add ecx, DWORD PTR [ebp-0x20]
 8057b6b:  cmp DWORD PTR [ebp-0x28], eax
 8057b6e:  lea ebx, [edi+eax]
 8057b71:  je 8057b18
 8057b73:  nop
 8057b74:  lea esi, [esi]
 8057b78:  movzx eax, BYTE PTR [ecx]
 8057b7b:  add ecx, 0x1
 8057b7e:  mov BYTE PTR [ebx], al
 8057b80:  add ebx, 0x1
 8057b83:  cmp DWORD PTR [ebp-0x30], ecx
 8057b86:  jbe 8057b18
 8057b88:  movzx eax, BYTE PTR [ecx]
 8057b8b:  add ecx, 0x1
 8057b8e:  mov BYTE PTR [ebx], al
 8057b90:  add ebx, 0x1
 8057b93:  cmp DWORD PTR [ebp-0x30], ecx
 8057b96:  ja 8057b78
 8057b98:  jmp 8057b18
 8057b9d:  lea esi, [esi]
 8057ba0:  lea eax, [edi+0x4]
 8057ba3:  cmp ecx, eax
 8057ba5:  jbe 8057b04
 8057bab:  nop
 8057bac:  lea esi, [esi]
 8057bb0:  jmp 8057b3f
 8057bb2:  lea esi, [esi]
 8057bb9:  lea edi, [edi]

08057bc0 <_fitoa>:
 8057bc0:  push ebp
 8057bc1:  mov ebp, esp
 8057bc3:  push edi
 8057bc4:  push esi
 8057bc5:  push ebx
 8057bc6:  lea eax, [ebp-0x2c]
 8057bc9:  sub esp, 0x48
 8057bcc:  mov edx, DWORD PTR [ebp+0xc]
 8057bcf:  mov DWORD PTR [ebp-0x3c], eax
 8057bd2:  lea eax, [ebp-0xc]
 8057bd5:  mov edi, DWORD PTR [ebp+0x10]
 8057bd8:  mov DWORD PTR [ebp-0x40], eax
 8057bdb:  mov eax, DWORD PTR [ebp+0x18]
 8057bde:  mov DWORD PTR [esp+0x4], edx
 8057be2:  mov DWORD PTR [esp+0x10], eax
 8057be6:  mov eax, DWORD PTR [ebp+0x14]
 8057be9:  mov DWORD PTR [esp+0xc], eax
 8057bed:  lea eax, [ebp-0xc]
 8057bf0:  mov DWORD PTR [esp+0x8], eax
 8057bf4:  mov eax, DWORD PTR [ebp+0x8]
 8057bf7:  mov DWORD PTR [esp], eax
 8057bfa:  call 80577b0
 8057bff:  mov ecx, eax
 8057c01:  lea eax, [ebp-0xc]
 8057c04:  cmp eax, ecx
 8057c06:  jbe 8057c39
 8057c08:  mov eax, DWORD PTR [ebp-0x3c]
 8057c0b:  mov DWORD PTR [ebp-0x34], ecx
 8057c0e:  sub eax, ecx
 8057c10:  add eax, 0x20
 8057c13:  cmp eax, 0x9
 8057c16:  mov DWORD PTR [ebp-0x38], eax
 8057c19:  ja 8057c48
 8057c1b:  mov edx, edi
 8057c1d:  lea esi, [esi]
 8057c20:  movzx eax, BYTE PTR [ecx]
 8057c23:  add ecx, 0x1
 8057c26:  mov BYTE PTR [edx], al
 8057c28:  add edx, 0x1
 8057c2b:  cmp DWORD PTR [ebp-0x40], ecx
 8057c2e:  ja 8057c20
 8057c30:  mov eax, edi
 8057c32:  sub eax, DWORD PTR [ebp-0x34]
 8057c35:  lea edi, [eax+ebp-0xc]
 8057c39:  add esp, 0x48
 8057c3c:  mov eax, edi
 8057c3e:  pop ebx
 8057c3f:  pop esi
 8057c40:  pop edi
 8057c41:  pop ebp
 8057c42:  ret
 8057c43:  nop
 8057c44:  lea esi, [esi]
 8057c48:  mov eax, ecx
 8057c4a:  or eax, edi
 8057c4c:  test al, 0x3
 8057c4e:  jne 8057c1b
 8057c50:  lea eax, [ecx+0x4]
 8057c53:  cmp edi, eax
 8057c55:  jbe 8057cb8
 8057c57:  mov esi, DWORD PTR [ebp-0x38]
 8057c5a:  xor edx, edx
 8057c5c:  mov ebx, edi
 8057c5e:  shr esi, 0x2
 8057c61:  lea eax, [esi*4]
 8057c68:  test eax, eax
 8057c6a:  mov DWORD PTR [ebp-0x30], eax
 8057c6d:  je 8057c90
 8057c6f:  nop
 8057c70:  mov eax, DWORD PTR [ecx+edx*4]
 8057c73:  mov DWORD PTR [edi+edx*4], eax
 8057c76:  add edx, 0x1
 8057c79:  cmp edx, esi
 8057c7b:  jb 8057c70
 8057c7d:  mov eax, DWORD PTR [ebp-0x30]
 8057c80:  add ecx, DWORD PTR [ebp-0x30]
 8057c83:  cmp DWORD PTR [ebp-0x38], eax
 8057c86:  lea ebx, [edi+eax]
 8057c89:  je 8057c30
 8057c8b:  nop
 8057c8c:  lea esi, [esi]
 8057c90:  movzx eax, BYTE PTR [ecx]
 8057c93:  add ecx, 0x1
 8057c96:  mov BYTE PTR [ebx], al
 8057c98:  add ebx, 0x1
 8057c9b:  cmp DWORD PTR [ebp-0x40], ecx
 8057c9e:  jbe 8057c30
 8057ca0:  movzx eax, BYTE PTR [ecx]
 8057ca3:  add ecx, 0x1
 8057ca6:  mov BYTE PTR [ebx], al
 8057ca8:  add ebx, 0x1
 8057cab:  cmp DWORD PTR [ebp-0x40], ecx
 8057cae:  ja 8057c90
 8057cb0:  jmp 8057c30
 8057cb5:  lea esi, [esi]
 8057cb8:  lea eax, [edi+0x4]
 8057cbb:  cmp ecx, eax
 8057cbd:  jbe 8057c1b
 8057cc3:  nop
 8057cc4:  lea esi, [esi]
 8057cc8:  jmp 8057c57
 8057cca:  nop
 8057ccb:  nop
 8057ccc:  nop
 8057ccd:  nop
 8057cce:  nop
 8057ccf:  nop

08057cd0 <printf_unknown>:
 8057cd0:  push ebp
 8057cd1:  mov ebp, esp
 8057cd3:  push edi
 8057cd4:  push esi
 8057cd5:  push ebx
 8057cd6:  sub esp, 0x20
 8057cd9:  mov edi, DWORD PTR [ebp+0x8]
 8057cdc:  mov eax, DWORD PTR [edi+0x14]
 8057cdf:  cmp eax, DWORD PTR [edi+0x18]
 8057ce2:  jae 8057ff0
 8057ce8:  mov BYTE PTR [eax], 0x25
 8057ceb:  add eax, 0x1
 8057cee:  mov DWORD PTR [edi+0x14], eax
 8057cf1:  mov edx, DWORD PTR [ebp+0xc]
 8057cf4:  mov esi, 0x2
 8057cf9:  movzx eax, BYTE PTR [edx+0xc]
 8057cfd:  mov edx, 0x1
 8057d02:  test al, 0x8
 8057d04:  jne 8057e38
 8057d0a:  test al, al
 8057d0c:  js 8057e66
 8057d12:  mov esi, edx
 8057d14:  test al, 0x40
 8057d16:  jne 8057e8a
 8057d1c:  test al, 0x10
 8057d1e:  xchg ax, ax
 8057d20:  jne 8057f30
 8057d26:  test al, 0x20
 8057d28:  jne 8057eb1
 8057d2e:  mov eax, DWORD PTR [ebp+0xc]
 8057d31:  cmp DWORD PTR [eax+0x10], 0x30
 8057d35:  lea esi, [esi]
 8057d38:  je 8057ed6
 8057d3e:  mov edx, DWORD PTR [ebp+0xc]
 8057d41:  test BYTE PTR [edx+0xd], 0x8
 8057d45:  jne 8057df8
 8057d4b:  mov eax, DWORD PTR [edx+0x4]
 8057d4e:  lea ecx, [ebp-0xc]
 8057d51:  mov DWORD PTR [ebp-0x1c], ecx
 8057d54:  test eax, eax
 8057d56:  jne 8057f58
 8057d5c:  mov edx, DWORD PTR [ebp+0xc]
 8057d5f:  cmp DWORD PTR [edx], 0xff
 8057d62:  je 8057ef8
 8057d68:  mov eax, DWORD PTR [edi+0x14]
 8057d6b:  cmp eax, DWORD PTR [edi+0x18]
 8057d6e:  jae 805808d
 8057d74:  mov BYTE PTR [eax], 0x2e
 8057d77:  add eax, 0x1
 8057d7a:  mov DWORD PTR [edi+0x14], eax
 8057d7d:  cmp esi, 0x7fffffff
 8057d83:  je 8057de8
 8057d85:  mov edx, DWORD PTR [ebp+0xc]
 8057d88:  lea ecx, [ebp-0xc]
 8057d8b:  add esi, 0x1
 8057d8e:  mov DWORD PTR [esp+0xc], 0x0
 8057d96:  mov DWORD PTR [esp+0x8], 0xa
 8057d9e:  mov DWORD PTR [esp+0x4], ecx
 8057da2:  mov eax, DWORD PTR [edx]
 8057da4:  mov DWORD PTR [esp], eax
 8057da7:  call 8057700
 8057dac:  cmp DWORD PTR [ebp-0x1c], eax
 8057daf:  mov ebx, eax
 8057db1:  ja 8057dc7
 8057db3:  jmp 8057ef8
 8057db8:  add ebx, 0x1
 8057dbb:  add esi, 0x1
 8057dbe:  cmp DWORD PTR [ebp-0x1c], ebx
 8057dc1:  jbe 8057ef8
 8057dc7:  mov eax, DWORD PTR [edi+0x14]
 8057dca:  cmp eax, DWORD PTR [edi+0x18]
 8057dcd:  movzx edx, BYTE PTR [ebx]
 8057dd0:  jae 8057fd0
 8057dd6:  mov BYTE PTR [eax], dl
 8057dd8:  add eax, 0x1
 8057ddb:  mov DWORD PTR [edi+0x14], eax
 8057dde:  cmp esi, 0x7fffffff
 8057de4:  jne 8057db8
 8057de6:  xchg ax, ax
 8057de8:  mov esi, 0xffffffff
 8057ded:  add esp, 0x20
 8057df0:  mov eax, esi
 8057df2:  pop ebx
 8057df3:  pop esi
 8057df4:  pop edi
 8057df5:  pop ebp
 8057df6:  ret
 8057df7:  nop
 8057df8:  mov eax, DWORD PTR [edi+0x14]
 8057dfb:  cmp eax, DWORD PTR [edi+0x18]
 8057dfe:  jae 80580ab
 8057e04:  mov BYTE PTR [eax], 0x49
 8057e07:  add eax, 0x1
 8057e0a:  mov DWORD PTR [edi+0x14], eax
 8057e0d:  cmp esi, 0x7fffffff
 8057e13:  je 8057de8
 8057e15:  mov edx, DWORD PTR [ebp+0xc]
 8057e18:  add esi, 0x1
 8057e1b:  lea ecx, [ebp-0xc]
 8057e1e:  mov DWORD PTR [ebp-0x1c], ecx
 8057e21:  mov eax, DWORD PTR [edx+0x4]
 8057e24:  test eax, eax
 8057e26:  je 8057d5c
 8057e2c:  jmp 8057f58
 8057e31:  lea esi, [esi]
 8057e38:  mov eax, DWORD PTR [edi+0x14]
 8057e3b:  cmp eax, DWORD PTR [edi+0x18]
 8057e3e:  jae 805800e
 8057e44:  mov BYTE PTR [eax], 0x23
 8057e47:  add eax, 0x1
 8057e4a:  mov DWORD PTR [edi+0x14], eax
 8057e4d:  mov ecx, DWORD PTR [ebp+0xc]
 8057e50:  mov edx, 0x2
 8057e55:  mov esi, 0x3
 8057e5a:  movzx eax, BYTE PTR [ecx+0xc]
 8057e5e:  test al, al
 8057e60:  jns 8057d12
 8057e66:  mov eax, DWORD PTR [edi+0x14]
 8057e69:  cmp eax, DWORD PTR [edi+0x18]
 8057e6c:  jae 805802c
 8057e72:  mov BYTE PTR [eax], 0x27
 8057e75:  mov ecx, DWORD PTR [ebp+0xc]
 8057e78:  add eax, 0x1
 8057e7b:  mov DWORD PTR [edi+0x14], eax
 8057e7e:  movzx eax, BYTE PTR [ecx+0xc]
 8057e82:  test al, 0x40
 8057e84:  je 8057d1c
 8057e8a:  mov eax, DWORD PTR [edi+0x14]
 8057e8d:  cmp eax, DWORD PTR [edi+0x18]
 8057e90:  jae 8058051
 8057e96:  mov BYTE PTR [eax], 0x2b
 8057e99:  add eax, 0x1
 8057e9c:  mov DWORD PTR [edi+0x14], eax
 8057e9f:  mov edx, DWORD PTR [ebp+0xc]
 8057ea2:  add esi, 0x1
 8057ea5:  movzx eax, BYTE PTR [edx+0xc]
 8057ea9:  test al, 0x20
 8057eab:  je 8057d2e
 8057eb1:  mov eax, DWORD PTR [edi+0x14]
 8057eb4:  cmp eax, DWORD PTR [edi+0x18]
 8057eb7:  jae 805806f
 8057ebd:  mov BYTE PTR [eax], 0x2d
 8057ec0:  add eax, 0x1
 8057ec3:  mov DWORD PTR [edi+0x14], eax
 8057ec6:  mov eax, DWORD PTR [ebp+0xc]
 8057ec9:  add esi, 0x1
 8057ecc:  cmp DWORD PTR [eax+0x10], 0x30
 8057ed0:  jne 8057d3e
 8057ed6:  mov eax, DWORD PTR [edi+0x14]
 8057ed9:  cmp eax, DWORD PTR [edi+0x18]
 8057edc:  jae 80580e7
 8057ee2:  mov BYTE PTR [eax], 0x30
 8057ee5:  add eax, 0x1
 8057ee8:  mov DWORD PTR [edi+0x14], eax
 8057eeb:  add esi, 0x1
 8057eee:  jmp 8057d3e
 8057ef3:  nop
 8057ef4:  lea esi, [esi]
 8057ef8:  mov ecx, DWORD PTR [ebp+0xc]
 8057efb:  mov eax, DWORD PTR [ecx+0x8]
 8057efe:  test eax, eax
 8057f00:  je 8057ded
 8057f06:  mov edx, DWORD PTR [edi+0x14]
 8057f09:  cmp edx, DWORD PTR [edi+0x18]
 8057f0c:  jae 8058105
 8057f12:  mov BYTE PTR [edx], al
 8057f14:  lea eax, [edx+0x1]
 8057f17:  mov DWORD PTR [edi+0x14], eax
 8057f1a:  cmp esi, 0x7fffffff
 8057f20:  je 8057de8
 8057f26:  add esi, 0x1
 8057f29:  jmp 8057ded
 8057f2e:  xchg ax, ax
 8057f30:  mov eax, DWORD PTR [edi+0x14]
 8057f33:  cmp eax, DWORD PTR [edi+0x18]
 8057f36:  jae 80580c9
 8057f3c:  mov BYTE PTR [eax], 0x20
 8057f3f:  add eax, 0x1
 8057f42:  mov DWORD PTR [edi+0x14], eax
 8057f45:  mov ecx, DWORD PTR [ebp+0xc]
 8057f48:  add esi, 0x1
 8057f4b:  movzx eax, BYTE PTR [ecx+0xc]
 8057f4f:  jmp 8057d26
 8057f54:  lea esi, [esi]
 8057f58:  mov DWORD PTR [esp+0xc], 0x0
 8057f60:  mov DWORD PTR [esp+0x8], 0xa
 8057f68:  mov DWORD PTR [esp+0x4], ecx
 8057f6c:  mov DWORD PTR [esp], eax
 8057f6f:  call 8057700
 8057f74:  mov ebx, eax
 8057f76:  lea eax, [ebp-0xc]
 8057f79:  cmp eax, ebx
 8057f7b:  ja 8057f97
 8057f7d:  jmp 8057d5c
 8057f82:  lea esi, [esi]
 8057f88:  add ebx, 0x1
 8057f8b:  add esi, 0x1
 8057f8e:  cmp DWORD PTR [ebp-0x1c], ebx
 8057f91:  jbe 8057d5c
 8057f97:  mov eax, DWORD PTR [edi+0x14]
 8057f9a:  cmp eax, DWORD PTR [edi+0x18]
 8057f9d:  movzx edx, BYTE PTR [ebx]
 8057fa0:  jae 8057fb7
 8057fa2:  mov BYTE PTR [eax], dl
 8057fa4:  add eax, 0x1
 8057fa7:  mov DWORD PTR [edi+0x14], eax
 8057faa:  cmp esi, 0x7fffffff
 8057fb0:  jne 8057f88
 8057fb2:  jmp 8057de8
 8057fb7:  movzx eax, dl
 8057fba:  mov DWORD PTR [esp+0x4], eax
 8057fbe:  mov DWORD PTR [esp], edi
 8057fc1:  call 8068460
 8057fc6:  add eax, 0x1
 8057fc9:  jne 8057faa
 8057fcb:  jmp 8057de8
 8057fd0:  movzx eax, dl
 8057fd3:  mov DWORD PTR [esp+0x4], eax
 8057fd7:  mov DWORD PTR [esp], edi
 8057fda:  call 8068460
 8057fdf:  add eax, 0x1
 8057fe2:  jne 8057dde
 8057fe8:  jmp 8057de8
 8057fed:  lea esi, [esi]
 8057ff0:  mov DWORD PTR [esp+0x4], 0x25
 8057ff8:  mov DWORD PTR [esp], edi
 8057ffb:  call 8068460
 8058000:  add eax, 0x1
 8058003:  jne 8057cf1
 8058009:  jmp 8057de8
 805800e:  mov DWORD PTR [esp+0x4], 0x23
 8058016:  mov DWORD PTR [esp], edi
 8058019:  call 8068460
 805801e:  add eax, 0x1
 8058021:  jne 8057e4d
 8058027:  jmp 8057de8
 805802c:  mov DWORD PTR [esp+0x4], 0x27
 8058034:  mov DWORD PTR [esp], edi
 8058037:  call 8068460
 805803c:  add eax, 0x1
 805803f:  je 8057de8
 8058045:  mov edx, DWORD PTR [ebp+0xc]
 8058048:  movzx eax, BYTE PTR [edx+0xc]
 805804c:  jmp 8057d14
 8058051:  mov DWORD PTR [esp+0x4], 0x2b
 8058059:  mov DWORD PTR [esp], edi
 805805c:  call 8068460
 8058061:  add eax, 0x1
 8058064:  jne 8057e9f
 805806a:  jmp 8057de8
 805806f:  mov DWORD PTR [esp+0x4], 0x2d
 8058077:  mov DWORD PTR [esp], edi
 805807a:  call 8068460
 805807f:  add eax, 0x1
 8058082:  jne 8057ec6
 8058088:  jmp 8057de8
 805808d:  mov DWORD PTR [esp+0x4], 0x2e
 8058095:  mov DWORD PTR [esp], edi
 8058098:  call 8068460
 805809d:  add eax, 0x1
 80580a0:  jne 8057d7d
 80580a6:  jmp 8057de8
 80580ab:  mov DWORD PTR [esp+0x4], 0x49
 80580b3:  mov DWORD PTR [esp], edi
 80580b6:  call 8068460
 80580bb:  add eax, 0x1
 80580be:  jne 8057e0d
 80580c4:  jmp 8057de8
 80580c9:  mov DWORD PTR [esp+0x4], 0x20
 80580d1:  mov DWORD PTR [esp], edi
 80580d4:  call 8068460
 80580d9:  add eax, 0x1
 80580dc:  jne 8057f45
 80580e2:  jmp 8057de8
 80580e7:  mov DWORD PTR [esp+0x4], 0x30
 80580ef:  mov DWORD PTR [esp], edi
 80580f2:  call 8068460
 80580f7:  add eax, 0x1
 80580fa:  jne 8057eeb
 8058100:  jmp 8057de8
 8058105:  movzx eax, al
 8058108:  mov DWORD PTR [esp+0x4], eax
 805810c:  mov DWORD PTR [esp], edi
 805810f:  call 8068460
 8058114:  add eax, 0x1
 8058117:  jne 8057f1a
 805811d:  jmp 8057de8
 8058122:  lea esi, [esi]
 8058129:  lea edi, [edi]

08058130 <buffered_vfprintf>:
 8058130:  push ebp
 8058131:  mov ebp, esp
 8058133:  sub esp, 0x20dc
 8058139:  mov DWORD PTR [ebp-0xc], ebx
 805813c:  mov ebx, edx
 805813e:  mov DWORD PTR [ebp-0x8], esi
 8058141:  mov esi, eax
 8058143:  mov DWORD PTR [ebp-0x4], edi
 8058146:  mov eax, DWORD PTR [eax+0x68]
 8058149:  test eax, eax
 805814b:  jne 8058288
 8058151:  mov DWORD PTR [esi+0x68], 0xffffffff
 8058158:  lea eax, [ebp-0x20c4]
 805815e:  mov DWORD PTR [ebp-0xb0], eax
 8058164:  lea edx, [ebp-0xc4]
 805816a:  mov DWORD PTR [ebp-0xb4], eax
 8058170:  mov eax, DWORD PTR [esi+0x3c]
 8058173:  mov DWORD PTR [ebp-0x2c], esi
 8058176:  mov DWORD PTR [ebp-0xac], edx
 805817c:  mov DWORD PTR [ebp-0x5c], 0xffffffff
 8058183:  mov DWORD PTR [ebp-0xc4], 0xfbad8004
 805818d:  mov DWORD PTR [ebp-0x7c], 0x0
 8058194:  mov DWORD PTR [ebp-0x88], eax
 805819a:  mov DWORD PTR [ebp-0x30], 0x80b1400
 80581a1:  mov DWORD PTR [esp+0x8], ecx
 80581a5:  mov DWORD PTR [esp+0x4], ebx
 80581a9:  mov DWORD PTR [esp], edx
 80581ac:  call 8058740
 80581b1:  mov edi, eax
 80581b3:  mov eax, 0x0
 80581b8:  test eax, eax
 80581ba:  setne al
 80581bd:  movzx eax, al
 80581c0:  test eax, eax
 80581c2:  mov DWORD PTR [ebp-0x20c8], eax
 80581c8:  jne 80582a8
 80581ce:  mov DWORD PTR [ebp-0x1c], 0x8061830
 80581d5:  mov DWORD PTR [ebp-0x18], esi
 80581d8:  cmp WORD PTR [esi], 0x0
 80581dc:  js 805821e
 80581de:  mov eax, DWORD PTR [esi+0x48]
 80581e1:  mov ebx, DWORD PTR gs:0x8
 80581e8:  cmp DWORD PTR [eax+0x8], ebx
 80581eb:  je 805821a
 80581ed:  mov edx, eax
 80581ef:  mov ecx, 0x1
 80581f4:  mov DWORD PTR [ebp-0x20d0], 0x0
 80581fe:  xor eax, eax
 8058200:  cmp DWORD PTR gs:0xc, 0x0
 8058208:  je 805820b
 805820a:  cmpxchg DWORD PTR [edx], ecx
 805820e:  jne 805d14b
 8058214:  mov eax, DWORD PTR [esi+0x48]
 8058217:  mov DWORD PTR [eax+0x8], ebx
 805821a:  add DWORD PTR [eax+0x4], 0x1
 805821e:  mov edx, DWORD PTR [ebp-0xb4]
 8058224:  mov ebx, DWORD PTR [ebp-0xb0]
 805822a:  sub ebx, edx
 805822c:  test ebx, ebx
 805822e:  jle 8058251
 8058230:  mov eax, DWORD PTR [esi+0x94]
 8058236:  mov DWORD PTR [esp+0x8], ebx
 805823a:  mov DWORD PTR [esp+0x4], edx
 805823e:  mov DWORD PTR [esp], esi
 8058241:  call DWORD PTR [eax+0x1c]
 8058244:  cmp eax, ebx
 8058246:  sete al
 8058249:  movzx eax, al
 805824c:  sub eax, 0x1
 805824f:  or edi, eax
 8058251:  cmp WORD PTR [esi], 0x0
 8058255:  js 8058267
 8058257:  mov edx, DWORD PTR [esi+0x48]
 805825a:  mov eax, DWORD PTR [edx+0x4]
 805825d:  sub eax, 0x1
 8058260:  test eax, eax
 8058262:  mov DWORD PTR [edx+0x4], eax
 8058265:  je 80582c8
 8058267:  mov eax, DWORD PTR [ebp-0x20c8]
 805826d:  test eax, eax
 805826f:  je 8058296
 8058271:  lea eax, [ebp-0x1c]
 8058274:  mov DWORD PTR [esp+0x4], 0x0
 805827c:  mov DWORD PTR [esp], eax
 805827f:  call 0
 8058284:  jmp 8058296
 8058286:  xchg ax, ax
 8058288:  add eax, 0x1
 805828b:  mov edi, 0xffffffff
 8058290:  je 8058158
 8058296:  mov eax, edi
 8058298:  mov ebx, DWORD PTR [ebp-0xc]
 805829b:  mov esi, DWORD PTR [ebp-0x8]
 805829e:  mov edi, DWORD PTR [ebp-0x4]
 80582a1:  mov esp, ebp
 80582a3:  pop ebp
 80582a4:  ret
 80582a5:  lea esi, [esi]
 80582a8:  lea eax, [ebp-0x1c]
 80582ab:  mov DWORD PTR [esp+0x8], esi
 80582af:  mov DWORD PTR [esp+0x4], 0x8061830
 80582b7:  mov DWORD PTR [esp], eax
 80582ba:  call 0
 80582bf:  jmp 80581d8
 80582c4:  lea esi, [esi]
 80582c8:  mov DWORD PTR [edx+0x8], 0x0
 80582cf:  cmp DWORD PTR gs:0xc, 0x0
 80582d7:  je 80582da
 80582d9:  sub DWORD PTR [edx], 0x1
 80582dd:  jne 805d157
 80582e3:  jmp 8058267
 80582e5:  lea esi, [esi]
 80582e9:  lea edi, [edi]

080582f0 <_IO_helper_overflow>:
 80582f0:  push ebp
 80582f1:  mov ebp, esp
 80582f3:  sub esp, 0x1c
 80582f6:  mov DWORD PTR [ebp-0xc], ebx
 80582f9:  mov ebx, DWORD PTR [ebp+0x8]
 80582fc:  mov DWORD PTR [ebp-0x8], esi
 80582ff:  mov esi, DWORD PTR [ebp+0xc]
 8058302:  mov DWORD PTR [ebp-0x4], edi
 8058305:  mov eax, DWORD PTR [ebx+0x14]
 8058308:  mov edx, DWORD PTR [ebx+0x10]
 805830b:  mov ecx, DWORD PTR [ebx+0x98]
 8058311:  mov edi, eax
 8058313:  sub edi, edx
 8058315:  jne 8058338
 8058317:  cmp eax, DWORD PTR [ebx+0x18]
 805831a:  jae 8058385
 805831c:  mov ecx, esi
 805831e:  mov BYTE PTR [eax], cl
 8058320:  add eax, 0x1
 8058323:  movzx edx, cl
 8058326:  mov DWORD PTR [ebx+0x14], eax
 8058329:  mov ebx, DWORD PTR [ebp-0xc]
 805832c:  mov eax, edx
 805832e:  mov esi, DWORD PTR [ebp-0x8]
 8058331:  mov edi, DWORD PTR [ebp-0x4]
 8058334:  mov esp, ebp
 8058336:  pop ebp
 8058337:  ret
 8058338:  mov eax, DWORD PTR [ecx+0x94]
 805833e:  mov DWORD PTR [esp+0x4], edx
 8058342:  mov DWORD PTR [esp+0x8], edi
 8058346:  mov DWORD PTR [esp], ecx
 8058349:  call DWORD PTR [eax+0x1c]
 805834c:  mov edx, 0xffffffff
 8058351:  mov DWORD PTR [ebp-0x10], eax
 8058354:  sub eax, 0x1
 8058357:  cmp eax, 0xfd
 805835a:  ja 8058329
 805835c:  sub edi, DWORD PTR [ebp-0x10]
 805835f:  mov edx, DWORD PTR [ebx+0x10]
 8058362:  mov DWORD PTR [esp+0x8], edi
 8058366:  mov ecx, DWORD PTR [ebp-0x10]
 8058369:  mov DWORD PTR [esp], edx
 805836c:  lea eax, [edx+ecx]
 805836f:  mov DWORD PTR [esp+0x4], eax
 8058373:  call 806c260
 8058378:  mov eax, DWORD PTR [ebp-0x10]
 805837b:  neg eax
 805837d:  add eax, DWORD PTR [ebx+0x14]
 8058380:  mov DWORD PTR [ebx+0x14], eax
 8058383:  jmp 8058317
 8058385:  mov edx, esi
 8058387:  mov edi, DWORD PTR [ebp-0x4]
 805838a:  movzx eax, dl
 805838d:  mov esi, DWORD PTR [ebp-0x8]
 8058390:  mov DWORD PTR [ebp+0x8], ebx
 8058393:  mov ebx, DWORD PTR [ebp-0xc]
 8058396:  mov DWORD PTR [ebp+0xc], eax
 8058399:  mov esp, ebp
 805839b:  pop ebp
 805839c:  jmp 8068460
 80583a1:  jmp 80583b0
 80583a3:  nop
 80583a4:  nop
 80583a5:  nop
 80583a6:  nop
 80583a7:  nop
 80583a8:  nop
 80583a9:  nop
 80583aa:  nop
 80583ab:  nop
 80583ac:  nop
 80583ad:  nop
 80583ae:  nop
 80583af:  nop

080583b0 <group_number>:
 80583b0:  push ebp
 80583b1:  mov ebp, esp
 80583b3:  push edi
 80583b4:  push esi
 80583b5:  push ebx
 80583b6:  mov ebx, eax
 80583b8:  sub esp, 0x24
 80583bb:  mov eax, DWORD PTR [ebp+0x8]
 80583be:  mov DWORD PTR [ebp-0x18], edx
 80583c1:  mov DWORD PTR [ebp-0x1c], ecx
 80583c4:  mov DWORD PTR [esp], eax
 80583c7:  call 804eea0
 80583cc:  mov edx, DWORD PTR [ebp-0x1c]
 80583cf:  mov DWORD PTR [ebp-0x20], eax
 80583d2:  movzx edx, BYTE PTR [edx]
 80583d5:  mov eax, edx
 80583d7:  sub eax, 0x1
 80583da:  cmp al, 0x7d
 80583dc:  mov BYTE PTR [ebp-0x11], dl
 80583df:  jbe 80583f0
 80583e1:  lea esp, [ebp-0xc]
 80583e4:  mov eax, ebx
 80583e6:  pop ebx
 80583e7:  pop esi
 80583e8:  pop edi
 80583e9:  pop ebp
 80583ea:  ret 0x4
 80583ed:  lea esi, [esi]
 80583f0:  mov edx, DWORD PTR [ebp-0x18]
 80583f3:  sub edx, ebx
 80583f5:  lea eax, [edx+0x12]
 80583f8:  and eax, 0xfc
 80583fb:  sub esp, eax
 80583fd:  lea edi, [esp+0x1b]
 8058401:  and edi, 0xf0
 8058404:  mov DWORD PTR [esp+0x4], ebx
 8058408:  mov DWORD PTR [esp+0x8], edx
 805840c:  mov DWORD PTR [esp], edi
 805840f:  call 806c310
 8058414:  mov ebx, DWORD PTR [ebp-0x18]
 8058417:  cmp edi, eax
 8058419:  mov esi, eax
 805841b:  jae 80583e1
 805841d:  mov eax, DWORD PTR [ebp-0x1c]
 8058420:  movsx edx, BYTE PTR [ebp-0x11]
 8058424:  add eax, 0x1
 8058427:  mov DWORD PTR [ebp-0x10], eax
 805842a:  mov eax, DWORD PTR [ebp+0x8]
 805842d:  add eax, DWORD PTR [ebp-0x20]
 8058430:  mov DWORD PTR [ebp-0x24], eax
 8058433:  nop
 8058434:  lea esi, [esi]
 8058438:  sub esi, 0x1
 805843b:  sub ebx, 0x1
 805843e:  movzx eax, BYTE PTR [esi]
 8058441:  sub edx, 0x1
 8058444:  mov BYTE PTR [ebx], al
 8058446:  jne 80584a0
 8058448:  cmp edi, esi
 805844a:  jae 80583e1
 805844c:  mov ecx, DWORD PTR [ebp-0x24]
 805844f:  mov edx, DWORD PTR [ebp-0x20]
 8058452:  lea esi, [esi]
 8058458:  movzx eax, BYTE PTR [ecx-0x1]
 805845c:  sub edx, 0x1
 805845f:  sub ebx, 0x1
 8058462:  sub ecx, 0x1
 8058465:  test edx, edx
 8058467:  mov BYTE PTR [ebx], al
 8058469:  jg 8058458
 805846b:  mov edx, DWORD PTR [ebp-0x10]
 805846e:  movzx eax, BYTE PTR [edx]
 8058471:  cmp al, 0x7f
 8058473:  je 80584b0
 8058475:  cmp al, 0x0
 8058477:  jl 80584b0
 8058479:  lea esi, [esi]
 8058480:  je 80584d8
 8058482:  add DWORD PTR [ebp-0x10], 0x1
 8058486:  sub esi, 0x1
 8058489:  movsx edx, al
 805848c:  movzx eax, BYTE PTR [esi]
 805848f:  sub ebx, 0x1
 8058492:  sub edx, 0x1
 8058495:  mov BYTE PTR [ebx], al
 8058497:  je 8058448
 8058499:  lea esi, [esi]
 80584a0:  cmp edi, esi
 80584a2:  jb 8058438
 80584a4:  jmp 80583e1
 80584a9:  lea esi, [esi]
 80584b0:  sub esi, 0x1
 80584b3:  sub ebx, 0x1
 80584b6:  movzx eax, BYTE PTR [esi]
 80584b9:  cmp edi, esi
 80584bb:  mov BYTE PTR [ebx], al
 80584bd:  jae 80583e1
 80584c3:  sub esi, 0x1
 80584c6:  sub ebx, 0x1
 80584c9:  movzx eax, BYTE PTR [esi]
 80584cc:  cmp edi, esi
 80584ce:  mov BYTE PTR [ebx], al
 80584d0:  jb 80584b0
 80584d2:  jmp 80583e1
 80584d7:  nop
 80584d8:  mov eax, DWORD PTR [ebp-0x10]
 80584db:  movsx edx, BYTE PTR [eax-0x1]
 80584df:  jmp 8058438
 80584e4:  lea esi, [esi]
 80584ea:  lea edi, [edi]

080584f0 <_i18n_number_rewrite>:
 80584f0:  push ebp
 80584f1:  mov ebp, esp
 80584f3:  push edi
 80584f4:  mov edi, edx
 80584f6:  push esi
 80584f7:  push ebx
 80584f8:  sub esp, 0x4c
 80584fb:  mov DWORD PTR [esp], 0x80b0da4
 8058502:  mov DWORD PTR [ebp-0x48], ecx
 8058505:  mov DWORD PTR [ebp-0x44], eax
 8058508:  call 8074460
 805850d:  mov DWORD PTR [esp], 0x2e
 8058514:  mov DWORD PTR [ebp-0x40], eax
 8058517:  mov DWORD PTR [esp+0x4], eax
 805851b:  call 80744e0
 8058520:  mov DWORD PTR [esp], 0x2c
 8058527:  mov ebx, eax
 8058529:  mov eax, DWORD PTR [ebp-0x40]
 805852c:  mov DWORD PTR [esp+0x4], eax
 8058530:  call 80744e0
 8058535:  mov esi, eax
 8058537:  mov eax, DWORD PTR [ebp-0x40]
 805853a:  test eax, eax
 805853c:  jne 80586cb
 8058542:  mov ebx, edi
 8058544:  sub ebx, DWORD PTR [ebp-0x44]
 8058547:  cmp ebx, 0x1000
 805854d:  ja 8058635
 8058553:  lea eax, [ebx+0x12]
 8058556:  and eax, 0xfc
 8058559:  sub esp, eax
 805855b:  lea eax, [esp+0x1f]
 805855f:  and eax, 0xf0
 8058562:  mov DWORD PTR [ebp-0x3c], eax
 8058565:  mov BYTE PTR [ebp-0x35], 0x1
 8058569:  mov eax, DWORD PTR [ebp-0x44]
 805856c:  mov DWORD PTR [esp+0x8], ebx
 8058570:  mov DWORD PTR [esp+0x4], eax
 8058574:  mov eax, DWORD PTR [ebp-0x3c]
 8058577:  mov DWORD PTR [esp], eax
 805857a:  call 806c310
 805857f:  mov edi, eax
 8058581:  mov eax, DWORD PTR [ebp-0x48]
 8058584:  mov DWORD PTR [ebp-0x44], eax
 8058587:  nop
 8058588:  sub edi, 0x1
 805858b:  cmp DWORD PTR [ebp-0x3c], edi
 805858e:  ja 8058603
 8058590:  movzx edx, BYTE PTR [edi]
 8058593:  lea eax, [edx-0x30]
 8058596:  cmp al, 0x9
 8058598:  ja 8058620
 805859e:  movsx ecx, dl
 80585a1:  lea eax, [ecx-0x30]
 80585a4:  cmp eax, 0x9
 80585a7:  ja 805865e
 80585ad:  mov edx, 0xffffffd8
 80585b3:  mov eax, gs:0x0
 80585b9:  mov eax, DWORD PTR [eax+edx]
 80585bc:  mov edx, DWORD PTR [eax]
 80585be:  lea eax, [ecx-0x7]
 80585c1:  and eax, 0xffff
 80585c6:  mov ebx, DWORD PTR [edx+eax*4+0x24]
 80585ca:  mov DWORD PTR [esp], ebx
 80585cd:  call 804eea0
 80585d2:  sub DWORD PTR [ebp-0x44], eax
 80585d5:  test eax, eax
 80585d7:  mov ecx, eax
 80585d9:  je 8058588
 80585db:  mov eax, DWORD PTR [ebp-0x44]
 80585de:  xor edx, edx
 80585e0:  add ebx, ecx
 80585e2:  lea esi, [eax+ecx]
 80585e5:  lea esi, [esi]
 80585e8:  movzx eax, BYTE PTR [ebx+edx-0x1]
 80585ed:  mov BYTE PTR [esi+edx-0x1], al
 80585f1:  sub edx, 0x1
 80585f4:  lea eax, [edx+ecx]
 80585f7:  test eax, eax
 80585f9:  jne 80585e8
 80585fb:  sub edi, 0x1
 80585fe:  cmp DWORD PTR [ebp-0x3c], edi
 8058601:  jbe 8058590
 8058603:  cmp BYTE PTR [ebp-0x35], 0x0
 8058607:  jne 8058614
 8058609:  mov eax, DWORD PTR [ebp-0x3c]
 805860c:  mov DWORD PTR [esp], eax
 805860f:  call 804b4a0
 8058614:  mov eax, DWORD PTR [ebp-0x44]
 8058617:  lea esp, [ebp-0xc]
 805861a:  pop ebx
 805861b:  pop esi
 805861c:  pop edi
 805861d:  pop ebp
 805861e:  ret
 805861f:  nop
 8058620:  mov ecx, DWORD PTR [ebp-0x40]
 8058623:  test ecx, ecx
 8058625:  jne 8058682
 8058627:  sub DWORD PTR [ebp-0x44], 0x1
 805862b:  mov eax, DWORD PTR [ebp-0x44]
 805862e:  mov BYTE PTR [eax], dl
 8058630:  jmp 8058588
 8058635:  mov DWORD PTR [esp], ebx
 8058638:  call 8074540
 805863d:  test eax, eax
 805863f:  jne 8058553
 8058645:  mov DWORD PTR [esp], ebx
 8058648:  call 804d6f0
 805864d:  mov BYTE PTR [ebp-0x35], 0x0
 8058651:  test eax, eax
 8058653:  mov DWORD PTR [ebp-0x3c], eax
 8058656:  jne 8058569
 805865c:  jmp 8058614
 805865e:  mov DWORD PTR [esp+0xc], 0x80b0e2f
 8058666:  mov DWORD PTR [esp+0x8], 0x24
 805866e:  mov DWORD PTR [esp+0x4], 0x80b0db0
 8058676:  mov DWORD PTR [esp], 0x80b0dc6
 805867d:  call 8051490
 8058682:  cmp dl, 0x2e
 8058685:  je 80586c6
 8058687:  cmp dl, 0x2c
 805868a:  jne 8058627
 805868c:  lea ebx, [ebp-0x34]
 805868f:  mov DWORD PTR [esp], ebx
 8058692:  call 804eea0
 8058697:  sub DWORD PTR [ebp-0x44], eax
 805869a:  test eax, eax
 805869c:  mov ecx, eax
 805869e:  je 8058588
 80586a4:  mov eax, DWORD PTR [ebp-0x44]
 80586a7:  xor edx, edx
 80586a9:  add ebx, ecx
 80586ab:  lea esi, [eax+ecx]
 80586ae:  movzx eax, BYTE PTR [ebx+edx-0x1]
 80586b3:  mov BYTE PTR [esi+edx-0x1], al
 80586b7:  sub edx, 0x1
 80586ba:  lea eax, [edx+ecx]
 80586bd:  test eax, eax
 80586bf:  jne 80586ae
 80586c1:  jmp 8058588
 80586c6:  lea ebx, [ebp-0x24]
 80586c9:  jmp 805868f
 80586cb:  lea eax, [ebp-0x14]
 80586ce:  mov DWORD PTR [esp+0x8], eax
 80586d2:  lea eax, [ebp-0x24]
 80586d5:  mov DWORD PTR [ebp-0x14], 0x0
 80586dc:  mov DWORD PTR [ebp-0x10], 0x0
 80586e3:  mov DWORD PTR [esp+0x4], ebx
 80586e7:  mov DWORD PTR [esp], eax
 80586ea:  call 806c600
 80586ef:  add eax, 0x1
 80586f2:  je 805872c
 80586f4:  lea eax, [ebp-0x14]
 80586f7:  mov DWORD PTR [esp+0x8], eax
 80586fb:  lea eax, [ebp-0x34]
 80586fe:  mov DWORD PTR [ebp-0x14], 0x0
 8058705:  mov DWORD PTR [ebp-0x10], 0x0
 805870c:  mov DWORD PTR [esp+0x4], esi
 8058710:  mov DWORD PTR [esp], eax
 8058713:  call 806c600
 8058718:  add eax, 0x1
 805871b:  jne 8058542
 8058721:  mov WORD PTR [ebp-0x34], 0x2c
 8058727:  jmp 8058542
 805872c:  mov WORD PTR [ebp-0x24], 0x2e
 8058732:  lea esi, [esi]
 8058738:  jmp 80586f4
 805873a:  lea esi, [esi]

08058740 <_IO_vfprintf>:
 8058740:  push ebp
 8058741:  mov eax, gs:0x0
 8058747:  mov ebp, esp
 8058749:  sub esp, 0x5f0
 805874f:  mov edx, 0xffffffe8
 8058755:  mov DWORD PTR [ebp-0xc], ebx
 8058758:  mov ebx, DWORD PTR [ebp+0x8]
 805875b:  mov DWORD PTR [ebp-0x8], esi
 805875e:  mov DWORD PTR [ebp-0x4], edi
 8058761:  mov DWORD PTR [ebp-0x5d4], eax
 8058767:  mov ecx, DWORD PTR [eax+edx]
 805876a:  mov eax, DWORD PTR [ebx+0x68]
 805876d:  mov DWORD PTR [ebp-0x560], ecx
 8058773:  test eax, eax
 8058775:  jne 8058988
 805877b:  mov DWORD PTR [ebx+0x68], 0xffffffff
 8058782:  mov esi, DWORD PTR [ebp+0x8]
 8058785:  mov ebx, DWORD PTR [esi]
 8058787:  test bl, 0x8
 805878a:  jne 8058b38
 8058790:  mov esi, DWORD PTR [ebp+0xc]
 8058793:  test esi, esi
 8058795:  je 805a9e8
 805879b:  test bl, 0x2
 805879e:  jne 80589a8
 80587a4:  mov DWORD PTR [esp+0x4], 0x25
 80587ac:  mov esi, DWORD PTR [ebp+0xc]
 80587af:  mov DWORD PTR [esp], esi
 80587b2:  call 804f010
 80587b7:  test bx, bx
 80587ba:  mov DWORD PTR [ebp-0x558], 0x0
 80587c4:  mov DWORD PTR [ebp-0x574], eax
 80587ca:  js 8058837
 80587cc:  mov eax, 0x0
 80587d1:  test eax, eax
 80587d3:  setne al
 80587d6:  movzx eax, al
 80587d9:  test eax, eax
 80587db:  mov DWORD PTR [ebp-0x558], eax
 80587e1:  jne 805a9ff
 80587e7:  mov edx, DWORD PTR [ebp+0x8]
 80587ea:  mov DWORD PTR [ebp-0x74], 0x8061830
 80587f1:  mov DWORD PTR [ebp-0x70], edx
 80587f4:  mov ecx, edx
 80587f6:  cmp WORD PTR [ecx], 0x0
 80587fa:  js 8058837
 80587fc:  mov esi, DWORD PTR [ecx+0x48]
 80587ff:  mov ebx, DWORD PTR gs:0x8
 8058806:  cmp DWORD PTR [esi+0x8], ebx
 8058809:  je 8058833
 805880b:  xor edx, edx
 805880d:  mov ecx, 0x1
 8058812:  mov eax, edx
 8058814:  cmp DWORD PTR gs:0xc, 0x0
 805881c:  je 805881f
 805881e:  cmpxchg DWORD PTR [esi], ecx
 8058822:  jne 805d163
 8058828:  mov edx, DWORD PTR [ebp+0x8]
 805882b:  mov eax, DWORD PTR [edx+0x48]
 805882e:  mov DWORD PTR [eax+0x8], ebx
 8058831:  mov esi, eax
 8058833:  add DWORD PTR [esi+0x4], 0x1
 8058837:  mov edi, DWORD PTR [ebp-0x574]
 805883d:  mov ecx, DWORD PTR [ebp+0x8]
 8058840:  sub edi, DWORD PTR [ebp+0xc]
 8058843:  mov eax, DWORD PTR [ecx+0x94]
 8058849:  mov DWORD PTR [esp+0x8], edi
 805884d:  mov ebx, DWORD PTR [ebp+0xc]
 8058850:  mov DWORD PTR [esp], ecx
 8058853:  mov DWORD PTR [esp+0x4], ebx
 8058857:  call DWORD PTR [eax+0x1c]
 805885a:  cmp edi, eax
 805885c:  jne 8058ad8
 8058862:  cmp edi, 0x7fffffff
 8058868:  ja 8058ad8
 805886e:  mov esi, DWORD PTR [ebp-0x574]
 8058874:  cmp BYTE PTR [esi], 0x0
 8058877:  je 8058add
 805887d:  mov eax, DWORD PTR [ebp+0x10]
 8058880:  mov edx, esi
 8058882:  mov ecx, esi
 8058884:  mov DWORD PTR [ebp-0x580], 0x0
 805888e:  mov DWORD PTR [ebp-0x57c], 0xffffffff
 8058898:  mov DWORD PTR [ebp-0x564], 0x0
 80588a2:  mov DWORD PTR [ebp-0x474], eax
 80588a8:  mov DWORD PTR [ebp-0x55c], 0x0
 80588b2:  add edx, 0x1
 80588b5:  mov DWORD PTR [ebp-0x578], edx
 80588bb:  movzx ecx, BYTE PTR [ecx+0x1]
 80588bf:  mov edx, 0x805a7c0
 80588c4:  mov eax, ecx
 80588c6:  sub eax, 0x20
 80588c9:  cmp al, 0x5a
 80588cb:  mov BYTE PTR [ebp-0x51d], cl
 80588d1:  ja 80588e8
 80588d3:  movsx eax, BYTE PTR [ebp-0x51d]
 80588da:  mov eax, DWORD PTR [eax*4+0x80b1200]
 80588e1:  mov edx, DWORD PTR [eax*4+0x80b1200]
 80588e8:  mov ebx, DWORD PTR [ebp+0x10]
 80588eb:  lea esi, [ebp-0x88]
 80588f1:  mov DWORD PTR [ebp-0x56c], esi
 80588f7:  mov DWORD PTR [ebp-0x570], 0x0
 8058901:  mov DWORD PTR [ebp-0x54c], 0x0
 805890b:  mov DWORD PTR [ebp-0x484], ebx
 8058911:  mov DWORD PTR [ebp-0x548], 0x0
 805891b:  mov DWORD PTR [ebp-0x544], 0x0
 8058925:  mov DWORD PTR [ebp-0x540], 0x0
 805892f:  mov DWORD PTR [ebp-0x53c], 0x0
 8058939:  mov DWORD PTR [ebp-0x538], 0x0
 8058943:  mov DWORD PTR [ebp-0x534], 0x0
 805894d:  mov DWORD PTR [ebp-0x530], 0x0
 8058957:  mov DWORD PTR [ebp-0x52c], 0x0
 8058961:  mov DWORD PTR [ebp-0x48c], 0x0
 805896b:  mov DWORD PTR [ebp-0x478], 0xffffffff
 8058975:  mov DWORD PTR [ebp-0x524], 0x0
 805897f:  mov BYTE PTR [ebp-0x51e], 0x20
 8058986:  jmp edx
 8058988:  add eax, 0x1
 805898b:  mov edi, 0xffffffff
 8058990:  je 8058782
 8058996:  mov eax, edi
 8058998:  mov ebx, DWORD PTR [ebp-0xc]
 805899b:  mov esi, DWORD PTR [ebp-0x8]
 805899e:  mov edi, DWORD PTR [ebp-0x4]
 80589a1:  mov esp, ebp
 80589a3:  pop ebp
 80589a4:  ret
 80589a5:  lea esi, [esi]
 80589a8:  mov ecx, DWORD PTR [ebp+0x10]
 80589ab:  mov edx, DWORD PTR [ebp+0xc]
 80589ae:  mov eax, DWORD PTR [ebp+0x8]
 80589b1:  call 8058130
 80589b6:  mov edi, eax
 80589b8:  jmp 8058996
 80589ba:  movsx eax, BYTE PTR [ebp-0x51d]
 80589c1:  mov DWORD PTR [ebp-0x7c], 0x0
 80589c8:  movzx edx, BYTE PTR [ebp-0x534]
 80589cf:  movzx ecx, BYTE PTR [ebp-0x530]
 80589d6:  mov ebx, DWORD PTR [ebp-0x478]
 80589dc:  mov DWORD PTR [ebp-0x80], eax
 80589df:  movzx eax, BYTE PTR [ebp-0x7c]
 80589e3:  add edx, edx
 80589e5:  mov esi, DWORD PTR [ebp-0x48c]
 80589eb:  shl ecx, 0x2
 80589ee:  mov DWORD PTR [ebp-0x88], ebx
 80589f4:  and eax, 0xfc
 80589f7:  or al, BYTE PTR [ebp-0x538]
 80589fd:  mov DWORD PTR [ebp-0x84], esi
 8058a03:  or eax, edx
 8058a05:  movzx edx, BYTE PTR [ebp-0x54c]
 8058a0c:  and eax, 0xf3
 8058a0f:  or eax, ecx
 8058a11:  movzx ecx, BYTE PTR [ebp-0x548]
 8058a18:  shl edx, 0x3
 8058a1b:  or eax, edx
 8058a1d:  movzx edx, BYTE PTR [ebp-0x544]
 8058a24:  shl ecx, 0x4
 8058a27:  and eax, 0xcf
 8058a2a:  or eax, ecx
 8058a2c:  movzx ecx, BYTE PTR [ebp-0x540]
 8058a33:  shl edx, 0x5
 8058a36:  or eax, edx
 8058a38:  movzx edx, BYTE PTR [ebp-0x53c]
 8058a3f:  shl ecx, 0x6
 8058a42:  and eax, 0x3f
 8058a45:  or eax, ecx
 8058a47:  shl edx, 0x7
 8058a4a:  or eax, edx
 8058a4c:  mov BYTE PTR [ebp-0x7c], al
 8058a4f:  movzx eax, BYTE PTR [ebp-0x51e]
 8058a56:  mov DWORD PTR [ebp-0x78], eax
 8058a59:  mov eax, DWORD PTR [ebp-0x538]
 8058a5f:  test eax, eax
 8058a61:  je 805ba52
 8058a67:  mov eax, DWORD PTR [ebp-0x484]
 8058a6d:  mov ebx, DWORD PTR [ebp-0x484]
 8058a73:  add eax, 0xc
 8058a76:  mov edx, DWORD PTR [ebx+0x4]
 8058a79:  mov ecx, DWORD PTR [ebx+0x8]
 8058a7c:  mov DWORD PTR [ebp+0x10], eax
 8058a7f:  mov eax, DWORD PTR [ebx]
 8058a81:  mov DWORD PTR [ebp-0x54], edx
 8058a84:  mov DWORD PTR [ebp-0x50], ecx
 8058a87:  mov DWORD PTR [ebp-0x58], eax
 8058a8a:  lea eax, [ebp-0x58]
 8058a8d:  mov DWORD PTR [ebp-0x14], eax
 8058a90:  lea edx, [ebp-0x88]
 8058a96:  lea eax, [ebp-0x14]
 8058a99:  mov DWORD PTR [esp+0x4], edx
 8058a9d:  mov DWORD PTR [esp+0x8], eax
 8058aa1:  mov ecx, DWORD PTR [ebp+0x8]
 8058aa4:  mov DWORD PTR [esp], ecx
 8058aa7:  call 805fe40
 8058aac:  test eax, eax
 8058aae:  mov edx, eax
 8058ab0:  jns 8059e76
 8058ab6:  mov eax, DWORD PTR [ebp-0x570]
 8058abc:  mov edi, 0xffffffff
 8058ac1:  test eax, eax
 8058ac3:  je 8058add
 8058ac5:  mov ecx, DWORD PTR [ebp-0x570]
 8058acb:  mov DWORD PTR [esp], ecx
 8058ace:  call 804b4a0
 8058ad3:  nop
 8058ad4:  lea esi, [esi]
 8058ad8:  mov edi, 0xffffffff
 8058add:  mov ebx, DWORD PTR [ebp+0x8]
 8058ae0:  cmp WORD PTR [ebx], 0x0
 8058ae4:  js 8058b11
 8058ae6:  mov edx, DWORD PTR [ebx+0x48]
 8058ae9:  mov eax, DWORD PTR [edx+0x4]
 8058aec:  sub eax, 0x1
 8058aef:  test eax, eax
 8058af1:  mov DWORD PTR [edx+0x4], eax
 8058af4:  jne 8058b11
 8058af6:  mov DWORD PTR [edx+0x8], 0x0
 8058afd:  cmp DWORD PTR gs:0xc, 0x0
 8058b05:  je 8058b08
 8058b07:  sub DWORD PTR [edx], 0x1
 8058b0b:  jne 805d16f
 8058b11:  mov eax, DWORD PTR [ebp-0x558]
 8058b17:  test eax, eax
 8058b19:  je 8058996
 8058b1f:  lea eax, [ebp-0x74]
 8058b22:  mov DWORD PTR [esp+0x4], 0x0
 8058b2a:  mov DWORD PTR [esp], eax
 8058b2d:  call 0
 8058b32:  jmp 8058996
 8058b37:  nop
 8058b38:  mov eax, DWORD PTR [ebp-0x5d4]
 8058b3e:  mov edi, 0xffffffff
 8058b43:  mov DWORD PTR [eax+edx], 0x9
 8058b4a:  jmp 8058996
 8058b4f:  add DWORD PTR [ebp-0x578], 0x1
 8058b56:  mov ebx, DWORD PTR [ebp-0x578]
 8058b5c:  movzx ebx, BYTE PTR [ebx]
 8058b5f:  mov eax, ebx
 8058b61:  sub eax, 0x20
 8058b64:  cmp al, 0x5a
 8058b66:  mov BYTE PTR [ebp-0x51d], bl
 8058b6c:  jbe 805b31b
 8058b72:  mov eax, DWORD PTR [ebp-0x474]
 8058b78:  mov edx, 0x805a7c0
 8058b7d:  mov esi, DWORD PTR [ebp-0x484]
 8058b83:  mov DWORD PTR [ebp-0x538], 0x0
 8058b8d:  mov DWORD PTR [ebp-0x530], 0x0
 8058b97:  mov DWORD PTR [ebp-0x568], eax
 8058b9d:  lea esi, [esi]
 8058ba0:  mov ecx, DWORD PTR [ebp-0x568]
 8058ba6:  mov DWORD PTR [ebp-0x484], esi
 8058bac:  mov DWORD PTR [ebp-0x474], ecx
 8058bb2:  jmp edx
 8058bb4:  add DWORD PTR [ebp-0x578], 0x1
 8058bbb:  mov ebx, DWORD PTR [ebp-0x578]
 8058bc1:  movzx ebx, BYTE PTR [ebx]
 8058bc4:  mov eax, ebx
 8058bc6:  sub eax, 0x20
 8058bc9:  cmp al, 0x5a
 8058bcb:  mov BYTE PTR [ebp-0x51d], bl
 8058bd1:  jbe 805b2db
 8058bd7:  mov eax, DWORD PTR [ebp-0x474]
 8058bdd:  mov edx, 0x805a7c0
 8058be2:  mov esi, DWORD PTR [ebp-0x484]
 8058be8:  mov DWORD PTR [ebp-0x538], 0x1
 8058bf2:  mov DWORD PTR [ebp-0x530], 0x1
 8058bfc:  mov DWORD PTR [ebp-0x568], eax
 8058c02:  jmp 8058ba0
 8058c04:  mov edx, DWORD PTR [ebp-0x5d4]
 8058c0a:  lea ecx, [ebp-0x3c]
 8058c0d:  mov eax, 0xffffffd8
 8058c12:  mov DWORD PTR [ebp-0x590], esp
 8058c18:  mov esi, DWORD PTR [ebp-0x564]
 8058c1e:  mov eax, DWORD PTR [edx+eax]
 8058c21:  lea edx, [esi+esi*2]
 8058c24:  shl edx, 0x4
 8058c27:  mov eax, DWORD PTR [eax]
 8058c29:  mov eax, DWORD PTR [eax+0x58]
 8058c2c:  mov DWORD PTR [ebp-0x3c], 0x0
 8058c33:  mov DWORD PTR [ebp-0x38], 0x0
 8058c3a:  add eax, 0x12
 8058c3d:  and eax, 0xfc
 8058c40:  sub esp, eax
 8058c42:  mov eax, DWORD PTR [ebp-0x508]
 8058c48:  lea ebx, [esp+0x23]
 8058c4c:  and ebx, 0xf0
 8058c4f:  add eax, edx
 8058c51:  test eax, eax
 8058c53:  je 805c551
 8058c59:  mov esi, DWORD PTR [ebp-0x508]
 8058c5f:  mov eax, DWORD PTR [esi+edx+0x24]
 8058c63:  mov edx, DWORD PTR [ebp-0x500]
 8058c69:  mov esi, DWORD PTR [ebp-0x484]
 8058c6f:  lea eax, [eax+eax*2]
 8058c72:  mov eax, DWORD PTR [edx+eax*4]
 8058c75:  mov DWORD PTR [ebp-0x498], esi
 8058c7b:  mov DWORD PTR [esp+0x8], ecx
 8058c7f:  mov DWORD PTR [esp+0x4], eax
 8058c83:  mov DWORD PTR [esp], ebx
 8058c86:  call 806c600
 8058c8b:  cmp eax, 0xff
 8058c8e:  mov esi, eax
 8058c90:  je 805c8ba
 8058c96:  mov eax, DWORD PTR [ebp-0x4c8]
 8058c9c:  mov edx, DWORD PTR [ebp-0x4e4]
 8058ca2:  sub eax, esi
 8058ca4:  test edx, edx
 8058ca6:  mov DWORD PTR [ebp-0x594], eax
 8058cac:  jne 8058ce9
 8058cae:  test eax, eax
 8058cb0:  jle 8058ce9
 8058cb2:  mov DWORD PTR [esp+0x8], eax
 8058cb6:  mov DWORD PTR [esp+0x4], 0x20
 8058cbe:  mov edx, DWORD PTR [ebp+0x8]
 8058cc1:  mov DWORD PTR [esp], edx
 8058cc4:  call 8062880
 8058cc9:  cmp edi, 0x7ffffffe
 8058ccf:  mov edx, eax
 8058cd1:  ja 805a796
 8058cd7:  mov eax, 0x7fffffff
 8058cdc:  sub eax, edi
 8058cde:  cmp edx, eax
 8058ce0:  ja 805c8ba
 8058ce6:  lea edi, [edx+edi]
 8058ce9:  test edi, edi
 8058ceb:  js 805cec1
 8058cf1:  mov ecx, DWORD PTR [ebp+0x8]
 8058cf4:  mov eax, DWORD PTR [ecx+0x94]
 8058cfa:  mov DWORD PTR [esp+0x8], esi
 8058cfe:  mov DWORD PTR [esp+0x4], ebx
 8058d02:  mov DWORD PTR [esp], ecx
 8058d05:  call DWORD PTR [eax+0x1c]
 8058d08:  cmp esi, eax
 8058d0a:  jne 805c8ba
 8058d10:  mov ebx, 0x7fffffff
 8058d15:  mov eax, ebx
 8058d17:  sub eax, edi
 8058d19:  cmp esi, eax
 8058d1b:  ja 805c8ba
 8058d21:  mov eax, DWORD PTR [ebp-0x4e4]
 8058d27:  add edi, esi
 8058d29:  test eax, eax
 8058d2b:  je 8058d6d
 8058d2d:  mov eax, DWORD PTR [ebp-0x594]
 8058d33:  test eax, eax
 8058d35:  jle 8058d6d
 8058d37:  mov esi, DWORD PTR [ebp-0x594]
 8058d3d:  mov DWORD PTR [esp+0x4], 0x20
 8058d45:  mov DWORD PTR [esp+0x8], esi
 8058d49:  mov eax, DWORD PTR [ebp+0x8]
 8058d4c:  mov DWORD PTR [esp], eax
 8058d4f:  call 8062880
 8058d54:  cmp edi, 0x7ffffffe
 8058d5a:  ja 805a796
 8058d60:  sub ebx, edi
 8058d62:  cmp eax, ebx
 8058d64:  ja 805c8ba
 8058d6a:  lea edi, [eax+edi]
 8058d6d:  mov edx, DWORD PTR [ebp-0x498]
 8058d73:  mov esp, DWORD PTR [ebp-0x590]
 8058d79:  mov DWORD PTR [ebp-0x484], edx
 8058d7f:  nop
 8058d80:  mov edx, DWORD PTR [ebp-0x570]
 8058d86:  mov DWORD PTR [esp], edx
 8058d89:  call 804b4a0
 8058d8e:  test edi, edi
 8058d90:  js 805c7ae
 8058d96:  mov ecx, DWORD PTR [ebp-0x564]
 8058d9c:  mov esi, DWORD PTR [ebp+0x8]
 8058d9f:  lea ebx, [ecx+ecx*2]
 8058da2:  shl ebx, 0x4
 8058da5:  mov ecx, DWORD PTR [esi+0x94]
 8058dab:  add ebx, DWORD PTR [ebp-0x508]
 8058db1:  mov edx, DWORD PTR [ebx+0x14]
 8058db4:  mov eax, DWORD PTR [ebx+0x18]
 8058db7:  mov DWORD PTR [esp], esi
 8058dba:  mov DWORD PTR [esp+0x4], edx
 8058dbe:  sub eax, edx
 8058dc0:  mov DWORD PTR [esp+0x8], eax
 8058dc4:  call DWORD PTR [ecx+0x1c]
 8058dc7:  mov edx, eax
 8058dc9:  mov eax, DWORD PTR [ebx+0x18]
 8058dcc:  sub eax, DWORD PTR [ebx+0x14]
 8058dcf:  cmp edx, eax
 8058dd1:  jne 8058ad8
 8058dd7:  mov eax, 0x7fffffff
 8058ddc:  sub eax, edi
 8058dde:  cmp edx, eax
 8058de0:  ja 8058ad8
 8058de6:  mov eax, DWORD PTR [ebp-0x474]
 8058dec:  add edi, edx
 8058dee:  add DWORD PTR [ebp-0x564], 0x1
 8058df5:  mov DWORD PTR [ebp-0x568], eax
 8058dfb:  mov edx, DWORD PTR [ebp-0x564]
 8058e01:  cmp DWORD PTR [ebp-0x510], edx
 8058e07:  jbe 8058add
 8058e0d:  mov ebx, DWORD PTR [ebp-0x508]
 8058e13:  lea eax, [edx+edx*2]
 8058e16:  shl eax, 0x4
 8058e19:  add ebx, eax
 8058e1b:  movzx ecx, BYTE PTR [ebx+0xc]
 8058e1f:  mov eax, ecx
 8058e21:  shr al, 0x3
 8058e24:  mov esi, eax
 8058e26:  mov eax, ecx
 8058e28:  shr al, 0x4
 8058e2b:  and esi, 0x1
 8058e2e:  mov edx, eax
 8058e30:  mov eax, ecx
 8058e32:  shr al, 0x5
 8058e35:  and edx, 0x1
 8058e38:  mov DWORD PTR [ebp-0x4ec], esi
 8058e3e:  mov esi, eax
 8058e40:  mov eax, ecx
 8058e42:  shr al, 0x6
 8058e45:  and esi, 0x1
 8058e48:  mov DWORD PTR [ebp-0x4e8], edx
 8058e4e:  mov edx, eax
 8058e50:  mov eax, ecx
 8058e52:  shr al, 0x7
 8058e55:  and edx, 0x1
 8058e58:  movzx eax, al
 8058e5b:  mov DWORD PTR [ebp-0x4dc], eax
 8058e61:  mov eax, ecx
 8058e63:  shr al, 1
 8058e65:  mov DWORD PTR [ebp-0x4e4], esi
 8058e6b:  mov esi, ecx
 8058e6d:  mov DWORD PTR [ebp-0x4e0], edx
 8058e73:  mov edx, eax
 8058e75:  and esi, 0x1
 8058e78:  and edx, 0x1
 8058e7b:  mov eax, ecx
 8058e7d:  mov DWORD PTR [ebp-0x4d8], esi
 8058e83:  shr al, 0x2
 8058e86:  mov DWORD PTR [ebp-0x4d4], edx
 8058e8c:  movzx edx, BYTE PTR [ebx+0xd]
 8058e90:  shr dl, 1
 8058e92:  mov esi, edx
 8058e94:  and esi, 0x1
 8058e97:  mov DWORD PTR [ebp-0x4d0], esi
 8058e9d:  mov esi, eax
 8058e9f:  mov eax, DWORD PTR [ebx+0x4]
 8058ea2:  shr dl, 0x2
 8058ea5:  and esi, 0x1
 8058ea8:  mov DWORD PTR [ebp-0x4cc], esi
 8058eae:  mov esi, DWORD PTR [ebx]
 8058eb0:  mov DWORD PTR [ebp-0x4c8], eax
 8058eb6:  mov eax, edx
 8058eb8:  movzx edx, BYTE PTR [ebx+0x10]
 8058ebc:  and eax, 0x1
 8058ebf:  mov DWORD PTR [ebp-0x4c0], eax
 8058ec5:  movzx eax, BYTE PTR [ebx+0x8]
 8058ec9:  mov DWORD PTR [ebp-0x4c4], esi
 8058ecf:  mov BYTE PTR [ebp-0x4ba], dl
 8058ed5:  mov BYTE PTR [ebp-0x4b9], al
 8058edb:  mov eax, DWORD PTR [ebx+0x20]
 8058ede:  cmp eax, 0xff
 8058ee1:  je 8058f03
 8058ee3:  mov edx, DWORD PTR [ebp-0x500]
 8058ee9:  lea eax, [eax+eax*2]
 8058eec:  mov eax, DWORD PTR [edx+eax*4]
 8058eef:  test eax, eax
 8058ef1:  mov DWORD PTR [ebx+0x4], eax
 8058ef4:  js 805aa21
 8058efa:  mov ecx, DWORD PTR [ebx+0x4]
 8058efd:  mov DWORD PTR [ebp-0x4c8], ecx
 8058f03:  mov eax, DWORD PTR [ebx+0x1c]
 8058f06:  cmp eax, 0xff
 8058f09:  je 8058f26
 8058f0b:  mov esi, DWORD PTR [ebp-0x500]
 8058f11:  lea eax, [eax+eax*2]
 8058f14:  mov edx, DWORD PTR [esi+eax*4]
 8058f17:  mov eax, edx
 8058f19:  sar eax, 0x1f
 8058f1c:  or eax, edx
 8058f1e:  mov DWORD PTR [ebx], eax
 8058f20:  mov DWORD PTR [ebp-0x4c4], eax
 8058f26:  mov eax, DWORD PTR [ebp-0x4c4]
 8058f2c:  mov edx, DWORD PTR [ebp-0x4c8]
 8058f32:  cmp eax, edx
 8058f34:  jge 8058f38
 8058f36:  mov eax, edx
 8058f38:  lea ecx, [ebp-0x88]
 8058f3e:  cmp eax, 0x3c8
 8058f43:  mov DWORD PTR [ebp-0x56c], ecx
 8058f49:  mov DWORD PTR [ebp-0x570], 0x0
 8058f53:  jle 8058f86
 8058f55:  lea ebx, [eax+0x20]
 8058f58:  cmp ebx, 0x1000
 8058f5e:  ja 805acdc
 8058f64:  lea eax, [ebx+0x12]
 8058f67:  and eax, 0xfc
 8058f6a:  sub esp, eax
 8058f6c:  lea eax, [esp+0x23]
 8058f70:  and eax, 0xf0
 8058f73:  lea ebx, [eax+ebx]
 8058f76:  mov DWORD PTR [ebp-0x56c], ebx
 8058f7c:  mov DWORD PTR [ebp-0x570], 0x0
 8058f86:  movzx eax, BYTE PTR [ebp-0x4b9]
 8058f8d:  mov edx, 0x805a928
 8058f92:  mov esi, DWORD PTR [ebp-0x484]
 8058f98:  sub eax, 0x20
 8058f9b:  cmp al, 0x5a
 8058f9d:  ja 8058ba0
 8058fa3:  movsx eax, BYTE PTR [ebp-0x4b9]
 8058faa:  mov eax, DWORD PTR [eax*4+0x80b1200]
 8058fb1:  mov edx, DWORD PTR [eax*4+0x80b0f00]
 8058fb8:  jmp 8058ba0
 8058fbd:  mov ebx, DWORD PTR [ebp-0x5d4]
 8058fc3:  mov eax, 0xffffffd8
 8058fc8:  mov DWORD PTR [ebp-0x5a8], esp
 8058fce:  mov esi, DWORD PTR [ebp-0x484]
 8058fd4:  mov eax, DWORD PTR [ebx+eax]
 8058fd7:  add esi, 0x4
 8058fda:  mov eax, DWORD PTR [eax]
 8058fdc:  mov eax, DWORD PTR [eax+0x58]
 8058fdf:  mov DWORD PTR [ebp-0x24], 0x0
 8058fe6:  mov DWORD PTR [ebp-0x20], 0x0
 8058fed:  mov DWORD PTR [ebp+0x10], esi
 8058ff0:  add eax, 0x12
 8058ff3:  and eax, 0xfc
 8058ff6:  sub esp, eax
 8058ff8:  lea eax, [ebp-0x24]
 8058ffb:  mov DWORD PTR [esp+0x8], eax
 8058fff:  mov edx, DWORD PTR [ebp-0x484]
 8059005:  lea ebx, [esp+0x23]
 8059009:  and ebx, 0xf0
 805900c:  mov eax, DWORD PTR [edx]
 805900e:  mov DWORD PTR [esp], ebx
 8059011:  mov DWORD PTR [esp+0x4], eax
 8059015:  call 806c600
 805901a:  cmp eax, 0xff
 805901d:  mov esi, eax
 805901f:  je 805c7a3
 8059025:  mov ecx, DWORD PTR [ebp-0x48c]
 805902b:  mov edx, DWORD PTR [ebp-0x544]
 8059031:  sub ecx, eax
 8059033:  test edx, edx
 8059035:  mov DWORD PTR [ebp-0x5ac], ecx
 805903b:  jne 8059078
 805903d:  test ecx, ecx
 805903f:  jle 8059078
 8059041:  mov DWORD PTR [esp+0x8], ecx
 8059045:  mov DWORD PTR [esp+0x4], 0x20
 805904d:  mov eax, DWORD PTR [ebp+0x8]
 8059050:  mov DWORD PTR [esp], eax
 8059053:  call 8062880
 8059058:  cmp edi, 0x7ffffffe
 805905e:  mov edx, eax
 8059060:  ja 805cfcd
 8059066:  mov eax, 0x7fffffff
 805906b:  sub eax, edi
 805906d:  cmp edx, eax
 805906f:  ja 805c7a3
 8059075:  lea edi, [edx+edi]
 8059078:  test edi, edi
 805907a:  js 805cd3c
 8059080:  mov edx, DWORD PTR [ebp+0x8]
 8059083:  mov eax, DWORD PTR [edx+0x94]
 8059089:  mov DWORD PTR [esp+0x8], esi
 805908d:  mov DWORD PTR [esp+0x4], ebx
 8059091:  mov DWORD PTR [esp], edx
 8059094:  call DWORD PTR [eax+0x1c]
 8059097:  cmp esi, eax
 8059099:  jne 805c7a3
 805909f:  mov ebx, 0x7fffffff
 80590a4:  mov eax, ebx
 80590a6:  sub eax, edi
 80590a8:  cmp esi, eax
 80590aa:  ja 805c7a3
 80590b0:  mov eax, DWORD PTR [ebp-0x544]
 80590b6:  add edi, esi
 80590b8:  test eax, eax
 80590ba:  je 80590fc
 80590bc:  mov eax, DWORD PTR [ebp-0x5ac]
 80590c2:  test eax, eax
 80590c4:  jle 80590fc
 80590c6:  mov ecx, DWORD PTR [ebp-0x5ac]
 80590cc:  mov DWORD PTR [esp+0x4], 0x20
 80590d4:  mov DWORD PTR [esp+0x8], ecx
 80590d8:  mov esi, DWORD PTR [ebp+0x8]
 80590db:  mov DWORD PTR [esp], esi
 80590de:  call 8062880
 80590e3:  cmp edi, 0x7ffffffe
 80590e9:  ja 805cfcd
 80590ef:  sub ebx, edi
 80590f1:  cmp eax, ebx
 80590f3:  ja 805c7a3
 80590f9:  lea edi, [eax+edi]
 80590fc:  mov esp, DWORD PTR [ebp-0x5a8]
 8059102:  lea esi, [esi]
 8059108:  mov eax, DWORD PTR [ebp-0x570]
 805910e:  test eax, eax
 8059110:  jne 805c70c
 8059116:  mov esi, DWORD PTR [ebp-0x578]
 805911c:  mov DWORD PTR [esp+0x4], 0x25
 8059124:  add esi, 0x1
 8059127:  mov DWORD PTR [esp], esi
 805912a:  call 804f010
 805912f:  test edi, edi
 8059131:  mov DWORD PTR [ebp-0x4b0], eax
 8059137:  js 805c6e8
 805913d:  mov edx, DWORD PTR [ebp+0x8]
 8059140:  mov ebx, eax
 8059142:  mov DWORD PTR [ebp-0x480], eax
 8059148:  sub ebx, esi
 805914a:  mov eax, DWORD PTR [edx+0x94]
 8059150:  mov DWORD PTR [esp+0x8], ebx
 8059154:  mov DWORD PTR [esp+0x4], esi
 8059158:  mov DWORD PTR [esp], edx
 805915b:  call DWORD PTR [eax+0x1c]
 805915e:  cmp ebx, eax
 8059160:  jne 8058ad8
 8059166:  mov eax, 0x7fffffff
 805916b:  sub eax, edi
 805916d:  cmp ebx, eax
 805916f:  ja 8058ad8
 8059175:  mov ecx, DWORD PTR [ebp-0x4b0]
 805917b:  add edi, ebx
 805917d:  cmp BYTE PTR [ecx], 0x0
 8059180:  je 8058add
 8059186:  add DWORD PTR [ebp-0x564], 0x1
 805918d:  mov edx, DWORD PTR [ebp-0x480]
 8059193:  mov ecx, DWORD PTR [ebp-0x480]
 8059199:  jmp 80588b2
 805919e:  add DWORD PTR [ebp-0x578], 0x1
 80591a5:  mov ebx, DWORD PTR [ebp-0x578]
 80591ab:  movzx ebx, BYTE PTR [ebx]
 80591ae:  mov eax, ebx
 80591b0:  sub eax, 0x20
 80591b3:  cmp al, 0x5a
 80591b5:  mov BYTE PTR [ebp-0x51d], bl
 80591bb:  ja 805bb8c
 80591c1:  movsx eax, bl
 80591c4:  mov esi, DWORD PTR [ebp-0x484]
 80591ca:  mov eax, DWORD PTR [eax*4+0x80b1200]
 80591d1:  mov DWORD PTR [ebp-0x548], 0x1
 80591db:  mov edx, DWORD PTR [eax*4+0x80b1200]
 80591e2:  mov eax, DWORD PTR [ebp-0x474]
 80591e8:  mov DWORD PTR [ebp-0x568], eax
 80591ee:  jmp 8058ba0
 80591f3:  cmp DWORD PTR [ebp-0x57c], 0xff
 80591fa:  je 805c3e8
 8059200:  add DWORD PTR [ebp-0x578], 0x1
 8059207:  mov ecx, DWORD PTR [ebp-0x578]
 805920d:  movzx ecx, BYTE PTR [ecx]
 8059210:  mov eax, ecx
 8059212:  sub eax, 0x20
 8059215:  cmp al, 0x5a
 8059217:  mov BYTE PTR [ebp-0x51d], cl
 805921d:  jbe 805bc5e
 8059223:  mov ebx, DWORD PTR [ebp-0x474]
 8059229:  mov edx, 0x805a7c0
 805922e:  mov esi, DWORD PTR [ebp-0x484]
 8059234:  mov DWORD PTR [ebp-0x53c], 0x1
 805923e:  mov DWORD PTR [ebp-0x568], ebx
 8059244:  jmp 8058ba0
 8059249:  add DWORD PTR [ebp-0x578], 0x1
 8059250:  mov edx, DWORD PTR [ebp-0x578]
 8059256:  movzx edx, BYTE PTR [edx]
 8059259:  mov eax, edx
 805925b:  sub eax, 0x20
 805925e:  cmp al, 0x5a
 8059260:  mov BYTE PTR [ebp-0x51d], dl
 8059266:  jbe 805b9bb
 805926c:  mov ecx, DWORD PTR [ebp-0x474]
 8059272:  mov edx, 0x805a7c0
 8059277:  mov esi, DWORD PTR [ebp-0x484]
 805927d:  mov DWORD PTR [ebp-0x540], 0x1
 8059287:  mov DWORD PTR [ebp-0x568], ecx
 805928d:  jmp 8058ba0
 8059292:  add DWORD PTR [ebp-0x578], 0x1
 8059299:  mov eax, DWORD PTR [ebp-0x578]
 805929f:  movzx eax, BYTE PTR [eax]
 80592a2:  mov BYTE PTR [ebp-0x51d], al
 80592a8:  sub eax, 0x20
 80592ab:  cmp al, 0x5a
 80592ad:  jbe 805bb19
 80592b3:  mov edx, DWORD PTR [ebp-0x474]
 80592b9:  mov esi, DWORD PTR [ebp-0x484]
 80592bf:  mov DWORD PTR [ebp-0x544], 0x1
 80592c9:  mov BYTE PTR [ebp-0x51e], 0x20
 80592d0:  mov DWORD PTR [ebp-0x568], edx
 80592d6:  mov edx, 0x805a7c0
 80592db:  jmp 8058ba0
 80592e0:  add DWORD PTR [ebp-0x578], 0x1
 80592e7:  mov edx, DWORD PTR [ebp-0x578]
 80592ed:  movzx ebx, BYTE PTR [edx]
 80592f0:  cmp bl, 0x2a
 80592f3:  je 805be23
 80592f9:  movzx eax, bl
 80592fc:  mov esi, DWORD PTR [ebp-0x484]
 8059302:  lea edx, [eax-0x30]
 8059305:  cmp edx, 0x9
 8059308:  mov DWORD PTR [ebp-0x478], 0x0
 8059312:  ja 805937b
 8059314:  add DWORD PTR [ebp-0x578], 0x1
 805931b:  mov ecx, DWORD PTR [ebp-0x578]
 8059321:  movzx ebx, BYTE PTR [ecx]
 8059324:  movzx eax, bl
 8059327:  sub eax, 0x30
 805932a:  cmp eax, 0x9
 805932d:  ja 8059354
 805932f:  add DWORD PTR [ebp-0x578], 0x1
 8059336:  movzx eax, bl
 8059339:  mov esi, DWORD PTR [ebp-0x578]
 805933f:  lea edx, [edx+edx*4]
 8059342:  lea edx, [eax+edx*2-0x30]
 8059346:  movzx ebx, BYTE PTR [esi]
 8059349:  movzx eax, bl
 805934c:  sub eax, 0x30
 805934f:  cmp eax, 0x9
 8059352:  jbe 805932f
 8059354:  mov DWORD PTR [ebp-0x478], edx
 805935a:  mov eax, DWORD PTR [ebp-0x48c]
 8059360:  cmp DWORD PTR [ebp-0x478], eax
 8059366:  jg 805bdd3
 805936c:  mov edx, DWORD PTR [ebp-0x578]
 8059372:  mov esi, DWORD PTR [ebp-0x484]
 8059378:  movzx ebx, BYTE PTR [edx]
 805937b:  mov edx, DWORD PTR [ebp-0x474]
 8059381:  mov eax, ebx
 8059383:  sub eax, 0x20
 8059386:  cmp al, 0x5a
 8059388:  mov BYTE PTR [ebp-0x51d], bl
 805938e:  mov DWORD PTR [ebp-0x568], edx
 8059394:  mov edx, 0x805a7c0
 8059399:  ja 8058ba0
 805939f:  movsx eax, BYTE PTR [ebp-0x51d]
 80593a6:  mov ecx, DWORD PTR [ebp-0x474]
 80593ac:  mov eax, DWORD PTR [eax*4+0x80b1200]
 80593b3:  mov DWORD PTR [ebp-0x568], ecx
 80593b9:  mov edx, DWORD PTR [eax*4+0x80b1100]
 80593c0:  jmp 8058ba0
 80593c5:  add DWORD PTR [ebp-0x578], 0x1
 80593cc:  mov ebx, DWORD PTR [ebp-0x578]
 80593d2:  movzx ebx, BYTE PTR [ebx]
 80593d5:  mov eax, ebx
 80593d7:  sub eax, 0x20
 80593da:  cmp al, 0x5a
 80593dc:  mov BYTE PTR [ebp-0x51d], bl
 80593e2:  jbe 805bbf2
 80593e8:  mov eax, DWORD PTR [ebp-0x474]
 80593ee:  mov edx, 0x805a7c0
 80593f3:  mov esi, DWORD PTR [ebp-0x484]
 80593f9:  mov DWORD PTR [ebp-0x54c], 0x1
 8059403:  mov DWORD PTR [ebp-0x568], eax
 8059409:  jmp 8058ba0
 805940e:  add DWORD PTR [ebp-0x578], 0x1
 8059415:  mov esi, DWORD PTR [ebp-0x578]
 805941b:  movzx eax, BYTE PTR [esi]
 805941e:  lea edx, [eax-0x30]
 8059421:  cmp edx, 0x9
 8059424:  ja 8059462
 8059426:  movzx ecx, BYTE PTR [esi+0x1]
 805942a:  mov ebx, esi
 805942c:  add ebx, 0x1
 805942f:  movzx eax, cl
 8059432:  sub eax, 0x30
 8059435:  cmp eax, 0x9
 8059438:  ja 8059455
 805943a:  add ebx, 0x1
 805943d:  movzx eax, cl
 8059440:  movzx ecx, BYTE PTR [ebx]
 8059443:  lea edx, [edx+edx*4]
 8059446:  lea edx, [eax+edx*2-0x30]
 805944a:  movzx eax, cl
 805944d:  sub eax, 0x30
 8059450:  cmp eax, 0x9
 8059453:  jbe 805943a
 8059455:  test edx, edx
 8059457:  je 8059462
 8059459:  cmp cl, 0x24
 805945c:  je 805a7cd
 8059462:  mov eax, DWORD PTR [ebp-0x484]
 8059468:  mov esi, DWORD PTR [ebp-0x484]
 805946e:  mov eax, DWORD PTR [eax]
 8059470:  add esi, 0x4
 8059473:  test eax, eax
 8059475:  mov DWORD PTR [ebp-0x48c], eax
 805947b:  jns 8059496
 805947d:  neg eax
 805947f:  mov DWORD PTR [ebp-0x48c], eax
 8059485:  mov DWORD PTR [ebp-0x544], 0x1
 805948f:  mov BYTE PTR [ebp-0x51e], 0x20
 8059496:  cmp DWORD PTR [ebp-0x48c], 0x3c7
 80594a0:  jle 80594cf
 80594a2:  mov ebx, DWORD PTR [ebp-0x48c]
 80594a8:  add ebx, 0x20
 80594ab:  cmp ebx, 0x1000
 80594b1:  ja 805c71f
 80594b7:  lea eax, [ebx+0x12]
 80594ba:  and eax, 0xfc
 80594bd:  sub esp, eax
 80594bf:  lea eax, [esp+0x23]
 80594c3:  and eax, 0xf0
 80594c6:  lea ebx, [eax+ebx]
 80594c9:  mov DWORD PTR [ebp-0x56c], ebx
 80594cf:  mov edx, DWORD PTR [ebp-0x578]
 80594d5:  mov ecx, DWORD PTR [ebp-0x474]
 80594db:  movzx edx, BYTE PTR [edx]
 80594de:  mov DWORD PTR [ebp-0x568], ecx
 80594e4:  mov eax, edx
 80594e6:  sub eax, 0x20
 80594e9:  cmp al, 0x5a
 80594eb:  mov BYTE PTR [ebp-0x51d], dl
 80594f1:  mov edx, 0x805a7c0
 80594f6:  ja 8058ba0
 80594fc:  movsx eax, BYTE PTR [ebp-0x51d]
 8059503:  mov ebx, DWORD PTR [ebp-0x474]
 8059509:  mov eax, DWORD PTR [eax*4+0x80b1200]
 8059510:  mov DWORD PTR [ebp-0x568], ebx
 8059516:  mov edx, DWORD PTR [eax*4+0x80b1180]
 805951d:  jmp 8058ba0
 8059522:  mov ebx, DWORD PTR [ebp-0x544]
 8059528:  test ebx, ebx
 805952a:  jne 8059533
 805952c:  mov BYTE PTR [ebp-0x51e], 0x30
 8059533:  add DWORD PTR [ebp-0x578], 0x1
 805953a:  mov ebx, DWORD PTR [ebp-0x578]
 8059540:  movzx ebx, BYTE PTR [ebx]
 8059543:  mov eax, ebx
 8059545:  sub eax, 0x20
 8059548:  cmp al, 0x5a
 805954a:  mov BYTE PTR [ebp-0x51d], bl
 8059550:  jbe 805baed
 8059556:  mov eax, DWORD PTR [ebp-0x474]
 805955c:  mov edx, 0x805a7c0
 8059561:  mov esi, DWORD PTR [ebp-0x484]
 8059567:  mov DWORD PTR [ebp-0x568], eax
 805956d:  jmp 8058ba0
 8059572:  add DWORD PTR [ebp-0x578], 0x1
 8059579:  mov ebx, DWORD PTR [ebp-0x578]
 805957f:  movzx ebx, BYTE PTR [ebx]
 8059582:  mov eax, ebx
 8059584:  sub eax, 0x20
 8059587:  cmp al, 0x5a
 8059589:  mov BYTE PTR [ebp-0x51d], bl
 805958f:  jbe 805bbb2
 8059595:  mov eax, DWORD PTR [ebp-0x474]
 805959b:  mov edx, 0x805a7c0
 80595a0:  mov esi, DWORD PTR [ebp-0x484]
 80595a6:  mov DWORD PTR [ebp-0x534], 0x0
 80595b0:  mov DWORD PTR [ebp-0x52c], 0x1
 80595ba:  mov DWORD PTR [ebp-0x568], eax
 80595c0:  jmp 8058ba0
 80595c5:  add DWORD PTR [ebp-0x578], 0x1
 80595cc:  mov edx, DWORD PTR [ebp-0x578]
 80595d2:  movzx edx, BYTE PTR [edx]
 80595d5:  mov eax, edx
 80595d7:  sub eax, 0x20
 80595da:  cmp al, 0x5a
 80595dc:  mov BYTE PTR [ebp-0x51d], dl
 80595e2:  jbe 805bb56
 80595e8:  mov ecx, DWORD PTR [ebp-0x474]
 80595ee:  mov edx, 0x805a7c0
 80595f3:  mov esi, DWORD PTR [ebp-0x484]
 80595f9:  mov DWORD PTR [ebp-0x524], 0x1
 8059603:  mov DWORD PTR [ebp-0x568], ecx
 8059609:  jmp 8058ba0
 805960e:  add DWORD PTR [ebp-0x578], 0x1
 8059615:  mov ebx, DWORD PTR [ebp-0x578]
 805961b:  movzx ebx, BYTE PTR [ebx]
 805961e:  mov eax, ebx
 8059620:  sub eax, 0x20
 8059623:  cmp al, 0x5a
 8059625:  mov BYTE PTR [ebp-0x51d], bl
 805962b:  jbe 805bc28
 8059631:  mov eax, DWORD PTR [ebp-0x474]
 8059637:  mov edx, 0x805a7c0
 805963c:  mov esi, DWORD PTR [ebp-0x484]
 8059642:  mov DWORD PTR [ebp-0x534], 0x1
 805964c:  mov DWORD PTR [ebp-0x568], eax
 8059652:  jmp 8058ba0
 8059657:  mov esi, DWORD PTR [ebp-0x578]
 805965d:  movzx eax, BYTE PTR [esi]
 8059660:  add esi, 0x1
 8059663:  mov DWORD PTR [ebp-0x578], esi
 8059669:  movzx ebx, BYTE PTR [esi]
 805966c:  lea edx, [eax-0x30]
 805966f:  movzx eax, bl
 8059672:  sub eax, 0x30
 8059675:  cmp eax, 0x9
 8059678:  ja 80596a5
 805967a:  lea esi, [esi]
 8059680:  movzx eax, bl
 8059683:  add DWORD PTR [ebp-0x578], 0x1
 805968a:  lea edx, [edx+edx*4]
 805968d:  lea edx, [eax+edx*2-0x30]
 8059691:  mov eax, DWORD PTR [ebp-0x578]
 8059697:  movzx ebx, BYTE PTR [eax]
 805969a:  movzx eax, bl
 805969d:  sub eax, 0x30
 80596a0:  cmp eax, 0x9
 80596a3:  jbe 8059680
 80596a5:  cmp edx, 0x3c7
 80596ab:  mov DWORD PTR [ebp-0x48c], edx
 80596b1:  jle 80596dc
 80596b3:  mov esi, edx
 80596b5:  add esi, 0x20
 80596b8:  cmp esi, 0x1000
 80596be:  ja 805c6b1
 80596c4:  lea eax, [esi+0x12]
 80596c7:  and eax, 0xfc
 80596ca:  sub esp, eax
 80596cc:  lea eax, [esp+0x23]
 80596d0:  and eax, 0xf0
 80596d3:  lea esi, [eax+esi]
 80596d6:  mov DWORD PTR [ebp-0x56c], esi
 80596dc:  cmp bl, 0x24
 80596df:  je 805a7cd
 80596e5:  mov eax, ebx
 80596e7:  sub eax, 0x20
 80596ea:  cmp al, 0x5a
 80596ec:  mov BYTE PTR [ebp-0x51d], bl
 80596f2:  ja 805bcb4
 80596f8:  movsx eax, BYTE PTR [ebp-0x51d]
 80596ff:  mov esi, DWORD PTR [ebp-0x484]
 8059705:  mov eax, DWORD PTR [eax*4+0x80b1200]
 805970c:  mov edx, DWORD PTR [eax*4+0x80b1180]
 8059713:  mov eax, DWORD PTR [ebp-0x474]
 8059719:  mov DWORD PTR [ebp-0x568], eax
 805971f:  jmp 8058ba0
 8059724:  add DWORD PTR [ebp-0x578], 0x1
 805972b:  mov ebx, DWORD PTR [ebp-0x578]
 8059731:  movzx ebx, BYTE PTR [ebx]
 8059734:  mov eax, ebx
 8059736:  sub eax, 0x20
 8059739:  cmp al, 0x5a
 805973b:  mov BYTE PTR [ebp-0x51d], bl
 8059741:  jbe 805b9f1
 8059747:  mov eax, DWORD PTR [ebp-0x474]
 805974d:  mov edx, 0x805a7c0
 8059752:  mov esi, DWORD PTR [ebp-0x484]
 8059758:  mov DWORD PTR [ebp-0x530], 0x1
 8059762:  mov DWORD PTR [ebp-0x568], eax
 8059768:  jmp 8058ba0
 805976d:  mov eax, DWORD PTR [ebp-0x530]
 8059773:  test eax, eax
 8059775:  jne 8058fbd
 805977b:  mov ebx, DWORD PTR [ebp-0x48c]
 8059781:  mov esi, DWORD PTR [ebp-0x544]
 8059787:  sub ebx, 0x1
 805978a:  test esi, esi
 805978c:  jne 80597c9
 805978e:  test ebx, ebx
 8059790:  jle 80597c9
 8059792:  mov DWORD PTR [esp+0x8], ebx
 8059796:  mov DWORD PTR [esp+0x4], 0x20
 805979e:  mov esi, DWORD PTR [ebp+0x8]
 80597a1:  mov DWORD PTR [esp], esi
 80597a4:  call 8062880
 80597a9:  cmp edi, 0x7ffffffe
 80597af:  mov edx, eax
 80597b1:  ja 805cfcd
 80597b7:  mov eax, 0x7fffffff
 80597bc:  sub eax, edi
 80597be:  cmp edx, eax
 80597c0:  ja 8058ab6
 80597c6:  lea edi, [edx+edi]
 80597c9:  mov eax, DWORD PTR [ebp-0x484]
 80597cf:  mov esi, DWORD PTR [ebp+0x8]
 80597d2:  mov ecx, DWORD PTR [ebp-0x484]
 80597d8:  add eax, 0x4
 80597db:  mov DWORD PTR [ebp+0x10], eax
 80597de:  mov eax, DWORD PTR [esi+0x14]
 80597e1:  cmp eax, DWORD PTR [esi+0x18]
 80597e4:  movzx edx, BYTE PTR [ecx]
 80597e7:  jae 805cf1d
 80597ed:  mov BYTE PTR [eax], dl
 80597ef:  mov edx, DWORD PTR [ebp+0x8]
 80597f2:  add eax, 0x1
 80597f5:  mov DWORD PTR [edx+0x14], eax
 80597f8:  cmp edi, 0x7fffffff
 80597fe:  je 8058ab6
 8059804:  mov ecx, DWORD PTR [ebp-0x544]
 805980a:  add edi, 0x1
 805980d:  test ecx, ecx
 805980f:  je 8059108
 8059815:  test ebx, ebx
 8059817:  jle 8059108
 805981d:  mov DWORD PTR [esp+0x8], ebx
 8059821:  mov DWORD PTR [esp+0x4], 0x20
 8059829:  mov ecx, DWORD PTR [ebp+0x8]
 805982c:  mov DWORD PTR [esp], ecx
 805982f:  call 8062880
 8059834:  cmp edi, 0x7ffffffe
 805983a:  mov edx, eax
 805983c:  ja 805cfcd
 8059842:  mov eax, 0x7fffffff
 8059847:  sub eax, edi
 8059849:  cmp edx, eax
 805984b:  ja 8058ab6
 8059851:  lea edi, [edx+edi]
 8059854:  jmp 8059108
 8059859:  mov eax, DWORD PTR [ebp-0x484]
 805985f:  mov edx, DWORD PTR [ebp-0x484]
 8059865:  add eax, 0x4
 8059868:  mov DWORD PTR [ebp+0x10], eax
 805986b:  mov esi, DWORD PTR [edx]
 805986d:  test esi, esi
 805986f:  je 805bee0
 8059875:  mov eax, DWORD PTR [ebp-0x530]
 805987b:  test eax, eax
 805987d:  je 805b373
 8059883:  mov eax, DWORD PTR [ebp-0x478]
 8059889:  mov DWORD PTR [ebp-0x1c], esi
 805988c:  mov DWORD PTR [ebp-0x34], 0x0
 8059893:  mov DWORD PTR [ebp-0x30], 0x0
 805989a:  test eax, eax
 805989c:  js 805c908
 80598a2:  cmp DWORD PTR [ebp-0x478], 0x1000
 80598ac:  ja 805c7d2
 80598b2:  mov eax, DWORD PTR [ebp-0x478]
 80598b8:  mov DWORD PTR [ebp-0x518], 0x0
 80598c2:  add eax, 0x12
 80598c5:  and eax, 0xfc
 80598c8:  sub esp, eax
 80598ca:  lea esi, [esp+0x23]
 80598ce:  and esi, 0xf0
 80598d1:  lea ecx, [ebp-0x34]
 80598d4:  mov DWORD PTR [esp+0xc], ecx
 80598d8:  mov ebx, DWORD PTR [ebp-0x478]
 80598de:  lea eax, [ebp-0x1c]
 80598e1:  mov DWORD PTR [esp+0x4], eax
 80598e5:  mov DWORD PTR [esp], esi
 80598e8:  mov DWORD PTR [esp+0x8], ebx
 80598ec:  call 806c860
 80598f1:  cmp eax, 0xff
 80598f4:  mov ebx, eax
 80598f6:  je 8058ab6
 80598fc:  mov eax, DWORD PTR [ebp-0x48c]
 8059902:  sub eax, ebx
 8059904:  mov DWORD PTR [ebp-0x59c], eax
 805990a:  js 805b93d
 8059910:  mov eax, DWORD PTR [ebp-0x544]
 8059916:  test eax, eax
 8059918:  jne 8059961
 805991a:  mov ecx, DWORD PTR [ebp-0x59c]
 8059920:  test ecx, ecx
 8059922:  je 8059961
 8059924:  mov ecx, DWORD PTR [ebp-0x59c]
 805992a:  mov DWORD PTR [esp+0x4], 0x20
 8059932:  mov DWORD PTR [esp+0x8], ecx
 8059936:  mov eax, DWORD PTR [ebp+0x8]
 8059939:  mov DWORD PTR [esp], eax
 805993c:  call 8062880
 8059941:  cmp edi, 0x7ffffffe
 8059947:  mov edx, eax
 8059949:  ja 805cfcd
 805994f:  mov eax, 0x7fffffff
 8059954:  sub eax, edi
 8059956:  cmp edx, eax
 8059958:  ja 8058ab6
 805995e:  lea edi, [edx+edi]
 8059961:  test edi, edi
 8059963:  js 805cd3c
 8059969:  mov edx, DWORD PTR [ebp+0x8]
 805996c:  mov eax, DWORD PTR [edx+0x94]
 8059972:  mov DWORD PTR [esp+0x8], ebx
 8059976:  mov DWORD PTR [esp+0x4], esi
 805997a:  mov DWORD PTR [esp], edx
 805997d:  call DWORD PTR [eax+0x1c]
 8059980:  cmp eax, ebx
 8059982:  jne 8058ab6
 8059988:  mov eax, 0x7fffffff
 805998d:  sub eax, edi
 805998f:  cmp ebx, eax
 8059991:  mov DWORD PTR [ebp-0x5b8], 0x7fffffff
 805999b:  ja 8058ab6
 80599a1:  mov edx, DWORD PTR [ebp-0x544]
 80599a7:  lea edi, [ebx+edi]
 80599aa:  test edx, edx
 80599ac:  je 80599f6
 80599ae:  mov eax, DWORD PTR [ebp-0x59c]
 80599b4:  test eax, eax
 80599b6:  je 80599f6
 80599b8:  mov ecx, DWORD PTR [ebp-0x59c]
 80599be:  mov DWORD PTR [esp+0x4], 0x20
 80599c6:  mov DWORD PTR [esp+0x8], ecx
 80599ca:  mov ebx, DWORD PTR [ebp+0x8]
 80599cd:  mov DWORD PTR [esp], ebx
 80599d0:  call 8062880
 80599d5:  cmp edi, 0x7ffffffe
 80599db:  ja 805cfcd
 80599e1:  sub DWORD PTR [ebp-0x5b8], edi
 80599e7:  cmp eax, DWORD PTR [ebp-0x5b8]
 80599ed:  ja 8058ab6
 80599f3:  lea edi, [eax+edi]
 80599f6:  mov eax, DWORD PTR [ebp-0x518]
 80599fc:  test eax, eax
 80599fe:  je 8059108
 8059a04:  mov DWORD PTR [esp], esi
 8059a07:  call 804b4a0
 8059a0c:  jmp 8059108
 8059a11:  lea esi, [esi]
 8059a18:  mov ebx, DWORD PTR [ebp+0x8]
 8059a1b:  mov eax, DWORD PTR [ebx+0x14]
 8059a1e:  cmp eax, DWORD PTR [ebx+0x18]
 8059a21:  jae 805d01b
 8059a27:  mov BYTE PTR [eax], 0x25
 8059a2a:  mov esi, DWORD PTR [ebp+0x8]
 8059a2d:  add eax, 0x1
 8059a30:  mov DWORD PTR [esi+0x14], eax
 8059a33:  cmp edi, 0x7fffffff
 8059a39:  je 8058ab6
 8059a3f:  mov eax, DWORD PTR [ebp-0x484]
 8059a45:  add edi, 0x1
 8059a48:  mov DWORD PTR [ebp+0x10], eax
 8059a4b:  jmp 8059108
 8059a50:  mov ecx, DWORD PTR [ebp-0x538]
 8059a56:  test ecx, ecx
 8059a58:  je 805b88a
 8059a5e:  mov edx, DWORD PTR [ebp-0x484]
 8059a64:  mov ecx, DWORD PTR [ebp-0x484]
 8059a6a:  add edx, 0x8
 8059a6d:  mov DWORD PTR [ebp+0x10], edx
 8059a70:  mov edx, DWORD PTR [ecx+0x4]
 8059a73:  mov eax, DWORD PTR [ecx]
 8059a75:  mov ebx, edx
 8059a77:  shr ebx, 0x1f
 8059a7a:  test ebx, ebx
 8059a7c:  mov DWORD PTR [ebp-0x554], ebx
 8059a82:  je 8059a8b
 8059a84:  neg eax
 8059a86:  adc edx, 0x0
 8059a89:  neg edx
 8059a8b:  mov DWORD PTR [ebp-0x5cc], eax
 8059a91:  mov ebx, edx
 8059a93:  mov DWORD PTR [ebp-0x550], 0xa
 8059a9d:  cmp DWORD PTR [ebp-0x478], 0x0
 8059aa4:  jl 805af0b
 8059aaa:  jne 805cff1
 8059ab0:  mov edx, DWORD PTR [ebp-0x5cc]
 8059ab6:  mov BYTE PTR [ebp-0x51e], 0x20
 8059abd:  or edx, ebx
 8059abf:  jne 805af15
 8059ac5:  cmp DWORD PTR [ebp-0x550], 0x8
 8059acc:  je 805c2ce
 8059ad2:  mov esi, DWORD PTR [ebp-0x56c]
 8059ad8:  mov BYTE PTR [ebp-0x51e], 0x20
 8059adf:  or ebx, DWORD PTR [ebp-0x5cc]
 8059ae5:  mov DWORD PTR [ebp-0x4a8], esi
 8059aeb:  setne al
 8059aee:  movzx eax, al
 8059af1:  mov DWORD PTR [ebp-0x5cc], eax
 8059af7:  mov eax, DWORD PTR [ebp-0x56c]
 8059afd:  sub eax, esi
 8059aff:  cmp DWORD PTR [ebp-0x478], eax
 8059b05:  jg 8059b30
 8059b07:  mov eax, DWORD PTR [ebp-0x5cc]
 8059b0d:  test eax, eax
 8059b0f:  je 8059b30
 8059b11:  mov eax, DWORD PTR [ebp-0x54c]
 8059b17:  test eax, eax
 8059b19:  je 8059b30
 8059b1b:  cmp DWORD PTR [ebp-0x550], 0x8
 8059b22:  jne 8059b30
 8059b24:  sub esi, 0x1
 8059b27:  mov BYTE PTR [esi], 0x30
 8059b2a:  mov DWORD PTR [ebp-0x4a8], esi
 8059b30:  mov edx, DWORD PTR [ebp-0x4a8]
 8059b36:  sub edx, DWORD PTR [ebp-0x56c]
 8059b3c:  mov ebx, DWORD PTR [ebp-0x544]
 8059b42:  mov eax, edx
 8059b44:  add eax, DWORD PTR [ebp-0x478]
 8059b4a:  mov DWORD PTR [ebp-0x5b0], edx
 8059b50:  mov ecx, eax
 8059b52:  sar ecx, 0x1f
 8059b55:  not ecx
 8059b57:  and ecx, eax
 8059b59:  test ebx, ebx
 8059b5b:  mov DWORD PTR [ebp-0x528], ecx
 8059b61:  jne 805aa3b
 8059b67:  mov ebx, edx
 8059b69:  add ebx, DWORD PTR [ebp-0x48c]
 8059b6f:  sub ebx, ecx
 8059b71:  mov ecx, DWORD PTR [ebp-0x5cc]
 8059b77:  test ecx, ecx
 8059b79:  setne al
 8059b7c:  and al, BYTE PTR [ebp-0x54c]
 8059b82:  mov BYTE PTR [ebp-0x491], al
 8059b88:  je 8059b96
 8059b8a:  cmp DWORD PTR [ebp-0x550], 0x10
 8059b91:  jne 8059b96
 8059b93:  sub ebx, 0x2
 8059b96:  mov eax, DWORD PTR [ebp-0x548]
 8059b9c:  or eax, DWORD PTR [ebp-0x554]
 8059ba2:  or eax, DWORD PTR [ebp-0x540]
 8059ba8:  cmp eax, 0x1
 8059bab:  adc ebx, 0xff
 8059bae:  cmp BYTE PTR [ebp-0x51e], 0x20
 8059bb5:  je 805b5cc
 8059bbb:  mov edx, DWORD PTR [ebp-0x554]
 8059bc1:  test edx, edx
 8059bc3:  jne 805b59d
 8059bc9:  mov eax, DWORD PTR [ebp-0x540]
 8059bcf:  test eax, eax
 8059bd1:  jne 805b86a
 8059bd7:  mov eax, DWORD PTR [ebp-0x548]
 8059bdd:  test eax, eax
 8059bdf:  jne 805bd4e
 8059be5:  cmp BYTE PTR [ebp-0x491], 0x0
 8059bec:  je 8059bfb
 8059bee:  cmp DWORD PTR [ebp-0x550], 0x10
 8059bf5:  je 805c38c
 8059bfb:  mov ecx, DWORD PTR [ebp-0x528]
 8059c01:  lea eax, [ebx+ecx]
 8059c04:  test eax, eax
 8059c06:  jle 8059c3f
 8059c08:  mov DWORD PTR [esp+0x8], eax
 8059c0c:  mov DWORD PTR [esp+0x4], 0x30
 8059c14:  mov ebx, DWORD PTR [ebp+0x8]
 8059c17:  mov DWORD PTR [esp], ebx
 8059c1a:  call 8062880
 8059c1f:  cmp edi, 0x7ffffffe
 8059c25:  mov edx, eax
 8059c27:  ja 8059e82
 8059c2d:  mov eax, 0x7fffffff
 8059c32:  sub eax, edi
 8059c34:  cmp edx, eax
 8059c36:  ja 8058ab6
 8059c3c:  lea edi, [edx+edi]
 8059c3f:  test edi, edi
 8059c41:  js 805cc79
 8059c47:  mov edx, DWORD PTR [ebp+0x8]
 8059c4a:  mov ebx, DWORD PTR [ebp-0x56c]
 8059c50:  sub ebx, DWORD PTR [ebp-0x4a8]
 8059c56:  mov eax, DWORD PTR [edx+0x94]
 8059c5c:  mov DWORD PTR [esp+0x8], ebx
 8059c60:  mov DWORD PTR [esp+0x4], esi
 8059c64:  mov DWORD PTR [esp], edx
 8059c67:  call DWORD PTR [eax+0x1c]
 8059c6a:  cmp ebx, eax
 8059c6c:  jne 8058ab6
 8059c72:  mov eax, 0x7fffffff
 8059c77:  sub eax, edi
 8059c79:  cmp ebx, eax
 8059c7b:  ja 8058ab6
 8059c81:  add edi, ebx
 8059c83:  jmp 8059108
 8059c88:  mov DWORD PTR [ebp-0x550], 0xa
 8059c92:  mov eax, DWORD PTR [ebp-0x538]
 8059c98:  test eax, eax
 8059c9a:  je 805aebf
 8059ca0:  mov esi, DWORD PTR [ebp-0x484]
 8059ca6:  mov ebx, DWORD PTR [ebp-0x484]
 8059cac:  mov eax, DWORD PTR [ebp-0x484]
 8059cb2:  mov DWORD PTR [ebp-0x554], 0x0
 8059cbc:  mov esi, DWORD PTR [esi]
 8059cbe:  add ebx, 0x8
 8059cc1:  mov DWORD PTR [ebp+0x10], ebx
 8059cc4:  mov ebx, DWORD PTR [eax+0x4]
 8059cc7:  mov DWORD PTR [ebp-0x548], 0x0
 8059cd1:  mov DWORD PTR [ebp-0x5cc], esi
 8059cd7:  mov DWORD PTR [ebp-0x540], 0x0
 8059ce1:  jmp 8059a9d
 8059ce6:  mov esi, DWORD PTR [ebp-0x564]
 8059cec:  mov edx, DWORD PTR [ebp-0x508]
 8059cf2:  lea eax, [esi+esi*2]
 8059cf5:  shl eax, 0x4
 8059cf8:  add edx, eax
 8059cfa:  je 805bf4d
 8059d00:  mov eax, DWORD PTR [edx+0x24]
 8059d03:  mov ecx, DWORD PTR [ebp-0x500]
 8059d09:  lea eax, [eax+eax*2]
 8059d0c:  lea eax, [ecx+eax*4]
 8059d0f:  mov DWORD PTR [ebp-0x14], eax
 8059d12:  lea eax, [ebp-0x14]
 8059d15:  mov DWORD PTR [esp+0x4], edx
 8059d19:  mov DWORD PTR [esp+0x8], eax
 8059d1d:  mov ebx, DWORD PTR [ebp+0x8]
 8059d20:  mov DWORD PTR [esp], ebx
 8059d23:  call 805fe40
 8059d28:  mov edx, eax
 8059d2a:  test edx, edx
 8059d2c:  js 8058ab6
 8059d32:  cmp edi, 0x7ffffffe
 8059d38:  ja 805cd0c
 8059d3e:  mov eax, 0x7fffffff
 8059d43:  sub eax, edi
 8059d45:  cmp edx, eax
 8059d47:  ja 8058ab6
 8059d4d:  lea edi, [edx+edi]
 8059d50:  jmp 8058d80
 8059d55:  mov DWORD PTR [ebp-0x550], 0x10
 8059d5f:  jmp 8059c92
 8059d64:  movsx eax, BYTE PTR [ebp-0x51d]
 8059d6b:  mov DWORD PTR [ebp-0x7c], 0x0
 8059d72:  mov ecx, DWORD PTR [ebp-0x478]
 8059d78:  movzx edx, BYTE PTR [ebp-0x534]
 8059d7f:  mov ebx, DWORD PTR [ebp-0x48c]
 8059d85:  mov DWORD PTR [ebp-0x80], eax
 8059d88:  movzx eax, BYTE PTR [ebp-0x7c]
 8059d8c:  mov DWORD PTR [ebp-0x88], ecx
 8059d92:  movzx ecx, BYTE PTR [ebp-0x530]
 8059d99:  add edx, edx
 8059d9b:  mov DWORD PTR [ebp-0x84], ebx
 8059da1:  and eax, 0xfc
 8059da4:  or al, BYTE PTR [ebp-0x538]
 8059daa:  shl ecx, 0x2
 8059dad:  or eax, edx
 8059daf:  movzx edx, BYTE PTR [ebp-0x54c]
 8059db6:  and eax, 0xf3
 8059db9:  or eax, ecx
 8059dbb:  movzx ecx, BYTE PTR [ebp-0x548]
 8059dc2:  shl edx, 0x3
 8059dc5:  or eax, edx
 8059dc7:  movzx edx, BYTE PTR [ebp-0x544]
 8059dce:  shl ecx, 0x4
 8059dd1:  and eax, 0xcf
 8059dd4:  or eax, ecx
 8059dd6:  movzx ecx, BYTE PTR [ebp-0x540]
 8059ddd:  shl edx, 0x5
 8059de0:  or eax, edx
 8059de2:  movzx edx, BYTE PTR [ebp-0x53c]
 8059de9:  shl ecx, 0x6
 8059dec:  and eax, 0x3f
 8059def:  or eax, ecx
 8059df1:  shl edx, 0x7
 8059df4:  or eax, edx
 8059df6:  movzx edx, BYTE PTR [ebp-0x524]
 8059dfd:  mov BYTE PTR [ebp-0x7c], al
 8059e00:  movzx eax, BYTE PTR [ebp-0x7b]
 8059e04:  shl edx, 0x3
 8059e07:  and eax, 0xf7
 8059e0a:  or eax, edx
 8059e0c:  mov edx, DWORD PTR [ebp-0x538]
 8059e12:  mov BYTE PTR [ebp-0x7b], al
 8059e15:  movzx eax, BYTE PTR [ebp-0x51e]
 8059e1c:  test edx, edx
 8059e1e:  mov DWORD PTR [ebp-0x78], eax
 8059e21:  je 805ba6e
 8059e27:  mov ebx, DWORD PTR [ebp-0x484]
 8059e2d:  mov esi, DWORD PTR [ebp-0x484]
 8059e33:  mov eax, DWORD PTR [ebx]
 8059e35:  mov edx, DWORD PTR [ebx+0x4]
 8059e38:  add esi, 0xc
 8059e3b:  mov ecx, DWORD PTR [ebx+0x8]
 8059e3e:  mov DWORD PTR [ebp+0x10], esi
 8059e41:  mov DWORD PTR [ebp-0x58], eax
 8059e44:  mov DWORD PTR [ebp-0x54], edx
 8059e47:  mov DWORD PTR [ebp-0x50], ecx
 8059e4a:  lea eax, [ebp-0x58]
 8059e4d:  mov DWORD PTR [ebp-0x14], eax
 8059e50:  lea edx, [ebp-0x88]
 8059e56:  lea eax, [ebp-0x14]
 8059e59:  mov DWORD PTR [esp+0x4], edx
 8059e5d:  mov DWORD PTR [esp+0x8], eax
 8059e61:  mov ecx, DWORD PTR [ebp+0x8]
 8059e64:  mov DWORD PTR [esp], ecx
 8059e67:  call 805d430
 8059e6c:  test eax, eax
 8059e6e:  mov edx, eax
 8059e70:  js 8058ab6
 8059e76:  cmp edi, 0x7ffffffe
 8059e7c:  jbe 8059842
 8059e82:  mov DWORD PTR [esp+0xc], 0x80b0e19
 8059e8a:  mov DWORD PTR [esp+0x8], 0x62c
 8059e92:  mov DWORD PTR [esp+0x4], 0x80b0dd7
 8059e9a:  mov DWORD PTR [esp], 0x80b0e40
 8059ea1:  call 8051490
 8059ea6:  xchg ax, ax
 8059ea8:  mov DWORD PTR [ebp-0x4f4], 0xa
 8059eb2:  mov eax, DWORD PTR [ebp-0x4d8]
 8059eb8:  test eax, eax
 8059eba:  je 805ae5b
 8059ec0:  mov eax, DWORD PTR [ebp-0x564]
 8059ec6:  lea edx, [eax+eax*2]
 8059ec9:  mov eax, DWORD PTR [ebp-0x508]
 8059ecf:  shl edx, 0x4
 8059ed2:  add eax, edx
 8059ed4:  test eax, eax
 8059ed6:  je 805c2fb
 8059edc:  mov ebx, DWORD PTR [ebp-0x508]
 8059ee2:  mov ecx, DWORD PTR [ebp-0x484]
 8059ee8:  mov eax, DWORD PTR [ebx+edx+0x24]
 8059eec:  mov edx, DWORD PTR [ebp-0x500]
 8059ef2:  lea eax, [eax+eax*2]
 8059ef5:  mov esi, DWORD PTR [edx+eax*4]
 8059ef8:  mov ebx, DWORD PTR [edx+eax*4+0x4]
 8059efc:  mov DWORD PTR [ebp-0x4a0], ecx
 8059f02:  mov DWORD PTR [ebp-0x4f8], 0x0
 8059f0c:  mov DWORD PTR [ebp-0x4e8], 0x0
 8059f16:  mov DWORD PTR [ebp-0x4e0], 0x0
 8059f20:  cmp DWORD PTR [ebp-0x4c4], 0x0
 8059f27:  jl 805b80d
 8059f2d:  jne 805afb3
 8059f33:  mov eax, ebx
 8059f35:  or eax, esi
 8059f37:  mov BYTE PTR [ebp-0x4ba], 0x20
 8059f3e:  jne 805afba
 8059f44:  cmp DWORD PTR [ebp-0x4f4], 0x8
 8059f4b:  je 805c48b
 8059f51:  mov edx, DWORD PTR [ebp-0x56c]
 8059f57:  mov BYTE PTR [ebp-0x4ba], 0x20
 8059f5e:  mov DWORD PTR [ebp-0x4f0], edx
 8059f64:  or esi, ebx
 8059f66:  mov edx, DWORD PTR [ebp-0x4f0]
 8059f6c:  setne al
 8059f6f:  mov ecx, DWORD PTR [ebp-0x4a0]
 8059f75:  movzx esi, al
 8059f78:  mov eax, DWORD PTR [ebp-0x56c]
 8059f7e:  mov DWORD PTR [ebp-0x4ac], edx
 8059f84:  mov DWORD PTR [ebp-0x484], ecx
 8059f8a:  sub eax, edx
 8059f8c:  cmp DWORD PTR [ebp-0x4c4], eax
 8059f92:  jle 805ac9d
 8059f98:  mov ecx, DWORD PTR [ebp-0x4ac]
 8059f9e:  sub ecx, DWORD PTR [ebp-0x56c]
 8059fa4:  mov eax, ecx
 8059fa6:  add eax, DWORD PTR [ebp-0x4c4]
 8059fac:  mov DWORD PTR [ebp-0x598], ecx
 8059fb2:  mov ebx, eax
 8059fb4:  sar ebx, 0x1f
 8059fb7:  not ebx
 8059fb9:  and ebx, eax
 8059fbb:  mov DWORD PTR [ebp-0x488], ebx
 8059fc1:  mov ebx, DWORD PTR [ebp-0x4e4]
 8059fc7:  test ebx, ebx
 8059fc9:  jne 805ab6d
 8059fcf:  mov ebx, ecx
 8059fd1:  mov ecx, DWORD PTR [ebp-0x4ec]
 8059fd7:  add ebx, DWORD PTR [ebp-0x4c8]
 8059fdd:  sub ebx, DWORD PTR [ebp-0x488]
 8059fe3:  test esi, esi
 8059fe5:  setne dl
 8059fe8:  test ecx, ecx
 8059fea:  setne al
 8059fed:  and dl, al
 8059fef:  mov esi, edx
 8059ff1:  je 8059fff
 8059ff3:  cmp DWORD PTR [ebp-0x4f4], 0x10
 8059ffa:  jne 8059fff
 8059ffc:  sub ebx, 0x2
 8059fff:  mov eax, DWORD PTR [ebp-0x4e8]
 805a005:  or eax, DWORD PTR [ebp-0x4f8]
 805a00b:  or eax, DWORD PTR [ebp-0x4e0]
 805a011:  cmp eax, 0x1
 805a014:  adc ebx, 0xff
 805a017:  cmp BYTE PTR [ebp-0x4ba], 0x20
 805a01e:  je 805b6ac
 805a024:  mov edx, DWORD PTR [ebp-0x4f8]
 805a02a:  test edx, edx
 805a02c:  jne 805b67d
 805a032:  mov eax, DWORD PTR [ebp-0x4e0]
 805a038:  test eax, eax
 805a03a:  jne 805b99b
 805a040:  mov eax, DWORD PTR [ebp-0x4e8]
 805a046:  test eax, eax
 805a048:  jne 805bc94
 805a04e:  mov eax, esi
 805a050:  test al, al
 805a052:  je 805a061
 805a054:  cmp DWORD PTR [ebp-0x4f4], 0x10
 805a05b:  je 805c272
 805a061:  mov esi, DWORD PTR [ebp-0x488]
 805a067:  lea eax, [ebx+esi]
 805a06a:  test eax, eax
 805a06c:  jle 805a0a5
 805a06e:  mov DWORD PTR [esp+0x8], eax
 805a072:  mov DWORD PTR [esp+0x4], 0x30
 805a07a:  mov eax, DWORD PTR [ebp+0x8]
 805a07d:  mov DWORD PTR [esp], eax
 805a080:  call 8062880
 805a085:  cmp edi, 0x7ffffffe
 805a08b:  mov edx, eax
 805a08d:  ja 805cd0c
 805a093:  mov eax, 0x7fffffff
 805a098:  sub eax, edi
 805a09a:  cmp edx, eax
 805a09c:  ja 8058ab6
 805a0a2:  lea edi, [edx+edi]
 805a0a5:  test edi, edi
 805a0a7:  js 805ce7f
 805a0ad:  mov ebx, DWORD PTR [ebp-0x56c]
 805a0b3:  mov edx, DWORD PTR [ebp+0x8]
 805a0b6:  sub ebx, DWORD PTR [ebp-0x4ac]
 805a0bc:  mov eax, DWORD PTR [edx+0x94]
 805a0c2:  mov DWORD PTR [esp+0x8], ebx
 805a0c6:  mov ecx, DWORD PTR [ebp-0x4f0]
 805a0cc:  mov DWORD PTR [esp], edx
 805a0cf:  mov DWORD PTR [esp+0x4], ecx
 805a0d3:  call DWORD PTR [eax+0x1c]
 805a0d6:  cmp ebx, eax
 805a0d8:  jne 8058ab6
 805a0de:  mov eax, 0x7fffffff
 805a0e3:  sub eax, edi
 805a0e5:  cmp ebx, eax
 805a0e7:  ja 8058ab6
 805a0ed:  add edi, ebx
 805a0ef:  jmp 8058d80
 805a0f4:  mov DWORD PTR [ebp-0x4f4], 0x8
 805a0fe:  jmp 8059eb2
 805a103:  mov DWORD PTR [ebp-0x550], 0x8
 805a10d:  jmp 8059c92
 805a112:  mov eax, DWORD PTR [ebp+0x8]
 805a115:  test BYTE PTR [eax+0x3c], 0x4
 805a119:  je 805a129
 805a11b:  mov eax, DWORD PTR [ebp-0x55c]
 805a121:  test eax, eax
 805a123:  je 805c4f7
 805a129:  mov eax, DWORD PTR [ebp-0x538]
 805a12f:  test eax, eax
 805a131:  je 805ba27
 805a137:  mov esi, DWORD PTR [ebp-0x484]
 805a13d:  mov edx, edi
 805a13f:  mov ebx, DWORD PTR [ebp-0x484]
 805a145:  sar edx, 0x1f
 805a148:  mov eax, DWORD PTR [esi]
 805a14a:  add ebx, 0x4
 805a14d:  mov DWORD PTR [ebp+0x10], ebx
 805a150:  mov DWORD PTR [eax], edi
 805a152:  mov DWORD PTR [eax+0x4], edx
 805a155:  jmp 8059108
 805a15a:  lea eax, [ebp-0x470]
 805a160:  mov DWORD PTR [esp+0x8], 0x3e8
 805a168:  mov DWORD PTR [esp+0x4], eax
 805a16c:  mov ecx, DWORD PTR [ebp-0x560]
 805a172:  mov DWORD PTR [esp], ecx
 805a175:  call 806b060
 805a17a:  mov ebx, DWORD PTR [ebp-0x484]
 805a180:  mov DWORD PTR [ebp-0x530], 0x0
 805a18a:  mov DWORD PTR [ebp+0x10], ebx
 805a18d:  mov esi, eax
 805a18f:  jmp 805986d
 805a194:  mov esi, DWORD PTR [ebp-0x484]
 805a19a:  mov ebx, DWORD PTR [ebp-0x484]
 805a1a0:  mov eax, DWORD PTR [esi]
 805a1a2:  add ebx, 0x4
 805a1a5:  mov DWORD PTR [ebp+0x10], ebx
 805a1a8:  test eax, eax
 805a1aa:  je 805b35b
 805a1b0:  mov DWORD PTR [ebp-0x5cc], eax
 805a1b6:  mov DWORD PTR [ebp-0x554], 0x0
 805a1c0:  mov DWORD PTR [ebp-0x550], 0x10
 805a1ca:  mov DWORD PTR [ebp-0x54c], 0x1
 805a1d4:  mov DWORD PTR [ebp-0x53c], 0x0
 805a1de:  mov BYTE PTR [ebp-0x51d], 0x78
 805a1e5:  cmp DWORD PTR [ebp-0x478], 0x0
 805a1ec:  jl 805adb1
 805a1f2:  jne 805cd30
 805a1f8:  mov edx, DWORD PTR [ebp-0x5cc]
 805a1fe:  mov BYTE PTR [ebp-0x51e], 0x20
 805a205:  test edx, edx
 805a207:  jne 805adbb
 805a20d:  cmp DWORD PTR [ebp-0x550], 0x8
 805a214:  je 805bd9b
 805a21a:  mov esi, DWORD PTR [ebp-0x56c]
 805a220:  xor eax, eax
 805a222:  mov BYTE PTR [ebp-0x51e], 0x20
 805a229:  mov DWORD PTR [ebp-0x4a8], esi
 805a22f:  jmp 8059aff
 805a234:  mov ecx, DWORD PTR [ebp-0x564]
 805a23a:  mov eax, DWORD PTR [ebp-0x508]
 805a240:  lea edx, [ecx+ecx*2]
 805a243:  shl edx, 0x4
 805a246:  add eax, edx
 805a248:  test eax, eax
 805a24a:  je 805c695
 805a250:  mov ecx, DWORD PTR [ebp-0x508]
 805a256:  mov esi, DWORD PTR [ebp-0x500]
 805a25c:  mov eax, DWORD PTR [ecx+edx+0x24]
 805a260:  lea eax, [eax+eax*2]
 805a263:  mov ebx, DWORD PTR [esi+eax*4]
 805a266:  mov eax, DWORD PTR [ebp-0x484]
 805a26c:  mov DWORD PTR [ebp-0x49c], eax
 805a272:  test ebx, ebx
 805a274:  je 805c206
 805a27a:  mov eax, DWORD PTR [ebp-0x4cc]
 805a280:  test eax, eax
 805a282:  je 805b48e
 805a288:  mov eax, DWORD PTR [ebp-0x4c4]
 805a28e:  mov DWORD PTR [ebp-0x1c], ebx
 805a291:  mov DWORD PTR [ebp-0x4c], 0x0
 805a298:  mov DWORD PTR [ebp-0x48], 0x0
 805a29f:  test eax, eax
 805a2a1:  js 805c9c1
 805a2a7:  cmp DWORD PTR [ebp-0x4c4], 0x1000
 805a2b1:  ja 805cad0
 805a2b7:  mov eax, DWORD PTR [ebp-0x4c4]
 805a2bd:  mov DWORD PTR [ebp-0x4b8], 0x0
 805a2c7:  add eax, 0x12
 805a2ca:  and eax, 0xfc
 805a2cd:  sub esp, eax
 805a2cf:  lea ebx, [esp+0x23]
 805a2d3:  and ebx, 0xf0
 805a2d6:  lea ecx, [ebp-0x4c]
 805a2d9:  mov DWORD PTR [esp+0xc], ecx
 805a2dd:  mov esi, DWORD PTR [ebp-0x4c4]
 805a2e3:  lea eax, [ebp-0x1c]
 805a2e6:  mov DWORD PTR [esp+0x4], eax
 805a2ea:  mov DWORD PTR [esp], ebx
 805a2ed:  mov DWORD PTR [esp+0x8], esi
 805a2f1:  call 806c860
 805a2f6:  cmp eax, 0xff
 805a2f9:  mov esi, eax
 805a2fb:  je 8058ab6
 805a301:  mov eax, DWORD PTR [ebp-0x4c8]
 805a307:  sub eax, esi
 805a309:  mov DWORD PTR [ebp-0x584], eax
 805a30f:  js 805b8f3
 805a315:  mov eax, DWORD PTR [ebp-0x4e4]
 805a31b:  test eax, eax
 805a31d:  jne 805a366
 805a31f:  mov ecx, DWORD PTR [ebp-0x584]
 805a325:  test ecx, ecx
 805a327:  je 805a366
 805a329:  mov eax, DWORD PTR [ebp-0x584]
 805a32f:  mov DWORD PTR [esp+0x4], 0x20
 805a337:  mov DWORD PTR [esp+0x8], eax
 805a33b:  mov edx, DWORD PTR [ebp+0x8]
 805a33e:  mov DWORD PTR [esp], edx
 805a341:  call 8062880
 805a346:  cmp edi, 0x7ffffffe
 805a34c:  mov edx, eax
 805a34e:  ja 805a796
 805a354:  mov eax, 0x7fffffff
 805a359:  sub eax, edi
 805a35b:  cmp edx, eax
 805a35d:  ja 8058ab6
 805a363:  lea edi, [edx+edi]
 805a366:  test edi, edi
 805a368:  js 805cec1
 805a36e:  mov ecx, DWORD PTR [ebp+0x8]
 805a371:  mov eax, DWORD PTR [ecx+0x94]
 805a377:  mov DWORD PTR [esp+0x8], esi
 805a37b:  mov DWORD PTR [esp+0x4], ebx
 805a37f:  mov DWORD PTR [esp], ecx
 805a382:  call DWORD PTR [eax+0x1c]
 805a385:  cmp eax, esi
 805a387:  jne 8058ab6
 805a38d:  mov eax, 0x7fffffff
 805a392:  sub eax, edi
 805a394:  cmp esi, eax
 805a396:  mov DWORD PTR [ebp-0x5c8], 0x7fffffff
 805a3a0:  ja 8058ab6
 805a3a6:  mov edx, DWORD PTR [ebp-0x4e4]
 805a3ac:  lea edi, [esi+edi]
 805a3af:  test edx, edx
 805a3b1:  je 805a3fb
 805a3b3:  mov eax, DWORD PTR [ebp-0x584]
 805a3b9:  test eax, eax
 805a3bb:  je 805a3fb
 805a3bd:  mov esi, DWORD PTR [ebp-0x584]
 805a3c3:  mov DWORD PTR [esp+0x4], 0x20
 805a3cb:  mov DWORD PTR [esp+0x8], esi
 805a3cf:  mov eax, DWORD PTR [ebp+0x8]
 805a3d2:  mov DWORD PTR [esp], eax
 805a3d5:  call 8062880
 805a3da:  cmp edi, 0x7ffffffe
 805a3e0:  ja 805a796
 805a3e6:  sub DWORD PTR [ebp-0x5c8], edi
 805a3ec:  cmp eax, DWORD PTR [ebp-0x5c8]
 805a3f2:  ja 8058ab6
 805a3f8:  lea edi, [eax+edi]
 805a3fb:  mov eax, DWORD PTR [ebp-0x4b8]
 805a401:  mov edx, DWORD PTR [ebp-0x49c]
 805a407:  test eax, eax
 805a409:  mov DWORD PTR [ebp-0x484], edx
 805a40f:  je 8058d80
 805a415:  mov DWORD PTR [esp], ebx
 805a418:  call 804b4a0
 805a41d:  mov ecx, DWORD PTR [ebp-0x49c]
 805a423:  mov DWORD PTR [ebp-0x484], ecx
 805a429:  jmp 8058d80
 805a42e:  xchg ax, ax
 805a430:  mov edx, DWORD PTR [ebp+0x8]
 805a433:  test BYTE PTR [edx+0x3c], 0x4
 805a437:  je 805a447
 805a439:  mov edx, DWORD PTR [ebp-0x55c]
 805a43f:  test edx, edx
 805a441:  je 805c338
 805a447:  mov esi, DWORD PTR [ebp-0x564]
 805a44d:  mov eax, DWORD PTR [ebp-0x508]
 805a453:  lea edx, [esi+esi*2]
 805a456:  shl edx, 0x4
 805a459:  add eax, edx
 805a45b:  test eax, eax
 805a45d:  je 805c86e
 805a463:  mov eax, DWORD PTR [ebp-0x4d8]
 805a469:  test eax, eax
 805a46b:  je 805bd6e
 805a471:  mov esi, DWORD PTR [ebp-0x508]
 805a477:  mov ecx, edi
 805a479:  sar ecx, 0x1f
 805a47c:  mov eax, DWORD PTR [esi+edx+0x24]
 805a480:  mov edx, DWORD PTR [ebp-0x500]
 805a486:  lea eax, [eax+eax*2]
 805a489:  mov eax, DWORD PTR [edx+eax*4]
 805a48c:  mov DWORD PTR [eax], edi
 805a48e:  mov DWORD PTR [eax+0x4], ecx
 805a491:  jmp 8058d80
 805a496:  lea eax, [ebp-0x470]
 805a49c:  mov DWORD PTR [esp+0x8], 0x3e8
 805a4a4:  mov DWORD PTR [esp+0x4], eax
 805a4a8:  mov ecx, DWORD PTR [ebp-0x560]
 805a4ae:  mov DWORD PTR [esp], ecx
 805a4b1:  call 806b060
 805a4b6:  mov esi, DWORD PTR [ebp-0x484]
 805a4bc:  mov DWORD PTR [ebp-0x4cc], 0x0
 805a4c6:  mov DWORD PTR [ebp-0x49c], esi
 805a4cc:  mov ebx, eax
 805a4ce:  jmp 805a272
 805a4d3:  mov esi, DWORD PTR [ebp-0x564]
 805a4d9:  mov eax, DWORD PTR [ebp-0x508]
 805a4df:  lea edx, [esi+esi*2]
 805a4e2:  shl edx, 0x4
 805a4e5:  add eax, edx
 805a4e7:  test eax, eax
 805a4e9:  je 805c370
 805a4ef:  mov ecx, DWORD PTR [ebp-0x508]
 805a4f5:  mov ebx, DWORD PTR [ebp-0x500]
 805a4fb:  mov esi, DWORD PTR [ebp-0x484]
 805a501:  mov eax, DWORD PTR [ecx+edx+0x24]
 805a505:  lea eax, [eax+eax*2]
 805a508:  mov eax, DWORD PTR [ebx+eax*4]
 805a50b:  mov DWORD PTR [ebp-0x49c], esi
 805a511:  test eax, eax
 805a513:  je 805b476
 805a519:  mov esi, eax
 805a51b:  mov eax, DWORD PTR [ebp-0x49c]
 805a521:  mov DWORD PTR [ebp-0x4f8], 0x0
 805a52b:  mov DWORD PTR [ebp-0x4f4], 0x10
 805a535:  mov DWORD PTR [ebp-0x4ec], 0x1
 805a53f:  mov DWORD PTR [ebp-0x484], eax
 805a545:  mov DWORD PTR [ebp-0x4dc], 0x0
 805a54f:  mov BYTE PTR [ebp-0x4b9], 0x78
 805a556:  cmp DWORD PTR [ebp-0x4c4], 0x0
 805a55d:  jl 805b58e
 805a563:  jne 805ad07
 805a569:  test esi, esi
 805a56b:  mov BYTE PTR [ebp-0x4ba], 0x20
 805a572:  jne 805ad0e
 805a578:  cmp DWORD PTR [ebp-0x4f4], 0x8
 805a57f:  je 805bf0f
 805a585:  mov ecx, DWORD PTR [ebp-0x56c]
 805a58b:  mov BYTE PTR [ebp-0x4ba], 0x20
 805a592:  mov DWORD PTR [ebp-0x4f0], ecx
 805a598:  mov DWORD PTR [ebp-0x4ac], ecx
 805a59e:  jmp 8059f98
 805a5a3:  mov ebx, DWORD PTR [ebp+0x8]
 805a5a6:  mov eax, DWORD PTR [ebx+0x14]
 805a5a9:  cmp eax, DWORD PTR [ebx+0x18]
 805a5ac:  jae 805cea3
 805a5b2:  mov BYTE PTR [eax], 0x25
 805a5b5:  mov esi, DWORD PTR [ebp+0x8]
 805a5b8:  add eax, 0x1
 805a5bb:  mov DWORD PTR [esi+0x14], eax
 805a5be:  cmp edi, 0x7fffffff
 805a5c4:  je 8058ab6
 805a5ca:  add edi, 0x1
 805a5cd:  jmp 8058d80
 805a5d2:  mov eax, DWORD PTR [ebp-0x4d8]
 805a5d8:  test eax, eax
 805a5da:  je 805ba8a
 805a5e0:  mov eax, DWORD PTR [ebp-0x564]
 805a5e6:  lea edx, [eax+eax*2]
 805a5e9:  mov eax, DWORD PTR [ebp-0x508]
 805a5ef:  shl edx, 0x4
 805a5f2:  add eax, edx
 805a5f4:  test eax, eax
 805a5f6:  je 805c855
 805a5fc:  mov ebx, DWORD PTR [ebp-0x508]
 805a602:  mov esi, DWORD PTR [ebp-0x500]
 805a608:  mov eax, DWORD PTR [ebx+edx+0x24]
 805a60c:  lea eax, [eax+eax*2]
 805a60f:  mov edx, DWORD PTR [esi+eax*4+0x4]
 805a613:  mov eax, DWORD PTR [esi+eax*4]
 805a616:  mov ecx, edx
 805a618:  shr ecx, 0x1f
 805a61b:  test ecx, ecx
 805a61d:  mov DWORD PTR [ebp-0x4f8], ecx
 805a623:  je 805a62c
 805a625:  neg eax
 805a627:  adc edx, 0x0
 805a62a:  neg edx
 805a62c:  mov esi, eax
 805a62e:  mov eax, DWORD PTR [ebp-0x484]
 805a634:  mov ebx, edx
 805a636:  mov DWORD PTR [ebp-0x4f4], 0xa
 805a640:  mov DWORD PTR [ebp-0x4a0], eax
 805a646:  jmp 8059f20
 805a64b:  mov DWORD PTR [ebp-0x4f4], 0x10
 805a655:  jmp 8059eb2
 805a65a:  mov ecx, DWORD PTR [ebp-0x564]
 805a660:  mov edx, DWORD PTR [ebp-0x508]
 805a666:  lea eax, [ecx+ecx*2]
 805a669:  shl eax, 0x4
 805a66c:  add edx, eax
 805a66e:  je 805c0b8
 805a674:  mov eax, DWORD PTR [edx+0x24]
 805a677:  mov ecx, DWORD PTR [ebp-0x500]
 805a67d:  lea eax, [eax+eax*2]
 805a680:  lea eax, [ecx+eax*4]
 805a683:  mov DWORD PTR [ebp-0x14], eax
 805a686:  lea eax, [ebp-0x14]
 805a689:  mov DWORD PTR [esp+0x4], edx
 805a68d:  mov DWORD PTR [esp+0x8], eax
 805a691:  mov ebx, DWORD PTR [ebp+0x8]
 805a694:  mov DWORD PTR [esp], ebx
 805a697:  call 805d430
 805a69c:  mov edx, eax
 805a69e:  jmp 8059d2a
 805a6a3:  mov esi, DWORD PTR [ebp-0x4cc]
 805a6a9:  test esi, esi
 805a6ab:  jne 8058c04
 805a6b1:  mov esi, DWORD PTR [ebp-0x4c8]
 805a6b7:  mov ebx, DWORD PTR [ebp-0x4e4]
 805a6bd:  sub esi, 0x1
 805a6c0:  test ebx, ebx
 805a6c2:  jne 805a6ff
 805a6c4:  test esi, esi
 805a6c6:  jle 805a6ff
 805a6c8:  mov DWORD PTR [esp+0x8], esi
 805a6cc:  mov DWORD PTR [esp+0x4], 0x20
 805a6d4:  mov eax, DWORD PTR [ebp+0x8]
 805a6d7:  mov DWORD PTR [esp], eax
 805a6da:  call 8062880
 805a6df:  cmp edi, 0x7ffffffe
 805a6e5:  mov edx, eax
 805a6e7:  ja 805a796
 805a6ed:  mov eax, 0x7fffffff
 805a6f2:  sub eax, edi
 805a6f4:  cmp edx, eax
 805a6f6:  ja 8058ab6
 805a6fc:  lea edi, [edx+edi]
 805a6ff:  mov ecx, DWORD PTR [ebp-0x564]
 805a705:  mov eax, DWORD PTR [ebp-0x508]
 805a70b:  lea edx, [ecx+ecx*2]
 805a70e:  shl edx, 0x4
 805a711:  add eax, edx
 805a713:  test eax, eax
 805a715:  je 805c80f
 805a71b:  mov ecx, DWORD PTR [ebp-0x508]
 805a721:  mov ebx, DWORD PTR [ebp-0x500]
 805a727:  mov eax, DWORD PTR [ecx+edx+0x24]
 805a72b:  mov ecx, DWORD PTR [ebp+0x8]
 805a72e:  lea eax, [eax+eax*2]
 805a731:  movzx edx, BYTE PTR [ebx+eax*4]
 805a735:  mov eax, DWORD PTR [ecx+0x14]
 805a738:  cmp eax, DWORD PTR [ecx+0x18]
 805a73b:  jae 805cf03
 805a741:  mov BYTE PTR [eax], dl
 805a743:  mov ebx, DWORD PTR [ebp+0x8]
 805a746:  add eax, 0x1
 805a749:  mov DWORD PTR [ebx+0x14], eax
 805a74c:  cmp edi, 0x7fffffff
 805a752:  je 8058ab6
 805a758:  add edi, 0x1
 805a75b:  mov ecx, DWORD PTR [ebp-0x4e4]
 805a761:  test ecx, ecx
 805a763:  je 8058d80
 805a769:  test esi, esi
 805a76b:  jle 8058d80
 805a771:  mov DWORD PTR [esp+0x8], esi
 805a775:  mov DWORD PTR [esp+0x4], 0x20
 805a77d:  mov esi, DWORD PTR [ebp+0x8]
 805a780:  mov DWORD PTR [esp], esi
 805a783:  call 8062880
 805a788:  cmp edi, 0x7ffffffe
 805a78e:  mov edx, eax
 805a790:  jbe 8059d3e
 805a796:  mov DWORD PTR [esp+0xc], 0x80b0e19
 805a79e:  mov DWORD PTR [esp+0x8], 0x754
 805a7a6:  mov DWORD PTR [esp+0x4], 0x80b0dd7
 805a7ae:  mov DWORD PTR [esp], 0x80b0e40
 805a7b5:  call 8051490
 805a7ba:  lea esi, [esi]
 805a7c0:  cmp BYTE PTR [ebp-0x51d], 0x0
 805a7c7:  je 8058ab6
 805a7cd:  mov esi, DWORD PTR [ebp-0x570]
 805a7d3:  sub esp, 0x610
 805a7d9:  lea ebx, [esp+0x23]
 805a7dd:  and ebx, 0xf0
 805a7e0:  mov DWORD PTR [ebp-0x508], ebx
 805a7e6:  mov DWORD PTR [ebp-0x10], 0x0
 805a7ed:  mov DWORD PTR [esp], esi
 805a7f0:  call 804b4a0
 805a7f5:  cmp DWORD PTR [ebp-0x57c], 0xff
 805a7fc:  je 805c612
 805a802:  mov eax, DWORD PTR [ebp-0x574]
 805a808:  cmp BYTE PTR [eax], 0x0
 805a80b:  je 805ca8e
 805a811:  mov DWORD PTR [ebp-0x578], eax
 805a817:  mov ebx, DWORD PTR [ebp-0x508]
 805a81d:  mov DWORD PTR [ebp-0x50c], 0x20
 805a827:  mov DWORD PTR [ebp-0x504], 0x0
 805a831:  mov DWORD PTR [ebp-0x510], 0x0
 805a83b:  mov DWORD PTR [ebp-0x4a4], 0x0
 805a845:  jmp 805a856
 805a847:  nop
 805a848:  mov DWORD PTR [ebp-0x4a4], esi
 805a84e:  mov ebx, edx
 805a850:  mov DWORD PTR [ebp-0x508], edx
 805a856:  add ebx, DWORD PTR [ebp-0x4a4]
 805a85c:  lea edx, [ebp-0x10]
 805a85f:  mov DWORD PTR [esp+0xc], edx
 805a863:  mov DWORD PTR [esp+0x8], ebx
 805a867:  mov ecx, DWORD PTR [ebp-0x504]
 805a86d:  mov DWORD PTR [esp+0x4], ecx
 805a871:  mov esi, DWORD PTR [ebp-0x578]
 805a877:  mov DWORD PTR [esp], esi
 805a87a:  call 8061870
 805a87f:  mov ebx, DWORD PTR [ebx+0x18]
 805a882:  add DWORD PTR [ebp-0x510], 0x1
 805a889:  add DWORD PTR [ebp-0x504], eax
 805a88f:  mov DWORD PTR [ebp-0x578], ebx
 805a895:  cmp BYTE PTR [ebx], 0x0
 805a898:  je 805b066
 805a89e:  mov ecx, DWORD PTR [ebp-0x4a4]
 805a8a4:  mov ebx, DWORD PTR [ebp-0x510]
 805a8aa:  cmp DWORD PTR [ebp-0x50c], ebx
 805a8b0:  mov edx, DWORD PTR [ebp-0x508]
 805a8b6:  lea esi, [ecx+0x30]
 805a8b9:  ja 805a848
 805a8bb:  shl DWORD PTR [ebp-0x50c], 1
 805a8c1:  mov esi, DWORD PTR [ebp-0x50c]
 805a8c7:  lea eax, [esi+esi*2]
 805a8ca:  mov esi, DWORD PTR [ebp-0x4a4]
 805a8d0:  shl eax, 0x4
 805a8d3:  add eax, 0x10
 805a8d6:  sub esp, eax
 805a8d8:  add esi, 0x30
 805a8db:  lea ebx, [esp+0x23]
 805a8df:  add edx, esi
 805a8e1:  and ebx, 0xf0
 805a8e4:  cmp edx, ebx
 805a8e6:  je 805b2c8
 805a8ec:  mov DWORD PTR [esp+0x8], esi
 805a8f0:  mov eax, DWORD PTR [ebp-0x508]
 805a8f6:  mov DWORD PTR [esp], ebx
 805a8f9:  mov DWORD PTR [esp+0x4], eax
 805a8fd:  call 804efc0
 805a902:  lea eax, [ebx+esi]
 805a905:  mov edx, ebx
 805a907:  cmp DWORD PTR [ebp-0x508], eax
 805a90d:  jne 805a848
 805a913:  mov eax, DWORD PTR [ebp-0x50c]
 805a919:  mov edx, ebx
 805a91b:  shr eax, 1
 805a91d:  add DWORD PTR [ebp-0x50c], eax
 805a923:  jmp 805a848
 805a928:  mov edx, DWORD PTR ds:0x80d2e78
 805a92e:  test edx, edx
 805a930:  je 805c4be
 805a936:  mov esi, DWORD PTR [ebp-0x564]
 805a93c:  mov ecx, DWORD PTR [ebp-0x508]
 805a942:  lea eax, [esi+esi*2]
 805a945:  shl eax, 0x4
 805a948:  add ecx, eax
 805a94a:  mov eax, DWORD PTR [ecx+0x8]
 805a94d:  mov eax, DWORD PTR [edx+eax*4]
 805a950:  test eax, eax
 805a952:  mov DWORD PTR [ebp-0x5d8], eax
 805a958:  je 805cda4
 805a95e:  mov eax, DWORD PTR [ecx+0x2c]
 805a961:  lea eax, [eax*4+0x10]
 805a968:  sub esp, eax
 805a96a:  mov eax, DWORD PTR [ecx+0x2c]
 805a96d:  lea ebx, [esp+0x23]
 805a971:  and ebx, 0xf0
 805a974:  test eax, eax
 805a976:  je 805a996
 805a978:  mov esi, DWORD PTR [ebp-0x500]
 805a97e:  xor edx, edx
 805a980:  mov eax, edx
 805a982:  add eax, DWORD PTR [ecx+0x24]
 805a985:  lea eax, [eax+eax*2]
 805a988:  lea eax, [esi+eax*4]
 805a98b:  mov DWORD PTR [ebx+edx*4], eax
 805a98e:  add edx, 0x1
 805a991:  cmp DWORD PTR [ecx+0x2c], edx
 805a994:  ja 805a980
 805a996:  mov DWORD PTR [esp+0x8], ebx
 805a99a:  mov DWORD PTR [esp+0x4], ecx
 805a99e:  mov eax, DWORD PTR [ebp+0x8]
 805a9a1:  mov DWORD PTR [esp], eax
 805a9a4:  call DWORD PTR [ebp-0x5d8]
 805a9aa:  test eax, eax
 805a9ac:  mov edx, eax
 805a9ae:  js 8058ab6
 805a9b4:  cmp edi, 0x7ffffffe
 805a9ba:  jbe 8059d3e
 805a9c0:  mov DWORD PTR [esp+0xc], 0x80b0e19
 805a9c8:  mov DWORD PTR [esp+0x8], 0x777
 805a9d0:  mov DWORD PTR [esp+0x4], 0x80b0dd7
 805a9d8:  mov DWORD PTR [esp], 0x80b0e40
 805a9df:  call 8051490
 805a9e4:  lea esi, [esi]
 805a9e8:  mov ecx, DWORD PTR [ebp-0x5d4]
 805a9ee:  mov edi, 0xffffffff
 805a9f3:  mov DWORD PTR [ecx+edx], 0x16
 805a9fa:  jmp 8058996
 805a9ff:  mov eax, DWORD PTR [ebp+0x8]
 805aa02:  mov DWORD PTR [esp+0x4], 0x8061830
 805aa0a:  mov DWORD PTR [esp+0x8], eax
 805aa0e:  lea eax, [ebp-0x74]
 805aa11:  mov DWORD PTR [esp], eax
 805aa14:  call 0
 805aa19:  mov ecx, DWORD PTR [ebp+0x8]
 805aa1c:  jmp 80587f6
 805aa21:  neg eax
 805aa23:  or ecx, 0x20
 805aa26:  mov BYTE PTR [ebx+0xc], cl
 805aa29:  mov DWORD PTR [ebx+0x4], eax
 805aa2c:  mov DWORD PTR [ebp-0x4e4], 0x1
 805aa36:  jmp 8058efa
 805aa3b:  mov eax, DWORD PTR [ebp-0x554]
 805aa41:  test eax, eax
 805aa43:  jne 805b760
 805aa49:  mov eax, DWORD PTR [ebp-0x540]
 805aa4f:  test eax, eax
 805aa51:  jne 805b97b
 805aa57:  mov eax, DWORD PTR [ebp-0x548]
 805aa5d:  test eax, eax
 805aa5f:  jne 805bd2e
 805aa65:  mov eax, DWORD PTR [ebp-0x5cc]
 805aa6b:  test eax, eax
 805aa6d:  je 805aa86
 805aa6f:  mov ebx, DWORD PTR [ebp-0x54c]
 805aa75:  test ebx, ebx
 805aa77:  je 805aa86
 805aa79:  cmp DWORD PTR [ebp-0x550], 0x10
 805aa80:  je 805c428
 805aa86:  mov ecx, DWORD PTR [ebp-0x528]
 805aa8c:  test ecx, ecx
 805aa8e:  je 805aacd
 805aa90:  mov eax, DWORD PTR [ebp-0x528]
 805aa96:  mov DWORD PTR [esp+0x4], 0x30
 805aa9e:  mov DWORD PTR [esp+0x8], eax
 805aaa2:  mov edx, DWORD PTR [ebp+0x8]
 805aaa5:  mov DWORD PTR [esp], edx
 805aaa8:  call 8062880
 805aaad:  cmp edi, 0x7ffffffe
 805aab3:  mov edx, eax
 805aab5:  ja 8059e82
 805aabb:  mov eax, 0x7fffffff
 805aac0:  sub eax, edi
 805aac2:  cmp edx, eax
 805aac4:  ja 8058ab6
 805aaca:  lea edi, [edx+edi]
 805aacd:  test edi, edi
 805aacf:  js 805cc79
 805aad5:  mov ecx, DWORD PTR [ebp+0x8]
 805aad8:  mov ebx, DWORD PTR [ebp-0x56c]
 805aade:  sub ebx, DWORD PTR [ebp-0x4a8]
 805aae4:  mov eax, DWORD PTR [ecx+0x94]
 805aaea:  mov DWORD PTR [esp+0x8], ebx
 805aaee:  mov DWORD PTR [esp+0x4], esi
 805aaf2:  mov DWORD PTR [esp], ecx
 805aaf5:  call DWORD PTR [eax+0x1c]
 805aaf8:  cmp ebx, eax
 805aafa:  jne 8058ab6
 805ab00:  mov esi, 0x7fffffff
 805ab05:  mov eax, esi
 805ab07:  sub eax, edi
 805ab09:  cmp ebx, eax
 805ab0b:  ja 8058ab6
 805ab11:  mov eax, DWORD PTR [ebp-0x528]
 805ab17:  add edi, ebx
 805ab19:  sub DWORD PTR [ebp-0x5b0], eax
 805ab1f:  mov eax, DWORD PTR [ebp-0x5b0]
 805ab25:  add eax, DWORD PTR [ebp-0x48c]
 805ab2b:  test eax, eax
 805ab2d:  jle 8059108
 805ab33:  mov DWORD PTR [esp+0x8], eax
 805ab37:  mov DWORD PTR [esp+0x4], 0x20
 805ab3f:  mov edx, DWORD PTR [ebp+0x8]
 805ab42:  mov DWORD PTR [esp], edx
 805ab45:  call 8062880
 805ab4a:  cmp edi, 0x7ffffffe
 805ab50:  ja 8059e82
 805ab56:  sub esi, edi
 805ab58:  cmp eax, esi
 805ab5a:  ja 8058ab6
 805ab60:  lea edi, [eax+edi]
 805ab63:  nop
 805ab64:  lea esi, [esi]
 805ab68:  jmp 8059108
 805ab6d:  mov eax, DWORD PTR [ebp-0x4f8]
 805ab73:  test eax, eax
 805ab75:  jne 805b72a
 805ab7b:  mov eax, DWORD PTR [ebp-0x4e0]
 805ab81:  test eax, eax
 805ab83:  jne 805b8d3
 805ab89:  mov eax, DWORD PTR [ebp-0x4e8]
 805ab8f:  test eax, eax
 805ab91:  jne 805bd0e
 805ab97:  test esi, esi
 805ab99:  je 805abb2
 805ab9b:  mov eax, DWORD PTR [ebp-0x4ec]
 805aba1:  test eax, eax
 805aba3:  je 805abb2
 805aba5:  cmp DWORD PTR [ebp-0x4f4], 0x10
 805abac:  je 805c5af
 805abb2:  mov esi, DWORD PTR [ebp-0x488]
 805abb8:  test esi, esi
 805abba:  je 805abf9
 805abbc:  mov esi, DWORD PTR [ebp-0x488]
 805abc2:  mov DWORD PTR [esp+0x4], 0x30
 805abca:  mov DWORD PTR [esp+0x8], esi
 805abce:  mov eax, DWORD PTR [ebp+0x8]
 805abd1:  mov DWORD PTR [esp], eax
 805abd4:  call 8062880
 805abd9:  cmp edi, 0x7ffffffe
 805abdf:  mov edx, eax
 805abe1:  ja 805cd0c
 805abe7:  mov eax, 0x7fffffff
 805abec:  sub eax, edi
 805abee:  cmp edx, eax
 805abf0:  ja 8058ab6
 805abf6:  lea edi, [edx+edi]
 805abf9:  test edi, edi
 805abfb:  js 805ce7f
 805ac01:  mov ebx, DWORD PTR [ebp-0x56c]
 805ac07:  mov edx, DWORD PTR [ebp+0x8]
 805ac0a:  sub ebx, DWORD PTR [ebp-0x4ac]
 805ac10:  mov eax, DWORD PTR [edx+0x94]
 805ac16:  mov DWORD PTR [esp+0x8], ebx
 805ac1a:  mov ecx, DWORD PTR [ebp-0x4f0]
 805ac20:  mov DWORD PTR [esp], edx
 805ac23:  mov DWORD PTR [esp+0x4], ecx
 805ac27:  call DWORD PTR [eax+0x1c]
 805ac2a:  cmp ebx, eax
 805ac2c:  jne 8058ab6
 805ac32:  mov esi, 0x7fffffff
 805ac37:  mov eax, esi
 805ac39:  sub eax, edi
 805ac3b:  cmp ebx, eax
 805ac3d:  ja 8058ab6
 805ac43:  mov eax, DWORD PTR [ebp-0x488]
 805ac49:  add edi, ebx
 805ac4b:  sub DWORD PTR [ebp-0x598], eax
 805ac51:  mov eax, DWORD PTR [ebp-0x598]
 805ac57:  add eax, DWORD PTR [ebp-0x4c8]
 805ac5d:  test eax, eax
 805ac5f:  jle 8058d80
 805ac65:  mov DWORD PTR [esp+0x8], eax
 805ac69:  mov DWORD PTR [esp+0x4], 0x20
 805ac71:  mov edx, DWORD PTR [ebp+0x8]
 805ac74:  mov DWORD PTR [esp], edx
 805ac77:  call 8062880
 805ac7c:  cmp edi, 0x7ffffffe
 805ac82:  ja 805cd0c
 805ac88:  sub esi, edi
 805ac8a:  cmp eax, esi
 805ac8c:  ja 8058ab6
 805ac92:  lea edi, [eax+edi]
 805ac95:  lea esi, [esi]
 805ac98:  jmp 8058d80
 805ac9d:  test esi, esi
 805ac9f:  nop
 805aca0:  je 8059f98
 805aca6:  mov eax, DWORD PTR [ebp-0x4ec]
 805acac:  test eax, eax
 805acae:  je 8059f98
 805acb4:  cmp DWORD PTR [ebp-0x4f4], 0x8
 805acbb:  jne 8059f98
 805acc1:  sub DWORD PTR [ebp-0x4f0], 0x1
 805acc8:  mov edx, DWORD PTR [ebp-0x4f0]
 805acce:  mov BYTE PTR [edx], 0x30
 805acd1:  mov DWORD PTR [ebp-0x4ac], edx
 805acd7:  jmp 8059f98
 805acdc:  mov DWORD PTR [esp], ebx
 805acdf:  call 8074540
 805ace4:  test eax, eax
 805ace6:  jne 8058f64
 805acec:  mov DWORD PTR [esp], ebx
 805acef:  call 804d6f0
 805acf4:  add ebx, eax
 805acf6:  mov DWORD PTR [ebp-0x570], eax
 805acfc:  mov DWORD PTR [ebp-0x56c], ebx
 805ad02:  jmp 8058f86
 805ad07:  mov BYTE PTR [ebp-0x4ba], 0x20
 805ad0e:  xor eax, eax
 805ad10:  cmp BYTE PTR [ebp-0x4b9], 0x58
 805ad17:  sete al
 805ad1a:  mov DWORD PTR [esp+0xc], eax
 805ad1e:  mov edx, DWORD PTR [ebp-0x4f4]
 805ad24:  mov DWORD PTR [esp+0x8], edx
 805ad28:  mov ecx, DWORD PTR [ebp-0x56c]
 805ad2e:  mov DWORD PTR [esp], esi
 805ad31:  mov DWORD PTR [esp+0x4], ecx
 805ad35:  call 8057700
 805ad3a:  mov DWORD PTR [ebp-0x4f0], eax
 805ad40:  mov eax, DWORD PTR [ebp-0x4dc]
 805ad46:  test eax, eax
 805ad48:  je 805ad7d
 805ad4a:  mov eax, DWORD PTR [ebp-0x57c]
 805ad50:  test eax, eax
 805ad52:  je 805ad7d
 805ad54:  mov ebx, DWORD PTR [ebp-0x580]
 805ad5a:  mov DWORD PTR [esp], ebx
 805ad5d:  mov ecx, DWORD PTR [ebp-0x57c]
 805ad63:  mov edx, DWORD PTR [ebp-0x56c]
 805ad69:  mov eax, DWORD PTR [ebp-0x4f0]
 805ad6f:  call 80583b0
 805ad74:  sub esp, 0x4
 805ad77:  mov DWORD PTR [ebp-0x4f0], eax
 805ad7d:  mov eax, DWORD PTR [ebp-0x4c0]
 805ad83:  test eax, eax
 805ad85:  je 805ad94
 805ad87:  cmp DWORD PTR [ebp-0x4f4], 0xa
 805ad8e:  je 805b7dd
 805ad94:  mov eax, DWORD PTR [ebp-0x4f0]
 805ad9a:  mov DWORD PTR [ebp-0x4ac], eax
 805ada0:  mov eax, DWORD PTR [ebp-0x56c]
 805ada6:  sub eax, DWORD PTR [ebp-0x4f0]
 805adac:  jmp 8059f8c
 805adb1:  mov DWORD PTR [ebp-0x478], 0x1
 805adbb:  xor eax, eax
 805adbd:  cmp BYTE PTR [ebp-0x51d], 0x58
 805adc4:  sete al
 805adc7:  mov DWORD PTR [esp+0xc], eax
 805adcb:  mov edx, DWORD PTR [ebp-0x550]
 805add1:  mov DWORD PTR [esp+0x8], edx
 805add5:  mov ecx, DWORD PTR [ebp-0x56c]
 805addb:  mov DWORD PTR [esp+0x4], ecx
 805addf:  mov ebx, DWORD PTR [ebp-0x5cc]
 805ade5:  mov DWORD PTR [esp], ebx
 805ade8:  call 8057700
 805aded:  mov esi, eax
 805adef:  mov eax, DWORD PTR [ebp-0x53c]
 805adf5:  test eax, eax
 805adf7:  je 805ae24
 805adf9:  mov eax, DWORD PTR [ebp-0x57c]
 805adff:  test eax, eax
 805ae01:  je 805ae24
 805ae03:  mov eax, DWORD PTR [ebp-0x580]
 805ae09:  mov DWORD PTR [esp], eax
 805ae0c:  mov ecx, DWORD PTR [ebp-0x57c]
 805ae12:  mov eax, esi
 805ae14:  mov edx, DWORD PTR [ebp-0x56c]
 805ae1a:  call 80583b0
 805ae1f:  sub esp, 0x4
 805ae22:  mov esi, eax
 805ae24:  mov eax, DWORD PTR [ebp-0x524]
 805ae2a:  test eax, eax
 805ae2c:  je 805ae48
 805ae2e:  cmp DWORD PTR [ebp-0x550], 0xa
 805ae35:  jne 805ae48
 805ae37:  mov ecx, DWORD PTR [ebp-0x56c]
 805ae3d:  mov eax, esi
 805ae3f:  mov edx, ecx
 805ae41:  call 80584f0
 805ae46:  mov esi, eax
 805ae48:  mov eax, DWORD PTR [ebp-0x56c]
 805ae4e:  mov DWORD PTR [ebp-0x4a8], esi
 805ae54:  sub eax, esi
 805ae56:  jmp 8059aff
 805ae5b:  mov ebx, DWORD PTR [ebp-0x564]
 805ae61:  mov eax, DWORD PTR [ebp-0x508]
 805ae67:  lea edx, [ebx+ebx*2]
 805ae6a:  shl edx, 0x4
 805ae6d:  add eax, edx
 805ae6f:  test eax, eax
 805ae71:  je 805c652
 805ae77:  mov ecx, DWORD PTR [ebp-0x4d0]
 805ae7d:  test ecx, ecx
 805ae7f:  je 805b796
 805ae85:  mov ebx, DWORD PTR [ebp-0x508]
 805ae8b:  mov eax, DWORD PTR [ebx+edx+0x24]
 805ae8f:  mov edx, DWORD PTR [ebp-0x500]
 805ae95:  lea eax, [eax+eax*2]
 805ae98:  movzx esi, BYTE PTR [edx+eax*4]
 805ae9c:  mov DWORD PTR [ebp-0x4f8], 0x0
 805aea6:  mov DWORD PTR [ebp-0x4e8], 0x0
 805aeb0:  mov DWORD PTR [ebp-0x4e0], 0x0
 805aeba:  jmp 805a556
 805aebf:  mov ebx, DWORD PTR [ebp-0x52c]
 805aec5:  test ebx, ebx
 805aec7:  je 805b60e
 805aecd:  mov esi, DWORD PTR [ebp-0x484]
 805aed3:  mov ebx, DWORD PTR [ebp-0x484]
 805aed9:  mov DWORD PTR [ebp-0x554], 0x0
 805aee3:  mov DWORD PTR [ebp-0x548], 0x0
 805aeed:  movzx esi, BYTE PTR [esi]
 805aef0:  add ebx, 0x4
 805aef3:  mov DWORD PTR [ebp+0x10], ebx
 805aef6:  mov DWORD PTR [ebp-0x540], 0x0
 805af00:  mov DWORD PTR [ebp-0x5cc], esi
 805af06:  jmp 805a1e5
 805af0b:  mov DWORD PTR [ebp-0x478], 0x1
 805af15:  xor eax, eax
 805af17:  cmp BYTE PTR [ebp-0x51d], 0x58
 805af1e:  sete al
 805af21:  mov DWORD PTR [esp+0x10], eax
 805af25:  mov esi, DWORD PTR [ebp-0x550]
 805af2b:  mov DWORD PTR [esp+0xc], esi
 805af2f:  mov eax, DWORD PTR [ebp-0x56c]
 805af35:  mov DWORD PTR [esp+0x8], eax
 805af39:  mov edx, DWORD PTR [ebp-0x5cc]
 805af3f:  mov DWORD PTR [esp+0x4], ebx
 805af43:  mov DWORD PTR [esp], edx
 805af46:  call 80577b0
 805af4b:  mov esi, eax
 805af4d:  mov eax, DWORD PTR [ebp-0x53c]
 805af53:  test eax, eax
 805af55:  je 805af82
 805af57:  mov eax, DWORD PTR [ebp-0x57c]
 805af5d:  test eax, eax
 805af5f:  je 805af82
 805af61:  mov ecx, DWORD PTR [ebp-0x580]
 805af67:  mov eax, esi
 805af69:  mov DWORD PTR [esp], ecx
 805af6c:  mov ecx, DWORD PTR [ebp-0x57c]
 805af72:  mov edx, DWORD PTR [ebp-0x56c]
 805af78:  call 80583b0
 805af7d:  sub esp, 0x4
 805af80:  mov esi, eax
 805af82:  mov eax, DWORD PTR [ebp-0x524]
 805af88:  test eax, eax
 805af8a:  je 8059adf
 805af90:  cmp DWORD PTR [ebp-0x550], 0xa
 805af97:  jne 8059adf
 805af9d:  mov ecx, DWORD PTR [ebp-0x56c]
 805afa3:  mov eax, esi
 805afa5:  mov edx, ecx
 805afa7:  call 80584f0
 805afac:  mov esi, eax
 805afae:  jmp 8059adf
 805afb3:  mov BYTE PTR [ebp-0x4ba], 0x20
 805afba:  xor eax, eax
 805afbc:  cmp BYTE PTR [ebp-0x4b9], 0x58
 805afc3:  sete al
 805afc6:  mov DWORD PTR [esp+0x10], eax
 805afca:  mov edx, DWORD PTR [ebp-0x4f4]
 805afd0:  mov DWORD PTR [esp+0xc], edx
 805afd4:  mov ecx, DWORD PTR [ebp-0x56c]
 805afda:  mov DWORD PTR [esp], esi
 805afdd:  mov DWORD PTR [esp+0x4], ebx
 805afe1:  mov DWORD PTR [esp+0x8], ecx
 805afe5:  call 80577b0
 805afea:  mov DWORD PTR [ebp-0x4f0], eax
 805aff0:  mov eax, DWORD PTR [ebp-0x4dc]
 805aff6:  test eax, eax
 805aff8:  je 805b02d
 805affa:  mov eax, DWORD PTR [ebp-0x57c]
 805b000:  test eax, eax
 805b002:  je 805b02d
 805b004:  mov eax, DWORD PTR [ebp-0x580]
 805b00a:  mov DWORD PTR [esp], eax
 805b00d:  mov ecx, DWORD PTR [ebp-0x57c]
 805b013:  mov edx, DWORD PTR [ebp-0x56c]
 805b019:  mov eax, DWORD PTR [ebp-0x4f0]
 805b01f:  call 80583b0
 805b024:  sub esp, 0x4
 805b027:  mov DWORD PTR [ebp-0x4f0], eax
 805b02d:  mov eax, DWORD PTR [ebp-0x4c0]
 805b033:  test eax, eax
 805b035:  je 8059f64
 805b03b:  cmp DWORD PTR [ebp-0x4f4], 0xa
 805b042:  jne 8059f64
 805b048:  mov ecx, DWORD PTR [ebp-0x56c]
 805b04e:  mov eax, DWORD PTR [ebp-0x4f0]
 805b054:  mov edx, ecx
 805b056:  call 80584f0
 805b05b:  mov DWORD PTR [ebp-0x4f0], eax
 805b061:  jmp 8059f64
 805b066:  mov eax, DWORD PTR [ebp-0x510]
 805b06c:  mov ebx, DWORD PTR [ebp-0x508]
 805b072:  mov DWORD PTR [ebp-0x47c], eax
 805b078:  mov edx, DWORD PTR [ebp-0x504]
 805b07e:  mov eax, DWORD PTR [ebp-0x10]
 805b081:  mov DWORD PTR [ebp-0x490], edx
 805b087:  cmp edx, eax
 805b089:  jae 805b093
 805b08b:  mov DWORD PTR [ebp-0x490], eax
 805b091:  mov edx, eax
 805b093:  mov esi, DWORD PTR [ebp+0x8]
 805b096:  shl edx, 0x2
 805b099:  lea eax, [edx+0x10]
 805b09c:  sub esp, eax
 805b09e:  lea ecx, [esp+0x23]
 805b0a2:  mov eax, DWORD PTR [esi+0x3c]
 805b0a5:  and ecx, 0xf0
 805b0a8:  mov DWORD PTR [ebp-0x5bc], ecx
 805b0ae:  mov DWORD PTR [esp+0x8], edx
 805b0b2:  mov DWORD PTR [esp], ecx
 805b0b5:  and eax, 0x4
 805b0b8:  cmp eax, 0x1
 805b0bb:  sbb eax, eax
 805b0bd:  not eax
 805b0bf:  mov DWORD PTR [esp+0x4], eax
 805b0c3:  call 804ef50
 805b0c8:  mov edx, DWORD PTR [ebp-0x490]
 805b0ce:  lea eax, [edx+edx*2]
 805b0d1:  lea eax, [eax*4+0x10]
 805b0d8:  sub esp, eax
 805b0da:  mov eax, DWORD PTR [ebp-0x47c]
 805b0e0:  lea ecx, [esp+0x23]
 805b0e4:  and ecx, 0xf0
 805b0e7:  mov DWORD PTR [ebp-0x5c0], ecx
 805b0ed:  test eax, eax
 805b0ef:  mov DWORD PTR [ebp-0x500], ecx
 805b0f5:  je 805b194
 805b0fb:  mov DWORD PTR [ebp-0x4fc], 0x0
 805b105:  jmp 805b14d
 805b107:  mov eax, ds:0x80d2f40
 805b10c:  mov edx, DWORD PTR [ebp-0x5bc]
 805b112:  mov ecx, DWORD PTR [ebx+0x8]
 805b115:  mov DWORD PTR [ebp-0x5dc], eax
 805b11b:  mov eax, DWORD PTR [ebx+0x24]
 805b11e:  mov DWORD PTR [esp+0x4], esi
 805b122:  mov DWORD PTR [esp], ebx
 805b125:  lea eax, [edx+eax*4]
 805b128:  mov DWORD PTR [esp+0x8], eax
 805b12c:  mov esi, DWORD PTR [ebp-0x5dc]
 805b132:  call DWORD PTR [esi+ecx*4]
 805b135:  add DWORD PTR [ebp-0x4fc], 0x1
 805b13c:  add ebx, 0x30
 805b13f:  mov eax, DWORD PTR [ebp-0x47c]
 805b145:  cmp DWORD PTR [ebp-0x4fc], eax
 805b14b:  jae 805b194
 805b14d:  mov eax, DWORD PTR [ebx+0x20]
 805b150:  cmp eax, 0xff
 805b153:  je 805b162
 805b155:  mov esi, DWORD PTR [ebp-0x5bc]
 805b15b:  mov DWORD PTR [esi+eax*4], 0x0
 805b162:  mov eax, DWORD PTR [ebx+0x1c]
 805b165:  cmp eax, 0xff
 805b168:  je 805b177
 805b16a:  mov edx, DWORD PTR [ebp-0x5bc]
 805b170:  mov DWORD PTR [edx+eax*4], 0x0
 805b177:  mov esi, DWORD PTR [ebx+0x2c]
 805b17a:  test esi, esi
 805b17c:  je 805b135
 805b17e:  cmp esi, 0x1
 805b181:  jne 805b107
 805b183:  mov edx, DWORD PTR [ebx+0x24]
 805b186:  mov eax, DWORD PTR [ebx+0x28]
 805b189:  mov ecx, DWORD PTR [ebp-0x5bc]
 805b18f:  mov DWORD PTR [ecx+edx*4], eax
 805b192:  jmp 805b135
 805b194:  mov eax, DWORD PTR [ebp-0x490]
 805b19a:  xor esi, esi
 805b19c:  mov edx, DWORD PTR [ebp-0x474]
 805b1a2:  mov ebx, DWORD PTR [ebp-0x5c0]
 805b1a8:  test eax, eax
 805b1aa:  mov DWORD PTR [ebp-0x568], edx
 805b1b0:  jne 805b215
 805b1b2:  jmp 8058dfb
 805b1b7:  nop
 805b1b8:  cmp eax, 0x1
 805b1bb:  je 805b26c
 805b1c1:  lea esi, [esi]
 805b1c8:  jle 805b81c
 805b1ce:  cmp eax, 0x3
 805b1d1:  lea esi, [esi]
 805b1d8:  je 805b26c
 805b1de:  mov ecx, DWORD PTR [ebp-0x474]
 805b1e4:  mov edx, DWORD PTR [ebp-0x474]
 805b1ea:  add ecx, 0x4
 805b1ed:  mov DWORD PTR [ebp-0x568], ecx
 805b1f3:  mov eax, DWORD PTR [edx]
 805b1f5:  mov DWORD PTR [ebx], eax
 805b1f7:  add esi, 0x1
 805b1fa:  add ebx, 0xc
 805b1fd:  cmp DWORD PTR [ebp-0x490], esi
 805b203:  jbe 8058dfb
 805b209:  mov ecx, DWORD PTR [ebp-0x568]
 805b20f:  mov DWORD PTR [ebp-0x474], ecx
 805b215:  mov ecx, DWORD PTR [ebp-0x5bc]
 805b21b:  mov eax, DWORD PTR [ecx+esi*4]
 805b21e:  cmp eax, 0x5
 805b221:  je 805b1de
 805b223:  jle 805b1b8
 805b225:  cmp eax, 0x100
 805b22a:  je 805b659
 805b230:  jg 805b28a
 805b232:  cmp eax, 0x6
 805b235:  lea esi, [esi]
 805b238:  je 805b70c
 805b23e:  cmp eax, 0x7
 805b241:  lea esi, [esi]
 805b248:  je 805b6ee
 805b24e:  test ah, 0x8
 805b251:  lea esi, [esi]
 805b258:  jne 805b1de
 805b25a:  fldz
 805b25c:  fstp TBYTE PTR [ebx]
 805b25e:  mov eax, DWORD PTR [ebp-0x474]
 805b264:  mov DWORD PTR [ebp-0x568], eax
 805b26a:  jmp 805b1f7
 805b26c:  mov eax, DWORD PTR [ebp-0x474]
 805b272:  mov edx, DWORD PTR [ebp-0x474]
 805b278:  add eax, 0x4
 805b27b:  mov DWORD PTR [ebp-0x568], eax
 805b281:  mov eax, DWORD PTR [edx]
 805b283:  mov DWORD PTR [ebx], eax
 805b285:  jmp 805b1f7
 805b28a:  cmp eax, 0x200
 805b28f:  je 805b1de
 805b295:  cmp eax, 0x400
 805b29a:  je 805b1de
 805b2a0:  cmp eax, 0x107
 805b2a5:  lea esi, [esi]
 805b2a8:  jne 805b24e
 805b2aa:  mov ecx, DWORD PTR [ebp-0x474]
 805b2b0:  mov edx, DWORD PTR [ebp-0x474]
 805b2b6:  fld TBYTE PTR [ecx]
 805b2b8:  add edx, 0xc
 805b2bb:  mov DWORD PTR [ebp-0x568], edx
 805b2c1:  fstp TBYTE PTR [ebx]
 805b2c3:  jmp 805b1f7
 805b2c8:  mov eax, DWORD PTR [ebp-0x50c]
 805b2ce:  shr eax, 1
 805b2d0:  add DWORD PTR [ebp-0x50c], eax
 805b2d6:  jmp 805a848
 805b2db:  movsx eax, BYTE PTR [ebp-0x51d]
 805b2e2:  mov ecx, DWORD PTR [ebp-0x474]
 805b2e8:  mov esi, DWORD PTR [ebp-0x484]
 805b2ee:  mov DWORD PTR [ebp-0x538], 0x1
 805b2f8:  mov eax, DWORD PTR [eax*4+0x80b1200]
 805b2ff:  mov DWORD PTR [ebp-0x568], ecx
 805b305:  mov DWORD PTR [ebp-0x530], 0x1
 805b30f:  mov edx, DWORD PTR [eax*4+0x80b0f80]
 805b316:  jmp 8058ba0
 805b31b:  movsx eax, BYTE PTR [ebp-0x51d]
 805b322:  mov ecx, DWORD PTR [ebp-0x474]
 805b328:  mov esi, DWORD PTR [ebp-0x484]
 805b32e:  mov DWORD PTR [ebp-0x538], 0x0
 805b338:  mov eax, DWORD PTR [eax*4+0x80b1200]
 805b33f:  mov DWORD PTR [ebp-0x568], ecx
 805b345:  mov DWORD PTR [ebp-0x530], 0x0
 805b34f:  mov edx, DWORD PTR [eax*4+0x80b0f80]
 805b356:  jmp 8058ba0
 805b35b:  cmp DWORD PTR [ebp-0x478], 0x4
 805b362:  mov esi, 0x80b0de2
 805b367:  jg 805b373
 805b369:  mov DWORD PTR [ebp-0x478], 0x5
 805b373:  cmp BYTE PTR [ebp-0x51d], 0x53
 805b37a:  je 8059883
 805b380:  cmp DWORD PTR [ebp-0x478], 0xff
 805b387:  je 805c596
 805b38d:  mov eax, 0xffffffd8
 805b392:  mov ecx, DWORD PTR [ebp-0x5d4]
 805b398:  mov eax, DWORD PTR [ecx+eax]
 805b39b:  mov eax, DWORD PTR [eax]
 805b39d:  cmp DWORD PTR [eax+0x58], 0x1
 805b3a1:  je 805c05b
 805b3a7:  mov eax, DWORD PTR [ebp-0x478]
 805b3ad:  mov DWORD PTR [ebp-0x5a4], esp
 805b3b3:  cmp eax, 0x400
 805b3b8:  mov DWORD PTR [ebp-0x514], eax
 805b3be:  jbe 805b3ca
 805b3c0:  mov DWORD PTR [ebp-0x514], 0x400
 805b3ca:  mov edx, DWORD PTR [ebp-0x514]
 805b3d0:  mov ebx, DWORD PTR [ebp-0x478]
 805b3d6:  mov DWORD PTR [ebp-0x18], esi
 805b3d9:  mov DWORD PTR [ebp-0x2c], 0x0
 805b3e0:  lea eax, [edx*4+0x10]
 805b3e7:  sub esp, eax
 805b3e9:  lea ecx, [esp+0x23]
 805b3ed:  and ecx, 0xf0
 805b3f0:  add ebx, esi
 805b3f2:  sbb eax, eax
 805b3f4:  mov DWORD PTR [ebp-0x5b4], ecx
 805b3fa:  or ebx, eax
 805b3fc:  mov DWORD PTR [ebp-0x28], 0x0
 805b403:  mov eax, DWORD PTR [ebp-0x18]
 805b406:  test eax, eax
 805b408:  je 805ccbb
 805b40e:  cmp ebx, eax
 805b410:  ja 805b438
 805b412:  mov ebx, eax
 805b414:  mov eax, DWORD PTR [ebp-0x2c]
 805b417:  sub ebx, esi
 805b419:  and eax, 0x7
 805b41c:  sub ebx, eax
 805b41e:  mov DWORD PTR [ebp-0x518], 0x0
 805b428:  mov esp, DWORD PTR [ebp-0x5a4]
 805b42e:  jmp 80598fc
 805b433:  nop
 805b434:  lea esi, [esi]
 805b438:  lea edx, [ebp-0x2c]
 805b43b:  mov DWORD PTR [esp+0x10], edx
 805b43f:  mov ecx, DWORD PTR [ebp-0x514]
 805b445:  mov edx, ebx
 805b447:  sub edx, eax
 805b449:  mov DWORD PTR [esp+0x8], edx
 805b44d:  mov DWORD PTR [esp+0xc], ecx
 805b451:  lea ecx, [ebp-0x18]
 805b454:  mov DWORD PTR [esp+0x4], ecx
 805b458:  mov eax, DWORD PTR [ebp-0x5b4]
 805b45e:  mov DWORD PTR [esp], eax
 805b461:  call 806cb80
 805b466:  add eax, 0x1
 805b469:  jne 805b403
 805b46b:  mov esp, DWORD PTR [ebp-0x5a4]
 805b471:  jmp 8058ab6
 805b476:  cmp DWORD PTR [ebp-0x4c4], 0x4
 805b47d:  mov ebx, 0x80b0de2
 805b482:  jg 805b48e
 805b484:  mov DWORD PTR [ebp-0x4c4], 0x5
 805b48e:  cmp BYTE PTR [ebp-0x4b9], 0x53
 805b495:  je 805a288
 805b49b:  cmp DWORD PTR [ebp-0x4c4], 0xff
 805b4a2:  je 805c6cf
 805b4a8:  mov eax, 0xffffffd8
 805b4ad:  mov edx, DWORD PTR [ebp-0x5d4]
 805b4b3:  mov eax, DWORD PTR [edx+eax]
 805b4b6:  mov eax, DWORD PTR [eax]
 805b4b8:  cmp DWORD PTR [eax+0x58], 0x1
 805b4bc:  je 805bebd
 805b4c2:  mov esi, DWORD PTR [ebp-0x4c4]
 805b4c8:  mov DWORD PTR [ebp-0x58c], esp
 805b4ce:  cmp esi, 0x400
 805b4d4:  mov DWORD PTR [ebp-0x4b4], esi
 805b4da:  jbe 805b4e6
 805b4dc:  mov DWORD PTR [ebp-0x4b4], 0x400
 805b4e6:  mov edx, DWORD PTR [ebp-0x4b4]
 805b4ec:  mov esi, DWORD PTR [ebp-0x4c4]
 805b4f2:  mov DWORD PTR [ebp-0x18], ebx
 805b4f5:  mov DWORD PTR [ebp-0x44], 0x0
 805b4fc:  lea eax, [edx*4+0x10]
 805b503:  sub esp, eax
 805b505:  lea ecx, [esp+0x23]
 805b509:  and ecx, 0xf0
 805b50c:  add esi, ebx
 805b50e:  sbb eax, eax
 805b510:  mov DWORD PTR [ebp-0x5c4], ecx
 805b516:  or esi, eax
 805b518:  mov DWORD PTR [ebp-0x40], 0x0
 805b51f:  mov eax, DWORD PTR [ebp-0x18]
 805b522:  test eax, eax
 805b524:  je 805cfbb
 805b52a:  cmp esi, eax
 805b52c:  ja 805b550
 805b52e:  mov esi, eax
 805b530:  mov eax, DWORD PTR [ebp-0x44]
 805b533:  sub esi, ebx
 805b535:  and eax, 0x7
 805b538:  sub esi, eax
 805b53a:  mov DWORD PTR [ebp-0x4b8], 0x0
 805b544:  mov esp, DWORD PTR [ebp-0x58c]
 805b54a:  jmp 805a301
 805b54f:  nop
 805b550:  lea edx, [ebp-0x44]
 805b553:  mov DWORD PTR [esp+0x10], edx
 805b557:  mov ecx, DWORD PTR [ebp-0x4b4]
 805b55d:  mov edx, esi
 805b55f:  sub edx, eax
 805b561:  mov DWORD PTR [esp+0x8], edx
 805b565:  mov DWORD PTR [esp+0xc], ecx
 805b569:  lea ecx, [ebp-0x18]
 805b56c:  mov DWORD PTR [esp+0x4], ecx
 805b570:  mov eax, DWORD PTR [ebp-0x5c4]
 805b576:  mov DWORD PTR [esp], eax
 805b579:  call 806cb80
 805b57e:  add eax, 0x1
 805b581:  jne 805b51f
 805b583:  mov esp, DWORD PTR [ebp-0x58c]
 805b589:  jmp 8058ab6
 805b58e:  mov DWORD PTR [ebp-0x4c4], 0x1
 805b598:  jmp 805ad0e
 805b59d:  mov edx, DWORD PTR [ebp+0x8]
 805b5a0:  mov eax, DWORD PTR [edx+0x14]
 805b5a3:  cmp eax, DWORD PTR [edx+0x18]
 805b5a6:  jae 805cf37
 805b5ac:  mov BYTE PTR [eax], 0x2d
 805b5af:  mov ecx, DWORD PTR [ebp+0x8]
 805b5b2:  add eax, 0x1
 805b5b5:  mov DWORD PTR [ecx+0x14], eax
 805b5b8:  cmp edi, 0x7fffffff
 805b5be:  je 8058ab6
 805b5c4:  add edi, 0x1
 805b5c7:  jmp 8059be5
 805b5cc:  test ebx, ebx
 805b5ce:  jle 805b607
 805b5d0:  mov DWORD PTR [esp+0x8], ebx
 805b5d4:  mov DWORD PTR [esp+0x4], 0x20
 805b5dc:  mov ebx, DWORD PTR [ebp+0x8]
 805b5df:  mov DWORD PTR [esp], ebx
 805b5e2:  call 8062880
 805b5e7:  cmp edi, 0x7ffffffe
 805b5ed:  mov edx, eax
 805b5ef:  ja 8059e82
 805b5f5:  mov eax, 0x7fffffff
 805b5fa:  sub eax, edi
 805b5fc:  cmp edx, eax
 805b5fe:  ja 8058ab6
 805b604:  lea edi, [edx+edi]
 805b607:  xor ebx, ebx
 805b609:  jmp 8059bbb
 805b60e:  mov ecx, DWORD PTR [ebp-0x534]
 805b614:  test ecx, ecx
 805b616:  jne 805bcd0
 805b61c:  mov edx, DWORD PTR [ebp-0x484]
 805b622:  mov eax, DWORD PTR [ebp-0x484]
 805b628:  mov DWORD PTR [ebp-0x554], 0x0
 805b632:  mov DWORD PTR [ebp-0x548], 0x0
 805b63c:  mov edx, DWORD PTR [edx]
 805b63e:  add eax, 0x4
 805b641:  mov DWORD PTR [ebp+0x10], eax
 805b644:  mov DWORD PTR [ebp-0x540], 0x0
 805b64e:  mov DWORD PTR [ebp-0x5cc], edx
 805b654:  jmp 805a1e5
 805b659:  mov ecx, DWORD PTR [ebp-0x474]
 805b65f:  add ecx, 0x8
 805b662:  mov DWORD PTR [ebp-0x568], ecx
 805b668:  mov ecx, DWORD PTR [ebp-0x474]
 805b66e:  mov eax, DWORD PTR [ecx]
 805b670:  mov edx, DWORD PTR [ecx+0x4]
 805b673:  mov DWORD PTR [ebx], eax
 805b675:  mov DWORD PTR [ebx+0x4], edx
 805b678:  jmp 805b1f7
 805b67d:  mov edx, DWORD PTR [ebp+0x8]
 805b680:  mov eax, DWORD PTR [edx+0x14]
 805b683:  cmp eax, DWORD PTR [edx+0x18]
 805b686:  jae 805cbfd
 805b68c:  mov BYTE PTR [eax], 0x2d
 805b68f:  mov ecx, DWORD PTR [ebp+0x8]
 805b692:  add eax, 0x1
 805b695:  mov DWORD PTR [ecx+0x14], eax
 805b698:  cmp edi, 0x7fffffff
 805b69e:  je 8058ab6
 805b6a4:  add edi, 0x1
 805b6a7:  jmp 805a04e
 805b6ac:  test ebx, ebx
 805b6ae:  jle 805b6e7
 805b6b0:  mov DWORD PTR [esp+0x8], ebx
 805b6b4:  mov DWORD PTR [esp+0x4], 0x20
 805b6bc:  mov eax, DWORD PTR [ebp+0x8]
 805b6bf:  mov DWORD PTR [esp], eax
 805b6c2:  call 8062880
 805b6c7:  cmp edi, 0x7ffffffe
 805b6cd:  mov edx, eax
 805b6cf:  ja 805cd0c
 805b6d5:  mov eax, 0x7fffffff
 805b6da:  sub eax, edi
 805b6dc:  cmp edx, eax
 805b6de:  ja 8058ab6
 805b6e4:  lea edi, [edx+edi]
 805b6e7:  xor ebx, ebx
 805b6e9:  jmp 805a024
 805b6ee:  mov ecx, DWORD PTR [ebp-0x474]
 805b6f4:  mov eax, DWORD PTR [ebp-0x474]
 805b6fa:  add ecx, 0x8
 805b6fd:  fld QWORD PTR [eax]
 805b6ff:  mov DWORD PTR [ebp-0x568], ecx
 805b705:  fstp QWORD PTR [ebx]
 805b707:  jmp 805b1f7
 805b70c:  mov eax, DWORD PTR [ebp-0x474]
 805b712:  mov edx, DWORD PTR [ebp-0x474]
 805b718:  add eax, 0x8
 805b71b:  fld QWORD PTR [edx]
 805b71d:  mov DWORD PTR [ebp-0x568], eax
 805b723:  fstp QWORD PTR [ebx]
 805b725:  jmp 805b1f7
 805b72a:  mov ebx, DWORD PTR [ebp+0x8]
 805b72d:  mov eax, DWORD PTR [ebx+0x14]
 805b730:  cmp eax, DWORD PTR [ebx+0x18]
 805b733:  jae 805cee5
 805b739:  mov BYTE PTR [eax], 0x2d
 805b73c:  mov edx, DWORD PTR [ebp+0x8]
 805b73f:  add eax, 0x1
 805b742:  mov DWORD PTR [edx+0x14], eax
 805b745:  cmp edi, 0x7fffffff
 805b74b:  je 8058ab6
 805b751:  add edi, 0x1
 805b754:  sub DWORD PTR [ebp-0x4c8], 0x1
 805b75b:  jmp 805ab97
 805b760:  mov ecx, DWORD PTR [ebp+0x8]
 805b763:  mov eax, DWORD PTR [ecx+0x14]
 805b766:  cmp eax, DWORD PTR [ecx+0x18]
 805b769:  jae 805cffd
 805b76f:  mov BYTE PTR [eax], 0x2d
 805b772:  mov ebx, DWORD PTR [ebp+0x8]
 805b775:  add eax, 0x1
 805b778:  mov DWORD PTR [ebx+0x14], eax
 805b77b:  cmp edi, 0x7fffffff
 805b781:  je 8058ab6
 805b787:  add edi, 0x1
 805b78a:  sub DWORD PTR [ebp-0x48c], 0x1
 805b791:  jmp 805aa65
 805b796:  mov eax, DWORD PTR [ebp-0x4d4]
 805b79c:  test eax, eax
 805b79e:  jne 805c07e
 805b7a4:  mov ecx, DWORD PTR [ebp-0x508]
 805b7aa:  mov ebx, DWORD PTR [ebp-0x500]
 805b7b0:  mov eax, DWORD PTR [ecx+edx+0x24]
 805b7b4:  lea eax, [eax+eax*2]
 805b7b7:  mov esi, DWORD PTR [ebx+eax*4]
 805b7ba:  mov DWORD PTR [ebp-0x4f8], 0x0
 805b7c4:  mov DWORD PTR [ebp-0x4e8], 0x0
 805b7ce:  mov DWORD PTR [ebp-0x4e0], 0x0
 805b7d8:  jmp 805a556
 805b7dd:  mov ecx, DWORD PTR [ebp-0x56c]
 805b7e3:  mov eax, DWORD PTR [ebp-0x4f0]
 805b7e9:  mov edx, ecx
 805b7eb:  call 80584f0
 805b7f0:  mov DWORD PTR [ebp-0x4f0], eax
 805b7f6:  mov DWORD PTR [ebp-0x4ac], eax
 805b7fc:  mov eax, DWORD PTR [ebp-0x56c]
 805b802:  sub eax, DWORD PTR [ebp-0x4f0]
 805b808:  jmp 8059f8c
 805b80d:  mov DWORD PTR [ebp-0x4c4], 0x1
 805b817:  jmp 805afba
 805b81c:  cmp eax, 0xff
 805b81f:  je 805b835
 805b821:  test eax, eax
 805b823:  nop
 805b824:  lea esi, [esi]
 805b828:  je 805b1de
 805b82e:  xchg ax, ax
 805b830:  jmp 805b24e
 805b835:  mov edx, DWORD PTR [ebp+0x8]
 805b838:  test BYTE PTR [edx+0x3c], 0x4
 805b83c:  lea esi, [esi]
 805b840:  jne 805cf55
 805b846:  mov DWORD PTR [esp+0xc], 0x80b0e19
 805b84e:  mov DWORD PTR [esp+0x8], 0x6f0
 805b856:  mov DWORD PTR [esp+0x4], 0x80b0dd7
 805b85e:  mov DWORD PTR [esp], 0x80b0e03
 805b865:  call 8051490
 805b86a:  mov edx, DWORD PTR [ebp+0x8]
 805b86d:  mov eax, DWORD PTR [edx+0x14]
 805b870:  cmp eax, DWORD PTR [edx+0x18]
 805b873:  jae 805d039
 805b879:  mov BYTE PTR [eax], 0x2b
 805b87c:  mov ecx, DWORD PTR [ebp+0x8]
 805b87f:  add eax, 0x1
 805b882:  mov DWORD PTR [ecx+0x14], eax
 805b885:  jmp 805b5b8
 805b88a:  mov edx, DWORD PTR [ebp-0x52c]
 805b890:  test edx, edx
 805b892:  je 805c1df
 805b898:  mov edx, DWORD PTR [ebp-0x484]
 805b89e:  mov esi, DWORD PTR [ebp-0x484]
 805b8a4:  movsx eax, BYTE PTR [edx]
 805b8a7:  add esi, 0x4
 805b8aa:  mov DWORD PTR [ebp+0x10], esi
 805b8ad:  mov ecx, eax
 805b8af:  shr ecx, 0x1f
 805b8b2:  test ecx, ecx
 805b8b4:  mov DWORD PTR [ebp-0x554], ecx
 805b8ba:  je 805b8be
 805b8bc:  neg eax
 805b8be:  mov DWORD PTR [ebp-0x5cc], eax
 805b8c4:  mov DWORD PTR [ebp-0x550], 0xa
 805b8ce:  jmp 805a1e5
 805b8d3:  mov ecx, DWORD PTR [ebp+0x8]
 805b8d6:  mov eax, DWORD PTR [ecx+0x14]
 805b8d9:  cmp eax, DWORD PTR [ecx+0x18]
 805b8dc:  jae 805cc9d
 805b8e2:  mov BYTE PTR [eax], 0x2b
 805b8e5:  mov ebx, DWORD PTR [ebp+0x8]
 805b8e8:  add eax, 0x1
 805b8eb:  mov DWORD PTR [ebx+0x14], eax
 805b8ee:  jmp 805b745
 805b8f3:  test edi, edi
 805b8f5:  js 805cec1
 805b8fb:  mov edx, DWORD PTR [ebp+0x8]
 805b8fe:  mov eax, DWORD PTR [edx+0x94]
 805b904:  mov DWORD PTR [esp+0x8], esi
 805b908:  mov DWORD PTR [esp+0x4], ebx
 805b90c:  mov DWORD PTR [esp], edx
 805b90f:  call DWORD PTR [eax+0x1c]
 805b912:  cmp eax, esi
 805b914:  jne 8058ab6
 805b91a:  mov eax, 0x7fffffff
 805b91f:  sub eax, edi
 805b921:  cmp esi, eax
 805b923:  ja 8058ab6
 805b929:  mov ecx, DWORD PTR [ebp-0x49c]
 805b92f:  lea edi, [esi+edi]
 805b932:  mov DWORD PTR [ebp-0x484], ecx
 805b938:  jmp 8058d80
 805b93d:  test edi, edi
 805b93f:  js 805cd3c
 805b945:  mov edx, DWORD PTR [ebp+0x8]
 805b948:  mov eax, DWORD PTR [edx+0x94]
 805b94e:  mov DWORD PTR [esp+0x8], ebx
 805b952:  mov DWORD PTR [esp+0x4], esi
 805b956:  mov DWORD PTR [esp], edx
 805b959:  call DWORD PTR [eax+0x1c]
 805b95c:  cmp eax, ebx
 805b95e:  jne 8058ab6
 805b964:  mov eax, 0x7fffffff
 805b969:  sub eax, edi
 805b96b:  cmp ebx, eax
 805b96d:  ja 8058ab6
 805b973:  lea edi, [ebx+edi]
 805b976:  jmp 8059108
 805b97b:  mov edx, DWORD PTR [ebp+0x8]
 805b97e:  mov eax, DWORD PTR [edx+0x14]
 805b981:  cmp eax, DWORD PTR [edx+0x18]
 805b984:  jae 805cf7f
 805b98a:  mov BYTE PTR [eax], 0x2b
 805b98d:  mov ecx, DWORD PTR [ebp+0x8]
 805b990:  add eax, 0x1
 805b993:  mov DWORD PTR [ecx+0x14], eax
 805b996:  jmp 805b77b
 805b99b:  mov edx, DWORD PTR [ebp+0x8]
 805b99e:  mov eax, DWORD PTR [edx+0x14]
 805b9a1:  cmp eax, DWORD PTR [edx+0x18]
 805b9a4:  jae 805d114
 805b9aa:  mov BYTE PTR [eax], 0x2b
 805b9ad:  mov ecx, DWORD PTR [ebp+0x8]
 805b9b0:  add eax, 0x1
 805b9b3:  mov DWORD PTR [ecx+0x14], eax
 805b9b6:  jmp 805b698
 805b9bb:  movsx eax, BYTE PTR [ebp-0x51d]
 805b9c2:  mov ebx, DWORD PTR [ebp-0x474]
 805b9c8:  mov esi, DWORD PTR [ebp-0x484]
 805b9ce:  mov DWORD PTR [ebp-0x540], 0x1
 805b9d8:  mov eax, DWORD PTR [eax*4+0x80b1200]
 805b9df:  mov DWORD PTR [ebp-0x568], ebx
 805b9e5:  mov edx, DWORD PTR [eax*4+0x80b1200]
 805b9ec:  jmp 8058ba0
 805b9f1:  movsx eax, BYTE PTR [ebp-0x51d]
 805b9f8:  mov ecx, DWORD PTR [ebp-0x474]
 805b9fe:  mov esi, DWORD PTR [ebp-0x484]
 805ba04:  mov DWORD PTR [ebp-0x530], 0x1
 805ba0e:  mov eax, DWORD PTR [eax*4+0x80b1200]
 805ba15:  mov DWORD PTR [ebp-0x568], ecx
 805ba1b:  mov edx, DWORD PTR [eax*4+0x80b1000]
 805ba22:  jmp 8058ba0
 805ba27:  mov eax, DWORD PTR [ebp-0x52c]
 805ba2d:  test eax, eax
 805ba2f:  je 805c56d
 805ba35:  mov ebx, DWORD PTR [ebp-0x484]
 805ba3b:  mov edx, edi
 805ba3d:  mov ecx, DWORD PTR [ebp-0x484]
 805ba43:  mov eax, DWORD PTR [ebx]
 805ba45:  add ecx, 0x4
 805ba48:  mov DWORD PTR [ebp+0x10], ecx
 805ba4b:  mov BYTE PTR [eax], dl
 805ba4d:  jmp 8059108
 805ba52:  mov esi, DWORD PTR [ebp-0x484]
 805ba58:  mov eax, DWORD PTR [ebp-0x484]
 805ba5e:  add esi, 0x8
 805ba61:  fld QWORD PTR [eax]
 805ba63:  mov DWORD PTR [ebp+0x10], esi
 805ba66:  fstp QWORD PTR [ebp-0x58]
 805ba69:  jmp 8058a8a
 805ba6e:  mov esi, DWORD PTR [ebp-0x484]
 805ba74:  mov eax, DWORD PTR [ebp-0x484]
 805ba7a:  add esi, 0x8
 805ba7d:  fld QWORD PTR [eax]
 805ba7f:  mov DWORD PTR [ebp+0x10], esi
 805ba82:  fstp QWORD PTR [ebp-0x58]
 805ba85:  jmp 8059e4a
 805ba8a:  mov ecx, DWORD PTR [ebp-0x564]
 805ba90:  mov eax, DWORD PTR [ebp-0x508]
 805ba96:  lea edx, [ecx+ecx*2]
 805ba99:  shl edx, 0x4
 805ba9c:  add eax, edx
 805ba9e:  test eax, eax
 805baa0:  je 805c8dd
 805baa6:  mov ecx, DWORD PTR [ebp-0x4d0]
 805baac:  test ecx, ecx
 805baae:  je 805c528
 805bab4:  mov ecx, DWORD PTR [ebp-0x508]
 805baba:  mov ebx, DWORD PTR [ebp-0x500]
 805bac0:  mov eax, DWORD PTR [ecx+edx+0x24]
 805bac4:  lea eax, [eax+eax*2]
 805bac7:  movsx eax, BYTE PTR [ebx+eax*4]
 805bacb:  mov esi, eax
 805bacd:  shr esi, 0x1f
 805bad0:  test esi, esi
 805bad2:  mov DWORD PTR [ebp-0x4f8], esi
 805bad8:  je 805badc
 805bada:  neg eax
 805badc:  mov esi, eax
 805bade:  mov DWORD PTR [ebp-0x4f4], 0xa
 805bae8:  jmp 805a556
 805baed:  movsx eax, BYTE PTR [ebp-0x51d]
 805baf4:  mov ecx, DWORD PTR [ebp-0x474]
 805bafa:  mov esi, DWORD PTR [ebp-0x484]
 805bb00:  mov eax, DWORD PTR [eax*4+0x80b1200]
 805bb07:  mov DWORD PTR [ebp-0x568], ecx
 805bb0d:  mov edx, DWORD PTR [eax*4+0x80b1200]
 805bb14:  jmp 8058ba0
 805bb19:  movsx eax, BYTE PTR [ebp-0x51d]
 805bb20:  mov ecx, DWORD PTR [ebp-0x474]
 805bb26:  mov esi, DWORD PTR [ebp-0x484]
 805bb2c:  mov DWORD PTR [ebp-0x544], 0x1
 805bb36:  mov eax, DWORD PTR [eax*4+0x80b1200]
 805bb3d:  mov DWORD PTR [ebp-0x568], ecx
 805bb43:  mov BYTE PTR [ebp-0x51e], 0x20
 805bb4a:  mov edx, DWORD PTR [eax*4+0x80b1200]
 805bb51:  jmp 8058ba0
 805bb56:  movsx eax, BYTE PTR [ebp-0x51d]
 805bb5d:  mov ebx, DWORD PTR [ebp-0x474]
 805bb63:  mov esi, DWORD PTR [ebp-0x484]
 805bb69:  mov DWORD PTR [ebp-0x524], 0x1
 805bb73:  mov eax, DWORD PTR [eax*4+0x80b1200]
 805bb7a:  mov DWORD PTR [ebp-0x568], ebx
 805bb80:  mov edx, DWORD PTR [eax*4+0x80b1200]
 805bb87:  jmp 8058ba0
 805bb8c:  mov eax, DWORD PTR [ebp-0x474]
 805bb92:  mov edx, 0x805a7c0
 805bb97:  mov esi, DWORD PTR [ebp-0x484]
 805bb9d:  mov DWORD PTR [ebp-0x548], 0x1
 805bba7:  mov DWORD PTR [ebp-0x568], eax
 805bbad:  jmp 8058ba0
 805bbb2:  movsx eax, BYTE PTR [ebp-0x51d]
 805bbb9:  mov ecx, DWORD PTR [ebp-0x474]
 805bbbf:  mov esi, DWORD PTR [ebp-0x484]
 805bbc5:  mov DWORD PTR [ebp-0x534], 0x0
 805bbcf:  mov eax, DWORD PTR [eax*4+0x80b1200]
 805bbd6:  mov DWORD PTR [ebp-0x568], ecx
 805bbdc:  mov DWORD PTR [ebp-0x52c], 0x1
 805bbe6:  mov edx, DWORD PTR [eax*4+0x80b0f80]
 805bbed:  jmp 8058ba0
 805bbf2:  movsx eax, BYTE PTR [ebp-0x51d]
 805bbf9:  mov ecx, DWORD PTR [ebp-0x474]
 805bbff:  mov esi, DWORD PTR [ebp-0x484]
 805bc05:  mov DWORD PTR [ebp-0x54c], 0x1
 805bc0f:  mov eax, DWORD PTR [eax*4+0x80b1200]
 805bc16:  mov DWORD PTR [ebp-0x568], ecx
 805bc1c:  mov edx, DWORD PTR [eax*4+0x80b1200]
 805bc23:  jmp 8058ba0
 805bc28:  movsx eax, BYTE PTR [ebp-0x51d]
 805bc2f:  mov ecx, DWORD PTR [ebp-0x474]
 805bc35:  mov esi, DWORD PTR [ebp-0x484]
 805bc3b:  mov DWORD PTR [ebp-0x534], 0x1
 805bc45:  mov eax, DWORD PTR [eax*4+0x80b1200]
 805bc4c:  mov DWORD PTR [ebp-0x568], ecx
 805bc52:  mov edx, DWORD PTR [eax*4+0x80b1080]
 805bc59:  jmp 8058ba0
 805bc5e:  movsx eax, BYTE PTR [ebp-0x51d]
 805bc65:  mov esi, DWORD PTR [ebp-0x484]
 805bc6b:  mov DWORD PTR [ebp-0x53c], 0x1
 805bc75:  mov eax, DWORD PTR [eax*4+0x80b1200]
 805bc7c:  mov edx, DWORD PTR [eax*4+0x80b1200]
 805bc83:  mov eax, DWORD PTR [ebp-0x474]
 805bc89:  mov DWORD PTR [ebp-0x568], eax
 805bc8f:  jmp 8058ba0
 805bc94:  mov edx, DWORD PTR [ebp+0x8]
 805bc97:  mov eax, DWORD PTR [edx+0x14]
 805bc9a:  cmp eax, DWORD PTR [edx+0x18]
 805bc9d:  jae 805cd86
 805bca3:  mov BYTE PTR [eax], 0x20
 805bca6:  mov ecx, DWORD PTR [ebp+0x8]
 805bca9:  add eax, 0x1
 805bcac:  mov DWORD PTR [ecx+0x14], eax
 805bcaf:  jmp 805b698
 805bcb4:  mov ebx, DWORD PTR [ebp-0x474]
 805bcba:  mov edx, 0x805a7c0
 805bcbf:  mov esi, DWORD PTR [ebp-0x484]
 805bcc5:  mov DWORD PTR [ebp-0x568], ebx
 805bccb:  jmp 8058ba0
 805bcd0:  mov ebx, DWORD PTR [ebp-0x484]
 805bcd6:  mov ecx, DWORD PTR [ebp-0x484]
 805bcdc:  mov DWORD PTR [ebp-0x554], 0x0
 805bce6:  mov DWORD PTR [ebp-0x548], 0x0
 805bcf0:  movzx ebx, WORD PTR [ebx]
 805bcf3:  add ecx, 0x4
 805bcf6:  mov DWORD PTR [ebp+0x10], ecx
 805bcf9:  mov DWORD PTR [ebp-0x540], 0x0
 805bd03:  mov DWORD PTR [ebp-0x5cc], ebx
 805bd09:  jmp 805a1e5
 805bd0e:  mov edx, DWORD PTR [ebp+0x8]
 805bd11:  mov eax, DWORD PTR [edx+0x14]
 805bd14:  cmp eax, DWORD PTR [edx+0x18]
 805bd17:  jae 805cf9d
 805bd1d:  mov BYTE PTR [eax], 0x20
 805bd20:  mov ecx, DWORD PTR [ebp+0x8]
 805bd23:  add eax, 0x1
 805bd26:  mov DWORD PTR [ecx+0x14], eax
 805bd29:  jmp 805b745
 805bd2e:  mov ebx, DWORD PTR [ebp+0x8]
 805bd31:  mov eax, DWORD PTR [ebx+0x14]
 805bd34:  cmp eax, DWORD PTR [ebx+0x18]
 805bd37:  jae 805cf61
 805bd3d:  mov BYTE PTR [eax], 0x20
 805bd40:  mov edx, DWORD PTR [ebp+0x8]
 805bd43:  add eax, 0x1
 805bd46:  mov DWORD PTR [edx+0x14], eax
 805bd49:  jmp 805b77b
 805bd4e:  mov edx, DWORD PTR [ebp+0x8]
 805bd51:  mov eax, DWORD PTR [edx+0x14]
 805bd54:  cmp eax, DWORD PTR [edx+0x18]
 805bd57:  jae 805ce61
 805bd5d:  mov BYTE PTR [eax], 0x20
 805bd60:  mov ecx, DWORD PTR [ebp+0x8]
 805bd63:  add eax, 0x1
 805bd66:  mov DWORD PTR [ecx+0x14], eax
 805bd69:  jmp 805b5b8
 805bd6e:  mov eax, DWORD PTR [ebp-0x4d0]
 805bd74:  test eax, eax
 805bd76:  je 805c231
 805bd7c:  mov ebx, DWORD PTR [ebp-0x508]
 805bd82:  mov esi, DWORD PTR [ebp-0x500]
 805bd88:  mov eax, DWORD PTR [ebx+edx+0x24]
 805bd8c:  mov edx, edi
 805bd8e:  lea eax, [eax+eax*2]
 805bd91:  mov eax, DWORD PTR [esi+eax*4]
 805bd94:  mov BYTE PTR [eax], dl
 805bd96:  jmp 8058d80
 805bd9b:  mov eax, DWORD PTR [ebp-0x54c]
 805bda1:  test eax, eax
 805bda3:  je 805a21a
 805bda9:  mov esi, DWORD PTR [ebp-0x56c]
 805bdaf:  mov eax, DWORD PTR [ebp-0x56c]
 805bdb5:  sub esi, 0x1
 805bdb8:  mov BYTE PTR [eax-0x1], 0x30
 805bdbc:  mov eax, 0x1
 805bdc1:  mov DWORD PTR [ebp-0x4a8], esi
 805bdc7:  mov BYTE PTR [ebp-0x51e], 0x20
 805bdce:  jmp 8059aff
 805bdd3:  cmp DWORD PTR [ebp-0x478], 0x3c8
 805bddd:  jle 805936c
 805bde3:  mov ebx, DWORD PTR [ebp-0x478]
 805bde9:  add ebx, 0x20
 805bdec:  cmp ebx, 0x1000
 805bdf2:  ja 805c75d
 805bdf8:  lea eax, [ebx+0x12]
 805bdfb:  mov ecx, DWORD PTR [ebp-0x578]
 805be01:  and eax, 0xfc
 805be04:  mov esi, DWORD PTR [ebp-0x484]
 805be0a:  sub esp, eax
 805be0c:  lea eax, [esp+0x23]
 805be10:  and eax, 0xf0
 805be13:  add eax, ebx
 805be15:  mov DWORD PTR [ebp-0x56c], eax
 805be1b:  movzx ebx, BYTE PTR [ecx]
 805be1e:  jmp 805937b
 805be23:  mov ecx, DWORD PTR [ebp-0x578]
 805be29:  add edx, 0x1
 805be2c:  mov DWORD PTR [ebp-0x51c], edx
 805be32:  movzx eax, BYTE PTR [ecx+0x1]
 805be36:  lea edx, [eax-0x30]
 805be39:  cmp edx, 0x9
 805be3c:  ja 805be7a
 805be3e:  mov ebx, ecx
 805be40:  movzx ecx, BYTE PTR [ecx+0x2]
 805be44:  add ebx, 0x2
 805be47:  movzx eax, cl
 805be4a:  sub eax, 0x30
 805be4d:  cmp eax, 0x9
 805be50:  ja 805be6d
 805be52:  add ebx, 0x1
 805be55:  movzx eax, cl
 805be58:  movzx ecx, BYTE PTR [ebx]
 805be5b:  lea edx, [edx+edx*4]
 805be5e:  lea edx, [eax+edx*2-0x30]
 805be62:  movzx eax, cl
 805be65:  sub eax, 0x30
 805be68:  cmp eax, 0x9
 805be6b:  jbe 805be52
 805be6d:  test edx, edx
 805be6f:  je 805be7a
 805be71:  cmp cl, 0x24
 805be74:  je 805a7cd
 805be7a:  mov eax, DWORD PTR [ebp-0x484]
 805be80:  mov esi, DWORD PTR [ebp-0x484]
 805be86:  mov edx, DWORD PTR [ebp-0x51c]
 805be8c:  mov eax, DWORD PTR [eax]
 805be8e:  add esi, 0x4
 805be91:  mov DWORD PTR [ebp-0x484], esi
 805be97:  mov DWORD PTR [ebp-0x578], edx
 805be9d:  test eax, eax
 805be9f:  mov DWORD PTR [ebp-0x478], eax
 805bea5:  jns 805935a
 805beab:  mov DWORD PTR [ebp-0x478], 0xffffffff
 805beb5:  movzx ebx, BYTE PTR [edx]
 805beb8:  jmp 805937b
 805bebd:  mov ecx, DWORD PTR [ebp-0x4c4]
 805bec3:  mov DWORD PTR [esp], ebx
 805bec6:  mov DWORD PTR [esp+0x4], ecx
 805beca:  call 806b180
 805becf:  mov DWORD PTR [ebp-0x4b8], 0x0
 805bed9:  mov esi, eax
 805bedb:  jmp 805a301
 805bee0:  cmp DWORD PTR [ebp-0x478], 0xff
 805bee7:  je 805bef6
 805bee9:  cmp DWORD PTR [ebp-0x478], 0x5
 805bef0:  jle 805c4e1
 805bef6:  mov esi, 0x80b0e12
 805befb:  mov ebx, 0x6
 805bf00:  mov DWORD PTR [ebp-0x518], 0x0
 805bf0a:  jmp 80598fc
 805bf0f:  mov eax, DWORD PTR [ebp-0x4ec]
 805bf15:  test eax, eax
 805bf17:  je 805a585
 805bf1d:  mov ebx, DWORD PTR [ebp-0x56c]
 805bf23:  mov eax, DWORD PTR [ebp-0x56c]
 805bf29:  sub ebx, 0x1
 805bf2c:  mov DWORD PTR [ebp-0x4f0], ebx
 805bf32:  mov BYTE PTR [eax-0x1], 0x30
 805bf36:  mov eax, 0x1
 805bf3b:  mov DWORD PTR [ebp-0x4ac], ebx
 805bf41:  mov BYTE PTR [ebp-0x4ba], 0x20
 805bf48:  jmp 8059f8c
 805bf4d:  mov eax, DWORD PTR [ebp-0x4c4]
 805bf53:  mov edx, DWORD PTR [ebp-0x4c8]
 805bf59:  mov DWORD PTR [ebp-0x7c], 0x0
 805bf60:  movzx ecx, BYTE PTR [ebp-0x4d8]
 805bf67:  mov DWORD PTR [ebp-0x88], eax
 805bf6d:  movsx eax, BYTE PTR [ebp-0x4b9]
 805bf74:  mov DWORD PTR [ebp-0x84], edx
 805bf7a:  movzx edx, BYTE PTR [ebp-0x4d4]
 805bf81:  and ecx, 0x1
 805bf84:  mov DWORD PTR [ebp-0x80], eax
 805bf87:  movzx eax, BYTE PTR [ebp-0x7c]
 805bf8b:  and edx, 0x1
 805bf8e:  add edx, edx
 805bf90:  and eax, 0xfc
 805bf93:  or eax, ecx
 805bf95:  movzx ecx, BYTE PTR [ebp-0x4cc]
 805bf9c:  or eax, edx
 805bf9e:  movzx edx, BYTE PTR [ebp-0x4ec]
 805bfa5:  and eax, 0xf3
 805bfa8:  and ecx, 0x1
 805bfab:  shl ecx, 0x2
 805bfae:  and edx, 0x1
 805bfb1:  shl edx, 0x3
 805bfb4:  or eax, ecx
 805bfb6:  movzx ecx, BYTE PTR [ebp-0x4e8]
 805bfbd:  or eax, edx
 805bfbf:  movzx edx, BYTE PTR [ebp-0x4e4]
 805bfc6:  and eax, 0xcf
 805bfc9:  and ecx, 0x1
 805bfcc:  shl ecx, 0x4
 805bfcf:  and edx, 0x1
 805bfd2:  shl edx, 0x5
 805bfd5:  or eax, ecx
 805bfd7:  movzx ecx, BYTE PTR [ebp-0x4dc]
 805bfde:  or eax, edx
 805bfe0:  movzx edx, BYTE PTR [ebp-0x4e0]
 805bfe7:  and eax, 0x3f
 805bfea:  shl ecx, 0x7
 805bfed:  and edx, 0x1
 805bff0:  shl edx, 0x6
 805bff3:  or eax, edx
 805bff5:  or eax, ecx
 805bff7:  mov ecx, DWORD PTR [ebp-0x4d8]
 805bffd:  mov BYTE PTR [ebp-0x7c], al
 805c000:  movsx eax, BYTE PTR [ebp-0x4ba]
 805c007:  test ecx, ecx
 805c009:  mov DWORD PTR [ebp-0x78], eax
 805c00c:  je 805cb0d
 805c012:  mov ebx, DWORD PTR [ebp-0x484]
 805c018:  mov eax, DWORD PTR [ebx]
 805c01a:  mov edx, DWORD PTR [ebx+0x4]
 805c01d:  mov ecx, DWORD PTR [ebx+0x8]
 805c020:  add ebx, 0xc
 805c023:  mov DWORD PTR [ebp-0x484], ebx
 805c029:  mov DWORD PTR [ebp-0x64], eax
 805c02c:  mov DWORD PTR [ebp-0x60], edx
 805c02f:  mov DWORD PTR [ebp-0x5c], ecx
 805c032:  lea eax, [ebp-0x64]
 805c035:  mov DWORD PTR [ebp-0x14], eax
 805c038:  lea eax, [ebp-0x14]
 805c03b:  mov DWORD PTR [esp+0x8], eax
 805c03f:  lea eax, [ebp-0x88]
 805c045:  mov DWORD PTR [esp+0x4], eax
 805c049:  mov edx, DWORD PTR [ebp+0x8]
 805c04c:  mov DWORD PTR [esp], edx
 805c04f:  call 805fe40
 805c054:  mov edx, eax
 805c056:  jmp 8059d2a
 805c05b:  mov ebx, DWORD PTR [ebp-0x478]
 805c061:  mov DWORD PTR [esp], esi
 805c064:  mov DWORD PTR [esp+0x4], ebx
 805c068:  call 806b180
 805c06d:  mov DWORD PTR [ebp-0x518], 0x0
 805c077:  mov ebx, eax
 805c079:  jmp 80598fc
 805c07e:  mov esi, DWORD PTR [ebp-0x508]
 805c084:  mov eax, DWORD PTR [esi+edx+0x24]
 805c088:  mov edx, DWORD PTR [ebp-0x500]
 805c08e:  lea eax, [eax+eax*2]
 805c091:  movzx esi, WORD PTR [edx+eax*4]
 805c095:  mov DWORD PTR [ebp-0x4f8], 0x0
 805c09f:  mov DWORD PTR [ebp-0x4e8], 0x0
 805c0a9:  mov DWORD PTR [ebp-0x4e0], 0x0
 805c0b3:  jmp 805a556
 805c0b8:  movsx eax, BYTE PTR [ebp-0x4b9]
 805c0bf:  mov DWORD PTR [ebp-0x7c], 0x0
 805c0c6:  movzx ecx, BYTE PTR [ebp-0x4d8]
 805c0cd:  movzx edx, BYTE PTR [ebp-0x4d4]
 805c0d4:  mov ebx, DWORD PTR [ebp-0x4c4]
 805c0da:  mov DWORD PTR [ebp-0x80], eax
 805c0dd:  movzx eax, BYTE PTR [ebp-0x7c]
 805c0e1:  and ecx, 0x1
 805c0e4:  mov esi, DWORD PTR [ebp-0x4c8]
 805c0ea:  and edx, 0x1
 805c0ed:  add edx, edx
 805c0ef:  and eax, 0xfc
 805c0f2:  or eax, ecx
 805c0f4:  movzx ecx, BYTE PTR [ebp-0x4cc]
 805c0fb:  or eax, edx
 805c0fd:  movzx edx, BYTE PTR [ebp-0x4ec]
 805c104:  and eax, 0xf3
 805c107:  mov DWORD PTR [ebp-0x88], ebx
 805c10d:  mov ebx, DWORD PTR [ebp-0x4d8]
 805c113:  and ecx, 0x1
 805c116:  shl ecx, 0x2
 805c119:  and edx, 0x1
 805c11c:  shl edx, 0x3
 805c11f:  or eax, ecx
 805c121:  movzx ecx, BYTE PTR [ebp-0x4e8]
 805c128:  or eax, edx
 805c12a:  movzx edx, BYTE PTR [ebp-0x4e4]
 805c131:  and eax, 0xcf
 805c134:  mov DWORD PTR [ebp-0x84], esi
 805c13a:  and ecx, 0x1
 805c13d:  shl ecx, 0x4
 805c140:  and edx, 0x1
 805c143:  shl edx, 0x5
 805c146:  or eax, ecx
 805c148:  movzx ecx, BYTE PTR [ebp-0x4dc]
 805c14f:  or eax, edx
 805c151:  movzx edx, BYTE PTR [ebp-0x4e0]
 805c158:  and eax, 0x3f
 805c15b:  shl ecx, 0x7
 805c15e:  and edx, 0x1
 805c161:  shl edx, 0x6
 805c164:  or eax, edx
 805c166:  movzx edx, BYTE PTR [ebp-0x4c0]
 805c16d:  or eax, ecx
 805c16f:  mov BYTE PTR [ebp-0x7c], al
 805c172:  movzx eax, BYTE PTR [ebp-0x7b]
 805c176:  and edx, 0x1
 805c179:  shl edx, 0x3
 805c17c:  and eax, 0xf7
 805c17f:  or eax, edx
 805c181:  test ebx, ebx
 805c183:  mov BYTE PTR [ebp-0x7b], al
 805c186:  movsx eax, BYTE PTR [ebp-0x4ba]
 805c18d:  mov DWORD PTR [ebp-0x78], eax
 805c190:  je 805cab7
 805c196:  mov ebx, DWORD PTR [ebp-0x484]
 805c19c:  mov eax, DWORD PTR [ebx]
 805c19e:  mov edx, DWORD PTR [ebx+0x4]
 805c1a1:  mov ecx, DWORD PTR [ebx+0x8]
 805c1a4:  add ebx, 0xc
 805c1a7:  mov DWORD PTR [ebp-0x484], ebx
 805c1ad:  mov DWORD PTR [ebp-0x64], eax
 805c1b0:  mov DWORD PTR [ebp-0x60], edx
 805c1b3:  mov DWORD PTR [ebp-0x5c], ecx
 805c1b6:  lea eax, [ebp-0x64]
 805c1b9:  mov DWORD PTR [ebp-0x14], eax
 805c1bc:  lea eax, [ebp-0x14]
 805c1bf:  mov DWORD PTR [esp+0x8], eax
 805c1c3:  lea eax, [ebp-0x88]
 805c1c9:  mov DWORD PTR [esp+0x4], eax
 805c1cd:  mov edx, DWORD PTR [ebp+0x8]
 805c1d0:  mov DWORD PTR [esp], edx
 805c1d3:  call 805d430
 805c1d8:  mov edx, eax
 805c1da:  jmp 8059d2a
 805c1df:  mov eax, DWORD PTR [ebp-0x534]
 805c1e5:  test eax, eax
 805c1e7:  jne 805cb26
 805c1ed:  mov ecx, DWORD PTR [ebp-0x484]
 805c1f3:  mov ebx, DWORD PTR [ebp-0x484]
 805c1f9:  add ecx, 0x4
 805c1fc:  mov DWORD PTR [ebp+0x10], ecx
 805c1ff:  mov eax, DWORD PTR [ebx]
 805c201:  jmp 805b8ad
 805c206:  cmp DWORD PTR [ebp-0x4c4], 0xff
 805c20d:  je 805c218
 805c20f:  cmp DWORD PTR [ebp-0x4c4], 0x5
 805c216:  jle 805c25c
 805c218:  mov ebx, 0x80b0e12
 805c21d:  mov esi, 0x6
 805c222:  mov DWORD PTR [ebp-0x4b8], 0x0
 805c22c:  jmp 805a301
 805c231:  mov eax, DWORD PTR [ebp-0x4d4]
 805c237:  test eax, eax
 805c239:  jne 805c89c
 805c23f:  mov ecx, DWORD PTR [ebp-0x508]
 805c245:  mov ebx, DWORD PTR [ebp-0x500]
 805c24b:  mov eax, DWORD PTR [ecx+edx+0x24]
 805c24f:  lea eax, [eax+eax*2]
 805c252:  mov eax, DWORD PTR [ebx+eax*4]
 805c255:  mov DWORD PTR [eax], edi
 805c257:  jmp 8058d80
 805c25c:  mov ebx, 0x80c2c93
 805c261:  xor esi, esi
 805c263:  mov DWORD PTR [ebp-0x4b8], 0x0
 805c26d:  jmp 805a301
 805c272:  mov edx, DWORD PTR [ebp+0x8]
 805c275:  mov eax, DWORD PTR [edx+0x14]
 805c278:  cmp eax, DWORD PTR [edx+0x18]
 805c27b:  jae 805ccee
 805c281:  mov BYTE PTR [eax], 0x30
 805c284:  mov ecx, DWORD PTR [ebp+0x8]
 805c287:  add eax, 0x1
 805c28a:  mov DWORD PTR [ecx+0x14], eax
 805c28d:  cmp edi, 0x7fffffff
 805c293:  je 8058ab6
 805c299:  mov esi, DWORD PTR [ebp+0x8]
 805c29c:  mov eax, DWORD PTR [esi+0x14]
 805c29f:  cmp eax, DWORD PTR [esi+0x18]
 805c2a2:  jae 805cccd
 805c2a8:  movzx edx, BYTE PTR [ebp-0x4b9]
 805c2af:  mov BYTE PTR [eax], dl
 805c2b1:  mov ecx, DWORD PTR [ebp+0x8]
 805c2b4:  add eax, 0x1
 805c2b7:  mov DWORD PTR [ecx+0x14], eax
 805c2ba:  cmp edi, 0x7ffffffe
 805c2c0:  je 8058ab6
 805c2c6:  add edi, 0x2
 805c2c9:  jmp 805a061
 805c2ce:  mov eax, DWORD PTR [ebp-0x54c]
 805c2d4:  test eax, eax
 805c2d6:  je 8059ad2
 805c2dc:  mov esi, DWORD PTR [ebp-0x56c]
 805c2e2:  mov ecx, DWORD PTR [ebp-0x56c]
 805c2e8:  sub esi, 0x1
 805c2eb:  mov BYTE PTR [ecx-0x1], 0x30
 805c2ef:  mov BYTE PTR [ebp-0x51e], 0x20
 805c2f6:  jmp 8059adf
 805c2fb:  mov edx, DWORD PTR [ebp-0x484]
 805c301:  mov ecx, DWORD PTR [ebp-0x484]
 805c307:  mov DWORD PTR [ebp-0x4f8], 0x0
 805c311:  mov DWORD PTR [ebp-0x4e8], 0x0
 805c31b:  add edx, 0x8
 805c31e:  mov DWORD PTR [ebp-0x4a0], edx
 805c324:  mov esi, DWORD PTR [ecx]
 805c326:  mov ebx, DWORD PTR [ecx+0x4]
 805c329:  mov DWORD PTR [ebp-0x4e0], 0x0
 805c333:  jmp 8059f20
 805c338:  mov ecx, DWORD PTR [ebp+0xc]
 805c33b:  mov DWORD PTR [esp], ecx
 805c33e:  call 804eea0
 805c343:  add eax, 0x1
 805c346:  mov DWORD PTR [esp+0x4], eax
 805c34a:  mov ebx, DWORD PTR [ebp+0xc]
 805c34d:  mov DWORD PTR [esp], ebx
 805c350:  call 8074590
 805c355:  test eax, eax
 805c357:  mov DWORD PTR [ebp-0x55c], eax
 805c35d:  jns 805a447
 805c363:  mov DWORD PTR [esp], 0x80b0e98
 805c36a:  call 80490e0
 805c36f:  nop
 805c370:  mov eax, DWORD PTR [ebp-0x484]
 805c376:  mov edx, DWORD PTR [ebp-0x484]
 805c37c:  add eax, 0x4
 805c37f:  mov DWORD PTR [ebp-0x49c], eax
 805c385:  mov eax, DWORD PTR [edx]
 805c387:  jmp 805a511
 805c38c:  mov edx, DWORD PTR [ebp+0x8]
 805c38f:  mov eax, DWORD PTR [edx+0x14]
 805c392:  cmp eax, DWORD PTR [edx+0x18]
 805c395:  jae 805d0f6
 805c39b:  mov BYTE PTR [eax], 0x30
 805c39e:  mov ecx, DWORD PTR [ebp+0x8]
 805c3a1:  add eax, 0x1
 805c3a4:  mov DWORD PTR [ecx+0x14], eax
 805c3a7:  cmp edi, 0x7fffffff
 805c3ad:  je 8058ab6
 805c3b3:  mov edx, DWORD PTR [ebp+0x8]
 805c3b6:  mov eax, DWORD PTR [edx+0x14]
 805c3b9:  cmp eax, DWORD PTR [edx+0x18]
 805c3bc:  jae 805d0d5
 805c3c2:  movzx ecx, BYTE PTR [ebp-0x51d]
 805c3c9:  mov BYTE PTR [eax], cl
 805c3cb:  mov edx, DWORD PTR [ebp+0x8]
 805c3ce:  add eax, 0x1
 805c3d1:  mov DWORD PTR [edx+0x14], eax
 805c3d4:  cmp edi, 0x7ffffffe
 805c3da:  je 8058ab6
 805c3e0:  add edi, 0x2
 805c3e3:  jmp 8059bfb
 805c3e8:  mov eax, 0xffffffe0
 805c3ed:  mov ebx, DWORD PTR [ebp-0x5d4]
 805c3f3:  mov eax, DWORD PTR [ebx+eax]
 805c3f6:  mov eax, DWORD PTR [eax]
 805c3f8:  mov esi, DWORD PTR [eax+0x28]
 805c3fb:  mov DWORD PTR [ebp-0x580], esi
 805c401:  mov eax, DWORD PTR [eax+0x2c]
 805c404:  mov DWORD PTR [ebp-0x57c], eax
 805c40a:  movzx eax, BYTE PTR [eax]
 805c40d:  test al, al
 805c40f:  jne 805c8c5
 805c415:  mov DWORD PTR [ebp-0x57c], 0x0
 805c41f:  jmp 8059200
 805c424:  lea esi, [esi]
 805c428:  mov ecx, DWORD PTR [ebp+0x8]
 805c42b:  mov eax, DWORD PTR [ecx+0x14]
 805c42e:  cmp eax, DWORD PTR [ecx+0x18]
 805c431:  jae 805d078
 805c437:  mov BYTE PTR [eax], 0x30
 805c43a:  mov ebx, DWORD PTR [ebp+0x8]
 805c43d:  add eax, 0x1
 805c440:  mov DWORD PTR [ebx+0x14], eax
 805c443:  cmp edi, 0x7fffffff
 805c449:  je 8058ab6
 805c44f:  mov edx, DWORD PTR [ebp+0x8]
 805c452:  mov eax, DWORD PTR [edx+0x14]
 805c455:  cmp eax, DWORD PTR [edx+0x18]
 805c458:  jae 805d057
 805c45e:  movzx ecx, BYTE PTR [ebp-0x51d]
 805c465:  mov BYTE PTR [eax], cl
 805c467:  mov ebx, DWORD PTR [ebp+0x8]
 805c46a:  add eax, 0x1
 805c46d:  mov DWORD PTR [ebx+0x14], eax
 805c470:  cmp edi, 0x7ffffffe
 805c476:  je 8058ab6
 805c47c:  add edi, 0x2
 805c47f:  sub DWORD PTR [ebp-0x48c], 0x2
 805c486:  jmp 805aa86
 805c48b:  mov eax, DWORD PTR [ebp-0x4ec]
 805c491:  test eax, eax
 805c493:  je 8059f51
 805c499:  mov ecx, DWORD PTR [ebp-0x56c]
 805c49f:  mov eax, DWORD PTR [ebp-0x56c]
 805c4a5:  sub ecx, 0x1
 805c4a8:  mov DWORD PTR [ebp-0x4f0], ecx
 805c4ae:  mov BYTE PTR [eax-0x1], 0x30
 805c4b2:  mov BYTE PTR [ebp-0x4ba], 0x20
 805c4b9:  jmp 8059f64
 805c4be:  mov ebx, DWORD PTR [ebp-0x564]
 805c4c4:  mov ecx, DWORD PTR [ebp-0x508]
 805c4ca:  mov DWORD PTR [ebp-0x5d8], 0x8057cd0
 805c4d4:  lea eax, [ebx+ebx*2]
 805c4d7:  shl eax, 0x4
 805c4da:  add ecx, eax
 805c4dc:  jmp 805a95e
 805c4e1:  mov esi, 0x80c2c93
 805c4e6:  xor ebx, ebx
 805c4e8:  mov DWORD PTR [ebp-0x518], 0x0
 805c4f2:  jmp 80598fc
 805c4f7:  mov edx, DWORD PTR [ebp+0xc]
 805c4fa:  mov DWORD PTR [esp], edx
 805c4fd:  call 804eea0
 805c502:  add eax, 0x1
 805c505:  mov DWORD PTR [esp+0x4], eax
 805c509:  mov ecx, DWORD PTR [ebp+0xc]
 805c50c:  mov DWORD PTR [esp], ecx
 805c50f:  call 8074590
 805c514:  test eax, eax
 805c516:  mov DWORD PTR [ebp-0x55c], eax
 805c51c:  jns 805a129
 805c522:  jmp 805c363
 805c527:  nop
 805c528:  mov eax, DWORD PTR [ebp-0x4d4]
 805c52e:  test eax, eax
 805c530:  jne 805cb7e
 805c536:  mov esi, DWORD PTR [ebp-0x508]
 805c53c:  mov eax, DWORD PTR [esi+edx+0x24]
 805c540:  mov edx, DWORD PTR [ebp-0x500]
 805c546:  lea eax, [eax+eax*2]
 805c549:  mov eax, DWORD PTR [edx+eax*4]
 805c54c:  jmp 805bacb
 805c551:  mov eax, DWORD PTR [ebp-0x484]
 805c557:  mov edx, DWORD PTR [ebp-0x484]
 805c55d:  add eax, 0x4
 805c560:  mov DWORD PTR [ebp-0x498], eax
 805c566:  mov eax, DWORD PTR [edx]
 805c568:  jmp 8058c7b
 805c56d:  mov eax, DWORD PTR [ebp-0x534]
 805c573:  test eax, eax
 805c575:  jne 805c9a5
 805c57b:  mov ebx, DWORD PTR [ebp-0x484]
 805c581:  mov ecx, DWORD PTR [ebp-0x484]
 805c587:  mov eax, DWORD PTR [ebx]
 805c589:  add ecx, 0x4
 805c58c:  mov DWORD PTR [ebp+0x10], ecx
 805c58f:  mov DWORD PTR [eax], edi
 805c591:  jmp 8059108
 805c596:  mov DWORD PTR [esp], esi
 805c599:  call 804eea0
 805c59e:  mov DWORD PTR [ebp-0x518], 0x0
 805c5a8:  mov ebx, eax
 805c5aa:  jmp 80598fc
 805c5af:  mov ebx, DWORD PTR [ebp+0x8]
 805c5b2:  mov eax, DWORD PTR [ebx+0x14]
 805c5b5:  cmp eax, DWORD PTR [ebx+0x18]
 805c5b8:  jae 805d0b7
 805c5be:  mov BYTE PTR [eax], 0x30
 805c5c1:  mov esi, DWORD PTR [ebp+0x8]
 805c5c4:  add eax, 0x1
 805c5c7:  mov DWORD PTR [esi+0x14], eax
 805c5ca:  cmp edi, 0x7fffffff
 805c5d0:  je 8058ab6
 805c5d6:  mov edx, DWORD PTR [ebp+0x8]
 805c5d9:  mov eax, DWORD PTR [edx+0x14]
 805c5dc:  cmp eax, DWORD PTR [edx+0x18]
 805c5df:  jae 805d096
 805c5e5:  movzx ecx, BYTE PTR [ebp-0x4b9]
 805c5ec:  mov BYTE PTR [eax], cl
 805c5ee:  mov ebx, DWORD PTR [ebp+0x8]
 805c5f1:  add eax, 0x1
 805c5f4:  mov DWORD PTR [ebx+0x14], eax
 805c5f7:  cmp edi, 0x7ffffffe
 805c5fd:  je 8058ab6
 805c603:  add edi, 0x2
 805c606:  sub DWORD PTR [ebp-0x4c8], 0x2
 805c60d:  jmp 805abb2
 805c612:  mov eax, 0xffffffe0
 805c617:  mov edx, DWORD PTR [ebp-0x5d4]
 805c61d:  mov eax, DWORD PTR [edx+eax]
 805c620:  mov eax, DWORD PTR [eax]
 805c622:  mov ecx, DWORD PTR [eax+0x28]
 805c625:  mov DWORD PTR [ebp-0x580], ecx
 805c62b:  mov eax, DWORD PTR [eax+0x2c]
 805c62e:  mov DWORD PTR [ebp-0x57c], eax
 805c634:  movzx eax, BYTE PTR [eax]
 805c637:  test al, al
 805c639:  je 805c643
 805c63b:  cmp al, 0x7f
 805c63d:  jne 805a802
 805c643:  mov DWORD PTR [ebp-0x57c], 0x0
 805c64d:  jmp 805a802
 805c652:  mov esi, DWORD PTR [ebp-0x4d0]
 805c658:  test esi, esi
 805c65a:  je 805cb40
 805c660:  mov eax, DWORD PTR [ebp-0x484]
 805c666:  mov DWORD PTR [ebp-0x4f8], 0x0
 805c670:  mov DWORD PTR [ebp-0x4e8], 0x0
 805c67a:  mov DWORD PTR [ebp-0x4e0], 0x0
 805c684:  movzx esi, BYTE PTR [eax]
 805c687:  add eax, 0x4
 805c68a:  mov DWORD PTR [ebp-0x484], eax
 805c690:  jmp 805a556
 805c695:  mov ebx, DWORD PTR [ebp-0x484]
 805c69b:  mov esi, DWORD PTR [ebp-0x484]
 805c6a1:  add ebx, 0x4
 805c6a4:  mov DWORD PTR [ebp-0x49c], ebx
 805c6aa:  mov ebx, DWORD PTR [esi]
 805c6ac:  jmp 805a272
 805c6b1:  mov DWORD PTR [esp], esi
 805c6b4:  call 8074540
 805c6b9:  test eax, eax
 805c6bb:  je 805ca5e
 805c6c1:  mov edx, DWORD PTR [ebp-0x578]
 805c6c7:  movzx ebx, BYTE PTR [edx]
 805c6ca:  jmp 80596c4
 805c6cf:  mov DWORD PTR [esp], ebx
 805c6d2:  call 804eea0
 805c6d7:  mov DWORD PTR [ebp-0x4b8], 0x0
 805c6e1:  mov esi, eax
 805c6e3:  jmp 805a301
 805c6e8:  mov DWORD PTR [esp+0xc], 0x80b0e19
 805c6f0:  mov DWORD PTR [esp+0x8], 0x64b
 805c6f8:  mov DWORD PTR [esp+0x4], 0x80b0dd7
 805c700:  mov DWORD PTR [esp], 0x80b0e70
 805c707:  call 8051490
 805c70c:  mov esi, DWORD PTR [ebp-0x570]
 805c712:  mov DWORD PTR [esp], esi
 805c715:  call 804b4a0
 805c71a:  jmp 8059116
 805c71f:  mov DWORD PTR [esp], ebx
 805c722:  call 8074540
 805c727:  test eax, eax
 805c729:  lea esi, [esi]
 805c730:  jne 80594b7
 805c736:  mov DWORD PTR [esp], ebx
 805c739:  call 804d6f0
 805c73e:  test eax, eax
 805c740:  mov DWORD PTR [ebp-0x570], eax
 805c746:  je 8058ad8
 805c74c:  add ebx, DWORD PTR [ebp-0x570]
 805c752:  mov DWORD PTR [ebp-0x56c], ebx
 805c758:  jmp 80594cf
 805c75d:  mov DWORD PTR [esp], ebx
 805c760:  call 8074540
 805c765:  test eax, eax
 805c767:  jne 805bdf8
 805c76d:  mov DWORD PTR [esp], ebx
 805c770:  call 804d6f0
 805c775:  test eax, eax
 805c777:  mov DWORD PTR [ebp-0x570], eax
 805c77d:  je 8058ad8
 805c783:  mov eax, DWORD PTR [ebp-0x578]
 805c789:  add ebx, DWORD PTR [ebp-0x570]
 805c78f:  mov esi, DWORD PTR [ebp-0x484]
 805c795:  mov DWORD PTR [ebp-0x56c], ebx
 805c79b:  movzx ebx, BYTE PTR [eax]
 805c79e:  jmp 805937b
 805c7a3:  mov esp, DWORD PTR [ebp-0x5a8]
 805c7a9:  jmp 8058ab6
 805c7ae:  mov DWORD PTR [esp+0xc], 0x80b0e19
 805c7b6:  mov DWORD PTR [esp+0x8], 0x782
 805c7be:  mov DWORD PTR [esp+0x4], 0x80b0dd7
 805c7c6:  mov DWORD PTR [esp], 0x80b0e70
 805c7cd:  call 8051490
 805c7d2:  mov edx, DWORD PTR [ebp-0x478]
 805c7d8:  mov DWORD PTR [esp], edx
 805c7db:  call 8074540
 805c7e0:  test eax, eax
 805c7e2:  jne 80598b2
 805c7e8:  mov esi, DWORD PTR [ebp-0x478]
 805c7ee:  mov DWORD PTR [esp], esi
 805c7f1:  call 804d6f0
 805c7f6:  test eax, eax
 805c7f8:  mov esi, eax
 805c7fa:  je 8058ab6
 805c800:  mov DWORD PTR [ebp-0x518], 0x1
 805c80a:  jmp 80598d1
 805c80f:  mov eax, DWORD PTR [ebp-0x484]
 805c815:  mov ecx, DWORD PTR [ebp+0x8]
 805c818:  mov ebx, DWORD PTR [ebp-0x484]
 805c81e:  movzx edx, BYTE PTR [eax]
 805c821:  mov eax, DWORD PTR [ecx+0x14]
 805c824:  add ebx, 0x4
 805c827:  cmp eax, DWORD PTR [ecx+0x18]
 805c82a:  jae 805ce47
 805c830:  mov BYTE PTR [eax], dl
 805c832:  mov edx, DWORD PTR [ebp+0x8]
 805c835:  add eax, 0x1
 805c838:  mov DWORD PTR [edx+0x14], eax
 805c83b:  cmp edi, 0x7fffffff
 805c841:  je 8058ab6
 805c847:  add edi, 0x1
 805c84a:  mov DWORD PTR [ebp-0x484], ebx
 805c850:  jmp 805a75b
 805c855:  mov ecx, DWORD PTR [ebp-0x484]
 805c85b:  mov eax, DWORD PTR [ecx]
 805c85d:  mov edx, DWORD PTR [ecx+0x4]
 805c860:  add ecx, 0x8
 805c863:  mov DWORD PTR [ebp-0x484], ecx
 805c869:  jmp 805a616
 805c86e:  mov eax, DWORD PTR [ebp-0x4d8]
 805c874:  test eax, eax
 805c876:  je 805cb9a
 805c87c:  mov edx, DWORD PTR [ebp-0x484]
 805c882:  mov ecx, edi
 805c884:  sar ecx, 0x1f
 805c887:  mov eax, DWORD PTR [edx]
 805c889:  add edx, 0x4
 805c88c:  mov DWORD PTR [ebp-0x484], edx
 805c892:  mov DWORD PTR [eax], edi
 805c894:  mov DWORD PTR [eax+0x4], ecx
 805c897:  jmp 8058d80
 805c89c:  mov esi, DWORD PTR [ebp-0x508]
 805c8a2:  mov eax, DWORD PTR [esi+edx+0x24]
 805c8a6:  mov edx, DWORD PTR [ebp-0x500]
 805c8ac:  lea eax, [eax+eax*2]
 805c8af:  mov eax, DWORD PTR [edx+eax*4]
 805c8b2:  mov WORD PTR [eax], di
 805c8b5:  jmp 8058d80
 805c8ba:  mov esp, DWORD PTR [ebp-0x590]
 805c8c0:  jmp 8058ab6
 805c8c5:  cmp al, 0x7f
 805c8c7:  je 805c415
 805c8cd:  cmp BYTE PTR [esi], 0x0
 805c8d0:  jne 8059200
 805c8d6:  xchg ax, ax
 805c8d8:  jmp 805c415
 805c8dd:  mov esi, DWORD PTR [ebp-0x4d0]
 805c8e3:  test esi, esi
 805c8e5:  lea esi, [esi]
 805c8e8:  je 805cdb5
 805c8ee:  mov ebx, DWORD PTR [ebp-0x484]
 805c8f4:  movsx eax, BYTE PTR [ebx]
 805c8f7:  add ebx, 0x4
 805c8fa:  mov DWORD PTR [ebp-0x484], ebx
 805c900:  jmp 805bacb
 805c905:  lea esi, [esi]
 805c908:  lea edx, [ebp-0x1c]
 805c90b:  lea eax, [ebp-0x34]
 805c90e:  mov DWORD PTR [esp+0xc], eax
 805c912:  mov DWORD PTR [esp+0x8], 0x0
 805c91a:  mov DWORD PTR [ebp-0x5d0], edx
 805c920:  mov DWORD PTR [esp+0x4], edx
 805c924:  mov DWORD PTR [esp], 0x0
 805c92b:  call 806c860
 805c930:  cmp eax, 0xff
 805c933:  mov ebx, eax
 805c935:  je 8058ab6
 805c93b:  mov eax, DWORD PTR [ebp-0x34]
 805c93e:  test eax, eax
 805c940:  jne 805ce0c
 805c946:  lea ecx, [ebx+0x1]
 805c949:  cmp ecx, 0x1000
 805c94f:  mov DWORD PTR [ebp-0x1c], esi
 805c952:  mov DWORD PTR [ebp-0x5a0], ecx
 805c958:  ja 805cdd5
 805c95e:  mov eax, DWORD PTR [ebp-0x5a0]
 805c964:  mov DWORD PTR [ebp-0x518], 0x0
 805c96e:  add eax, 0x12
 805c971:  and eax, 0xfc
 805c974:  sub esp, eax
 805c976:  lea esi, [esp+0x23]
 805c97a:  and esi, 0xf0
 805c97d:  lea eax, [ebp-0x34]
 805c980:  mov DWORD PTR [esp+0xc], eax
 805c984:  mov edx, DWORD PTR [ebp-0x5a0]
 805c98a:  mov DWORD PTR [esp+0x8], edx
 805c98e:  mov ecx, DWORD PTR [ebp-0x5d0]
 805c994:  mov DWORD PTR [esp], esi
 805c997:  mov DWORD PTR [esp+0x4], ecx
 805c99b:  call 806c860
 805c9a0:  jmp 80598fc
 805c9a5:  mov edx, DWORD PTR [ebp-0x484]
 805c9ab:  mov esi, DWORD PTR [ebp-0x484]
 805c9b1:  mov eax, DWORD PTR [edx]
 805c9b3:  add esi, 0x4
 805c9b6:  mov DWORD PTR [ebp+0x10], esi
 805c9b9:  mov WORD PTR [eax], di
 805c9bc:  jmp 8059108
 805c9c1:  lea edx, [ebp-0x1c]
 805c9c4:  lea eax, [ebp-0x4c]
 805c9c7:  mov DWORD PTR [esp+0xc], eax
 805c9cb:  mov DWORD PTR [esp+0x8], 0x0
 805c9d3:  mov DWORD PTR [ebp-0x5d0], edx
 805c9d9:  mov DWORD PTR [esp+0x4], edx
 805c9dd:  mov DWORD PTR [esp], 0x0
 805c9e4:  call 806c860
 805c9e9:  cmp eax, 0xff
 805c9ec:  mov esi, eax
 805c9ee:  je 8058ab6
 805c9f4:  mov eax, DWORD PTR [ebp-0x4c]
 805c9f7:  test eax, eax
 805c9f9:  jne 805cc55
 805c9ff:  lea ecx, [esi+0x1]
 805ca02:  cmp ecx, 0x1000
 805ca08:  mov DWORD PTR [ebp-0x1c], ebx
 805ca0b:  mov DWORD PTR [ebp-0x588], ecx
 805ca11:  ja 805cc1b
 805ca17:  mov eax, DWORD PTR [ebp-0x588]
 805ca1d:  mov DWORD PTR [ebp-0x4b8], 0x0
 805ca27:  add eax, 0x12
 805ca2a:  and eax, 0xfc
 805ca2d:  sub esp, eax
 805ca2f:  lea ebx, [esp+0x23]
 805ca33:  and ebx, 0xf0
 805ca36:  lea eax, [ebp-0x4c]
 805ca39:  mov DWORD PTR [esp+0xc], eax
 805ca3d:  mov edx, DWORD PTR [ebp-0x588]
 805ca43:  mov DWORD PTR [esp+0x8], edx
 805ca47:  mov ecx, DWORD PTR [ebp-0x5d0]
 805ca4d:  mov DWORD PTR [esp], ebx
 805ca50:  mov DWORD PTR [esp+0x4], ecx
 805ca54:  call 806c860
 805ca59:  jmp 805a301
 805ca5e:  mov DWORD PTR [esp], esi
 805ca61:  call 804d6f0
 805ca66:  test eax, eax
 805ca68:  mov DWORD PTR [ebp-0x570], eax
 805ca6e:  je 8058ad8
 805ca74:  mov ecx, DWORD PTR [ebp-0x578]
 805ca7a:  add esi, DWORD PTR [ebp-0x570]
 805ca80:  mov DWORD PTR [ebp-0x56c], esi
 805ca86:  movzx ebx, BYTE PTR [ecx]
 805ca89:  jmp 80596dc
 805ca8e:  mov DWORD PTR [ebp-0x578], eax
 805ca94:  mov DWORD PTR [ebp-0x47c], 0x0
 805ca9e:  mov DWORD PTR [ebp-0x504], 0x0
 805caa8:  mov DWORD PTR [ebp-0x510], 0x0
 805cab2:  jmp 805b078
 805cab7:  mov esi, DWORD PTR [ebp-0x484]
 805cabd:  fld QWORD PTR [esi]
 805cabf:  add esi, 0x8
 805cac2:  fstp QWORD PTR [ebp-0x64]
 805cac5:  mov DWORD PTR [ebp-0x484], esi
 805cacb:  jmp 805c1b6
 805cad0:  mov edx, DWORD PTR [ebp-0x4c4]
 805cad6:  mov DWORD PTR [esp], edx
 805cad9:  call 8074540
 805cade:  test eax, eax
 805cae0:  jne 805a2b7
 805cae6:  mov edx, DWORD PTR [ebp-0x4c4]
 805caec:  mov DWORD PTR [esp], edx
 805caef:  call 804d6f0
 805caf4:  test eax, eax
 805caf6:  mov ebx, eax
 805caf8:  je 8058ab6
 805cafe:  mov DWORD PTR [ebp-0x4b8], 0x1
 805cb08:  jmp 805a2d6
 805cb0d:  mov esi, DWORD PTR [ebp-0x484]
 805cb13:  fld QWORD PTR [esi]
 805cb15:  add esi, 0x8
 805cb18:  fstp QWORD PTR [ebp-0x64]
 805cb1b:  mov DWORD PTR [ebp-0x484], esi
 805cb21:  jmp 805c032
 805cb26:  mov esi, DWORD PTR [ebp-0x484]
 805cb2c:  mov edx, DWORD PTR [ebp-0x484]
 805cb32:  add esi, 0x4
 805cb35:  mov DWORD PTR [ebp+0x10], esi
 805cb38:  movsx eax, WORD PTR [edx]
 805cb3b:  jmp 805b8ad
 805cb40:  mov ebx, DWORD PTR [ebp-0x4d4]
 805cb46:  test ebx, ebx
 805cb48:  jne 805cbc8
 805cb4a:  mov edx, DWORD PTR [ebp-0x484]
 805cb50:  mov DWORD PTR [ebp-0x4f8], 0x0
 805cb5a:  mov DWORD PTR [ebp-0x4e8], 0x0
 805cb64:  mov DWORD PTR [ebp-0x4e0], 0x0
 805cb6e:  mov esi, DWORD PTR [edx]
 805cb70:  add edx, 0x4
 805cb73:  mov DWORD PTR [ebp-0x484], edx
 805cb79:  jmp 805a556
 805cb7e:  mov ecx, DWORD PTR [ebp-0x508]
 805cb84:  mov ebx, DWORD PTR [ebp-0x500]
 805cb8a:  mov eax, DWORD PTR [ecx+edx+0x24]
 805cb8e:  lea eax, [eax+eax*2]
 805cb91:  movsx eax, WORD PTR [ebx+eax*4]
 805cb95:  jmp 805bacb
 805cb9a:  mov eax, DWORD PTR [ebp-0x4d0]
 805cba0:  test eax, eax
 805cba2:  je 805cd60
 805cba8:  mov ebx, DWORD PTR [ebp-0x484]
 805cbae:  mov edx, edi
 805cbb0:  mov eax, DWORD PTR [ebx]
 805cbb2:  add ebx, 0x4
 805cbb5:  mov BYTE PTR [eax], dl
 805cbb7:  mov DWORD PTR [ebp-0x484], ebx
 805cbbd:  jmp 8058d80
 805cbc2:  lea esi, [esi]
 805cbc8:  mov ecx, DWORD PTR [ebp-0x484]
 805cbce:  mov DWORD PTR [ebp-0x4f8], 0x0
 805cbd8:  mov DWORD PTR [ebp-0x4e8], 0x0
 805cbe2:  mov DWORD PTR [ebp-0x4e0], 0x0
 805cbec:  movzx esi, WORD PTR [ecx]
 805cbef:  add ecx, 0x4
 805cbf2:  mov DWORD PTR [ebp-0x484], ecx
 805cbf8:  jmp 805a556
 805cbfd:  mov DWORD PTR [esp+0x4], 0x2d
 805cc05:  mov DWORD PTR [esp], edx
 805cc08:  call 8068460
 805cc0d:  add eax, 0x1
 805cc10:  jne 805b698
 805cc16:  jmp 8058ab6
 805cc1b:  mov DWORD PTR [esp], ecx
 805cc1e:  xchg ax, ax
 805cc20:  call 8074540
 805cc25:  test eax, eax
 805cc27:  nop
 805cc28:  jne 805ca17
 805cc2e:  mov ecx, DWORD PTR [ebp-0x588]
 805cc34:  mov DWORD PTR [esp], ecx
 805cc37:  call 804d6f0
 805cc3c:  test eax, eax
 805cc3e:  mov ebx, eax
 805cc40:  je 8058ab6
 805cc46:  mov DWORD PTR [ebp-0x4b8], 0x1
 805cc50:  jmp 805ca36
 805cc55:  mov DWORD PTR [esp+0xc], 0x80b0e19
 805cc5d:  mov DWORD PTR [esp+0x8], 0x754
 805cc65:  mov DWORD PTR [esp+0x4], 0x80b0dd7
 805cc6d:  mov DWORD PTR [esp], 0x80b0de8
 805cc74:  call 8051490
 805cc79:  mov DWORD PTR [esp+0xc], 0x80b0e19
 805cc81:  mov DWORD PTR [esp+0x8], 0x62c
 805cc89:  mov DWORD PTR [esp+0x4], 0x80b0dd7
 805cc91:  mov DWORD PTR [esp], 0x80b0e70
 805cc98:  call 8051490
 805cc9d:  mov DWORD PTR [esp+0x4], 0x2b
 805cca5:  mov DWORD PTR [esp], ecx
 805cca8:  call 8068460
 805ccad:  add eax, 0x1
 805ccb0:  jne 805b745
 805ccb6:  jmp 8058ab6
 805ccbb:  mov DWORD PTR [esp], esi
 805ccbe:  xchg ax, ax
 805ccc0:  call 804eea0
 805ccc5:  mov ebx, eax
 805ccc7:  nop
 805ccc8:  jmp 805b41e
 805cccd:  movzx eax, BYTE PTR [ebp-0x4b9]
 805ccd4:  mov DWORD PTR [esp], esi
 805ccd7:  mov DWORD PTR [esp+0x4], eax
 805ccdb:  call 8068460
 805cce0:  add eax, 0x1
 805cce3:  jne 805c2ba
 805cce9:  jmp 8058ab6
 805ccee:  mov DWORD PTR [esp+0x4], 0x30
 805ccf6:  mov DWORD PTR [esp], edx
 805ccf9:  call 8068460
 805ccfe:  add eax, 0x1
 805cd01:  jne 805c28d
 805cd07:  jmp 8058ab6
 805cd0c:  mov DWORD PTR [esp+0xc], 0x80b0e19
 805cd14:  mov DWORD PTR [esp+0x8], 0x753
 805cd1c:  mov DWORD PTR [esp+0x4], 0x80b0dd7
 805cd24:  mov DWORD PTR [esp], 0x80b0e40
 805cd2b:  call 8051490
 805cd30:  mov BYTE PTR [ebp-0x51e], 0x20
 805cd37:  jmp 805adbb
 805cd3c:  mov DWORD PTR [esp+0xc], 0x80b0e19
 805cd44:  mov DWORD PTR [esp+0x8], 0x62d
 805cd4c:  mov DWORD PTR [esp+0x4], 0x80b0dd7
 805cd54:  mov DWORD PTR [esp], 0x80b0e70
 805cd5b:  call 8051490
 805cd60:  mov eax, DWORD PTR [ebp-0x4d4]
 805cd66:  test eax, eax
 805cd68:  jne 805d132
 805cd6e:  mov ecx, DWORD PTR [ebp-0x484]
 805cd74:  mov eax, DWORD PTR [ecx]
 805cd76:  add ecx, 0x4
 805cd79:  mov DWORD PTR [ebp-0x484], ecx
 805cd7f:  mov DWORD PTR [eax], edi
 805cd81:  jmp 8058d80
 805cd86:  mov DWORD PTR [esp+0x4], 0x20
 805cd8e:  mov DWORD PTR [esp], edx
 805cd91:  call 8068460
 805cd96:  add eax, 0x1
 805cd99:  jne 805b698
 805cd9f:  jmp 8058ab6
 805cda4:  mov DWORD PTR [ebp-0x5d8], 0x8057cd0
 805cdae:  xchg ax, ax
 805cdb0:  jmp 805a95e
 805cdb5:  mov ebx, DWORD PTR [ebp-0x4d4]
 805cdbb:  test ebx, ebx
 805cdbd:  jne 805ce30
 805cdbf:  mov esi, DWORD PTR [ebp-0x484]
 805cdc5:  mov eax, DWORD PTR [esi]
 805cdc7:  add esi, 0x4
 805cdca:  mov DWORD PTR [ebp-0x484], esi
 805cdd0:  jmp 805bacb
 805cdd5:  mov DWORD PTR [esp], ecx
 805cdd8:  call 8074540
 805cddd:  test eax, eax
 805cddf:  jne 805c95e
 805cde5:  mov eax, DWORD PTR [ebp-0x5a0]
 805cdeb:  mov DWORD PTR [esp], eax
 805cdee:  call 804d6f0
 805cdf3:  test eax, eax
 805cdf5:  mov esi, eax
 805cdf7:  je 8058ab6
 805cdfd:  mov DWORD PTR [ebp-0x518], 0x1
 805ce07:  jmp 805c97d
 805ce0c:  mov DWORD PTR [esp+0xc], 0x80b0e19
 805ce14:  mov DWORD PTR [esp+0x8], 0x62d
 805ce1c:  mov DWORD PTR [esp+0x4], 0x80b0dd7
 805ce24:  mov DWORD PTR [esp], 0x80b0de8
 805ce2b:  call 8051490
 805ce30:  mov edx, DWORD PTR [ebp-0x484]
 805ce36:  movsx eax, WORD PTR [edx]
 805ce39:  add edx, 0x4
 805ce3c:  mov DWORD PTR [ebp-0x484], edx
 805ce42:  jmp 805bacb
 805ce47:  mov DWORD PTR [esp+0x4], edx
 805ce4b:  mov DWORD PTR [esp], ecx
 805ce4e:  call 8068460
 805ce53:  add eax, 0x1
 805ce56:  jne 805c83b
 805ce5c:  jmp 8058ab6
 805ce61:  mov DWORD PTR [esp+0x4], 0x20
 805ce69:  mov DWORD PTR [esp], edx
 805ce6c:  call 8068460
 805ce71:  add eax, 0x1
 805ce74:  jne 805b5b8
 805ce7a:  jmp 8058ab6
 805ce7f:  mov DWORD PTR [esp+0xc], 0x80b0e19
 805ce87:  mov DWORD PTR [esp+0x8], 0x753
 805ce8f:  mov DWORD PTR [esp+0x4], 0x80b0dd7
 805ce97:  mov DWORD PTR [esp], 0x80b0e70
 805ce9e:  call 8051490
 805cea3:  mov DWORD PTR [esp+0x4], 0x25
 805ceab:  mov DWORD PTR [esp], ebx
 805ceae:  call 8068460
 805ceb3:  add eax, 0x1
 805ceb6:  jne 805a5be
 805cebc:  jmp 8058ab6
 805cec1:  mov DWORD PTR [esp+0xc], 0x80b0e19
 805cec9:  mov DWORD PTR [esp+0x8], 0x754
 805ced1:  mov DWORD PTR [esp+0x4], 0x80b0dd7
 805ced9:  mov DWORD PTR [esp], 0x80b0e70
 805cee0:  call 8051490
 805cee5:  mov DWORD PTR [esp+0x4], 0x2d
 805ceed:  mov DWORD PTR [esp], ebx
 805cef0:  call 8068460
 805cef5:  add eax, 0x1
 805cef8:  jne 805b745
 805cefe:  jmp 8058ab6
 805cf03:  mov DWORD PTR [esp+0x4], edx
 805cf07:  mov DWORD PTR [esp], ecx
 805cf0a:  call 8068460
 805cf0f:  add eax, 0x1
 805cf12:  jne 805a74c
 805cf18:  jmp 8058ab6
 805cf1d:  mov DWORD PTR [esp+0x4], edx
 805cf21:  mov DWORD PTR [esp], esi
 805cf24:  call 8068460
 805cf29:  add eax, 0x1
 805cf2c:  jne 80597f8
 805cf32:  jmp 8058ab6
 805cf37:  mov DWORD PTR [esp+0x4], 0x2d
 805cf3f:  mov DWORD PTR [esp], edx
 805cf42:  call 8068460
 805cf47:  add eax, 0x1
 805cf4a:  jne 805b5b8
 805cf50:  jmp 8058ab6
 805cf55:  mov DWORD PTR [esp], 0x80b0ec4
 805cf5c:  call 80490e0
 805cf61:  mov DWORD PTR [esp+0x4], 0x20
 805cf69:  mov DWORD PTR [esp], ebx
 805cf6c:  call 8068460
 805cf71:  add eax, 0x1
 805cf74:  jne 805b77b
 805cf7a:  jmp 8058ab6
 805cf7f:  mov DWORD PTR [esp+0x4], 0x2b
 805cf87:  mov DWORD PTR [esp], edx
 805cf8a:  call 8068460
 805cf8f:  add eax, 0x1
 805cf92:  jne 805b77b
 805cf98:  jmp 8058ab6
 805cf9d:  mov DWORD PTR [esp+0x4], 0x20
 805cfa5:  mov DWORD PTR [esp], edx
 805cfa8:  call 8068460
 805cfad:  add eax, 0x1
 805cfb0:  jne 805b745
 805cfb6:  jmp 8058ab6
 805cfbb:  mov DWORD PTR [esp], ebx
 805cfbe:  xchg ax, ax
 805cfc0:  call 804eea0
 805cfc5:  mov esi, eax
 805cfc7:  nop
 805cfc8:  jmp 805b53a
 805cfcd:  mov DWORD PTR [esp+0xc], 0x80b0e19
 805cfd5:  mov DWORD PTR [esp+0x8], 0x62d
 805cfdd:  mov DWORD PTR [esp+0x4], 0x80b0dd7
 805cfe5:  mov DWORD PTR [esp], 0x80b0e40
 805cfec:  call 8051490
 805cff1:  mov BYTE PTR [ebp-0x51e], 0x20
 805cff8:  jmp 805af15
 805cffd:  mov DWORD PTR [esp+0x4], 0x2d
 805d005:  mov DWORD PTR [esp], ecx
 805d008:  call 8068460
 805d00d:  add eax, 0x1
 805d010:  jne 805b77b
 805d016:  jmp 8058ab6
 805d01b:  mov DWORD PTR [esp+0x4], 0x25
 805d023:  mov DWORD PTR [esp], ebx
 805d026:  call 8068460
 805d02b:  add eax, 0x1
 805d02e:  jne 8059a33
 805d034:  jmp 8058ab6
 805d039:  mov DWORD PTR [esp+0x4], 0x2b
 805d041:  mov DWORD PTR [esp], edx
 805d044:  call 8068460
 805d049:  add eax, 0x1
 805d04c:  jne 805b5b8
 805d052:  jmp 8058ab6
 805d057:  movzx eax, BYTE PTR [ebp-0x51d]
 805d05e:  mov DWORD PTR [esp], edx
 805d061:  mov DWORD PTR [esp+0x4], eax
 805d065:  call 8068460
 805d06a:  add eax, 0x1
 805d06d:  jne 805c470
 805d073:  jmp 8058ab6
 805d078:  mov DWORD PTR [esp+0x4], 0x30
 805d080:  mov DWORD PTR [esp], ecx
 805d083:  call 8068460
 805d088:  add eax, 0x1
 805d08b:  jne 805c443
 805d091:  jmp 8058ab6
 805d096:  movzx eax, BYTE PTR [ebp-0x4b9]
 805d09d:  mov DWORD PTR [esp], edx
 805d0a0:  mov DWORD PTR [esp+0x4], eax
 805d0a4:  call 8068460
 805d0a9:  add eax, 0x1
 805d0ac:  jne 805c5f7
 805d0b2:  jmp 8058ab6
 805d0b7:  mov DWORD PTR [esp+0x4], 0x30
 805d0bf:  mov DWORD PTR [esp], ebx
 805d0c2:  call 8068460
 805d0c7:  add eax, 0x1
 805d0ca:  jne 805c5ca
 805d0d0:  jmp 8058ab6
 805d0d5:  movzx eax, BYTE PTR [ebp-0x51d]
 805d0dc:  mov DWORD PTR [esp], edx
 805d0df:  mov DWORD PTR [esp+0x4], eax
 805d0e3:  call 8068460
 805d0e8:  add eax, 0x1
 805d0eb:  jne 805c3d4
 805d0f1:  jmp 8058ab6
 805d0f6:  mov DWORD PTR [esp+0x4], 0x30
 805d0fe:  mov DWORD PTR [esp], edx
 805d101:  call 8068460
 805d106:  add eax, 0x1
 805d109:  jne 805c3a7
 805d10f:  jmp 8058ab6
 805d114:  mov DWORD PTR [esp+0x4], 0x2b
 805d11c:  mov DWORD PTR [esp], edx
 805d11f:  call 8068460
 805d124:  add eax, 0x1
 805d127:  jne 805b698
 805d12d:  jmp 8058ab6
 805d132:  mov ebx, DWORD PTR [ebp-0x484]
 805d138:  mov eax, DWORD PTR [ebx]
 805d13a:  add ebx, 0x4
 805d13d:  mov DWORD PTR [ebp-0x484], ebx
 805d143:  mov WORD PTR [eax], di
 805d146:  jmp 8058d80

0805d14b <_L_lock_631>:
 805d14b:  lea ecx, [edx]
 805d14d:  call 8050230
 805d152:  jmp 8058214

0805d157 <_L_unlock_749>:
 805d157:  lea eax, [edx]
 805d159:  call 8050260
 805d15e:  jmp 80582e3

0805d163 <_L_lock_1474>:
 805d163:  lea ecx, [esi]
 805d165:  call 8050230
 805d16a:  jmp 8058828

0805d16f <_L_unlock_2176>:
 805d16f:  lea eax, [edx]
 805d171:  call 8050260
 805d176:  jmp 8058b11
 805d17b:  nop
 805d17c:  nop
 805d17d:  nop
 805d17e:  nop
 805d17f:  nop

0805d180 <__guess_grouping>:
 805d180:  push ebp
 805d181:  mov ebp, esp
 805d183:  push edi
 805d184:  push esi
 805d185:  push ebx
 805d186:  mov edi, DWORD PTR [ebp+0xc]
 805d189:  xor ebx, ebx
 805d18b:  mov esi, DWORD PTR [ebp+0x8]
 805d18e:  movzx edx, BYTE PTR [edi]
 805d191:  lea eax, [edx-0x1]
 805d194:  cmp al, 0x7d
 805d196:  jbe 805d1aa
 805d198:  jmp 805d1bd
 805d19a:  lea esi, [esi]
 805d1a0:  test dl, dl
 805d1a2:  js 805d1bd
 805d1a4:  sub esi, ecx
 805d1a6:  test dl, dl
 805d1a8:  je 805d1c8
 805d1aa:  movsx ecx, dl
 805d1ad:  cmp esi, ecx
 805d1af:  jbe 805d1bd
 805d1b1:  add ebx, 0x1
 805d1b4:  movzx edx, BYTE PTR [edi+ebx]
 805d1b8:  cmp dl, 0x7f
 805d1bb:  jne 805d1a0
 805d1bd:  mov eax, ebx
 805d1bf:  pop ebx
 805d1c0:  pop esi
 805d1c1:  pop edi
 805d1c2:  pop ebp
 805d1c3:  ret
 805d1c4:  lea esi, [esi]
 805d1c8:  lea eax, [esi-0x1]
 805d1cb:  xor edx, edx
 805d1cd:  div ecx
 805d1cf:  add ebx, eax
 805d1d1:  mov eax, ebx
 805d1d3:  pop ebx
 805d1d4:  pop esi
 805d1d5:  pop edi
 805d1d6:  pop ebp
 805d1d7:  ret
 805d1d8:  nop
 805d1d9:  lea esi, [esi]

0805d1e0 <_i18n_number_rewrite>:
 805d1e0:  push ebp
 805d1e1:  mov ebp, esp
 805d1e3:  push edi
 805d1e4:  mov edi, edx
 805d1e6:  push esi
 805d1e7:  push ebx
 805d1e8:  sub esp, 0x4c
 805d1eb:  mov DWORD PTR [esp], 0x80b0da4
 805d1f2:  mov DWORD PTR [ebp-0x48], ecx
 805d1f5:  mov DWORD PTR [ebp-0x44], eax
 805d1f8:  call 8074460
 805d1fd:  mov DWORD PTR [esp], 0x2e
 805d204:  mov DWORD PTR [ebp-0x40], eax
 805d207:  mov DWORD PTR [esp+0x4], eax
 805d20b:  call 80744e0
 805d210:  mov DWORD PTR [esp], 0x2c
 805d217:  mov ebx, eax
 805d219:  mov eax, DWORD PTR [ebp-0x40]
 805d21c:  mov DWORD PTR [esp+0x4], eax
 805d220:  call 80744e0
 805d225:  mov edx, DWORD PTR [ebp-0x40]
 805d228:  test edx, edx
 805d22a:  mov esi, eax
 805d22c:  jne 805d3bb
 805d232:  mov ebx, edi
 805d234:  sub ebx, DWORD PTR [ebp-0x44]
 805d237:  cmp ebx, 0x1000
 805d23d:  ja 805d325
 805d243:  lea eax, [ebx+0x12]
 805d246:  and eax, 0xfc
 805d249:  sub esp, eax
 805d24b:  lea eax, [esp+0x1f]
 805d24f:  and eax, 0xf0
 805d252:  mov DWORD PTR [ebp-0x3c], eax
 805d255:  mov BYTE PTR [ebp-0x35], 0x1
 805d259:  mov eax, DWORD PTR [ebp-0x44]
 805d25c:  mov DWORD PTR [esp+0x8], ebx
 805d260:  mov DWORD PTR [esp+0x4], eax
 805d264:  mov eax, DWORD PTR [ebp-0x3c]
 805d267:  mov DWORD PTR [esp], eax
 805d26a:  call 806c310
 805d26f:  mov edi, eax
 805d271:  mov eax, DWORD PTR [ebp-0x48]
 805d274:  mov DWORD PTR [ebp-0x44], eax
 805d277:  nop
 805d278:  sub edi, 0x1
 805d27b:  cmp DWORD PTR [ebp-0x3c], edi
 805d27e:  ja 805d2f3
 805d280:  movzx edx, BYTE PTR [edi]
 805d283:  lea eax, [edx-0x30]
 805d286:  cmp al, 0x9
 805d288:  ja 805d310
 805d28e:  movsx ecx, dl
 805d291:  lea eax, [ecx-0x30]
 805d294:  cmp eax, 0x9
 805d297:  ja 805d34e
 805d29d:  mov edx, 0xffffffd8
 805d2a3:  mov eax, gs:0x0
 805d2a9:  mov eax, DWORD PTR [eax+edx]
 805d2ac:  mov edx, DWORD PTR [eax]
 805d2ae:  lea eax, [ecx-0x7]
 805d2b1:  and eax, 0xffff
 805d2b6:  mov ebx, DWORD PTR [edx+eax*4+0x24]
 805d2ba:  mov DWORD PTR [esp], ebx
 805d2bd:  call 804eea0
 805d2c2:  sub DWORD PTR [ebp-0x44], eax
 805d2c5:  test eax, eax
 805d2c7:  mov ecx, eax
 805d2c9:  je 805d278
 805d2cb:  mov eax, DWORD PTR [ebp-0x44]
 805d2ce:  xor edx, edx
 805d2d0:  add ebx, ecx
 805d2d2:  lea esi, [eax+ecx]
 805d2d5:  lea esi, [esi]
 805d2d8:  movzx eax, BYTE PTR [ebx+edx-0x1]
 805d2dd:  mov BYTE PTR [esi+edx-0x1], al
 805d2e1:  sub edx, 0x1
 805d2e4:  lea eax, [edx+ecx]
 805d2e7:  test eax, eax
 805d2e9:  jne 805d2d8
 805d2eb:  sub edi, 0x1
 805d2ee:  cmp DWORD PTR [ebp-0x3c], edi
 805d2f1:  jbe 805d280
 805d2f3:  cmp BYTE PTR [ebp-0x35], 0x0
 805d2f7:  jne 805d304
 805d2f9:  mov eax, DWORD PTR [ebp-0x3c]
 805d2fc:  mov DWORD PTR [esp], eax
 805d2ff:  call 804b4a0
 805d304:  mov eax, DWORD PTR [ebp-0x44]
 805d307:  lea esp, [ebp-0xc]
 805d30a:  pop ebx
 805d30b:  pop esi
 805d30c:  pop edi
 805d30d:  pop ebp
 805d30e:  ret
 805d30f:  nop
 805d310:  mov eax, DWORD PTR [ebp-0x40]
 805d313:  test eax, eax
 805d315:  jne 805d372
 805d317:  sub DWORD PTR [ebp-0x44], 0x1
 805d31b:  mov eax, DWORD PTR [ebp-0x44]
 805d31e:  mov BYTE PTR [eax], dl
 805d320:  jmp 805d278
 805d325:  mov DWORD PTR [esp], ebx
 805d328:  call 8074540
 805d32d:  test eax, eax
 805d32f:  jne 805d243
 805d335:  mov DWORD PTR [esp], ebx
 805d338:  call 804d6f0
 805d33d:  mov BYTE PTR [ebp-0x35], 0x0
 805d341:  test eax, eax
 805d343:  mov DWORD PTR [ebp-0x3c], eax
 805d346:  jne 805d259
 805d34c:  jmp 805d304
 805d34e:  mov DWORD PTR [esp+0xc], 0x80b0e2f
 805d356:  mov DWORD PTR [esp+0x8], 0x24
 805d35e:  mov DWORD PTR [esp+0x4], 0x80b0db0
 805d366:  mov DWORD PTR [esp], 0x80b0dc6
 805d36d:  call 8051490
 805d372:  cmp dl, 0x2e
 805d375:  je 805d3b6
 805d377:  cmp dl, 0x2c
 805d37a:  jne 805d317
 805d37c:  lea ebx, [ebp-0x34]
 805d37f:  mov DWORD PTR [esp], ebx
 805d382:  call 804eea0
 805d387:  sub DWORD PTR [ebp-0x44], eax
 805d38a:  test eax, eax
 805d38c:  mov ecx, eax
 805d38e:  je 805d278
 805d394:  mov eax, DWORD PTR [ebp-0x44]
 805d397:  xor edx, edx
 805d399:  add ebx, ecx
 805d39b:  lea esi, [eax+ecx]
 805d39e:  movzx eax, BYTE PTR [ebx+edx-0x1]
 805d3a3:  mov BYTE PTR [esi+edx-0x1], al
 805d3a7:  sub edx, 0x1
 805d3aa:  lea eax, [edx+ecx]
 805d3ad:  test eax, eax
 805d3af:  jne 805d39e
 805d3b1:  jmp 805d278
 805d3b6:  lea ebx, [ebp-0x24]
 805d3b9:  jmp 805d37f
 805d3bb:  lea eax, [ebp-0x14]
 805d3be:  mov DWORD PTR [esp+0x8], eax
 805d3c2:  lea eax, [ebp-0x24]
 805d3c5:  mov DWORD PTR [ebp-0x14], 0x0
 805d3cc:  mov DWORD PTR [ebp-0x10], 0x0
 805d3d3:  mov DWORD PTR [esp+0x4], ebx
 805d3d7:  mov DWORD PTR [esp], eax
 805d3da:  call 806c600
 805d3df:  add eax, 0x1
 805d3e2:  je 805d41c
 805d3e4:  lea eax, [ebp-0x14]
 805d3e7:  mov DWORD PTR [esp+0x8], eax
 805d3eb:  lea eax, [ebp-0x34]
 805d3ee:  mov DWORD PTR [ebp-0x14], 0x0
 805d3f5:  mov DWORD PTR [ebp-0x10], 0x0
 805d3fc:  mov DWORD PTR [esp+0x4], esi
 805d400:  mov DWORD PTR [esp], eax
 805d403:  call 806c600
 805d408:  add eax, 0x1
 805d40b:  jne 805d232
 805d411:  mov WORD PTR [ebp-0x34], 0x2c
 805d417:  jmp 805d232
 805d41c:  mov WORD PTR [ebp-0x24], 0x2e
 805d422:  lea esi, [esi]
 805d428:  jmp 805d3e4
 805d42a:  lea esi, [esi]

0805d430 <___printf_fp>:
 805d430:  push ebp
 805d431:  mov ebp, esp
 805d433:  push edi
 805d434:  push esi
 805d435:  push ebx
 805d436:  sub esp, 0x13c
 805d43c:  mov edx, DWORD PTR [ebp+0xc]
 805d43f:  mov DWORD PTR [ebp-0x24], 0x0
 805d446:  mov esi, DWORD PTR [ebp+0x10]
 805d449:  mov DWORD PTR [ebp-0x10], 0x0
 805d450:  movzx eax, BYTE PTR [edx+0xd]
 805d454:  mov edx, eax
 805d456:  shr dl, 0x2
 805d459:  mov ecx, edx
 805d45b:  and ecx, 0x1
 805d45e:  mov DWORD PTR [ebp-0xcc], ecx
 805d464:  mov ecx, eax
 805d466:  and ecx, 0x1
 805d469:  jne 805d698
 805d46f:  mov ebx, DWORD PTR gs:0x0
 805d476:  mov eax, 0xffffffe0
 805d47b:  mov DWORD PTR [ebp-0x120], ebx
 805d481:  mov eax, DWORD PTR [ebx+eax]
 805d484:  mov eax, DWORD PTR [eax]
 805d486:  mov edi, DWORD PTR [eax+0x24]
 805d489:  mov DWORD PTR [ebp-0xe0], edi
 805d48f:  mov eax, DWORD PTR [eax+0x30]
 805d492:  mov DWORD PTR [ebp-0x64], eax
 805d495:  mov edi, DWORD PTR [ebp+0xc]
 805d498:  movzx ebx, BYTE PTR [edi+0xc]
 805d49c:  test bl, bl
 805d49e:  jns 805d608
 805d4a4:  test cl, cl
 805d4a6:  jne 805d708
 805d4ac:  mov edx, DWORD PTR [ebp-0x120]
 805d4b2:  mov eax, 0xffffffe0
 805d4b7:  mov eax, DWORD PTR [edx+eax]
 805d4ba:  mov eax, DWORD PTR [eax]
 805d4bc:  mov eax, DWORD PTR [eax+0x2c]
 805d4bf:  mov DWORD PTR [ebp-0xd4], eax
 805d4c5:  mov edx, eax
 805d4c7:  movzx eax, BYTE PTR [edx]
 805d4ca:  sub eax, 0x1
 805d4cd:  cmp al, 0x7d
 805d4cf:  ja 805d608
 805d4d5:  mov edi, DWORD PTR [ebp-0xcc]
 805d4db:  test edi, edi
 805d4dd:  je 805d9b8
 805d4e3:  test cl, cl
 805d4e5:  jne 805da00
 805d4eb:  mov eax, 0xffffffe0
 805d4f0:  mov ecx, DWORD PTR [ebp-0x120]
 805d4f6:  mov eax, DWORD PTR [ecx+eax]
 805d4f9:  mov eax, DWORD PTR [eax]
 805d4fb:  mov eax, DWORD PTR [eax+0x34]
 805d4fe:  mov DWORD PTR [ebp-0xd8], eax
 805d504:  cmp DWORD PTR [ebp-0xd8], 0x1
 805d50b:  mov DWORD PTR [ebp-0xdc], 0x0
 805d515:  sbb eax, eax
 805d517:  not eax
 805d519:  and DWORD PTR [ebp-0xd4], eax
 805d51f:  test bl, 0x1
 805d522:  jne 805d62f
 805d528:  mov eax, DWORD PTR [esi]
 805d52a:  fld QWORD PTR [eax]
 805d52c:  fst QWORD PTR [ebp-0xfc]
 805d532:  fstp QWORD PTR [esp]
 805d535:  call 808aeb0
 805d53a:  test eax, eax
 805d53c:  je 805d938
 805d542:  mov ecx, 0xfffffff4
 805d548:  mov eax, DWORD PTR [ebp-0x120]
 805d54e:  mov DWORD PTR [ebp-0x10], 0x0
 805d555:  mov edi, DWORD PTR [eax+ecx]
 805d558:  test edi, edi
 805d55a:  je 805da68
 805d560:  mov edi, DWORD PTR [ebp+0xc]
 805d563:  mov esi, DWORD PTR [ebp-0x120]
 805d569:  mov edx, DWORD PTR [edi+0x8]
 805d56c:  mov edi, 0x80b1458
 805d571:  mov eax, DWORD PTR [esi+ecx]
 805d574:  mov esi, 0x80b1474
 805d579:  test BYTE PTR [eax+edx*2+0x1], 0x1
 805d57e:  je 805d8b0
 805d584:  lea esi, [esi]
 805d588:  mov edx, DWORD PTR [ebp+0xc]
 805d58b:  mov eax, DWORD PTR [edx+0x4]
 805d58e:  mov edx, DWORD PTR [ebp-0x10]
 805d591:  test edx, edx
 805d593:  jne 805d59a
 805d595:  test bl, 0x50
 805d598:  je 805d59d
 805d59a:  sub eax, 0x1
 805d59d:  sub eax, 0x3
 805d5a0:  test eax, eax
 805d5a2:  setg BYTE PTR [ebp-0xf1]
 805d5a9:  and ebx, 0x20
 805d5ac:  mov DWORD PTR [ebp-0x5c], eax
 805d5af:  jne 805d728
 805d5b5:  cmp BYTE PTR [ebp-0xf1], 0x0
 805d5bc:  je 805d728
 805d5c2:  mov ecx, DWORD PTR [ebp-0xcc]
 805d5c8:  test ecx, ecx
 805d5ca:  je 805da8b
 805d5d0:  mov ebx, DWORD PTR [ebp+0x8]
 805d5d3:  mov ecx, DWORD PTR [ebp-0x5c]
 805d5d6:  mov DWORD PTR [esp+0x4], 0x20
 805d5de:  mov DWORD PTR [esp], ebx
 805d5e1:  mov DWORD PTR [esp+0x8], ecx
 805d5e5:  call 8062c50
 805d5ea:  mov ebx, eax
 805d5ec:  cmp ebx, DWORD PTR [ebp-0x5c]
 805d5ef:  je 805d72a
 805d5f5:  lea esi, [esi]
 805d5f8:  mov esi, 0xffffffff
 805d5fd:  lea esp, [ebp-0xc]
 805d600:  mov eax, esi
 805d602:  pop ebx
 805d603:  pop esi
 805d604:  pop edi
 805d605:  pop ebp
 805d606:  ret
 805d607:  nop
 805d608:  mov DWORD PTR [ebp-0xdc], 0x0
 805d612:  mov DWORD PTR [ebp-0xd8], 0x0
 805d61c:  mov DWORD PTR [ebp-0xd4], 0x0
 805d626:  test bl, 0x1
 805d629:  je 805d528
 805d62f:  mov eax, DWORD PTR [esi]
 805d631:  fld TBYTE PTR [eax]
 805d633:  fld st(0)
 805d635:  fstp TBYTE PTR [ebp-0x108]
 805d63b:  fstp TBYTE PTR [esp]
 805d63e:  call 808af40
 805d643:  test eax, eax
 805d645:  je 805d8c0
 805d64b:  mov ecx, 0xfffffff4
 805d651:  mov eax, DWORD PTR [ebp-0x120]
 805d657:  mov esi, DWORD PTR [eax+ecx]
 805d65a:  test esi, esi
 805d65c:  je 805da45
 805d662:  mov edi, DWORD PTR [ebp+0xc]
 805d665:  mov esi, DWORD PTR [ebp-0x120]
 805d66b:  mov edx, DWORD PTR [edi+0x8]
 805d66e:  mov edi, 0x80b1458
 805d673:  mov eax, DWORD PTR [esi+ecx]
 805d676:  mov esi, 0x80b1474
 805d67b:  test BYTE PTR [eax+edx*2+0x1], 0x1
 805d680:  je 805d898
 805d686:  mov DWORD PTR [ebp-0x10], 0x0
 805d68d:  jmp 805d588
 805d692:  lea esi, [esi]
 805d698:  mov eax, gs:0x0
 805d69e:  mov DWORD PTR [ebp-0x120], eax
 805d6a4:  mov eax, 0xffffffdc
 805d6a9:  mov edx, DWORD PTR [ebp-0x120]
 805d6af:  mov eax, DWORD PTR [edx+eax]
 805d6b2:  mov edx, DWORD PTR [eax]
 805d6b4:  mov ebx, DWORD PTR [edx+0x2c]
 805d6b7:  mov DWORD PTR [ebp-0xe0], ebx
 805d6bd:  cmp BYTE PTR [ebx], 0x0
 805d6c0:  jne 805d6db
 805d6c2:  mov eax, 0xffffffe0
 805d6c7:  mov edi, DWORD PTR [ebp-0x120]
 805d6cd:  mov eax, DWORD PTR [edi+eax]
 805d6d0:  mov eax, DWORD PTR [eax]
 805d6d2:  mov eax, DWORD PTR [eax+0x24]
 805d6d5:  mov DWORD PTR [ebp-0xe0], eax
 805d6db:  mov edx, DWORD PTR [edx+0xd0]
 805d6e1:  test edx, edx
 805d6e3:  mov DWORD PTR [ebp-0x64], edx
 805d6e6:  jne 805d495
 805d6ec:  mov eax, 0xffffffe0
 805d6f1:  mov edx, DWORD PTR [ebp-0x120]
 805d6f7:  mov eax, DWORD PTR [edx+eax]
 805d6fa:  mov eax, DWORD PTR [eax]
 805d6fc:  mov eax, DWORD PTR [eax+0x30]
 805d6ff:  mov DWORD PTR [ebp-0x64], eax
 805d702:  jmp 805d495
 805d707:  nop
 805d708:  mov eax, 0xffffffdc
 805d70d:  mov edi, DWORD PTR [ebp-0x120]
 805d713:  mov eax, DWORD PTR [edi+eax]
 805d716:  mov eax, DWORD PTR [eax]
 805d718:  mov eax, DWORD PTR [eax+0x34]
 805d71b:  mov DWORD PTR [ebp-0xd4], eax
 805d721:  mov edx, eax
 805d723:  jmp 805d4c7
 805d728:  xor ebx, ebx
 805d72a:  mov edx, DWORD PTR [ebp-0x10]
 805d72d:  test edx, edx
 805d72f:  jne 805e907
 805d735:  mov edx, DWORD PTR [ebp+0xc]
 805d738:  movzx eax, BYTE PTR [edx+0xc]
 805d73c:  test al, 0x40
 805d73e:  jne 805e9cd
 805d744:  test al, 0x10
 805d746:  jne 805ea90
 805d74c:  mov eax, DWORD PTR [ebp-0xcc]
 805d752:  test eax, eax
 805d754:  je 805d838
 805d75a:  mov edi, DWORD PTR [ebp+0x8]
 805d75d:  mov ecx, DWORD PTR [esi]
 805d75f:  add esi, 0x4
 805d762:  mov edx, DWORD PTR [edi+0x58]
 805d765:  mov eax, DWORD PTR [edx+0x10]
 805d768:  cmp eax, DWORD PTR [edx+0x14]
 805d76b:  jae 805f930
 805d771:  mov DWORD PTR [eax], ecx
 805d773:  add ecx, 0x1
 805d776:  sete cl
 805d779:  add eax, 0x4
 805d77c:  mov DWORD PTR [edx+0x10], eax
 805d77f:  test cl, cl
 805d781:  jne 805d5f8
 805d787:  mov edi, DWORD PTR [ebp+0x8]
 805d78a:  mov ecx, DWORD PTR [esi]
 805d78c:  mov edx, DWORD PTR [edi+0x58]
 805d78f:  mov eax, DWORD PTR [edx+0x10]
 805d792:  cmp eax, DWORD PTR [edx+0x14]
 805d795:  jae 805f95c
 805d79b:  mov DWORD PTR [eax], ecx
 805d79d:  add ecx, 0x1
 805d7a0:  sete cl
 805d7a3:  add eax, 0x4
 805d7a6:  mov DWORD PTR [edx+0x10], eax
 805d7a9:  test cl, cl
 805d7ab:  jne 805d5f8
 805d7b1:  mov ecx, DWORD PTR [esi+0x4]
 805d7b4:  add ebx, 0x2
 805d7b7:  mov esi, DWORD PTR [ebp+0x8]
 805d7ba:  mov edx, DWORD PTR [esi+0x58]
 805d7bd:  mov eax, DWORD PTR [edx+0x10]
 805d7c0:  cmp eax, DWORD PTR [edx+0x14]
 805d7c3:  jae 805f976
 805d7c9:  mov DWORD PTR [eax], ecx
 805d7cb:  add ecx, 0x1
 805d7ce:  sete cl
 805d7d1:  add eax, 0x4
 805d7d4:  mov DWORD PTR [edx+0x10], eax
 805d7d7:  test cl, cl
 805d7d9:  jne 805d5f8
 805d7df:  cmp BYTE PTR [ebp-0xf1], 0x0
 805d7e6:  lea esi, [ebx+0x1]
 805d7e9:  je 805d5fd
 805d7ef:  mov edi, DWORD PTR [ebp+0xc]
 805d7f2:  test BYTE PTR [edi+0xc], 0x20
 805d7f6:  je 805d5fd
 805d7fc:  mov eax, DWORD PTR [ebp-0xcc]
 805d802:  test eax, eax
 805d804:  je 805ef92
 805d80a:  mov eax, DWORD PTR [ebp-0x5c]
 805d80d:  mov edx, DWORD PTR [ebp+0x8]
 805d810:  mov DWORD PTR [esp+0x4], 0x20
 805d818:  mov DWORD PTR [esp+0x8], eax
 805d81c:  mov DWORD PTR [esp], edx
 805d81f:  call 8062c50
 805d824:  cmp eax, DWORD PTR [ebp-0x5c]
 805d827:  jne 805d5f8
 805d82d:  add esi, eax
 805d82f:  jmp 805d5fd
 805d834:  lea esi, [esi]
 805d838:  movzx edx, BYTE PTR [edi]
 805d83b:  lea esi, [edi+0x1]
 805d83e:  mov edi, DWORD PTR [ebp+0x8]
 805d841:  mov eax, DWORD PTR [edi+0x14]
 805d844:  cmp eax, DWORD PTR [edi+0x18]
 805d847:  jae 805f8ed
 805d84d:  mov BYTE PTR [eax], dl
 805d84f:  add eax, 0x1
 805d852:  mov DWORD PTR [edi+0x14], eax
 805d855:  mov ecx, DWORD PTR [ebp+0x8]
 805d858:  movzx edx, BYTE PTR [esi]
 805d85b:  mov eax, DWORD PTR [ecx+0x14]
 805d85e:  cmp eax, DWORD PTR [ecx+0x18]
 805d861:  jae 805f910
 805d867:  mov BYTE PTR [eax], dl
 805d869:  add eax, 0x1
 805d86c:  mov DWORD PTR [ecx+0x14], eax
 805d86f:  mov ecx, DWORD PTR [ebp+0x8]
 805d872:  add ebx, 0x2
 805d875:  movzx edx, BYTE PTR [esi+0x1]
 805d879:  mov eax, DWORD PTR [ecx+0x14]
 805d87c:  cmp eax, DWORD PTR [ecx+0x18]
 805d87f:  jae 805f98d
 805d885:  mov BYTE PTR [eax], dl
 805d887:  mov esi, DWORD PTR [ebp+0x8]
 805d88a:  add eax, 0x1
 805d88d:  mov DWORD PTR [esi+0x14], eax
 805d890:  jmp 805d7df
 805d895:  lea esi, [esi]
 805d898:  mov edi, 0x80b1454
 805d89d:  mov esi, 0x80b1464
 805d8a2:  mov DWORD PTR [ebp-0x10], 0x0
 805d8a9:  jmp 805d588
 805d8ae:  xchg ax, ax
 805d8b0:  mov edi, 0x80b1454
 805d8b5:  mov esi, 0x80b1464
 805d8ba:  jmp 805d588
 805d8bf:  nop
 805d8c0:  fld TBYTE PTR [ebp-0x108]
 805d8c6:  fstp TBYTE PTR [esp]
 805d8c9:  call 808aee0
 805d8ce:  test eax, eax
 805d8d0:  je 805dd34
 805d8d6:  mov ecx, 0xfffffff4
 805d8dc:  mov eax, DWORD PTR [ebp-0x120]
 805d8e2:  mov edx, DWORD PTR [eax+ecx]
 805d8e5:  test edx, edx
 805d8e7:  je 805eee3
 805d8ed:  mov edi, DWORD PTR [ebp+0xc]
 805d8f0:  mov esi, DWORD PTR [ebp-0x120]
 805d8f6:  mov edx, DWORD PTR [edi+0x8]
 805d8f9:  mov edi, 0x80b1460
 805d8fe:  mov eax, DWORD PTR [esi+ecx]
 805d901:  mov esi, 0x80b1494
 805d906:  test BYTE PTR [eax+edx*2+0x1], 0x1
 805d90b:  jne 805d917
 805d90d:  mov edi, 0x80b145c
 805d912:  mov esi, 0x80b1484
 805d917:  fldz
 805d919:  fld TBYTE PTR [ebp-0x108]
 805d91f:  fxch st(1)
 805d921:  fucompp
 805d923:  fnstsw ax
 805d925:  test ah, 0x45
 805d928:  sete al
 805d92b:  movzx eax, al
 805d92e:  mov DWORD PTR [ebp-0x10], eax
 805d931:  jmp 805d588
 805d936:  xchg ax, ax
 805d938:  fld QWORD PTR [ebp-0xfc]
 805d93e:  fstp QWORD PTR [esp]
 805d941:  call 808ae70
 805d946:  test eax, eax
 805d948:  je 805daac
 805d94e:  fldz
 805d950:  mov ecx, 0xfffffff4
 805d956:  fld QWORD PTR [ebp-0xfc]
 805d95c:  fxch st(1)
 805d95e:  fucompp
 805d960:  fnstsw ax
 805d962:  test ah, 0x45
 805d965:  sete al
 805d968:  movzx eax, al
 805d96b:  mov DWORD PTR [ebp-0x10], eax
 805d96e:  mov eax, DWORD PTR [ebp-0x120]
 805d974:  mov esi, DWORD PTR [eax+ecx]
 805d977:  test esi, esi
 805d979:  je 805eec0
 805d97f:  mov edi, DWORD PTR [ebp+0xc]
 805d982:  mov esi, DWORD PTR [ebp-0x120]
 805d988:  mov edx, DWORD PTR [edi+0x8]
 805d98b:  mov edi, 0x80b1460
 805d990:  mov eax, DWORD PTR [esi+ecx]
 805d993:  mov esi, 0x80b1494
 805d998:  test BYTE PTR [eax+edx*2+0x1], 0x1
 805d99d:  jne 805d588
 805d9a3:  mov edi, 0x80b145c
 805d9a8:  mov esi, 0x80b1484
 805d9ad:  jmp 805d588
 805d9b2:  lea esi, [esi]
 805d9b8:  test cl, cl
 805d9ba:  jne 805da28
 805d9bc:  mov eax, 0xffffffe0
 805d9c1:  mov edx, DWORD PTR [ebp-0x120]
 805d9c7:  mov eax, DWORD PTR [edx+eax]
 805d9ca:  mov eax, DWORD PTR [eax]
 805d9cc:  mov eax, DWORD PTR [eax+0x28]
 805d9cf:  mov DWORD PTR [ebp-0xdc], eax
 805d9d5:  mov edi, eax
 805d9d7:  cmp BYTE PTR [edi], 0x1
 805d9da:  sbb eax, eax
 805d9dc:  not eax
 805d9de:  and eax, 0xfe
 805d9e1:  mov DWORD PTR [ebp-0xd8], eax
 805d9e7:  cmp BYTE PTR [edi], 0x1
 805d9ea:  sbb eax, eax
 805d9ec:  not eax
 805d9ee:  and DWORD PTR [ebp-0xd4], eax
 805d9f4:  jmp 805d626
 805d9f9:  lea esi, [esi]
 805da00:  mov eax, 0xffffffdc
 805da05:  mov edi, DWORD PTR [ebp-0x120]
 805da0b:  mov eax, DWORD PTR [edi+eax]
 805da0e:  mov eax, DWORD PTR [eax]
 805da10:  mov eax, DWORD PTR [eax+0xd4]
 805da16:  mov DWORD PTR [ebp-0xd8], eax
 805da1c:  jmp 805d504
 805da21:  lea esi, [esi]
 805da28:  mov eax, 0xffffffdc
 805da2d:  mov ecx, DWORD PTR [ebp-0x120]
 805da33:  mov eax, DWORD PTR [ecx+eax]
 805da36:  mov eax, DWORD PTR [eax]
 805da38:  mov eax, DWORD PTR [eax+0x30]
 805da3b:  mov DWORD PTR [ebp-0xdc], eax
 805da41:  mov edi, eax
 805da43:  jmp 805d9d7
 805da45:  mov edx, eax
 805da47:  mov eax, 0xffffffd8
 805da4c:  mov esi, DWORD PTR [ebp+0xc]
 805da4f:  mov eax, DWORD PTR [edx+eax]
 805da52:  mov eax, DWORD PTR [eax]
 805da54:  mov eax, DWORD PTR [eax+0x24]
 805da57:  add eax, 0x100
 805da5c:  mov DWORD PTR [edx+ecx], eax
 805da5f:  movzx ebx, BYTE PTR [esi+0xc]
 805da63:  jmp 805d662
 805da68:  mov edx, eax
 805da6a:  mov eax, 0xffffffd8
 805da6f:  mov esi, DWORD PTR [ebp+0xc]
 805da72:  mov eax, DWORD PTR [edx+eax]
 805da75:  mov eax, DWORD PTR [eax]
 805da77:  mov eax, DWORD PTR [eax+0x24]
 805da7a:  add eax, 0x100
 805da7f:  mov DWORD PTR [edx+ecx], eax
 805da82:  movzx ebx, BYTE PTR [esi+0xc]
 805da86:  jmp 805d560
 805da8b:  mov eax, DWORD PTR [ebp-0x5c]
 805da8e:  mov edx, DWORD PTR [ebp+0x8]
 805da91:  mov DWORD PTR [esp+0x4], 0x20
 805da99:  mov DWORD PTR [esp+0x8], eax
 805da9d:  mov DWORD PTR [esp], edx
 805daa0:  call 8062880
 805daa5:  mov ebx, eax
 805daa7:  jmp 805d5ec
 805daac:  lea eax, [ebp-0x10]
 805daaf:  fld QWORD PTR [ebp-0xfc]
 805dab5:  mov DWORD PTR [esp+0xc], eax
 805dab9:  lea eax, [ebp-0x2c]
 805dabc:  mov DWORD PTR [esp+0x8], eax
 805dac0:  lea eax, [ebp-0x18]
 805dac3:  fstp QWORD PTR [esp+0x10]
 805dac7:  mov DWORD PTR [esp+0x4], 0x2
 805dacf:  mov DWORD PTR [ebp-0x118], eax
 805dad5:  mov DWORD PTR [esp], eax
 805dad8:  call 808daf0
 805dadd:  mov DWORD PTR [ebp-0x34], eax
 805dae0:  shl eax, 0x5
 805dae3:  sub eax, 0x34
 805dae6:  mov DWORD PTR [ebp-0xd0], eax
 805daec:  mov ebx, DWORD PTR [ebp-0x2c]
 805daef:  mov DWORD PTR [ebp-0x30], 0x0
 805daf6:  mov eax, ebx
 805daf8:  mov edi, ebx
 805dafa:  sar eax, 0x1f
 805dafd:  mov edx, eax
 805daff:  xor edx, ebx
 805db01:  sub edx, eax
 805db03:  add edx, 0x1f
 805db06:  sar edx, 0x5
 805db09:  lea edx, [edx*4+0x20]
 805db10:  sub esp, edx
 805db12:  lea esi, [esp+0x2b]
 805db16:  sub esp, edx
 805db18:  lea eax, [esp+0x2b]
 805db1c:  sub esp, edx
 805db1e:  and eax, 0xf0
 805db21:  and esi, 0xf0
 805db24:  mov DWORD PTR [ebp-0x3c], eax
 805db27:  lea eax, [esp+0x2b]
 805db2b:  and eax, 0xf0
 805db2e:  cmp ebx, 0x2
 805db31:  mov DWORD PTR [ebp-0x38], esi
 805db34:  mov DWORD PTR [ebp-0x40], eax
 805db37:  jle 805e8bd
 805db3d:  mov eax, DWORD PTR [ebp-0xd0]
 805db43:  lea edx, [ebx+eax]
 805db46:  test dl, 0x1f
 805db49:  jne 805f0d7
 805db4f:  mov ecx, DWORD PTR [ebp-0x34]
 805db52:  mov DWORD PTR [ebp-0x10c], ecx
 805db58:  sub ecx, 0x1
 805db5b:  js 805db99
 805db5d:  mov eax, DWORD PTR [ebp-0x118]
 805db63:  lea edi, [eax+ecx*4]
 805db66:  mov eax, edx
 805db68:  sar eax, 0x1f
 805db6b:  shr eax, 0x1b
 805db6e:  add eax, edx
 805db70:  sar eax, 0x5
 805db73:  mov DWORD PTR [ebp-0x124], eax
 805db79:  mov edx, DWORD PTR [ebp-0x124]
 805db7f:  mov eax, DWORD PTR [edi]
 805db81:  sub edi, 0x4
 805db84:  add edx, ecx
 805db86:  sub ecx, 0x1
 805db89:  mov DWORD PTR [esi+edx*4], eax
 805db8c:  jns 805db79
 805db8e:  mov ecx, DWORD PTR [ebp-0xd0]
 805db94:  mov edi, ebx
 805db96:  lea edx, [ebx+ecx]
 805db99:  mov eax, edx
 805db9b:  sar eax, 0x1f
 805db9e:  shr eax, 0x1b
 805dba1:  add eax, edx
 805dba3:  sar eax, 0x5
 805dba6:  add eax, DWORD PTR [ebp-0x10c]
 805dbac:  mov DWORD PTR [ebp-0x34], eax
 805dbaf:  cmp edx, 0x1f
 805dbb2:  jle 805dbe0
 805dbb4:  mov edi, DWORD PTR [ebp-0xd0]
 805dbba:  xor ecx, ecx
 805dbbc:  mov esi, DWORD PTR [ebp-0x38]
 805dbbf:  lea edx, [ebx+edi]
 805dbc2:  mov eax, edx
 805dbc4:  sar eax, 0x1f
 805dbc7:  shr eax, 0x1b
 805dbca:  add eax, edx
 805dbcc:  sar eax, 0x5
 805dbcf:  nop
 805dbd0:  mov DWORD PTR [esi+ecx*4], 0x0
 805dbd7:  add ecx, 0x1
 805dbda:  mov edi, ebx
 805dbdc:  cmp eax, ecx
 805dbde:  jg 805dbd0
 805dbe0:  mov eax, DWORD PTR [ebp-0x30]
 805dbe3:  mov esi, 0x80c4b70
 805dbe8:  mov DWORD PTR [ebp-0xc0], 0x0
 805dbf2:  mov DWORD PTR [ebp-0xbc], 0xc
 805dbfc:  mov DWORD PTR [ebp-0xb8], 0x0
 805dc06:  mov DWORD PTR [ebp-0x128], eax
 805dc0c:  jmp 805dc66
 805dc0e:  xchg ax, ax
 805dc10:  mov ebx, DWORD PTR [esi+0x4]
 805dc13:  mov edx, DWORD PTR [esi]
 805dc15:  lea eax, [ebx*4]
 805dc1c:  mov DWORD PTR [esp+0x8], eax
 805dc20:  mov eax, DWORD PTR [ebp-0x3c]
 805dc23:  lea edx, [edx*4+0x80c3cc0]
 805dc2a:  mov DWORD PTR [esp+0x4], edx
 805dc2e:  mov DWORD PTR [esp], eax
 805dc31:  call 804efc0
 805dc36:  cmp ebx, DWORD PTR [ebp-0x34]
 805dc39:  jl 805dcd0
 805dc3f:  je 805ef06
 805dc45:  mov ebx, DWORD PTR [ebp-0x30]
 805dc48:  mov DWORD PTR [ebp-0x128], ebx
 805dc4e:  mov edi, DWORD PTR [ebp-0xbc]
 805dc54:  test edi, edi
 805dc56:  je 805dd79
 805dc5c:  sub DWORD PTR [ebp-0xbc], 0x1
 805dc63:  mov edi, DWORD PTR [ebp-0x2c]
 805dc66:  sub esi, 0x10
 805dc69:  mov edx, DWORD PTR [ebp-0xc0]
 805dc6f:  mov eax, DWORD PTR [esi+0x8]
 805dc72:  lea eax, [edx+eax-0x1]
 805dc76:  cmp eax, edi
 805dc78:  jg 805dc4e
 805dc7a:  mov eax, DWORD PTR [ebp-0x128]
 805dc80:  test eax, eax
 805dc82:  je 805dc10
 805dc84:  mov eax, DWORD PTR [esi+0x4]
 805dc87:  mov ecx, DWORD PTR [ebp-0x128]
 805dc8d:  sub eax, 0x2
 805dc90:  mov DWORD PTR [esp+0x10], eax
 805dc94:  mov eax, DWORD PTR [esi]
 805dc96:  mov DWORD PTR [esp+0x8], ecx
 805dc9a:  lea eax, [eax*4+0x80c3cc8]
 805dca1:  mov DWORD PTR [esp+0xc], eax
 805dca5:  mov eax, DWORD PTR [ebp-0x40]
 805dca8:  mov DWORD PTR [esp+0x4], eax
 805dcac:  mov eax, DWORD PTR [ebp-0x3c]
 805dcaf:  mov DWORD PTR [esp], eax
 805dcb2:  call 808c280
 805dcb7:  mov edx, DWORD PTR [esi+0x4]
 805dcba:  add edx, DWORD PTR [ebp-0x30]
 805dcbd:  lea ebx, [edx-0x2]
 805dcc0:  test eax, eax
 805dcc2:  jne 805dc36
 805dcc8:  lea ebx, [edx-0x3]
 805dccb:  jmp 805dc36
 805dcd0:  lea eax, [ebx*4]
 805dcd7:  mov DWORD PTR [esp+0x8], eax
 805dcdb:  mov eax, DWORD PTR [ebp-0x3c]
 805dcde:  mov DWORD PTR [ebp-0x30], ebx
 805dce1:  mov DWORD PTR [esp+0x4], eax
 805dce5:  mov eax, DWORD PTR [ebp-0x40]
 805dce8:  mov DWORD PTR [esp], eax
 805dceb:  call 804efc0
 805dcf0:  mov eax, DWORD PTR [ebp-0x30]
 805dcf3:  movzx ecx, BYTE PTR [ebp-0xbc]
 805dcfa:  mov DWORD PTR [ebp-0x128], eax
 805dd00:  mov edx, eax
 805dd02:  mov eax, DWORD PTR [ebp-0x40]
 805dd05:  sub edx, 0x1
 805dd08:  bsr eax, DWORD PTR [eax+edx*4]
 805dd0c:  mov edx, DWORD PTR [ebp-0x128]
 805dd12:  shl edx, 0x5
 805dd15:  xor eax, 0xe0
 805dd18:  lea edx, [edx+eax-0x40]
 805dd1c:  mov eax, 0x1
 805dd21:  shl eax, cl
 805dd23:  mov DWORD PTR [ebp-0xc0], edx
 805dd29:  or DWORD PTR [ebp-0xb8], eax
 805dd2f:  jmp 805dc4e
 805dd34:  fld TBYTE PTR [ebp-0x108]
 805dd3a:  mov DWORD PTR [esp+0x4], 0x2
 805dd42:  lea eax, [ebp-0x10]
 805dd45:  mov DWORD PTR [esp+0xc], eax
 805dd49:  lea eax, [ebp-0x2c]
 805dd4c:  mov DWORD PTR [esp+0x8], eax
 805dd50:  lea eax, [ebp-0x18]
 805dd53:  fstp TBYTE PTR [esp+0x10]
 805dd57:  mov DWORD PTR [ebp-0x118], eax
 805dd5d:  mov DWORD PTR [esp], eax
 805dd60:  call 808dbe0
 805dd65:  mov DWORD PTR [ebp-0x34], eax
 805dd68:  shl eax, 0x5
 805dd6b:  sub eax, 0x3f
 805dd6e:  mov DWORD PTR [ebp-0xd0], eax
 805dd74:  jmp 805daec
 805dd79:  mov esi, DWORD PTR [ebp-0x128]
 805dd7f:  mov ebx, DWORD PTR [ebp-0xb8]
 805dd85:  test esi, esi
 805dd87:  mov DWORD PTR [ebp-0x2c], ebx
 805dd8a:  jle 805de48
 805dd90:  mov edx, DWORD PTR [ebp-0x40]
 805dd93:  mov eax, DWORD PTR [edx]
 805dd95:  test eax, eax
 805dd97:  jne 805f88a
 805dd9d:  mov esi, DWORD PTR [ebp-0x38]
 805dda0:  mov ebx, DWORD PTR [esi]
 805dda2:  test ebx, ebx
 805dda4:  jne 805f88a
 805ddaa:  xor edi, edi
 805ddac:  jmp 805ddb7
 805ddae:  xchg ax, ax
 805ddb0:  mov ecx, DWORD PTR [esi+edi*4]
 805ddb3:  test ecx, ecx
 805ddb5:  jne 805ddce
 805ddb7:  add edi, 0x1
 805ddba:  lea eax, [edi*4]
 805ddc1:  mov DWORD PTR [ebp-0xf0], eax
 805ddc7:  mov eax, DWORD PTR [edx+edi*4]
 805ddca:  test eax, eax
 805ddcc:  je 805ddb0
 805ddce:  mov DWORD PTR [ebp-0x50], edi
 805ddd1:  mov ecx, DWORD PTR [ebp-0x128]
 805ddd7:  bsr ebx, DWORD PTR [edx+ecx*4-0x4]
 805dddc:  xor ebx, 0x1f
 805dddf:  jne 805efb1
 805dde5:  mov eax, DWORD PTR [ebp-0x50]
 805dde8:  test eax, eax
 805ddea:  je 805de48
 805ddec:  mov eax, ecx
 805ddee:  sub eax, DWORD PTR [ebp-0x50]
 805ddf1:  test eax, eax
 805ddf3:  jle 805de12
 805ddf5:  mov ebx, DWORD PTR [ebp-0x50]
 805ddf8:  xor ecx, ecx
 805ddfa:  mov esi, eax
 805ddfc:  shl ebx, 0x2
 805ddff:  nop
 805de00:  mov eax, DWORD PTR [edx+ebx]
 805de03:  add ebx, 0x4
 805de06:  mov DWORD PTR [edx+ecx*4], eax
 805de09:  add ecx, 0x1
 805de0c:  mov eax, esi
 805de0e:  cmp esi, ecx
 805de10:  jg 805de00
 805de12:  mov ebx, DWORD PTR [ebp-0x34]
 805de15:  sub ebx, DWORD PTR [ebp-0x50]
 805de18:  mov DWORD PTR [ebp-0x30], eax
 805de1b:  test ebx, ebx
 805de1d:  jle 805de40
 805de1f:  mov ecx, DWORD PTR [ebp-0x50]
 805de22:  xor edx, edx
 805de24:  mov esi, DWORD PTR [ebp-0x38]
 805de27:  shl ecx, 0x2
 805de2a:  lea esi, [esi]
 805de30:  mov eax, DWORD PTR [esi+ecx]
 805de33:  add ecx, 0x4
 805de36:  mov DWORD PTR [esi+edx*4], eax
 805de39:  add edx, 0x1
 805de3c:  cmp edx, ebx
 805de3e:  jl 805de30
 805de40:  mov DWORD PTR [ebp-0x34], ebx
 805de43:  nop
 805de44:  lea esi, [esi]
 805de48:  mov edx, 0xfffffffc
 805de4e:  mov esi, DWORD PTR [ebp-0x120]
 805de54:  mov ebx, DWORD PTR [ebp+0xc]
 805de57:  mov eax, DWORD PTR [esi+edx]
 805de5a:  mov ebx, DWORD PTR [ebx+0x4]
 805de5d:  test eax, eax
 805de5f:  mov DWORD PTR [ebp-0xa8], ebx
 805de65:  je 805f0bd
 805de6b:  mov edi, DWORD PTR [ebp+0xc]
 805de6e:  mov ebx, DWORD PTR [ebp-0x120]
 805de74:  mov ecx, DWORD PTR [edi+0x8]
 805de77:  mov eax, DWORD PTR [ebx+edx]
 805de7a:  movzx eax, BYTE PTR [eax+ecx*4]
 805de7e:  cmp al, 0x65
 805de80:  mov BYTE PTR [ebp-0x79], al
 805de83:  je 805ebc8
 805de89:  cmp BYTE PTR [ebp-0x79], 0x66
 805de8d:  je 805ef32
 805de93:  mov edi, DWORD PTR [ebp+0xc]
 805de96:  mov edi, DWORD PTR [edi]
 805de98:  cmp edi, 0x0
 805de9b:  mov DWORD PTR [ebp-0x88], edi
 805dea1:  jl 805f4c2
 805dea7:  jne 805deb3
 805dea9:  mov DWORD PTR [ebp-0x88], 0x1
 805deb3:  mov esi, DWORD PTR [ebp-0x24]
 805deb6:  test esi, esi
 805deb8:  je 805ec46
 805debe:  cmp DWORD PTR [ebp-0x2c], 0x4
 805dec2:  jle 805ec55
 805dec8:  lea eax, [ecx-0x2]
 805decb:  mov edx, DWORD PTR [ebp-0x88]
 805ded1:  mov ecx, DWORD PTR [ebp-0x88]
 805ded7:  mov DWORD PTR [ebp-0x28], eax
 805deda:  mov DWORD PTR [ebp-0x98], 0x1
 805dee4:  sub edx, 0x1
 805dee7:  add ecx, 0x7
 805deea:  mov DWORD PTR [ebp-0x8c], edx
 805def0:  mov DWORD PTR [ebp-0x9c], ecx
 805def6:  mov edi, DWORD PTR [ebp+0xc]
 805def9:  movzx eax, BYTE PTR [edi+0xc]
 805defd:  mov DWORD PTR [ebp-0x84], 0x0
 805df07:  and eax, 0x8
 805df0a:  cmp al, 0x1
 805df0c:  sbb eax, eax
 805df0e:  not eax
 805df10:  and eax, edx
 805df12:  mov DWORD PTR [ebp-0x90], eax
 805df18:  mov ecx, DWORD PTR [ebp-0xd4]
 805df1e:  mov DWORD PTR [ebp-0x80], 0x0
 805df25:  test ecx, ecx
 805df27:  je 805df4a
 805df29:  mov ecx, DWORD PTR [ebp-0xd4]
 805df2f:  mov ebx, DWORD PTR [ebp-0x98]
 805df35:  mov DWORD PTR [esp+0x4], ecx
 805df39:  mov DWORD PTR [esp], ebx
 805df3c:  call 805d180
 805df41:  add DWORD PTR [ebp-0x9c], eax
 805df47:  mov DWORD PTR [ebp-0x80], eax
 805df4a:  mov esi, DWORD PTR [ebp-0x9c]
 805df50:  mov eax, esi
 805df52:  shl eax, 0x3
 805df55:  cmp eax, 0x1000
 805df5a:  lea ebx, [esi*4+0x8]
 805df61:  ja 805eb8e
 805df67:  lea eax, [ebx+0x10]
 805df6a:  sub esp, eax
 805df6c:  lea edi, [esp+0x2b]
 805df70:  and edi, 0xf0
 805df73:  mov DWORD PTR [ebp-0xc8], edi
 805df79:  mov eax, edi
 805df7b:  mov DWORD PTR [ebp-0xc4], 0x0
 805df85:  add eax, 0x8
 805df88:  mov DWORD PTR [ebp-0xa4], eax
 805df8e:  mov eax, DWORD PTR [ebp-0x24]
 805df91:  test eax, eax
 805df93:  je 805df9f
 805df95:  cmp DWORD PTR [ebp-0x28], 0x66
 805df99:  je 805f14a
 805df9f:  mov edx, DWORD PTR [ebp-0x98]
 805dfa5:  xor edi, edi
 805dfa7:  test edx, edx
 805dfa9:  jle 805f71d
 805dfaf:  nop
 805dfb0:  add edi, 0x1
 805dfb3:  test eax, eax
 805dfb5:  je 805dfc1
 805dfb7:  cmp DWORD PTR [ebp-0x28], 0x66
 805dfbb:  je 805e0e8
 805dfc1:  mov eax, DWORD PTR [ebp-0x30]
 805dfc4:  test eax, eax
 805dfc6:  je 805e0b0
 805dfcc:  mov edx, DWORD PTR [ebp-0x34]
 805dfcf:  cmp eax, edx
 805dfd1:  jg 805e070
 805dfd7:  mov DWORD PTR [esp+0x14], eax
 805dfdb:  mov eax, DWORD PTR [ebp-0x40]
 805dfde:  mov DWORD PTR [esp+0xc], edx
 805dfe2:  mov DWORD PTR [esp+0x4], 0x0
 805dfea:  mov DWORD PTR [esp+0x10], eax
 805dfee:  mov eax, DWORD PTR [ebp-0x38]
 805dff1:  mov DWORD PTR [esp+0x8], eax
 805dff5:  mov eax, DWORD PTR [ebp-0x3c]
 805dff8:  mov DWORD PTR [esp], eax
 805dffb:  call 808bd10
 805e000:  mov esi, DWORD PTR [ebp-0x30]
 805e003:  mov edx, DWORD PTR [ebp-0x34]
 805e006:  mov ecx, DWORD PTR [ebp-0x3c]
 805e009:  mov DWORD PTR [ebp-0x34], esi
 805e00c:  sub edx, esi
 805e00e:  test esi, esi
 805e010:  mov DWORD PTR [ecx+edx*4], eax
 805e013:  mov ecx, DWORD PTR [ecx]
 805e015:  mov DWORD PTR [ebp-0x48], ecx
 805e018:  mov ecx, esi
 805e01a:  je 805e042
 805e01c:  mov ebx, DWORD PTR [ebp-0x38]
 805e01f:  mov edx, esi
 805e021:  mov eax, DWORD PTR [ebx+esi*4-0x4]
 805e025:  test eax, eax
 805e027:  jne 805e07a
 805e029:  lea edx, [ebx+esi*4-0x8]
 805e02d:  jmp 805e03d
 805e02f:  nop
 805e030:  mov eax, DWORD PTR [edx]
 805e032:  sub edx, 0x4
 805e035:  test eax, eax
 805e037:  jne 805e108
 805e03d:  sub ecx, 0x1
 805e040:  jne 805e030
 805e042:  mov eax, DWORD PTR [ebp-0x48]
 805e045:  mov DWORD PTR [ebp-0x34], 0x1
 805e04c:  add eax, 0x30
 805e04f:  nop
 805e050:  mov edx, DWORD PTR [ebp-0xc8]
 805e056:  cmp DWORD PTR [ebp-0x98], edi
 805e05c:  mov DWORD PTR [edx+edi*4+0x4], eax
 805e060:  jle 805e118
 805e066:  mov eax, DWORD PTR [ebp-0x24]
 805e069:  jmp 805dfb0
 805e06e:  xchg ax, ax
 805e070:  mov ebx, DWORD PTR [ebp-0x38]
 805e073:  mov DWORD PTR [ebp-0x48], 0x0
 805e07a:  mov DWORD PTR [esp+0xc], 0xa
 805e082:  mov DWORD PTR [esp+0x8], edx
 805e086:  mov DWORD PTR [esp+0x4], ebx
 805e08a:  mov DWORD PTR [esp], ebx
 805e08d:  call 808c5d0
 805e092:  test eax, eax
 805e094:  mov ecx, eax
 805e096:  je 805e0a7
 805e098:  mov eax, DWORD PTR [ebp-0x34]
 805e09b:  mov edx, DWORD PTR [ebp-0x38]
 805e09e:  mov DWORD PTR [edx+eax*4], ecx
 805e0a1:  add eax, 0x1
 805e0a4:  mov DWORD PTR [ebp-0x34], eax
 805e0a7:  mov eax, DWORD PTR [ebp-0x48]
 805e0aa:  add eax, 0x30
 805e0ad:  jmp 805e050
 805e0af:  nop
 805e0b0:  mov edx, DWORD PTR [ebp-0x38]
 805e0b3:  mov eax, DWORD PTR [ebp-0x34]
 805e0b6:  lea ebx, [edx+eax*4-0x4]
 805e0ba:  sub eax, 0x1
 805e0bd:  mov esi, DWORD PTR [ebx]
 805e0bf:  mov DWORD PTR [esp+0xc], 0xa
 805e0c7:  mov DWORD PTR [esp+0x8], eax
 805e0cb:  mov DWORD PTR [esp+0x4], edx
 805e0cf:  mov DWORD PTR [esp], edx
 805e0d2:  call 808c5d0
 805e0d7:  mov DWORD PTR [ebx], eax
 805e0d9:  lea eax, [esi+0x30]
 805e0dc:  jmp 805e050
 805e0e1:  lea esi, [esi]
 805e0e8:  mov edx, DWORD PTR [ebp-0x2c]
 805e0eb:  lea eax, [edx-0x1]
 805e0ee:  test edx, edx
 805e0f0:  mov DWORD PTR [ebp-0x2c], eax
 805e0f3:  mov eax, 0x30
 805e0f8:  jg 805e050
 805e0fe:  jmp 805dfc1
 805e103:  nop
 805e104:  lea esi, [esi]
 805e108:  mov DWORD PTR [ebp-0x34], ecx
 805e10b:  mov edx, ecx
 805e10d:  jmp 805e07a
 805e112:  lea esi, [esi]
 805e118:  mov ebx, DWORD PTR [ebp-0xa4]
 805e11e:  mov ecx, DWORD PTR [ebp-0x98]
 805e124:  lea ecx, [ebx+ecx*4]
 805e127:  mov ebx, DWORD PTR [ebp-0x98]
 805e12d:  mov DWORD PTR [ebp-0xa0], ecx
 805e133:  mov edx, ecx
 805e135:  mov DWORD PTR [ebp-0x94], ebx
 805e13b:  mov esi, DWORD PTR [ebp+0xc]
 805e13e:  test BYTE PTR [esi+0xc], 0x8
 805e142:  jne 805e152
 805e144:  mov esi, DWORD PTR [ebp-0x90]
 805e14a:  test esi, esi
 805e14c:  jle 805eac1
 805e152:  mov edi, DWORD PTR [ebp-0x64]
 805e155:  mov DWORD PTR [ebp-0x84], 0x1
 805e15f:  mov DWORD PTR [edx], edi
 805e161:  add edx, 0x4
 805e164:  mov DWORD PTR [ebp-0xa0], edx
 805e16a:  mov ebx, DWORD PTR [ebp-0x90]
 805e170:  mov DWORD PTR [ebp-0x78], 0x0
 805e177:  mov DWORD PTR [ebp-0x74], 0x0
 805e17e:  mov DWORD PTR [ebp-0x114], ebx
 805e184:  mov eax, ebx
 805e186:  xchg ax, ax
 805e188:  cmp DWORD PTR [ebp-0x78], eax
 805e18b:  jl 805e1a6
 805e18d:  mov edx, DWORD PTR [ebp-0x78]
 805e190:  cmp DWORD PTR [ebp-0x8c], edx
 805e196:  jle 805e33d
 805e19c:  cmp DWORD PTR [ebp-0x34], 0x1
 805e1a0:  jle 805e330
 805e1a6:  mov eax, DWORD PTR [ebp-0x24]
 805e1a9:  test eax, eax
 805e1ab:  je 805e1be
 805e1ad:  cmp DWORD PTR [ebp-0x28], 0x66
 805e1b1:  lea esi, [esi]
 805e1b8:  je 805e750
 805e1be:  mov eax, DWORD PTR [ebp-0x30]
 805e1c1:  test eax, eax
 805e1c3:  je 805e2f8
 805e1c9:  mov edx, DWORD PTR [ebp-0x34]
 805e1cc:  cmp eax, edx
 805e1ce:  jg 805e280
 805e1d4:  mov DWORD PTR [esp+0x14], eax
 805e1d8:  mov eax, DWORD PTR [ebp-0x40]
 805e1db:  mov DWORD PTR [esp+0xc], edx
 805e1df:  mov DWORD PTR [esp+0x4], 0x0
 805e1e7:  mov DWORD PTR [esp+0x10], eax
 805e1eb:  mov eax, DWORD PTR [ebp-0x38]
 805e1ee:  mov DWORD PTR [esp+0x8], eax
 805e1f2:  mov eax, DWORD PTR [ebp-0x3c]
 805e1f5:  mov DWORD PTR [esp], eax
 805e1f8:  call 808bd10
 805e1fd:  mov ebx, DWORD PTR [ebp-0x30]
 805e200:  mov edx, DWORD PTR [ebp-0x34]
 805e203:  mov ecx, DWORD PTR [ebp-0x3c]
 805e206:  mov DWORD PTR [ebp-0x34], ebx
 805e209:  sub edx, ebx
 805e20b:  test ebx, ebx
 805e20d:  mov DWORD PTR [ecx+edx*4], eax
 805e210:  mov edi, DWORD PTR [ecx]
 805e212:  mov ecx, ebx
 805e214:  je 805e242
 805e216:  mov esi, DWORD PTR [ebp-0x38]
 805e219:  mov edx, ebx
 805e21b:  mov eax, DWORD PTR [esi+ebx*4-0x4]
 805e21f:  test eax, eax
 805e221:  jne 805e285
 805e223:  mov eax, ebx
 805e225:  sub eax, 0x2
 805e228:  lea edx, [esi+eax*4]
 805e22b:  jmp 805e23d
 805e22d:  lea esi, [esi]
 805e230:  mov eax, DWORD PTR [edx]
 805e232:  sub edx, 0x4
 805e235:  test eax, eax
 805e237:  jne 805e770
 805e23d:  sub ecx, 0x1
 805e240:  jne 805e230
 805e242:  mov DWORD PTR [ebp-0x34], 0x1
 805e249:  lea eax, [edi+0x30]
 805e24c:  mov esi, DWORD PTR [ebp-0xa0]
 805e252:  cmp eax, 0x30
 805e255:  mov DWORD PTR [esi], eax
 805e257:  je 805e2c2
 805e259:  mov DWORD PTR [ebp-0x84], 0x1
 805e263:  add DWORD PTR [ebp-0x78], 0x1
 805e267:  add DWORD PTR [ebp-0xa0], 0x4
 805e26e:  mov eax, DWORD PTR [ebp-0x114]
 805e274:  jmp 805e188
 805e279:  lea esi, [esi]
 805e280:  mov esi, DWORD PTR [ebp-0x38]
 805e283:  xor edi, edi
 805e285:  mov DWORD PTR [esp+0xc], 0xa
 805e28d:  mov DWORD PTR [esp+0x8], edx
 805e291:  mov DWORD PTR [esp+0x4], esi
 805e295:  mov DWORD PTR [esp], esi
 805e298:  call 808c5d0
 805e29d:  test eax, eax
 805e29f:  mov ecx, eax
 805e2a1:  je 805e2b2
 805e2a3:  mov eax, DWORD PTR [ebp-0x34]
 805e2a6:  mov edx, DWORD PTR [ebp-0x38]
 805e2a9:  mov DWORD PTR [edx+eax*4], ecx
 805e2ac:  add eax, 0x1
 805e2af:  mov DWORD PTR [ebp-0x34], eax
 805e2b2:  mov esi, DWORD PTR [ebp-0xa0]
 805e2b8:  lea eax, [edi+0x30]
 805e2bb:  cmp eax, 0x30
 805e2be:  mov DWORD PTR [esi], eax
 805e2c0:  jne 805e259
 805e2c2:  mov eax, DWORD PTR [ebp-0x84]
 805e2c8:  test eax, eax
 805e2ca:  jne 805e263
 805e2cc:  mov eax, DWORD PTR [ebp-0x90]
 805e2d2:  add DWORD PTR [ebp-0x8c], 0x1
 805e2d9:  test eax, eax
 805e2db:  jle 805e263
 805e2dd:  add DWORD PTR [ebp-0x74], 0x1
 805e2e1:  mov eax, DWORD PTR [ebp-0x74]
 805e2e4:  mov edi, DWORD PTR [ebp-0x90]
 805e2ea:  lea edi, [eax+edi]
 805e2ed:  mov DWORD PTR [ebp-0x114], edi
 805e2f3:  jmp 805e263
 805e2f8:  mov edx, DWORD PTR [ebp-0x38]
 805e2fb:  mov eax, DWORD PTR [ebp-0x34]
 805e2fe:  lea ebx, [edx+eax*4-0x4]
 805e302:  sub eax, 0x1
 805e305:  mov esi, DWORD PTR [ebx]
 805e307:  mov DWORD PTR [esp+0xc], 0xa
 805e30f:  mov DWORD PTR [esp+0x8], eax
 805e313:  mov DWORD PTR [esp+0x4], edx
 805e317:  mov DWORD PTR [esp], edx
 805e31a:  call 808c5d0
 805e31f:  mov DWORD PTR [ebx], eax
 805e321:  lea eax, [esi+0x30]
 805e324:  jmp 805e24c
 805e329:  lea esi, [esi]
 805e330:  mov eax, DWORD PTR [ebp-0x38]
 805e333:  mov eax, DWORD PTR [eax]
 805e335:  test eax, eax
 805e337:  jne 805e1a6
 805e33d:  mov eax, DWORD PTR [ebp-0x24]
 805e340:  mov edi, DWORD PTR [ebp-0xa0]
 805e346:  test eax, eax
 805e348:  je 805e354
 805e34a:  cmp DWORD PTR [ebp-0x28], 0x66
 805e34e:  je 805f0a3
 805e354:  mov eax, DWORD PTR [ebp-0x30]
 805e357:  test eax, eax
 805e359:  je 805ec15
 805e35f:  mov edx, DWORD PTR [ebp-0x34]
 805e362:  cmp eax, edx
 805e364:  jg 805e98b
 805e36a:  mov DWORD PTR [esp+0x14], eax
 805e36e:  mov eax, DWORD PTR [ebp-0x40]
 805e371:  mov DWORD PTR [esp+0xc], edx
 805e375:  mov DWORD PTR [esp+0x4], 0x0
 805e37d:  mov DWORD PTR [esp+0x10], eax
 805e381:  mov eax, DWORD PTR [ebp-0x38]
 805e384:  mov DWORD PTR [esp+0x8], eax
 805e388:  mov eax, DWORD PTR [ebp-0x3c]
 805e38b:  mov DWORD PTR [esp], eax
 805e38e:  call 808bd10
 805e393:  mov esi, DWORD PTR [ebp-0x30]
 805e396:  mov edx, DWORD PTR [ebp-0x34]
 805e399:  mov ecx, DWORD PTR [ebp-0x3c]
 805e39c:  mov DWORD PTR [ebp-0x34], esi
 805e39f:  sub edx, esi
 805e3a1:  test esi, esi
 805e3a3:  mov DWORD PTR [ecx+edx*4], eax
 805e3a6:  mov ecx, DWORD PTR [ecx]
 805e3a8:  mov DWORD PTR [ebp-0x44], ecx
 805e3ab:  mov ecx, esi
 805e3ad:  je 805e3da
 805e3af:  mov ebx, DWORD PTR [ebp-0x38]
 805e3b2:  mov edx, esi
 805e3b4:  mov esi, DWORD PTR [ebx+esi*4-0x4]
 805e3b8:  test esi, esi
 805e3ba:  jne 805e995
 805e3c0:  lea edx, [ebx+ecx*4-0x8]
 805e3c4:  jmp 805e3d5
 805e3c6:  xchg ax, ax
 805e3c8:  mov eax, DWORD PTR [edx]
 805e3ca:  sub edx, 0x4
 805e3cd:  test eax, eax
 805e3cf:  jne 805f515
 805e3d5:  sub ecx, 0x1
 805e3d8:  jne 805e3c8
 805e3da:  mov eax, DWORD PTR [ebp-0x44]
 805e3dd:  mov DWORD PTR [ebp-0x34], 0x1
 805e3e4:  add eax, 0x30
 805e3e7:  nop
 805e3e8:  cmp eax, 0x34
 805e3eb:  jle 805e488
 805e3f1:  cmp eax, 0x35
 805e3f4:  je 805f17e
 805e3fa:  cmp DWORD PTR [ebp-0x78], 0x0
 805e3fe:  jle 805f562
 805e404:  mov esi, DWORD PTR [ebp-0xa0]
 805e40a:  mov ecx, DWORD PTR [ebp-0xa0]
 805e410:  mov edx, DWORD PTR [esi-0x4]
 805e413:  sub ecx, 0x4
 805e416:  cmp edx, DWORD PTR [ebp-0x64]
 805e419:  je 805f883
 805e41f:  cmp edx, 0x39
 805e422:  jne 805f883
 805e428:  xor eax, eax
 805e42a:  jmp 805e43a
 805e42c:  lea esi, [esi]
 805e430:  cmp edx, 0x39
 805e433:  nop
 805e434:  lea esi, [esi]
 805e438:  jne 805e44d
 805e43a:  mov DWORD PTR [ecx], 0x30
 805e440:  sub ecx, 0x4
 805e443:  add eax, 0x1
 805e446:  mov edx, DWORD PTR [ecx]
 805e448:  cmp edx, DWORD PTR [ebp-0x64]
 805e44b:  jne 805e430
 805e44d:  cmp eax, DWORD PTR [ebp-0x90]
 805e453:  je 805f63b
 805e459:  cmp edx, DWORD PTR [ebp-0x64]
 805e45c:  je 805f753
 805e462:  add edx, 0x1
 805e465:  mov DWORD PTR [ecx], edx
 805e467:  mov eax, ecx
 805e469:  mov ebx, DWORD PTR [ebp-0x74]
 805e46c:  mov ecx, DWORD PTR [ebp-0x90]
 805e472:  lea ecx, [ebx+ecx]
 805e475:  mov DWORD PTR [ebp-0x114], ecx
 805e47b:  cmp DWORD PTR [ebp-0x64], edx
 805e47e:  je 805eaf1
 805e484:  lea esi, [esi]
 805e488:  mov eax, DWORD PTR [ebp-0x114]
 805e48e:  cmp DWORD PTR [ebp-0x78], eax
 805e491:  jg 805e4a9
 805e493:  jmp 805e4b2
 805e495:  lea esi, [esi]
 805e498:  sub DWORD PTR [ebp-0x78], 0x1
 805e49c:  mov edi, eax
 805e49e:  mov esi, DWORD PTR [ebp-0x114]
 805e4a4:  cmp DWORD PTR [ebp-0x78], esi
 805e4a7:  jle 805e4b2
 805e4a9:  cmp DWORD PTR [edi-0x4], 0x30
 805e4ad:  lea eax, [edi-0x4]
 805e4b0:  je 805e498
 805e4b2:  mov eax, DWORD PTR [ebp-0x78]
 805e4b5:  test eax, eax
 805e4b7:  jne 805e4d0
 805e4b9:  mov eax, DWORD PTR [ebp+0xc]
 805e4bc:  test BYTE PTR [eax+0xc], 0x8
 805e4c0:  jne 805e4d0
 805e4c2:  mov ecx, DWORD PTR [ebp-0x64]
 805e4c5:  lea edx, [edi-0x4]
 805e4c8:  cmp DWORD PTR [edi-0x4], ecx
 805e4cb:  mov DWORD PTR [ebp-0x60], edx
 805e4ce:  je 805e4d3
 805e4d0:  mov DWORD PTR [ebp-0x60], edi
 805e4d3:  mov eax, DWORD PTR [ebp-0xd4]
 805e4d9:  test eax, eax
 805e4db:  je 805e4e8
 805e4dd:  mov edi, DWORD PTR [ebp-0x80]
 805e4e0:  test edi, edi
 805e4e2:  jne 805eca1
 805e4e8:  mov eax, DWORD PTR [ebp-0x28]
 805e4eb:  cmp eax, 0x66
 805e4ee:  je 805e586
 805e4f4:  mov esi, DWORD PTR [ebp-0x24]
 805e4f7:  test esi, esi
 805e4f9:  jne 805fade
 805e4ff:  mov ecx, DWORD PTR [ebp-0x60]
 805e502:  cmp DWORD PTR [ebp-0x24], 0x1
 805e506:  mov ebx, DWORD PTR [ebp-0x2c]
 805e509:  mov DWORD PTR [ecx], eax
 805e50b:  sbb eax, eax
 805e50d:  mov edi, ecx
 805e50f:  and eax, 0xfe
 805e512:  add edi, 0x8
 805e515:  add eax, 0x2d
 805e518:  cmp ebx, 0x9
 805e51b:  mov DWORD PTR [ecx+0x4], eax
 805e51e:  mov esi, ebx
 805e520:  jle 805f86f
 805e526:  mov ecx, 0xa
 805e52b:  nop
 805e52c:  lea esi, [esi]
 805e530:  lea eax, [ecx+ecx*4]
 805e533:  lea ecx, [eax+eax]
 805e536:  cmp ecx, ebx
 805e538:  jle 805e530
 805e53a:  jmp 805e542
 805e53c:  lea esi, [esi]
 805e540:  mov ebx, edx
 805e542:  mov eax, 0x66666667
 805e547:  imul ecx
 805e549:  mov eax, ecx
 805e54b:  sar eax, 0x1f
 805e54e:  sar edx, 0x2
 805e551:  mov ecx, edx
 805e553:  mov edx, esi
 805e555:  sub ecx, eax
 805e557:  mov eax, esi
 805e559:  sar edx, 0x1f
 805e55c:  idiv ecx
 805e55e:  mov edx, ebx
 805e560:  sar edx, 0x1f
 805e563:  add eax, 0x30
 805e566:  mov DWORD PTR [edi], eax
 805e568:  mov eax, ebx
 805e56a:  add edi, 0x4
 805e56d:  idiv ecx
 805e56f:  cmp ecx, 0xa
 805e572:  mov esi, edx
 805e574:  mov DWORD PTR [ebp-0x2c], edx
 805e577:  jg 805e540
 805e579:  mov ebx, edx
 805e57b:  lea eax, [ebx+0x30]
 805e57e:  mov DWORD PTR [edi], eax
 805e580:  add edi, 0x4
 805e583:  mov DWORD PTR [ebp-0x60], edi
 805e586:  mov ebx, DWORD PTR [ebp-0x10]
 805e589:  test ebx, ebx
 805e58b:  je 805e8a2
 805e591:  mov ecx, DWORD PTR [ebp+0xc]
 805e594:  movzx ebx, BYTE PTR [ecx+0xc]
 805e598:  sub DWORD PTR [ebp-0xa8], 0x1
 805e59f:  mov edi, DWORD PTR [ebp-0x60]
 805e5a2:  sub edi, DWORD PTR [ebp-0xa4]
 805e5a8:  mov edx, DWORD PTR [ebp-0xa8]
 805e5ae:  mov eax, edi
 805e5b0:  sar eax, 0x2
 805e5b3:  sub edx, eax
 805e5b5:  and ebx, 0x20
 805e5b8:  mov DWORD PTR [ebp-0xe4], edi
 805e5be:  mov DWORD PTR [ebp-0x54], edx
 805e5c1:  jne 805e89b
 805e5c7:  mov ecx, DWORD PTR [ebp+0xc]
 805e5ca:  mov eax, DWORD PTR [ecx+0x10]
 805e5cd:  cmp eax, 0x30
 805e5d0:  je 805e89b
 805e5d6:  test edx, edx
 805e5d8:  jle 805e89b
 805e5de:  mov ecx, DWORD PTR [ebp-0xcc]
 805e5e4:  test ecx, ecx
 805e5e6:  je 805f525
 805e5ec:  mov ebx, DWORD PTR [ebp+0x8]
 805e5ef:  mov DWORD PTR [esp+0x8], edx
 805e5f3:  mov DWORD PTR [esp+0x4], eax
 805e5f7:  mov DWORD PTR [esp], ebx
 805e5fa:  call 8062c50
 805e5ff:  mov esi, eax
 805e601:  cmp esi, DWORD PTR [ebp-0x54]
 805e604:  jne 805f797
 805e60a:  mov eax, DWORD PTR [ebp-0x10]
 805e60d:  test eax, eax
 805e60f:  je 805e940
 805e615:  mov edi, DWORD PTR [ebp-0xcc]
 805e61b:  test edi, edi
 805e61d:  je 805eded
 805e623:  mov ecx, DWORD PTR [ebp+0x8]
 805e626:  mov edx, DWORD PTR [ecx+0x58]
 805e629:  mov eax, DWORD PTR [edx+0x10]
 805e62c:  cmp eax, DWORD PTR [edx+0x14]
 805e62f:  jae 805fc86
 805e635:  mov DWORD PTR [eax], 0x2d
 805e63b:  add eax, 0x4
 805e63e:  mov DWORD PTR [edx+0x10], eax
 805e641:  mov edx, DWORD PTR [ebp+0xc]
 805e644:  add esi, 0x1
 805e647:  movzx ebx, BYTE PTR [edx+0xc]
 805e64b:  and ebx, 0x20
 805e64e:  jne 805e65d
 805e650:  mov eax, DWORD PTR [ebp+0xc]
 805e653:  cmp DWORD PTR [eax+0x10], 0x30
 805e657:  je 805f4d1
 805e65d:  mov eax, DWORD PTR [ebp-0xcc]
 805e663:  test eax, eax
 805e665:  jne 805e77a
 805e66b:  mov edx, DWORD PTR [ebp+0xc]
 805e66e:  mov ebx, 0x1
 805e673:  test BYTE PTR [edx+0xd], 0x8
 805e677:  je 805e68c
 805e679:  mov eax, 0xffffffd8
 805e67e:  mov ecx, DWORD PTR [ebp-0x120]
 805e684:  mov eax, DWORD PTR [ecx+eax]
 805e687:  mov eax, DWORD PTR [eax]
 805e689:  mov ebx, DWORD PTR [eax+0x58]
 805e68c:  mov edi, DWORD PTR [ebp-0xe0]
 805e692:  mov DWORD PTR [esp], edi
 805e695:  xor edi, edi
 805e697:  call 804eea0
 805e69c:  xor edx, edx
 805e69e:  mov DWORD PTR [ebp-0x110], eax
 805e6a4:  mov eax, DWORD PTR [ebp-0xdc]
 805e6aa:  test eax, eax
 805e6ac:  je 805e6c4
 805e6ae:  mov eax, DWORD PTR [ebp-0xdc]
 805e6b4:  mov DWORD PTR [esp], eax
 805e6b7:  call 804eea0
 805e6bc:  mov edx, DWORD PTR [ebp-0x80]
 805e6bf:  imul edx, eax
 805e6c2:  mov edi, eax
 805e6c4:  imul ebx, DWORD PTR [ebp-0x9c]
 805e6cb:  mov ecx, DWORD PTR [ebp-0x110]
 805e6d1:  lea eax, [ecx+ebx+0x2]
 805e6d5:  lea ebx, [eax+edx]
 805e6d8:  mov eax, DWORD PTR [ebp-0xc4]
 805e6de:  test eax, eax
 805e6e0:  jne 805fb66
 805e6e6:  lea eax, [ebx+0x12]
 805e6e9:  and eax, 0xfc
 805e6ec:  sub esp, eax
 805e6ee:  lea eax, [esp+0x2b]
 805e6f2:  and eax, 0xf0
 805e6f5:  mov DWORD PTR [ebp-0x70], eax
 805e6f8:  add ebx, DWORD PTR [ebp-0x70]
 805e6fb:  mov DWORD PTR [ebp-0x6c], ebx
 805e6fe:  mov ebx, DWORD PTR [ebp-0xa4]
 805e704:  cmp DWORD PTR [ebp-0x60], ebx
 805e707:  ja 805e729
 805e709:  jmp 805e78a
 805e70b:  nop
 805e70c:  lea esi, [esi]
 805e710:  cmp DWORD PTR [ebp-0xd8], edx
 805e716:  je 805e880
 805e71c:  mov BYTE PTR [eax], dl
 805e71e:  add eax, 0x1
 805e721:  add ebx, 0x4
 805e724:  cmp DWORD PTR [ebp-0x60], ebx
 805e727:  jbe 805e78a
 805e729:  mov edx, DWORD PTR [ebx]
 805e72b:  cmp edx, DWORD PTR [ebp-0x64]
 805e72e:  jne 805e710
 805e730:  mov edx, DWORD PTR [ebp-0x110]
 805e736:  mov ecx, DWORD PTR [ebp-0xe0]
 805e73c:  mov DWORD PTR [esp], eax
 805e73f:  mov DWORD PTR [esp+0x8], edx
 805e743:  mov DWORD PTR [esp+0x4], ecx
 805e747:  call 806c310
 805e74c:  jmp 805e721
 805e74e:  xchg ax, ax
 805e750:  mov edx, DWORD PTR [ebp-0x2c]
 805e753:  lea eax, [edx-0x1]
 805e756:  test edx, edx
 805e758:  mov DWORD PTR [ebp-0x2c], eax
 805e75b:  mov eax, 0x30
 805e760:  jg 805e24c
 805e766:  jmp 805e1be
 805e76b:  nop
 805e76c:  lea esi, [esi]
 805e770:  mov DWORD PTR [ebp-0x34], ecx
 805e773:  mov edx, ecx
 805e775:  jmp 805e285
 805e77a:  mov DWORD PTR [ebp-0x70], 0x0
 805e781:  xor eax, eax
 805e783:  mov DWORD PTR [ebp-0x6c], 0x0
 805e78a:  mov ecx, DWORD PTR [ebp-0x70]
 805e78d:  mov ebx, DWORD PTR [ebp+0xc]
 805e790:  mov DWORD PTR [ebp-0x68], ecx
 805e793:  test BYTE PTR [ebx+0xd], 0x8
 805e797:  jne 805fb30
 805e79d:  mov ebx, DWORD PTR [ebp-0xcc]
 805e7a3:  test ebx, ebx
 805e7a5:  je 805e9fe
 805e7ab:  mov eax, DWORD PTR [ebp-0xe4]
 805e7b1:  mov edi, DWORD PTR [ebp-0xe4]
 805e7b7:  add eax, 0x3
 805e7ba:  sar edi, 0x2
 805e7bd:  cmp eax, 0x6
 805e7c0:  seta al
 805e7c3:  test al, al
 805e7c5:  je 805ea0e
 805e7cb:  mov edx, DWORD PTR [ebp+0x8]
 805e7ce:  mov ecx, DWORD PTR [ebp-0xcc]
 805e7d4:  mov eax, DWORD PTR [edx+0x94]
 805e7da:  test ecx, ecx
 805e7dc:  mov edx, DWORD PTR [eax+0x1c]
 805e7df:  mov eax, DWORD PTR [ebp-0xa4]
 805e7e5:  jne 805e7ea
 805e7e7:  mov eax, DWORD PTR [ebp-0x68]
 805e7ea:  mov ecx, DWORD PTR [ebp+0x8]
 805e7ed:  lea esi, [edi+esi]
 805e7f0:  mov DWORD PTR [esp+0x8], edi
 805e7f4:  mov DWORD PTR [esp+0x4], eax
 805e7f8:  mov DWORD PTR [esp], ecx
 805e7fb:  call edx
 805e7fd:  cmp edi, eax
 805e7ff:  jne 805e857
 805e801:  mov eax, DWORD PTR [ebp-0xc4]
 805e807:  test eax, eax
 805e809:  jne 805fb48
 805e80f:  mov eax, DWORD PTR [ebp+0xc]
 805e812:  test BYTE PTR [eax+0xc], 0x20
 805e816:  je 805d5fd
 805e81c:  mov edi, DWORD PTR [ebp-0x54]
 805e81f:  test edi, edi
 805e821:  jle 805d5fd
 805e827:  mov ebx, DWORD PTR [ebp-0xcc]
 805e82d:  test ebx, ebx
 805e82f:  je 805f082
 805e835:  mov edx, DWORD PTR [ebp-0x54]
 805e838:  mov ebx, DWORD PTR [ebp+0x8]
 805e83b:  mov DWORD PTR [esp+0x8], edx
 805e83f:  mov eax, DWORD PTR [eax+0x10]
 805e842:  mov DWORD PTR [esp], ebx
 805e845:  mov DWORD PTR [esp+0x4], eax
 805e849:  call 8062c50
 805e84e:  cmp eax, DWORD PTR [ebp-0x54]
 805e851:  je 805d82d
 805e857:  mov ecx, DWORD PTR [ebp-0xc4]
 805e85d:  test ecx, ecx
 805e85f:  je 805d5f8
 805e865:  mov ebx, DWORD PTR [ebp-0xc8]
 805e86b:  mov esi, 0xffffffff
 805e870:  mov DWORD PTR [esp], ebx
 805e873:  call 804b4a0
 805e878:  jmp 805d5fd
 805e87d:  lea esi, [esi]
 805e880:  mov edx, DWORD PTR [ebp-0xdc]
 805e886:  mov DWORD PTR [esp+0x8], edi
 805e88a:  mov DWORD PTR [esp], eax
 805e88d:  mov DWORD PTR [esp+0x4], edx
 805e891:  call 806c310
 805e896:  jmp 805e721
 805e89b:  xor esi, esi
 805e89d:  jmp 805e60a
 805e8a2:  mov esi, DWORD PTR [ebp+0xc]
 805e8a5:  movzx ebx, BYTE PTR [esi+0xc]
 805e8a9:  test bl, 0x50
 805e8ac:  lea esi, [esi]
 805e8b0:  je 805e59f
 805e8b6:  xchg ax, ax
 805e8b8:  jmp 805e598
 805e8bd:  test ebx, ebx
 805e8bf:  nop
 805e8c0:  js 805f1fd
 805e8c6:  mov edx, DWORD PTR [ebp-0xd0]
 805e8cc:  mov ecx, DWORD PTR [ebp-0x118]
 805e8d2:  mov DWORD PTR [esp], esi
 805e8d5:  lea eax, [ebx+edx]
 805e8d8:  mov DWORD PTR [esp+0xc], eax
 805e8dc:  mov eax, DWORD PTR [ebp-0x34]
 805e8df:  mov DWORD PTR [esp+0x4], ecx
 805e8e3:  mov DWORD PTR [esp+0x8], eax
 805e8e7:  call 808c1c0
 805e8ec:  mov edx, DWORD PTR [ebp-0x34]
 805e8ef:  mov ecx, DWORD PTR [ebp-0x38]
 805e8f2:  mov DWORD PTR [ebp-0x2c], 0x0
 805e8f9:  mov DWORD PTR [ecx+edx*4], eax
 805e8fc:  add edx, 0x1
 805e8ff:  mov DWORD PTR [ebp-0x34], edx
 805e902:  jmp 805de48
 805e907:  mov eax, DWORD PTR [ebp-0xcc]
 805e90d:  test eax, eax
 805e90f:  je 805ed93
 805e915:  mov ecx, DWORD PTR [ebp+0x8]
 805e918:  mov edx, DWORD PTR [ecx+0x58]
 805e91b:  mov eax, DWORD PTR [edx+0x10]
 805e91e:  cmp eax, DWORD PTR [edx+0x14]
 805e921:  jae 805fc6b
 805e927:  mov DWORD PTR [eax], 0x2d
 805e92d:  add eax, 0x4
 805e930:  mov DWORD PTR [edx+0x10], eax
 805e933:  nop
 805e934:  lea esi, [esi]
 805e938:  add ebx, 0x1
 805e93b:  jmp 805d74c
 805e940:  mov ecx, DWORD PTR [ebp+0xc]
 805e943:  movzx ebx, BYTE PTR [ecx+0xc]
 805e947:  test bl, 0x40
 805e94a:  je 805edb3
 805e950:  mov ebx, DWORD PTR [ebp-0xcc]
 805e956:  test ebx, ebx
 805e958:  je 805f542
 805e95e:  mov ebx, DWORD PTR [ebp+0x8]
 805e961:  mov edx, DWORD PTR [ebx+0x58]
 805e964:  mov eax, DWORD PTR [edx+0x10]
 805e967:  cmp eax, DWORD PTR [edx+0x14]
 805e96a:  jae 805fcfd
 805e970:  mov DWORD PTR [eax], 0x2b
 805e976:  add eax, 0x4
 805e979:  mov DWORD PTR [edx+0x10], eax
 805e97c:  mov edi, DWORD PTR [ebp+0xc]
 805e97f:  add esi, 0x1
 805e982:  movzx ebx, BYTE PTR [edi+0xc]
 805e986:  jmp 805e64b
 805e98b:  mov ebx, DWORD PTR [ebp-0x38]
 805e98e:  mov DWORD PTR [ebp-0x44], 0x0
 805e995:  mov DWORD PTR [esp+0xc], 0xa
 805e99d:  mov DWORD PTR [esp+0x8], edx
 805e9a1:  mov DWORD PTR [esp+0x4], ebx
 805e9a5:  mov DWORD PTR [esp], ebx
 805e9a8:  call 808c5d0
 805e9ad:  test eax, eax
 805e9af:  mov ecx, eax
 805e9b1:  je 805e9c2
 805e9b3:  mov eax, DWORD PTR [ebp-0x34]
 805e9b6:  mov edx, DWORD PTR [ebp-0x38]
 805e9b9:  mov DWORD PTR [edx+eax*4], ecx
 805e9bc:  add eax, 0x1
 805e9bf:  mov DWORD PTR [ebp-0x34], eax
 805e9c2:  mov eax, DWORD PTR [ebp-0x44]
 805e9c5:  add eax, 0x30
 805e9c8:  jmp 805e3e8
 805e9cd:  mov eax, DWORD PTR [ebp-0xcc]
 805e9d3:  test eax, eax
 805e9d5:  je 805ee0d
 805e9db:  mov ecx, DWORD PTR [ebp+0x8]
 805e9de:  mov edx, DWORD PTR [ecx+0x58]
 805e9e1:  mov eax, DWORD PTR [edx+0x10]
 805e9e4:  cmp eax, DWORD PTR [edx+0x14]
 805e9e7:  jae 805fc06
 805e9ed:  mov DWORD PTR [eax], 0x2b
 805e9f3:  add eax, 0x4
 805e9f6:  mov DWORD PTR [edx+0x10], eax
 805e9f9:  jmp 805e938
 805e9fe:  mov edi, eax
 805ea00:  sub edi, DWORD PTR [ebp-0x68]
 805ea03:  cmp edi, 0x14
 805ea06:  setg al
 805ea09:  jmp 805e7c3
 805ea0e:  mov eax, DWORD PTR [ebp-0xcc]
 805ea14:  test eax, eax
 805ea16:  jne 805ee2d
 805ea1c:  xor ebx, ebx
 805ea1e:  test edi, edi
 805ea20:  jne 805ea41
 805ea22:  jmp 805e801
 805ea27:  nop
 805ea28:  mov BYTE PTR [eax], dl
 805ea2a:  mov edx, DWORD PTR [ebp+0x8]
 805ea2d:  add eax, 0x1
 805ea30:  mov DWORD PTR [edx+0x14], eax
 805ea33:  add ebx, 0x1
 805ea36:  add esi, 0x1
 805ea39:  cmp edi, ebx
 805ea3b:  je 805e801
 805ea41:  mov eax, DWORD PTR [ebp-0x68]
 805ea44:  mov ecx, DWORD PTR [ebp+0x8]
 805ea47:  movzx edx, BYTE PTR [eax+ebx]
 805ea4b:  mov eax, DWORD PTR [ecx+0x14]
 805ea4e:  cmp eax, DWORD PTR [ecx+0x18]
 805ea51:  jb 805ea28
 805ea53:  movzx eax, dl
 805ea56:  mov DWORD PTR [esp+0x4], eax
 805ea5a:  mov DWORD PTR [esp], ecx
 805ea5d:  call 8068460
 805ea62:  add eax, 0x1
 805ea65:  jne 805ea33
 805ea67:  mov eax, DWORD PTR [ebp-0xc4]
 805ea6d:  test eax, eax
 805ea6f:  je 805d5f8
 805ea75:  mov ecx, DWORD PTR [ebp-0xc8]
 805ea7b:  mov esi, 0xffffffff
 805ea80:  mov DWORD PTR [esp], ecx
 805ea83:  call 804b4a0
 805ea88:  jmp 805d5fd
 805ea8d:  lea esi, [esi]
 805ea90:  mov eax, DWORD PTR [ebp-0xcc]
 805ea96:  test eax, eax
 805ea98:  je 805eea0
 805ea9e:  mov eax, DWORD PTR [ebp+0x8]
 805eaa1:  mov edx, DWORD PTR [eax+0x58]
 805eaa4:  mov eax, DWORD PTR [edx+0x10]
 805eaa7:  cmp eax, DWORD PTR [edx+0x14]
 805eaaa:  jae 805fc21
 805eab0:  mov DWORD PTR [eax], 0x20
 805eab6:  add eax, 0x4
 805eab9:  mov DWORD PTR [edx+0x10], eax
 805eabc:  jmp 805e938
 805eac1:  mov ebx, DWORD PTR [ebp-0x8c]
 805eac7:  test ebx, ebx
 805eac9:  jle 805eae2
 805eacb:  cmp DWORD PTR [ebp-0x34], 0x1
 805eacf:  jg 805e152
 805ead5:  mov eax, DWORD PTR [ebp-0x38]
 805ead8:  mov ecx, DWORD PTR [eax]
 805eada:  test ecx, ecx
 805eadc:  jne 805e152
 805eae2:  mov DWORD PTR [ebp-0x84], 0x1
 805eaec:  jmp 805e16a
 805eaf1:  mov esi, DWORD PTR [ebp-0x64]
 805eaf4:  lea edx, [eax-0x4]
 805eaf7:  cmp DWORD PTR [eax-0x4], esi
 805eafa:  jne 805eb1c
 805eafc:  jmp 805f64c
 805eb01:  lea esi, [esi]
 805eb08:  mov eax, DWORD PTR [edx]
 805eb0a:  cmp eax, 0x39
 805eb0d:  jne 805f1ed
 805eb13:  mov DWORD PTR [edx], 0x30
 805eb19:  sub edx, 0x4
 805eb1c:  cmp DWORD PTR [ebp-0xa4], edx
 805eb22:  jbe 805eb08
 805eb24:  cmp DWORD PTR [ebp-0x28], 0x66
 805eb28:  je 805f80d
 805eb2e:  cmp DWORD PTR [ebp-0x24], 0x1
 805eb32:  mov edx, DWORD PTR [ebp-0xa4]
 805eb38:  sbb eax, eax
 805eb3a:  and eax, 0x2
 805eb3d:  sub eax, 0x1
 805eb40:  add eax, DWORD PTR [ebp-0x2c]
 805eb43:  mov DWORD PTR [edx], 0x31
 805eb49:  test eax, eax
 805eb4b:  mov DWORD PTR [ebp-0x2c], eax
 805eb4e:  jne 805eb57
 805eb50:  mov DWORD PTR [ebp-0x24], 0x0
 805eb57:  mov edx, DWORD PTR [ebp-0x78]
 805eb5a:  add edx, DWORD PTR [ebp-0x94]
 805eb60:  cmp DWORD PTR [ebp-0x88], edx
 805eb66:  jge 805e488
 805eb6c:  mov eax, DWORD PTR [ebp-0x88]
 805eb72:  mov ecx, DWORD PTR [ebp-0xa0]
 805eb78:  mov ebx, DWORD PTR [ebp-0x88]
 805eb7e:  add DWORD PTR [ebp-0x78], ebx
 805eb81:  sub eax, edx
 805eb83:  lea edi, [ecx+eax*4]
 805eb86:  sub DWORD PTR [ebp-0x78], edx
 805eb89:  jmp 805e488
 805eb8e:  mov DWORD PTR [esp], eax
 805eb91:  call 8074540
 805eb96:  test eax, eax
 805eb98:  jne 805df67
 805eb9e:  mov DWORD PTR [esp], ebx
 805eba1:  call 804d6f0
 805eba6:  mov DWORD PTR [ebp-0xc4], 0x1
 805ebb0:  test eax, eax
 805ebb2:  mov DWORD PTR [ebp-0xc8], eax
 805ebb8:  jne 805df85
 805ebbe:  jmp 805d5f8
 805ebc3:  nop
 805ebc4:  lea esi, [esi]
 805ebc8:  mov DWORD PTR [ebp-0x28], ecx
 805ebcb:  mov esi, DWORD PTR [edi]
 805ebcd:  test esi, esi
 805ebcf:  mov DWORD PTR [ebp-0x8c], esi
 805ebd5:  js 805f6f2
 805ebdb:  mov edi, esi
 805ebdd:  add edi, 0x8
 805ebe0:  mov DWORD PTR [ebp-0x9c], edi
 805ebe6:  mov eax, DWORD PTR [ebp-0x8c]
 805ebec:  mov DWORD PTR [ebp-0x98], 0x1
 805ebf6:  mov DWORD PTR [ebp-0x88], 0x7fffffff
 805ec00:  mov DWORD PTR [ebp-0x84], 0x1
 805ec0a:  mov DWORD PTR [ebp-0x90], eax
 805ec10:  jmp 805df18
 805ec15:  mov edx, DWORD PTR [ebp-0x38]
 805ec18:  mov eax, DWORD PTR [ebp-0x34]
 805ec1b:  lea ebx, [edx+eax*4-0x4]
 805ec1f:  sub eax, 0x1
 805ec22:  mov esi, DWORD PTR [ebx]
 805ec24:  mov DWORD PTR [esp+0xc], 0xa
 805ec2c:  mov DWORD PTR [esp+0x8], eax
 805ec30:  mov DWORD PTR [esp+0x4], edx
 805ec34:  mov DWORD PTR [esp], edx
 805ec37:  call 808c5d0
 805ec3c:  mov DWORD PTR [ebx], eax
 805ec3e:  lea eax, [esi+0x30]
 805ec41:  jmp 805e3e8
 805ec46:  mov eax, DWORD PTR [ebp-0x88]
 805ec4c:  cmp eax, DWORD PTR [ebp-0x2c]
 805ec4f:  jle 805dec8
 805ec55:  mov ebx, DWORD PTR [ebp-0x24]
 805ec58:  mov DWORD PTR [ebp-0x28], 0x66
 805ec5f:  mov DWORD PTR [ebp-0x98], 0x0
 805ec69:  test ebx, ebx
 805ec6b:  jne 805ec79
 805ec6d:  mov eax, DWORD PTR [ebp-0x2c]
 805ec70:  add eax, 0x1
 805ec73:  mov DWORD PTR [ebp-0x98], eax
 805ec79:  mov esi, DWORD PTR [ebp-0x88]
 805ec7f:  mov ebx, DWORD PTR [ebp-0x88]
 805ec85:  sub ebx, DWORD PTR [ebp-0x98]
 805ec8b:  add esi, 0x5
 805ec8e:  mov DWORD PTR [ebp-0x8c], ebx
 805ec94:  mov edx, ebx
 805ec96:  mov DWORD PTR [ebp-0x9c], esi
 805ec9c:  jmp 805def6
 805eca1:  mov ebx, DWORD PTR [ebp-0x94]
 805eca7:  mov edi, DWORD PTR [ebp-0xa4]
 805ecad:  mov eax, DWORD PTR [ebp-0x60]
 805ecb0:  mov DWORD PTR [ebp-0x58], ebx
 805ecb3:  mov esi, DWORD PTR [ebp-0x58]
 805ecb6:  add ebx, DWORD PTR [ebp-0x80]
 805ecb9:  lea edx, [edi+esi*4]
 805ecbc:  sub eax, edx
 805ecbe:  sar eax, 0x2
 805ecc1:  mov DWORD PTR [esp+0x8], eax
 805ecc5:  lea eax, [edi+ebx*4]
 805ecc8:  mov DWORD PTR [esp+0x4], edx
 805eccc:  lea esi, [edi+ebx*4-0x4]
 805ecd0:  mov DWORD PTR [esp], eax
 805ecd3:  call 806c570
 805ecd8:  mov eax, DWORD PTR [ebp-0xd4]
 805ecde:  movsx edi, BYTE PTR [eax]
 805ece1:  mov edx, eax
 805ece3:  nop
 805ece4:  lea esi, [esi]
 805ece8:  mov ecx, DWORD PTR [ebp-0x58]
 805eceb:  add edx, 0x1
 805ecee:  mov eax, DWORD PTR [ebp-0xa4]
 805ecf4:  mov DWORD PTR [ebp-0x4c], edx
 805ecf7:  mov edx, esi
 805ecf9:  lea ebx, [eax+ecx*4-0x4]
 805ecfd:  mov ecx, edi
 805ecff:  nop
 805ed00:  mov eax, DWORD PTR [ebx]
 805ed02:  sub ebx, 0x4
 805ed05:  mov DWORD PTR [edx], eax
 805ed07:  sub edx, 0x4
 805ed0a:  sub ecx, 0x1
 805ed0d:  jne 805ed00
 805ed0f:  mov ecx, DWORD PTR [ebp-0xd8]
 805ed15:  lea eax, [edi*4]
 805ed1c:  mov ebx, DWORD PTR [ebp-0x4c]
 805ed1f:  sub esi, eax
 805ed21:  mov edx, DWORD PTR [ebp-0x58]
 805ed24:  mov DWORD PTR [esi], ecx
 805ed26:  lea esi, [esi-0x4]
 805ed29:  movzx eax, BYTE PTR [ebx]
 805ed2c:  sub edx, edi
 805ed2e:  cmp al, 0x7f
 805ed30:  je 805ed60
 805ed32:  cmp al, 0x0
 805ed34:  jl 805ed60
 805ed36:  jne 805ed44
 805ed38:  mov edi, DWORD PTR [ebp-0xd4]
 805ed3e:  movzx eax, BYTE PTR [edi]
 805ed41:  mov DWORD PTR [ebp-0x4c], edi
 805ed44:  movsx edi, al
 805ed47:  cmp edi, edx
 805ed49:  jae 805ed60
 805ed4b:  mov eax, DWORD PTR [ebp-0x4c]
 805ed4e:  mov DWORD PTR [ebp-0x58], edx
 805ed51:  mov DWORD PTR [ebp-0xd4], eax
 805ed57:  mov edx, eax
 805ed59:  jmp 805ece8
 805ed5b:  nop
 805ed5c:  lea esi, [esi]
 805ed60:  mov ecx, DWORD PTR [ebp-0xa4]
 805ed66:  lea edx, [ecx+edx*4-0x4]
 805ed6a:  lea esi, [esi]
 805ed70:  mov eax, DWORD PTR [edx]
 805ed72:  sub edx, 0x4
 805ed75:  mov DWORD PTR [esi], eax
 805ed77:  sub esi, 0x4
 805ed7a:  cmp DWORD PTR [ebp-0xa4], esi
 805ed80:  jb 805ed70
 805ed82:  mov esi, DWORD PTR [ebp-0x60]
 805ed85:  mov ebx, DWORD PTR [ebp-0x80]
 805ed88:  lea esi, [esi+ebx*4]
 805ed8b:  mov DWORD PTR [ebp-0x60], esi
 805ed8e:  jmp 805e4e8
 805ed93:  mov edx, DWORD PTR [ebp+0x8]
 805ed96:  mov eax, DWORD PTR [edx+0x14]
 805ed99:  cmp eax, DWORD PTR [edx+0x18]
 805ed9c:  jae 805fce2
 805eda2:  mov BYTE PTR [eax], 0x2d
 805eda5:  mov ecx, DWORD PTR [ebp+0x8]
 805eda8:  add eax, 0x1
 805edab:  mov DWORD PTR [ecx+0x14], eax
 805edae:  jmp 805e938
 805edb3:  test bl, 0x10
 805edb6:  je 805e64b
 805edbc:  mov ecx, DWORD PTR [ebp-0xcc]
 805edc2:  test ecx, ecx
 805edc4:  je 805f7c0
 805edca:  mov eax, DWORD PTR [ebp+0x8]
 805edcd:  mov edx, DWORD PTR [eax+0x58]
 805edd0:  mov eax, DWORD PTR [edx+0x10]
 805edd3:  cmp eax, DWORD PTR [edx+0x14]
 805edd6:  jae 805fcc4
 805eddc:  mov DWORD PTR [eax], 0x20
 805ede2:  add eax, 0x4
 805ede5:  mov DWORD PTR [edx+0x10], eax
 805ede8:  jmp 805e97c
 805eded:  mov ebx, DWORD PTR [ebp+0x8]
 805edf0:  mov eax, DWORD PTR [ebx+0x14]
 805edf3:  cmp eax, DWORD PTR [ebx+0x18]
 805edf6:  jae 805f779
 805edfc:  mov BYTE PTR [eax], 0x2d
 805edff:  mov edi, DWORD PTR [ebp+0x8]
 805ee02:  add eax, 0x1
 805ee05:  mov DWORD PTR [edi+0x14], eax
 805ee08:  jmp 805e641
 805ee0d:  mov edx, DWORD PTR [ebp+0x8]
 805ee10:  mov eax, DWORD PTR [edx+0x14]
 805ee13:  cmp eax, DWORD PTR [edx+0x18]
 805ee16:  jae 805fb85
 805ee1c:  mov BYTE PTR [eax], 0x2b
 805ee1f:  mov ecx, DWORD PTR [ebp+0x8]
 805ee22:  add eax, 0x1
 805ee25:  mov DWORD PTR [ecx+0x14], eax
 805ee28:  jmp 805e938
 805ee2d:  test edi, edi
 805ee2f:  je 805e801
 805ee35:  lea ebx, [edi-0x1]
 805ee38:  jmp 805ee64
 805ee3a:  lea esi, [esi]
 805ee40:  mov DWORD PTR [eax], ecx
 805ee42:  add ecx, 0x1
 805ee45:  sete cl
 805ee48:  add eax, 0x4
 805ee4b:  mov DWORD PTR [edx+0x10], eax
 805ee4e:  test cl, cl
 805ee50:  jne 805ea67
 805ee56:  add esi, 0x1
 805ee59:  test ebx, ebx
 805ee5b:  je 805e801
 805ee61:  sub ebx, 0x1
 805ee64:  mov eax, DWORD PTR [ebp+0x8]
 805ee67:  mov edi, DWORD PTR [ebp-0xa4]
 805ee6d:  mov edx, DWORD PTR [eax+0x58]
 805ee70:  mov ecx, DWORD PTR [edi]
 805ee72:  add edi, 0x4
 805ee75:  mov DWORD PTR [ebp-0xa4], edi
 805ee7b:  mov eax, DWORD PTR [edx+0x10]
 805ee7e:  cmp eax, DWORD PTR [edx+0x14]
 805ee81:  jb 805ee40
 805ee83:  mov edx, DWORD PTR [ebp+0x8]
 805ee86:  mov DWORD PTR [esp+0x4], ecx
 805ee8a:  mov DWORD PTR [esp], edx
 805ee8d:  call 80630d0
 805ee92:  add eax, 0x1
 805ee95:  sete cl
 805ee98:  jmp 805ee4e
 805ee9a:  lea esi, [esi]
 805eea0:  mov ecx, DWORD PTR [ebp+0x8]
 805eea3:  mov eax, DWORD PTR [ecx+0x14]
 805eea6:  cmp eax, DWORD PTR [ecx+0x18]
 805eea9:  jae 805fd15
 805eeaf:  mov BYTE PTR [eax], 0x20
 805eeb2:  mov edx, DWORD PTR [ebp+0x8]
 805eeb5:  add eax, 0x1
 805eeb8:  mov DWORD PTR [edx+0x14], eax
 805eebb:  jmp 805e938
 805eec0:  mov edx, eax
 805eec2:  mov eax, 0xffffffd8
 805eec7:  mov esi, DWORD PTR [ebp+0xc]
 805eeca:  mov eax, DWORD PTR [edx+eax]
 805eecd:  mov eax, DWORD PTR [eax]
 805eecf:  mov eax, DWORD PTR [eax+0x24]
 805eed2:  add eax, 0x100
 805eed7:  mov DWORD PTR [edx+ecx], eax
 805eeda:  movzx ebx, BYTE PTR [esi+0xc]
 805eede:  jmp 805d97f
 805eee3:  mov edx, eax
 805eee5:  mov eax, 0xffffffd8
 805eeea:  mov esi, DWORD PTR [ebp+0xc]
 805eeed:  mov eax, DWORD PTR [edx+eax]
 805eef0:  mov eax, DWORD PTR [eax]
 805eef2:  mov eax, DWORD PTR [eax+0x24]
 805eef5:  add eax, 0x100
 805eefa:  mov DWORD PTR [edx+ecx], eax
 805eefd:  movzx ebx, BYTE PTR [esi+0xc]
 805ef01:  jmp 805d8ed
 805ef06:  mov eax, DWORD PTR [ebp-0x3c]
 805ef09:  mov DWORD PTR [esp+0x8], ebx
 805ef0d:  mov DWORD PTR [esp+0x4], eax
 805ef11:  mov eax, DWORD PTR [ebp-0x38]
 805ef14:  mov DWORD PTR [esp], eax
 805ef17:  call 808bcb0
 805ef1c:  test eax, eax
 805ef1e:  jns 805dcd0
 805ef24:  mov edi, DWORD PTR [ebp-0x30]
 805ef27:  mov DWORD PTR [ebp-0x128], edi
 805ef2d:  jmp 805dc4e
 805ef32:  mov edx, DWORD PTR [ebp+0xc]
 805ef35:  mov DWORD PTR [ebp-0x28], 0x66
 805ef3c:  mov edx, DWORD PTR [edx]
 805ef3e:  test edx, edx
 805ef40:  mov DWORD PTR [ebp-0x8c], edx
 805ef46:  js 805f738
 805ef4c:  mov edi, DWORD PTR [ebp-0x24]
 805ef4f:  test edi, edi
 805ef51:  jne 805f597
 805ef57:  mov eax, DWORD PTR [ebp-0x2c]
 805ef5a:  mov ebx, DWORD PTR [ebp-0x8c]
 805ef60:  mov DWORD PTR [ebp-0x88], 0x7fffffff
 805ef6a:  mov DWORD PTR [ebp-0x84], 0x1
 805ef74:  lea ecx, [eax+0x1]
 805ef77:  lea edx, [eax+edx+0x2]
 805ef7b:  mov DWORD PTR [ebp-0x98], ecx
 805ef81:  mov DWORD PTR [ebp-0x9c], edx
 805ef87:  mov DWORD PTR [ebp-0x90], ebx
 805ef8d:  jmp 805df18
 805ef92:  mov ecx, DWORD PTR [ebp-0x5c]
 805ef95:  mov ebx, DWORD PTR [ebp+0x8]
 805ef98:  mov DWORD PTR [esp+0x4], 0x20
 805efa0:  mov DWORD PTR [esp+0x8], ecx
 805efa4:  mov DWORD PTR [esp], ebx
 805efa7:  call 8062880
 805efac:  jmp 805d824
 805efb1:  test eax, eax
 805efb3:  je 805f70b
 805efb9:  bsf esi, eax
 805efbc:  mov ecx, DWORD PTR [ebp-0xf0]
 805efc2:  mov eax, DWORD PTR [ebp-0x38]
 805efc5:  mov eax, DWORD PTR [eax+ecx]
 805efc8:  test eax, eax
 805efca:  jne 805f8da
 805efd0:  mov eax, DWORD PTR [ebp-0x50]
 805efd3:  test eax, eax
 805efd5:  jne 805f654
 805efdb:  mov DWORD PTR [ebp-0xec], 0x20
 805efe5:  sub DWORD PTR [ebp-0xec], ebx
 805efeb:  cmp esi, DWORD PTR [ebp-0xec]
 805eff1:  jl 805f9b0
 805eff7:  mov ecx, DWORD PTR [ebp-0x50]
 805effa:  sub DWORD PTR [ebp-0x128], ecx
 805f000:  mov eax, DWORD PTR [ebp-0xec]
 805f006:  mov esi, DWORD PTR [ebp-0xf0]
 805f00c:  mov ebx, DWORD PTR [ebp-0x128]
 805f012:  mov DWORD PTR [esp], edx
 805f015:  mov DWORD PTR [esp+0xc], eax
 805f019:  lea eax, [edx+esi]
 805f01c:  mov DWORD PTR [esp+0x8], ebx
 805f020:  mov DWORD PTR [esp+0x4], eax
 805f024:  call 808c220
 805f029:  mov eax, DWORD PTR [ebp-0x50]
 805f02c:  mov edx, DWORD PTR [ebp-0x38]
 805f02f:  not eax
 805f031:  add DWORD PTR [ebp-0x30], eax
 805f034:  mov eax, DWORD PTR [ebp-0xec]
 805f03a:  mov DWORD PTR [esp], edx
 805f03d:  mov DWORD PTR [esp+0xc], eax
 805f041:  mov eax, DWORD PTR [ebp-0x34]
 805f044:  sub eax, DWORD PTR [ebp-0x50]
 805f047:  mov DWORD PTR [esp+0x8], eax
 805f04b:  lea eax, [edx+esi]
 805f04e:  mov DWORD PTR [esp+0x4], eax
 805f052:  call 808c220
 805f057:  mov ecx, DWORD PTR [ebp-0x34]
 805f05a:  mov eax, DWORD PTR [ebp-0x50]
 805f05d:  mov edx, DWORD PTR [ebp-0x38]
 805f060:  sub eax, ecx
 805f062:  lea eax, [eax*4+0x4]
 805f069:  neg eax
 805f06b:  mov eax, DWORD PTR [edx+eax]
 805f06e:  test eax, eax
 805f070:  jne 805f078
 805f072:  mov edi, DWORD PTR [ebp-0x50]
 805f075:  add edi, 0x1
 805f078:  sub ecx, edi
 805f07a:  mov DWORD PTR [ebp-0x34], ecx
 805f07d:  jmp 805de48
 805f082:  mov edi, DWORD PTR [ebp-0x54]
 805f085:  mov edx, DWORD PTR [ebp+0xc]
 805f088:  mov ecx, DWORD PTR [ebp+0x8]
 805f08b:  mov DWORD PTR [esp+0x8], edi
 805f08f:  mov eax, DWORD PTR [edx+0x10]
 805f092:  mov DWORD PTR [esp], ecx
 805f095:  mov DWORD PTR [esp+0x4], eax
 805f099:  call 8062880
 805f09e:  jmp 805e84e
 805f0a3:  mov edx, DWORD PTR [ebp-0x2c]
 805f0a6:  lea eax, [edx-0x1]
 805f0a9:  test edx, edx
 805f0ab:  mov DWORD PTR [ebp-0x2c], eax
 805f0ae:  jg 805e488
 805f0b4:  lea esi, [esi]
 805f0b8:  jmp 805e354
 805f0bd:  mov eax, 0xffffffd8
 805f0c2:  mov eax, DWORD PTR [esi+eax]
 805f0c5:  mov eax, DWORD PTR [eax]
 805f0c7:  mov eax, DWORD PTR [eax+0x30]
 805f0ca:  add eax, 0x200
 805f0cf:  mov DWORD PTR [esi+edx], eax
 805f0d2:  jmp 805de6b
 805f0d7:  mov ecx, edx
 805f0d9:  mov ebx, DWORD PTR [ebp-0x118]
 805f0df:  sar ecx, 0x1f
 805f0e2:  shr ecx, 0x1b
 805f0e5:  add edx, ecx
 805f0e7:  mov eax, edx
 805f0e9:  and eax, 0x1f
 805f0ec:  sub eax, ecx
 805f0ee:  mov DWORD PTR [esp+0xc], eax
 805f0f2:  sar edx, 0x5
 805f0f5:  mov eax, DWORD PTR [ebp-0x34]
 805f0f8:  shl edx, 0x2
 805f0fb:  add edx, DWORD PTR [ebp-0x38]
 805f0fe:  mov DWORD PTR [esp+0x4], ebx
 805f102:  mov DWORD PTR [esp+0x8], eax
 805f106:  mov DWORD PTR [esp], edx
 805f109:  call 808c1c0
 805f10e:  mov ebx, DWORD PTR [ebp-0x2c]
 805f111:  mov esi, DWORD PTR [ebp-0xd0]
 805f117:  mov edi, ebx
 805f119:  lea edx, [ebx+esi]
 805f11c:  mov ecx, eax
 805f11e:  mov eax, edx
 805f120:  sar eax, 0x1f
 805f123:  shr eax, 0x1b
 805f126:  add eax, edx
 805f128:  sar eax, 0x5
 805f12b:  add eax, DWORD PTR [ebp-0x34]
 805f12e:  test ecx, ecx
 805f130:  mov DWORD PTR [ebp-0x34], eax
 805f133:  je 805dbaf
 805f139:  mov esi, DWORD PTR [ebp-0x38]
 805f13c:  mov DWORD PTR [esi+eax*4], ecx
 805f13f:  add eax, 0x1
 805f142:  mov DWORD PTR [ebp-0x34], eax
 805f145:  jmp 805dbaf
 805f14a:  mov edx, DWORD PTR [ebp-0xc8]
 805f150:  mov eax, DWORD PTR [ebp-0xa4]
 805f156:  mov ecx, DWORD PTR [ebp-0x64]
 805f159:  sub DWORD PTR [ebp-0x2c], 0x1
 805f15d:  mov DWORD PTR [eax], 0x30
 805f163:  mov DWORD PTR [edx+0xc], ecx
 805f166:  add edx, 0x10
 805f169:  mov DWORD PTR [ebp-0xa0], edx
 805f16f:  mov DWORD PTR [ebp-0x94], 0x0
 805f179:  jmp 805e16a
 805f17e:  mov ecx, DWORD PTR [ebp-0xa0]
 805f184:  mov eax, DWORD PTR [ecx-0x4]
 805f187:  cmp eax, DWORD PTR [ebp-0x64]
 805f18a:  je 805f83e
 805f190:  test al, 0x1
 805f192:  jne 805e3fa
 805f198:  mov edx, DWORD PTR [ebp-0x34]
 805f19b:  cmp edx, 0x1
 805f19e:  je 805f94a
 805f1a4:  mov ecx, DWORD PTR [ebp-0x30]
 805f1a7:  test ecx, ecx
 805f1a9:  jne 805e3fa
 805f1af:  test edx, edx
 805f1b1:  mov ecx, edx
 805f1b3:  je 805e488
 805f1b9:  mov eax, DWORD PTR [ebp-0x38]
 805f1bc:  mov edx, DWORD PTR [eax+edx*4-0x4]
 805f1c0:  test edx, edx
 805f1c2:  jne 805e3fa
 805f1c8:  lea edx, [eax+ecx*4-0x8]
 805f1cc:  jmp 805f1dd
 805f1ce:  xchg ax, ax
 805f1d0:  mov eax, DWORD PTR [edx]
 805f1d2:  sub edx, 0x4
 805f1d5:  test eax, eax
 805f1d7:  jne 805e3fa
 805f1dd:  sub ecx, 0x1
 805f1e0:  jne 805f1d0
 805f1e2:  lea esi, [esi]
 805f1e8:  jmp 805e488
 805f1ed:  add eax, 0x1
 805f1f0:  mov DWORD PTR [edx], eax
 805f1f2:  lea esi, [esi]
 805f1f8:  jmp 805e488
 805f1fd:  mov eax, DWORD PTR [ebp-0x34]
 805f200:  mov edi, DWORD PTR [ebp-0xd0]
 805f206:  mov DWORD PTR [ebp-0xac], 0x80c4b70
 805f210:  mov DWORD PTR [esp], esi
 805f213:  mov DWORD PTR [esp+0x8], eax
 805f217:  mov eax, DWORD PTR [ebp-0x118]
 805f21d:  mov DWORD PTR [esp+0xc], edi
 805f221:  mov DWORD PTR [esp+0x4], eax
 805f225:  call 808c1c0
 805f22a:  mov edx, DWORD PTR [ebp-0x34]
 805f22d:  mov ecx, DWORD PTR [ebp-0x38]
 805f230:  mov DWORD PTR [ebp-0x24], 0x1
 805f237:  mov DWORD PTR [ebp-0xb4], 0x0
 805f241:  mov DWORD PTR [ebp-0xb0], 0xc
 805f24b:  mov DWORD PTR [ecx+edx*4], eax
 805f24e:  add edx, 0x1
 805f251:  mov DWORD PTR [ebp-0x34], edx
 805f254:  mov edx, DWORD PTR [ebp-0x2c]
 805f257:  neg edx
 805f259:  mov DWORD PTR [ebp-0x2c], edx
 805f25c:  sub DWORD PTR [ebp-0xac], 0x10
 805f263:  mov ecx, DWORD PTR [ebp-0xac]
 805f269:  cmp DWORD PTR [ecx+0xc], edx
 805f26c:  jg 805f3ae
 805f272:  mov eax, DWORD PTR [ecx+0x4]
 805f275:  mov ecx, DWORD PTR [ebp-0x34]
 805f278:  lea edx, [eax-0x2]
 805f27b:  cmp edx, ecx
 805f27d:  jle 805f408
 805f283:  mov eax, DWORD PTR [ebp-0x38]
 805f286:  mov ebx, DWORD PTR [ebp-0xac]
 805f28c:  mov DWORD PTR [esp+0x10], ecx
 805f290:  mov DWORD PTR [esp+0x8], edx
 805f294:  mov DWORD PTR [esp+0xc], eax
 805f298:  mov eax, DWORD PTR [ebx]
 805f29a:  lea eax, [eax*4+0x80c3cc8]
 805f2a1:  mov DWORD PTR [esp+0x4], eax
 805f2a5:  mov eax, DWORD PTR [ebp-0x3c]
 805f2a8:  mov DWORD PTR [esp], eax
 805f2ab:  call 808c280
 805f2b0:  mov ecx, DWORD PTR [ebp-0x34]
 805f2b3:  mov edi, DWORD PTR [ebp-0xac]
 805f2b9:  mov edx, ecx
 805f2bb:  add edx, DWORD PTR [edi+0x4]
 805f2be:  test eax, eax
 805f2c0:  lea ebx, [edx-0x2]
 805f2c3:  jne 805f2c8
 805f2c5:  lea ebx, [edx-0x3]
 805f2c8:  mov eax, ebx
 805f2ca:  sub eax, 0x1
 805f2cd:  shl eax, 0x2
 805f2d0:  mov DWORD PTR [ebp-0xe8], eax
 805f2d6:  mov eax, DWORD PTR [ebp-0x3c]
 805f2d9:  mov edx, DWORD PTR [ebp-0xe8]
 805f2df:  bsr esi, DWORD PTR [eax+edx]
 805f2e3:  mov eax, 0x1
 805f2e8:  sub eax, ecx
 805f2ea:  add eax, ebx
 805f2ec:  shl eax, 0x5
 805f2ef:  xor esi, 0x1f
 805f2f2:  mov edx, esi
 805f2f4:  not edx
 805f2f6:  lea eax, [edx+eax]
 805f2f9:  mov edx, DWORD PTR [ebp-0x2c]
 805f2fc:  mov DWORD PTR [ebp-0x12c], eax
 805f302:  lea eax, [edx+0x3]
 805f305:  cmp eax, DWORD PTR [ebp-0x12c]
 805f30b:  je 805f5cf
 805f311:  lea eax, [edx+0x2]
 805f314:  cmp DWORD PTR [ebp-0x12c], eax
 805f31a:  jg 805f3cf
 805f320:  mov eax, DWORD PTR [ebp-0x3c]
 805f323:  mov DWORD PTR [ebp-0x11c], eax
 805f329:  movzx ecx, BYTE PTR [ebp-0xb0]
 805f330:  mov eax, 0x1
 805f335:  sub edx, DWORD PTR [ebp-0x12c]
 805f33b:  shl eax, cl
 805f33d:  or DWORD PTR [ebp-0xb4], eax
 805f343:  test edx, edx
 805f345:  mov DWORD PTR [ebp-0x2c], edx
 805f348:  js 805f74c
 805f34e:  mov edi, DWORD PTR [ebp-0x11c]
 805f354:  xor eax, eax
 805f356:  xor ecx, ecx
 805f358:  mov edx, DWORD PTR [edi]
 805f35a:  test edx, edx
 805f35c:  jne 805f371
 805f35e:  xchg ax, ax
 805f360:  add eax, 0x1
 805f363:  mov edx, DWORD PTR [edi+eax*4]
 805f366:  lea ecx, [eax*4]
 805f36d:  test edx, edx
 805f36f:  je 805f360
 805f371:  cmp esi, 0x1f
 805f374:  jne 805f5f5
 805f37a:  mov edx, ebx
 805f37c:  sub edx, eax
 805f37e:  test edx, edx
 805f380:  jle 805f3a8
 805f382:  mov esi, DWORD PTR [ebp-0x38]
 805f385:  lea edi, [eax*4]
 805f38c:  xor ecx, ecx
 805f38e:  mov ebx, DWORD PTR [ebp-0x11c]
 805f394:  lea esi, [esi]
 805f398:  mov eax, DWORD PTR [ebx+edi]
 805f39b:  add edi, 0x4
 805f39e:  mov DWORD PTR [esi+ecx*4], eax
 805f3a1:  add ecx, 0x1
 805f3a4:  cmp edx, ecx
 805f3a6:  jg 805f398
 805f3a8:  mov DWORD PTR [ebp-0x34], edx
 805f3ab:  mov edx, DWORD PTR [ebp-0x2c]
 805f3ae:  cmp DWORD PTR [ebp-0xb0], 0x1
 805f3b5:  je 805f43a
 805f3bb:  test edx, edx
 805f3bd:  jle 805f4b4
 805f3c3:  sub DWORD PTR [ebp-0xb0], 0x1
 805f3ca:  jmp 805f25c
 805f3cf:  lea eax, [edx+0x3]
 805f3d2:  cmp eax, DWORD PTR [ebp-0x12c]
 805f3d8:  jne 805f3ae
 805f3da:  mov ecx, DWORD PTR [ebp-0x3c]
 805f3dd:  mov edi, DWORD PTR [ebp-0xe8]
 805f3e3:  mov eax, DWORD PTR [ebp-0x1c]
 805f3e6:  mov DWORD PTR [ebp-0x11c], ecx
 805f3ec:  cmp DWORD PTR [ecx+edi], eax
 805f3ef:  jb 805f329
 805f3f5:  jne 805f3ae
 805f3f7:  mov eax, DWORD PTR [ecx+ebx*4-0x8]
 805f3fb:  cmp eax, DWORD PTR [ebp-0x20]
 805f3fe:  jae 805f3ae
 805f400:  jmp 805f329
 805f405:  lea esi, [esi]
 805f408:  mov esi, DWORD PTR [ebp-0xac]
 805f40e:  mov DWORD PTR [esp+0x10], edx
 805f412:  mov eax, DWORD PTR [esi]
 805f414:  mov DWORD PTR [esp+0x8], ecx
 805f418:  lea eax, [eax*4+0x80c3cc8]
 805f41f:  mov DWORD PTR [esp+0xc], eax
 805f423:  mov eax, DWORD PTR [ebp-0x38]
 805f426:  mov DWORD PTR [esp+0x4], eax
 805f42a:  mov eax, DWORD PTR [ebp-0x3c]
 805f42d:  mov DWORD PTR [esp], eax
 805f430:  call 808c280
 805f435:  jmp 805f2b0
 805f43a:  test edx, edx
 805f43c:  jle 805f4b4
 805f43e:  mov eax, DWORD PTR [ebp-0x34]
 805f441:  mov DWORD PTR [esp+0xc], 0xa
 805f449:  mov DWORD PTR [esp+0x8], eax
 805f44d:  mov eax, DWORD PTR [ebp-0x38]
 805f450:  mov DWORD PTR [esp+0x4], eax
 805f454:  mov eax, DWORD PTR [ebp-0x3c]
 805f457:  mov DWORD PTR [esp], eax
 805f45a:  call 808c5d0
 805f45f:  mov ecx, DWORD PTR [ebp-0x3c]
 805f462:  mov edx, DWORD PTR [ebp-0x2c]
 805f465:  mov ebx, DWORD PTR [ebp-0x34]
 805f468:  bsf eax, DWORD PTR [ecx]
 805f46b:  cmp edx, 0x4
 805f46e:  jle 805f475
 805f470:  mov edx, 0x4
 805f475:  cmp eax, edx
 805f477:  jge 805f853
 805f47d:  mov eax, 0x20
 805f482:  sub eax, edx
 805f484:  mov DWORD PTR [esp+0xc], eax
 805f488:  mov eax, DWORD PTR [ebp-0x38]
 805f48b:  mov DWORD PTR [esp+0x8], ebx
 805f48f:  mov DWORD PTR [esp+0x4], ecx
 805f493:  mov DWORD PTR [esp], eax
 805f496:  call 808c1c0
 805f49b:  test eax, eax
 805f49d:  mov edx, eax
 805f49f:  je 805f4aa
 805f4a1:  mov eax, DWORD PTR [ebp-0x38]
 805f4a4:  mov DWORD PTR [eax+ebx*4], edx
 805f4a7:  add ebx, 0x1
 805f4aa:  or DWORD PTR [ebp-0xb4], 0x1
 805f4b1:  mov DWORD PTR [ebp-0x34], ebx
 805f4b4:  mov eax, DWORD PTR [ebp-0xb4]
 805f4ba:  mov DWORD PTR [ebp-0x2c], eax
 805f4bd:  jmp 805de48
 805f4c2:  mov DWORD PTR [ebp-0x88], 0x6
 805f4cc:  jmp 805deb3
 805f4d1:  mov eax, DWORD PTR [ebp-0x54]
 805f4d4:  test eax, eax
 805f4d6:  jle 805e65d
 805f4dc:  mov eax, DWORD PTR [ebp-0xcc]
 805f4e2:  test eax, eax
 805f4e4:  je 805f578
 805f4ea:  mov edx, DWORD PTR [ebp-0x54]
 805f4ed:  mov ecx, DWORD PTR [ebp+0x8]
 805f4f0:  mov DWORD PTR [esp+0x4], 0x30
 805f4f8:  mov DWORD PTR [esp+0x8], edx
 805f4fc:  mov DWORD PTR [esp], ecx
 805f4ff:  call 8062c50
 805f504:  cmp eax, DWORD PTR [ebp-0x54]
 805f507:  jne 805f797
 805f50d:  add esi, DWORD PTR [ebp-0x54]
 805f510:  jmp 805e65d
 805f515:  mov DWORD PTR [ebp-0x34], ecx
 805f518:  mov edx, ecx
 805f51a:  lea esi, [esi]
 805f520:  jmp 805e995
 805f525:  mov esi, DWORD PTR [ebp-0x54]
 805f528:  mov edi, DWORD PTR [ebp+0x8]
 805f52b:  mov DWORD PTR [esp+0x4], eax
 805f52f:  mov DWORD PTR [esp+0x8], esi
 805f533:  mov DWORD PTR [esp], edi
 805f536:  call 8062880
 805f53b:  mov esi, eax
 805f53d:  jmp 805e601
 805f542:  mov edi, DWORD PTR [ebp+0x8]
 805f545:  mov eax, DWORD PTR [edi+0x14]
 805f548:  cmp eax, DWORD PTR [edi+0x18]
 805f54b:  jae 805fca1
 805f551:  mov BYTE PTR [eax], 0x2b
 805f554:  mov edx, DWORD PTR [ebp+0x8]
 805f557:  add eax, 0x1
 805f55a:  mov DWORD PTR [edx+0x14], eax
 805f55d:  jmp 805e97c
 805f562:  mov eax, DWORD PTR [ebp-0xa0]
 805f568:  je 805eaf1
 805f56e:  mov edx, DWORD PTR [eax]
 805f570:  jmp 805e47b
 805f575:  lea esi, [esi]
 805f578:  mov ebx, DWORD PTR [ebp-0x54]
 805f57b:  mov edi, DWORD PTR [ebp+0x8]
 805f57e:  mov DWORD PTR [esp+0x4], 0x30
 805f586:  mov DWORD PTR [esp+0x8], ebx
 805f58a:  mov DWORD PTR [esp], edi
 805f58d:  call 8062880
 805f592:  jmp 805f504
 805f597:  mov esi, DWORD PTR [ebp-0x8c]
 805f59d:  add edx, 0x2
 805f5a0:  mov DWORD PTR [ebp-0x9c], edx
 805f5a6:  mov DWORD PTR [ebp-0x98], 0x1
 805f5b0:  mov DWORD PTR [ebp-0x88], 0x7fffffff
 805f5ba:  mov DWORD PTR [ebp-0x90], esi
 805f5c0:  mov DWORD PTR [ebp-0x84], 0x1
 805f5ca:  jmp 805df18
 805f5cf:  cmp esi, 0x1c
 805f5d2:  jg 805f8a2
 805f5d8:  mov ecx, 0x1c
 805f5dd:  mov eax, 0xa
 805f5e2:  sub ecx, esi
 805f5e4:  shl eax, cl
 805f5e6:  mov DWORD PTR [ebp-0x20], 0x0
 805f5ed:  mov DWORD PTR [ebp-0x1c], eax
 805f5f0:  jmp 805f311
 805f5f5:  bsf edi, edx
 805f5f8:  test eax, eax
 805f5fa:  jne 805f7e0
 805f600:  mov edx, 0x1f
 805f605:  sub edx, esi
 805f607:  cmp edi, edx
 805f609:  jl 805faa7
 805f60f:  sub ebx, eax
 805f611:  mov eax, DWORD PTR [ebp-0x11c]
 805f617:  mov DWORD PTR [esp+0xc], edx
 805f61b:  mov DWORD PTR [esp+0x8], ebx
 805f61f:  add eax, ecx
 805f621:  mov DWORD PTR [esp+0x4], eax
 805f625:  mov eax, DWORD PTR [ebp-0x38]
 805f628:  mov DWORD PTR [esp], eax
 805f62b:  call 808c220
 805f630:  mov edx, DWORD PTR [ebp-0x2c]
 805f633:  mov DWORD PTR [ebp-0x34], ebx
 805f636:  jmp 805f3ae
 805f63b:  xor eax, eax
 805f63d:  cmp DWORD PTR [ebp-0x74], 0x0
 805f641:  setg al
 805f644:  sub DWORD PTR [ebp-0x74], eax
 805f647:  jmp 805e459
 805f64c:  lea edx, [eax-0x8]
 805f64f:  jmp 805eb1c
 805f654:  mov DWORD PTR [ebp-0xec], 0x20
 805f65e:  sub DWORD PTR [ebp-0xec], ebx
 805f664:  cmp esi, DWORD PTR [ebp-0xec]
 805f66a:  jge 805eff7
 805f670:  mov ecx, DWORD PTR [ebp-0xec]
 805f676:  mov ebx, 0x1
 805f67b:  sub ebx, DWORD PTR [ebp-0x50]
 805f67e:  mov DWORD PTR [esp], edx
 805f681:  mov DWORD PTR [esp+0xc], ecx
 805f685:  mov ecx, DWORD PTR [ebp-0x128]
 805f68b:  lea esi, [ebx*4]
 805f692:  neg esi
 805f694:  lea eax, [ebx+ecx]
 805f697:  mov DWORD PTR [esp+0x8], eax
 805f69b:  lea eax, [edx+esi]
 805f69e:  mov DWORD PTR [esp+0x4], eax
 805f6a2:  call 808c220
 805f6a7:  mov eax, DWORD PTR [ebp-0x50]
 805f6aa:  sub DWORD PTR [ebp-0x30], eax
 805f6ad:  mov eax, DWORD PTR [ebp-0x38]
 805f6b0:  mov edx, DWORD PTR [ebp-0xec]
 805f6b6:  add ebx, DWORD PTR [ebp-0x34]
 805f6b9:  lea esi, [eax+esi]
 805f6bc:  mov DWORD PTR [esp+0xc], edx
 805f6c0:  mov DWORD PTR [esp+0x8], ebx
 805f6c4:  mov DWORD PTR [esp+0x4], esi
 805f6c8:  mov DWORD PTR [esp], eax
 805f6cb:  call 808c220
 805f6d0:  mov ecx, DWORD PTR [ebp-0x34]
 805f6d3:  mov esi, DWORD PTR [ebp-0x50]
 805f6d6:  mov eax, DWORD PTR [ebp-0x38]
 805f6d9:  mov edx, ecx
 805f6db:  sub edx, esi
 805f6dd:  mov eax, DWORD PTR [eax+edx*4]
 805f6e0:  lea ebx, [esi-0x1]
 805f6e3:  test eax, eax
 805f6e5:  je 805f078
 805f6eb:  mov edi, ebx
 805f6ed:  jmp 805f078
 805f6f2:  mov DWORD PTR [ebp-0x8c], 0x6
 805f6fc:  mov DWORD PTR [ebp-0x9c], 0xe
 805f706:  jmp 805ebe6
 805f70b:  mov eax, DWORD PTR [ebp-0x38]
 805f70e:  mov ecx, DWORD PTR [ebp-0xf0]
 805f714:  bsf esi, DWORD PTR [eax+ecx]
 805f718:  jmp 805efd0
 805f71d:  mov edx, DWORD PTR [ebp-0xa4]
 805f723:  mov DWORD PTR [ebp-0x94], 0x0
 805f72d:  mov DWORD PTR [ebp-0xa0], edx
 805f733:  jmp 805e13b
 805f738:  mov DWORD PTR [ebp-0x8c], 0x6
 805f742:  mov edx, 0x6
 805f747:  jmp 805ef4c
 805f74c:  sub esi, edx
 805f74e:  jmp 805f34e
 805f753:  cmp BYTE PTR [ebp-0x79], 0x67
 805f757:  je 805fd30
 805f75d:  mov eax, ecx
 805f75f:  mov esi, DWORD PTR [ebp-0x90]
 805f765:  mov ecx, DWORD PTR [ebp-0x74]
 805f768:  mov edx, DWORD PTR [ebp-0x64]
 805f76b:  lea esi, [ecx+esi]
 805f76e:  mov DWORD PTR [ebp-0x114], esi
 805f774:  jmp 805e47b
 805f779:  mov DWORD PTR [esp+0x4], 0x2d
 805f781:  mov DWORD PTR [esp], ebx
 805f784:  call 8068460
 805f789:  add eax, 0x1
 805f78c:  sete al
 805f78f:  test al, al
 805f791:  je 805e641
 805f797:  mov eax, DWORD PTR [ebp-0xc4]
 805f79d:  test eax, eax
 805f79f:  je 805d5f8
 805f7a5:  mov eax, DWORD PTR [ebp-0xc8]
 805f7ab:  mov esi, 0xffffffff
 805f7b0:  mov DWORD PTR [esp], eax
 805f7b3:  call 804b4a0
 805f7b8:  jmp 805d5fd
 805f7bd:  lea esi, [esi]
 805f7c0:  mov ecx, DWORD PTR [ebp+0x8]
 805f7c3:  mov eax, DWORD PTR [ecx+0x14]
 805f7c6:  cmp eax, DWORD PTR [ecx+0x18]
 805f7c9:  jae 805fba8
 805f7cf:  mov BYTE PTR [eax], 0x20
 805f7d2:  mov ebx, DWORD PTR [ebp+0x8]
 805f7d5:  add eax, 0x1
 805f7d8:  mov DWORD PTR [ebx+0x14], eax
 805f7db:  jmp 805e97c
 805f7e0:  mov edx, 0x1f
 805f7e5:  sub edx, esi
 805f7e7:  cmp edi, edx
 805f7e9:  jge 805f60f
 805f7ef:  mov edi, DWORD PTR [ebp-0x11c]
 805f7f5:  add ebx, 0x1
 805f7f8:  sub ebx, eax
 805f7fa:  sub eax, 0x1
 805f7fd:  mov DWORD PTR [esp+0xc], edx
 805f801:  mov DWORD PTR [esp+0x8], ebx
 805f805:  lea eax, [edi+eax*4]
 805f808:  jmp 805f621
 805f80d:  mov ecx, DWORD PTR [ebp-0x88]
 805f813:  cmp DWORD PTR [ebp-0x94], ecx
 805f819:  je 805fa02
 805f81f:  sub DWORD PTR [ebp-0xa4], 0x4
 805f826:  mov edx, DWORD PTR [ebp-0xa4]
 805f82c:  add DWORD PTR [ebp-0x94], 0x1
 805f833:  mov DWORD PTR [edx], 0x31
 805f839:  jmp 805eb57
 805f83e:  mov ebx, DWORD PTR [ebp-0xa0]
 805f844:  test BYTE PTR [ebx-0x8], 0x1
 805f848:  jne 805e3fa
 805f84e:  jmp 805f198
 805f853:  mov eax, DWORD PTR [ebp-0x38]
 805f856:  mov DWORD PTR [esp+0xc], edx
 805f85a:  mov DWORD PTR [esp+0x8], ebx
 805f85e:  mov DWORD PTR [esp+0x4], ecx
 805f862:  mov DWORD PTR [esp], eax
 805f865:  call 808c220
 805f86a:  jmp 805f4aa
 805f86f:  mov edx, DWORD PTR [ebp-0x60]
 805f872:  mov edi, edx
 805f874:  mov DWORD PTR [edx+0x8], 0x30
 805f87b:  add edi, 0xc
 805f87e:  jmp 805e57b
 805f883:  xor eax, eax
 805f885:  jmp 805e44d
 805f88a:  mov DWORD PTR [ebp-0x50], 0x0
 805f891:  xor edi, edi
 805f893:  mov DWORD PTR [ebp-0xf0], 0x0
 805f89d:  jmp 805ddd1
 805f8a2:  mov eax, 0x20
 805f8a7:  lea ecx, [ebp-0x20]
 805f8aa:  sub eax, esi
 805f8ac:  mov DWORD PTR [ebp-0x20], 0xa0000000
 805f8b3:  mov DWORD PTR [ebp-0x1c], 0x0
 805f8ba:  mov DWORD PTR [esp+0xc], eax
 805f8be:  mov DWORD PTR [esp+0x8], 0x2
 805f8c6:  mov DWORD PTR [esp+0x4], ecx
 805f8ca:  mov DWORD PTR [esp], ecx
 805f8cd:  call 808c1c0
 805f8d2:  mov edx, DWORD PTR [ebp-0x2c]
 805f8d5:  jmp 805f311
 805f8da:  bsf eax, eax
 805f8dd:  cmp esi, eax
 805f8df:  jle 805efd0
 805f8e5:  mov esi, eax
 805f8e7:  nop
 805f8e8:  jmp 805efd0
 805f8ed:  movzx eax, dl
 805f8f0:  mov DWORD PTR [esp+0x4], eax
 805f8f4:  mov eax, DWORD PTR [ebp+0x8]
 805f8f7:  mov DWORD PTR [esp], eax
 805f8fa:  call 8068460
 805f8ff:  add eax, 0x1
 805f902:  jne 805d855
 805f908:  jmp 805d5f8
 805f90d:  lea esi, [esi]
 805f910:  mov edi, DWORD PTR [ebp+0x8]
 805f913:  movzx eax, dl
 805f916:  mov DWORD PTR [esp+0x4], eax
 805f91a:  mov DWORD PTR [esp], edi
 805f91d:  call 8068460
 805f922:  add eax, 0x1
 805f925:  jne 805d86f
 805f92b:  jmp 805d5f8
 805f930:  mov eax, DWORD PTR [ebp+0x8]
 805f933:  mov DWORD PTR [esp+0x4], ecx
 805f937:  mov DWORD PTR [esp], eax
 805f93a:  call 80630d0
 805f93f:  add eax, 0x1
 805f942:  sete cl
 805f945:  jmp 805d77f
 805f94a:  mov eax, DWORD PTR [ebp-0x38]
 805f94d:  mov ebx, DWORD PTR [eax]
 805f94f:  test ebx, ebx
 805f951:  je 805e488
 805f957:  jmp 805f1a4
 805f95c:  mov eax, DWORD PTR [ebp+0x8]
 805f95f:  mov DWORD PTR [esp+0x4], ecx
 805f963:  mov DWORD PTR [esp], eax
 805f966:  call 80630d0
 805f96b:  add eax, 0x1
 805f96e:  sete cl
 805f971:  jmp 805d7a9
 805f976:  mov DWORD PTR [esp+0x4], ecx
 805f97a:  mov DWORD PTR [esp], esi
 805f97d:  call 80630d0
 805f982:  add eax, 0x1
 805f985:  sete cl
 805f988:  jmp 805d7d7
 805f98d:  movzx eax, dl
 805f990:  mov DWORD PTR [esp+0x4], eax
 805f994:  mov DWORD PTR [esp], ecx
 805f997:  call 8068460
 805f99c:  add eax, 0x1
 805f99f:  jne 805d7df
 805f9a5:  jmp 805d5f8
 805f9aa:  lea esi, [esi]
 805f9b0:  mov esi, DWORD PTR [ebp-0x128]
 805f9b6:  mov DWORD PTR [esp+0x4], edx
 805f9ba:  mov DWORD PTR [esp], edx
 805f9bd:  mov DWORD PTR [esp+0xc], ebx
 805f9c1:  mov DWORD PTR [esp+0x8], esi
 805f9c5:  call 808c1c0
 805f9ca:  mov edx, DWORD PTR [ebp-0x38]
 805f9cd:  mov eax, DWORD PTR [ebp-0x34]
 805f9d0:  mov DWORD PTR [esp+0xc], ebx
 805f9d4:  mov DWORD PTR [esp+0x4], edx
 805f9d8:  mov DWORD PTR [esp+0x8], eax
 805f9dc:  mov DWORD PTR [esp], edx
 805f9df:  call 808c1c0
 805f9e4:  test eax, eax
 805f9e6:  mov ecx, eax
 805f9e8:  je 805de48
 805f9ee:  mov eax, DWORD PTR [ebp-0x34]
 805f9f1:  mov edx, DWORD PTR [ebp-0x38]
 805f9f4:  mov DWORD PTR [edx+eax*4], ecx
 805f9f7:  add eax, 0x1
 805f9fa:  mov DWORD PTR [ebp-0x34], eax
 805f9fd:  jmp 805de48
 805fa02:  mov esi, DWORD PTR [ebp-0x64]
 805fa05:  mov ebx, DWORD PTR [ebp-0xa4]
 805fa0b:  mov eax, DWORD PTR [ebp-0xc8]
 805fa11:  mov edx, DWORD PTR [ebp+0xc]
 805fa14:  mov DWORD PTR [ebx-0x4], esi
 805fa17:  mov DWORD PTR [eax], 0x31
 805fa1d:  test BYTE PTR [edx+0xc], 0x8
 805fa21:  jne 805fa2a
 805fa23:  mov eax, DWORD PTR [ebp-0x78]
 805fa26:  test eax, eax
 805fa28:  jle 805fa42
 805fa2a:  mov ecx, DWORD PTR [ebp-0x94]
 805fa30:  mov ebx, DWORD PTR [ebp-0xc8]
 805fa36:  add DWORD PTR [ebp-0x78], 0x1
 805fa3a:  mov DWORD PTR [ebx+ecx*4+0x8], 0x30
 805fa42:  mov ecx, 0xfffffff4
 805fa48:  mov esi, DWORD PTR [ebp-0x120]
 805fa4e:  add DWORD PTR [ebp-0x2c], 0x1
 805fa52:  mov eax, DWORD PTR [esi+ecx]
 805fa55:  test eax, eax
 805fa57:  je 805fbec
 805fa5d:  mov eax, DWORD PTR [ebp+0xc]
 805fa60:  mov ebx, DWORD PTR [ebp-0x120]
 805fa66:  mov esi, DWORD PTR [ebp-0x94]
 805fa6c:  mov DWORD PTR [ebp-0x94], 0x1
 805fa76:  mov edx, DWORD PTR [eax+0x8]
 805fa79:  mov eax, DWORD PTR [ebx+ecx]
 805fa7c:  movzx eax, WORD PTR [eax+edx*2]
 805fa80:  and eax, 0x100
 805fa85:  cmp eax, 0x1
 805fa88:  sbb eax, eax
 805fa8a:  and eax, 0x20
 805fa8d:  add eax, 0x45
 805fa90:  mov DWORD PTR [ebp-0x28], eax
 805fa93:  mov eax, DWORD PTR [ebp-0xc8]
 805fa99:  add DWORD PTR [ebp-0x78], esi
 805fa9c:  mov DWORD PTR [ebp-0xa4], eax
 805faa2:  jmp 805eb57
 805faa7:  lea eax, [esi+0x1]
 805faaa:  mov esi, DWORD PTR [ebp-0x11c]
 805fab0:  mov DWORD PTR [esp+0xc], eax
 805fab4:  mov eax, DWORD PTR [ebp-0x38]
 805fab7:  mov DWORD PTR [esp+0x8], ebx
 805fabb:  mov DWORD PTR [esp+0x4], esi
 805fabf:  mov DWORD PTR [esp], eax
 805fac2:  call 808c1c0
 805fac7:  mov ecx, DWORD PTR [ebp-0x38]
 805faca:  lea edx, [ebx+0x1]
 805facd:  mov DWORD PTR [ebp-0x34], edx
 805fad0:  sub edx, 0x1
 805fad3:  mov DWORD PTR [ecx+edx*4], eax
 805fad6:  mov edx, DWORD PTR [ebp-0x2c]
 805fad9:  jmp 805f3ae
 805fade:  cmp DWORD PTR [ebp-0x2c], 0x4
 805fae2:  jne 805e4ff
 805fae8:  cmp BYTE PTR [ebp-0x79], 0x67
 805faec:  jne 805e4ff
 805faf2:  mov edi, DWORD PTR [ebp-0xa4]
 805faf8:  mov DWORD PTR [esp+0x8], 0x6
 805fb00:  mov DWORD PTR [esp+0x4], 0x80b14a4
 805fb08:  mov DWORD PTR [esp], edi
 805fb0b:  call 806c560
 805fb10:  mov eax, DWORD PTR [ebp-0x64]
 805fb13:  mov DWORD PTR [edi+0x4], eax
 805fb16:  mov eax, edi
 805fb18:  add eax, 0x8
 805fb1b:  cmp DWORD PTR [ebp-0x60], eax
 805fb1e:  jae 805fc3f
 805fb24:  add DWORD PTR [ebp-0x60], 0x14
 805fb28:  jmp 805e586
 805fb2d:  lea esi, [esi]
 805fb30:  mov edx, eax
 805fb32:  mov ecx, DWORD PTR [ebp-0x6c]
 805fb35:  mov eax, DWORD PTR [ebp-0x70]
 805fb38:  call 805d1e0
 805fb3d:  mov DWORD PTR [ebp-0x68], eax
 805fb40:  mov eax, DWORD PTR [ebp-0x6c]
 805fb43:  jmp 805e79d
 805fb48:  mov ebx, DWORD PTR [ebp-0x70]
 805fb4b:  mov DWORD PTR [esp], ebx
 805fb4e:  call 804b4a0
 805fb53:  mov edi, DWORD PTR [ebp-0xc8]
 805fb59:  mov DWORD PTR [esp], edi
 805fb5c:  call 804b4a0
 805fb61:  jmp 805e80f
 805fb66:  mov DWORD PTR [esp], ebx
 805fb69:  call 804d6f0
 805fb6e:  test eax, eax
 805fb70:  mov DWORD PTR [ebp-0x70], eax
 805fb73:  nop
 805fb74:  lea esi, [esi]
 805fb78:  jne 805e6f8
 805fb7e:  xchg ax, ax
 805fb80:  jmp 805e865
 805fb85:  mov DWORD PTR [esp+0x4], 0x2b
 805fb8d:  mov DWORD PTR [esp], edx
 805fb90:  call 8068460
 805fb95:  add eax, 0x1
 805fb98:  sete al
 805fb9b:  test al, al
 805fb9d:  jne 805d5f8
 805fba3:  jmp 805e938
 805fba8:  mov DWORD PTR [esp+0x4], 0x20
 805fbb0:  mov DWORD PTR [esp], ecx
 805fbb3:  call 8068460
 805fbb8:  add eax, 0x1
 805fbbb:  sete al
 805fbbe:  test al, al
 805fbc0:  je 805e97c
 805fbc6:  mov edx, DWORD PTR [ebp-0xc4]
 805fbcc:  test edx, edx
 805fbce:  je 805d5f8
 805fbd4:  mov esi, DWORD PTR [ebp-0xc8]
 805fbda:  mov DWORD PTR [esp], esi
 805fbdd:  mov esi, 0xffffffff
 805fbe2:  call 804b4a0
 805fbe7:  jmp 805d5fd
 805fbec:  mov eax, 0xffffffd8
 805fbf1:  mov eax, DWORD PTR [esi+eax]
 805fbf4:  mov eax, DWORD PTR [eax]
 805fbf6:  mov eax, DWORD PTR [eax+0x24]
 805fbf9:  add eax, 0x100
 805fbfe:  mov DWORD PTR [esi+ecx], eax
 805fc01:  jmp 805fa5d
 805fc06:  mov DWORD PTR [esp+0x4], 0x2b
 805fc0e:  mov DWORD PTR [esp], ecx
 805fc11:  call 80630d0
 805fc16:  add eax, 0x1
 805fc19:  sete al
 805fc1c:  jmp 805fb9b
 805fc21:  mov edx, DWORD PTR [ebp+0x8]
 805fc24:  mov DWORD PTR [esp+0x4], 0x20
 805fc2c:  mov DWORD PTR [esp], edx
 805fc2f:  call 80630d0
 805fc34:  add eax, 0x1
 805fc37:  sete al
 805fc3a:  jmp 805fb9b
 805fc3f:  mov edx, DWORD PTR [ebp-0x60]
 805fc42:  mov DWORD PTR [esp+0x4], 0x30
 805fc4a:  sub edx, eax
 805fc4c:  mov eax, edx
 805fc4e:  sar eax, 0x2
 805fc51:  mov DWORD PTR [esp+0x8], eax
 805fc55:  mov eax, edi
 805fc57:  add eax, 0x18
 805fc5a:  mov DWORD PTR [esp], eax
 805fc5d:  call 806c580
 805fc62:  add DWORD PTR [ebp-0x60], 0x10
 805fc66:  jmp 805e586
 805fc6b:  mov DWORD PTR [esp+0x4], 0x2d
 805fc73:  mov DWORD PTR [esp], ecx
 805fc76:  call 80630d0
 805fc7b:  add eax, 0x1
 805fc7e:  sete al
 805fc81:  jmp 805fb9b
 805fc86:  mov DWORD PTR [esp+0x4], 0x2d
 805fc8e:  mov DWORD PTR [esp], ecx
 805fc91:  call 80630d0
 805fc96:  add eax, 0x1
 805fc99:  sete al
 805fc9c:  jmp 805f78f
 805fca1:  mov DWORD PTR [esp+0x4], 0x2b
 805fca9:  mov DWORD PTR [esp], edi
 805fcac:  call 8068460
 805fcb1:  add eax, 0x1
 805fcb4:  sete al
 805fcb7:  test al, al
 805fcb9:  jne 805ea67
 805fcbf:  jmp 805e97c
 805fcc4:  mov edx, DWORD PTR [ebp+0x8]
 805fcc7:  mov DWORD PTR [esp+0x4], 0x20
 805fccf:  mov DWORD PTR [esp], edx
 805fcd2:  call 80630d0
 805fcd7:  add eax, 0x1
 805fcda:  sete al
 805fcdd:  jmp 805fbbe
 805fce2:  mov DWORD PTR [esp+0x4], 0x2d
 805fcea:  mov DWORD PTR [esp], edx
 805fced:  call 8068460
 805fcf2:  add eax, 0x1
 805fcf5:  sete al
 805fcf8:  jmp 805fb9b
 805fcfd:  mov DWORD PTR [esp+0x4], 0x2b
 805fd05:  mov DWORD PTR [esp], ebx
 805fd08:  call 80630d0
 805fd0d:  add eax, 0x1
 805fd10:  sete al
 805fd13:  jmp 805fcb7
 805fd15:  mov DWORD PTR [esp+0x4], 0x20
 805fd1d:  mov DWORD PTR [esp], ecx
 805fd20:  call 8068460
 805fd25:  add eax, 0x1
 805fd28:  sete al
 805fd2b:  jmp 805fb9b
 805fd30:  cmp DWORD PTR [ebp-0x28], 0x66
 805fd34:  je 805fd52
 805fd36:  mov esi, DWORD PTR [ebp-0x74]
 805fd39:  mov eax, ecx
 805fd3b:  mov ebx, DWORD PTR [ebp-0x90]
 805fd41:  mov edx, DWORD PTR [ebp-0x64]
 805fd44:  lea ebx, [esi+ebx]
 805fd47:  mov DWORD PTR [ebp-0x114], ebx
 805fd4d:  jmp 805e47b
 805fd52:  mov esi, DWORD PTR [ebp+0xc]
 805fd55:  test BYTE PTR [esi+0xc], 0x8
 805fd59:  jne 805fd63
 805fd5b:  mov edx, DWORD PTR [ebp-0x64]
 805fd5e:  jmp 805e467
 805fd63:  mov eax, DWORD PTR [ebp-0xa4]
 805fd69:  add eax, 0x4
 805fd6c:  cmp eax, ecx
 805fd6e:  jne 805fd36
 805fd70:  mov ecx, DWORD PTR [ebp-0x74]
 805fd73:  mov esi, DWORD PTR [ebp-0x90]
 805fd79:  mov edx, DWORD PTR [ebp-0x64]
 805fd7c:  lea esi, [ecx+esi]
 805fd7f:  mov ecx, DWORD PTR [ebp-0xa4]
 805fd85:  mov DWORD PTR [ebp-0x114], esi
 805fd8b:  cmp DWORD PTR [ecx], 0x30
 805fd8e:  jne 805e47b
 805fd94:  mov esi, DWORD PTR [ebp-0x74]
 805fd97:  mov ebx, DWORD PTR [ebp-0x90]
 805fd9d:  mov edx, DWORD PTR [ebp-0x64]
 805fda0:  lea ebx, [esi+ebx-0x1]
 805fda4:  mov DWORD PTR [ebp-0x114], ebx
 805fdaa:  jmp 805e47b
 805fdaf:  nop

0805fdb0 <__register_printf_function>:
 805fdb0:  push ebp
 805fdb1:  mov ebp, esp
 805fdb3:  push ebx
 805fdb4:  sub esp, 0x8
 805fdb7:  mov ebx, DWORD PTR [ebp+0x8]
 805fdba:  cmp ebx, 0xff
 805fdc0:  ja 805fdf0
 805fdc2:  mov eax, ds:0x80d2e78
 805fdc7:  test eax, eax
 805fdc9:  je 805fe0a
 805fdcb:  mov eax, ds:0x80d2e78
 805fdd0:  mov edx, DWORD PTR [ebp+0xc]
 805fdd3:  mov DWORD PTR [eax+ebx*4], edx
 805fdd6:  mov eax, ds:0x80d2f40
 805fddb:  mov edx, DWORD PTR [ebp+0x10]
 805fdde:  mov DWORD PTR [eax+ebx*4], edx
 805fde1:  xor eax, eax
 805fde3:  add esp, 0x8
 805fde6:  pop ebx
 805fde7:  pop ebp
 805fde8:  ret
 805fde9:  lea esi, [esi]
 805fdf0:  mov eax, gs:0x0
 805fdf6:  mov edx, 0xffffffe8
 805fdfc:  mov DWORD PTR [eax+edx], 0x16
 805fe03:  mov eax, 0xffffffff
 805fe08:  jmp 805fde3
 805fe0a:  mov DWORD PTR [esp+0x4], 0x8
 805fe12:  mov DWORD PTR [esp], 0x100
 805fe19:  call 804d3c0
 805fe1e:  mov edx, eax
 805fe20:  test edx, edx
 805fe22:  mov ds:0x80d2f40, eax
 805fe27:  mov eax, 0xffffffff
 805fe2c:  je 805fde3
 805fe2e:  lea eax, [edx+0x400]
 805fe34:  mov ds:0x80d2e78, eax
 805fe39:  jmp 805fdcb
 805fe3b:  nop
 805fe3c:  nop
 805fe3d:  nop
 805fe3e:  nop
 805fe3f:  nop

0805fe40 <__printf_fphex>:
 805fe40:  push ebp
 805fe41:  mov ebp, esp
 805fe43:  push edi
 805fe44:  push esi
 805fe45:  push ebx
 805fe46:  sub esp, 0x190
 805fe4c:  mov eax, DWORD PTR [ebp+0xc]
 805fe4f:  mov edx, DWORD PTR [ebp+0xc]
 805fe52:  mov ecx, DWORD PTR [ebp+0xc]
 805fe55:  mov eax, DWORD PTR [eax]
 805fe57:  mov edx, DWORD PTR [edx+0x4]
 805fe5a:  mov DWORD PTR [ebp-0xec], eax
 805fe60:  mov DWORD PTR [ebp-0x16c], edx
 805fe66:  movzx eax, BYTE PTR [ecx+0xd]
 805fe6a:  mov edx, eax
 805fe6c:  shr dl, 0x2
 805fe6f:  and edx, 0x1
 805fe72:  test al, 0x1
 805fe74:  jne 805fec8
 805fe76:  mov ebx, DWORD PTR gs:0x0
 805fe7d:  mov eax, 0xffffffe0
 805fe82:  mov DWORD PTR [ebp-0x174], ebx
 805fe88:  mov eax, DWORD PTR [ebx+eax]
 805fe8b:  mov eax, DWORD PTR [eax]
 805fe8d:  mov esi, DWORD PTR [eax+0x24]
 805fe90:  mov DWORD PTR [ebp-0x140], esi
 805fe96:  mov eax, DWORD PTR [eax+0x30]
 805fe99:  mov ebx, esi
 805fe9b:  mov DWORD PTR [ebp-0x10], eax
 805fe9e:  cmp BYTE PTR [ebx], 0x0
 805fea1:  jne 805fef8
 805fea3:  mov DWORD PTR [esp+0xc], 0x80b1507
 805feab:  mov DWORD PTR [esp+0x8], 0xa3
 805feb3:  mov DWORD PTR [esp+0x4], 0x80b14c0
 805febb:  mov DWORD PTR [esp], 0x80b14e0
 805fec2:  call 8051490
 805fec7:  nop
 805fec8:  mov edi, DWORD PTR gs:0x0
 805fecf:  mov eax, 0xffffffdc
 805fed4:  mov DWORD PTR [ebp-0x174], edi
 805feda:  mov eax, DWORD PTR [edi+eax]
 805fedd:  mov eax, DWORD PTR [eax]
 805fedf:  mov ecx, DWORD PTR [eax+0x2c]
 805fee2:  mov DWORD PTR [ebp-0x140], ecx
 805fee8:  mov eax, DWORD PTR [eax+0xd0]
 805feee:  mov ebx, ecx
 805fef0:  mov DWORD PTR [ebp-0x10], eax
 805fef3:  cmp BYTE PTR [ebx], 0x0
 805fef6:  je 805fea3
 805fef8:  mov edi, DWORD PTR [ebp-0x10]
 805fefb:  test edi, edi
 805fefd:  je 805fea3
 805feff:  mov eax, DWORD PTR [ebp+0xc]
 805ff02:  movzx edx, dl
 805ff05:  mov DWORD PTR [ebp-0x100], edx
 805ff0b:  movzx eax, BYTE PTR [eax+0xc]
 805ff0f:  test al, 0x1
 805ff11:  mov BYTE PTR [ebp-0x16d], al
 805ff17:  je 8060010
 805ff1d:  mov edx, DWORD PTR [ebp+0x10]
 805ff20:  mov eax, DWORD PTR [edx]
 805ff22:  mov ebx, DWORD PTR [eax]
 805ff24:  mov esi, DWORD PTR [eax+0x4]
 805ff27:  mov edi, DWORD PTR [eax+0x8]
 805ff2a:  mov DWORD PTR [esp], ebx
 805ff2d:  mov DWORD PTR [esp+0x4], esi
 805ff31:  mov DWORD PTR [esp+0x8], edi
 805ff35:  call 808af40
 805ff3a:  test eax, eax
 805ff3c:  je 8060200
 805ff42:  mov ecx, 0xfffffff4
 805ff48:  mov ebx, DWORD PTR [ebp-0x174]
 805ff4e:  mov esi, DWORD PTR [ebx+ecx]
 805ff51:  test esi, esi
 805ff53:  je 8060a70
 805ff59:  mov ebx, DWORD PTR [ebp+0xc]
 805ff5c:  mov esi, DWORD PTR [ebp-0x174]
 805ff62:  mov edx, DWORD PTR [ebx+0x8]
 805ff65:  mov eax, DWORD PTR [esi+ecx]
 805ff68:  test BYTE PTR [eax+edx*2+0x1], 0x1
 805ff6d:  jne 806005e
 805ff73:  mov eax, DWORD PTR [ebp-0x16c]
 805ff79:  mov DWORD PTR [ebp-0x13c], 0x80b1454
 805ff83:  mov DWORD PTR [ebp-0x138], 0x80b1464
 805ff8d:  mov DWORD PTR [ebp-0x128], 0x0
 805ff97:  test BYTE PTR [ebp-0x16d], 0x50
 805ff9e:  je 805ffa9
 805ffa0:  mov eax, DWORD PTR [ebp-0x16c]
 805ffa6:  sub eax, 0x1
 805ffa9:  lea edi, [eax-0x3]
 805ffac:  test edi, edi
 805ffae:  setg BYTE PTR [ebp-0x141]
 805ffb5:  test BYTE PTR [ebp-0x16d], 0x20
 805ffbc:  jne 8060080
 805ffc2:  cmp BYTE PTR [ebp-0x141], 0x0
 805ffc9:  je 8060080
 805ffcf:  mov eax, DWORD PTR [ebp-0x100]
 805ffd5:  test eax, eax
 805ffd7:  je 8060b68
 805ffdd:  mov edx, DWORD PTR [ebp+0x8]
 805ffe0:  mov DWORD PTR [esp+0x8], edi
 805ffe4:  mov DWORD PTR [esp+0x4], 0x20
 805ffec:  mov DWORD PTR [esp], edx
 805ffef:  call 8062c50
 805fff4:  mov ebx, eax
 805fff6:  cmp ebx, edi
 805fff8:  je 8060082
 805fffe:  mov ebx, 0xffffffff
 8060003:  add esp, 0x190
 8060009:  mov eax, ebx
 806000b:  pop ebx
 806000c:  pop esi
 806000d:  pop edi
 806000e:  pop ebp
 806000f:  ret
 8060010:  mov ecx, DWORD PTR [ebp+0x10]
 8060013:  mov eax, DWORD PTR [ecx]
 8060015:  fld QWORD PTR [eax]
 8060017:  fst QWORD PTR [ebp-0x14c]
 806001d:  fstp QWORD PTR [esp]
 8060020:  call 808aeb0
 8060025:  test eax, eax
 8060027:  je 80602b8
 806002d:  mov ecx, 0xfffffff4
 8060033:  mov eax, DWORD PTR [ebp-0x174]
 8060039:  mov esi, DWORD PTR [eax+ecx]
 806003c:  test esi, esi
 806003e:  je 8060a98
 8060044:  mov esi, DWORD PTR [ebp+0xc]
 8060047:  mov edi, DWORD PTR [ebp-0x174]
 806004d:  mov edx, DWORD PTR [esi+0x8]
 8060050:  mov eax, DWORD PTR [edi+ecx]
 8060053:  test BYTE PTR [eax+edx*2+0x1], 0x1
 8060058:  je 805ff73
 806005e:  mov eax, DWORD PTR [ebp-0x16c]
 8060064:  mov DWORD PTR [ebp-0x13c], 0x80b1458
 806006e:  mov DWORD PTR [ebp-0x138], 0x80b1474
 8060078:  jmp 805ff8d
 806007d:  lea esi, [esi]
 8060080:  xor ebx, ebx
 8060082:  mov esi, DWORD PTR [ebp-0x128]
 8060088:  test esi, esi
 806008a:  jne 8060c40
 8060090:  mov esi, DWORD PTR [ebp+0xc]
 8060093:  movzx eax, BYTE PTR [esi+0xc]
 8060097:  test al, 0x40
 8060099:  jne 8060c78
 806009f:  test al, 0x10
 80600a1:  jne 8060ca8
 80600a7:  mov eax, DWORD PTR [ebp-0x100]
 80600ad:  test eax, eax
 80600af:  je 8060198
 80600b5:  mov eax, DWORD PTR [ebp-0x138]
 80600bb:  mov esi, eax
 80600bd:  mov ecx, DWORD PTR [eax]
 80600bf:  mov eax, DWORD PTR [ebp+0x8]
 80600c2:  add esi, 0x4
 80600c5:  mov edx, DWORD PTR [eax+0x58]
 80600c8:  mov eax, DWORD PTR [edx+0x10]
 80600cb:  cmp eax, DWORD PTR [edx+0x14]
 80600ce:  jae 80610fd
 80600d4:  mov DWORD PTR [eax], ecx
 80600d6:  add ecx, 0x1
 80600d9:  sete cl
 80600dc:  add eax, 0x4
 80600df:  mov DWORD PTR [edx+0x10], eax
 80600e2:  test cl, cl
 80600e4:  jne 805fffe
 80600ea:  mov eax, DWORD PTR [ebp+0x8]
 80600ed:  mov ecx, DWORD PTR [esi]
 80600ef:  mov edx, DWORD PTR [eax+0x58]
 80600f2:  mov eax, DWORD PTR [edx+0x10]
 80600f5:  cmp DWORD PTR [edx+0x14], eax
 80600f8:  jbe 8061190
 80600fe:  mov DWORD PTR [eax], ecx
 8060100:  add ecx, 0x1
 8060103:  sete cl
 8060106:  add eax, 0x4
 8060109:  mov DWORD PTR [edx+0x10], eax
 806010c:  test cl, cl
 806010e:  jne 805fffe
 8060114:  mov ecx, DWORD PTR [esi+0x4]
 8060117:  add ebx, 0x2
 806011a:  mov esi, DWORD PTR [ebp+0x8]
 806011d:  mov edx, DWORD PTR [esi+0x58]
 8060120:  mov eax, DWORD PTR [edx+0x10]
 8060123:  cmp eax, DWORD PTR [edx+0x14]
 8060126:  jae 8061158
 806012c:  mov DWORD PTR [eax], ecx
 806012e:  add ecx, 0x1
 8060131:  sete cl
 8060134:  add eax, 0x4
 8060137:  mov DWORD PTR [edx+0x10], eax
 806013a:  test cl, cl
 806013c:  jne 805fffe
 8060142:  add ebx, 0x1
 8060145:  cmp BYTE PTR [ebp-0x141], 0x0
 806014c:  je 8060003
 8060152:  mov eax, DWORD PTR [ebp+0xc]
 8060155:  test BYTE PTR [eax+0xc], 0x20
 8060159:  je 8060003
 806015f:  mov eax, DWORD PTR [ebp-0x100]
 8060165:  test eax, eax
 8060167:  je 8060ec8
 806016d:  mov edx, DWORD PTR [ebp+0x8]
 8060170:  mov DWORD PTR [esp+0x8], edi
 8060174:  mov DWORD PTR [esp+0x4], 0x20
 806017c:  mov DWORD PTR [esp], edx
 806017f:  call 8062c50
 8060184:  cmp eax, edi
 8060186:  jne 805fffe
 806018c:  add ebx, eax
 806018e:  jmp 8060003
 8060193:  nop
 8060194:  lea esi, [esi]
 8060198:  mov eax, DWORD PTR [ebp-0x13c]
 806019e:  mov ecx, DWORD PTR [ebp+0x8]
 80601a1:  mov esi, eax
 80601a3:  movzx edx, BYTE PTR [eax]
 80601a6:  mov eax, DWORD PTR [ecx+0x14]
 80601a9:  add esi, 0x1
 80601ac:  cmp DWORD PTR [ecx+0x18], eax
 80601af:  jbe 8061117
 80601b5:  mov BYTE PTR [eax], dl
 80601b7:  add eax, 0x1
 80601ba:  mov DWORD PTR [ecx+0x14], eax
 80601bd:  mov ecx, DWORD PTR [ebp+0x8]
 80601c0:  movzx edx, BYTE PTR [esi]
 80601c3:  mov eax, DWORD PTR [ecx+0x14]
 80601c6:  cmp DWORD PTR [ecx+0x18], eax
 80601c9:  jbe 8061138
 80601cf:  mov BYTE PTR [eax], dl
 80601d1:  add eax, 0x1
 80601d4:  mov DWORD PTR [ecx+0x14], eax
 80601d7:  mov ecx, DWORD PTR [ebp+0x8]
 80601da:  add ebx, 0x2
 80601dd:  movzx edx, BYTE PTR [esi+0x1]
 80601e1:  mov eax, DWORD PTR [ecx+0x14]
 80601e4:  cmp eax, DWORD PTR [ecx+0x18]
 80601e7:  jae 806116f
 80601ed:  mov BYTE PTR [eax], dl
 80601ef:  mov esi, DWORD PTR [ebp+0x8]
 80601f2:  add eax, 0x1
 80601f5:  mov DWORD PTR [esi+0x14], eax
 80601f8:  jmp 8060142
 80601fd:  lea esi, [esi]
 8060200:  mov DWORD PTR [esp], ebx
 8060203:  mov DWORD PTR [esp+0x4], esi
 8060207:  mov DWORD PTR [esp+0x8], edi
 806020b:  call 808aee0
 8060210:  mov DWORD PTR [ebp-0x13c], 0x0
 806021a:  mov DWORD PTR [ebp-0x138], 0x0
 8060224:  test eax, eax
 8060226:  je 806026d
 8060228:  mov ecx, 0xfffffff4
 806022e:  mov eax, DWORD PTR [ebp-0x174]
 8060234:  mov edx, DWORD PTR [eax+ecx]
 8060237:  test edx, edx
 8060239:  je 8060ee8
 806023f:  mov eax, DWORD PTR [ebp+0xc]
 8060242:  mov DWORD PTR [ebp-0x13c], 0x80b1460
 806024c:  mov DWORD PTR [ebp-0x138], 0x80b1494
 8060256:  mov edx, DWORD PTR [eax+0x8]
 8060259:  mov eax, DWORD PTR [ebp-0x174]
 806025f:  mov ecx, DWORD PTR [eax+ecx]
 8060262:  test BYTE PTR [ecx+edx*2+0x1], 0x1
 8060267:  je 8060ae8
 806026d:  mov DWORD PTR [ebp-0x28], edi
 8060270:  mov edx, DWORD PTR [ebp-0x28]
 8060273:  mov ecx, DWORD PTR [ebp-0x13c]
 8060279:  mov DWORD PTR [ebp-0x24], ebx
 806027c:  mov DWORD PTR [ebp-0x20], esi
 806027f:  shr edx, 0xf
 8060282:  and edx, 0x1
 8060285:  test ecx, ecx
 8060287:  mov DWORD PTR [ebp-0x1c], edi
 806028a:  mov DWORD PTR [ebp-0x30], ebx
 806028d:  mov DWORD PTR [ebp-0x2c], esi
 8060290:  mov DWORD PTR [ebp-0x128], edx
 8060296:  je 806034f
 806029c:  mov edx, DWORD PTR [ebp-0x128]
 80602a2:  mov eax, DWORD PTR [ebp-0x16c]
 80602a8:  test edx, edx
 80602aa:  jne 805ffa0
 80602b0:  jmp 805ff97
 80602b5:  lea esi, [esi]
 80602b8:  fld QWORD PTR [ebp-0x14c]
 80602be:  fstp QWORD PTR [esp]
 80602c1:  call 808ae70
 80602c6:  mov DWORD PTR [ebp-0x13c], 0x0
 80602d0:  mov DWORD PTR [ebp-0x138], 0x0
 80602da:  test eax, eax
 80602dc:  je 8060323
 80602de:  mov ecx, 0xfffffff4
 80602e4:  mov eax, DWORD PTR [ebp-0x174]
 80602ea:  mov ebx, DWORD PTR [eax+ecx]
 80602ed:  test ebx, ebx
 80602ef:  je 8060f18
 80602f5:  mov esi, DWORD PTR [ebp+0xc]
 80602f8:  mov edi, DWORD PTR [ebp-0x174]
 80602fe:  mov DWORD PTR [ebp-0x13c], 0x80b1460
 8060308:  mov DWORD PTR [ebp-0x138], 0x80b1494
 8060312:  mov edx, DWORD PTR [esi+0x8]
 8060315:  mov eax, DWORD PTR [edi+ecx]
 8060318:  test BYTE PTR [eax+edx*2+0x1], 0x1
 806031d:  je 8060ac8
 8060323:  fld QWORD PTR [ebp-0x14c]
 8060329:  fst QWORD PTR [ebp-0x24]
 806032c:  mov ecx, DWORD PTR [ebp-0x13c]
 8060332:  fstp QWORD PTR [ebp-0x154]
 8060338:  mov eax, DWORD PTR [ebp-0x150]
 806033e:  shr eax, 0x1f
 8060341:  test ecx, ecx
 8060343:  mov DWORD PTR [ebp-0x128], eax
 8060349:  jne 806029c
 806034f:  test BYTE PTR [ebp-0x16d], 0x1
 8060356:  jne 8060950
 806035c:  mov ebx, DWORD PTR [ebp-0x24]
 806035f:  mov edi, DWORD PTR [ebp-0x20]
 8060362:  mov edx, DWORD PTR [ebp+0xc]
 8060365:  mov eax, ebx
 8060367:  and edi, 0xfffff
 806036d:  or eax, edi
 806036f:  sete al
 8060372:  movzx eax, al
 8060375:  mov DWORD PTR [ebp-0x118], eax
 806037b:  lea eax, [ebp-0x64]
 806037e:  mov DWORD PTR [ebp-0x164], eax
 8060384:  xor eax, eax
 8060386:  mov ecx, DWORD PTR [ebp-0x164]
 806038c:  cmp DWORD PTR [edx+0x8], 0x41
 8060390:  mov DWORD PTR [esp+0xc], 0x10
 8060398:  mov DWORD PTR [esp], ebx
 806039b:  sete al
 806039e:  mov DWORD PTR [esp+0x8], ecx
 80603a2:  mov DWORD PTR [esp+0x10], eax
 80603a6:  mov DWORD PTR [esp+0x4], edi
 80603aa:  call 808dd10
 80603af:  mov edx, DWORD PTR [ebp+0xc]
 80603b2:  mov DWORD PTR [ebp-0x12c], eax
 80603b8:  lea eax, [ebp-0x44]
 80603bb:  mov DWORD PTR [ebp-0x168], eax
 80603c1:  mov ecx, DWORD PTR [ebp-0x168]
 80603c7:  mov DWORD PTR [ebp-0x130], eax
 80603cd:  xor eax, eax
 80603cf:  cmp DWORD PTR [edx+0x8], 0x41
 80603d3:  mov DWORD PTR [esp+0xc], 0x10
 80603db:  mov DWORD PTR [esp+0x8], ecx
 80603df:  sete al
 80603e2:  mov DWORD PTR [esp+0x10], eax
 80603e6:  mov DWORD PTR [esp], ebx
 80603e9:  mov DWORD PTR [esp+0x4], edi
 80603ed:  call 80577b0
 80603f2:  mov DWORD PTR [ebp-0x134], eax
 80603f8:  lea eax, [ebp-0x98]
 80603fe:  cmp DWORD PTR [ebp-0x12c], eax
 8060404:  jbe 8060446
 8060406:  mov edx, DWORD PTR [ebp-0x134]
 806040c:  mov ecx, DWORD PTR [ebp-0x12c]
 8060412:  lea esi, [esi]
 8060418:  sub ecx, 0x4
 806041b:  sub edx, 0x1
 806041e:  cmp ecx, eax
 8060420:  mov DWORD PTR [ecx], 0x30
 8060426:  mov BYTE PTR [edx], 0x30
 8060429:  ja 8060418
 806042b:  mov ebx, DWORD PTR [ebp-0x12c]
 8060431:  not eax
 8060433:  mov DWORD PTR [ebp-0x12c], ecx
 8060439:  add eax, ebx
 806043b:  shr eax, 0x2
 806043e:  not eax
 8060440:  add DWORD PTR [ebp-0x134], eax
 8060446:  movzx eax, WORD PTR [ebp-0x1e]
 806044a:  mov edx, eax
 806044c:  and dx, 0x7ff0
 8060451:  cmp dx, 0x1
 8060455:  sbb edx, edx
 8060457:  shr ax, 0x4
 806045b:  add edx, 0x31
 806045e:  and eax, 0x7ff
 8060463:  mov BYTE PTR [ebp-0x114], dl
 8060469:  je 8060b48
 806046f:  cmp eax, 0x3fe
 8060474:  jle 8060d30
 806047a:  sub eax, 0x3ff
 806047f:  mov DWORD PTR [ebp-0x11c], eax
 8060485:  mov ebx, eax
 8060487:  mov DWORD PTR [ebp-0x120], 0x0
 8060491:  mov eax, DWORD PTR [ebp-0x118]
 8060497:  mov edx, DWORD PTR [ebp-0x168]
 806049d:  test eax, eax
 806049f:  mov DWORD PTR [ebp-0x130], edx
 80604a5:  jne 8060bc4
 80604ab:  mov ecx, DWORD PTR [ebp-0x164]
 80604b1:  cmp DWORD PTR [ecx-0x4], 0x30
 80604b5:  jne 80604d2
 80604b7:  mov edx, ecx
 80604b9:  lea esi, [esi]
 80604c0:  mov eax, DWORD PTR [edx-0x8]
 80604c3:  sub edx, 0x4
 80604c6:  sub DWORD PTR [ebp-0x130], 0x1
 80604cd:  cmp eax, 0x30
 80604d0:  je 80604c0
 80604d2:  cmp DWORD PTR [ebp-0xec], 0xff
 80604d9:  je 8060cd8
 80604df:  mov edi, DWORD PTR [ebp-0x130]
 80604e5:  sub edi, DWORD PTR [ebp-0x134]
 80604eb:  cmp DWORD PTR [ebp-0xec], edi
 80604f1:  mov ebx, DWORD PTR [ebp-0x11c]
 80604f7:  mov DWORD PTR [ebp-0x104], edi
 80604fd:  jge 8060528
 80604ff:  mov edx, DWORD PTR [ebp-0x134]
 8060505:  mov eax, DWORD PTR [ebp-0xec]
 806050b:  cmp BYTE PTR [edx+eax], 0x38
 806050f:  jg 8060de8
 8060515:  je 8060d98
 806051b:  mov ebx, DWORD PTR [ebp-0x11c]
 8060521:  lea esi, [esi]
 8060528:  lea eax, [ebp-0x10]
 806052b:  mov DWORD PTR [ebp-0x178], eax
 8060531:  lea esi, [ebp-0x30]
 8060534:  mov DWORD PTR [esp+0xc], 0x0
 806053c:  mov DWORD PTR [esp+0x8], 0xa
 8060544:  mov DWORD PTR [esp+0x4], eax
 8060548:  mov DWORD PTR [esp], ebx
 806054b:  call 8057700
 8060550:  mov ecx, 0xcccccccd
 8060555:  mov DWORD PTR [ebp-0x124], eax
 806055b:  nop
 806055c:  lea esi, [esi]
 8060560:  mov eax, ebx
 8060562:  sub esi, 0x4
 8060565:  mul ecx
 8060567:  shr edx, 0x3
 806056a:  lea eax, [edx+edx*4]
 806056d:  add eax, eax
 806056f:  sub ebx, eax
 8060571:  test edx, edx
 8060573:  mov eax, DWORD PTR [ebx*4+0x80c4b80]
 806057a:  mov ebx, edx
 806057c:  mov DWORD PTR [esi], eax
 806057e:  jne 8060560
 8060580:  mov ebx, DWORD PTR [ebp-0x128]
 8060586:  test ebx, ebx
 8060588:  je 8060b90
 806058e:  mov ecx, DWORD PTR [ebp+0xc]
 8060591:  mov edx, 0xfffffffc
 8060596:  movzx ecx, BYTE PTR [ecx+0xc]
 806059a:  mov BYTE PTR [ebp-0x16d], cl
 80605a0:  mov eax, DWORD PTR [ebp-0x16c]
 80605a6:  mov ecx, DWORD PTR [ebp-0xec]
 80605ac:  sub eax, 0x2
 80605af:  sub eax, DWORD PTR [ebp-0x178]
 80605b5:  sub eax, DWORD PTR [ebp-0xec]
 80605bb:  add eax, DWORD PTR [ebp-0x124]
 80605c1:  test ecx, ecx
 80605c3:  lea edi, [eax+edx]
 80605c6:  jle 8060c28
 80605cc:  mov edx, DWORD PTR [ebp-0x100]
 80605d2:  mov eax, 0x1
 80605d7:  test edx, edx
 80605d9:  je 8060b08
 80605df:  sub edi, eax
 80605e1:  test BYTE PTR [ebp-0x16d], 0x20
 80605e8:  jne 8060b88
 80605ee:  mov edx, DWORD PTR [ebp+0xc]
 80605f1:  cmp DWORD PTR [edx+0x10], 0x30
 80605f5:  je 8060b88
 80605fb:  test edi, edi
 80605fd:  jle 8060b88
 8060603:  mov eax, DWORD PTR [ebp-0x100]
 8060609:  test eax, eax
 806060b:  je 80611f9
 8060611:  mov ecx, DWORD PTR [ebp+0x8]
 8060614:  mov DWORD PTR [esp+0x8], edi
 8060618:  mov DWORD PTR [esp+0x4], 0x20
 8060620:  mov DWORD PTR [esp], ecx
 8060623:  call 8062c50
 8060628:  cmp eax, edi
 806062a:  mov ebx, edi
 806062c:  jne 805fffe
 8060632:  lea esi, [esi]
 8060638:  mov eax, DWORD PTR [ebp-0x128]
 806063e:  test eax, eax
 8060640:  jne 8060f41
 8060646:  mov ecx, DWORD PTR [ebp+0xc]
 8060649:  movzx eax, BYTE PTR [ecx+0xc]
 806064d:  test al, 0x40
 806064f:  jne 8060f78
 8060655:  test al, 0x10
 8060657:  jne 8060fa6
 806065d:  mov eax, DWORD PTR [ebp-0x100]
 8060663:  test eax, eax
 8060665:  je 8060c08
 806066b:  mov eax, DWORD PTR [ebp+0x8]
 806066e:  mov edx, DWORD PTR [eax+0x58]
 8060671:  mov eax, DWORD PTR [edx+0x10]
 8060674:  cmp eax, DWORD PTR [edx+0x14]
 8060677:  jae 8061290
 806067d:  mov DWORD PTR [eax], 0x30
 8060683:  add eax, 0x4
 8060686:  mov DWORD PTR [edx+0x10], eax
 8060689:  mov ecx, DWORD PTR [ebp+0xc]
 806068c:  mov eax, DWORD PTR [ecx+0x8]
 806068f:  lea ecx, [eax+0x17]
 8060692:  mov eax, DWORD PTR [ebp-0x100]
 8060698:  test eax, eax
 806069a:  je 80610de
 80606a0:  mov eax, DWORD PTR [ebp+0x8]
 80606a3:  mov edx, DWORD PTR [eax+0x58]
 80606a6:  mov eax, DWORD PTR [edx+0x10]
 80606a9:  cmp eax, DWORD PTR [edx+0x14]
 80606ac:  jae 80616fc
 80606b2:  mov DWORD PTR [eax], ecx
 80606b4:  add ecx, 0x1
 80606b7:  sete cl
 80606ba:  add eax, 0x4
 80606bd:  mov DWORD PTR [edx+0x10], eax
 80606c0:  test cl, cl
 80606c2:  jne 805fffe
 80606c8:  mov eax, DWORD PTR [ebp+0xc]
 80606cb:  add ebx, 0x2
 80606ce:  test BYTE PTR [eax+0xc], 0x20
 80606d2:  jne 80606de
 80606d4:  cmp DWORD PTR [eax+0x10], 0x30
 80606d8:  je 8061250
 80606de:  mov eax, DWORD PTR [ebp-0x100]
 80606e4:  movsx ecx, BYTE PTR [ebp-0x114]
 80606eb:  test eax, eax
 80606ed:  je 8061215
 80606f3:  mov eax, DWORD PTR [ebp+0x8]
 80606f6:  mov edx, DWORD PTR [eax+0x58]
 80606f9:  mov eax, DWORD PTR [edx+0x10]
 80606fc:  cmp eax, DWORD PTR [edx+0x14]
 80606ff:  jae 8061541
 8060705:  mov DWORD PTR [eax], ecx
 8060707:  add ecx, 0x1
 806070a:  sete cl
 806070d:  add eax, 0x4
 8060710:  mov DWORD PTR [edx+0x10], eax
 8060713:  test cl, cl
 8060715:  jne 805fffe
 806071b:  mov eax, DWORD PTR [ebp-0xec]
 8060721:  add ebx, 0x1
 8060724:  mov DWORD PTR [ebp-0xe8], ebx
 806072a:  test eax, eax
 806072c:  jle 80613c0
 8060732:  mov ebx, DWORD PTR [ebp-0x100]
 8060738:  test ebx, ebx
 806073a:  je 806134c
 8060740:  mov eax, DWORD PTR [ebp+0x8]
 8060743:  mov ecx, DWORD PTR [ebp-0x10]
 8060746:  mov edx, DWORD PTR [eax+0x58]
 8060749:  mov eax, DWORD PTR [edx+0x10]
 806074c:  cmp eax, DWORD PTR [edx+0x14]
 806074f:  jae 8061660
 8060755:  mov DWORD PTR [eax], ecx
 8060757:  add ecx, 0x1
 806075a:  sete cl
 806075d:  add eax, 0x4
 8060760:  mov DWORD PTR [edx+0x10], eax
 8060763:  test cl, cl
 8060765:  jne 805fffe
 806076b:  add DWORD PTR [ebp-0xe8], 0x1
 8060772:  mov ecx, DWORD PTR [ebp-0xec]
 8060778:  test ecx, ecx
 806077a:  jle 8060806
 8060780:  mov ecx, DWORD PTR [ebp-0xec]
 8060786:  mov ebx, DWORD PTR [ebp-0x104]
 806078c:  mov DWORD PTR [ebp-0xfc], ecx
 8060792:  cmp ecx, ebx
 8060794:  jle 806079c
 8060796:  mov DWORD PTR [ebp-0xfc], ebx
 806079c:  mov edx, DWORD PTR [ebp-0x100]
 80607a2:  test edx, edx
 80607a4:  jne 80612d0
 80607aa:  mov eax, DWORD PTR [ebp-0xfc]
 80607b0:  xor ebx, ebx
 80607b2:  test eax, eax
 80607b4:  je 80607ec
 80607b6:  mov ecx, DWORD PTR [ebp-0x134]
 80607bc:  movzx edx, BYTE PTR [ecx+ebx]
 80607c0:  mov ecx, DWORD PTR [ebp+0x8]
 80607c3:  mov eax, DWORD PTR [ecx+0x14]
 80607c6:  cmp eax, DWORD PTR [ecx+0x18]
 80607c9:  jae 80614a8
 80607cf:  mov BYTE PTR [eax], dl
 80607d1:  mov edx, DWORD PTR [ebp+0x8]
 80607d4:  add eax, 0x1
 80607d7:  mov DWORD PTR [edx+0x14], eax
 80607da:  add DWORD PTR [ebp-0xe8], 0x1
 80607e1:  add ebx, 0x1
 80607e4:  cmp DWORD PTR [ebp-0xfc], ebx
 80607ea:  jne 80607b6
 80607ec:  mov ebx, DWORD PTR [ebp-0x134]
 80607f2:  add ebx, DWORD PTR [ebp-0xec]
 80607f8:  sub ebx, DWORD PTR [ebp-0x130]
 80607fe:  test ebx, ebx
 8060800:  jg 8061716
 8060806:  mov edx, DWORD PTR [ebp+0xc]
 8060809:  mov eax, DWORD PTR [edx+0x8]
 806080c:  lea ecx, [eax+0xf]
 806080f:  mov eax, DWORD PTR [ebp-0x100]
 8060815:  test eax, eax
 8060817:  je 80613d5
 806081d:  mov ebx, DWORD PTR [ebp+0x8]
 8060820:  mov edx, DWORD PTR [ebx+0x58]
 8060823:  mov eax, DWORD PTR [edx+0x10]
 8060826:  cmp eax, DWORD PTR [edx+0x14]
 8060829:  jae 806155b
 806082f:  mov DWORD PTR [eax], ecx
 8060831:  add ecx, 0x1
 8060834:  sete cl
 8060837:  add eax, 0x4
 806083a:  mov DWORD PTR [edx+0x10], eax
 806083d:  test cl, cl
 806083f:  jne 805fffe
 8060845:  cmp DWORD PTR [ebp-0x120], 0x1
 806084c:  mov eax, DWORD PTR [ebp-0x100]
 8060852:  sbb ebx, ebx
 8060854:  and ebx, 0xfe
 8060857:  add ebx, 0x2d
 806085a:  cmp DWORD PTR [ebp-0x120], 0x1
 8060861:  mov DWORD PTR [ebp-0xf8], ebx
 8060867:  sbb ebx, ebx
 8060869:  and ebx, 0xfe
 806086c:  add ebx, 0x2d
 806086f:  cmp DWORD PTR [ebp-0x120], 0x1
 8060876:  mov ecx, ebx
 8060878:  sbb edx, edx
 806087a:  and edx, 0xfe
 806087d:  add edx, 0x2d
 8060880:  test eax, eax
 8060882:  je 8061594
 8060888:  mov eax, DWORD PTR [ebp+0x8]
 806088b:  mov edx, DWORD PTR [eax+0x58]
 806088e:  mov eax, DWORD PTR [edx+0x10]
 8060891:  cmp eax, DWORD PTR [edx+0x14]
 8060894:  jae 8061572
 806089a:  mov ecx, DWORD PTR [ebp-0xf8]
 80608a0:  mov DWORD PTR [eax], ecx
 80608a2:  add eax, 0x4
 80608a5:  mov DWORD PTR [edx+0x10], eax
 80608a8:  mov ebx, DWORD PTR [ebp-0xe8]
 80608ae:  mov eax, DWORD PTR [ebp-0x100]
 80608b4:  mov ecx, DWORD PTR [ebp-0x178]
 80608ba:  sub ecx, DWORD PTR [ebp-0x124]
 80608c0:  add ebx, 0x2
 80608c3:  test eax, eax
 80608c5:  mov DWORD PTR [ebp-0xf4], ecx
 80608cb:  jne 80615d0
 80608d1:  xor esi, esi
 80608d3:  test ecx, ecx
 80608d5:  je 8060909
 80608d7:  mov eax, DWORD PTR [ebp-0x124]
 80608dd:  mov ecx, DWORD PTR [ebp+0x8]
 80608e0:  movzx edx, BYTE PTR [eax+esi]
 80608e4:  mov eax, DWORD PTR [ecx+0x14]
 80608e7:  cmp eax, DWORD PTR [ecx+0x18]
 80608ea:  jae 80615b3
 80608f0:  mov BYTE PTR [eax], dl
 80608f2:  mov edx, DWORD PTR [ebp+0x8]
 80608f5:  add eax, 0x1
 80608f8:  mov DWORD PTR [edx+0x14], eax
 80608fb:  add ebx, 0x1
 80608fe:  add esi, 0x1
 8060901:  cmp DWORD PTR [ebp-0xf4], esi
 8060907:  jne 80608d7
 8060909:  mov ecx, DWORD PTR [ebp+0xc]
 806090c:  test BYTE PTR [ecx+0xc], 0x20
 8060910:  je 8060003
 8060916:  mov eax, DWORD PTR [ecx+0x10]
 8060919:  cmp eax, 0x30
 806091c:  je 8060003
 8060922:  test edi, edi
 8060924:  jle 8060003
 806092a:  mov edx, DWORD PTR [ebp-0x100]
 8060930:  test edx, edx
 8060932:  je 806167a
 8060938:  mov esi, DWORD PTR [ebp+0x8]
 806093b:  mov DWORD PTR [esp+0x8], edi
 806093f:  mov DWORD PTR [esp+0x4], eax
 8060943:  mov DWORD PTR [esp], esi
 8060946:  call 8062c50
 806094b:  jmp 8060184
 8060950:  xor ebx, ebx
 8060952:  mov ecx, DWORD PTR [ebp-0x20]
 8060955:  mov DWORD PTR [ebp-0x158], ebx
 806095b:  mov ebx, DWORD PTR [ebp-0x24]
 806095e:  lea edi, [ebp-0x44]
 8060961:  mov DWORD PTR [ebp-0x168], edi
 8060967:  mov DWORD PTR [ebp-0x130], edi
 806096d:  mov DWORD PTR [ebp-0x15c], ecx
 8060973:  mov eax, ebx
 8060975:  or eax, ecx
 8060977:  mov ecx, DWORD PTR [ebp-0x15c]
 806097d:  sete al
 8060980:  movzx eax, al
 8060983:  mov DWORD PTR [ebp-0x118], eax
 8060989:  mov eax, DWORD PTR [ebp+0xc]
 806098c:  cmp DWORD PTR [eax+0x8], 0x41
 8060990:  mov DWORD PTR [esp+0x4], ecx
 8060994:  mov DWORD PTR [esp+0x8], edi
 8060998:  lea edi, [ebp-0x64]
 806099b:  sete al
 806099e:  movzx eax, al
 80609a1:  mov DWORD PTR [esp+0x10], eax
 80609a5:  mov DWORD PTR [esp+0xc], 0x10
 80609ad:  mov DWORD PTR [esp], ebx
 80609b0:  call 80577b0
 80609b5:  mov edx, DWORD PTR [ebp-0x15c]
 80609bb:  mov DWORD PTR [ebp-0x164], edi
 80609c1:  mov esi, eax
 80609c3:  mov eax, DWORD PTR [ebp+0xc]
 80609c6:  cmp DWORD PTR [eax+0x8], 0x41
 80609ca:  mov DWORD PTR [esp+0xc], 0x10
 80609d2:  mov DWORD PTR [esp+0x8], edi
 80609d6:  sete al
 80609d9:  movzx eax, al
 80609dc:  mov DWORD PTR [esp+0x10], eax
 80609e0:  mov DWORD PTR [esp], ebx
 80609e3:  mov DWORD PTR [esp+0x4], edx
 80609e7:  call 808dd10
 80609ec:  lea ecx, [ebp-0x54]
 80609ef:  cmp esi, ecx
 80609f1:  mov DWORD PTR [ebp-0x12c], eax
 80609f7:  jbe 8060a27
 80609f9:  mov edx, eax
 80609fb:  mov eax, esi
 80609fd:  lea esi, [esi]
 8060a00:  sub eax, 0x1
 8060a03:  sub edx, 0x4
 8060a06:  cmp eax, ecx
 8060a08:  mov BYTE PTR [eax], 0x30
 8060a0b:  mov DWORD PTR [edx], 0x30
 8060a11:  ja 8060a00
 8060a13:  mov ebx, DWORD PTR [ebp-0x12c]
 8060a19:  sub ecx, esi
 8060a1b:  lea esi, [ebp-0x54]
 8060a1e:  lea ebx, [ebx+ecx*4]
 8060a21:  mov DWORD PTR [ebp-0x12c], ebx
 8060a27:  movzx eax, BYTE PTR [esi]
 8060a2a:  add esi, 0x1
 8060a2d:  mov DWORD PTR [ebp-0x134], esi
 8060a33:  mov BYTE PTR [ebp-0x114], al
 8060a39:  movzx eax, WORD PTR [ebp-0x1c]
 8060a3d:  and eax, 0x7fff
 8060a42:  jne 8060b20
 8060a48:  mov eax, DWORD PTR [ebp-0x118]
 8060a4e:  mov DWORD PTR [ebp-0x11c], 0x4001
 8060a58:  test eax, eax
 8060a5a:  jne 8060bb8
 8060a60:  mov DWORD PTR [ebp-0x120], 0x1
 8060a6a:  jmp 80604ab
 8060a6f:  nop
 8060a70:  mov eax, 0xffffffd8
 8060a75:  mov eax, DWORD PTR [ebx+eax]
 8060a78:  mov eax, DWORD PTR [eax]
 8060a7a:  mov eax, DWORD PTR [eax+0x24]
 8060a7d:  add eax, 0x100
 8060a82:  mov DWORD PTR [ebx+ecx], eax
 8060a85:  mov eax, DWORD PTR [ebp+0xc]
 8060a88:  movzx eax, BYTE PTR [eax+0xc]
 8060a8c:  mov BYTE PTR [ebp-0x16d], al
 8060a92:  jmp 805ff59
 8060a97:  nop
 8060a98:  mov edx, eax
 8060a9a:  mov eax, 0xffffffd8
 8060a9f:  mov ebx, DWORD PTR [ebp+0xc]
 8060aa2:  mov eax, DWORD PTR [edx+eax]
 8060aa5:  mov eax, DWORD PTR [eax]
 8060aa7:  mov eax, DWORD PTR [eax+0x24]
 8060aaa:  add eax, 0x100
 8060aaf:  mov DWORD PTR [edx+ecx], eax
 8060ab2:  movzx ebx, BYTE PTR [ebx+0xc]
 8060ab6:  mov BYTE PTR [ebp-0x16d], bl
 8060abc:  jmp 8060044
 8060ac1:  lea esi, [esi]
 8060ac8:  mov DWORD PTR [ebp-0x13c], 0x80b145c
 8060ad2:  mov DWORD PTR [ebp-0x138], 0x80b1484
 8060adc:  jmp 8060323
 8060ae1:  lea esi, [esi]
 8060ae8:  mov DWORD PTR [ebp-0x13c], 0x80b145c
 8060af2:  mov DWORD PTR [ebp-0x138], 0x80b1484
 8060afc:  jmp 806026d
 8060b01:  lea esi, [esi]
 8060b08:  mov eax, DWORD PTR [ebp-0x140]
 8060b0e:  mov DWORD PTR [esp], eax
 8060b11:  call 804eea0
 8060b16:  jmp 80605df
 8060b1b:  nop
 8060b1c:  lea esi, [esi]
 8060b20:  cmp eax, 0x4001
 8060b25:  jle 8060d08
 8060b2b:  sub eax, 0x4002
 8060b30:  mov DWORD PTR [ebp-0x11c], eax
 8060b36:  mov ebx, eax
 8060b38:  mov DWORD PTR [ebp-0x120], 0x0
 8060b42:  jmp 8060491
 8060b47:  nop
 8060b48:  mov eax, DWORD PTR [ebp-0x118]
 8060b4e:  test eax, eax
 8060b50:  jne 8060bb8
 8060b52:  mov DWORD PTR [ebp-0x11c], 0x3fe
 8060b5c:  jmp 8060a60
 8060b61:  lea esi, [esi]
 8060b68:  mov ecx, DWORD PTR [ebp+0x8]
 8060b6b:  mov DWORD PTR [esp+0x8], edi
 8060b6f:  mov DWORD PTR [esp+0x4], 0x20
 8060b77:  mov DWORD PTR [esp], ecx
 8060b7a:  call 8062880
 8060b7f:  mov ebx, eax
 8060b81:  jmp 805fff6
 8060b86:  xchg ax, ax
 8060b88:  xor ebx, ebx
 8060b8a:  jmp 8060638
 8060b8f:  nop
 8060b90:  mov ebx, DWORD PTR [ebp+0xc]
 8060b93:  xor eax, eax
 8060b95:  mov edx, 0xfffffffd
 8060b9a:  movzx ebx, BYTE PTR [ebx+0xc]
 8060b9e:  test bl, 0x50
 8060ba1:  setne al
 8060ba4:  mov BYTE PTR [ebp-0x16d], bl
 8060baa:  sub edx, eax
 8060bac:  jmp 80605a0
 8060bb1:  lea esi, [esi]
 8060bb8:  mov DWORD PTR [ebp-0x120], 0x0
 8060bc2:  xor ebx, ebx
 8060bc4:  mov esi, DWORD PTR [ebp-0x134]
 8060bca:  cmp DWORD PTR [ebp-0xec], 0xff
 8060bd1:  mov DWORD PTR [ebp-0x104], 0x0
 8060bdb:  mov DWORD PTR [ebp-0x130], esi
 8060be1:  jne 8060528
 8060be7:  mov DWORD PTR [ebp-0x130], esi
 8060bed:  mov DWORD PTR [ebp-0xec], 0x0
 8060bf7:  mov DWORD PTR [ebp-0x104], 0x0
 8060c01:  jmp 8060528
 8060c06:  xchg ax, ax
 8060c08:  mov ecx, DWORD PTR [ebp+0x8]
 8060c0b:  mov eax, DWORD PTR [ecx+0x14]
 8060c0e:  cmp eax, DWORD PTR [ecx+0x18]
 8060c11:  jae 80612b8
 8060c17:  mov BYTE PTR [eax], 0x30
 8060c1a:  mov edx, DWORD PTR [ebp+0x8]
 8060c1d:  add eax, 0x1
 8060c20:  mov DWORD PTR [edx+0x14], eax
 8060c23:  jmp 8060689
 8060c28:  test BYTE PTR [ebp-0x16d], 0x8
 8060c2f:  je 80605e1
 8060c35:  jmp 80605cc
 8060c3a:  lea esi, [esi]
 8060c40:  mov ecx, DWORD PTR [ebp-0x100]
 8060c46:  test ecx, ecx
 8060c48:  je 8060d58
 8060c4e:  mov esi, DWORD PTR [ebp+0x8]
 8060c51:  mov edx, DWORD PTR [esi+0x58]
 8060c54:  mov eax, DWORD PTR [edx+0x10]
 8060c57:  cmp eax, DWORD PTR [edx+0x14]
 8060c5a:  jae 8061453
 8060c60:  mov DWORD PTR [eax], 0x2d
 8060c66:  add eax, 0x4
 8060c69:  mov DWORD PTR [edx+0x10], eax
 8060c6c:  lea esi, [esi]
 8060c70:  add ebx, 0x1
 8060c73:  jmp 80600a7
 8060c78:  mov edx, DWORD PTR [ebp-0x100]
 8060c7e:  test edx, edx
 8060c80:  je 8060d78
 8060c86:  mov eax, DWORD PTR [ebp+0x8]
 8060c89:  mov edx, DWORD PTR [eax+0x58]
 8060c8c:  mov eax, DWORD PTR [edx+0x10]
 8060c8f:  cmp eax, DWORD PTR [edx+0x14]
 8060c92:  jae 8061483
 8060c98:  mov DWORD PTR [eax], 0x2b
 8060c9e:  add eax, 0x4
 8060ca1:  mov DWORD PTR [edx+0x10], eax
 8060ca4:  jmp 8060c70
 8060ca6:  xchg ax, ax
 8060ca8:  mov eax, DWORD PTR [ebp-0x100]
 8060cae:  test eax, eax
 8060cb0:  je 8060ea8
 8060cb6:  mov eax, DWORD PTR [ebp+0x8]
 8060cb9:  mov edx, DWORD PTR [eax+0x58]
 8060cbc:  mov eax, DWORD PTR [edx+0x10]
 8060cbf:  cmp eax, DWORD PTR [edx+0x14]
 8060cc2:  jae 8061438
 8060cc8:  mov DWORD PTR [eax], 0x20
 8060cce:  add eax, 0x4
 8060cd1:  mov DWORD PTR [edx+0x10], eax
 8060cd4:  jmp 8060c70
 8060cd6:  xchg ax, ax
 8060cd8:  mov ebx, DWORD PTR [ebp-0x130]
 8060cde:  sub ebx, DWORD PTR [ebp-0x134]
 8060ce4:  mov DWORD PTR [ebp-0x104], ebx
 8060cea:  mov esi, DWORD PTR [ebp-0x104]
 8060cf0:  mov ebx, DWORD PTR [ebp-0x11c]
 8060cf6:  mov DWORD PTR [ebp-0xec], esi
 8060cfc:  jmp 8060528
 8060d01:  lea esi, [esi]
 8060d08:  mov DWORD PTR [ebp-0x11c], 0x4002
 8060d12:  sub DWORD PTR [ebp-0x11c], eax
 8060d18:  mov ebx, DWORD PTR [ebp-0x11c]
 8060d1e:  mov DWORD PTR [ebp-0x120], 0x1
 8060d28:  jmp 8060491
 8060d2d:  lea esi, [esi]
 8060d30:  mov DWORD PTR [ebp-0x11c], 0x3ff
 8060d3a:  sub DWORD PTR [ebp-0x11c], eax
 8060d40:  mov ebx, DWORD PTR [ebp-0x11c]
 8060d46:  mov DWORD PTR [ebp-0x120], 0x1
 8060d50:  jmp 8060491
 8060d55:  lea esi, [esi]
 8060d58:  mov edx, DWORD PTR [ebp+0x8]
 8060d5b:  mov eax, DWORD PTR [edx+0x14]
 8060d5e:  cmp eax, DWORD PTR [edx+0x18]
 8060d61:  jae 806148d
 8060d67:  mov BYTE PTR [eax], 0x2d
 8060d6a:  mov ecx, DWORD PTR [ebp+0x8]
 8060d6d:  add eax, 0x1
 8060d70:  mov DWORD PTR [ecx+0x14], eax
 8060d73:  jmp 8060c70
 8060d78:  mov ecx, DWORD PTR [ebp+0x8]
 8060d7b:  mov eax, DWORD PTR [ecx+0x14]
 8060d7e:  cmp eax, DWORD PTR [ecx+0x18]
 8060d81:  jae 806146b
 8060d87:  mov BYTE PTR [eax], 0x2b
 8060d8a:  mov esi, DWORD PTR [ebp+0x8]
 8060d8d:  add eax, 0x1
 8060d90:  mov DWORD PTR [esi+0x14], eax
 8060d93:  jmp 8060c70
 8060d98:  mov eax, DWORD PTR [ebp-0xec]
 8060d9e:  add eax, 0x1
 8060da1:  cmp DWORD PTR [ebp-0x104], eax
 8060da7:  jg 8060de8
 8060da9:  cmp DWORD PTR [ebp-0xec], 0x0
 8060db0:  jle 8060fd4
 8060db6:  mov ebx, DWORD PTR [ebp-0x134]
 8060dbc:  mov ecx, DWORD PTR [ebp-0xec]
 8060dc2:  movsx eax, BYTE PTR [ebx+ecx-0x1]
 8060dc7:  mov ebx, DWORD PTR [ebp-0x11c]
 8060dcd:  mov edx, eax
 8060dcf:  sub eax, 0x30
 8060dd2:  and edx, 0x1
 8060dd5:  cmp eax, 0x9
 8060dd8:  seta al
 8060ddb:  cmp al, dl
 8060ddd:  je 8060528
 8060de3:  nop
 8060de4:  lea esi, [esi]
 8060de8:  mov ecx, DWORD PTR [ebp-0xec]
 8060dee:  sub ecx, 0x1
 8060df1:  js 8060ffd
 8060df7:  mov esi, DWORD PTR [ebp-0x134]
 8060dfd:  add esi, ecx
 8060dff:  mov DWORD PTR [ebp-0x188], esi
 8060e05:  movzx edx, BYTE PTR [esi]
 8060e08:  cmp dl, 0x39
 8060e0b:  je 8061047
 8060e11:  mov esi, DWORD PTR [ebp-0xec]
 8060e17:  mov edi, DWORD PTR [ebp-0x134]
 8060e1d:  lea ebx, [edi+esi-0x2]
 8060e21:  mov esi, 0xfffffffc
 8060e27:  jmp 8060e77
 8060e29:  lea esi, [esi]
 8060e30:  mov eax, DWORD PTR [eax+esi]
 8060e33:  movsx edx, dl
 8060e36:  cmp DWORD PTR [eax+edx*4], 0x65
 8060e3a:  jle 8061066
 8060e40:  mov edi, DWORD PTR [ebp-0x188]
 8060e46:  mov BYTE PTR [edi], 0x30
 8060e49:  mov eax, DWORD PTR [ebp-0x12c]
 8060e4f:  mov DWORD PTR [eax+ecx*4], 0x30
 8060e56:  sub ecx, 0x1
 8060e59:  cmp ecx, 0xff
 8060e5c:  je 8060ffd
 8060e62:  mov DWORD PTR [ebp-0x188], ebx
 8060e68:  movzx edx, BYTE PTR [ebx]
 8060e6b:  sub ebx, 0x1
 8060e6e:  cmp dl, 0x39
 8060e71:  je 8061047
 8060e77:  mov eax, DWORD PTR [ebp-0x174]
 8060e7d:  mov edi, DWORD PTR [eax+esi]
 8060e80:  test edi, edi
 8060e82:  jne 8060e30
 8060e84:  mov edi, 0xffffffd8
 8060e8a:  mov edi, DWORD PTR [eax+edi]
 8060e8d:  mov eax, DWORD PTR [edi]
 8060e8f:  mov edi, DWORD PTR [ebp-0x174]
 8060e95:  mov eax, DWORD PTR [eax+0x30]
 8060e98:  add eax, 0x200
 8060e9d:  mov DWORD PTR [edi+esi], eax
 8060ea0:  mov eax, edi
 8060ea2:  jmp 8060e30
 8060ea4:  lea esi, [esi]
 8060ea8:  mov ecx, DWORD PTR [ebp+0x8]
 8060eab:  mov eax, DWORD PTR [ecx+0x14]
 8060eae:  cmp eax, DWORD PTR [ecx+0x18]
 8060eb1:  jae 806140e
 8060eb7:  mov BYTE PTR [eax], 0x20
 8060eba:  mov esi, DWORD PTR [ebp+0x8]
 8060ebd:  add eax, 0x1
 8060ec0:  mov DWORD PTR [esi+0x14], eax
 8060ec3:  jmp 8060c70
 8060ec8:  mov ecx, DWORD PTR [ebp+0x8]
 8060ecb:  mov DWORD PTR [esp+0x8], edi
 8060ecf:  mov DWORD PTR [esp+0x4], 0x20
 8060ed7:  mov DWORD PTR [esp], ecx
 8060eda:  call 8062880
 8060edf:  jmp 8060184
 8060ee4:  lea esi, [esi]
 8060ee8:  mov edx, eax
 8060eea:  mov eax, 0xffffffd8
 8060eef:  mov eax, DWORD PTR [edx+eax]
 8060ef2:  mov eax, DWORD PTR [eax]
 8060ef4:  mov eax, DWORD PTR [eax+0x24]
 8060ef7:  add eax, 0x100
 8060efc:  mov DWORD PTR [edx+ecx], eax
 8060eff:  mov eax, DWORD PTR [ebp+0xc]
 8060f02:  movzx eax, BYTE PTR [eax+0xc]
 8060f06:  mov BYTE PTR [ebp-0x16d], al
 8060f0c:  jmp 806023f
 8060f11:  lea esi, [esi]
 8060f18:  mov edx, eax
 8060f1a:  mov eax, 0xffffffd8
 8060f1f:  mov ebx, DWORD PTR [ebp+0xc]
 8060f22:  mov eax, DWORD PTR [edx+eax]
 8060f25:  mov eax, DWORD PTR [eax]
 8060f27:  mov eax, DWORD PTR [eax+0x24]
 8060f2a:  add eax, 0x100
 8060f2f:  mov DWORD PTR [edx+ecx], eax
 8060f32:  movzx ebx, BYTE PTR [ebx+0xc]
 8060f36:  mov BYTE PTR [ebp-0x16d], bl
 8060f3c:  jmp 80602f5
 8060f41:  mov ecx, DWORD PTR [ebp-0x100]
 8060f47:  test ecx, ecx
 8060f49:  je 806107e
 8060f4f:  mov eax, DWORD PTR [ebp+0x8]
 8060f52:  mov edx, DWORD PTR [eax+0x58]
 8060f55:  mov eax, DWORD PTR [edx+0x10]
 8060f58:  cmp eax, DWORD PTR [edx+0x14]
 8060f5b:  jae 806151d
 8060f61:  mov DWORD PTR [eax], 0x2d
 8060f67:  add eax, 0x4
 8060f6a:  mov DWORD PTR [edx+0x10], eax
 8060f6d:  lea esi, [esi]
 8060f70:  add ebx, 0x1
 8060f73:  jmp 806065d
 8060f78:  mov edx, DWORD PTR [ebp-0x100]
 8060f7e:  test edx, edx
 8060f80:  je 806109e
 8060f86:  mov eax, DWORD PTR [ebp+0x8]
 8060f89:  mov edx, DWORD PTR [eax+0x58]
 8060f8c:  mov eax, DWORD PTR [edx+0x10]
 8060f8f:  cmp eax, DWORD PTR [edx+0x14]
 8060f92:  jae 80614df
 8060f98:  mov DWORD PTR [eax], 0x2b
 8060f9e:  add eax, 0x4
 8060fa1:  mov DWORD PTR [edx+0x10], eax
 8060fa4:  jmp 8060f70
 8060fa6:  mov eax, DWORD PTR [ebp-0x100]
 8060fac:  test eax, eax
 8060fae:  je 80610be
 8060fb4:  mov ecx, DWORD PTR [ebp+0x8]
 8060fb7:  mov edx, DWORD PTR [ecx+0x58]
 8060fba:  mov eax, DWORD PTR [edx+0x10]
 8060fbd:  cmp eax, DWORD PTR [edx+0x14]
 8060fc0:  jae 80616c6
 8060fc6:  mov DWORD PTR [eax], 0x20
 8060fcc:  add eax, 0x4
 8060fcf:  mov DWORD PTR [edx+0x10], eax
 8060fd2:  jmp 8060f70
 8060fd4:  jne 806051b
 8060fda:  movsx eax, BYTE PTR [ebp-0x114]
 8060fe1:  mov ebx, DWORD PTR [ebp-0x11c]
 8060fe7:  mov edx, eax
 8060fe9:  sub eax, 0x30
 8060fec:  and edx, 0x1
 8060fef:  cmp eax, 0x9
 8060ff2:  seta al
 8060ff5:  cmp al, dl
 8060ff7:  je 8060528
 8060ffd:  cmp BYTE PTR [ebp-0x114], 0x39
 8061004:  je 80611e1
 806100a:  mov esi, 0xfffffffc
 8061010:  mov ecx, DWORD PTR [ebp-0x174]
 8061016:  mov edi, DWORD PTR [ecx+esi]
 8061019:  test edi, edi
 806101b:  je 8061332
 8061021:  mov ebx, DWORD PTR [ebp-0x174]
 8061027:  movsx edx, BYTE PTR [ebp-0x114]
 806102e:  mov eax, DWORD PTR [ebx+esi]
 8061031:  cmp DWORD PTR [eax+edx*4], 0x65
 8061035:  jg 80611aa
 806103b:  add BYTE PTR [ebp-0x114], 0x1
 8061042:  jmp 806051b
 8061047:  mov edi, DWORD PTR [ebp+0xc]
 806104a:  mov edx, DWORD PTR [ebp-0x12c]
 8061050:  mov eax, DWORD PTR [edi+0x8]
 8061053:  mov DWORD PTR [edx+ecx*4], eax
 8061056:  mov ecx, DWORD PTR [ebp-0x188]
 806105c:  mov eax, DWORD PTR [edi+0x8]
 806105f:  mov BYTE PTR [ecx], al
 8061061:  jmp 806051b
 8061066:  mov edx, DWORD PTR [ebp-0x188]
 806106c:  add BYTE PTR [edx], 0x1
 806106f:  mov ebx, DWORD PTR [ebp-0x12c]
 8061075:  add DWORD PTR [ebx+ecx*4], 0x1
 8061079:  jmp 806051b
 806107e:  mov ecx, DWORD PTR [ebp+0x8]
 8061081:  mov eax, DWORD PTR [ecx+0x14]
 8061084:  cmp eax, DWORD PTR [ecx+0x18]
 8061087:  jae 8061505
 806108d:  mov BYTE PTR [eax], 0x2d
 8061090:  mov edx, DWORD PTR [ebp+0x8]
 8061093:  add eax, 0x1
 8061096:  mov DWORD PTR [edx+0x14], eax
 8061099:  jmp 8060f70
 806109e:  mov ecx, DWORD PTR [ebp+0x8]
 80610a1:  mov eax, DWORD PTR [ecx+0x14]
 80610a4:  cmp eax, DWORD PTR [ecx+0x18]
 80610a7:  jae 80616e1
 80610ad:  mov BYTE PTR [eax], 0x2b
 80610b0:  mov edx, DWORD PTR [ebp+0x8]
 80610b3:  add eax, 0x1
 80610b6:  mov DWORD PTR [edx+0x14], eax
 80610b9:  jmp 8060f70
 80610be:  mov edx, DWORD PTR [ebp+0x8]
 80610c1:  mov eax, DWORD PTR [edx+0x14]
 80610c4:  cmp eax, DWORD PTR [edx+0x18]
 80610c7:  jae 806174a
 80610cd:  mov BYTE PTR [eax], 0x20
 80610d0:  mov ecx, DWORD PTR [ebp+0x8]
 80610d3:  add eax, 0x1
 80610d6:  mov DWORD PTR [ecx+0x14], eax
 80610d9:  jmp 8060f70
 80610de:  mov edx, DWORD PTR [ebp+0x8]
 80610e1:  mov eax, DWORD PTR [edx+0x14]
 80610e4:  cmp eax, DWORD PTR [edx+0x18]
 80610e7:  jae 80614c5
 80610ed:  mov BYTE PTR [eax], cl
 80610ef:  mov ecx, DWORD PTR [ebp+0x8]
 80610f2:  add eax, 0x1
 80610f5:  mov DWORD PTR [ecx+0x14], eax
 80610f8:  jmp 80606c8
 80610fd:  mov edx, DWORD PTR [ebp+0x8]
 8061100:  mov DWORD PTR [esp+0x4], ecx
 8061104:  mov DWORD PTR [esp], edx
 8061107:  call 80630d0
 806110c:  add eax, 0x1
 806110f:  sete cl
 8061112:  jmp 80600e2
 8061117:  movzx eax, dl
 806111a:  mov DWORD PTR [esp+0x4], eax
 806111e:  mov eax, DWORD PTR [ebp+0x8]
 8061121:  mov DWORD PTR [esp], eax
 8061124:  call 8068460
 8061129:  add eax, 0x1
 806112c:  jne 80601bd
 8061132:  jmp 805fffe
 8061137:  nop
 8061138:  movzx eax, dl
 806113b:  mov DWORD PTR [esp+0x4], eax
 806113f:  mov eax, DWORD PTR [ebp+0x8]
 8061142:  mov DWORD PTR [esp], eax
 8061145:  call 8068460
 806114a:  add eax, 0x1
 806114d:  jne 80601d7
 8061153:  jmp 805fffe
 8061158:  mov DWORD PTR [esp+0x4], ecx
 806115c:  mov DWORD PTR [esp], esi
 806115f:  call 80630d0
 8061164:  add eax, 0x1
 8061167:  sete cl
 806116a:  jmp 806013a
 806116f:  movzx eax, dl
 8061172:  mov DWORD PTR [esp+0x4], eax
 8061176:  mov DWORD PTR [esp], ecx
 8061179:  call 8068460
 806117e:  add eax, 0x1
 8061181:  jne 8060142
 8061187:  jmp 805fffe
 806118c:  lea esi, [esi]
 8061190:  mov edx, DWORD PTR [ebp+0x8]
 8061193:  mov DWORD PTR [esp+0x4], ecx
 8061197:  mov DWORD PTR [esp], edx
 806119a:  call 80630d0
 806119f:  add eax, 0x1
 80611a2:  sete cl
 80611a5:  jmp 806010c
 80611aa:  mov esi, DWORD PTR [ebp-0x120]
 80611b0:  test esi, esi
 80611b2:  je 806123b
 80611b8:  mov eax, DWORD PTR [ebp-0x11c]
 80611be:  sub eax, 0x4
 80611c1:  test eax, eax
 80611c3:  jle 80613f4
 80611c9:  mov ebx, eax
 80611cb:  mov DWORD PTR [ebp-0x120], 0x1
 80611d5:  mov BYTE PTR [ebp-0x114], 0x31
 80611dc:  jmp 8060528
 80611e1:  mov edx, DWORD PTR [ebp+0xc]
 80611e4:  mov ebx, DWORD PTR [ebp-0x11c]
 80611ea:  movzx edx, BYTE PTR [edx+0x8]
 80611ee:  mov BYTE PTR [ebp-0x114], dl
 80611f4:  jmp 8060528
 80611f9:  mov ebx, DWORD PTR [ebp+0x8]
 80611fc:  mov DWORD PTR [esp+0x8], edi
 8061200:  mov DWORD PTR [esp+0x4], 0x20
 8061208:  mov DWORD PTR [esp], ebx
 806120b:  call 8062880
 8061210:  jmp 8060628
 8061215:  mov edx, DWORD PTR [ebp+0x8]
 8061218:  mov eax, DWORD PTR [edx+0x14]
 806121b:  cmp eax, DWORD PTR [edx+0x18]
 806121e:  jae 8061692
 8061224:  movzx ecx, BYTE PTR [ebp-0x114]
 806122b:  mov BYTE PTR [eax], cl
 806122d:  mov edx, DWORD PTR [ebp+0x8]
 8061230:  add eax, 0x1
 8061233:  mov DWORD PTR [edx+0x14], eax
 8061236:  jmp 806071b
 806123b:  mov ebx, DWORD PTR [ebp-0x11c]
 8061241:  mov BYTE PTR [ebp-0x114], 0x31
 8061248:  add ebx, 0x4
 806124b:  jmp 8060528
 8061250:  test edi, edi
 8061252:  jle 80606de
 8061258:  mov eax, DWORD PTR [ebp-0x100]
 806125e:  test eax, eax
 8061260:  je 8061765
 8061266:  mov edx, DWORD PTR [ebp+0x8]
 8061269:  mov DWORD PTR [esp+0x8], edi
 806126d:  mov DWORD PTR [esp+0x4], 0x30
 8061275:  mov DWORD PTR [esp], edx
 8061278:  call 8062c50
 806127d:  cmp eax, edi
 806127f:  jne 805fffe
 8061285:  add ebx, edi
 8061287:  jmp 80606de
 806128c:  lea esi, [esi]
 8061290:  mov edx, DWORD PTR [ebp+0x8]
 8061293:  mov DWORD PTR [esp+0x4], 0x30
 806129b:  mov DWORD PTR [esp], edx
 806129e:  call 80630d0
 80612a3:  add eax, 0x1
 80612a6:  sete al
 80612a9:  test al, al
 80612ab:  jne 805fffe
 80612b1:  jmp 8060689
 80612b6:  xchg ax, ax
 80612b8:  mov DWORD PTR [esp+0x4], 0x30
 80612c0:  mov DWORD PTR [esp], ecx
 80612c3:  call 8068460
 80612c8:  add eax, 0x1
 80612cb:  sete al
 80612ce:  jmp 80612a9
 80612d0:  mov eax, DWORD PTR [ebp-0xfc]
 80612d6:  test eax, eax
 80612d8:  je 80607ec
 80612de:  mov ebx, DWORD PTR [ebp-0xfc]
 80612e4:  jmp 80612f5
 80612e6:  add DWORD PTR [ebp-0xe8], 0x1
 80612ed:  test ebx, ebx
 80612ef:  je 80607ec
 80612f5:  mov eax, DWORD PTR [ebp-0x12c]
 80612fb:  sub ebx, 0x1
 80612fe:  mov ecx, DWORD PTR [eax]
 8061300:  add eax, 0x4
 8061303:  mov DWORD PTR [ebp-0x12c], eax
 8061309:  mov eax, DWORD PTR [ebp+0x8]
 806130c:  mov edx, DWORD PTR [eax+0x58]
 806130f:  mov eax, DWORD PTR [edx+0x10]
 8061312:  cmp eax, DWORD PTR [edx+0x14]
 8061315:  jae 8061527
 806131b:  mov DWORD PTR [eax], ecx
 806131d:  add ecx, 0x1
 8061320:  sete cl
 8061323:  add eax, 0x4
 8061326:  mov DWORD PTR [edx+0x10], eax
 8061329:  test cl, cl
 806132b:  je 80612e6
 806132d:  jmp 805fffe
 8061332:  mov eax, 0xffffffd8
 8061337:  mov eax, DWORD PTR [ecx+eax]
 806133a:  mov eax, DWORD PTR [eax]
 806133c:  mov eax, DWORD PTR [eax+0x30]
 806133f:  add eax, 0x200
 8061344:  mov DWORD PTR [ecx+esi], eax
 8061347:  jmp 8061021
 806134c:  mov ebx, DWORD PTR [ebp-0x140]
 8061352:  mov DWORD PTR [esp], ebx
 8061355:  xor ebx, ebx
 8061357:  call 804eea0
 806135c:  test eax, eax
 806135e:  mov DWORD PTR [ebp-0x160], eax
 8061364:  jne 8061391
 8061366:  jmp 8060772
 806136b:  nop
 806136c:  lea esi, [esi]
 8061370:  mov BYTE PTR [eax], dl
 8061372:  mov edx, DWORD PTR [ebp+0x8]
 8061375:  add eax, 0x1
 8061378:  mov DWORD PTR [edx+0x14], eax
 806137b:  add DWORD PTR [ebp-0xe8], 0x1
 8061382:  add ebx, 0x1
 8061385:  cmp DWORD PTR [ebp-0x160], ebx
 806138b:  je 8060772
 8061391:  mov ecx, DWORD PTR [ebp-0x140]
 8061397:  movzx edx, BYTE PTR [ecx+ebx]
 806139b:  mov ecx, DWORD PTR [ebp+0x8]
 806139e:  mov eax, DWORD PTR [ecx+0x14]
 80613a1:  cmp eax, DWORD PTR [ecx+0x18]
 80613a4:  jb 8061370
 80613a6:  movzx eax, dl
 80613a9:  mov DWORD PTR [esp+0x4], eax
 80613ad:  mov DWORD PTR [esp], ecx
 80613b0:  call 8068460
 80613b5:  add eax, 0x1
 80613b8:  jne 806137b
 80613ba:  jmp 805fffe
 80613bf:  nop
 80613c0:  mov ecx, DWORD PTR [ebp+0xc]
 80613c3:  test BYTE PTR [ecx+0xc], 0x8
 80613c7:  nop
 80613c8:  je 8060806
 80613ce:  xchg ax, ax
 80613d0:  jmp 8060732
 80613d5:  mov edx, DWORD PTR [ebp+0x8]
 80613d8:  mov eax, DWORD PTR [edx+0x14]
 80613db:  cmp eax, DWORD PTR [edx+0x18]
 80613de:  jae 80616ac
 80613e4:  mov BYTE PTR [eax], cl
 80613e6:  mov ecx, DWORD PTR [ebp+0x8]
 80613e9:  add eax, 0x1
 80613ec:  mov DWORD PTR [ecx+0x14], eax
 80613ef:  jmp 8060845
 80613f4:  mov ebx, eax
 80613f6:  neg ebx
 80613f8:  mov DWORD PTR [ebp-0x120], 0x0
 8061402:  mov BYTE PTR [ebp-0x114], 0x31
 8061409:  jmp 8060528
 806140e:  mov DWORD PTR [esp+0x4], 0x20
 8061416:  mov DWORD PTR [esp], ecx
 8061419:  call 8068460
 806141e:  add eax, 0x1
 8061421:  sete al
 8061424:  test al, al
 8061426:  jne 805fffe
 806142c:  jmp 8060c70
 8061431:  lea esi, [esi]
 8061438:  mov DWORD PTR [esp+0x4], 0x20
 8061440:  mov edx, DWORD PTR [ebp+0x8]
 8061443:  mov DWORD PTR [esp], edx
 8061446:  call 80630d0
 806144b:  add eax, 0x1
 806144e:  sete al
 8061451:  jmp 8061424
 8061453:  mov DWORD PTR [esp+0x4], 0x2d
 806145b:  mov DWORD PTR [esp], esi
 806145e:  call 80630d0
 8061463:  add eax, 0x1
 8061466:  sete al
 8061469:  jmp 8061424
 806146b:  mov DWORD PTR [esp+0x4], 0x2b
 8061473:  mov DWORD PTR [esp], ecx
 8061476:  call 8068460
 806147b:  add eax, 0x1
 806147e:  sete al
 8061481:  jmp 8061424
 8061483:  mov DWORD PTR [esp+0x4], 0x2b
 806148b:  jmp 8061440
 806148d:  mov DWORD PTR [esp+0x4], 0x2d
 8061495:  mov DWORD PTR [esp], edx
 8061498:  call 8068460
 806149d:  add eax, 0x1
 80614a0:  sete al
 80614a3:  jmp 8061424
 80614a8:  movzx eax, dl
 80614ab:  mov DWORD PTR [esp+0x4], eax
 80614af:  mov DWORD PTR [esp], ecx
 80614b2:  call 8068460
 80614b7:  add eax, 0x1
 80614ba:  jne 80607da
 80614c0:  jmp 805fffe
 80614c5:  movzx eax, cl
 80614c8:  mov DWORD PTR [esp+0x4], eax
 80614cc:  mov DWORD PTR [esp], edx
 80614cf:  call 8068460
 80614d4:  add eax, 0x1
 80614d7:  sete cl
 80614da:  jmp 80606c0
 80614df:  mov DWORD PTR [esp+0x4], 0x2b
 80614e7:  mov edx, DWORD PTR [ebp+0x8]
 80614ea:  mov DWORD PTR [esp], edx
 80614ed:  call 80630d0
 80614f2:  add eax, 0x1
 80614f5:  sete al
 80614f8:  test al, al
 80614fa:  jne 805fffe
 8061500:  jmp 8060f70
 8061505:  mov DWORD PTR [esp+0x4], 0x2d
 806150d:  mov DWORD PTR [esp], ecx
 8061510:  call 8068460
 8061515:  add eax, 0x1
 8061518:  sete al
 806151b:  jmp 80614f8
 806151d:  mov DWORD PTR [esp+0x4], 0x2d
 8061525:  jmp 80614e7
 8061527:  mov edx, DWORD PTR [ebp+0x8]
 806152a:  mov DWORD PTR [esp+0x4], ecx
 806152e:  mov DWORD PTR [esp], edx
 8061531:  call 80630d0
 8061536:  add eax, 0x1
 8061539:  sete cl
 806153c:  jmp 8061329
 8061541:  mov edx, DWORD PTR [ebp+0x8]
 8061544:  mov DWORD PTR [esp+0x4], ecx
 8061548:  mov DWORD PTR [esp], edx
 806154b:  call 80630d0
 8061550:  add eax, 0x1
 8061553:  sete cl
 8061556:  jmp 8060713
 806155b:  mov DWORD PTR [esp+0x4], ecx
 806155f:  mov DWORD PTR [esp], ebx
 8061562:  call 80630d0
 8061567:  add eax, 0x1
 806156a:  sete cl
 806156d:  jmp 806083d
 8061572:  mov edx, DWORD PTR [ebp+0x8]
 8061575:  mov DWORD PTR [esp+0x4], ebx
 8061579:  mov DWORD PTR [esp], edx
 806157c:  call 80630d0
 8061581:  add eax, 0x1
 8061584:  sete al
 8061587:  test al, al
 8061589:  je 80608a8
 806158f:  jmp 805fffe
 8061594:  mov ebx, DWORD PTR [ebp+0x8]
 8061597:  mov eax, DWORD PTR [ebx+0x14]
 806159a:  cmp eax, DWORD PTR [ebx+0x18]
 806159d:  jae 8061632
 80615a3:  mov BYTE PTR [eax], dl
 80615a5:  mov edx, DWORD PTR [ebp+0x8]
 80615a8:  add eax, 0x1
 80615ab:  mov DWORD PTR [edx+0x14], eax
 80615ae:  jmp 80608a8
 80615b3:  movzx eax, dl
 80615b6:  mov DWORD PTR [esp+0x4], eax
 80615ba:  mov DWORD PTR [esp], ecx
 80615bd:  call 8068460
 80615c2:  add eax, 0x1
 80615c5:  jne 80608fb
 80615cb:  jmp 805fffe
 80615d0:  mov ecx, DWORD PTR [ebp-0xf4]
 80615d6:  test ecx, ecx
 80615d8:  je 8060909
 80615de:  mov DWORD PTR [ebp-0xf0], 0x0
 80615e8:  mov eax, DWORD PTR [ebp-0xf0]
 80615ee:  mov edx, DWORD PTR [esi+eax*4]
 80615f1:  mov eax, DWORD PTR [ebp+0x8]
 80615f4:  mov ecx, DWORD PTR [eax+0x58]
 80615f7:  mov eax, DWORD PTR [ecx+0x10]
 80615fa:  cmp eax, DWORD PTR [ecx+0x14]
 80615fd:  jae 8061649
 80615ff:  mov DWORD PTR [eax], edx
 8061601:  add edx, 0x1
 8061604:  sete dl
 8061607:  add eax, 0x4
 806160a:  mov DWORD PTR [ecx+0x10], eax
 806160d:  test dl, dl
 806160f:  jne 805fffe
 8061615:  add DWORD PTR [ebp-0xf0], 0x1
 806161c:  add ebx, 0x1
 806161f:  mov ecx, DWORD PTR [ebp-0xf4]
 8061625:  cmp DWORD PTR [ebp-0xf0], ecx
 806162b:  jne 80615e8
 806162d:  jmp 8060909
 8061632:  mov DWORD PTR [esp+0x4], ecx
 8061636:  mov DWORD PTR [esp], ebx
 8061639:  call 8068460
 806163e:  add eax, 0x1
 8061641:  sete al
 8061644:  jmp 8061587
 8061649:  mov DWORD PTR [esp+0x4], edx
 806164d:  mov edx, DWORD PTR [ebp+0x8]
 8061650:  mov DWORD PTR [esp], edx
 8061653:  call 80630d0
 8061658:  add eax, 0x1
 806165b:  sete dl
 806165e:  jmp 806160d
 8061660:  mov edx, DWORD PTR [ebp+0x8]
 8061663:  mov DWORD PTR [esp+0x4], ecx
 8061667:  mov DWORD PTR [esp], edx
 806166a:  call 80630d0
 806166f:  add eax, 0x1
 8061672:  sete cl
 8061675:  jmp 8060763
 806167a:  mov DWORD PTR [esp+0x4], eax
 806167e:  mov eax, DWORD PTR [ebp+0x8]
 8061681:  mov DWORD PTR [esp+0x8], edi
 8061685:  mov DWORD PTR [esp], eax
 8061688:  call 8062880
 806168d:  jmp 8060184
 8061692:  movzx eax, cl
 8061695:  mov DWORD PTR [esp+0x4], eax
 8061699:  mov DWORD PTR [esp], edx
 806169c:  call 8068460
 80616a1:  add eax, 0x1
 80616a4:  sete cl
 80616a7:  jmp 8060713
 80616ac:  movzx eax, cl
 80616af:  mov DWORD PTR [esp+0x4], eax
 80616b3:  mov DWORD PTR [esp], edx
 80616b6:  call 8068460
 80616bb:  add eax, 0x1
 80616be:  sete cl
 80616c1:  jmp 806083d
 80616c6:  mov DWORD PTR [esp+0x4], 0x20
 80616ce:  mov DWORD PTR [esp], ecx
 80616d1:  call 80630d0
 80616d6:  add eax, 0x1
 80616d9:  sete al
 80616dc:  jmp 80614f8
 80616e1:  mov DWORD PTR [esp+0x4], 0x2b
 80616e9:  mov DWORD PTR [esp], ecx
 80616ec:  call 8068460
 80616f1:  add eax, 0x1
 80616f4:  sete al
 80616f7:  jmp 80614f8
 80616fc:  mov edx, DWORD PTR [ebp+0x8]
 80616ff:  mov DWORD PTR [esp+0x4], ecx
 8061703:  mov DWORD PTR [esp], edx
 8061706:  call 80630d0
 806170b:  add eax, 0x1
 806170e:  sete cl
 8061711:  jmp 80606c0
 8061716:  mov eax, DWORD PTR [ebp-0x100]
 806171c:  test eax, eax
 806171e:  je 8061781
 8061720:  mov ecx, DWORD PTR [ebp+0x8]
 8061723:  mov DWORD PTR [esp+0x8], ebx
 8061727:  mov DWORD PTR [esp+0x4], 0x30
 806172f:  mov DWORD PTR [esp], ecx
 8061732:  call 8062c50
 8061737:  cmp eax, ebx
 8061739:  jne 805fffe
 806173f:  add DWORD PTR [ebp-0xe8], eax
 8061745:  jmp 8060806
 806174a:  mov DWORD PTR [esp+0x4], 0x20
 8061752:  mov DWORD PTR [esp], edx
 8061755:  call 8068460
 806175a:  add eax, 0x1
 806175d:  sete al
 8061760:  jmp 80614f8
 8061765:  mov ecx, DWORD PTR [ebp+0x8]
 8061768:  mov DWORD PTR [esp+0x8], edi
 806176c:  mov DWORD PTR [esp+0x4], 0x30
 8061774:  mov DWORD PTR [esp], ecx
 8061777:  call 8062880
 806177c:  jmp 806127d
 8061781:  mov eax, DWORD PTR [ebp+0x8]
 8061784:  mov DWORD PTR [esp+0x8], ebx
 8061788:  mov DWORD PTR [esp+0x4], 0x30
 8061790:  mov DWORD PTR [esp], eax
 8061793:  call 8062880
 8061798:  jmp 8061737
 806179a:  nop
 806179b:  nop
 806179c:  nop
 806179d:  nop
 806179e:  nop
 806179f:  nop

080617a0 <__fprintf>:
 80617a0:  push ebp
 80617a1:  mov ebp, esp
 80617a3:  sub esp, 0xc
 80617a6:  lea eax, [ebp+0x10]
 80617a9:  mov DWORD PTR [esp+0x8], eax
 80617ad:  mov eax, DWORD PTR [ebp+0xc]
 80617b0:  mov DWORD PTR [esp+0x4], eax
 80617b4:  mov eax, DWORD PTR [ebp+0x8]
 80617b7:  mov DWORD PTR [esp], eax
 80617ba:  call 8058740
 80617bf:  leave
 80617c0:  ret
 80617c1:  nop
 80617c2:  nop
 80617c3:  nop
 80617c4:  nop
 80617c5:  nop
 80617c6:  nop
 80617c7:  nop
 80617c8:  nop
 80617c9:  nop
 80617ca:  nop
 80617cb:  nop
 80617cc:  nop
 80617cd:  nop
 80617ce:  nop
 80617cf:  nop

080617d0 <___asprintf>:
 80617d0:  push ebp
 80617d1:  mov ebp, esp
 80617d3:  sub esp, 0xc
 80617d6:  lea eax, [ebp+0x10]
 80617d9:  mov DWORD PTR [esp+0x8], eax
 80617dd:  mov eax, DWORD PTR [ebp+0xc]
 80617e0:  mov DWORD PTR [esp+0x4], eax
 80617e4:  mov eax, DWORD PTR [ebp+0x8]
 80617e7:  mov DWORD PTR [esp], eax
 80617ea:  call 80657c0
 80617ef:  leave
 80617f0:  ret
 80617f1:  nop
 80617f2:  nop
 80617f3:  nop
 80617f4:  nop
 80617f5:  nop
 80617f6:  nop
 80617f7:  nop
 80617f8:  nop
 80617f9:  nop
 80617fa:  nop
 80617fb:  nop
 80617fc:  nop
 80617fd:  nop
 80617fe:  nop
 80617ff:  nop

08061800 <__dprintf>:
 8061800:  push ebp
 8061801:  mov ebp, esp
 8061803:  sub esp, 0xc
 8061806:  lea eax, [ebp+0x10]
 8061809:  mov DWORD PTR [esp+0x8], eax
 806180d:  mov eax, DWORD PTR [ebp+0xc]
 8061810:  mov DWORD PTR [esp+0x4], eax
 8061814:  mov eax, DWORD PTR [ebp+0x8]
 8061817:  mov DWORD PTR [esp], eax
 806181a:  call 8065940
 806181f:  leave
 8061820:  ret
 8061821:  nop
 8061822:  nop
 8061823:  nop
 8061824:  nop
 8061825:  nop
 8061826:  nop
 8061827:  nop
 8061828:  nop
 8061829:  nop
 806182a:  nop
 806182b:  nop
 806182c:  nop
 806182d:  nop
 806182e:  nop
 806182f:  nop

08061830 <_IO_funlockfile>:
 8061830:  push ebp
 8061831:  mov ebp, esp
 8061833:  mov eax, DWORD PTR [ebp+0x8]
 8061836:  mov edx, DWORD PTR [eax+0x48]
 8061839:  mov eax, DWORD PTR [edx+0x4]
 806183c:  sub eax, 0x1
 806183f:  test eax, eax
 8061841:  mov DWORD PTR [edx+0x4], eax
 8061844:  jne 806185d
 8061846:  mov DWORD PTR [edx+0x8], 0x0
 806184d:  cmp DWORD PTR gs:0xc, 0x0
 8061855:  je 8061858
 8061857:  sub DWORD PTR [edx], 0x1
 806185b:  jne 806185f
 806185d:  pop ebp
 806185e:  ret

0806185f <_L_unlock_19>:
 806185f:  lea eax, [edx]
 8061861:  call 8050260
 8061866:  jmp 806185d
 8061868:  nop
 8061869:  nop
 806186a:  nop
 806186b:  nop
 806186c:  nop
 806186d:  nop
 806186e:  nop
 806186f:  nop

08061870 <__parse_one_specmb>:
 8061870:  push ebp
 8061871:  mov ebp, esp
 8061873:  push edi
 8061874:  push esi
 8061875:  push ebx
 8061876:  sub esp, 0x18
 8061879:  mov edx, DWORD PTR [ebp+0x8]
 806187c:  mov ecx, DWORD PTR [ebp+0x10]
 806187f:  lea eax, [edx+0x1]
 8061882:  mov DWORD PTR [ebp-0x10], eax
 8061885:  movzx eax, BYTE PTR [ecx+0xc]
 8061889:  mov DWORD PTR [ecx+0x24], 0xffffffff
 8061890:  mov DWORD PTR [ecx+0x10], 0x20
 8061897:  and eax, 0x7
 806189a:  mov BYTE PTR [ebp-0x15], al
 806189d:  mov BYTE PTR [ecx+0xc], al
 80618a0:  movzx eax, BYTE PTR [ecx+0xd]
 80618a4:  and eax, 0xf2
 80618a7:  mov BYTE PTR [ecx+0xd], al
 80618aa:  movzx edi, BYTE PTR [edx+0x1]
 80618ae:  mov ecx, edi
 80618b0:  movzx eax, cl
 80618b3:  sub eax, 0x30
 80618b6:  cmp eax, 0x9
 80618b9:  ja 80618f0
 80618bb:  movzx ecx, BYTE PTR [edx+0x2]
 80618bf:  mov esi, eax
 80618c1:  lea ebx, [edx+0x2]
 80618c4:  movzx eax, cl
 80618c7:  lea edx, [eax-0x30]
 80618ca:  cmp edx, 0x9
 80618cd:  ja 80618e7
 80618cf:  nop
 80618d0:  add ebx, 0x1
 80618d3:  movzx ecx, BYTE PTR [ebx]
 80618d6:  lea eax, [esi+esi*4]
 80618d9:  lea esi, [edx+eax*2]
 80618dc:  movzx eax, cl
 80618df:  lea edx, [eax-0x30]
 80618e2:  cmp edx, 0x9
 80618e5:  jbe 80618d0
 80618e7:  test esi, esi
 80618e9:  jne 8061ae8
 80618ef:  nop
 80618f0:  lea eax, [edi-0x20]
 80618f3:  cmp al, 0x29
 80618f5:  jbe 8061a38
 80618fb:  test BYTE PTR [ebp-0x15], 0x20
 80618ff:  nop
 8061900:  je 806190c
 8061902:  mov eax, DWORD PTR [ebp+0x10]
 8061905:  mov DWORD PTR [eax+0x10], 0x20
 806190c:  mov edx, DWORD PTR [ebp+0x10]
 806190f:  mov ecx, DWORD PTR [ebp-0x10]
 8061912:  mov DWORD PTR [edx+0x20], 0xffffffff
 8061919:  mov DWORD PTR [edx+0x4], 0x0
 8061920:  movzx eax, BYTE PTR [ecx]
 8061923:  cmp al, 0x2a
 8061925:  je 8061b88
 806192b:  movzx eax, al
 806192e:  sub eax, 0x30
 8061931:  cmp eax, 0x9
 8061934:  mov DWORD PTR [ebp-0x14], 0x0
 806193b:  jbe 8061a0e
 8061941:  mov ecx, DWORD PTR [ebp+0x10]
 8061944:  mov eax, DWORD PTR [ebp-0x10]
 8061947:  mov DWORD PTR [ecx+0x1c], 0xffffffff
 806194e:  mov DWORD PTR [ecx], 0xffffffff
 8061954:  cmp BYTE PTR [eax], 0x2e
 8061957:  je 8061b30
 806195d:  mov eax, DWORD PTR [ebp+0x10]
 8061960:  movzx edx, BYTE PTR [eax+0xc]
 8061964:  and edx, 0xf8
 8061967:  mov BYTE PTR [ebp-0x15], dl
 806196a:  movzx ecx, BYTE PTR [eax+0xd]
 806196e:  mov BYTE PTR [eax+0xc], dl
 8061971:  and ecx, 0xfd
 8061974:  mov BYTE PTR [ebp-0x16], cl
 8061977:  mov BYTE PTR [eax+0xd], cl
 806197a:  mov eax, DWORD PTR [ebp-0x10]
 806197d:  movzx ebx, BYTE PTR [eax]
 8061980:  mov esi, eax
 8061982:  add esi, 0x1
 8061985:  lea eax, [ebx-0x4c]
 8061988:  cmp al, 0x2e
 806198a:  jbe 8061ad0
 8061990:  mov edi, esi
 8061992:  mov esi, DWORD PTR [ebp-0x10]
 8061995:  lea esi, [esi]
 8061998:  movzx edx, bl
 806199b:  mov ebx, DWORD PTR ds:0x80d2e78
 80619a1:  mov eax, DWORD PTR [ebp+0x10]
 80619a4:  test ebx, ebx
 80619a6:  mov DWORD PTR [eax+0x8], edx
 80619a9:  jne 8061eec
 80619af:  mov ecx, DWORD PTR [ebp+0x10]
 80619b2:  mov eax, DWORD PTR [ecx+0x8]
 80619b5:  mov DWORD PTR [ecx+0x2c], 0x1
 80619bc:  sub eax, 0x41
 80619bf:  cmp eax, 0x37
 80619c2:  jbe 8061ae0
 80619c8:  mov eax, DWORD PTR [ebp+0x10]
 80619cb:  mov DWORD PTR [eax+0x2c], 0x0
 80619d2:  mov edx, eax
 80619d4:  lea esi, [esi]
 80619d8:  cmp DWORD PTR [edx+0x24], 0xff
 80619dc:  je 8061cc0
 80619e2:  mov edx, DWORD PTR [ebp+0x10]
 80619e5:  mov eax, DWORD PTR [edx+0x8]
 80619e8:  test eax, eax
 80619ea:  jne 8061ce8
 80619f0:  mov DWORD PTR [edx+0x18], esi
 80619f3:  mov eax, DWORD PTR [ebp-0x14]
 80619f6:  mov DWORD PTR [edx+0x14], esi
 80619f9:  add esp, 0x18
 80619fc:  pop ebx
 80619fd:  pop esi
 80619fe:  pop edi
 80619ff:  pop ebp
 8061a00:  ret
 8061a01:  lea esi, [esi]
 8061a08:  lea eax, [eax+eax*4]
 8061a0b:  lea eax, [edx+eax*2]
 8061a0e:  add DWORD PTR [ebp-0x10], 0x1
 8061a12:  mov ecx, DWORD PTR [ebp-0x10]
 8061a15:  movzx edx, BYTE PTR [ecx]
 8061a18:  sub edx, 0x30
 8061a1b:  cmp edx, 0x9
 8061a1e:  jbe 8061a08
 8061a20:  mov edx, DWORD PTR [ebp+0x10]
 8061a23:  mov DWORD PTR [ebp-0x14], 0x0
 8061a2a:  mov DWORD PTR [edx+0x4], eax
 8061a2d:  jmp 8061941
 8061a32:  lea esi, [esi]
 8061a38:  movzx eax, al
 8061a3b:  jmp DWORD PTR [eax*4+0x80b1518]
 8061a42:  lea esi, [esi]
 8061a48:  mov eax, DWORD PTR [ebp+0x10]
 8061a4b:  or BYTE PTR [eax+0xd], 0x8
 8061a4f:  nop
 8061a50:  add DWORD PTR [ebp-0x10], 0x1
 8061a54:  mov edx, DWORD PTR [ebp-0x10]
 8061a57:  movzx edi, BYTE PTR [edx]
 8061a5a:  mov ecx, edi
 8061a5c:  test cl, cl
 8061a5e:  jne 80618f0
 8061a64:  jmp 80618fb
 8061a69:  lea esi, [esi]
 8061a70:  mov eax, DWORD PTR [ebp+0x10]
 8061a73:  mov DWORD PTR [eax+0x10], 0x30
 8061a7a:  jmp 8061a50
 8061a7c:  lea esi, [esi]
 8061a80:  or BYTE PTR [ebp-0x15], 0x20
 8061a84:  movzx ecx, BYTE PTR [ebp-0x15]
 8061a88:  mov eax, DWORD PTR [ebp+0x10]
 8061a8b:  mov BYTE PTR [eax+0xc], cl
 8061a8e:  jmp 8061a50
 8061a90:  or BYTE PTR [ebp-0x15], 0x40
 8061a94:  movzx eax, BYTE PTR [ebp-0x15]
 8061a98:  mov edx, DWORD PTR [ebp+0x10]
 8061a9b:  mov BYTE PTR [edx+0xc], al
 8061a9e:  jmp 8061a50
 8061aa0:  or BYTE PTR [ebp-0x15], 0x80
 8061aa4:  movzx edx, BYTE PTR [ebp-0x15]
 8061aa8:  mov ecx, DWORD PTR [ebp+0x10]
 8061aab:  mov BYTE PTR [ecx+0xc], dl
 8061aae:  jmp 8061a50
 8061ab0:  or BYTE PTR [ebp-0x15], 0x8
 8061ab4:  movzx edx, BYTE PTR [ebp-0x15]
 8061ab8:  mov ecx, DWORD PTR [ebp+0x10]
 8061abb:  mov BYTE PTR [ecx+0xc], dl
 8061abe:  jmp 8061a50
 8061ac0:  or BYTE PTR [ebp-0x15], 0x10
 8061ac4:  movzx edx, BYTE PTR [ebp-0x15]
 8061ac8:  mov ecx, DWORD PTR [ebp+0x10]
 8061acb:  mov BYTE PTR [ecx+0xc], dl
 8061ace:  jmp 8061a50
 8061ad0:  movzx eax, al
 8061ad3:  jmp DWORD PTR [eax*4+0x80b15c0]
 8061ada:  lea esi, [esi]
 8061ae0:  jmp DWORD PTR [eax*4+0x80b167c]
 8061ae7:  nop
 8061ae8:  cmp cl, 0x24
 8061aeb:  nop
 8061aec:  lea esi, [esi]
 8061af0:  jne 80618f0
 8061af6:  mov edx, DWORD PTR [ebp+0x10]
 8061af9:  lea eax, [esi-0x1]
 8061afc:  add ebx, 0x1
 8061aff:  mov ecx, DWORD PTR [ebp+0x14]
 8061b02:  mov DWORD PTR [ebp-0x10], ebx
 8061b05:  mov DWORD PTR [edx+0x24], eax
 8061b08:  mov eax, esi
 8061b0a:  mov edx, DWORD PTR [ecx]
 8061b0c:  cmp esi, edx
 8061b0e:  jb 8061e93
 8061b14:  mov edx, DWORD PTR [ebp+0x14]
 8061b17:  mov ecx, DWORD PTR [ebp-0x10]
 8061b1a:  mov DWORD PTR [edx], eax
 8061b1c:  mov eax, DWORD PTR [ebp+0x10]
 8061b1f:  movzx edi, BYTE PTR [ecx]
 8061b22:  movzx eax, BYTE PTR [eax+0xc]
 8061b26:  mov BYTE PTR [ebp-0x15], al
 8061b29:  jmp 80618f0
 8061b2e:  xchg ax, ax
 8061b30:  add eax, 0x1
 8061b33:  mov DWORD PTR [ebp-0x10], eax
 8061b36:  mov edx, eax
 8061b38:  movzx eax, BYTE PTR [eax]
 8061b3b:  cmp al, 0x2a
 8061b3d:  je 8061dc0
 8061b43:  movzx eax, al
 8061b46:  sub eax, 0x30
 8061b49:  cmp eax, 0x9
 8061b4c:  jbe 8061b66
 8061b4e:  mov ecx, DWORD PTR [ebp+0x10]
 8061b51:  mov DWORD PTR [ecx], 0x0
 8061b57:  jmp 806195d
 8061b5c:  lea esi, [esi]
 8061b60:  lea eax, [eax+eax*4]
 8061b63:  lea eax, [edx+eax*2]
 8061b66:  add DWORD PTR [ebp-0x10], 0x1
 8061b6a:  mov ecx, DWORD PTR [ebp-0x10]
 8061b6d:  movzx edx, BYTE PTR [ecx]
 8061b70:  sub edx, 0x30
 8061b73:  cmp edx, 0x9
 8061b76:  jbe 8061b60
 8061b78:  mov edx, DWORD PTR [ebp+0x10]
 8061b7b:  mov DWORD PTR [edx], eax
 8061b7d:  jmp 806195d
 8061b82:  lea esi, [esi]
 8061b88:  add ecx, 0x1
 8061b8b:  mov DWORD PTR [ebp-0x10], ecx
 8061b8e:  movzx eax, BYTE PTR [ecx]
 8061b91:  mov edx, ecx
 8061b93:  sub eax, 0x30
 8061b96:  cmp eax, 0x9
 8061b99:  jbe 8061bb8
 8061b9b:  mov ecx, DWORD PTR [ebp+0x10]
 8061b9e:  mov edi, DWORD PTR [ecx+0x20]
 8061ba1:  test edi, edi
 8061ba3:  js 8061df0
 8061ba9:  mov DWORD PTR [ebp-0x10], edx
 8061bac:  mov DWORD PTR [ebp-0x14], 0x0
 8061bb3:  jmp 8061941
 8061bb8:  mov ebx, eax
 8061bba:  mov eax, DWORD PTR [ebp-0x10]
 8061bbd:  mov esi, ecx
 8061bbf:  add esi, 0x1
 8061bc2:  movzx ecx, BYTE PTR [eax+0x1]
 8061bc6:  movzx eax, cl
 8061bc9:  lea edx, [eax-0x30]
 8061bcc:  cmp edx, 0x9
 8061bcf:  ja 8061bef
 8061bd1:  lea esi, [esi]
 8061bd8:  add esi, 0x1
 8061bdb:  movzx ecx, BYTE PTR [esi]
 8061bde:  lea eax, [ebx+ebx*4]
 8061be1:  lea ebx, [edx+eax*2]
 8061be4:  movzx eax, cl
 8061be7:  lea edx, [eax-0x30]
 8061bea:  cmp edx, 0x9
 8061bed:  jbe 8061bd8
 8061bef:  test ebx, ebx
 8061bf1:  mov edx, esi
 8061bf3:  je 8061b9b
 8061bf5:  cmp cl, 0x24
 8061bf8:  jne 8061b9b
 8061bfa:  mov edx, DWORD PTR [ebp+0x10]
 8061bfd:  lea eax, [ebx-0x1]
 8061c00:  mov ecx, DWORD PTR [ebp+0x14]
 8061c03:  mov DWORD PTR [edx+0x20], eax
 8061c06:  mov eax, ebx
 8061c08:  mov edx, DWORD PTR [ecx]
 8061c0a:  cmp ebx, edx
 8061c0c:  jae 8061c10
 8061c0e:  mov eax, edx
 8061c10:  mov edx, DWORD PTR [ebp+0x14]
 8061c13:  mov DWORD PTR [edx], eax
 8061c15:  lea edx, [esi+0x1]
 8061c18:  jmp 8061b9b
 8061c1a:  lea esi, [esi]
 8061c20:  mov ecx, DWORD PTR [ebp+0x10]
 8061c23:  or edx, 0x4
 8061c26:  mov BYTE PTR [ebp-0x15], dl
 8061c29:  mov BYTE PTR [ecx+0xc], dl
 8061c2c:  movzx ebx, BYTE PTR [esi]
 8061c2f:  cmp bl, 0x6c
 8061c32:  jne 8061c5f
 8061c34:  add esi, 0x1
 8061c37:  or BYTE PTR [ebp-0x15], 0x1
 8061c3b:  movzx eax, BYTE PTR [ebp-0x15]
 8061c3f:  lea edi, [esi+0x1]
 8061c42:  mov edx, DWORD PTR [ebp+0x10]
 8061c45:  mov BYTE PTR [edx+0xc], al
 8061c48:  movzx ebx, BYTE PTR [esi]
 8061c4b:  jmp 8061998
 8061c50:  or edx, 0x5
 8061c53:  mov ecx, DWORD PTR [ebp+0x10]
 8061c56:  mov BYTE PTR [ebp-0x15], dl
 8061c59:  mov BYTE PTR [ecx+0xc], dl
 8061c5c:  movzx ebx, BYTE PTR [esi]
 8061c5f:  lea edi, [esi+0x1]
 8061c62:  jmp 8061998
 8061c67:  nop
 8061c68:  mov ecx, DWORD PTR [ebp+0x10]
 8061c6b:  and edx, 0xfa
 8061c6e:  mov BYTE PTR [ebp-0x15], dl
 8061c71:  lea edi, [esi+0x1]
 8061c74:  mov BYTE PTR [ecx+0xc], dl
 8061c77:  movzx ebx, BYTE PTR [esi]
 8061c7a:  jmp 8061998
 8061c7f:  nop
 8061c80:  mov eax, DWORD PTR [ebp+0x10]
 8061c83:  and edx, 0xfa
 8061c86:  mov BYTE PTR [ebp-0x15], dl
 8061c89:  lea edi, [esi+0x1]
 8061c8c:  mov BYTE PTR [eax+0xc], dl
 8061c8f:  movzx ebx, BYTE PTR [esi]
 8061c92:  jmp 8061998
 8061c97:  nop
 8061c98:  cmp BYTE PTR [esi], 0x68
 8061c9b:  je 8061ea9
 8061ca1:  or edx, 0x2
 8061ca4:  jmp 8061c53
 8061ca6:  xchg ax, ax
 8061ca8:  mov edx, DWORD PTR [ebp+0x10]
 8061cab:  cmp DWORD PTR [edx+0x24], 0xff
 8061caf:  mov DWORD PTR [edx+0x28], 0x5
 8061cb6:  jne 80619e2
 8061cbc:  lea esi, [esi]
 8061cc0:  mov ecx, DWORD PTR [edx+0x2c]
 8061cc3:  test ecx, ecx
 8061cc5:  je 80619e2
 8061ccb:  mov ecx, DWORD PTR [ebp+0xc]
 8061cce:  mov eax, DWORD PTR [edx+0x2c]
 8061cd1:  add DWORD PTR [ebp-0x14], eax
 8061cd4:  mov DWORD PTR [edx+0x24], ecx
 8061cd7:  mov edx, DWORD PTR [ebp+0x10]
 8061cda:  mov eax, DWORD PTR [edx+0x8]
 8061cdd:  test eax, eax
 8061cdf:  je 80619f0
 8061ce5:  lea esi, [esi]
 8061ce8:  mov DWORD PTR [edx+0x14], edi
 8061ceb:  mov DWORD PTR [esp], edi
 8061cee:  mov DWORD PTR [esp+0x4], 0x25
 8061cf6:  call 804f010
 8061cfb:  mov edx, DWORD PTR [ebp+0x10]
 8061cfe:  mov DWORD PTR [edx+0x18], eax
 8061d01:  mov eax, DWORD PTR [ebp-0x14]
 8061d04:  add esp, 0x18
 8061d07:  pop ebx
 8061d08:  pop esi
 8061d09:  pop edi
 8061d0a:  pop ebp
 8061d0b:  ret
 8061d0c:  lea esi, [esi]
 8061d10:  mov ecx, DWORD PTR [ebp+0x10]
 8061d13:  mov DWORD PTR [ecx+0x28], 0x800
 8061d1a:  mov edx, ecx
 8061d1c:  jmp 80619d8
 8061d21:  lea esi, [esi]
 8061d28:  mov eax, DWORD PTR [ebp+0x10]
 8061d2b:  mov DWORD PTR [eax+0x28], 0x1
 8061d32:  mov edx, eax
 8061d34:  jmp 80619d8
 8061d39:  lea esi, [esi]
 8061d40:  test BYTE PTR [ebp-0x15], 0x1
 8061d44:  je 8061e08
 8061d4a:  mov eax, DWORD PTR [ebp+0x10]
 8061d4d:  mov DWORD PTR [eax+0x28], 0x100
 8061d54:  mov edx, eax
 8061d56:  jmp 80619d8
 8061d5b:  nop
 8061d5c:  lea esi, [esi]
 8061d60:  mov ecx, DWORD PTR [ebp+0x10]
 8061d63:  mov DWORD PTR [ecx+0x28], 0x3
 8061d6a:  mov edx, ecx
 8061d6c:  jmp 80619d8
 8061d71:  lea esi, [esi]
 8061d78:  mov eax, DWORD PTR [ebp+0x10]
 8061d7b:  mov DWORD PTR [eax+0x28], 0x4
 8061d82:  mov edx, eax
 8061d84:  jmp 80619d8
 8061d89:  lea esi, [esi]
 8061d90:  mov edx, DWORD PTR [ebp+0x10]
 8061d93:  mov DWORD PTR [edx+0x28], 0x2
 8061d9a:  jmp 80619d8
 8061d9f:  nop
 8061da0:  and BYTE PTR [ebp-0x15], 0x1
 8061da4:  cmp BYTE PTR [ebp-0x15], 0x1
 8061da8:  mov ecx, DWORD PTR [ebp+0x10]
 8061dab:  sbb eax, eax
 8061dad:  xor al, al
 8061daf:  add eax, 0x107
 8061db4:  mov edx, ecx
 8061db6:  mov DWORD PTR [ecx+0x28], eax
 8061db9:  jmp 80619d8
 8061dbe:  xchg ax, ax
 8061dc0:  add edx, 0x1
 8061dc3:  mov DWORD PTR [ebp-0x10], edx
 8061dc6:  movzx eax, BYTE PTR [edx]
 8061dc9:  mov ebx, edx
 8061dcb:  sub eax, 0x30
 8061dce:  cmp eax, 0x9
 8061dd1:  jbe 8061e2d
 8061dd3:  mov ecx, DWORD PTR [ebp+0x10]
 8061dd6:  mov esi, DWORD PTR [ecx+0x1c]
 8061dd9:  test esi, esi
 8061ddb:  js 8061ec3
 8061de1:  mov DWORD PTR [ebp-0x10], ebx
 8061de4:  jmp 806195d
 8061de9:  lea esi, [esi]
 8061df0:  mov edx, DWORD PTR [ebp+0xc]
 8061df3:  mov DWORD PTR [ebp-0x14], 0x1
 8061dfa:  mov DWORD PTR [ecx+0x20], edx
 8061dfd:  add edx, 0x1
 8061e00:  mov DWORD PTR [ebp+0xc], edx
 8061e03:  jmp 8061941
 8061e08:  test BYTE PTR [ebp-0x15], 0x4
 8061e0c:  jne 8061e9a
 8061e12:  test BYTE PTR [ebp-0x15], 0x2
 8061e16:  je 8061ed8
 8061e1c:  mov ecx, DWORD PTR [ebp+0x10]
 8061e1f:  mov DWORD PTR [ecx+0x28], 0x400
 8061e26:  mov edx, ecx
 8061e28:  jmp 80619d8
 8061e2d:  mov esi, eax
 8061e2f:  mov eax, DWORD PTR [ebp-0x10]
 8061e32:  mov ebx, edx
 8061e34:  add ebx, 0x1
 8061e37:  movzx ecx, BYTE PTR [eax+0x1]
 8061e3b:  movzx eax, cl
 8061e3e:  lea edx, [eax-0x30]
 8061e41:  cmp edx, 0x9
 8061e44:  ja 8061e5f
 8061e46:  xchg ax, ax
 8061e48:  add ebx, 0x1
 8061e4b:  movzx ecx, BYTE PTR [ebx]
 8061e4e:  lea eax, [esi+esi*4]
 8061e51:  lea esi, [edx+eax*2]
 8061e54:  movzx eax, cl
 8061e57:  lea edx, [eax-0x30]
 8061e5a:  cmp edx, 0x9
 8061e5d:  jbe 8061e48
 8061e5f:  test esi, esi
 8061e61:  je 8061dd3
 8061e67:  cmp cl, 0x24
 8061e6a:  jne 8061dd3
 8061e70:  mov edx, DWORD PTR [ebp+0x10]
 8061e73:  lea eax, [esi-0x1]
 8061e76:  mov ecx, DWORD PTR [ebp+0x14]
 8061e79:  mov DWORD PTR [edx+0x1c], eax
 8061e7c:  mov eax, esi
 8061e7e:  mov edx, DWORD PTR [ecx]
 8061e80:  cmp esi, edx
 8061e82:  jae 8061e86
 8061e84:  mov eax, edx
 8061e86:  mov edx, DWORD PTR [ebp+0x14]
 8061e89:  add ebx, 0x1
 8061e8c:  mov DWORD PTR [edx], eax
 8061e8e:  jmp 8061dd3
 8061e93:  mov eax, edx
 8061e95:  jmp 8061b14
 8061e9a:  mov edx, DWORD PTR [ebp+0x10]
 8061e9d:  mov DWORD PTR [edx+0x28], 0x200
 8061ea4:  jmp 80619d8
 8061ea9:  mov eax, DWORD PTR [ebp+0x10]
 8061eac:  add esi, 0x1
 8061eaf:  or ecx, 0x2
 8061eb2:  mov BYTE PTR [ebp-0x16], cl
 8061eb5:  lea edi, [esi+0x1]
 8061eb8:  mov BYTE PTR [eax+0xd], cl
 8061ebb:  movzx ebx, BYTE PTR [esi]
 8061ebe:  jmp 8061998
 8061ec3:  mov edx, DWORD PTR [ebp+0xc]
 8061ec6:  add DWORD PTR [ebp-0x14], 0x1
 8061eca:  mov DWORD PTR [ecx+0x1c], edx
 8061ecd:  add edx, 0x1
 8061ed0:  mov DWORD PTR [ebp+0xc], edx
 8061ed3:  jmp 806195d
 8061ed8:  xor eax, eax
 8061eda:  mov edx, DWORD PTR [ebp+0x10]
 8061edd:  test BYTE PTR [ebp-0x16], 0x2
 8061ee1:  setne al
 8061ee4:  mov DWORD PTR [edx+0x28], eax
 8061ee7:  jmp 80619d8
 8061eec:  mov eax, ds:0x80d2f40
 8061ef1:  mov edx, DWORD PTR [eax+edx*4]
 8061ef4:  test edx, edx
 8061ef6:  je 80619af
 8061efc:  mov eax, DWORD PTR [ebp+0x10]
 8061eff:  mov DWORD PTR [esp+0x4], 0x1
 8061f07:  add eax, 0x28
 8061f0a:  mov DWORD PTR [esp+0x8], eax
 8061f0e:  mov ecx, DWORD PTR [ebp+0x10]
 8061f11:  mov DWORD PTR [esp], ecx
 8061f14:  call edx
 8061f16:  mov edx, DWORD PTR [ebp+0x10]
 8061f19:  mov DWORD PTR [edx+0x2c], eax
 8061f1c:  jmp 80619d8
 8061f21:  nop
 8061f22:  nop
 8061f23:  nop
 8061f24:  nop
 8061f25:  nop
 8061f26:  nop
 8061f27:  nop
 8061f28:  nop
 8061f29:  nop
 8061f2a:  nop
 8061f2b:  nop
 8061f2c:  nop
 8061f2d:  nop
 8061f2e:  nop
 8061f2f:  nop

08061f30 <__fxprintf>:
 8061f30:  push ebp
 8061f31:  mov ebp, esp
 8061f33:  push edi
 8061f34:  push esi
 8061f35:  push ebx
 8061f36:  sub esp, 0x14
 8061f39:  mov edi, DWORD PTR [ebp+0x8]
 8061f3c:  mov esi, DWORD PTR [ebp+0xc]
 8061f3f:  test edi, edi
 8061f41:  je 8061fd8
 8061f47:  mov eax, DWORD PTR [edi+0x68]
 8061f4a:  test eax, eax
 8061f4c:  jle 8061fb8
 8061f4e:  mov DWORD PTR [ebp-0x10], esp
 8061f51:  mov DWORD PTR [esp], esi
 8061f54:  call 804eea0
 8061f59:  lea ebx, [eax+0x1]
 8061f5c:  lea eax, [ebx*4+0x10]
 8061f63:  sub esp, eax
 8061f65:  lea ecx, [esp+0x1f]
 8061f69:  and ecx, 0xf0
 8061f6c:  test ebx, ebx
 8061f6e:  je 8061f95
 8061f70:  movzx eax, BYTE PTR [esi]
 8061f73:  xor edx, edx
 8061f75:  test al, al
 8061f77:  jns 8061f88
 8061f79:  jmp 8061fe8
 8061f7b:  nop
 8061f7c:  lea esi, [esi]
 8061f80:  movzx eax, BYTE PTR [esi+edx]
 8061f84:  test al, al
 8061f86:  js 8061fe8
 8061f88:  movsx eax, al
 8061f8b:  mov DWORD PTR [ecx+edx*4], eax
 8061f8e:  add edx, 0x1
 8061f91:  cmp ebx, edx
 8061f93:  ja 8061f80
 8061f95:  lea eax, [ebp+0x10]
 8061f98:  mov DWORD PTR [esp], edi
 8061f9b:  mov DWORD PTR [esp+0x8], eax
 8061f9f:  mov DWORD PTR [esp+0x4], ecx
 8061fa3:  call 808e7e0
 8061fa8:  mov esp, DWORD PTR [ebp-0x10]
 8061fab:  lea esp, [ebp-0xc]
 8061fae:  pop ebx
 8061faf:  pop esi
 8061fb0:  pop edi
 8061fb1:  pop ebp
 8061fb2:  ret
 8061fb3:  nop
 8061fb4:  lea esi, [esi]
 8061fb8:  lea eax, [ebp+0x10]
 8061fbb:  mov DWORD PTR [esp+0x4], esi
 8061fbf:  mov DWORD PTR [esp], edi
 8061fc2:  mov DWORD PTR [esp+0x8], eax
 8061fc6:  call 8058740
 8061fcb:  lea esp, [ebp-0xc]
 8061fce:  pop ebx
 8061fcf:  pop esi
 8061fd0:  pop edi
 8061fd1:  pop ebp
 8061fd2:  ret
 8061fd3:  nop
 8061fd4:  lea esi, [esi]
 8061fd8:  mov edi, DWORD PTR ds:0x80d11e4
 8061fde:  jmp 8061f47
 8061fe3:  nop
 8061fe4:  lea esi, [esi]
 8061fe8:  mov DWORD PTR [esp+0xc], 0x80b1781
 8061ff0:  mov DWORD PTR [esp+0x8], 0x2d
 8061ff8:  mov DWORD PTR [esp+0x4], 0x80b175c
 8062000:  mov DWORD PTR [esp], 0x80b1767
 8062007:  call 8051490
 806200c:  nop
 806200d:  nop
 806200e:  nop
 806200f:  nop

08062010 <_IO_new_fclose>:
 8062010:  push ebp
 8062011:  mov ebp, esp
 8062013:  push edi
 8062014:  push esi
 8062015:  push ebx
 8062016:  sub esp, 0x8
 8062019:  mov esi, DWORD PTR [ebp+0x8]
 806201c:  mov edx, DWORD PTR [esi]
 806201e:  test dh, 0x20
 8062021:  jne 8062158
 8062027:  test dx, dx
 806202a:  js 8062064
 806202c:  mov edi, DWORD PTR [esi+0x48]
 806202f:  mov ebx, DWORD PTR gs:0x8
 8062036:  cmp DWORD PTR [edi+0x8], ebx
 8062039:  je 806205e
 806203b:  xor edx, edx
 806203d:  mov ecx, 0x1
 8062042:  mov eax, edx
 8062044:  cmp DWORD PTR gs:0xc, 0x0
 806204c:  je 806204f
 806204e:  cmpxchg DWORD PTR [edi], ecx
 8062052:  jne 80621bb
 8062058:  mov edi, DWORD PTR [esi+0x48]
 806205b:  mov DWORD PTR [edi+0x8], ebx
 806205e:  add DWORD PTR [edi+0x4], 0x1
 8062062:  mov edx, DWORD PTR [esi]
 8062064:  test dh, 0x20
 8062067:  jne 8062140
 806206d:  mov eax, edx
 806206f:  and eax, 0x20
 8062072:  cmp eax, 0x1
 8062075:  sbb edi, edi
 8062077:  not edi
 8062079:  test dx, dx
 806207c:  js 8062092
 806207e:  mov edx, DWORD PTR [esi+0x48]
 8062081:  mov eax, DWORD PTR [edx+0x4]
 8062084:  sub eax, 0x1
 8062087:  test eax, eax
 8062089:  mov DWORD PTR [edx+0x4], eax
 806208c:  je 8062168
 8062092:  mov eax, DWORD PTR [esi+0x94]
 8062098:  mov DWORD PTR [esp+0x4], 0x0
 80620a0:  mov DWORD PTR [esp], esi
 80620a3:  call DWORD PTR [eax+0x8]
 80620a6:  mov edx, DWORD PTR [esi+0x68]
 80620a9:  test edx, edx
 80620ab:  jle 8062128
 80620ad:  mov ebx, DWORD PTR [esi+0x54]
 80620b0:  xor eax, eax
 80620b2:  mov ecx, 0x1
 80620b7:  cmp DWORD PTR gs:0xc, 0x0
 80620bf:  je 80620c2
 80620c1:  cmpxchg DWORD PTR ds:0x80d2ed4, ecx
 80620c9:  jne 80621c7
 80620cf:  mov eax, DWORD PTR [ebx+0x24]
 80620d2:  call 80803a0
 80620d7:  mov eax, DWORD PTR [ebx+0x50]
 80620da:  call 80803a0
 80620df:  cmp DWORD PTR gs:0xc, 0x0
 80620e7:  je 80620ea
 80620e9:  sub DWORD PTR ds:0x80d2ed4, 0x1
 80620f1:  jne 80621d7
 80620f7:  cmp esi, DWORD PTR ds:0x80d11dc
 80620fd:  je 806211d
 80620ff:  cmp esi, DWORD PTR ds:0x80d11e0
 8062105:  je 806211d
 8062107:  cmp esi, DWORD PTR ds:0x80d11e4
 806210d:  je 806211d
 806210f:  mov DWORD PTR [esi], 0x0
 8062115:  mov DWORD PTR [esp], esi
 8062118:  call 804b4a0
 806211d:  add esp, 0x8
 8062120:  mov eax, edi
 8062122:  pop ebx
 8062123:  pop esi
 8062124:  pop edi
 8062125:  pop ebp
 8062126:  ret
 8062127:  nop
 8062128:  mov eax, DWORD PTR [esi+0x24]
 806212b:  test eax, eax
 806212d:  je 80620f7
 806212f:  mov DWORD PTR [esp], esi
 8062132:  call 8068a50
 8062137:  nop
 8062138:  jmp 80620f7
 806213a:  lea esi, [esi]
 8062140:  mov DWORD PTR [esp], esi
 8062143:  call 8067700
 8062148:  mov edi, eax
 806214a:  mov edx, DWORD PTR [esi]
 806214c:  lea esi, [esi]
 8062150:  jmp 8062079
 8062155:  lea esi, [esi]
 8062158:  mov DWORD PTR [esp], esi
 806215b:  call 8069980
 8062160:  mov edx, DWORD PTR [esi]
 8062162:  jmp 8062027
 8062167:  nop
 8062168:  mov DWORD PTR [edx+0x8], 0x0
 806216f:  cmp DWORD PTR gs:0xc, 0x0
 8062177:  je 806217a
 8062179:  sub DWORD PTR [edx], 0x1
 806217d:  jne 80621e7
 806217f:  jmp 8062092
 8062184:  cmp WORD PTR [esi], 0x0
 8062188:  mov ecx, eax
 806218a:  js 80621b3
 806218c:  mov edx, DWORD PTR [esi+0x48]
 806218f:  mov eax, DWORD PTR [edx+0x4]
 8062192:  sub eax, 0x1
 8062195:  test eax, eax
 8062197:  mov DWORD PTR [edx+0x4], eax
 806219a:  jne 80621b3
 806219c:  mov DWORD PTR [edx+0x8], 0x0
 80621a3:  cmp DWORD PTR gs:0xc, 0x0
 80621ab:  je 80621ae
 80621ad:  sub DWORD PTR [edx], 0x1
 80621b1:  jne 80621f0
 80621b3:  mov DWORD PTR [esp], ecx
 80621b6:  call 80abe50

080621bb <_L_lock_40>:
 80621bb:  lea ecx, [edi]
 80621bd:  call 8050230
 80621c2:  jmp 8062058

080621c7 <_L_lock_103>:
 80621c7:  lea ecx, ds:0x80d2ed4
 80621cd:  call 8050230
 80621d2:  jmp 80620cf

080621d7 <_L_unlock_113>:
 80621d7:  lea eax, ds:0x80d2ed4
 80621dd:  call 8050260
 80621e2:  jmp 80620f7

080621e7 <_L_unlock_202>:
 80621e7:  lea eax, [edx]
 80621e9:  call 8050260
 80621ee:  jmp 806217f

080621f0 <_L_unlock_232>:
 80621f0:  lea eax, [edx]
 80621f2:  call 8050260
 80621f7:  jmp 80621b3
 80621f9:  nop
 80621fa:  nop
 80621fb:  nop
 80621fc:  nop
 80621fd:  nop
 80621fe:  nop
 80621ff:  nop

08062200 <_IO_fflush>:
 8062200:  push ebp
 8062201:  mov ebp, esp
 8062203:  sub esp, 0x10
 8062206:  mov DWORD PTR [ebp-0xc], ebx
 8062209:  mov ebx, DWORD PTR [ebp+0x8]
 806220c:  mov DWORD PTR [ebp-0x8], esi
 806220f:  mov DWORD PTR [ebp-0x4], edi
 8062212:  test ebx, ebx
 8062214:  je 80622a8
 806221a:  cmp WORD PTR [ebx], 0x0
 806221e:  js 8062258
 8062220:  mov edi, DWORD PTR [ebx+0x48]
 8062223:  mov esi, DWORD PTR gs:0x8
 806222a:  cmp DWORD PTR [edi+0x8], esi
 806222d:  je 8062254
 806222f:  xor edx, edx
 8062231:  mov ecx, 0x1
 8062236:  mov eax, edx
 8062238:  cmp DWORD PTR gs:0xc, 0x0
 8062240:  je 8062243
 8062242:  cmpxchg DWORD PTR [edi], ecx
 8062246:  jne 80622f0
 806224c:  mov eax, DWORD PTR [ebx+0x48]
 806224f:  mov DWORD PTR [eax+0x8], esi
 8062252:  mov edi, eax
 8062254:  add DWORD PTR [edi+0x4], 0x1
 8062258:  mov eax, DWORD PTR [ebx+0x94]
 806225e:  mov DWORD PTR [esp], ebx
 8062261:  call DWORD PTR [eax+0x30]
 8062264:  cmp eax, 0x1
 8062267:  sbb edx, edx
 8062269:  cmp WORD PTR [ebx], 0x0
 806226d:  not edx
 806226f:  js 8062298
 8062271:  mov ecx, DWORD PTR [ebx+0x48]
 8062274:  mov eax, DWORD PTR [ecx+0x4]
 8062277:  sub eax, 0x1
 806227a:  test eax, eax
 806227c:  mov DWORD PTR [ecx+0x4], eax
 806227f:  jne 8062298
 8062281:  mov DWORD PTR [ecx+0x8], 0x0
 8062288:  cmp DWORD PTR gs:0xc, 0x0
 8062290:  je 8062293
 8062292:  sub DWORD PTR [ecx], 0x1
 8062296:  jne 80622fc
 8062298:  mov ebx, DWORD PTR [ebp-0xc]
 806229b:  mov eax, edx
 806229d:  mov esi, DWORD PTR [ebp-0x8]
 80622a0:  mov edi, DWORD PTR [ebp-0x4]
 80622a3:  mov esp, ebp
 80622a5:  pop ebp
 80622a6:  ret
 80622a7:  nop
 80622a8:  mov ebx, DWORD PTR [ebp-0xc]
 80622ab:  mov esi, DWORD PTR [ebp-0x8]
 80622ae:  mov edi, DWORD PTR [ebp-0x4]
 80622b1:  mov esp, ebp
 80622b3:  pop ebp
 80622b4:  jmp 80697b0
 80622b9:  cmp WORD PTR [ebx], 0x0
 80622bd:  mov ecx, eax
 80622bf:  js 80622e8
 80622c1:  mov edx, DWORD PTR [ebx+0x48]
 80622c4:  mov eax, DWORD PTR [edx+0x4]
 80622c7:  sub eax, 0x1
 80622ca:  test eax, eax
 80622cc:  mov DWORD PTR [edx+0x4], eax
 80622cf:  jne 80622e8
 80622d1:  mov DWORD PTR [edx+0x8], 0x0
 80622d8:  cmp DWORD PTR gs:0xc, 0x0
 80622e0:  je 80622e3
 80622e2:  sub DWORD PTR [edx], 0x1
 80622e6:  jne 8062305
 80622e8:  mov DWORD PTR [esp], ecx
 80622eb:  call 80abe50

080622f0 <_L_lock_39>:
 80622f0:  lea ecx, [edi]
 80622f2:  call 8050230
 80622f7:  jmp 806224c

080622fc <_L_unlock_83>:
 80622fc:  lea eax, [ecx]
 80622fe:  call 8050260
 8062303:  jmp 8062298

08062305 <_L_unlock_142>:
 8062305:  lea eax, [edx]
 8062307:  call 8050260
 806230c:  jmp 80622e8
 806230e:  nop
 806230f:  nop

08062310 <__fopen_maybe_mmap>:
 8062310:  push ebp
 8062311:  mov ebp, esp
 8062313:  mov edx, DWORD PTR [ebp+0x8]
 8062316:  test BYTE PTR [edx+0x3c], 0x1
 806231a:  je 806233f
 806231c:  test BYTE PTR [edx], 0x8
 806231f:  je 806233f
 8062321:  mov eax, DWORD PTR [edx+0x68]
 8062324:  test eax, eax
 8062326:  jle 8062348
 8062328:  mov DWORD PTR [edx+0x94], 0x80b1940
 8062332:  mov eax, DWORD PTR [edx+0x58]
 8062335:  mov DWORD PTR [eax+0xb8], 0x80b1940
 806233f:  mov eax, edx
 8062341:  pop ebp
 8062342:  ret
 8062343:  nop
 8062344:  lea esi, [esi]
 8062348:  mov DWORD PTR [edx+0x94], 0x80b1bc0
 8062352:  jmp 8062332
 8062354:  lea esi, [esi]
 806235a:  lea edi, [edi]

08062360 <__fopen_internal>:
 8062360:  push ebp
 8062361:  mov ebp, esp
 8062363:  push esi
 8062364:  xor esi, esi
 8062366:  push ebx
 8062367:  sub esp, 0x14
 806236a:  mov DWORD PTR [esp], 0x160
 8062371:  call 804d6f0
 8062376:  test eax, eax
 8062378:  mov ebx, eax
 806237a:  je 8062419
 8062380:  lea eax, [eax+0x98]
 8062386:  mov esi, ebx
 8062388:  mov DWORD PTR [ebx+0x48], eax
 806238b:  lea eax, [ebx+0xa4]
 8062391:  mov DWORD PTR [esp+0xc], eax
 8062395:  mov DWORD PTR [esp+0x10], 0x80b1880
 806239d:  mov DWORD PTR [esp+0x8], 0x0
 80623a5:  mov DWORD PTR [esp+0x4], 0x0
 80623ad:  mov DWORD PTR [esp], ebx
 80623b0:  call 8069b90
 80623b5:  mov DWORD PTR [ebx+0x94], 0x80b1b00
 80623bf:  mov DWORD PTR [esp], ebx
 80623c2:  call 80673c0
 80623c7:  mov eax, DWORD PTR [ebp+0x10]
 80623ca:  mov DWORD PTR [esp], ebx
 80623cd:  mov DWORD PTR [esp+0xc], eax
 80623d1:  mov eax, DWORD PTR [ebp+0xc]
 80623d4:  mov DWORD PTR [esp+0x8], eax
 80623d8:  mov eax, DWORD PTR [ebp+0x8]
 80623db:  mov DWORD PTR [esp+0x4], eax
 80623df:  call 8067890
 80623e4:  test eax, eax
 80623e6:  je 8062434
 80623e8:  test BYTE PTR [ebx+0x3c], 0x1
 80623ec:  je 8062419
 80623ee:  test BYTE PTR [ebx], 0x8
 80623f1:  lea esi, [esi]
 80623f8:  je 8062419
 80623fa:  mov edx, DWORD PTR [ebx+0x68]
 80623fd:  test edx, edx
 80623ff:  nop
 8062400:  jle 8062428
 8062402:  mov DWORD PTR [ebx+0x94], 0x80b1940
 806240c:  mov eax, DWORD PTR [ebx+0x58]
 806240f:  mov DWORD PTR [eax+0xb8], 0x80b1940
 8062419:  add esp, 0x14
 806241c:  mov eax, esi
 806241e:  pop ebx
 806241f:  pop esi
 8062420:  pop ebp
 8062421:  ret
 8062422:  lea esi, [esi]
 8062428:  mov DWORD PTR [ebx+0x94], 0x80b1bc0
 8062432:  jmp 806240c
 8062434:  mov DWORD PTR [esp], ebx
 8062437:  xor esi, esi
 8062439:  call 8069980
 806243e:  mov DWORD PTR [esp], ebx
 8062441:  call 804b4a0
 8062446:  jmp 8062419
 8062448:  nop
 8062449:  lea esi, [esi]

08062450 <_IO_new_fopen>:
 8062450:  push ebp
 8062451:  mov ebp, esp
 8062453:  push esi
 8062454:  xor esi, esi
 8062456:  push ebx
 8062457:  sub esp, 0x14
 806245a:  mov DWORD PTR [esp], 0x160
 8062461:  call 804d6f0
 8062466:  test eax, eax
 8062468:  mov ebx, eax
 806246a:  je 8062509
 8062470:  lea eax, [eax+0x98]
 8062476:  mov esi, ebx
 8062478:  mov DWORD PTR [ebx+0x48], eax
 806247b:  lea eax, [ebx+0xa4]
 8062481:  mov DWORD PTR [esp+0xc], eax
 8062485:  mov DWORD PTR [esp+0x10], 0x80b1880
 806248d:  mov DWORD PTR [esp+0x8], 0x0
 8062495:  mov DWORD PTR [esp+0x4], 0x0
 806249d:  mov DWORD PTR [esp], ebx
 80624a0:  call 8069b90
 80624a5:  mov DWORD PTR [ebx+0x94], 0x80b1b00
 80624af:  mov DWORD PTR [esp], ebx
 80624b2:  call 80673c0
 80624b7:  mov eax, DWORD PTR [ebp+0xc]
 80624ba:  mov DWORD PTR [esp+0xc], 0x1
 80624c2:  mov DWORD PTR [esp], ebx
 80624c5:  mov DWORD PTR [esp+0x8], eax
 80624c9:  mov eax, DWORD PTR [ebp+0x8]
 80624cc:  mov DWORD PTR [esp+0x4], eax
 80624d0:  call 8067890
 80624d5:  test eax, eax
 80624d7:  je 8062524
 80624d9:  test BYTE PTR [ebx+0x3c], 0x1
 80624dd:  je 8062509
 80624df:  test BYTE PTR [ebx], 0x8
 80624e2:  lea esi, [esi]
 80624e8:  je 8062509
 80624ea:  mov ecx, DWORD PTR [ebx+0x68]
 80624ed:  test ecx, ecx
 80624ef:  nop
 80624f0:  jle 8062518
 80624f2:  mov DWORD PTR [ebx+0x94], 0x80b1940
 80624fc:  mov eax, DWORD PTR [ebx+0x58]
 80624ff:  mov DWORD PTR [eax+0xb8], 0x80b1940
 8062509:  add esp, 0x14
 806250c:  mov eax, esi
 806250e:  pop ebx
 806250f:  pop esi
 8062510:  pop ebp
 8062511:  ret
 8062512:  lea esi, [esi]
 8062518:  mov DWORD PTR [ebx+0x94], 0x80b1bc0
 8062522:  jmp 80624fc
 8062524:  mov DWORD PTR [esp], ebx
 8062527:  xor esi, esi
 8062529:  call 8069980
 806252e:  mov DWORD PTR [esp], ebx
 8062531:  call 804b4a0
 8062536:  jmp 8062509
 8062538:  nop
 8062539:  nop
 806253a:  nop
 806253b:  nop
 806253c:  nop
 806253d:  nop
 806253e:  nop
 806253f:  nop

08062540 <_IO_ftell>:
 8062540:  push ebp
 8062541:  mov ebp, esp
 8062543:  sub esp, 0x24
 8062546:  mov eax, DWORD PTR [ebp+0x8]
 8062549:  mov DWORD PTR [ebp-0xc], ebx
 806254c:  mov DWORD PTR [ebp-0x8], esi
 806254f:  mov DWORD PTR [ebp-0x4], edi
 8062552:  cmp WORD PTR [eax], 0x0
 8062556:  js 8062594
 8062558:  mov esi, DWORD PTR [eax+0x48]
 806255b:  mov ebx, DWORD PTR gs:0x8
 8062562:  cmp DWORD PTR [esi+0x8], ebx
 8062565:  je 806258d
 8062567:  xor edx, edx
 8062569:  mov ecx, 0x1
 806256e:  mov eax, edx
 8062570:  cmp DWORD PTR gs:0xc, 0x0
 8062578:  je 806257b
 806257a:  cmpxchg DWORD PTR [esi], ecx
 806257e:  jne 80626ef
 8062584:  mov edx, DWORD PTR [ebp+0x8]
 8062587:  mov esi, DWORD PTR [edx+0x48]
 806258a:  mov DWORD PTR [esi+0x8], ebx
 806258d:  add DWORD PTR [esi+0x4], 0x1
 8062591:  mov eax, DWORD PTR [ebp+0x8]
 8062594:  mov DWORD PTR [esp+0x10], 0x0
 806259c:  mov DWORD PTR [esp+0xc], 0x1
 80625a4:  mov DWORD PTR [esp+0x4], 0x0
 80625ac:  mov DWORD PTR [esp+0x8], 0x0
 80625b4:  mov DWORD PTR [esp], eax
 80625b7:  call 8062950
 80625bc:  mov esi, edx
 80625be:  mov edx, DWORD PTR [ebp+0x8]
 80625c1:  mov ebx, eax
 80625c3:  mov edx, DWORD PTR [edx]
 80625c5:  mov DWORD PTR [ebp-0x10], edx
 80625c8:  and dh, 0x1
 80625cb:  je 8062639
 80625cd:  mov edi, esi
 80625cf:  mov ecx, ebx
 80625d1:  not edi
 80625d3:  not ecx
 80625d5:  mov eax, edi
 80625d7:  or eax, ecx
 80625d9:  jne 8062620
 80625db:  cmp WORD PTR [ebp-0x10], 0x0
 80625e0:  js 80625f5
 80625e2:  mov eax, DWORD PTR [ebp+0x8]
 80625e5:  mov edx, DWORD PTR [eax+0x48]
 80625e8:  mov eax, DWORD PTR [edx+0x4]
 80625eb:  sub eax, 0x1
 80625ee:  test eax, eax
 80625f0:  mov DWORD PTR [edx+0x4], eax
 80625f3:  je 8062648
 80625f5:  or edi, ecx
 80625f7:  je 8062688
 80625fd:  mov edx, ebx
 80625ff:  mov eax, ebx
 8062601:  sar edx, 0x1f
 8062604:  xor eax, ebx
 8062606:  mov ecx, edx
 8062608:  mov edi, ebx
 806260a:  xor ecx, esi
 806260c:  or ecx, eax
 806260e:  jne 8062668
 8062610:  mov eax, edi
 8062612:  mov ebx, DWORD PTR [ebp-0xc]
 8062615:  mov esi, DWORD PTR [ebp-0x8]
 8062618:  mov edi, DWORD PTR [ebp-0x4]
 806261b:  mov esp, ebp
 806261d:  pop ebp
 806261e:  ret
 806261f:  nop
 8062620:  mov edx, DWORD PTR [ebp+0x8]
 8062623:  mov eax, DWORD PTR [edx+0x68]
 8062626:  test eax, eax
 8062628:  jg 80625db
 806262a:  mov eax, DWORD PTR [edx+0x2c]
 806262d:  sub eax, DWORD PTR [edx+0x24]
 8062630:  mov edx, eax
 8062632:  sar edx, 0x1f
 8062635:  sub ebx, eax
 8062637:  sbb esi, edx
 8062639:  mov edi, esi
 806263b:  mov ecx, ebx
 806263d:  not edi
 806263f:  not ecx
 8062641:  jmp 80625db
 8062643:  nop
 8062644:  lea esi, [esi]
 8062648:  mov DWORD PTR [edx+0x8], 0x0
 806264f:  cmp DWORD PTR gs:0xc, 0x0
 8062657:  je 806265a
 8062659:  sub DWORD PTR [edx], 0x1
 806265d:  jne 80626fb
 8062663:  jmp 80625f5
 8062665:  lea esi, [esi]
 8062668:  mov edx, 0xffffffe8
 806266e:  mov edi, 0xffffffff
 8062673:  mov eax, gs:0x0
 8062679:  mov DWORD PTR [eax+edx], 0x4b
 8062680:  jmp 8062610
 8062682:  lea esi, [esi]
 8062688:  mov edx, DWORD PTR gs:0x0
 806268f:  mov edi, 0xffffffff
 8062694:  mov eax, 0xffffffe8
 8062699:  mov ecx, DWORD PTR [edx+eax]
 806269c:  test ecx, ecx
 806269e:  jne 8062610
 80626a4:  mov DWORD PTR [edx+eax], 0x5
 80626ab:  mov edi, 0xffffffff
 80626b0:  jmp 8062610
 80626b5:  mov ecx, eax
 80626b7:  mov eax, DWORD PTR [ebp+0x8]
 80626ba:  cmp WORD PTR [eax], 0x0
 80626be:  js 80626e7
 80626c0:  mov edx, DWORD PTR [eax+0x48]
 80626c3:  mov eax, DWORD PTR [edx+0x4]
 80626c6:  sub eax, 0x1
 80626c9:  test eax, eax
 80626cb:  mov DWORD PTR [edx+0x4], eax
 80626ce:  jne 80626e7
 80626d0:  mov DWORD PTR [edx+0x8], 0x0
 80626d7:  cmp DWORD PTR gs:0xc, 0x0
 80626df:  je 80626e2
 80626e1:  sub DWORD PTR [edx], 0x1
 80626e5:  jne 8062707
 80626e7:  mov DWORD PTR [esp], ecx
 80626ea:  call 80abe50

080626ef <_L_lock_38>:
 80626ef:  lea ecx, [esi]
 80626f1:  call 8050230
 80626f6:  jmp 8062584

080626fb <_L_unlock_170>:
 80626fb:  lea eax, [edx]
 80626fd:  call 8050260
 8062702:  jmp 8062663

08062707 <_L_unlock_227>:
 8062707:  lea eax, [edx]
 8062709:  call 8050260
 806270e:  jmp 80626e7

08062710 <_IO_fwrite>:
 8062710:  push ebp
 8062711:  mov ebp, esp
 8062713:  sub esp, 0x28
 8062716:  mov DWORD PTR [ebp-0xc], ebx
 8062719:  mov ebx, DWORD PTR [ebp+0x10]
 806271c:  mov DWORD PTR [ebp-0x4], edi
 806271f:  mov edi, DWORD PTR [ebp+0xc]
 8062722:  mov DWORD PTR [ebp-0x8], esi
 8062725:  mov esi, DWORD PTR [ebp+0x14]
 8062728:  imul edi, ebx
 806272b:  test edi, edi
 806272d:  je 8062808
 8062733:  cmp WORD PTR [esi], 0x0
 8062737:  js 8062782
 8062739:  mov edx, DWORD PTR [esi+0x48]
 806273c:  mov eax, gs:0x8
 8062742:  mov DWORD PTR [ebp-0x14], eax
 8062745:  cmp DWORD PTR [edx+0x8], eax
 8062748:  mov DWORD PTR [ebp-0x18], edx
 806274b:  je 806277b
 806274d:  mov DWORD PTR [ebp-0x1c], 0x0
 8062754:  mov ecx, 0x1
 8062759:  xor eax, eax
 806275b:  cmp DWORD PTR gs:0xc, 0x0
 8062763:  je 8062766
 8062765:  cmpxchg DWORD PTR [edx], ecx
 8062769:  jne 8062860
 806276f:  mov eax, DWORD PTR [esi+0x48]
 8062772:  mov edx, DWORD PTR [ebp-0x14]
 8062775:  mov DWORD PTR [ebp-0x18], eax
 8062778:  mov DWORD PTR [eax+0x8], edx
 806277b:  mov eax, DWORD PTR [ebp-0x18]
 806277e:  add DWORD PTR [eax+0x4], 0x1
 8062782:  mov eax, DWORD PTR [esi+0x68]
 8062785:  test eax, eax
 8062787:  jne 80627b8
 8062789:  mov DWORD PTR [esi+0x68], 0xffffffff
 8062790:  mov eax, DWORD PTR [esi+0x94]
 8062796:  mov edx, DWORD PTR [ebp+0x8]
 8062799:  mov DWORD PTR [esp+0x8], edi
 806279d:  mov DWORD PTR [esp], esi
 80627a0:  mov DWORD PTR [esp+0x4], edx
 80627a4:  call DWORD PTR [eax+0x1c]
 80627a7:  cmp eax, 0xff
 80627aa:  mov ecx, eax
 80627ac:  sete BYTE PTR [ebp-0xd]
 80627b0:  jmp 80627c3
 80627b2:  lea esi, [esi]
 80627b8:  xor ecx, ecx
 80627ba:  add eax, 0x1
 80627bd:  mov BYTE PTR [ebp-0xd], 0x0
 80627c1:  je 8062790
 80627c3:  cmp WORD PTR [esi], 0x0
 80627c7:  js 80627d9
 80627c9:  mov edx, DWORD PTR [esi+0x48]
 80627cc:  mov eax, DWORD PTR [edx+0x4]
 80627cf:  sub eax, 0x1
 80627d2:  test eax, eax
 80627d4:  mov DWORD PTR [edx+0x4], eax
 80627d7:  je 8062810
 80627d9:  cmp ecx, edi
 80627db:  je 80627e8
 80627dd:  cmp BYTE PTR [ebp-0xd], 0x0
 80627e1:  je 80627f8
 80627e3:  nop
 80627e4:  lea esi, [esi]
 80627e8:  mov eax, ebx
 80627ea:  mov esi, DWORD PTR [ebp-0x8]
 80627ed:  mov ebx, DWORD PTR [ebp-0xc]
 80627f0:  mov edi, DWORD PTR [ebp-0x4]
 80627f3:  mov esp, ebp
 80627f5:  pop ebp
 80627f6:  ret
 80627f7:  nop
 80627f8:  mov eax, ecx
 80627fa:  xor edx, edx
 80627fc:  div DWORD PTR [ebp+0xc]
 80627ff:  mov ebx, eax
 8062801:  jmp 80627e8
 8062803:  nop
 8062804:  lea esi, [esi]
 8062808:  xor ebx, ebx
 806280a:  jmp 80627e8
 806280c:  lea esi, [esi]
 8062810:  mov DWORD PTR [edx+0x8], 0x0
 8062817:  cmp DWORD PTR gs:0xc, 0x0
 806281f:  je 8062822
 8062821:  sub DWORD PTR [edx], 0x1
 8062825:  jne 806286c
 8062827:  jmp 80627d9
 8062829:  cmp WORD PTR [esi], 0x0
 806282d:  mov ecx, eax
 806282f:  js 8062858
 8062831:  mov edx, DWORD PTR [esi+0x48]
 8062834:  mov eax, DWORD PTR [edx+0x4]
 8062837:  sub eax, 0x1
 806283a:  test eax, eax
 806283c:  mov DWORD PTR [edx+0x4], eax
 806283f:  jne 8062858
 8062841:  mov DWORD PTR [edx+0x8], 0x0
 8062848:  cmp DWORD PTR gs:0xc, 0x0
 8062850:  je 8062853
 8062852:  sub DWORD PTR [edx], 0x1
 8062856:  jne 8062875
 8062858:  mov DWORD PTR [esp], ecx
 806285b:  call 80abe50

08062860 <_L_lock_50>:
 8062860:  lea ecx, [edx]
 8062862:  call 8050230
 8062867:  jmp 806276f

0806286c <_L_unlock_197>:
 806286c:  lea eax, [edx]
 806286e:  call 8050260
 8062873:  jmp 8062827

08062875 <_L_unlock_227>:
 8062875:  lea eax, [edx]
 8062877:  call 8050260
 806287c:  jmp 8062858
 806287e:  nop
 806287f:  nop

08062880 <_IO_padn>:
 8062880:  push ebp
 8062881:  mov ebp, esp
 8062883:  push edi
 8062884:  mov edi, 0x80b178c
 8062889:  push esi
 806288a:  push ebx
 806288b:  sub esp, 0x1c
 806288e:  mov eax, DWORD PTR [ebp+0xc]
 8062891:  cmp eax, 0x20
 8062894:  je 80628d3
 8062896:  cmp eax, 0x30
 8062899:  mov edi, 0x80b179c
 806289e:  je 80628d3
 80628a0:  mov BYTE PTR [ebp-0xd], al
 80628a3:  lea edi, [ebp-0x1c]
 80628a6:  mov BYTE PTR [ebp-0xe], al
 80628a9:  mov BYTE PTR [ebp-0xf], al
 80628ac:  mov BYTE PTR [ebp-0x10], al
 80628af:  mov BYTE PTR [ebp-0x11], al
 80628b2:  mov BYTE PTR [ebp-0x12], al
 80628b5:  mov BYTE PTR [ebp-0x13], al
 80628b8:  mov BYTE PTR [ebp-0x14], al
 80628bb:  mov BYTE PTR [ebp-0x15], al
 80628be:  mov BYTE PTR [ebp-0x16], al
 80628c1:  mov BYTE PTR [ebp-0x17], al
 80628c4:  mov BYTE PTR [ebp-0x18], al
 80628c7:  mov BYTE PTR [ebp-0x19], al
 80628ca:  mov BYTE PTR [ebp-0x1a], al
 80628cd:  mov BYTE PTR [ebp-0x1b], al
 80628d0:  mov BYTE PTR [ebp-0x1c], al
 80628d3:  mov ebx, DWORD PTR [ebp+0x10]
 80628d6:  xor esi, esi
 80628d8:  xor eax, eax
 80628da:  cmp ebx, 0xf
 80628dd:  jg 80628f0
 80628df:  jmp 8062922
 80628e1:  lea esi, [esi]
 80628e8:  sub ebx, 0x10
 80628eb:  cmp ebx, 0xf
 80628ee:  jle 8062920
 80628f0:  mov edx, DWORD PTR [ebp+0x8]
 80628f3:  mov eax, DWORD PTR [edx+0x94]
 80628f9:  mov DWORD PTR [esp+0x8], 0x10
 8062901:  mov DWORD PTR [esp+0x4], edi
 8062905:  mov DWORD PTR [esp], edx
 8062908:  call DWORD PTR [eax+0x1c]
 806290b:  add esi, eax
 806290d:  cmp eax, 0x10
 8062910:  je 80628e8
 8062912:  mov eax, esi
 8062914:  add esp, 0x1c
 8062917:  pop ebx
 8062918:  pop esi
 8062919:  pop edi
 806291a:  pop ebp
 806291b:  ret
 806291c:  lea esi, [esi]
 8062920:  mov eax, esi
 8062922:  test ebx, ebx
 8062924:  jle 8062914
 8062926:  mov edx, DWORD PTR [ebp+0x8]
 8062929:  mov eax, DWORD PTR [edx+0x94]
 806292f:  mov DWORD PTR [esp+0x8], ebx
 8062933:  mov DWORD PTR [esp+0x4], edi
 8062937:  mov DWORD PTR [esp], edx
 806293a:  call DWORD PTR [eax+0x1c]
 806293d:  add esp, 0x1c
 8062940:  pop ebx
 8062941:  add eax, esi
 8062943:  pop esi
 8062944:  pop edi
 8062945:  pop ebp
 8062946:  ret
 8062947:  nop
 8062948:  nop
 8062949:  nop
 806294a:  nop
 806294b:  nop
 806294c:  nop
 806294d:  nop
 806294e:  nop
 806294f:  nop

08062950 <_IO_seekoff_unlocked>:
 8062950:  push ebp
 8062951:  mov ebp, esp
 8062953:  sub esp, 0x18
 8062956:  mov eax, DWORD PTR [ebp+0x14]
 8062959:  mov edx, DWORD PTR [ebp+0x18]
 806295c:  mov DWORD PTR [ebp-0xc], ebx
 806295f:  mov ebx, DWORD PTR [ebp+0x8]
 8062962:  mov DWORD PTR [ebp-0x8], esi
 8062965:  mov esi, DWORD PTR [ebp+0xc]
 8062968:  cmp eax, 0x2
 806296b:  mov DWORD PTR [ebp-0x4], edi
 806296e:  mov edi, DWORD PTR [ebp+0x10]
 8062971:  mov DWORD PTR [ebp-0x10], eax
 8062974:  mov DWORD PTR [ebp-0x14], edx
 8062977:  ja 8062a28
 806297d:  mov ecx, DWORD PTR [ebp-0x14]
 8062980:  test ecx, ecx
 8062982:  je 80629b5
 8062984:  mov ecx, DWORD PTR [ebx+0x68]
 8062987:  cmp ecx, 0x0
 806298a:  jl 80629e8
 806298c:  lea esi, [esi]
 8062990:  je 80629b5
 8062992:  mov eax, DWORD PTR [ebx+0x58]
 8062995:  mov eax, DWORD PTR [eax+0x20]
 8062998:  test eax, eax
 806299a:  je 80629b5
 806299c:  cmp DWORD PTR [ebp-0x10], 0x1
 80629a0:  je 80629f5
 80629a2:  test ecx, ecx
 80629a4:  js 8062a18
 80629a6:  mov DWORD PTR [esp], ebx
 80629a9:  lea esi, [esi]
 80629b0:  call 8063060
 80629b5:  mov edx, DWORD PTR [ebp-0x14]
 80629b8:  mov eax, DWORD PTR [ebx+0x94]
 80629be:  mov DWORD PTR [ebp+0xc], esi
 80629c1:  mov esi, DWORD PTR [ebp-0x8]
 80629c4:  mov DWORD PTR [ebp+0x10], edi
 80629c7:  mov edi, DWORD PTR [ebp-0x4]
 80629ca:  mov DWORD PTR [ebp+0x18], edx
 80629cd:  mov edx, DWORD PTR [ebp-0x10]
 80629d0:  mov DWORD PTR [ebp+0x8], ebx
 80629d3:  mov ebx, DWORD PTR [ebp-0xc]
 80629d6:  mov DWORD PTR [ebp+0x14], edx
 80629d9:  mov ecx, DWORD PTR [eax+0x24]
 80629dc:  mov esp, ebp
 80629de:  pop ebp
 80629df:  jmp ecx
 80629e1:  lea esi, [esi]
 80629e8:  mov edx, DWORD PTR [ebx+0x24]
 80629eb:  test edx, edx
 80629ed:  je 80629b5
 80629ef:  cmp DWORD PTR [ebp-0x10], 0x1
 80629f3:  jne 80629a2
 80629f5:  mov eax, DWORD PTR [ebx]
 80629f7:  test ah, 0x1
 80629fa:  je 80629a2
 80629fc:  test ecx, ecx
 80629fe:  xchg ax, ax
 8062a00:  jg 8062a52
 8062a02:  mov eax, DWORD PTR [ebx+0x8]
 8062a05:  sub eax, DWORD PTR [ebx+0x4]
 8062a08:  mov edx, eax
 8062a0a:  sar edx, 0x1f
 8062a0d:  sub esi, eax
 8062a0f:  sbb edi, edx
 8062a11:  jmp 80629a2
 8062a13:  nop
 8062a14:  lea esi, [esi]
 8062a18:  mov DWORD PTR [esp], ebx
 8062a1b:  call 8068a50
 8062a20:  jmp 80629b5
 8062a22:  lea esi, [esi]
 8062a28:  mov edx, 0xffffffe8
 8062a2e:  mov eax, gs:0x0
 8062a34:  mov DWORD PTR [eax+edx], 0x16
 8062a3b:  mov eax, 0xffffffff
 8062a40:  mov ebx, DWORD PTR [ebp-0xc]
 8062a43:  mov esi, DWORD PTR [ebp-0x8]
 8062a46:  mov edx, 0xffffffff
 8062a4b:  mov edi, DWORD PTR [ebp-0x4]
 8062a4e:  mov esp, ebp
 8062a50:  pop ebp
 8062a51:  ret
 8062a52:  call 8055a00
 8062a57:  mov esi, esi
 8062a59:  lea edi, [edi]

08062a60 <_IO_seekoff>:
 8062a60:  push ebp
 8062a61:  mov ebp, esp
 8062a63:  sub esp, 0x2c
 8062a66:  mov DWORD PTR [ebp-0x4], edi
 8062a69:  mov edi, DWORD PTR [ebp+0x8]
 8062a6c:  mov DWORD PTR [ebp-0xc], ebx
 8062a6f:  mov ebx, DWORD PTR [ebp+0xc]
 8062a72:  mov DWORD PTR [ebp-0x8], esi
 8062a75:  mov esi, DWORD PTR [ebp+0x10]
 8062a78:  cmp WORD PTR [edi], 0x0
 8062a7c:  js 8062abe
 8062a7e:  mov edx, DWORD PTR [edi+0x48]
 8062a81:  mov eax, gs:0x8
 8062a87:  mov DWORD PTR [ebp-0x10], eax
 8062a8a:  cmp DWORD PTR [edx+0x8], eax
 8062a8d:  je 8062aba
 8062a8f:  mov DWORD PTR [ebp-0x18], 0x0
 8062a96:  mov ecx, 0x1
 8062a9b:  xor eax, eax
 8062a9d:  cmp DWORD PTR gs:0xc, 0x0
 8062aa5:  je 8062aa8
 8062aa7:  cmpxchg DWORD PTR [edx], ecx
 8062aab:  jne 8062c26
 8062ab1:  mov edx, DWORD PTR [edi+0x48]
 8062ab4:  mov eax, DWORD PTR [ebp-0x10]
 8062ab7:  mov DWORD PTR [edx+0x8], eax
 8062aba:  add DWORD PTR [edx+0x4], 0x1
 8062abe:  cmp DWORD PTR [ebp+0x14], 0x2
 8062ac2:  ja 8062bc8
 8062ac8:  mov eax, DWORD PTR [ebp+0x18]
 8062acb:  test eax, eax
 8062acd:  je 8062b0d
 8062acf:  mov ecx, DWORD PTR [edi+0x68]
 8062ad2:  cmp ecx, 0x0
 8062ad5:  jl 8062b80
 8062adb:  nop
 8062adc:  lea esi, [esi]
 8062ae0:  je 8062b0d
 8062ae2:  mov eax, DWORD PTR [edi+0x58]
 8062ae5:  mov eax, DWORD PTR [eax+0x20]
 8062ae8:  test eax, eax
 8062aea:  je 8062b0d
 8062aec:  cmp DWORD PTR [ebp+0x14], 0x1
 8062af0:  je 8062b91
 8062af6:  test ecx, ecx
 8062af8:  js 8062bb8
 8062afe:  mov DWORD PTR [esp], edi
 8062b01:  lea esi, [esi]
 8062b08:  call 8063060
 8062b0d:  mov edx, DWORD PTR [ebp+0x18]
 8062b10:  mov eax, DWORD PTR [edi+0x94]
 8062b16:  mov DWORD PTR [esp+0x4], ebx
 8062b1a:  mov DWORD PTR [esp+0x8], esi
 8062b1e:  mov DWORD PTR [esp+0x10], edx
 8062b22:  mov edx, DWORD PTR [ebp+0x14]
 8062b25:  mov DWORD PTR [esp], edi
 8062b28:  mov DWORD PTR [esp+0xc], edx
 8062b2c:  call DWORD PTR [eax+0x24]
 8062b2f:  mov ebx, eax
 8062b31:  mov esi, edx
 8062b33:  cmp WORD PTR [edi], 0x0
 8062b37:  js 8062b68
 8062b39:  mov ecx, DWORD PTR [edi+0x48]
 8062b3c:  mov eax, DWORD PTR [ecx+0x4]
 8062b3f:  sub eax, 0x1
 8062b42:  test eax, eax
 8062b44:  mov DWORD PTR [ecx+0x4], eax
 8062b47:  jne 8062b68
 8062b49:  mov DWORD PTR [ecx+0x8], 0x0
 8062b50:  cmp DWORD PTR gs:0xc, 0x0
 8062b58:  je 8062b5b
 8062b5a:  sub DWORD PTR [ecx], 0x1
 8062b5e:  jne 8062c32
 8062b64:  lea esi, [esi]
 8062b68:  mov eax, ebx
 8062b6a:  mov edx, esi
 8062b6c:  mov ebx, DWORD PTR [ebp-0xc]
 8062b6f:  mov esi, DWORD PTR [ebp-0x8]
 8062b72:  mov edi, DWORD PTR [ebp-0x4]
 8062b75:  mov esp, ebp
 8062b77:  pop ebp
 8062b78:  ret
 8062b79:  lea esi, [esi]
 8062b80:  mov eax, DWORD PTR [edi+0x24]
 8062b83:  test eax, eax
 8062b85:  je 8062b0d
 8062b87:  cmp DWORD PTR [ebp+0x14], 0x1
 8062b8b:  jne 8062af6
 8062b91:  mov eax, DWORD PTR [edi]
 8062b93:  test ah, 0x1
 8062b96:  je 8062af6
 8062b9c:  test ecx, ecx
 8062b9e:  xchg ax, ax
 8062ba0:  jg 8062bea
 8062ba2:  mov eax, DWORD PTR [edi+0x8]
 8062ba5:  sub eax, DWORD PTR [edi+0x4]
 8062ba8:  mov edx, eax
 8062baa:  sar edx, 0x1f
 8062bad:  sub ebx, eax
 8062baf:  sbb esi, edx
 8062bb1:  jmp 8062af6
 8062bb6:  xchg ax, ax
 8062bb8:  mov DWORD PTR [esp], edi
 8062bbb:  call 8068a50
 8062bc0:  jmp 8062b0d
 8062bc5:  lea esi, [esi]
 8062bc8:  mov edx, 0xffffffe8
 8062bce:  mov ebx, 0xffffffff
 8062bd3:  mov esi, 0xffffffff
 8062bd8:  mov eax, gs:0x0
 8062bde:  mov DWORD PTR [eax+edx], 0x16
 8062be5:  jmp 8062b33
 8062bea:  call 8055a00
 8062bef:  cmp WORD PTR [edi], 0x0
 8062bf3:  mov ecx, eax
 8062bf5:  js 8062c1e
 8062bf7:  mov edx, DWORD PTR [edi+0x48]
 8062bfa:  mov eax, DWORD PTR [edx+0x4]
 8062bfd:  sub eax, 0x1
 8062c00:  test eax, eax
 8062c02:  mov DWORD PTR [edx+0x4], eax
 8062c05:  jne 8062c1e
 8062c07:  mov DWORD PTR [edx+0x8], 0x0
 8062c0e:  cmp DWORD PTR gs:0xc, 0x0
 8062c16:  je 8062c19
 8062c18:  sub DWORD PTR [edx], 0x1
 8062c1c:  jne 8062c3e
 8062c1e:  mov DWORD PTR [esp], ecx
 8062c21:  call 80abe50

08062c26 <_L_lock_197>:
 8062c26:  lea ecx, [edx]
 8062c28:  call 8050230
 8062c2d:  jmp 8062ab1

08062c32 <_L_unlock_295>:
 8062c32:  lea eax, [ecx]
 8062c34:  call 8050260
 8062c39:  jmp 8062b64

08062c3e <_L_unlock_412>:
 8062c3e:  lea eax, [edx]
 8062c40:  call 8050260
 8062c45:  jmp 8062c1e
 8062c47:  nop
 8062c48:  nop
 8062c49:  nop
 8062c4a:  nop
 8062c4b:  nop
 8062c4c:  nop
 8062c4d:  nop
 8062c4e:  nop
 8062c4f:  nop

08062c50 <_IO_wpadn>:
 8062c50:  push ebp
 8062c51:  mov ebp, esp
 8062c53:  push edi
 8062c54:  mov edi, 0x80b17c0
 8062c59:  push esi
 8062c5a:  push ebx
 8062c5b:  sub esp, 0x4c
 8062c5e:  mov eax, DWORD PTR [ebp+0xc]
 8062c61:  cmp eax, 0x20
 8062c64:  je 8062ca3
 8062c66:  cmp eax, 0x30
 8062c69:  mov edi, 0x80b1800
 8062c6e:  je 8062ca3
 8062c70:  mov DWORD PTR [ebp-0x10], eax
 8062c73:  lea edi, [ebp-0x4c]
 8062c76:  mov DWORD PTR [ebp-0x14], eax
 8062c79:  mov DWORD PTR [ebp-0x18], eax
 8062c7c:  mov DWORD PTR [ebp-0x1c], eax
 8062c7f:  mov DWORD PTR [ebp-0x20], eax
 8062c82:  mov DWORD PTR [ebp-0x24], eax
 8062c85:  mov DWORD PTR [ebp-0x28], eax
 8062c88:  mov DWORD PTR [ebp-0x2c], eax
 8062c8b:  mov DWORD PTR [ebp-0x30], eax
 8062c8e:  mov DWORD PTR [ebp-0x34], eax
 8062c91:  mov DWORD PTR [ebp-0x38], eax
 8062c94:  mov DWORD PTR [ebp-0x3c], eax
 8062c97:  mov DWORD PTR [ebp-0x40], eax
 8062c9a:  mov DWORD PTR [ebp-0x44], eax
 8062c9d:  mov DWORD PTR [ebp-0x48], eax
 8062ca0:  mov DWORD PTR [ebp-0x4c], eax
 8062ca3:  mov ebx, DWORD PTR [ebp+0x10]
 8062ca6:  xor esi, esi
 8062ca8:  xor eax, eax
 8062caa:  cmp ebx, 0xf
 8062cad:  jg 8062cc0
 8062caf:  jmp 8062cf2
 8062cb1:  lea esi, [esi]
 8062cb8:  sub ebx, 0x10
 8062cbb:  cmp ebx, 0xf
 8062cbe:  jle 8062cf0
 8062cc0:  mov edx, DWORD PTR [ebp+0x8]
 8062cc3:  mov eax, DWORD PTR [edx+0x94]
 8062cc9:  mov DWORD PTR [esp+0x8], 0x10
 8062cd1:  mov DWORD PTR [esp+0x4], edi
 8062cd5:  mov DWORD PTR [esp], edx
 8062cd8:  call DWORD PTR [eax+0x1c]
 8062cdb:  add esi, eax
 8062cdd:  cmp eax, 0x10
 8062ce0:  je 8062cb8
 8062ce2:  mov eax, esi
 8062ce4:  add esp, 0x4c
 8062ce7:  pop ebx
 8062ce8:  pop esi
 8062ce9:  pop edi
 8062cea:  pop ebp
 8062ceb:  ret
 8062cec:  lea esi, [esi]
 8062cf0:  mov eax, esi
 8062cf2:  test ebx, ebx
 8062cf4:  jle 8062ce4
 8062cf6:  mov edx, DWORD PTR [ebp+0x8]
 8062cf9:  mov eax, DWORD PTR [edx+0x94]
 8062cff:  mov DWORD PTR [esp+0x8], ebx
 8062d03:  mov DWORD PTR [esp+0x4], edi
 8062d07:  mov DWORD PTR [esp], edx
 8062d0a:  call DWORD PTR [eax+0x1c]
 8062d0d:  add esp, 0x4c
 8062d10:  pop ebx
 8062d11:  add eax, esi
 8062d13:  pop esi
 8062d14:  pop edi
 8062d15:  pop ebp
 8062d16:  ret
 8062d17:  nop
 8062d18:  nop
 8062d19:  nop
 8062d1a:  nop
 8062d1b:  nop
 8062d1c:  nop
 8062d1d:  nop
 8062d1e:  nop
 8062d1f:  nop

08062d20 <_IO_least_wmarker>:
 8062d20:  push ebp
 8062d21:  mov ebp, esp
 8062d23:  mov edx, DWORD PTR [ebp+0x8]
 8062d26:  mov ecx, DWORD PTR [ebp+0xc]
 8062d29:  mov eax, DWORD PTR [edx+0x58]
 8062d2c:  sub ecx, DWORD PTR [eax+0x8]
 8062d2f:  mov eax, DWORD PTR [edx+0x30]
 8062d32:  sar ecx, 0x2
 8062d35:  test eax, eax
 8062d37:  je 8062d4f
 8062d39:  lea esi, [esi]
 8062d40:  mov edx, DWORD PTR [eax+0x8]
 8062d43:  cmp ecx, edx
 8062d45:  jle 8062d49
 8062d47:  mov ecx, edx
 8062d49:  mov eax, DWORD PTR [eax]
 8062d4b:  test eax, eax
 8062d4d:  jne 8062d40
 8062d4f:  mov eax, ecx
 8062d51:  pop ebp
 8062d52:  ret
 8062d53:  lea esi, [esi]
 8062d59:  lea edi, [edi]

08062d60 <_IO_switch_to_main_wget_area>:
 8062d60:  push ebp
 8062d61:  mov ebp, esp
 8062d63:  mov eax, DWORD PTR [ebp+0x8]
 8062d66:  and DWORD PTR [eax], 0xfffffeff
 8062d6c:  mov eax, DWORD PTR [eax+0x58]
 8062d6f:  mov ecx, DWORD PTR [eax+0x4]
 8062d72:  mov edx, DWORD PTR [eax+0x28]
 8062d75:  mov DWORD PTR [eax+0x28], ecx
 8062d78:  mov ecx, DWORD PTR [eax+0x8]
 8062d7b:  mov DWORD PTR [eax+0x4], edx
 8062d7e:  mov edx, DWORD PTR [eax+0x20]
 8062d81:  mov DWORD PTR [eax+0x20], ecx
 8062d84:  mov DWORD PTR [eax+0x8], edx
 8062d87:  mov DWORD PTR [eax], edx
 8062d89:  pop ebp
 8062d8a:  ret
 8062d8b:  nop
 8062d8c:  lea esi, [esi]

08062d90 <_IO_switch_to_wbackup_area>:
 8062d90:  push ebp
 8062d91:  mov ebp, esp
 8062d93:  mov eax, DWORD PTR [ebp+0x8]
 8062d96:  push ebx
 8062d97:  or DWORD PTR [eax], 0x100
 8062d9d:  mov eax, DWORD PTR [eax+0x58]
 8062da0:  mov edx, DWORD PTR [eax+0x4]
 8062da3:  mov ebx, DWORD PTR [eax+0x28]
 8062da6:  mov ecx, DWORD PTR [eax+0x8]
 8062da9:  mov DWORD PTR [eax+0x28], edx
 8062dac:  mov edx, DWORD PTR [eax+0x20]
 8062daf:  mov DWORD PTR [eax+0x4], ebx
 8062db2:  mov DWORD PTR [eax+0x20], ecx
 8062db5:  mov DWORD PTR [eax], ebx
 8062db7:  mov DWORD PTR [eax+0x8], edx
 8062dba:  pop ebx
 8062dbb:  pop ebp
 8062dbc:  ret
 8062dbd:  lea esi, [esi]

08062dc0 <_IO_wdefault_uflow>:
 8062dc0:  push ebp
 8062dc1:  mov ebp, esp
 8062dc3:  push ebx
 8062dc4:  sub esp, 0x4
 8062dc7:  mov ebx, DWORD PTR [ebp+0x8]
 8062dca:  mov eax, DWORD PTR [ebx+0x94]
 8062dd0:  mov DWORD PTR [esp], ebx
 8062dd3:  call DWORD PTR [eax+0x10]
 8062dd6:  mov ecx, 0xffffffff
 8062ddb:  add eax, 0x1
 8062dde:  je 8062dec
 8062de0:  mov edx, DWORD PTR [ebx+0x58]
 8062de3:  mov eax, DWORD PTR [edx]
 8062de5:  mov ecx, DWORD PTR [eax]
 8062de7:  add eax, 0x4
 8062dea:  mov DWORD PTR [edx], eax
 8062dec:  add esp, 0x4
 8062def:  mov eax, ecx
 8062df1:  pop ebx
 8062df2:  pop ebp
 8062df3:  ret
 8062df4:  lea esi, [esi]
 8062dfa:  lea edi, [edi]

08062e00 <_IO_switch_to_wget_mode>:
 8062e00:  push ebp
 8062e01:  mov ebp, esp
 8062e03:  push ebx
 8062e04:  sub esp, 0x8
 8062e07:  mov ebx, DWORD PTR [ebp+0x8]
 8062e0a:  mov edx, DWORD PTR [ebx+0x58]
 8062e0d:  mov eax, DWORD PTR [edx+0x10]
 8062e10:  cmp eax, DWORD PTR [edx+0xc]
 8062e13:  ja 8062e58
 8062e15:  mov eax, DWORD PTR [ebx]
 8062e17:  test ah, 0x1
 8062e1a:  jne 8062e48
 8062e1c:  mov eax, DWORD PTR [edx+0x18]
 8062e1f:  mov DWORD PTR [edx+0x8], eax
 8062e22:  mov eax, DWORD PTR [edx+0x10]
 8062e25:  cmp eax, DWORD PTR [edx+0x4]
 8062e28:  jbe 8062e2d
 8062e2a:  mov DWORD PTR [edx+0x4], eax
 8062e2d:  and DWORD PTR [ebx], 0xfffff7ff
 8062e33:  mov DWORD PTR [edx], eax
 8062e35:  mov DWORD PTR [edx+0x14], eax
 8062e38:  mov DWORD PTR [edx+0x10], eax
 8062e3b:  mov DWORD PTR [edx+0xc], eax
 8062e3e:  xor edx, edx
 8062e40:  add esp, 0x8
 8062e43:  mov eax, edx
 8062e45:  pop ebx
 8062e46:  pop ebp
 8062e47:  ret
 8062e48:  mov eax, DWORD PTR [edx+0x24]
 8062e4b:  mov DWORD PTR [edx+0x8], eax
 8062e4e:  mov eax, DWORD PTR [edx+0x10]
 8062e51:  jmp 8062e2d
 8062e53:  nop
 8062e54:  lea esi, [esi]
 8062e58:  mov eax, DWORD PTR [edx+0xb8]
 8062e5e:  mov DWORD PTR [esp+0x4], 0xffffffff
 8062e66:  mov DWORD PTR [esp], ebx
 8062e69:  call DWORD PTR [eax+0xc]
 8062e6c:  mov edx, 0xffffffff
 8062e71:  add eax, 0x1
 8062e74:  je 8062e40
 8062e76:  mov edx, DWORD PTR [ebx+0x58]
 8062e79:  jmp 8062e15
 8062e7b:  nop
 8062e7c:  lea esi, [esi]

08062e80 <_IO_sputbackwc>:
 8062e80:  push ebp
 8062e81:  mov ebp, esp
 8062e83:  sub esp, 0x10
 8062e86:  mov DWORD PTR [ebp-0x8], ebx
 8062e89:  mov ebx, DWORD PTR [ebp+0x8]
 8062e8c:  mov DWORD PTR [ebp-0x4], esi
 8062e8f:  mov esi, DWORD PTR [ebp+0xc]
 8062e92:  mov edx, DWORD PTR [ebx+0x58]
 8062e95:  mov eax, DWORD PTR [edx]
 8062e97:  cmp eax, DWORD PTR [edx+0x8]
 8062e9a:  jbe 8062ea4
 8062e9c:  cmp DWORD PTR [eax-0x4], esi
 8062e9f:  lea ecx, [eax-0x4]
 8062ea2:  je 8062ec8
 8062ea4:  mov eax, DWORD PTR [ebx+0x94]
 8062eaa:  mov DWORD PTR [esp+0x4], esi
 8062eae:  mov DWORD PTR [esp], ebx
 8062eb1:  call DWORD PTR [eax+0x18]
 8062eb4:  cmp eax, 0xff
 8062eb7:  je 8062ebc
 8062eb9:  and DWORD PTR [ebx], 0xef
 8062ebc:  mov ebx, DWORD PTR [ebp-0x8]
 8062ebf:  mov esi, DWORD PTR [ebp-0x4]
 8062ec2:  mov esp, ebp
 8062ec4:  pop ebp
 8062ec5:  ret
 8062ec6:  xchg ax, ax
 8062ec8:  mov DWORD PTR [edx], ecx
 8062eca:  mov eax, esi
 8062ecc:  jmp 8062eb4
 8062ece:  xchg ax, ax

08062ed0 <_IO_sungetwc>:
 8062ed0:  push ebp
 8062ed1:  mov ebp, esp
 8062ed3:  push ebx
 8062ed4:  sub esp, 0x8
 8062ed7:  mov ebx, DWORD PTR [ebp+0x8]
 8062eda:  mov edx, DWORD PTR [ebx+0x58]
 8062edd:  mov ecx, DWORD PTR [edx]
 8062edf:  cmp ecx, DWORD PTR [edx+0x8]
 8062ee2:  jbe 8062f00
 8062ee4:  lea eax, [ecx-0x4]
 8062ee7:  mov DWORD PTR [edx], eax
 8062ee9:  mov eax, DWORD PTR [ecx-0x4]
 8062eec:  cmp eax, 0xff
 8062eef:  je 8062ef4
 8062ef1:  and DWORD PTR [ebx], 0xef
 8062ef4:  add esp, 0x8
 8062ef7:  pop ebx
 8062ef8:  pop ebp
 8062ef9:  ret
 8062efa:  lea esi, [esi]
 8062f00:  mov eax, DWORD PTR [ebx+0x94]
 8062f06:  mov DWORD PTR [esp+0x4], 0xffffffff
 8062f0e:  mov DWORD PTR [esp], ebx
 8062f11:  call DWORD PTR [eax+0x18]
 8062f14:  jmp 8062eec
 8062f16:  lea esi, [esi]
 8062f19:  lea edi, [edi]

08062f20 <_IO_adjust_wcolumn>:
 8062f20:  push ebp
 8062f21:  mov ebp, esp
 8062f23:  push ebx
 8062f24:  mov ecx, DWORD PTR [ebp+0xc]
 8062f27:  mov ebx, DWORD PTR [ebp+0x10]
 8062f2a:  lea eax, [ecx+ebx*4]
 8062f2d:  cmp ecx, eax
 8062f2f:  jae 8062f58
 8062f31:  cmp DWORD PTR [eax-0x4], 0xa
 8062f35:  lea edx, [eax-0x4]
 8062f38:  je 8062f4c
 8062f3a:  lea esi, [esi]
 8062f40:  cmp ecx, edx
 8062f42:  jae 8062f58
 8062f44:  sub edx, 0x4
 8062f47:  cmp DWORD PTR [edx], 0xa
 8062f4a:  jne 8062f40
 8062f4c:  sub eax, edx
 8062f4e:  sar eax, 0x2
 8062f51:  sub eax, 0x1
 8062f54:  pop ebx
 8062f55:  pop ebp
 8062f56:  ret
 8062f57:  nop
 8062f58:  mov eax, ebx
 8062f5a:  pop ebx
 8062f5b:  add eax, DWORD PTR [ebp+0x8]
 8062f5e:  pop ebp
 8062f5f:  ret

08062f60 <_IO_wmarker_delta>:
 8062f60:  push ebp
 8062f61:  mov eax, 0xffffffff
 8062f66:  mov ebp, esp
 8062f68:  mov ecx, DWORD PTR [ebp+0x8]
 8062f6b:  mov edx, DWORD PTR [ecx+0x4]
 8062f6e:  test edx, edx
 8062f70:  je 8062f89
 8062f72:  mov eax, DWORD PTR [edx]
 8062f74:  test ah, 0x1
 8062f77:  jne 8062f90
 8062f79:  mov eax, DWORD PTR [edx+0x58]
 8062f7c:  mov edx, DWORD PTR [eax]
 8062f7e:  sub edx, DWORD PTR [eax+0x8]
 8062f81:  sar edx, 0x2
 8062f84:  mov eax, DWORD PTR [ecx+0x8]
 8062f87:  sub eax, edx
 8062f89:  pop ebp
 8062f8a:  ret
 8062f8b:  nop
 8062f8c:  lea esi, [esi]
 8062f90:  mov eax, DWORD PTR [edx+0x58]
 8062f93:  mov edx, DWORD PTR [eax]
 8062f95:  sub edx, DWORD PTR [eax+0x4]
 8062f98:  sar edx, 0x2
 8062f9b:  jmp 8062f84
 8062f9d:  lea esi, [esi]

08062fa0 <_IO_seekwmark>:
 8062fa0:  push ebp
 8062fa1:  mov eax, 0xffffffff
 8062fa6:  mov ebp, esp
 8062fa8:  sub esp, 0x8
 8062fab:  mov DWORD PTR [esp], ebx
 8062fae:  mov DWORD PTR [esp+0x4], esi
 8062fb2:  mov esi, DWORD PTR [ebp+0xc]
 8062fb5:  mov edx, DWORD PTR [esi+0x4]
 8062fb8:  cmp edx, DWORD PTR [ebp+0x8]
 8062fbb:  je 8062fc8
 8062fbd:  mov ebx, DWORD PTR [esp]
 8062fc0:  mov esi, DWORD PTR [esp+0x4]
 8062fc4:  mov esp, ebp
 8062fc6:  pop ebp
 8062fc7:  ret
 8062fc8:  mov eax, DWORD PTR [esi+0x8]
 8062fcb:  test eax, eax
 8062fcd:  js 8063018
 8062fcf:  mov ecx, DWORD PTR [edx]
 8062fd1:  test ch, 0x1
 8062fd4:  je 8063010
 8062fd6:  mov ebx, DWORD PTR [edx+0x58]
 8062fd9:  and ch, 0xfe
 8062fdc:  mov DWORD PTR [edx], ecx
 8062fde:  mov eax, DWORD PTR [ebx+0x28]
 8062fe1:  mov edx, DWORD PTR [ebx+0x4]
 8062fe4:  mov DWORD PTR [ebx+0x4], eax
 8062fe7:  mov eax, DWORD PTR [ebx+0x20]
 8062fea:  mov DWORD PTR [ebx+0x28], edx
 8062fed:  mov edx, DWORD PTR [ebx+0x8]
 8062ff0:  mov DWORD PTR [ebx], eax
 8062ff2:  mov DWORD PTR [ebx+0x8], eax
 8062ff5:  mov eax, DWORD PTR [esi+0x8]
 8062ff8:  mov DWORD PTR [ebx+0x20], edx
 8062ffb:  shl eax, 0x2
 8062ffe:  add eax, DWORD PTR [ebx+0x8]
 8063001:  mov DWORD PTR [ebx], eax
 8063003:  xor eax, eax
 8063005:  mov ebx, DWORD PTR [esp]
 8063008:  mov esi, DWORD PTR [esp+0x4]
 806300c:  mov esp, ebp
 806300e:  pop ebp
 806300f:  ret
 8063010:  mov ebx, DWORD PTR [edx+0x58]
 8063013:  jmp 8062ffb
 8063015:  lea esi, [esi]
 8063018:  mov ecx, DWORD PTR [edx]
 806301a:  test ch, 0x1
 806301d:  je 8063030
 806301f:  mov ebx, DWORD PTR [edx+0x58]
 8063022:  shl eax, 0x2
 8063025:  add eax, DWORD PTR [ebx+0x4]
 8063028:  mov DWORD PTR [ebx], eax
 806302a:  xor eax, eax
 806302c:  jmp 8062fbd
 806302e:  xchg ax, ax
 8063030:  mov ebx, DWORD PTR [edx+0x58]
 8063033:  or ch, 0x1
 8063036:  mov DWORD PTR [edx], ecx
 8063038:  mov eax, DWORD PTR [ebx+0x4]
 806303b:  mov ecx, DWORD PTR [ebx+0x28]
 806303e:  mov edx, DWORD PTR [ebx+0x8]
 8063041:  mov DWORD PTR [ebx+0x28], eax
 8063044:  mov eax, DWORD PTR [ebx+0x20]
 8063047:  mov DWORD PTR [ebx+0x4], ecx
 806304a:  mov DWORD PTR [ebx+0x20], edx
 806304d:  mov DWORD PTR [ebx], ecx
 806304f:  mov DWORD PTR [ebx+0x8], eax
 8063052:  mov eax, DWORD PTR [esi+0x8]
 8063055:  jmp 8063022
 8063057:  mov esi, esi
 8063059:  lea edi, [edi]

08063060 <_IO_free_wbackup_area>:
 8063060:  push ebp
 8063061:  mov ebp, esp
 8063063:  push ebx
 8063064:  sub esp, 0x4
 8063067:  mov ebx, DWORD PTR [ebp+0x8]
 806306a:  mov eax, DWORD PTR [ebx]
 806306c:  test ah, 0x1
 806306f:  je 80630c0
 8063071:  mov ecx, DWORD PTR [ebx+0x58]
 8063074:  and ah, 0xfe
 8063077:  mov DWORD PTR [ebx], eax
 8063079:  mov edx, DWORD PTR [ecx+0x4]
 806307c:  mov eax, DWORD PTR [ecx+0x28]
 806307f:  mov DWORD PTR [ecx+0x28], edx
 8063082:  mov edx, DWORD PTR [ecx+0x8]
 8063085:  mov DWORD PTR [ecx+0x4], eax
 8063088:  mov eax, DWORD PTR [ecx+0x20]
 806308b:  mov DWORD PTR [ecx+0x20], edx
 806308e:  mov DWORD PTR [ecx+0x8], eax
 8063091:  mov DWORD PTR [ecx], eax
 8063093:  mov eax, edx
 8063095:  mov DWORD PTR [esp], eax
 8063098:  call 804b4a0
 806309d:  mov eax, DWORD PTR [ebx+0x58]
 80630a0:  mov DWORD PTR [eax+0x20], 0x0
 80630a7:  mov DWORD PTR [eax+0x28], 0x0
 80630ae:  mov DWORD PTR [eax+0x24], 0x0
 80630b5:  add esp, 0x4
 80630b8:  pop ebx
 80630b9:  pop ebp
 80630ba:  ret
 80630bb:  nop
 80630bc:  lea esi, [esi]
 80630c0:  mov ecx, DWORD PTR [ebx+0x58]
 80630c3:  mov eax, DWORD PTR [ecx+0x20]
 80630c6:  jmp 8063095
 80630c8:  nop
 80630c9:  lea esi, [esi]

080630d0 <__woverflow>:
 80630d0:  push ebp
 80630d1:  mov ebp, esp
 80630d3:  sub esp, 0x10
 80630d6:  mov DWORD PTR [ebp-0x8], ebx
 80630d9:  mov ebx, DWORD PTR [ebp+0x8]
 80630dc:  mov DWORD PTR [ebp-0x4], esi
 80630df:  mov esi, DWORD PTR [ebp+0xc]
 80630e2:  mov eax, DWORD PTR [ebx+0x68]
 80630e5:  test eax, eax
 80630e7:  jne 80630f9
 80630e9:  mov DWORD PTR [esp+0x4], 0x1
 80630f1:  mov DWORD PTR [esp], ebx
 80630f4:  call 8065440
 80630f9:  mov eax, DWORD PTR [ebx+0x94]
 80630ff:  mov DWORD PTR [ebp+0xc], esi
 8063102:  mov esi, DWORD PTR [ebp-0x4]
 8063105:  mov DWORD PTR [ebp+0x8], ebx
 8063108:  mov ebx, DWORD PTR [ebp-0x8]
 806310b:  mov ecx, DWORD PTR [eax+0xc]
 806310e:  mov esp, ebp
 8063110:  pop ebp
 8063111:  jmp ecx
 8063113:  lea esi, [esi]
 8063119:  lea edi, [edi]

08063120 <_IO_wsetb>:
 8063120:  push ebp
 8063121:  mov ebp, esp
 8063123:  push ebx
 8063124:  sub esp, 0x8
 8063127:  mov ebx, DWORD PTR [ebp+0x8]
 806312a:  mov edx, DWORD PTR [ebx+0x58]
 806312d:  mov ecx, DWORD PTR [edx+0x18]
 8063130:  test ecx, ecx
 8063132:  je 806313a
 8063134:  test BYTE PTR [ebx+0x3c], 0x8
 8063138:  je 8063168
 806313a:  mov eax, DWORD PTR [ebp+0xc]
 806313d:  mov DWORD PTR [edx+0x18], eax
 8063140:  mov eax, DWORD PTR [ebp+0x10]
 8063143:  mov DWORD PTR [edx+0x1c], eax
 8063146:  mov edx, DWORD PTR [ebp+0x14]
 8063149:  test edx, edx
 806314b:  jne 8063158
 806314d:  or DWORD PTR [ebx+0x3c], 0x8
 8063151:  add esp, 0x8
 8063154:  pop ebx
 8063155:  pop ebp
 8063156:  ret
 8063157:  nop
 8063158:  and DWORD PTR [ebx+0x3c], 0xf7
 806315c:  add esp, 0x8
 806315f:  pop ebx
 8063160:  pop ebp
 8063161:  ret
 8063162:  lea esi, [esi]
 8063168:  mov eax, DWORD PTR [edx+0x1c]
 806316b:  mov DWORD PTR [esp], ecx
 806316e:  sub eax, ecx
 8063170:  sar eax, 0x2
 8063173:  lea eax, [eax*4+0xfff]
 806317a:  and eax, 0xfffff000
 806317f:  mov DWORD PTR [esp+0x4], eax
 8063183:  call 8050050
 8063188:  mov edx, DWORD PTR [ebx+0x58]
 806318b:  jmp 806313a
 806318d:  lea esi, [esi]

08063190 <_IO_wdefault_finish>:
 8063190:  push ebp
 8063191:  mov ebp, esp
 8063193:  push ebx
 8063194:  sub esp, 0x8
 8063197:  mov ebx, DWORD PTR [ebp+0x8]
 806319a:  mov ecx, DWORD PTR [ebx+0x58]
 806319d:  mov edx, DWORD PTR [ecx+0x18]
 80631a0:  test edx, edx
 80631a2:  je 80631aa
 80631a4:  test BYTE PTR [ebx+0x3c], 0x8
 80631a8:  je 80631f0
 80631aa:  mov eax, DWORD PTR [ebx+0x30]
 80631ad:  test eax, eax
 80631af:  je 80631c5
 80631b1:  lea esi, [esi]
 80631b8:  mov DWORD PTR [eax+0x4], 0x0
 80631bf:  mov eax, DWORD PTR [eax]
 80631c1:  test eax, eax
 80631c3:  jne 80631b8
 80631c5:  mov eax, DWORD PTR [ebx+0x24]
 80631c8:  test eax, eax
 80631ca:  je 80631de
 80631cc:  mov eax, DWORD PTR [ecx+0x20]
 80631cf:  mov DWORD PTR [esp], eax
 80631d2:  call 804b4a0
 80631d7:  mov DWORD PTR [ebx+0x24], 0x0
 80631de:  mov DWORD PTR [ebp+0x8], ebx
 80631e1:  add esp, 0x8
 80631e4:  pop ebx
 80631e5:  pop ebp
 80631e6:  jmp 8069980
 80631eb:  nop
 80631ec:  lea esi, [esi]
 80631f0:  mov eax, DWORD PTR [ecx+0x1c]
 80631f3:  mov DWORD PTR [esp], edx
 80631f6:  sub eax, edx
 80631f8:  sar eax, 0x2
 80631fb:  lea eax, [eax*4+0xfff]
 8063202:  and eax, 0xfffff000
 8063207:  mov DWORD PTR [esp+0x4], eax
 806320b:  call 8050050
 8063210:  mov ecx, DWORD PTR [ebx+0x58]
 8063213:  mov DWORD PTR [ecx+0x1c], 0x0
 806321a:  mov DWORD PTR [ecx+0x18], 0x0
 8063221:  jmp 80631aa
 8063223:  lea esi, [esi]
 8063229:  lea edi, [edi]

08063230 <save_for_wbackup>:
 8063230:  push ebp
 8063231:  mov ecx, edx
 8063233:  mov ebp, esp
 8063235:  push edi
 8063236:  push esi
 8063237:  push ebx
 8063238:  sub esp, 0x2c
 806323b:  mov edi, DWORD PTR [eax+0x58]
 806323e:  mov DWORD PTR [ebp-0x24], eax
 8063241:  mov DWORD PTR [ebp-0x1c], edx
 8063244:  mov edx, DWORD PTR [ebp-0x24]
 8063247:  mov eax, DWORD PTR [edi+0x8]
 806324a:  mov edx, DWORD PTR [edx+0x30]
 806324d:  sub ecx, eax
 806324f:  sar ecx, 0x2
 8063252:  test edx, edx
 8063254:  mov DWORD PTR [ebp-0x18], eax
 8063257:  mov eax, edx
 8063259:  mov DWORD PTR [ebp-0x10], ecx
 806325c:  mov DWORD PTR [ebp-0x2c], edx
 806325f:  je 806336b
 8063265:  mov esi, ecx
 8063267:  nop
 8063268:  mov edx, DWORD PTR [eax+0x8]
 806326b:  cmp esi, edx
 806326d:  jle 8063271
 806326f:  mov esi, edx
 8063271:  mov eax, DWORD PTR [eax]
 8063273:  test eax, eax
 8063275:  jne 8063268
 8063277:  mov ebx, ecx
 8063279:  mov ecx, DWORD PTR [edi+0x28]
 806327c:  mov edx, DWORD PTR [edi+0x20]
 806327f:  sub ebx, esi
 8063281:  mov DWORD PTR [ebp-0x10], esi
 8063284:  mov eax, ecx
 8063286:  sub eax, edx
 8063288:  sar eax, 0x2
 806328b:  cmp ebx, eax
 806328d:  ja 806337f
 8063293:  mov esi, eax
 8063295:  mov eax, DWORD PTR [ebp-0x10]
 8063298:  sub esi, ebx
 806329a:  test eax, eax
 806329c:  js 8063310
 806329e:  test ebx, ebx
 80632a0:  jne 80632d8
 80632a2:  shl esi, 0x2
 80632a5:  mov DWORD PTR [ebp-0x14], esi
 80632a8:  mov ecx, esi
 80632aa:  lea eax, [edx+ecx]
 80632ad:  mov ecx, DWORD PTR [ebp-0x2c]
 80632b0:  mov DWORD PTR [edi+0x24], eax
 80632b3:  mov eax, DWORD PTR [ebp-0x1c]
 80632b6:  sub eax, DWORD PTR [edi+0x8]
 80632b9:  sar eax, 0x2
 80632bc:  test ecx, ecx
 80632be:  je 80632c9
 80632c0:  sub DWORD PTR [ecx+0x8], eax
 80632c3:  mov ecx, DWORD PTR [ecx]
 80632c5:  test ecx, ecx
 80632c7:  jne 80632c0
 80632c9:  xor eax, eax
 80632cb:  add esp, 0x2c
 80632ce:  pop ebx
 80632cf:  pop esi
 80632d0:  pop edi
 80632d1:  pop ebp
 80632d2:  ret
 80632d3:  nop
 80632d4:  lea esi, [esi]
 80632d8:  mov DWORD PTR [esp+0x8], ebx
 80632dc:  mov ecx, DWORD PTR [ebp-0x10]
 80632df:  shl esi, 0x2
 80632e2:  mov ebx, DWORD PTR [ebp-0x18]
 80632e5:  mov DWORD PTR [ebp-0x14], esi
 80632e8:  lea eax, [ebx+ecx*4]
 80632eb:  mov DWORD PTR [esp+0x4], eax
 80632ef:  lea eax, [edx+esi]
 80632f2:  mov DWORD PTR [esp], eax
 80632f5:  call 806c560
 80632fa:  mov ebx, DWORD PTR [ebp-0x24]
 80632fd:  mov edi, DWORD PTR [ebx+0x58]
 8063300:  mov eax, DWORD PTR [ebx+0x30]
 8063303:  mov ecx, DWORD PTR [ebp-0x14]
 8063306:  mov edx, DWORD PTR [edi+0x20]
 8063309:  mov DWORD PTR [ebp-0x2c], eax
 806330c:  jmp 80632aa
 806330e:  xchg ax, ax
 8063310:  lea ebx, [esi*4]
 8063317:  mov eax, DWORD PTR [ebp-0x10]
 806331a:  mov DWORD PTR [ebp-0x14], ebx
 806331d:  mov ebx, DWORD PTR [ebp-0x10]
 8063320:  neg eax
 8063322:  mov DWORD PTR [esp+0x8], eax
 8063326:  lea eax, [ecx+ebx*4]
 8063329:  mov ecx, DWORD PTR [ebp-0x14]
 806332c:  mov DWORD PTR [esp+0x4], eax
 8063330:  lea eax, [edx+ecx]
 8063333:  mov DWORD PTR [esp], eax
 8063336:  call 806c570
 806333b:  mov ebx, DWORD PTR [ebp-0x24]
 806333e:  mov eax, DWORD PTR [ebp-0x1c]
 8063341:  sub esi, DWORD PTR [ebp-0x10]
 8063344:  mov ecx, DWORD PTR [ebx+0x58]
 8063347:  mov edx, DWORD PTR [ecx+0x8]
 806334a:  sub eax, edx
 806334c:  sar eax, 0x2
 806334f:  mov DWORD PTR [esp+0x8], eax
 8063353:  lea eax, [esi*4]
 806335a:  mov DWORD PTR [esp+0x4], edx
 806335e:  add eax, DWORD PTR [ecx+0x20]
 8063361:  mov DWORD PTR [esp], eax
 8063364:  call 806c560
 8063369:  jmp 80632fd
 806336b:  mov ecx, DWORD PTR [edi+0x28]
 806336e:  xor ebx, ebx
 8063370:  mov edx, DWORD PTR [edi+0x20]
 8063373:  mov eax, ecx
 8063375:  sub eax, edx
 8063377:  sar eax, 0x2
 806337a:  jmp 8063293
 806337f:  lea ecx, [ebx*4+0x190]
 8063386:  mov DWORD PTR [ebp-0x20], ecx
 8063389:  mov DWORD PTR [esp], ecx
 806338c:  call 804d6f0
 8063391:  mov DWORD PTR [ebp-0x28], eax
 8063394:  mov edx, DWORD PTR [ebp-0x28]
 8063397:  mov eax, 0xffffffff
 806339c:  test edx, edx
 806339e:  je 80632cb
 80633a4:  test esi, esi
 80633a6:  js 806340b
 80633a8:  mov edx, DWORD PTR [ebp-0x24]
 80633ab:  mov DWORD PTR [esp+0x8], ebx
 80633af:  mov eax, DWORD PTR [edx+0x58]
 80633b2:  lea edx, [esi*4]
 80633b9:  add edx, DWORD PTR [eax+0x8]
 80633bc:  mov eax, DWORD PTR [ebp-0x28]
 80633bf:  mov DWORD PTR [esp+0x4], edx
 80633c3:  add eax, 0x190
 80633c8:  mov DWORD PTR [esp], eax
 80633cb:  call 806c560
 80633d0:  mov ecx, DWORD PTR [ebp-0x24]
 80633d3:  mov eax, DWORD PTR [ecx+0x58]
 80633d6:  mov eax, DWORD PTR [eax+0x20]
 80633d9:  mov DWORD PTR [esp], eax
 80633dc:  call 804b4a0
 80633e1:  mov ebx, DWORD PTR [ebp-0x24]
 80633e4:  mov eax, DWORD PTR [ebp-0x28]
 80633e7:  mov DWORD PTR [ebp-0x14], 0x190
 80633ee:  mov edx, DWORD PTR [ebp-0x28]
 80633f1:  mov edi, DWORD PTR [ebx+0x58]
 80633f4:  mov ecx, DWORD PTR [ebx+0x30]
 80633f7:  mov DWORD PTR [edi+0x20], eax
 80633fa:  add eax, DWORD PTR [ebp-0x20]
 80633fd:  mov DWORD PTR [ebp-0x2c], ecx
 8063400:  mov ecx, DWORD PTR [ebp-0x14]
 8063403:  mov DWORD PTR [edi+0x28], eax
 8063406:  jmp 80632aa
 806340b:  mov ebx, DWORD PTR [ebp-0x24]
 806340e:  mov eax, esi
 8063410:  neg eax
 8063412:  mov edx, DWORD PTR [ebx+0x58]
 8063415:  mov ebx, DWORD PTR [edx+0x8]
 8063418:  mov DWORD PTR [esp+0x8], eax
 806341c:  lea eax, [esi*4]
 8063423:  add eax, DWORD PTR [edx+0x28]
 8063426:  mov DWORD PTR [esp+0x4], eax
 806342a:  mov eax, DWORD PTR [ebp-0x28]
 806342d:  add eax, 0x190
 8063432:  mov DWORD PTR [esp], eax
 8063435:  call 806c5f0
 806343a:  mov edx, DWORD PTR [ebp-0x1c]
 806343d:  mov DWORD PTR [esp+0x4], ebx
 8063441:  sub edx, ebx
 8063443:  sar edx, 0x2
 8063446:  mov DWORD PTR [esp+0x8], edx
 806344a:  mov DWORD PTR [esp], eax
 806344d:  call 806c5f0
 8063452:  jmp 80633d0
 8063457:  mov esi, esi
 8063459:  lea edi, [edi]

08063460 <_IO_wdefault_pbackfail>:
 8063460:  push ebp
 8063461:  mov ebp, esp
 8063463:  sub esp, 0x20
 8063466:  mov DWORD PTR [ebp-0x4], edi
 8063469:  mov edi, DWORD PTR [ebp+0x8]
 806346c:  mov DWORD PTR [ebp-0x8], esi
 806346f:  mov DWORD PTR [ebp-0xc], ebx
 8063472:  mov ecx, DWORD PTR [edi+0x58]
 8063475:  mov ebx, DWORD PTR [ecx]
 8063477:  mov esi, ecx
 8063479:  mov edx, DWORD PTR [ecx+0x8]
 806347c:  cmp ebx, edx
 806347e:  jbe 80634a0
 8063480:  mov eax, DWORD PTR [edi]
 8063482:  test ah, 0x1
 8063485:  je 80634d8
 8063487:  lea eax, [ebx-0x4]
 806348a:  mov DWORD PTR [esi], eax
 806348c:  mov eax, DWORD PTR [ebp+0xc]
 806348f:  mov DWORD PTR [ebx-0x4], eax
 8063492:  mov ebx, DWORD PTR [ebp-0xc]
 8063495:  mov esi, DWORD PTR [ebp-0x8]
 8063498:  mov edi, DWORD PTR [ebp-0x4]
 806349b:  mov esp, ebp
 806349d:  pop ebp
 806349e:  ret
 806349f:  nop
 80634a0:  mov eax, DWORD PTR [edi]
 80634a2:  test ah, 0x1
 80634a5:  jne 8063510
 80634a7:  mov esi, DWORD PTR [ecx+0x20]
 80634aa:  test esi, esi
 80634ac:  je 8063590
 80634b2:  mov eax, DWORD PTR [ecx+0x4]
 80634b5:  mov esi, ecx
 80634b7:  mov edx, DWORD PTR [ecx+0x28]
 80634ba:  or DWORD PTR [edi], 0x100
 80634c0:  mov DWORD PTR [ecx+0x28], eax
 80634c3:  mov eax, DWORD PTR [ecx+0x20]
 80634c6:  mov DWORD PTR [ecx+0x4], edx
 80634c9:  mov DWORD PTR [ecx+0x20], ebx
 80634cc:  mov ebx, edx
 80634ce:  mov DWORD PTR [ecx], edx
 80634d0:  mov DWORD PTR [ecx+0x8], eax
 80634d3:  jmp 8063487
 80634d5:  lea esi, [esi]
 80634d8:  mov eax, DWORD PTR [edi+0x4]
 80634db:  lea edx, [eax-0x1]
 80634de:  movsx eax, BYTE PTR [eax-0x1]
 80634e2:  cmp eax, DWORD PTR [ebp+0xc]
 80634e5:  je 8063578
 80634eb:  mov ecx, DWORD PTR [ecx+0x20]
 80634ee:  test ecx, ecx
 80634f0:  je 8063590
 80634f6:  mov edx, ebx
 80634f8:  mov eax, edi
 80634fa:  call 8063230
 80634ff:  test eax, eax
 8063501:  jne 8063580
 8063503:  mov ecx, DWORD PTR [edi+0x58]
 8063506:  mov ebx, DWORD PTR [ecx]
 8063508:  jmp 80634b2
 806350a:  lea esi, [esi]
 8063510:  mov esi, DWORD PTR [ecx+0x4]
 8063513:  sub esi, edx
 8063515:  sar esi, 0x2
 8063518:  lea eax, [esi*8]
 806351f:  mov DWORD PTR [ebp-0x10], eax
 8063522:  mov DWORD PTR [esp], eax
 8063525:  call 804d6f0
 806352a:  test eax, eax
 806352c:  mov DWORD PTR [ebp-0x14], eax
 806352f:  je 8063580
 8063531:  lea ebx, [eax+esi*4]
 8063534:  mov DWORD PTR [esp+0x8], esi
 8063538:  mov eax, DWORD PTR [edi+0x58]
 806353b:  mov eax, DWORD PTR [eax+0x8]
 806353e:  mov DWORD PTR [esp], ebx
 8063541:  mov DWORD PTR [esp+0x4], eax
 8063545:  call 806c560
 806354a:  mov eax, DWORD PTR [edi+0x58]
 806354d:  mov eax, DWORD PTR [eax+0x8]
 8063550:  mov DWORD PTR [esp], eax
 8063553:  call 804b4a0
 8063558:  mov eax, DWORD PTR [edi+0x58]
 806355b:  mov edx, DWORD PTR [ebp-0x14]
 806355e:  mov DWORD PTR [eax], ebx
 8063560:  mov esi, eax
 8063562:  mov DWORD PTR [eax+0x8], edx
 8063565:  add edx, DWORD PTR [ebp-0x10]
 8063568:  mov DWORD PTR [eax+0x24], ebx
 806356b:  mov DWORD PTR [eax+0x4], edx
 806356e:  jmp 8063487
 8063573:  nop
 8063574:  lea esi, [esi]
 8063578:  mov DWORD PTR [edi+0x4], edx
 806357b:  jmp 8063492
 8063580:  mov eax, 0xffffffff
 8063585:  jmp 8063492
 806358a:  lea esi, [esi]
 8063590:  mov DWORD PTR [esp], 0x200
 8063597:  nop
 8063598:  call 804d6f0
 806359d:  test eax, eax
 806359f:  nop
 80635a0:  je 8063580
 80635a2:  mov ecx, DWORD PTR [edi+0x58]
 80635a5:  mov DWORD PTR [ecx+0x20], eax
 80635a8:  add eax, 0x200
 80635ad:  mov ebx, DWORD PTR [ecx]
 80635af:  mov DWORD PTR [ecx+0x28], eax
 80635b2:  mov DWORD PTR [ecx+0x24], eax
 80635b5:  jmp 80634b2
 80635ba:  lea esi, [esi]

080635c0 <_IO_wdefault_xsputn>:
 80635c0:  push ebp
 80635c1:  xor eax, eax
 80635c3:  mov ebp, esp
 80635c5:  push edi
 80635c6:  push esi
 80635c7:  push ebx
 80635c8:  sub esp, 0x10
 80635cb:  mov edi, DWORD PTR [ebp+0x10]
 80635ce:  mov esi, DWORD PTR [ebp+0xc]
 80635d1:  test edi, edi
 80635d3:  je 806369d
 80635d9:  lea esi, [esi]
 80635e0:  mov eax, DWORD PTR [ebp+0x8]
 80635e3:  mov eax, DWORD PTR [eax+0x58]
 80635e6:  mov ecx, DWORD PTR [eax+0x10]
 80635e9:  mov edx, DWORD PTR [eax+0x14]
 80635ec:  mov DWORD PTR [ebp-0x10], eax
 80635ef:  sub edx, ecx
 80635f1:  sar edx, 0x2
 80635f4:  test edx, edx
 80635f6:  jle 8063631
 80635f8:  cmp edi, edx
 80635fa:  jae 80635fe
 80635fc:  mov edx, edi
 80635fe:  cmp edx, 0x14
 8063601:  jg 8063678
 8063603:  xor ebx, ebx
 8063605:  test edx, edx
 8063607:  jle 806362f
 8063609:  lea esi, [esi]
 8063610:  mov eax, DWORD PTR [esi+ebx*4]
 8063613:  mov DWORD PTR [ecx+ebx*4], eax
 8063616:  add ebx, 0x1
 8063619:  cmp ebx, edx
 806361b:  jne 8063610
 806361d:  mov edx, DWORD PTR [ebp-0x10]
 8063620:  lea eax, [ebx*4]
 8063627:  add esi, eax
 8063629:  lea eax, [ecx+eax]
 806362c:  mov DWORD PTR [edx+0x10], eax
 806362f:  sub edi, ebx
 8063631:  test edi, edi
 8063633:  je 8063698
 8063635:  mov eax, DWORD PTR [ebp+0x8]
 8063638:  mov ebx, DWORD PTR [esi]
 806363a:  mov edx, DWORD PTR [eax+0x68]
 806363d:  test edx, edx
 806363f:  jne 8063651
 8063641:  mov DWORD PTR [esp+0x4], 0x1
 8063649:  mov DWORD PTR [esp], eax
 806364c:  call 8065440
 8063651:  mov edx, DWORD PTR [ebp+0x8]
 8063654:  mov eax, DWORD PTR [edx+0x94]
 806365a:  mov DWORD PTR [esp+0x4], ebx
 806365e:  mov DWORD PTR [esp], edx
 8063661:  call DWORD PTR [eax+0xc]
 8063664:  add eax, 0x1
 8063667:  je 8063698
 8063669:  add esi, 0x4
 806366c:  sub edi, 0x1
 806366f:  jmp 80635e0
 8063674:  lea esi, [esi]
 8063678:  mov ebx, edx
 806367a:  mov DWORD PTR [esp+0x8], edx
 806367e:  mov DWORD PTR [esp+0x4], esi
 8063682:  lea esi, [esi+ebx*4]
 8063685:  mov DWORD PTR [esp], ecx
 8063688:  call 806c5f0
 806368d:  mov edx, DWORD PTR [ebp-0x10]
 8063690:  mov DWORD PTR [edx+0x10], eax
 8063693:  jmp 806362f
 8063695:  lea esi, [esi]
 8063698:  mov eax, DWORD PTR [ebp+0x10]
 806369b:  sub eax, edi
 806369d:  add esp, 0x10
 80636a0:  pop ebx
 80636a1:  pop esi
 80636a2:  pop edi
 80636a3:  pop ebp
 80636a4:  ret
 80636a5:  lea esi, [esi]
 80636a9:  lea edi, [edi]

080636b0 <_IO_unsave_wmarkers>:
 80636b0:  push ebp
 80636b1:  mov ebp, esp
 80636b3:  push ebx
 80636b4:  sub esp, 0x4
 80636b7:  mov ebx, DWORD PTR [ebp+0x8]
 80636ba:  mov eax, DWORD PTR [ebx+0x30]
 80636bd:  test eax, eax
 80636bf:  je 80636c8
 80636c1:  mov DWORD PTR [ebx+0x30], 0x0
 80636c8:  mov ecx, DWORD PTR [ebx+0x24]
 80636cb:  test ecx, ecx
 80636cd:  je 806371a
 80636cf:  mov eax, DWORD PTR [ebx]
 80636d1:  test ah, 0x1
 80636d4:  je 8063720
 80636d6:  mov ecx, DWORD PTR [ebx+0x58]
 80636d9:  and ah, 0xfe
 80636dc:  mov DWORD PTR [ebx], eax
 80636de:  mov edx, DWORD PTR [ecx+0x4]
 80636e1:  mov eax, DWORD PTR [ecx+0x28]
 80636e4:  mov DWORD PTR [ecx+0x28], edx
 80636e7:  mov edx, DWORD PTR [ecx+0x8]
 80636ea:  mov DWORD PTR [ecx+0x4], eax
 80636ed:  mov eax, DWORD PTR [ecx+0x20]
 80636f0:  mov DWORD PTR [ecx+0x20], edx
 80636f3:  mov DWORD PTR [ecx+0x8], eax
 80636f6:  mov DWORD PTR [ecx], eax
 80636f8:  mov eax, edx
 80636fa:  mov DWORD PTR [esp], eax
 80636fd:  call 804b4a0
 8063702:  mov eax, DWORD PTR [ebx+0x58]
 8063705:  mov DWORD PTR [eax+0x20], 0x0
 806370c:  mov DWORD PTR [eax+0x28], 0x0
 8063713:  mov DWORD PTR [eax+0x24], 0x0
 806371a:  add esp, 0x4
 806371d:  pop ebx
 806371e:  pop ebp
 806371f:  ret
 8063720:  mov ecx, DWORD PTR [ebx+0x58]
 8063723:  mov eax, DWORD PTR [ecx+0x20]
 8063726:  jmp 80636fa
 8063728:  nop
 8063729:  lea esi, [esi]

08063730 <_IO_wdefault_doallocate>:
 8063730:  push ebp
 8063731:  mov ebp, esp
 8063733:  push esi
 8063734:  push ebx
 8063735:  sub esp, 0x18
 8063738:  mov esi, DWORD PTR [ebp+0x8]
 806373b:  mov DWORD PTR [esp+0x14], 0x0
 8063743:  mov DWORD PTR [esp+0x10], 0xffffffff
 806374b:  mov DWORD PTR [esp+0xc], 0x22
 8063753:  mov DWORD PTR [esp+0x8], 0x3
 806375b:  mov DWORD PTR [esp+0x4], 0x2000
 8063763:  mov DWORD PTR [esp], 0x0
 806376a:  call 8050000
 806376f:  mov ebx, eax
 8063771:  mov eax, 0xffffffff
 8063776:  cmp ebx, 0xff
 8063779:  je 80637a0
 806377b:  mov edx, DWORD PTR [esi+0x58]
 806377e:  mov ecx, DWORD PTR [edx+0x18]
 8063781:  test ecx, ecx
 8063783:  je 806378b
 8063785:  test BYTE PTR [esi+0x3c], 0x8
 8063789:  je 80637a8
 806378b:  and DWORD PTR [esi+0x3c], 0xf7
 806378f:  lea eax, [ebx+0x8000]
 8063795:  mov DWORD PTR [edx+0x1c], eax
 8063798:  mov eax, 0x1
 806379d:  mov DWORD PTR [edx+0x18], ebx
 80637a0:  add esp, 0x18
 80637a3:  pop ebx
 80637a4:  pop esi
 80637a5:  pop ebp
 80637a6:  ret
 80637a7:  nop
 80637a8:  mov eax, DWORD PTR [edx+0x1c]
 80637ab:  mov DWORD PTR [esp], ecx
 80637ae:  sub eax, ecx
 80637b0:  sar eax, 0x2
 80637b3:  lea eax, [eax*4+0xfff]
 80637ba:  and eax, 0xfffff000
 80637bf:  mov DWORD PTR [esp+0x4], eax
 80637c3:  call 8050050
 80637c8:  mov edx, DWORD PTR [esi+0x58]
 80637cb:  jmp 806378b
 80637cd:  lea esi, [esi]

080637d0 <_IO_init_wmarker>:
 80637d0:  push ebp
 80637d1:  mov ebp, esp
 80637d3:  push esi
 80637d4:  push ebx
 80637d5:  sub esp, 0x8
 80637d8:  mov ebx, DWORD PTR [ebp+0xc]
 80637db:  mov esi, DWORD PTR [ebp+0x8]
 80637de:  mov eax, DWORD PTR [ebx]
 80637e0:  mov DWORD PTR [esi+0x4], ebx
 80637e3:  test ah, 0x8
 80637e6:  mov ecx, eax
 80637e8:  jne 8063830
 80637ea:  mov edx, DWORD PTR [ebx+0x58]
 80637ed:  test ah, 0x1
 80637f0:  jne 8063810
 80637f2:  mov eax, DWORD PTR [edx]
 80637f4:  sub eax, DWORD PTR [edx+0x8]
 80637f7:  sar eax, 0x2
 80637fa:  mov DWORD PTR [esi+0x8], eax
 80637fd:  mov eax, DWORD PTR [ebx+0x30]
 8063800:  mov DWORD PTR [esi], eax
 8063802:  mov DWORD PTR [ebx+0x30], esi
 8063805:  add esp, 0x8
 8063808:  pop ebx
 8063809:  pop esi
 806380a:  pop ebp
 806380b:  ret
 806380c:  lea esi, [esi]
 8063810:  mov eax, DWORD PTR [edx]
 8063812:  sub eax, DWORD PTR [edx+0x4]
 8063815:  sar eax, 0x2
 8063818:  mov DWORD PTR [esi+0x8], eax
 806381b:  mov eax, DWORD PTR [ebx+0x30]
 806381e:  mov DWORD PTR [esi], eax
 8063820:  mov DWORD PTR [ebx+0x30], esi
 8063823:  add esp, 0x8
 8063826:  pop ebx
 8063827:  pop esi
 8063828:  pop ebp
 8063829:  ret
 806382a:  lea esi, [esi]
 8063830:  mov edx, DWORD PTR [ebx+0x58]
 8063833:  mov eax, DWORD PTR [edx+0x10]
 8063836:  cmp eax, DWORD PTR [edx+0xc]
 8063839:  ja 8063873
 806383b:  test ch, 0x1
 806383e:  jne 8063868
 8063840:  mov eax, DWORD PTR [edx+0x18]
 8063843:  mov DWORD PTR [edx+0x8], eax
 8063846:  mov eax, DWORD PTR [edx+0x10]
 8063849:  cmp eax, DWORD PTR [edx+0x4]
 806384c:  jbe 8063851
 806384e:  mov DWORD PTR [edx+0x4], eax
 8063851:  mov DWORD PTR [edx], eax
 8063853:  mov DWORD PTR [edx+0x14], eax
 8063856:  mov DWORD PTR [edx+0x10], eax
 8063859:  mov DWORD PTR [edx+0xc], eax
 806385c:  mov eax, ecx
 806385e:  and ah, 0xf7
 8063861:  mov DWORD PTR [ebx], eax
 8063863:  jmp 80637ed
 8063865:  lea esi, [esi]
 8063868:  mov eax, DWORD PTR [edx+0x24]
 806386b:  mov DWORD PTR [edx+0x8], eax
 806386e:  mov eax, DWORD PTR [edx+0x10]
 8063871:  jmp 8063851
 8063873:  mov eax, DWORD PTR [edx+0xb8]
 8063879:  mov DWORD PTR [esp+0x4], 0xffffffff
 8063881:  mov DWORD PTR [esp], ebx
 8063884:  call DWORD PTR [eax+0xc]
 8063887:  add eax, 0x1
 806388a:  je 8063893
 806388c:  mov ecx, DWORD PTR [ebx]
 806388e:  mov edx, DWORD PTR [ebx+0x58]
 8063891:  jmp 806383b
 8063893:  mov eax, DWORD PTR [ebx]
 8063895:  lea esi, [esi]
 8063898:  jmp 80637ea
 806389d:  lea esi, [esi]

080638a0 <__wunderflow>:
 80638a0:  push ebp
 80638a1:  mov ebp, esp
 80638a3:  sub esp, 0x14
 80638a6:  mov DWORD PTR [ebp-0xc], ebx
 80638a9:  mov ebx, DWORD PTR [ebp+0x8]
 80638ac:  mov DWORD PTR [ebp-0x8], esi
 80638af:  mov DWORD PTR [ebp-0x4], edi
 80638b2:  cmp DWORD PTR [ebx+0x68], 0x0
 80638b6:  jl 8063925
 80638b8:  je 8063910
 80638ba:  mov edx, DWORD PTR [ebx]
 80638bc:  test dh, 0x8
 80638bf:  jne 8063938
 80638c1:  mov ecx, DWORD PTR [ebx+0x58]
 80638c4:  mov eax, DWORD PTR [ecx]
 80638c6:  mov esi, DWORD PTR [ecx+0x4]
 80638c9:  cmp eax, esi
 80638cb:  jb 8063979
 80638d1:  mov eax, DWORD PTR [ebx]
 80638d3:  test ah, 0x1
 80638d6:  jne 80639b8
 80638dc:  mov eax, DWORD PTR [ebx+0x30]
 80638df:  test eax, eax
 80638e1:  je 80639e8
 80638e7:  mov edx, esi
 80638e9:  mov eax, ebx
 80638eb:  call 8063230
 80638f0:  test eax, eax
 80638f2:  jne 8063925
 80638f4:  mov eax, DWORD PTR [ebx+0x94]
 80638fa:  mov DWORD PTR [ebp+0x8], ebx
 80638fd:  mov esi, DWORD PTR [ebp-0x8]
 8063900:  mov ebx, DWORD PTR [ebp-0xc]
 8063903:  mov edi, DWORD PTR [ebp-0x4]
 8063906:  mov ecx, DWORD PTR [eax+0x10]
 8063909:  mov esp, ebp
 806390b:  pop ebp
 806390c:  jmp ecx
 806390e:  xchg ax, ax
 8063910:  mov DWORD PTR [esp+0x4], 0x1
 8063918:  mov DWORD PTR [esp], ebx
 806391b:  call 8065440
 8063920:  sub eax, 0x1
 8063923:  je 8063980
 8063925:  mov eax, 0xffffffff
 806392a:  mov ebx, DWORD PTR [ebp-0xc]
 806392d:  mov esi, DWORD PTR [ebp-0x8]
 8063930:  mov edi, DWORD PTR [ebp-0x4]
 8063933:  mov esp, ebp
 8063935:  pop ebp
 8063936:  ret
 8063937:  nop
 8063938:  mov ecx, DWORD PTR [ebx+0x58]
 806393b:  mov eax, DWORD PTR [ecx+0x10]
 806393e:  cmp eax, DWORD PTR [ecx+0xc]
 8063941:  ja 8063a05
 8063947:  and dh, 0x1
 806394a:  jne 80639a8
 806394c:  mov eax, DWORD PTR [ecx+0x18]
 806394f:  mov DWORD PTR [ecx+0x8], eax
 8063952:  mov eax, DWORD PTR [ecx+0x10]
 8063955:  cmp eax, DWORD PTR [ecx+0x4]
 8063958:  jbe 806395d
 806395a:  mov DWORD PTR [ecx+0x4], eax
 806395d:  mov esi, DWORD PTR [ecx+0x4]
 8063960:  and DWORD PTR [ebx], 0xfffff7ff
 8063966:  mov DWORD PTR [ecx], eax
 8063968:  cmp eax, esi
 806396a:  mov DWORD PTR [ecx+0x14], eax
 806396d:  mov DWORD PTR [ecx+0x10], eax
 8063970:  mov DWORD PTR [ecx+0xc], eax
 8063973:  jae 80638d1
 8063979:  mov eax, DWORD PTR [eax]
 806397b:  jmp 806392a
 806397d:  lea esi, [esi]
 8063980:  mov eax, DWORD PTR [ebx+0x68]
 8063983:  test eax, eax
 8063985:  jne 80638ba
 806398b:  mov DWORD PTR [esp+0x4], 0x1
 8063993:  mov DWORD PTR [esp], ebx
 8063996:  call 8065440
 806399b:  mov edx, DWORD PTR [ebx]
 806399d:  test dh, 0x8
 80639a0:  je 80638c1
 80639a6:  jmp 8063938
 80639a8:  mov eax, DWORD PTR [ecx+0x24]
 80639ab:  mov DWORD PTR [ecx+0x8], eax
 80639ae:  mov eax, DWORD PTR [ecx+0x10]
 80639b1:  jmp 806395d
 80639b3:  nop
 80639b4:  lea esi, [esi]
 80639b8:  mov edx, DWORD PTR [ecx+0x28]
 80639bb:  and ah, 0xfe
 80639be:  mov edi, DWORD PTR [ecx+0x20]
 80639c1:  mov DWORD PTR [ebx], eax
 80639c3:  mov eax, DWORD PTR [ecx+0x8]
 80639c6:  mov DWORD PTR [ecx+0x28], esi
 80639c9:  mov DWORD PTR [ecx+0x4], edx
 80639cc:  mov esi, edx
 80639ce:  cmp edi, edx
 80639d0:  mov DWORD PTR [ecx+0x8], edi
 80639d3:  mov DWORD PTR [ecx+0x20], eax
 80639d6:  mov DWORD PTR [ecx], edi
 80639d8:  jae 80638dc
 80639de:  mov eax, DWORD PTR [edi]
 80639e0:  jmp 806392a
 80639e5:  lea esi, [esi]
 80639e8:  mov eax, DWORD PTR [ebx+0x24]
 80639eb:  test eax, eax
 80639ed:  je 80638f4
 80639f3:  mov DWORD PTR [esp], ebx
 80639f6:  call 8063060
 80639fb:  nop
 80639fc:  lea esi, [esi]
 8063a00:  jmp 80638f4
 8063a05:  mov eax, DWORD PTR [ecx+0xb8]
 8063a0b:  mov DWORD PTR [esp+0x4], 0xffffffff
 8063a13:  mov DWORD PTR [esp], ebx
 8063a16:  call DWORD PTR [eax+0xc]
 8063a19:  add eax, 0x1
 8063a1c:  je 8063925
 8063a22:  mov edx, DWORD PTR [ebx]
 8063a24:  mov ecx, DWORD PTR [ebx+0x58]
 8063a27:  jmp 8063947
 8063a2c:  lea esi, [esi]

08063a30 <_IO_wdefault_xsgetn>:
 8063a30:  push ebp
 8063a31:  mov ebp, esp
 8063a33:  push edi
 8063a34:  push esi
 8063a35:  push ebx
 8063a36:  sub esp, 0x10
 8063a39:  mov eax, DWORD PTR [ebp+0x10]
 8063a3c:  mov edi, DWORD PTR [ebp+0xc]
 8063a3f:  mov DWORD PTR [ebp-0x10], eax
 8063a42:  lea esi, [esi]
 8063a48:  mov eax, DWORD PTR [ebp+0x8]
 8063a4b:  mov esi, DWORD PTR [eax+0x58]
 8063a4e:  mov edx, DWORD PTR [esi]
 8063a50:  mov ecx, DWORD PTR [esi+0x4]
 8063a53:  sub ecx, edx
 8063a55:  sar ecx, 0x2
 8063a58:  test ecx, ecx
 8063a5a:  jle 8063a8d
 8063a5c:  cmp DWORD PTR [ebp-0x10], ecx
 8063a5f:  jae 8063a64
 8063a61:  mov ecx, DWORD PTR [ebp-0x10]
 8063a64:  cmp ecx, 0x14
 8063a67:  jg 8063ab8
 8063a69:  xor ebx, ebx
 8063a6b:  test ecx, ecx
 8063a6d:  je 8063a8a
 8063a6f:  nop
 8063a70:  mov eax, DWORD PTR [edx+ebx*4]
 8063a73:  mov DWORD PTR [edi+ebx*4], eax
 8063a76:  add ebx, 0x1
 8063a79:  cmp ebx, ecx
 8063a7b:  jne 8063a70
 8063a7d:  lea eax, [ebx*4]
 8063a84:  add edx, eax
 8063a86:  add edi, eax
 8063a88:  mov DWORD PTR [esi], edx
 8063a8a:  sub DWORD PTR [ebp-0x10], ebx
 8063a8d:  mov eax, DWORD PTR [ebp-0x10]
 8063a90:  test eax, eax
 8063a92:  je 8063aa4
 8063a94:  mov eax, DWORD PTR [ebp+0x8]
 8063a97:  mov DWORD PTR [esp], eax
 8063a9a:  call 80638a0
 8063a9f:  add eax, 0x1
 8063aa2:  jne 8063a48
 8063aa4:  mov eax, DWORD PTR [ebp-0x10]
 8063aa7:  sub DWORD PTR [ebp+0x10], eax
 8063aaa:  mov eax, DWORD PTR [ebp+0x10]
 8063aad:  add esp, 0x10
 8063ab0:  pop ebx
 8063ab1:  pop esi
 8063ab2:  pop edi
 8063ab3:  pop ebp
 8063ab4:  ret
 8063ab5:  lea esi, [esi]
 8063ab8:  mov ebx, ecx
 8063aba:  mov DWORD PTR [esp+0x4], edx
 8063abe:  mov DWORD PTR [esp], edi
 8063ac1:  mov DWORD PTR [esp+0x8], ecx
 8063ac5:  call 806c5f0
 8063aca:  mov edi, eax
 8063acc:  mov eax, DWORD PTR [ebp+0x8]
 8063acf:  mov edx, DWORD PTR [eax+0x58]
 8063ad2:  lea eax, [ebx*4]
 8063ad9:  add DWORD PTR [edx], eax
 8063adb:  jmp 8063a8a
 8063add:  lea esi, [esi]

08063ae0 <__wuflow>:
 8063ae0:  push ebp
 8063ae1:  mov ebp, esp
 8063ae3:  sub esp, 0x14
 8063ae6:  mov DWORD PTR [ebp-0xc], ebx
 8063ae9:  mov ebx, DWORD PTR [ebp+0x8]
 8063aec:  mov DWORD PTR [ebp-0x8], esi
 8063aef:  mov DWORD PTR [ebp-0x4], edi
 8063af2:  cmp DWORD PTR [ebx+0x68], 0x0
 8063af6:  jl 8063b65
 8063af8:  je 8063b50
 8063afa:  mov edx, DWORD PTR [ebx]
 8063afc:  test dh, 0x8
 8063aff:  jne 8063b80
 8063b01:  mov ecx, DWORD PTR [ebx+0x58]
 8063b04:  mov eax, DWORD PTR [ecx]
 8063b06:  mov esi, DWORD PTR [ecx+0x4]
 8063b09:  cmp eax, esi
 8063b0b:  jb 8063bc1
 8063b11:  mov eax, DWORD PTR [ebx]
 8063b13:  test ah, 0x1
 8063b16:  jne 8063c08
 8063b1c:  mov edx, DWORD PTR [ebx+0x30]
 8063b1f:  test edx, edx
 8063b21:  je 8063c40
 8063b27:  mov edx, esi
 8063b29:  mov eax, ebx
 8063b2b:  call 8063230
 8063b30:  test eax, eax
 8063b32:  jne 8063b65
 8063b34:  mov eax, DWORD PTR [ebx+0x94]
 8063b3a:  mov DWORD PTR [ebp+0x8], ebx
 8063b3d:  mov esi, DWORD PTR [ebp-0x8]
 8063b40:  mov ebx, DWORD PTR [ebp-0xc]
 8063b43:  mov edi, DWORD PTR [ebp-0x4]
 8063b46:  mov ecx, DWORD PTR [eax+0x14]
 8063b49:  mov esp, ebp
 8063b4b:  pop ebp
 8063b4c:  jmp ecx
 8063b4e:  xchg ax, ax
 8063b50:  mov DWORD PTR [esp+0x4], 0x1
 8063b58:  mov DWORD PTR [esp], ebx
 8063b5b:  call 8065440
 8063b60:  sub eax, 0x1
 8063b63:  je 8063bd0
 8063b65:  mov edx, 0xffffffff
 8063b6a:  mov ebx, DWORD PTR [ebp-0xc]
 8063b6d:  mov eax, edx
 8063b6f:  mov esi, DWORD PTR [ebp-0x8]
 8063b72:  mov edi, DWORD PTR [ebp-0x4]
 8063b75:  mov esp, ebp
 8063b77:  pop ebp
 8063b78:  ret
 8063b79:  lea esi, [esi]
 8063b80:  mov ecx, DWORD PTR [ebx+0x58]
 8063b83:  mov eax, DWORD PTR [ecx+0x10]
 8063b86:  cmp eax, DWORD PTR [ecx+0xc]
 8063b89:  ja 8063c5d
 8063b8f:  and dh, 0x1
 8063b92:  jne 8063bf8
 8063b94:  mov eax, DWORD PTR [ecx+0x18]
 8063b97:  mov DWORD PTR [ecx+0x8], eax
 8063b9a:  mov eax, DWORD PTR [ecx+0x10]
 8063b9d:  cmp eax, DWORD PTR [ecx+0x4]
 8063ba0:  jbe 8063ba5
 8063ba2:  mov DWORD PTR [ecx+0x4], eax
 8063ba5:  mov esi, DWORD PTR [ecx+0x4]
 8063ba8:  and DWORD PTR [ebx], 0xfffff7ff
 8063bae:  mov DWORD PTR [ecx], eax
 8063bb0:  cmp eax, esi
 8063bb2:  mov DWORD PTR [ecx+0x14], eax
 8063bb5:  mov DWORD PTR [ecx+0x10], eax
 8063bb8:  mov DWORD PTR [ecx+0xc], eax
 8063bbb:  jae 8063b11
 8063bc1:  mov edx, DWORD PTR [eax]
 8063bc3:  add eax, 0x4
 8063bc6:  mov DWORD PTR [ecx], eax
 8063bc8:  jmp 8063b6a
 8063bca:  lea esi, [esi]
 8063bd0:  mov ecx, DWORD PTR [ebx+0x68]
 8063bd3:  test ecx, ecx
 8063bd5:  jne 8063afa
 8063bdb:  mov DWORD PTR [esp+0x4], 0x1
 8063be3:  mov DWORD PTR [esp], ebx
 8063be6:  call 8065440
 8063beb:  mov edx, DWORD PTR [ebx]
 8063bed:  test dh, 0x8
 8063bf0:  je 8063b01
 8063bf6:  jmp 8063b80
 8063bf8:  mov eax, DWORD PTR [ecx+0x24]
 8063bfb:  mov DWORD PTR [ecx+0x8], eax
 8063bfe:  mov eax, DWORD PTR [ecx+0x10]
 8063c01:  jmp 8063ba5
 8063c03:  nop
 8063c04:  lea esi, [esi]
 8063c08:  mov edx, DWORD PTR [ecx+0x28]
 8063c0b:  and ah, 0xfe
 8063c0e:  mov edi, DWORD PTR [ecx+0x20]
 8063c11:  mov DWORD PTR [ebx], eax
 8063c13:  mov eax, DWORD PTR [ecx+0x8]
 8063c16:  mov DWORD PTR [ecx+0x28], esi
 8063c19:  mov DWORD PTR [ecx+0x4], edx
 8063c1c:  mov esi, edx
 8063c1e:  cmp edi, edx
 8063c20:  mov DWORD PTR [ecx+0x8], edi
 8063c23:  mov DWORD PTR [ecx+0x20], eax
 8063c26:  mov DWORD PTR [ecx], edi
 8063c28:  jae 8063b1c
 8063c2e:  lea eax, [edi+0x4]
 8063c31:  mov edx, DWORD PTR [edi]
 8063c33:  mov DWORD PTR [ecx], eax
 8063c35:  jmp 8063b6a
 8063c3a:  lea esi, [esi]
 8063c40:  mov eax, DWORD PTR [ecx+0x20]
 8063c43:  test eax, eax
 8063c45:  je 8063b34
 8063c4b:  mov DWORD PTR [esp], ebx
 8063c4e:  call 8063060
 8063c53:  nop
 8063c54:  lea esi, [esi]
 8063c58:  jmp 8063b34
 8063c5d:  mov eax, DWORD PTR [ecx+0xb8]
 8063c63:  mov DWORD PTR [esp+0x4], 0xffffffff
 8063c6b:  mov DWORD PTR [esp], ebx
 8063c6e:  call DWORD PTR [eax+0xc]
 8063c71:  add eax, 0x1
 8063c74:  je 8063b65
 8063c7a:  mov edx, DWORD PTR [ebx]
 8063c7c:  mov ecx, DWORD PTR [ebx+0x58]
 8063c7f:  jmp 8063b8f
 8063c84:  lea esi, [esi]
 8063c8a:  lea edi, [edi]

08063c90 <_IO_wdoallocbuf>:
 8063c90:  push ebp
 8063c91:  mov ebp, esp
 8063c93:  sub esp, 0x14
 8063c96:  mov DWORD PTR [ebp-0xc], ebx
 8063c99:  mov ebx, DWORD PTR [ebp+0x8]
 8063c9c:  mov DWORD PTR [ebp-0x8], esi
 8063c9f:  mov DWORD PTR [ebp-0x4], edi
 8063ca2:  mov eax, DWORD PTR [ebx+0x58]
 8063ca5:  mov esi, DWORD PTR [eax+0x18]
 8063ca8:  test esi, esi
 8063caa:  je 8063cc0
 8063cac:  mov ebx, DWORD PTR [ebp-0xc]
 8063caf:  mov esi, DWORD PTR [ebp-0x8]
 8063cb2:  mov edi, DWORD PTR [ebp-0x4]
 8063cb5:  mov esp, ebp
 8063cb7:  pop ebp
 8063cb8:  ret
 8063cb9:  lea esi, [esi]
 8063cc0:  test BYTE PTR [ebx], 0x2
 8063cc3:  lea edi, [eax+0xb8]
 8063cc9:  lea esi, [eax+0xb4]
 8063ccf:  jne 8063d28
 8063cd1:  mov eax, DWORD PTR [eax+0xb8]
 8063cd7:  mov DWORD PTR [esp], ebx
 8063cda:  call DWORD PTR [eax+0x34]
 8063cdd:  add eax, 0x1
 8063ce0:  jne 8063cac
 8063ce2:  mov eax, DWORD PTR [ebx+0x58]
 8063ce5:  mov edx, DWORD PTR [eax+0x18]
 8063ce8:  lea edi, [eax+0xb8]
 8063cee:  lea esi, [eax+0xb4]
 8063cf4:  test edx, edx
 8063cf6:  je 8063d28
 8063cf8:  test BYTE PTR [ebx+0x3c], 0x8
 8063cfc:  jne 8063d28
 8063cfe:  mov eax, DWORD PTR [eax+0x1c]
 8063d01:  mov DWORD PTR [esp], edx
 8063d04:  sub eax, edx
 8063d06:  sar eax, 0x2
 8063d09:  lea eax, [eax*4+0xfff]
 8063d10:  and eax, 0xfffff000
 8063d15:  mov DWORD PTR [esp+0x4], eax
 8063d19:  call 8050050
 8063d1e:  mov eax, DWORD PTR [ebx+0x58]
 8063d21:  lea esi, [esi]
 8063d28:  mov DWORD PTR [eax+0x18], esi
 8063d2b:  mov DWORD PTR [eax+0x1c], edi
 8063d2e:  or DWORD PTR [ebx+0x3c], 0x8
 8063d32:  jmp 8063cac
 8063d37:  nop
 8063d38:  nop
 8063d39:  nop
 8063d3a:  nop
 8063d3b:  nop
 8063d3c:  nop
 8063d3d:  nop
 8063d3e:  nop
 8063d3f:  nop

08063d40 <_IO_wfile_underflow_maybe_mmap>:
 8063d40:  push ebp
 8063d41:  mov ebp, esp
 8063d43:  push ebx
 8063d44:  sub esp, 0x4
 8063d47:  mov ebx, DWORD PTR [ebp+0x8]
 8063d4a:  mov DWORD PTR [esp], ebx
 8063d4d:  call 8066070
 8063d52:  cmp eax, 0xff
 8063d55:  je 8063d70
 8063d57:  mov eax, DWORD PTR [ebx+0x58]
 8063d5a:  mov eax, DWORD PTR [eax+0xb8]
 8063d60:  mov DWORD PTR [ebp+0x8], ebx
 8063d63:  mov ecx, DWORD PTR [eax+0x10]
 8063d66:  add esp, 0x4
 8063d69:  pop ebx
 8063d6a:  pop ebp
 8063d6b:  jmp ecx
 8063d6d:  lea esi, [esi]
 8063d70:  add esp, 0x4
 8063d73:  pop ebx
 8063d74:  pop ebp
 8063d75:  ret
 8063d76:  lea esi, [esi]
 8063d79:  lea edi, [edi]

08063d80 <_IO_wfile_underflow_mmap>:
 8063d80:  push ebp
 8063d81:  mov ebp, esp
 8063d83:  push esi
 8063d84:  push ebx
 8063d85:  sub esp, 0x24
 8063d88:  mov ebx, DWORD PTR [ebp+0x8]
 8063d8b:  mov eax, DWORD PTR [ebx]
 8063d8d:  test al, 0x4
 8063d8f:  jne 8063ead
 8063d95:  mov ecx, DWORD PTR [ebx+0x58]
 8063d98:  mov eax, DWORD PTR [ecx]
 8063d9a:  cmp eax, DWORD PTR [ecx+0x4]
 8063d9d:  jb 8063e68
 8063da3:  mov eax, DWORD PTR [ebx+0x4]
 8063da6:  cmp eax, DWORD PTR [ebx+0x8]
 8063da9:  mov esi, DWORD PTR [ebx+0x54]
 8063dac:  jae 8063e48
 8063db2:  mov DWORD PTR [ebp-0xc], eax
 8063db5:  mov eax, DWORD PTR [ecx+0x18]
 8063db8:  test eax, eax
 8063dba:  je 8063e88
 8063dc0:  mov eax, DWORD PTR [ecx+0x2c]
 8063dc3:  mov edx, DWORD PTR [ecx+0x30]
 8063dc6:  mov DWORD PTR [ecx+0x34], eax
 8063dc9:  mov DWORD PTR [ecx+0x38], edx
 8063dcc:  mov edx, DWORD PTR [ebx+0x58]
 8063dcf:  mov eax, DWORD PTR [edx+0x18]
 8063dd2:  mov DWORD PTR [edx], eax
 8063dd4:  mov DWORD PTR [edx+0x8], eax
 8063dd7:  lea eax, [edx+0x4]
 8063dda:  mov DWORD PTR [esp+0x1c], eax
 8063dde:  mov eax, DWORD PTR [edx+0x1c]
 8063de1:  mov DWORD PTR [esp+0x18], eax
 8063de5:  mov eax, DWORD PTR [edx]
 8063de7:  add edx, 0x2c
 8063dea:  mov DWORD PTR [esp+0x14], eax
 8063dee:  lea eax, [ebp-0xc]
 8063df1:  mov DWORD PTR [esp+0x10], eax
 8063df5:  mov eax, DWORD PTR [ebx+0x8]
 8063df8:  mov DWORD PTR [esp+0xc], eax
 8063dfc:  mov eax, DWORD PTR [ebx+0x4]
 8063dff:  mov DWORD PTR [esp+0x4], edx
 8063e03:  mov DWORD PTR [esp], esi
 8063e06:  mov DWORD PTR [esp+0x8], eax
 8063e0a:  call DWORD PTR [esi+0xc]
 8063e0d:  mov eax, DWORD PTR [ebp-0xc]
 8063e10:  mov DWORD PTR [ebx+0x4], eax
 8063e13:  mov eax, DWORD PTR [ebx+0x58]
 8063e16:  mov edx, DWORD PTR [eax]
 8063e18:  cmp edx, DWORD PTR [eax+0x4]
 8063e1b:  jb 8063e78
 8063e1d:  mov edx, 0xffffffe8
 8063e23:  mov eax, gs:0x0
 8063e29:  mov DWORD PTR [eax+edx], 0x54
 8063e30:  mov edx, 0xffffffff
 8063e35:  or DWORD PTR [ebx], 0x20
 8063e38:  add esp, 0x24
 8063e3b:  mov eax, edx
 8063e3d:  pop ebx
 8063e3e:  pop esi
 8063e3f:  pop ebp
 8063e40:  ret
 8063e41:  lea esi, [esi]
 8063e48:  mov DWORD PTR [esp], ebx
 8063e4b:  call 80663e0
 8063e50:  mov edx, 0xffffffff
 8063e55:  add eax, 0x1
 8063e58:  je 8063e38
 8063e5a:  mov eax, DWORD PTR [ebx+0x4]
 8063e5d:  mov ecx, DWORD PTR [ebx+0x58]
 8063e60:  jmp 8063db2
 8063e65:  lea esi, [esi]
 8063e68:  mov edx, DWORD PTR [eax]
 8063e6a:  add esp, 0x24
 8063e6d:  pop ebx
 8063e6e:  pop esi
 8063e6f:  pop ebp
 8063e70:  mov eax, edx
 8063e72:  ret
 8063e73:  nop
 8063e74:  lea esi, [esi]
 8063e78:  mov edx, DWORD PTR [edx]
 8063e7a:  add esp, 0x24
 8063e7d:  pop ebx
 8063e7e:  pop esi
 8063e7f:  pop ebp
 8063e80:  mov eax, edx
 8063e82:  ret
 8063e83:  nop
 8063e84:  lea esi, [esi]
 8063e88:  mov eax, DWORD PTR [ecx+0x20]
 8063e8b:  test eax, eax
 8063e8d:  je 8063e9d
 8063e8f:  mov DWORD PTR [esp], eax
 8063e92:  call 804b4a0
 8063e97:  and DWORD PTR [ebx], 0xfffffeff
 8063e9d:  mov DWORD PTR [esp], ebx
 8063ea0:  call 8063c90
 8063ea5:  mov ecx, DWORD PTR [ebx+0x58]
 8063ea8:  jmp 8063dc0
 8063ead:  or eax, 0x20
 8063eb0:  mov edx, 0xffffffe8
 8063eb6:  mov DWORD PTR [ebx], eax
 8063eb8:  mov eax, gs:0x0
 8063ebe:  mov DWORD PTR [eax+edx], 0x9
 8063ec5:  mov edx, 0xffffffff
 8063eca:  jmp 8063e38
 8063ecf:  nop

08063ed0 <_IO_wfile_seekoff>:
 8063ed0:  push ebp
 8063ed1:  mov ebp, esp
 8063ed3:  push edi
 8063ed4:  push esi
 8063ed5:  push ebx
 8063ed6:  sub esp, 0x10ec
 8063edc:  mov ebx, DWORD PTR [ebp+0x8]
 8063edf:  mov esi, DWORD PTR [ebp+0xc]
 8063ee2:  mov edi, DWORD PTR [ebp+0x10]
 8063ee5:  mov DWORD PTR [ebp-0x1090], 0x0
 8063eef:  mov edx, DWORD PTR [ebx+0x58]
 8063ef2:  mov ecx, DWORD PTR [edx+0x4]
 8063ef5:  cmp DWORD PTR [edx+0x8], ecx
 8063ef8:  je 80643e8
 8063efe:  mov eax, DWORD PTR [ebp+0x18]
 8063f01:  test eax, eax
 8063f03:  jne 8063f1b
 8063f05:  mov eax, DWORD PTR [ebx]
 8063f07:  xor esi, esi
 8063f09:  xor edi, edi
 8063f0b:  mov DWORD PTR [ebp+0x14], 0x1
 8063f12:  test ah, 0x1
 8063f15:  jne 8064128
 8063f1b:  mov eax, DWORD PTR [edx+0x10]
 8063f1e:  cmp eax, DWORD PTR [edx+0xc]
 8063f21:  ja 80640f0
 8063f27:  mov eax, DWORD PTR [ebx]
 8063f29:  test ah, 0x8
 8063f2c:  jne 80640f0
 8063f32:  mov eax, DWORD PTR [edx+0x18]
 8063f35:  test eax, eax
 8063f37:  je 8064418
 8063f3d:  cmp DWORD PTR [ebp+0x14], 0x1
 8063f41:  je 8064150
 8063f47:  cmp DWORD PTR [ebp+0x14], 0x2
 8063f4b:  nop
 8063f4c:  lea esi, [esi]
 8063f50:  je 80641a0
 8063f56:  mov eax, DWORD PTR [ebp+0x18]
 8063f59:  test eax, eax
 8063f5b:  nop
 8063f5c:  lea esi, [esi]
 8063f60:  je 8064117
 8063f66:  mov eax, DWORD PTR [ebx+0x4c]
 8063f69:  mov edx, DWORD PTR [ebx+0x50]
 8063f6c:  mov DWORD PTR [ebp-0x10c8], eax
 8063f72:  mov eax, DWORD PTR [ebp-0x10c8]
 8063f78:  mov DWORD PTR [ebp-0x10c4], edx
 8063f7e:  and eax, edx
 8063f80:  add eax, 0x1
 8063f83:  je 8064260
 8063f89:  mov edx, DWORD PTR [ebx+0xc]
 8063f8c:  test edx, edx
 8063f8e:  mov DWORD PTR [ebp-0x1078], edx
 8063f94:  je 8064260
 8063f9a:  mov eax, DWORD PTR [ebx]
 8063f9c:  test ah, 0x1
 8063f9f:  mov DWORD PTR [ebp-0x1084], eax
 8063fa5:  jne 8064268
 8063fab:  mov ecx, DWORD PTR [ebp-0x1078]
 8063fb1:  mov edx, DWORD PTR [ebx+0x8]
 8063fb4:  sub edx, ecx
 8063fb6:  mov eax, edx
 8063fb8:  mov DWORD PTR [ebp-0x10b0], eax
 8063fbe:  sar edx, 0x1f
 8063fc1:  sub eax, DWORD PTR [ebp-0x10c8]
 8063fc7:  mov DWORD PTR [ebp-0x10ac], edx
 8063fcd:  sbb edx, DWORD PTR [ebp-0x10c4]
 8063fd3:  mov DWORD PTR [ebp-0x10d0], eax
 8063fd9:  add DWORD PTR [ebp-0x10d0], esi
 8063fdf:  mov DWORD PTR [ebp-0x10cc], edx
 8063fe5:  adc DWORD PTR [ebp-0x10cc], edi
 8063feb:  mov ecx, DWORD PTR [ebp-0x10cc]
 8063ff1:  test ecx, ecx
 8063ff3:  js 8064268
 8063ff9:  mov edx, DWORD PTR [ebp-0x10cc]
 8063fff:  cmp DWORD PTR [ebp-0x10ac], edx
 8064005:  jl 8064268
 806400b:  jg 806401f
 806400d:  mov ecx, DWORD PTR [ebp-0x10d0]
 8064013:  cmp DWORD PTR [ebp-0x10b0], ecx
 8064019:  jb 8064268
 806401f:  mov eax, DWORD PTR [ebx+0x54]
 8064022:  mov DWORD PTR [ebp-0x1088], eax
 8064028:  mov eax, DWORD PTR [ebp-0x10d0]
 806402e:  add eax, DWORD PTR [ebp-0x1078]
 8064034:  mov DWORD PTR [ebx+0x4], eax
 8064037:  mov eax, DWORD PTR [ebx+0x1c]
 806403a:  mov DWORD PTR [ebx+0x14], eax
 806403d:  mov DWORD PTR [ebx+0x10], eax
 8064040:  mov DWORD PTR [ebx+0x18], eax
 8064043:  mov eax, DWORD PTR [ebx+0x58]
 8064046:  mov edx, DWORD PTR [eax+0x34]
 8064049:  mov ecx, DWORD PTR [eax+0x38]
 806404c:  mov DWORD PTR [eax+0x2c], edx
 806404f:  mov DWORD PTR [eax+0x30], ecx
 8064052:  mov eax, DWORD PTR [ebx+0xc]
 8064055:  mov edx, DWORD PTR [ebx+0x58]
 8064058:  mov DWORD PTR [ebp-0x10], eax
 806405b:  mov eax, DWORD PTR [edx+0x8]
 806405e:  mov DWORD PTR [edx], eax
 8064060:  mov eax, DWORD PTR [ebx+0x4]
 8064063:  jmp 806406b
 8064065:  lea esi, [esi]
 8064068:  mov edx, DWORD PTR [ebx+0x58]
 806406b:  lea ecx, [ebp-0x14]
 806406e:  mov DWORD PTR [esp+0x1c], ecx
 8064072:  lea ecx, [ebp-0x74]
 8064075:  mov DWORD PTR [esp+0x18], ecx
 8064079:  lea ecx, [ebp-0x1074]
 806407f:  mov DWORD PTR [esp+0x14], ecx
 8064083:  lea ecx, [ebp-0x10]
 8064086:  mov DWORD PTR [esp+0x10], ecx
 806408a:  mov DWORD PTR [esp+0xc], eax
 806408e:  mov eax, DWORD PTR [ebp-0x10]
 8064091:  mov DWORD PTR [esp+0x8], eax
 8064095:  lea eax, [edx+0x2c]
 8064098:  mov DWORD PTR [esp+0x4], eax
 806409c:  mov eax, DWORD PTR [ebp-0x1088]
 80640a2:  mov DWORD PTR [esp], eax
 80640a5:  call DWORD PTR [eax+0xc]
 80640a8:  cmp eax, 0x1
 80640ab:  ja 806455a
 80640b1:  mov eax, DWORD PTR [ebx+0x4]
 80640b4:  cmp eax, DWORD PTR [ebp-0x10]
 80640b7:  jne 8064068
 80640b9:  mov edx, DWORD PTR [ebx+0x58]
 80640bc:  and DWORD PTR [ebx], 0xef
 80640bf:  mov ecx, DWORD PTR [ebx+0x4c]
 80640c2:  mov eax, DWORD PTR [edx+0x8]
 80640c5:  mov DWORD PTR [edx], eax
 80640c7:  mov edx, DWORD PTR [ebx+0x50]
 80640ca:  test edx, edx
 80640cc:  js 8064117
 80640ce:  mov eax, DWORD PTR [ebx+0x94]
 80640d4:  mov DWORD PTR [esp+0xc], 0x0
 80640dc:  mov DWORD PTR [esp+0x4], ecx
 80640e0:  mov DWORD PTR [esp+0x8], edx
 80640e4:  mov DWORD PTR [esp], ebx
 80640e7:  call DWORD PTR [eax+0x40]
 80640ea:  jmp 8064117
 80640ec:  lea esi, [esi]
 80640f0:  mov DWORD PTR [esp], ebx
 80640f3:  call 8062e00
 80640f8:  test eax, eax
 80640fa:  lea esi, [esi]
 8064100:  jne 8064110
 8064102:  mov edx, DWORD PTR [ebx+0x58]
 8064105:  lea esi, [esi]
 8064108:  jmp 8063f32
 806410d:  lea esi, [esi]
 8064110:  mov esi, 0xffffffff
 8064115:  xor edi, edi
 8064117:  add esp, 0x10ec
 806411d:  mov eax, esi
 806411f:  mov edx, edi
 8064121:  pop ebx
 8064122:  pop esi
 8064123:  pop edi
 8064124:  pop ebp
 8064125:  ret
 8064126:  xchg ax, ax
 8064128:  cmp ecx, DWORD PTR [edx]
 806412a:  ja 8064538
 8064130:  mov DWORD PTR [esp], ebx
 8064133:  xor esi, esi
 8064135:  xor edi, edi
 8064137:  call 8062d60
 806413c:  mov edx, DWORD PTR [ebx+0x58]
 806413f:  mov DWORD PTR [ebp+0x14], 0x1
 8064146:  jmp 8063f1b
 806414b:  nop
 806414c:  lea esi, [esi]
 8064150:  mov eax, DWORD PTR [ebx+0x54]
 8064153:  mov DWORD PTR [ebp-0x108c], eax
 8064159:  mov DWORD PTR [esp], eax
 806415c:  call DWORD PTR [eax+0x10]
 806415f:  test eax, eax
 8064161:  mov ecx, eax
 8064163:  jle 8064468
 8064169:  mov eax, DWORD PTR [ebx+0x58]
 806416c:  mov edx, DWORD PTR [eax+0x4]
 806416f:  sub edx, DWORD PTR [eax]
 8064171:  sar edx, 0x2
 8064174:  imul edx, ecx
 8064177:  mov eax, edx
 8064179:  sar edx, 0x1f
 806417c:  sub esi, eax
 806417e:  sbb edi, edx
 8064180:  mov edx, DWORD PTR [ebx+0x4c]
 8064183:  mov ecx, DWORD PTR [ebx+0x50]
 8064186:  mov eax, edx
 8064188:  and eax, ecx
 806418a:  add eax, 0x1
 806418d:  je 80641bb
 806418f:  add esi, edx
 8064191:  adc edi, ecx
 8064193:  mov DWORD PTR [ebp+0x14], 0x0
 806419a:  jmp 8063f56
 806419f:  nop
 80641a0:  mov eax, DWORD PTR [ebx+0x94]
 80641a6:  lea edx, [ebp-0x74]
 80641a9:  mov DWORD PTR [esp+0x4], edx
 80641ad:  mov DWORD PTR [esp], ebx
 80641b0:  call DWORD PTR [eax+0x48]
 80641b3:  test eax, eax
 80641b5:  je 8064238
 80641bb:  mov DWORD PTR [esp], ebx
 80641be:  call 8069d50
 80641c3:  mov eax, DWORD PTR [ebx+0x94]
 80641c9:  mov ecx, DWORD PTR [ebp+0x14]
 80641cc:  mov DWORD PTR [esp+0x4], esi
 80641d0:  mov DWORD PTR [esp+0x8], edi
 80641d4:  mov DWORD PTR [esp], ebx
 80641d7:  mov DWORD PTR [esp+0xc], ecx
 80641db:  call DWORD PTR [eax+0x40]
 80641de:  mov esi, eax
 80641e0:  and eax, edx
 80641e2:  add eax, 0x1
 80641e5:  mov edi, edx
 80641e7:  je 8064400
 80641ed:  mov eax, DWORD PTR [ebx+0x1c]
 80641f0:  mov DWORD PTR [ebx+0x50], edx
 80641f3:  and DWORD PTR [ebx], 0xef
 80641f6:  mov DWORD PTR [ebx+0xc], eax
 80641f9:  mov DWORD PTR [ebx+0x4], eax
 80641fc:  mov DWORD PTR [ebx+0x8], eax
 80641ff:  mov DWORD PTR [ebx+0x14], eax
 8064202:  mov DWORD PTR [ebx+0x10], eax
 8064205:  mov DWORD PTR [ebx+0x18], eax
 8064208:  mov eax, DWORD PTR [ebx+0x58]
 806420b:  mov DWORD PTR [ebx+0x4c], esi
 806420e:  mov DWORD PTR [ebp-0x10c0], edi
 8064214:  mov edx, DWORD PTR [eax+0x18]
 8064217:  mov DWORD PTR [eax+0x8], edx
 806421a:  mov DWORD PTR [eax], edx
 806421c:  mov DWORD PTR [eax+0x4], edx
 806421f:  mov DWORD PTR [eax+0x10], edx
 8064222:  mov DWORD PTR [eax+0xc], edx
 8064225:  mov DWORD PTR [eax+0x14], edx
 8064228:  add esp, 0x10ec
 806422e:  mov eax, esi
 8064230:  mov edx, edi
 8064232:  pop ebx
 8064233:  pop esi
 8064234:  pop edi
 8064235:  pop ebp
 8064236:  ret
 8064237:  nop
 8064238:  mov eax, DWORD PTR [ebp-0x64]
 806423b:  and eax, 0xf000
 8064240:  cmp eax, 0x8000
 8064245:  jne 80641bb
 806424b:  add esi, DWORD PTR [ebp-0x48]
 806424e:  mov DWORD PTR [ebp+0x14], 0x0
 8064255:  adc edi, DWORD PTR [ebp-0x44]
 8064258:  jmp 8063f56
 806425d:  lea esi, [esi]
 8064260:  mov ecx, DWORD PTR [ebx]
 8064262:  mov DWORD PTR [ebp-0x1084], ecx
 8064268:  test BYTE PTR [ebp-0x1084], 0x4
 806426f:  jne 80641bb
 8064275:  mov ecx, DWORD PTR [ebx+0x20]
 8064278:  mov eax, DWORD PTR [ebx+0x1c]
 806427b:  sub eax, ecx
 806427d:  mov edx, eax
 806427f:  sar edx, 0x1f
 8064282:  mov DWORD PTR [ebp-0x10d8], eax
 8064288:  mov eax, DWORD PTR [ebp-0x10d8]
 806428e:  mov DWORD PTR [ebp-0x10d4], edx
 8064294:  mov edx, DWORD PTR [ebp-0x10d4]
 806429a:  and eax, esi
 806429c:  and edx, edi
 806429e:  mov DWORD PTR [ebp-0x1098], eax
 80642a4:  mov eax, esi
 80642a6:  mov DWORD PTR [ebp-0x1094], edx
 80642ac:  mov edx, edi
 80642ae:  sub eax, DWORD PTR [ebp-0x1098]
 80642b4:  sbb edx, DWORD PTR [ebp-0x1094]
 80642ba:  sub ecx, DWORD PTR [ebx+0x1c]
 80642bd:  mov DWORD PTR [ebp-0x10a0], eax
 80642c3:  mov DWORD PTR [ebp-0x109c], edx
 80642c9:  mov edx, ecx
 80642cb:  sar edx, 0x1f
 80642ce:  cmp DWORD PTR [ebp-0x109c], edx
 80642d4:  jl 8064300
 80642d6:  jg 80642e0
 80642d8:  cmp DWORD PTR [ebp-0x10a0], ecx
 80642de:  jbe 8064300
 80642e0:  mov DWORD PTR [ebp-0x1098], esi
 80642e6:  mov DWORD PTR [ebp-0x1094], edi
 80642ec:  mov DWORD PTR [ebp-0x10a0], 0x0
 80642f6:  mov DWORD PTR [ebp-0x109c], 0x0
 8064300:  mov eax, DWORD PTR [ebx+0x94]
 8064306:  mov DWORD PTR [esp+0xc], 0x0
 806430e:  mov edx, DWORD PTR [ebp-0x1098]
 8064314:  mov ecx, DWORD PTR [ebp-0x1094]
 806431a:  mov DWORD PTR [esp], ebx
 806431d:  mov DWORD PTR [esp+0x4], edx
 8064321:  mov DWORD PTR [esp+0x8], ecx
 8064325:  call DWORD PTR [eax+0x40]
 8064328:  test edx, edx
 806432a:  mov DWORD PTR [ebp-0x10a8], eax
 8064330:  mov DWORD PTR [ebp-0x10a4], edx
 8064336:  js 806457d
 806433c:  mov ecx, DWORD PTR [ebp-0x109c]
 8064342:  or ecx, DWORD PTR [ebp-0x10a0]
 8064348:  je 8064562
 806434e:  mov edx, DWORD PTR [ebp-0x1090]
 8064354:  mov eax, DWORD PTR [ebx+0x94]
 806435a:  test edx, edx
 806435c:  mov ecx, DWORD PTR [eax+0x38]
 806435f:  jne 806458c
 8064365:  mov edx, DWORD PTR [ebx+0x1c]
 8064368:  mov eax, DWORD PTR [ebx+0x20]
 806436b:  sub eax, edx
 806436d:  mov DWORD PTR [esp+0x4], edx
 8064371:  mov DWORD PTR [esp+0x8], eax
 8064375:  mov DWORD PTR [esp], ebx
 8064378:  call ecx
 806437a:  mov edx, eax
 806437c:  sar edx, 0x1f
 806437f:  mov DWORD PTR [ebp-0x107c], edx
 8064385:  mov ecx, DWORD PTR [ebp-0x107c]
 806438b:  cmp DWORD PTR [ebp-0x109c], ecx
 8064391:  mov DWORD PTR [ebp-0x1080], eax
 8064397:  jg 80643b1
 8064399:  jl 80644e4
 806439f:  mov edx, DWORD PTR [ebp-0x1080]
 80643a5:  cmp DWORD PTR [ebp-0x10a0], edx
 80643ab:  jbe 80644e4
 80643b1:  add eax, 0x1
 80643b4:  mov esi, DWORD PTR [ebp-0x10a0]
 80643ba:  mov edi, DWORD PTR [ebp-0x109c]
 80643c0:  mov DWORD PTR [ebp+0x14], 0x1
 80643c7:  je 80641bb
 80643cd:  sub esi, DWORD PTR [ebp-0x1080]
 80643d3:  mov DWORD PTR [ebp+0x14], 0x1
 80643da:  sbb edi, DWORD PTR [ebp-0x107c]
 80643e0:  jmp 80641bb
 80643e5:  lea esi, [esi]
 80643e8:  mov eax, DWORD PTR [edx+0xc]
 80643eb:  cmp eax, DWORD PTR [edx+0x10]
 80643ee:  sete al
 80643f1:  movzx eax, al
 80643f4:  mov DWORD PTR [ebp-0x1090], eax
 80643fa:  jmp 8063efe
 80643ff:  nop
 8064400:  mov DWORD PTR [ebp-0x10bc], edx
 8064406:  mov eax, esi
 8064408:  add esp, 0x10ec
 806440e:  mov edx, edi
 8064410:  pop ebx
 8064411:  pop esi
 8064412:  pop edi
 8064413:  pop ebp
 8064414:  ret
 8064415:  lea esi, [esi]
 8064418:  mov eax, DWORD PTR [edx+0x8]
 806441b:  test eax, eax
 806441d:  je 806442d
 806441f:  mov DWORD PTR [esp], eax
 8064422:  call 804b4a0
 8064427:  and DWORD PTR [ebx], 0xfffffeff
 806442d:  mov DWORD PTR [esp], ebx
 8064430:  call 80689f0
 8064435:  mov eax, DWORD PTR [ebx+0x1c]
 8064438:  mov DWORD PTR [ebx+0x14], eax
 806443b:  mov DWORD PTR [ebx+0x10], eax
 806443e:  mov DWORD PTR [ebx+0x18], eax
 8064441:  mov DWORD PTR [ebx+0xc], eax
 8064444:  mov DWORD PTR [ebx+0x4], eax
 8064447:  mov DWORD PTR [ebx+0x8], eax
 806444a:  mov eax, DWORD PTR [ebx+0x58]
 806444d:  mov edx, DWORD PTR [eax+0x18]
 8064450:  mov DWORD PTR [eax+0x10], edx
 8064453:  mov DWORD PTR [eax+0xc], edx
 8064456:  mov DWORD PTR [eax+0x14], edx
 8064459:  mov DWORD PTR [eax+0x8], edx
 806445c:  mov DWORD PTR [eax], edx
 806445e:  mov DWORD PTR [eax+0x4], edx
 8064461:  jmp 8063f3d
 8064466:  xchg ax, ax
 8064468:  mov ecx, DWORD PTR [ebx+0x58]
 806446b:  mov eax, DWORD PTR [ebx+0x58]
 806446e:  mov ecx, DWORD PTR [ecx]
 8064470:  mov eax, DWORD PTR [eax+0x8]
 8064473:  sub ecx, eax
 8064475:  mov eax, DWORD PTR [ebx+0x58]
 8064478:  sar ecx, 0x2
 806447b:  mov DWORD PTR [ebp-0x10d8], ecx
 8064481:  mov ecx, DWORD PTR [ebx+0x58]
 8064484:  mov edx, DWORD PTR [ecx+0x34]
 8064487:  mov ecx, DWORD PTR [ecx+0x38]
 806448a:  mov DWORD PTR [eax+0x2c], edx
 806448d:  mov DWORD PTR [eax+0x30], ecx
 8064490:  mov edx, DWORD PTR [ebp-0x10d8]
 8064496:  mov DWORD PTR [esp+0x10], edx
 806449a:  mov eax, DWORD PTR [ebx+0x8]
 806449d:  mov DWORD PTR [esp+0xc], eax
 80644a1:  mov eax, DWORD PTR [ebx+0xc]
 80644a4:  mov DWORD PTR [esp+0x8], eax
 80644a8:  mov eax, DWORD PTR [ebx+0x58]
 80644ab:  add eax, 0x2c
 80644ae:  mov DWORD PTR [esp+0x4], eax
 80644b2:  mov ecx, DWORD PTR [ebp-0x108c]
 80644b8:  mov DWORD PTR [esp], ecx
 80644bb:  call DWORD PTR [ecx+0x18]
 80644be:  mov ecx, DWORD PTR [ebx+0x58]
 80644c1:  mov edx, eax
 80644c3:  add edx, DWORD PTR [ebx+0xc]
 80644c6:  mov DWORD PTR [ebx+0x4], edx
 80644c9:  mov edx, DWORD PTR [ecx]
 80644cb:  mov DWORD PTR [ecx+0x4], edx
 80644ce:  mov edx, DWORD PTR [ebx+0x8]
 80644d1:  sub edx, DWORD PTR [ebx+0xc]
 80644d4:  sub edx, eax
 80644d6:  mov eax, edx
 80644d8:  sar edx, 0x1f
 80644db:  sub esi, eax
 80644dd:  sbb edi, edx
 80644df:  jmp 8064180
 80644e4:  mov ecx, eax
 80644e6:  mov edx, DWORD PTR [ebx+0x1c]
 80644e9:  mov eax, DWORD PTR [ebp-0x10a0]
 80644ef:  add ecx, edx
 80644f1:  add eax, edx
 80644f3:  mov DWORD PTR [ebx+0x4], eax
 80644f6:  mov eax, DWORD PTR [ebp-0x10a8]
 80644fc:  add DWORD PTR [ebp-0x1080], eax
 8064502:  mov DWORD PTR [ebx+0xc], edx
 8064505:  mov DWORD PTR [ebx+0x14], edx
 8064508:  mov DWORD PTR [ebx+0x10], edx
 806450b:  mov DWORD PTR [ebx+0x18], edx
 806450e:  mov edx, DWORD PTR [ebp-0x10a4]
 8064514:  adc DWORD PTR [ebp-0x107c], edx
 806451a:  mov edx, DWORD PTR [ebp-0x1080]
 8064520:  mov DWORD PTR [ebx+0x8], ecx
 8064523:  mov ecx, DWORD PTR [ebp-0x107c]
 8064529:  and DWORD PTR [ebx], 0xef
 806452c:  mov DWORD PTR [ebx+0x4c], edx
 806452f:  mov DWORD PTR [ebx+0x50], ecx
 8064532:  jmp 8064117
 8064537:  nop
 8064538:  mov edx, 0xffffffe8
 806453e:  mov esi, 0xffffffff
 8064543:  mov edi, 0xffffffff
 8064548:  mov eax, gs:0x0
 806454e:  mov DWORD PTR [eax+edx], 0x16
 8064555:  jmp 8064117
 806455a:  or DWORD PTR [ebx], 0x20
 806455d:  jmp 80641bb
 8064562:  xor ecx, ecx
 8064564:  mov DWORD PTR [ebp-0x1080], 0x0
 806456e:  mov DWORD PTR [ebp-0x107c], 0x0
 8064578:  jmp 80644e6
 806457d:  mov esi, 0xffffffff
 8064582:  mov edi, 0xffffffff
 8064587:  jmp 8064117
 806458c:  mov eax, DWORD PTR [ebp-0x10a0]
 8064592:  mov edx, DWORD PTR [ebx+0x1c]
 8064595:  jmp 806436d
 806459a:  lea esi, [esi]

080645a0 <_IO_wfile_underflow>:
 80645a0:  push ebp
 80645a1:  mov ebp, esp
 80645a3:  push edi
 80645a4:  push esi
 80645a5:  push ebx
 80645a6:  sub esp, 0x3c
 80645a9:  mov esi, DWORD PTR [ebp+0x8]
 80645ac:  mov eax, DWORD PTR [esi]
 80645ae:  test al, 0x4
 80645b0:  jne 8064985
 80645b6:  mov ebx, DWORD PTR [esi+0x58]
 80645b9:  mov eax, DWORD PTR [ebx]
 80645bb:  cmp eax, DWORD PTR [ebx+0x4]
 80645be:  jb 80647a8
 80645c4:  mov eax, DWORD PTR [esi+0x54]
 80645c7:  mov DWORD PTR [ebp-0x1c], eax
 80645ca:  mov eax, DWORD PTR [esi+0x4]
 80645cd:  cmp eax, DWORD PTR [esi+0x8]
 80645d0:  jb 80647e0
 80645d6:  mov eax, DWORD PTR [esi+0x1c]
 80645d9:  mov DWORD PTR [esi+0x8], eax
 80645dc:  mov DWORD PTR [esi+0x4], eax
 80645df:  mov DWORD PTR [esi+0xc], eax
 80645e2:  test eax, eax
 80645e4:  je 80648e0
 80645ea:  mov DWORD PTR [esi+0x18], eax
 80645ed:  mov DWORD PTR [esi+0x14], eax
 80645f0:  mov DWORD PTR [esi+0x10], eax
 80645f3:  mov eax, DWORD PTR [esi+0x58]
 80645f6:  mov edx, DWORD PTR [eax+0x18]
 80645f9:  test edx, edx
 80645fb:  je 80648b8
 8064601:  test DWORD PTR [esi], 0x202
 8064607:  je 806468e
 806460d:  mov edx, DWORD PTR ds:0x80d11e0
 8064613:  cmp WORD PTR [edx], 0x0
 8064617:  mov edi, edx
 8064619:  js 8064672
 806461b:  mov ebx, DWORD PTR [edx+0x48]
 806461e:  mov ecx, DWORD PTR gs:0x8
 8064625:  mov DWORD PTR [ebp-0x18], ecx
 8064628:  cmp DWORD PTR [ebx+0x8], ecx
 806462b:  mov DWORD PTR [ebp-0x20], ebx
 806462e:  je 806466b
 8064630:  mov DWORD PTR [ebp-0x28], 0x0
 8064637:  xor eax, eax
 8064639:  mov ecx, 0x1
 806463e:  mov DWORD PTR [ebp-0x24], 0x1
 8064645:  cmp DWORD PTR gs:0xc, 0x0
 806464d:  je 8064650
 806464f:  cmpxchg DWORD PTR [ebx], ecx
 8064653:  jne 80650a6
 8064659:  mov eax, DWORD PTR [edx+0x48]
 806465c:  mov ebx, DWORD PTR [ebp-0x18]
 806465f:  mov edx, DWORD PTR ds:0x80d11e0
 8064665:  mov DWORD PTR [ebp-0x20], eax
 8064668:  mov DWORD PTR [eax+0x8], ebx
 806466b:  mov eax, DWORD PTR [ebp-0x20]
 806466e:  add DWORD PTR [eax+0x4], 0x1
 8064672:  mov eax, DWORD PTR [edx]
 8064674:  and eax, 0x288
 8064679:  cmp eax, 0x280
 806467e:  je 8064948
 8064684:  cmp WORD PTR [edi], 0x0
 8064688:  jns 8064878
 806468e:  mov DWORD PTR [esp], esi
 8064691:  xor edi, edi
 8064693:  call 80683e0
 8064698:  mov eax, DWORD PTR [esi+0x58]
 806469b:  mov ecx, DWORD PTR [esi+0x8]
 806469e:  mov edx, DWORD PTR [eax+0x18]
 80646a1:  mov DWORD PTR [eax], edx
 80646a3:  mov DWORD PTR [eax+0x8], edx
 80646a6:  mov DWORD PTR [eax+0x4], edx
 80646a9:  mov DWORD PTR [eax+0x14], edx
 80646ac:  mov DWORD PTR [eax+0x10], edx
 80646af:  mov DWORD PTR [eax+0xc], edx
 80646b2:  mov edx, DWORD PTR [esi+0x20]
 80646b5:  jmp 8064766
 80646ba:  lea esi, [esi]
 80646c0:  mov ecx, DWORD PTR [esi+0x4c]
 80646c3:  mov ebx, DWORD PTR [esi+0x50]
 80646c6:  add DWORD PTR [esi+0x8], eax
 80646c9:  mov eax, ecx
 80646cb:  and eax, ebx
 80646cd:  add eax, 0x1
 80646d0:  je 80646e1
 80646d2:  mov eax, edx
 80646d4:  sar edx, 0x1f
 80646d7:  add eax, ecx
 80646d9:  adc edx, ebx
 80646db:  mov DWORD PTR [esi+0x4c], eax
 80646de:  mov DWORD PTR [esi+0x50], edx
 80646e1:  mov eax, DWORD PTR [esi+0x58]
 80646e4:  lea ebx, [ebp-0x10]
 80646e7:  mov edx, DWORD PTR [eax+0x2c]
 80646ea:  mov ecx, DWORD PTR [eax+0x30]
 80646ed:  mov DWORD PTR [eax+0x34], edx
 80646f0:  mov DWORD PTR [eax+0x38], ecx
 80646f3:  mov edx, DWORD PTR [esi+0x58]
 80646f6:  mov ecx, DWORD PTR [esi+0x4]
 80646f9:  lea eax, [edx+0x4]
 80646fc:  mov DWORD PTR [esi+0xc], ecx
 80646ff:  mov DWORD PTR [esp+0x1c], eax
 8064703:  mov eax, DWORD PTR [edx+0x1c]
 8064706:  mov DWORD PTR [esp+0x18], eax
 806470a:  mov eax, DWORD PTR [edx+0x4]
 806470d:  add edx, 0x2c
 8064710:  mov DWORD PTR [esp+0x10], ebx
 8064714:  mov DWORD PTR [esp+0x14], eax
 8064718:  mov eax, DWORD PTR [esi+0x8]
 806471b:  mov DWORD PTR [esp+0x4], edx
 806471f:  mov DWORD PTR [esp+0x8], ecx
 8064723:  mov DWORD PTR [esp+0xc], eax
 8064727:  mov eax, DWORD PTR [ebp-0x1c]
 806472a:  mov DWORD PTR [esp], eax
 806472d:  call DWORD PTR [eax+0xc]
 8064730:  mov edx, DWORD PTR [esi+0x58]
 8064733:  mov ebx, eax
 8064735:  mov eax, DWORD PTR [ebp-0x10]
 8064738:  mov DWORD PTR [esi+0x4], eax
 806473b:  mov eax, DWORD PTR [edx+0x4]
 806473e:  cmp eax, DWORD PTR [edx+0x18]
 8064741:  jne 80647a0
 8064743:  cmp ebx, 0x2
 8064746:  je 8064854
 806474c:  mov ecx, DWORD PTR [esi+0x8]
 806474f:  mov edx, DWORD PTR [esi+0x20]
 8064752:  cmp ecx, edx
 8064754:  je 8064854
 806475a:  sub ebx, 0x1
 806475d:  jne 8064961
 8064763:  add edi, 0x1
 8064766:  mov eax, DWORD PTR [esi+0x94]
 806476c:  sub edx, ecx
 806476e:  mov DWORD PTR [esp+0x8], edx
 8064772:  mov DWORD PTR [esp+0x4], ecx
 8064776:  mov DWORD PTR [esp], esi
 8064779:  call DWORD PTR [eax+0x38]
 806477c:  test eax, eax
 806477e:  mov edx, eax
 8064780:  jg 80646c0
 8064786:  or edx, edi
 8064788:  jne 80647b8
 806478a:  or DWORD PTR [esi], 0x10
 806478d:  mov eax, 0xffffffff
 8064792:  add esp, 0x3c
 8064795:  pop ebx
 8064796:  pop esi
 8064797:  pop edi
 8064798:  pop ebp
 8064799:  ret
 806479a:  lea esi, [esi]
 80647a0:  mov eax, DWORD PTR [edx]
 80647a2:  lea esi, [esi]
 80647a8:  mov eax, DWORD PTR [eax]
 80647aa:  add esp, 0x3c
 80647ad:  pop ebx
 80647ae:  pop esi
 80647af:  pop edi
 80647b0:  pop ebp
 80647b1:  ret
 80647b2:  lea esi, [esi]
 80647b8:  or DWORD PTR [esi], 0x20
 80647bb:  test edi, edi
 80647bd:  mov eax, 0xffffffff
 80647c2:  je 80647aa
 80647c4:  mov eax, gs:0x0
 80647ca:  mov edx, 0xffffffe8
 80647d0:  mov DWORD PTR [eax+edx], 0x54
 80647d7:  mov eax, 0xffffffff
 80647dc:  jmp 80647aa
 80647de:  xchg ax, ax
 80647e0:  mov edx, DWORD PTR [ebx+0x2c]
 80647e3:  mov ecx, DWORD PTR [ebx+0x30]
 80647e6:  mov DWORD PTR [ebp-0x14], eax
 80647e9:  mov DWORD PTR [ebx+0x34], edx
 80647ec:  mov DWORD PTR [ebx+0x38], ecx
 80647ef:  mov edx, DWORD PTR [esi+0x58]
 80647f2:  mov eax, DWORD PTR [edx+0x18]
 80647f5:  mov DWORD PTR [edx], eax
 80647f7:  mov DWORD PTR [edx+0x8], eax
 80647fa:  lea eax, [edx+0x4]
 80647fd:  mov DWORD PTR [esp+0x1c], eax
 8064801:  mov eax, DWORD PTR [edx+0x1c]
 8064804:  mov DWORD PTR [esp+0x18], eax
 8064808:  mov eax, DWORD PTR [edx]
 806480a:  add edx, 0x2c
 806480d:  mov DWORD PTR [esp+0x14], eax
 8064811:  lea eax, [ebp-0x14]
 8064814:  mov DWORD PTR [esp+0x10], eax
 8064818:  mov eax, DWORD PTR [esi+0x8]
 806481b:  mov DWORD PTR [esp+0xc], eax
 806481f:  mov eax, DWORD PTR [esi+0x4]
 8064822:  mov DWORD PTR [esp+0x4], edx
 8064826:  mov DWORD PTR [esp+0x8], eax
 806482a:  mov edx, DWORD PTR [ebp-0x1c]
 806482d:  mov DWORD PTR [esp], edx
 8064830:  call DWORD PTR [edx+0xc]
 8064833:  mov ecx, DWORD PTR [ebp-0x14]
 8064836:  mov ebx, eax
 8064838:  mov eax, DWORD PTR [esi+0x4]
 806483b:  mov DWORD PTR [esi+0x4], ecx
 806483e:  mov DWORD PTR [esi+0xc], eax
 8064841:  mov eax, DWORD PTR [esi+0x58]
 8064844:  mov edx, DWORD PTR [eax]
 8064846:  cmp edx, DWORD PTR [eax+0x4]
 8064849:  jb 80648b0
 806484b:  cmp ebx, 0x2
 806484e:  jne 8064914
 8064854:  mov edx, 0xffffffe8
 806485a:  mov eax, gs:0x0
 8064860:  mov DWORD PTR [eax+edx], 0x54
 8064867:  mov eax, 0xffffffff
 806486c:  or DWORD PTR [esi], 0x20
 806486f:  add esp, 0x3c
 8064872:  pop ebx
 8064873:  pop esi
 8064874:  pop edi
 8064875:  pop ebp
 8064876:  ret
 8064877:  nop
 8064878:  mov edx, DWORD PTR [edi+0x48]
 806487b:  mov eax, DWORD PTR [edx+0x4]
 806487e:  sub eax, 0x1
 8064881:  test eax, eax
 8064883:  mov DWORD PTR [edx+0x4], eax
 8064886:  jne 806468e
 806488c:  mov DWORD PTR [edx+0x8], 0x0
 8064893:  cmp DWORD PTR gs:0xc, 0x0
 806489b:  je 806489e
 806489d:  sub DWORD PTR [edx], 0x1
 80648a1:  jne 80650b2
 80648a7:  jmp 806468e
 80648ac:  lea esi, [esi]
 80648b0:  mov eax, DWORD PTR [edx]
 80648b2:  jmp 80647aa
 80648b7:  nop
 80648b8:  mov eax, DWORD PTR [eax+0x20]
 80648bb:  test eax, eax
 80648bd:  je 80648cd
 80648bf:  mov DWORD PTR [esp], eax
 80648c2:  call 804b4a0
 80648c7:  and DWORD PTR [esi], 0xfffffeff
 80648cd:  mov DWORD PTR [esp], esi
 80648d0:  call 8063c90
 80648d5:  jmp 8064601
 80648da:  lea esi, [esi]
 80648e0:  mov eax, DWORD PTR [esi+0x24]
 80648e3:  test eax, eax
 80648e5:  je 80648fb
 80648e7:  mov DWORD PTR [esp], eax
 80648ea:  lea esi, [esi]
 80648f0:  call 804b4a0
 80648f5:  and DWORD PTR [esi], 0xfffffeff
 80648fb:  mov DWORD PTR [esp], esi
 80648fe:  call 80689f0
 8064903:  mov eax, DWORD PTR [esi+0x1c]
 8064906:  mov DWORD PTR [esi+0x8], eax
 8064909:  mov DWORD PTR [esi+0x4], eax
 806490c:  mov DWORD PTR [esi+0xc], eax
 806490f:  jmp 80645ea
 8064914:  mov eax, DWORD PTR [esi+0x8]
 8064917:  mov DWORD PTR [esp+0x4], ecx
 806491b:  sub eax, ecx
 806491d:  mov DWORD PTR [esp+0x8], eax
 8064921:  mov eax, DWORD PTR [esi+0x1c]
 8064924:  mov DWORD PTR [esp], eax
 8064927:  call 806c260
 806492c:  mov eax, DWORD PTR [esi+0x8]
 806492f:  sub eax, DWORD PTR [esi+0x4]
 8064932:  add eax, DWORD PTR [esi+0x1c]
 8064935:  mov DWORD PTR [esi+0x8], eax
 8064938:  mov eax, DWORD PTR [esi+0x1c]
 806493b:  mov DWORD PTR [esi+0x4], eax
 806493e:  mov DWORD PTR [esi+0xc], eax
 8064941:  jmp 80645e2
 8064946:  xchg ax, ax
 8064948:  mov eax, DWORD PTR [edx+0x94]
 806494e:  mov DWORD PTR [esp+0x4], 0xffffffff
 8064956:  mov DWORD PTR [esp], edx
 8064959:  call DWORD PTR [eax+0xc]
 806495c:  jmp 8064684
 8064961:  mov DWORD PTR [esp+0xc], 0x80b1867
 8064969:  mov DWORD PTR [esp+0x8], 0x11b
 8064971:  mov DWORD PTR [esp+0x4], 0x80b1840
 8064979:  mov DWORD PTR [esp], 0x80b184b
 8064980:  call 8051490
 8064985:  or eax, 0x20
 8064988:  mov edx, 0xffffffe8
 806498e:  mov DWORD PTR [esi], eax
 8064990:  mov eax, gs:0x0
 8064996:  mov DWORD PTR [eax+edx], 0x9
 806499d:  mov eax, 0xffffffff
 80649a2:  jmp 80647aa
 80649a7:  cmp WORD PTR [edi], 0x0
 80649ab:  mov ecx, eax
 80649ad:  js 80649da
 80649af:  mov edx, DWORD PTR [edi+0x48]
 80649b2:  mov eax, DWORD PTR [edx+0x4]
 80649b5:  sub eax, 0x1
 80649b8:  test eax, eax
 80649ba:  mov DWORD PTR [edx+0x4], eax
 80649bd:  jne 80649da
 80649bf:  mov DWORD PTR [edx+0x8], 0x0
 80649c6:  cmp DWORD PTR gs:0xc, 0x0
 80649ce:  je 80649d1
 80649d0:  sub DWORD PTR [edx], 0x1
 80649d4:  jne 80650be
 80649da:  mov DWORD PTR [esp], ecx
 80649dd:  call 80abe50
 80649e2:  lea esi, [esi]
 80649e9:  lea edi, [edi]

080649f0 <_IO_wdo_write>:
 80649f0:  push ebp
 80649f1:  mov ebp, esp
 80649f3:  push edi
 80649f4:  push esi
 80649f5:  push ebx
 80649f6:  sub esp, 0x2c
 80649f9:  mov ebx, DWORD PTR [ebp+0x8]
 80649fc:  mov edi, DWORD PTR [ebp+0x10]
 80649ff:  mov esi, DWORD PTR [ebp+0xc]
 8064a02:  mov eax, DWORD PTR [ebx+0x54]
 8064a05:  test edi, edi
 8064a07:  mov DWORD PTR [ebp-0x14], eax
 8064a0a:  je 8064ab9
 8064a10:  mov eax, DWORD PTR [ebx+0x18]
 8064a13:  cmp eax, DWORD PTR [ebx+0x14]
 8064a16:  jne 8064a23
 8064a18:  mov edx, DWORD PTR [ebx+0x10]
 8064a1b:  cmp eax, edx
 8064a1d:  jne 8064b00
 8064a23:  lea edx, [ebx+0x14]
 8064a26:  mov DWORD PTR [ebp-0x18], edx
 8064a29:  mov eax, edx
 8064a2b:  jmp 8064a35
 8064a2d:  lea esi, [esi]
 8064a30:  mov eax, DWORD PTR [ebp-0x18]
 8064a33:  mov esi, ecx
 8064a35:  mov DWORD PTR [esp+0x1c], eax
 8064a39:  mov eax, DWORD PTR [ebx+0x20]
 8064a3c:  lea edx, [ebp-0x10]
 8064a3f:  mov DWORD PTR [esp+0x18], eax
 8064a43:  mov eax, DWORD PTR [ebx+0x14]
 8064a46:  mov DWORD PTR [esp+0x10], edx
 8064a4a:  mov edx, DWORD PTR [ebp+0x10]
 8064a4d:  mov DWORD PTR [esp+0x8], esi
 8064a51:  mov DWORD PTR [esp+0x14], eax
 8064a55:  lea eax, [esi+edx*4]
 8064a58:  mov DWORD PTR [esp+0xc], eax
 8064a5c:  mov eax, DWORD PTR [ebx+0x58]
 8064a5f:  add eax, 0x2c
 8064a62:  mov DWORD PTR [esp+0x4], eax
 8064a66:  mov eax, DWORD PTR [ebp-0x14]
 8064a69:  mov DWORD PTR [esp], eax
 8064a6c:  call DWORD PTR [eax+0x4]
 8064a6f:  mov edx, DWORD PTR [ebx+0x10]
 8064a72:  mov edi, eax
 8064a74:  mov eax, DWORD PTR [ebx+0x14]
 8064a77:  mov DWORD PTR [esp+0x4], edx
 8064a7b:  mov DWORD PTR [esp], ebx
 8064a7e:  sub eax, edx
 8064a80:  mov DWORD PTR [esp+0x8], eax
 8064a84:  call 8067500
 8064a89:  add eax, 0x1
 8064a8c:  je 8064af8
 8064a8e:  mov ecx, DWORD PTR [ebp-0x10]
 8064a91:  mov edx, ecx
 8064a93:  sub edx, esi
 8064a95:  mov eax, edx
 8064a97:  sar eax, 0x2
 8064a9a:  sub DWORD PTR [ebp+0x10], eax
 8064a9d:  test edi, edi
 8064a9f:  je 8064aae
 8064aa1:  sub edi, 0x1
 8064aa4:  jne 8064ab9
 8064aa6:  lea eax, [edx+0x3]
 8064aa9:  cmp eax, 0x6
 8064aac:  jbe 8064ab9
 8064aae:  mov esi, DWORD PTR [ebp+0x10]
 8064ab1:  test esi, esi
 8064ab3:  jne 8064a30
 8064ab9:  mov edx, DWORD PTR [ebx+0x58]
 8064abc:  test DWORD PTR [ebx], 0x202
 8064ac2:  mov eax, DWORD PTR [edx+0x18]
 8064ac5:  mov DWORD PTR [edx+0x8], eax
 8064ac8:  mov DWORD PTR [edx], eax
 8064aca:  mov DWORD PTR [edx+0x4], eax
 8064acd:  mov DWORD PTR [edx+0x10], eax
 8064ad0:  mov DWORD PTR [edx+0xc], eax
 8064ad3:  je 8064af0
 8064ad5:  cmp DWORD PTR [ebp+0x10], 0x1
 8064ad9:  mov DWORD PTR [edx+0x14], eax
 8064adc:  sbb edx, edx
 8064ade:  not edx
 8064ae0:  add esp, 0x2c
 8064ae3:  mov eax, edx
 8064ae5:  pop ebx
 8064ae6:  pop esi
 8064ae7:  pop edi
 8064ae8:  pop ebp
 8064ae9:  ret
 8064aea:  lea esi, [esi]
 8064af0:  mov eax, DWORD PTR [edx+0x1c]
 8064af3:  jmp 8064ad5
 8064af5:  lea esi, [esi]
 8064af8:  mov edx, 0xffffffff
 8064afd:  jmp 8064ae0
 8064aff:  nop
 8064b00:  sub eax, edx
 8064b02:  mov DWORD PTR [esp+0x4], edx
 8064b06:  mov DWORD PTR [esp+0x8], eax
 8064b0a:  mov DWORD PTR [esp], ebx
 8064b0d:  call 8067500
 8064b12:  mov edx, 0xffffffff
 8064b17:  add eax, 0x1
 8064b1a:  jne 8064a23
 8064b20:  jmp 8064ae0
 8064b22:  lea esi, [esi]
 8064b29:  lea edi, [edi]

08064b30 <_IO_wfile_xsputn>:
 8064b30:  push ebp
 8064b31:  xor eax, eax
 8064b33:  mov ebp, esp
 8064b35:  sub esp, 0x24
 8064b38:  mov edx, DWORD PTR [ebp+0x10]
 8064b3b:  mov DWORD PTR [ebp-0x8], esi
 8064b3e:  mov esi, DWORD PTR [ebp+0xc]
 8064b41:  mov DWORD PTR [ebp-0xc], ebx
 8064b44:  mov DWORD PTR [ebp-0x4], edi
 8064b47:  test edx, edx
 8064b49:  je 8064bd7
 8064b4f:  mov eax, DWORD PTR [ebp+0x8]
 8064b52:  mov ecx, DWORD PTR [ebp+0x8]
 8064b55:  mov DWORD PTR [ebp-0x14], esi
 8064b58:  mov eax, DWORD PTR [eax+0x58]
 8064b5b:  mov DWORD PTR [ebp-0x18], eax
 8064b5e:  mov edx, DWORD PTR [eax+0x14]
 8064b61:  mov edi, DWORD PTR [eax+0x10]
 8064b64:  mov eax, DWORD PTR [ecx]
 8064b66:  and eax, 0xa00
 8064b6b:  cmp eax, 0xa00
 8064b70:  je 8064c48
 8064b76:  mov eax, edx
 8064b78:  sub eax, edi
 8064b7a:  sar eax, 0x2
 8064b7d:  mov DWORD PTR [ebp-0x10], 0x0
 8064b84:  test eax, eax
 8064b86:  mov ebx, DWORD PTR [ebp+0x10]
 8064b89:  jne 8064bf0
 8064b8b:  mov ecx, DWORD PTR [ebp-0x14]
 8064b8e:  mov eax, DWORD PTR [ebp+0x8]
 8064b91:  mov DWORD PTR [esp+0x8], ebx
 8064b95:  mov DWORD PTR [esp+0x4], ecx
 8064b99:  mov DWORD PTR [esp], eax
 8064b9c:  call 80635c0
 8064ba1:  sub ebx, eax
 8064ba3:  mov eax, DWORD PTR [ebp-0x10]
 8064ba6:  test eax, eax
 8064ba8:  je 8064bd2
 8064baa:  mov edx, DWORD PTR [ebp+0x8]
 8064bad:  mov eax, DWORD PTR [edx+0x58]
 8064bb0:  mov edx, DWORD PTR [eax+0x10]
 8064bb3:  mov eax, DWORD PTR [eax+0xc]
 8064bb6:  cmp edx, eax
 8064bb8:  je 8064bd2
 8064bba:  mov ecx, DWORD PTR [ebp+0x8]
 8064bbd:  sub edx, eax
 8064bbf:  sar edx, 0x2
 8064bc2:  mov DWORD PTR [esp+0x8], edx
 8064bc6:  mov DWORD PTR [esp+0x4], eax
 8064bca:  mov DWORD PTR [esp], ecx
 8064bcd:  call 80649f0
 8064bd2:  mov eax, DWORD PTR [ebp+0x10]
 8064bd5:  sub eax, ebx
 8064bd7:  mov ebx, DWORD PTR [ebp-0xc]
 8064bda:  mov esi, DWORD PTR [ebp-0x8]
 8064bdd:  mov edi, DWORD PTR [ebp-0x4]
 8064be0:  mov esp, ebp
 8064be2:  pop ebp
 8064be3:  ret
 8064be4:  lea esi, [esi]
 8064be8:  mov DWORD PTR [ebp-0x10], 0x0
 8064bef:  nop
 8064bf0:  cmp eax, DWORD PTR [ebp+0x10]
 8064bf3:  mov ebx, eax
 8064bf5:  ja 8064ca8
 8064bfb:  cmp ebx, 0x14
 8064bfe:  ja 8064cb4
 8064c04:  test ebx, ebx
 8064c06:  je 8064c2d
 8064c08:  mov ecx, edi
 8064c0a:  xor edx, edx
 8064c0c:  lea esi, [esi]
 8064c10:  mov eax, DWORD PTR [esi+edx*4]
 8064c13:  add edx, 0x1
 8064c16:  mov DWORD PTR [ecx], eax
 8064c18:  add ecx, 0x4
 8064c1b:  cmp edx, ebx
 8064c1d:  jne 8064c10
 8064c1f:  lea eax, [ebx*4]
 8064c26:  add esi, eax
 8064c28:  add edi, eax
 8064c2a:  mov DWORD PTR [ebp-0x14], esi
 8064c2d:  mov eax, DWORD PTR [ebp-0x18]
 8064c30:  mov DWORD PTR [eax+0x10], edi
 8064c33:  mov edx, DWORD PTR [ebp+0x10]
 8064c36:  sub edx, ebx
 8064c38:  mov ebx, edx
 8064c3a:  je 8064ba3
 8064c40:  jmp 8064b8b
 8064c45:  lea esi, [esi]
 8064c48:  mov edx, DWORD PTR [ebp-0x18]
 8064c4b:  mov DWORD PTR [ebp-0x10], 0x0
 8064c52:  mov eax, DWORD PTR [edx+0x1c]
 8064c55:  sub eax, edi
 8064c57:  sar eax, 0x2
 8064c5a:  cmp DWORD PTR [ebp+0x10], eax
 8064c5d:  ja 8064b84
 8064c63:  mov edx, DWORD PTR [ebp+0x10]
 8064c66:  lea ecx, [esi+edx*4]
 8064c69:  cmp esi, ecx
 8064c6b:  jae 8064be8
 8064c71:  cmp DWORD PTR [ecx-0x4], 0xa
 8064c75:  lea edx, [ecx-0x4]
 8064c78:  je 8064c90
 8064c7a:  lea esi, [esi]
 8064c80:  cmp esi, edx
 8064c82:  jae 8064be8
 8064c88:  sub edx, 0x4
 8064c8b:  cmp DWORD PTR [edx], 0xa
 8064c8e:  jne 8064c80
 8064c90:  sub edx, esi
 8064c92:  sar edx, 0x2
 8064c95:  lea eax, [edx+0x1]
 8064c98:  mov DWORD PTR [ebp-0x10], 0x1
 8064c9f:  jmp 8064b84
 8064ca4:  lea esi, [esi]
 8064ca8:  mov ebx, DWORD PTR [ebp+0x10]
 8064cab:  cmp ebx, 0x14
 8064cae:  jbe 8064c04
 8064cb4:  mov DWORD PTR [esp+0x4], esi
 8064cb8:  lea esi, [esi+ebx*4]
 8064cbb:  mov DWORD PTR [esp+0x8], ebx
 8064cbf:  mov DWORD PTR [esp], edi
 8064cc2:  call 806c5f0
 8064cc7:  mov ecx, DWORD PTR [ebp-0x18]
 8064cca:  mov DWORD PTR [ebp-0x14], esi
 8064ccd:  mov DWORD PTR [ecx+0x10], eax
 8064cd0:  jmp 8064c33
 8064cd5:  lea esi, [esi]
 8064cd9:  lea edi, [edi]

08064ce0 <_IO_wfile_sync>:
 8064ce0:  push ebp
 8064ce1:  mov ebp, esp
 8064ce3:  sub esp, 0x20
 8064ce6:  mov DWORD PTR [ebp-0x8], esi
 8064ce9:  mov esi, DWORD PTR [ebp+0x8]
 8064cec:  mov DWORD PTR [ebp-0xc], ebx
 8064cef:  mov DWORD PTR [ebp-0x4], edi
 8064cf2:  mov eax, DWORD PTR [esi+0x58]
 8064cf5:  mov edx, DWORD PTR [eax+0x10]
 8064cf8:  mov ecx, DWORD PTR [eax+0xc]
 8064cfb:  cmp edx, ecx
 8064cfd:  jbe 8064d30
 8064cff:  mov ebx, DWORD PTR [esi+0x68]
 8064d02:  test ebx, ebx
 8064d04:  jle 8064db0
 8064d0a:  sub edx, ecx
 8064d0c:  sar edx, 0x2
 8064d0f:  mov DWORD PTR [esp+0x8], edx
 8064d13:  mov DWORD PTR [esp+0x4], ecx
 8064d17:  mov DWORD PTR [esp], esi
 8064d1a:  call 80649f0
 8064d1f:  test eax, eax
 8064d21:  setne al
 8064d24:  test al, al
 8064d26:  mov ecx, 0xffffffff
 8064d2b:  jne 8064d4c
 8064d2d:  mov eax, DWORD PTR [esi+0x58]
 8064d30:  mov ebx, DWORD PTR [eax]
 8064d32:  sub ebx, DWORD PTR [eax+0x4]
 8064d35:  sar ebx, 0x2
 8064d38:  test ebx, ebx
 8064d3a:  jne 8064d60
 8064d3c:  mov DWORD PTR [esi+0x4c], 0xffffffff
 8064d43:  xor ecx, ecx
 8064d45:  mov DWORD PTR [esi+0x50], 0xffffffff
 8064d4c:  mov ebx, DWORD PTR [ebp-0xc]
 8064d4f:  mov eax, ecx
 8064d51:  mov esi, DWORD PTR [ebp-0x8]
 8064d54:  mov edi, DWORD PTR [ebp-0x4]
 8064d57:  mov esp, ebp
 8064d59:  pop ebp
 8064d5a:  ret
 8064d5b:  nop
 8064d5c:  lea esi, [esi]
 8064d60:  mov edi, DWORD PTR [esi+0x54]
 8064d63:  mov DWORD PTR [esp], edi
 8064d66:  call DWORD PTR [edi+0x10]
 8064d69:  test eax, eax
 8064d6b:  jle 8064df8
 8064d71:  mov edx, eax
 8064d73:  imul edx, ebx
 8064d76:  mov eax, DWORD PTR [esi+0x94]
 8064d7c:  mov ecx, edx
 8064d7e:  sar ecx, 0x1f
 8064d81:  mov DWORD PTR [esp+0xc], 0x1
 8064d89:  mov DWORD PTR [esp+0x4], edx
 8064d8d:  mov DWORD PTR [esp+0x8], ecx
 8064d91:  mov DWORD PTR [esp], esi
 8064d94:  call DWORD PTR [eax+0x40]
 8064d97:  and eax, edx
 8064d99:  add eax, 0x1
 8064d9c:  je 8064dd8
 8064d9e:  mov eax, DWORD PTR [esi+0x58]
 8064da1:  mov edx, DWORD PTR [eax]
 8064da3:  mov DWORD PTR [eax+0x4], edx
 8064da6:  mov eax, DWORD PTR [esi+0x4]
 8064da9:  mov DWORD PTR [esi+0x8], eax
 8064dac:  jmp 8064d3c
 8064dae:  xchg ax, ax
 8064db0:  mov eax, DWORD PTR [esi+0x10]
 8064db3:  mov edx, DWORD PTR [esi+0x14]
 8064db6:  mov DWORD PTR [esp], esi
 8064db9:  mov DWORD PTR [esp+0x4], eax
 8064dbd:  sub edx, eax
 8064dbf:  mov DWORD PTR [esp+0x8], edx
 8064dc3:  call 8067500
 8064dc8:  test eax, eax
 8064dca:  setne al
 8064dcd:  jmp 8064d24
 8064dd2:  lea esi, [esi]
 8064dd8:  mov edx, 0xffffffe8
 8064dde:  mov ecx, 0xffffffff
 8064de3:  mov eax, gs:0x0
 8064de9:  cmp DWORD PTR [eax+edx], 0x1d
 8064ded:  jne 8064d4c
 8064df3:  jmp 8064d3c
 8064df8:  mov ecx, DWORD PTR [esi+0x58]
 8064dfb:  mov eax, DWORD PTR [ecx+0x34]
 8064dfe:  mov edx, DWORD PTR [ecx+0x38]
 8064e01:  mov DWORD PTR [ecx+0x2c], eax
 8064e04:  mov DWORD PTR [ecx+0x30], edx
 8064e07:  mov DWORD PTR [esp+0x10], ebx
 8064e0b:  mov eax, DWORD PTR [esi+0x8]
 8064e0e:  mov DWORD PTR [esp+0xc], eax
 8064e12:  mov eax, DWORD PTR [esi+0xc]
 8064e15:  mov DWORD PTR [esp+0x8], eax
 8064e19:  mov eax, DWORD PTR [esi+0x58]
 8064e1c:  mov DWORD PTR [esp], edi
 8064e1f:  add eax, 0x2c
 8064e22:  mov DWORD PTR [esp+0x4], eax
 8064e26:  call DWORD PTR [edi+0x18]
 8064e29:  mov edx, eax
 8064e2b:  add edx, DWORD PTR [esi+0xc]
 8064e2e:  mov DWORD PTR [esi+0x4], edx
 8064e31:  mov edx, DWORD PTR [esi+0xc]
 8064e34:  sub edx, DWORD PTR [esi+0x8]
 8064e37:  add edx, eax
 8064e39:  jmp 8064d76
 8064e3e:  xchg ax, ax

08064e40 <_IO_wfile_overflow>:
 8064e40:  push ebp
 8064e41:  mov ebp, esp
 8064e43:  sub esp, 0x18
 8064e46:  mov DWORD PTR [ebp-0x8], esi
 8064e49:  mov esi, DWORD PTR [ebp+0x8]
 8064e4c:  mov DWORD PTR [ebp-0x4], edi
 8064e4f:  mov edi, DWORD PTR [ebp+0xc]
 8064e52:  mov DWORD PTR [ebp-0xc], ebx
 8064e55:  mov edx, DWORD PTR [esi]
 8064e57:  test dl, 0x8
 8064e5a:  je 8064e88
 8064e5c:  or edx, 0x20
 8064e5f:  mov eax, gs:0x0
 8064e65:  mov edi, 0xffffffff
 8064e6a:  mov DWORD PTR [esi], edx
 8064e6c:  mov edx, 0xffffffe8
 8064e72:  mov DWORD PTR [eax+edx], 0x9
 8064e79:  mov eax, edi
 8064e7b:  mov ebx, DWORD PTR [ebp-0xc]
 8064e7e:  mov esi, DWORD PTR [ebp-0x8]
 8064e81:  mov edi, DWORD PTR [ebp-0x4]
 8064e84:  mov esp, ebp
 8064e86:  pop ebp
 8064e87:  ret
 8064e88:  test dh, 0x8
 8064e8b:  jne 8064ee2
 8064e8d:  mov ecx, DWORD PTR [esi+0x58]
 8064e90:  mov ebx, DWORD PTR [ecx+0xc]
 8064e93:  test ebx, ebx
 8064e95:  je 8065060
 8064e9b:  mov ebx, DWORD PTR [ecx]
 8064e9d:  cmp ebx, DWORD PTR [ecx+0x1c]
 8064ea0:  je 8065048
 8064ea6:  mov eax, DWORD PTR [ecx+0x1c]
 8064ea9:  or dh, 0x8
 8064eac:  test edx, 0x202
 8064eb2:  mov DWORD PTR [ecx+0x10], ebx
 8064eb5:  mov DWORD PTR [ecx+0xc], ebx
 8064eb8:  mov DWORD PTR [ecx+0x14], eax
 8064ebb:  mov eax, DWORD PTR [ecx+0x4]
 8064ebe:  mov DWORD PTR [esi], edx
 8064ec0:  mov DWORD PTR [ecx], eax
 8064ec2:  mov DWORD PTR [ecx+0x8], eax
 8064ec5:  mov eax, DWORD PTR [esi+0x4]
 8064ec8:  mov DWORD PTR [esi+0x14], eax
 8064ecb:  mov DWORD PTR [esi+0x10], eax
 8064ece:  mov eax, DWORD PTR [esi+0x20]
 8064ed1:  mov DWORD PTR [esi+0x18], eax
 8064ed4:  mov eax, DWORD PTR [esi+0x8]
 8064ed7:  mov DWORD PTR [esi+0x4], eax
 8064eda:  mov DWORD PTR [esi+0xc], eax
 8064edd:  je 8064ee2
 8064edf:  mov DWORD PTR [ecx+0x14], ebx
 8064ee2:  cmp edi, 0xff
 8064ee5:  je 8064fa8
 8064eeb:  mov ecx, DWORD PTR [esi+0x58]
 8064eee:  mov ebx, DWORD PTR [ecx+0x10]
 8064ef1:  cmp ebx, DWORD PTR [ecx+0x1c]
 8064ef4:  je 8064f68
 8064ef6:  mov eax, DWORD PTR [ecx+0x10]
 8064ef9:  mov DWORD PTR [eax], edi
 8064efb:  add eax, 0x4
 8064efe:  test dl, 0x2
 8064f01:  mov DWORD PTR [ecx+0x10], eax
 8064f04:  je 8064f48
 8064f06:  mov eax, DWORD PTR [esi+0x68]
 8064f09:  test eax, eax
 8064f0b:  jle 8064fd8
 8064f11:  mov eax, DWORD PTR [ecx+0xc]
 8064f14:  mov edx, DWORD PTR [ecx+0x10]
 8064f17:  mov DWORD PTR [esp], esi
 8064f1a:  mov DWORD PTR [esp+0x4], eax
 8064f1e:  sub edx, eax
 8064f20:  sar edx, 0x2
 8064f23:  mov DWORD PTR [esp+0x8], edx
 8064f27:  call 80649f0
 8064f2c:  add eax, 0x1
 8064f2f:  sete al
 8064f32:  test al, al
 8064f34:  je 8064e79
 8064f3a:  mov edi, 0xffffffff
 8064f3f:  jmp 8064e79
 8064f44:  lea esi, [esi]
 8064f48:  and dh, 0x2
 8064f4b:  je 8064e79
 8064f51:  cmp edi, 0xa
 8064f54:  lea esi, [esi]
 8064f58:  jne 8064e79
 8064f5e:  xchg ax, ax
 8064f60:  jmp 8064f06
 8064f62:  lea esi, [esi]
 8064f68:  mov eax, DWORD PTR [esi+0x68]
 8064f6b:  test eax, eax
 8064f6d:  lea esi, [esi]
 8064f70:  jle 8065000
 8064f76:  mov eax, DWORD PTR [ecx+0xc]
 8064f79:  mov DWORD PTR [esp], esi
 8064f7c:  sub ebx, eax
 8064f7e:  sar ebx, 0x2
 8064f81:  mov DWORD PTR [esp+0x8], ebx
 8064f85:  mov DWORD PTR [esp+0x4], eax
 8064f89:  call 80649f0
 8064f8e:  add eax, 0x1
 8064f91:  sete al
 8064f94:  test al, al
 8064f96:  jne 8064f3a
 8064f98:  mov edx, DWORD PTR [esi]
 8064f9a:  mov ecx, DWORD PTR [esi+0x58]
 8064f9d:  jmp 8064ef6
 8064fa2:  lea esi, [esi]
 8064fa8:  mov eax, DWORD PTR [esi+0x68]
 8064fab:  test eax, eax
 8064fad:  jle 8065028
 8064faf:  mov eax, DWORD PTR [esi+0x58]
 8064fb2:  mov edx, DWORD PTR [eax+0xc]
 8064fb5:  mov eax, DWORD PTR [eax+0x10]
 8064fb8:  mov DWORD PTR [esp], esi
 8064fbb:  mov DWORD PTR [esp+0x4], edx
 8064fbf:  sub eax, edx
 8064fc1:  sar eax, 0x2
 8064fc4:  mov DWORD PTR [esp+0x8], eax
 8064fc8:  call 80649f0
 8064fcd:  mov edi, eax
 8064fcf:  jmp 8064e79
 8064fd4:  lea esi, [esi]
 8064fd8:  mov eax, DWORD PTR [esi+0x10]
 8064fdb:  mov edx, DWORD PTR [esi+0x14]
 8064fde:  mov DWORD PTR [esp], esi
 8064fe1:  mov DWORD PTR [esp+0x4], eax
 8064fe5:  sub edx, eax
 8064fe7:  mov DWORD PTR [esp+0x8], edx
 8064feb:  call 8067500
 8064ff0:  add eax, 0x1
 8064ff3:  sete al
 8064ff6:  jmp 8064f32
 8064ffb:  nop
 8064ffc:  lea esi, [esi]
 8065000:  mov eax, DWORD PTR [esi+0x10]
 8065003:  mov edx, DWORD PTR [esi+0x14]
 8065006:  mov DWORD PTR [esp], esi
 8065009:  mov DWORD PTR [esp+0x4], eax
 806500d:  sub edx, eax
 806500f:  mov DWORD PTR [esp+0x8], edx
 8065013:  call 8067500
 8065018:  add eax, 0x1
 806501b:  sete al
 806501e:  jmp 8064f94
 8065023:  nop
 8065024:  lea esi, [esi]
 8065028:  mov edx, DWORD PTR [esi+0x10]
 806502b:  mov eax, DWORD PTR [esi+0x14]
 806502e:  mov DWORD PTR [esp], esi
 8065031:  mov DWORD PTR [esp+0x4], edx
 8065035:  sub eax, edx
 8065037:  mov DWORD PTR [esp+0x8], eax
 806503b:  call 8067500
 8065040:  mov edi, eax
 8065042:  jmp 8064e79
 8065047:  nop
 8065048:  mov eax, DWORD PTR [esi+0x1c]
 806504b:  mov DWORD PTR [esi+0x4], eax
 806504e:  mov DWORD PTR [esi+0x8], eax
 8065051:  mov eax, DWORD PTR [ecx+0x18]
 8065054:  mov DWORD PTR [ecx], eax
 8065056:  mov ebx, eax
 8065058:  mov DWORD PTR [ecx+0x4], eax
 806505b:  jmp 8064ea6
 8065060:  mov DWORD PTR [esp], esi
 8065063:  call 8063c90
 8065068:  mov ecx, DWORD PTR [esi+0x58]
 806506b:  mov edx, DWORD PTR [esi+0x10]
 806506e:  mov eax, DWORD PTR [ecx+0x18]
 8065071:  test edx, edx
 8065073:  mov DWORD PTR [ecx+0x8], eax
 8065076:  mov DWORD PTR [ecx], eax
 8065078:  mov DWORD PTR [ecx+0x4], eax
 806507b:  je 8065086
 806507d:  mov ebx, eax
 806507f:  mov edx, DWORD PTR [esi]
 8065081:  jmp 8064ea6
 8065086:  mov DWORD PTR [esp], esi
 8065089:  call 80689f0
 806508e:  mov eax, DWORD PTR [esi+0x1c]
 8065091:  mov ecx, DWORD PTR [esi+0x58]
 8065094:  mov edx, DWORD PTR [esi]
 8065096:  mov DWORD PTR [esi+0xc], eax
 8065099:  mov DWORD PTR [esi+0x4], eax
 806509c:  mov ebx, DWORD PTR [ecx]
 806509e:  mov DWORD PTR [esi+0x8], eax
 80650a1:  jmp 8064ea6

080650a6 <_L_lock_1115>:
 80650a6:  lea ecx, [ebx]
 80650a8:  call 8050230
 80650ad:  jmp 8064659

080650b2 <_L_unlock_1416>:
 80650b2:  lea eax, [edx]
 80650b4:  call 8050260
 80650b9:  jmp 80648a7

080650be <_L_unlock_1568>:
 80650be:  lea eax, [edx]
 80650c0:  call 8050260
 80650c5:  jmp 80649da
 80650ca:  nop
 80650cb:  nop
 80650cc:  nop
 80650cd:  nop
 80650ce:  nop
 80650cf:  nop

080650d0 <do_encoding>:
 80650d0:  push ebp
 80650d1:  mov edx, 0xffffffff
 80650d6:  mov ebp, esp
 80650d8:  mov eax, DWORD PTR [ebp+0x8]
 80650db:  mov eax, DWORD PTR [eax+0x24]
 80650de:  mov ecx, DWORD PTR [eax+0x34]
 80650e1:  test ecx, ecx
 80650e3:  jne 80650f6
 80650e5:  mov edx, DWORD PTR [eax+0x24]
 80650e8:  cmp edx, DWORD PTR [eax+0x28]
 80650eb:  setne al
 80650ee:  movzx eax, al
 80650f1:  sub eax, 0x1
 80650f4:  and edx, eax
 80650f6:  mov eax, edx
 80650f8:  pop ebp
 80650f9:  ret
 80650fa:  lea esi, [esi]

08065100 <do_always_noconv>:
 8065100:  push ebp
 8065101:  xor eax, eax
 8065103:  mov ebp, esp
 8065105:  pop ebp
 8065106:  ret
 8065107:  mov esi, esi
 8065109:  lea edi, [edi]

08065110 <do_max_length>:
 8065110:  push ebp
 8065111:  mov ebp, esp
 8065113:  mov eax, DWORD PTR [ebp+0x8]
 8065116:  pop ebp
 8065117:  mov eax, DWORD PTR [eax+0x24]
 806511a:  mov eax, DWORD PTR [eax+0x28]
 806511d:  ret
 806511e:  xchg ax, ax

08065120 <do_in>:
 8065120:  push ebp
 8065121:  mov ebp, esp
 8065123:  push edi
 8065124:  push esi
 8065125:  push ebx
 8065126:  sub esp, 0x28
 8065129:  mov edi, DWORD PTR [ebp+0x8]
 806512c:  mov eax, DWORD PTR [ebp+0x1c]
 806512f:  mov esi, DWORD PTR [edi+0x24]
 8065132:  mov DWORD PTR [edi+0x28], eax
 8065135:  mov eax, DWORD PTR [ebp+0x20]
 8065138:  mov DWORD PTR [edi+0x2c], eax
 806513b:  mov eax, DWORD PTR [ebp+0xc]
 806513e:  mov DWORD PTR [edi+0x3c], eax
 8065141:  mov eax, DWORD PTR [esi]
 8065143:  mov ebx, DWORD PTR [esi+0x14]
 8065146:  test eax, eax
 8065148:  je 8065154
 806514a:  ror ebx, 0x9
 806514d:  xor ebx, DWORD PTR gs:0x18
 8065154:  mov eax, DWORD PTR [ebp+0x10]
 8065157:  mov DWORD PTR [ebp-0x14], eax
 806515a:  mov DWORD PTR [esp], ebx
 806515d:  call 807f350
 8065162:  lea eax, [ebp-0x10]
 8065165:  mov DWORD PTR [esp+0x1c], 0x0
 806516d:  mov DWORD PTR [esp+0x18], 0x0
 8065175:  mov DWORD PTR [esp+0x14], eax
 8065179:  mov DWORD PTR [esp+0x10], 0x0
 8065181:  mov eax, DWORD PTR [ebp+0x14]
 8065184:  mov DWORD PTR [esp], esi
 8065187:  mov DWORD PTR [esp+0xc], eax
 806518b:  lea eax, [ebp-0x14]
 806518e:  mov DWORD PTR [esp+0x8], eax
 8065192:  lea eax, [edi+0x28]
 8065195:  mov DWORD PTR [esp+0x4], eax
 8065199:  call ebx
 806519b:  mov edx, DWORD PTR [ebp-0x14]
 806519e:  mov ecx, eax
 80651a0:  mov eax, DWORD PTR [ebp+0x18]
 80651a3:  cmp ecx, 0x4
 80651a6:  mov DWORD PTR [eax], edx
 80651a8:  mov eax, DWORD PTR [ebp+0x24]
 80651ab:  mov edx, DWORD PTR [edi+0x28]
 80651ae:  mov DWORD PTR [eax], edx
 80651b0:  je 80651d4
 80651b2:  jle 80651d0
 80651b4:  cmp ecx, 0x5
 80651b7:  je 80651e0
 80651b9:  cmp ecx, 0x7
 80651bc:  lea esi, [esi]
 80651c0:  je 80651e0
 80651c2:  add esp, 0x28
 80651c5:  mov eax, 0x2
 80651ca:  pop ebx
 80651cb:  pop esi
 80651cc:  pop edi
 80651cd:  pop ebp
 80651ce:  ret
 80651cf:  nop
 80651d0:  test ecx, ecx
 80651d2:  jne 80651c2
 80651d4:  add esp, 0x28
 80651d7:  xor eax, eax
 80651d9:  pop ebx
 80651da:  pop esi
 80651db:  pop edi
 80651dc:  pop ebp
 80651dd:  ret
 80651de:  xchg ax, ax
 80651e0:  add esp, 0x28
 80651e3:  mov eax, 0x1
 80651e8:  pop ebx
 80651e9:  pop esi
 80651ea:  pop edi
 80651eb:  pop ebp
 80651ec:  ret
 80651ed:  lea esi, [esi]

080651f0 <do_unshift>:
 80651f0:  push ebp
 80651f1:  mov ebp, esp
 80651f3:  sub esp, 0x30
 80651f6:  mov DWORD PTR [ebp-0x4], edi
 80651f9:  mov eax, DWORD PTR [ebp+0x10]
 80651fc:  mov edi, DWORD PTR [ebp+0x8]
 80651ff:  mov DWORD PTR [ebp-0xc], ebx
 8065202:  mov DWORD PTR [ebp-0x8], esi
 8065205:  mov DWORD PTR [edi+0x54], eax
 8065208:  mov eax, DWORD PTR [ebp+0x14]
 806520b:  mov esi, DWORD PTR [edi+0x50]
 806520e:  mov DWORD PTR [edi+0x58], eax
 8065211:  mov eax, DWORD PTR [ebp+0xc]
 8065214:  mov DWORD PTR [edi+0x68], eax
 8065217:  mov eax, DWORD PTR [esi]
 8065219:  mov ebx, DWORD PTR [esi+0x14]
 806521c:  test eax, eax
 806521e:  je 806522a
 8065220:  ror ebx, 0x9
 8065223:  xor ebx, DWORD PTR gs:0x18
 806522a:  mov DWORD PTR [esp], ebx
 806522d:  call 807f350
 8065232:  lea eax, [ebp-0x10]
 8065235:  mov DWORD PTR [esp+0x14], eax
 8065239:  lea eax, [edi+0x54]
 806523c:  mov DWORD PTR [esp+0x1c], 0x0
 8065244:  mov DWORD PTR [esp+0x18], 0x1
 806524c:  mov DWORD PTR [esp+0x10], 0x0
 8065254:  mov DWORD PTR [esp+0xc], 0x0
 806525c:  mov DWORD PTR [esp+0x8], 0x0
 8065264:  mov DWORD PTR [esp+0x4], eax
 8065268:  mov DWORD PTR [esp], esi
 806526b:  call ebx
 806526d:  mov edx, DWORD PTR [edi+0x54]
 8065270:  mov ecx, eax
 8065272:  mov eax, DWORD PTR [ebp+0x18]
 8065275:  cmp ecx, 0x4
 8065278:  mov DWORD PTR [eax], edx
 806527a:  je 80652a4
 806527c:  jle 80652a0
 806527e:  cmp ecx, 0x5
 8065281:  je 80652a8
 8065283:  cmp ecx, 0x7
 8065286:  xchg ax, ax
 8065288:  je 80652a8
 806528a:  mov eax, 0x2
 806528f:  mov ebx, DWORD PTR [ebp-0xc]
 8065292:  mov esi, DWORD PTR [ebp-0x8]
 8065295:  mov edi, DWORD PTR [ebp-0x4]
 8065298:  mov esp, ebp
 806529a:  pop ebp
 806529b:  ret
 806529c:  lea esi, [esi]
 80652a0:  test ecx, ecx
 80652a2:  jne 806528a
 80652a4:  xor eax, eax
 80652a6:  jmp 806528f
 80652a8:  mov eax, 0x1
 80652ad:  lea esi, [esi]
 80652b0:  jmp 806528f
 80652b2:  lea esi, [esi]
 80652b9:  lea edi, [edi]

080652c0 <do_out>:
 80652c0:  push ebp
 80652c1:  mov ebp, esp
 80652c3:  push edi
 80652c4:  push esi
 80652c5:  push ebx
 80652c6:  sub esp, 0x28
 80652c9:  mov edi, DWORD PTR [ebp+0x8]
 80652cc:  mov eax, DWORD PTR [ebp+0x1c]
 80652cf:  mov esi, DWORD PTR [edi+0x50]
 80652d2:  mov DWORD PTR [edi+0x54], eax
 80652d5:  mov eax, DWORD PTR [ebp+0x20]
 80652d8:  mov DWORD PTR [edi+0x58], eax
 80652db:  mov eax, DWORD PTR [ebp+0xc]
 80652de:  mov DWORD PTR [edi+0x68], eax
 80652e1:  mov eax, DWORD PTR [esi]
 80652e3:  mov ebx, DWORD PTR [esi+0x14]
 80652e6:  test eax, eax
 80652e8:  je 80652f4
 80652ea:  ror ebx, 0x9
 80652ed:  xor ebx, DWORD PTR gs:0x18
 80652f4:  mov eax, DWORD PTR [ebp+0x10]
 80652f7:  mov DWORD PTR [ebp-0x14], eax
 80652fa:  mov DWORD PTR [esp], ebx
 80652fd:  call 807f350
 8065302:  lea eax, [ebp-0x10]
 8065305:  mov DWORD PTR [esp+0x1c], 0x0
 806530d:  mov DWORD PTR [esp+0x18], 0x0
 8065315:  mov DWORD PTR [esp+0x14], eax
 8065319:  mov DWORD PTR [esp+0x10], 0x0
 8065321:  mov eax, DWORD PTR [ebp+0x14]
 8065324:  mov DWORD PTR [esp], esi
 8065327:  mov DWORD PTR [esp+0xc], eax
 806532b:  lea eax, [ebp-0x14]
 806532e:  mov DWORD PTR [esp+0x8], eax
 8065332:  lea eax, [edi+0x54]
 8065335:  mov DWORD PTR [esp+0x4], eax
 8065339:  call ebx
 806533b:  mov edx, DWORD PTR [ebp-0x14]
 806533e:  mov ecx, eax
 8065340:  mov eax, DWORD PTR [ebp+0x18]
 8065343:  cmp ecx, 0x4
 8065346:  mov DWORD PTR [eax], edx
 8065348:  mov eax, DWORD PTR [ebp+0x24]
 806534b:  mov edx, DWORD PTR [edi+0x54]
 806534e:  mov DWORD PTR [eax], edx
 8065350:  je 8065374
 8065352:  jle 8065370
 8065354:  cmp ecx, 0x5
 8065357:  je 8065380
 8065359:  cmp ecx, 0x7
 806535c:  lea esi, [esi]
 8065360:  je 8065380
 8065362:  add esp, 0x28
 8065365:  mov eax, 0x2
 806536a:  pop ebx
 806536b:  pop esi
 806536c:  pop edi
 806536d:  pop ebp
 806536e:  ret
 806536f:  nop
 8065370:  test ecx, ecx
 8065372:  jne 8065362
 8065374:  add esp, 0x28
 8065377:  xor eax, eax
 8065379:  pop ebx
 806537a:  pop esi
 806537b:  pop edi
 806537c:  pop ebp
 806537d:  ret
 806537e:  xchg ax, ax
 8065380:  add esp, 0x28
 8065383:  mov eax, 0x1
 8065388:  pop ebx
 8065389:  pop esi
 806538a:  pop edi
 806538b:  pop ebp
 806538c:  ret
 806538d:  lea esi, [esi]

08065390 <do_length>:
 8065390:  push ebp
 8065391:  mov ebp, esp
 8065393:  sub esp, 0x34
 8065396:  mov edx, DWORD PTR [ebp+0x18]
 8065399:  mov eax, DWORD PTR [ebp+0x10]
 806539c:  mov DWORD PTR [ebp-0x4], edi
 806539f:  mov edi, DWORD PTR [ebp+0x8]
 80653a2:  mov DWORD PTR [ebp-0xc], ebx
 80653a5:  shl edx, 0x2
 80653a8:  mov DWORD PTR [ebp-0x10], eax
 80653ab:  lea eax, [edx+0x10]
 80653ae:  sub esp, eax
 80653b0:  lea eax, [esp+0x2f]
 80653b4:  and eax, 0xf0
 80653b7:  mov DWORD PTR [ebp-0x8], esi
 80653ba:  mov esi, DWORD PTR [edi+0x24]
 80653bd:  mov DWORD PTR [edi+0x28], eax
 80653c0:  add eax, edx
 80653c2:  mov DWORD PTR [edi+0x2c], eax
 80653c5:  mov eax, DWORD PTR [ebp+0xc]
 80653c8:  mov DWORD PTR [edi+0x3c], eax
 80653cb:  mov eax, DWORD PTR [esi]
 80653cd:  mov ebx, DWORD PTR [esi+0x14]
 80653d0:  test eax, eax
 80653d2:  je 80653de
 80653d4:  ror ebx, 0x9
 80653d7:  xor ebx, DWORD PTR gs:0x18
 80653de:  mov DWORD PTR [esp], ebx
 80653e1:  call 807f350
 80653e6:  lea eax, [ebp-0x14]
 80653e9:  mov DWORD PTR [esp+0x14], eax
 80653ed:  mov eax, DWORD PTR [ebp+0x14]
 80653f0:  mov DWORD PTR [esp], esi
 80653f3:  mov DWORD PTR [esp+0x1c], 0x0
 80653fb:  mov DWORD PTR [esp+0x18], 0x0
 8065403:  mov DWORD PTR [esp+0xc], eax
 8065407:  lea eax, [ebp-0x10]
 806540a:  mov DWORD PTR [esp+0x8], eax
 806540e:  lea eax, [edi+0x28]
 8065411:  mov DWORD PTR [esp+0x10], 0x0
 8065419:  mov DWORD PTR [esp+0x4], eax
 806541d:  call ebx
 806541f:  mov eax, DWORD PTR [ebp-0x10]
 8065422:  sub eax, DWORD PTR [ebp+0x10]
 8065425:  mov ebx, DWORD PTR [ebp-0xc]
 8065428:  mov esi, DWORD PTR [ebp-0x8]
 806542b:  mov edi, DWORD PTR [ebp-0x4]
 806542e:  mov esp, ebp
 8065430:  pop ebp
 8065431:  ret
 8065432:  lea esi, [esi]
 8065439:  lea edi, [edi]

08065440 <_IO_fwide>:
 8065440:  push ebp
 8065441:  xor eax, eax
 8065443:  mov ebp, esp
 8065445:  sub esp, 0x34
 8065448:  cmp DWORD PTR [ebp+0xc], 0x0
 806544c:  mov DWORD PTR [ebp-0xc], ebx
 806544f:  mov DWORD PTR [ebp-0x8], esi
 8065452:  mov DWORD PTR [ebp-0x4], edi
 8065455:  mov DWORD PTR [ebp-0x24], 0xffffffff
 806545c:  jl 806546c
 806545e:  setne al
 8065461:  movzx eax, al
 8065464:  test eax, eax
 8065466:  mov DWORD PTR [ebp-0x24], eax
 8065469:  sete al
 806546c:  mov edx, DWORD PTR [ebp+0x8]
 806546f:  mov esi, DWORD PTR [edx+0x68]
 8065472:  test esi, esi
 8065474:  jne 80655e8
 806547a:  test al, al
 806547c:  jne 80655e8
 8065482:  cmp DWORD PTR [ebp-0x24], 0x1
 8065486:  jne 80655cd
 806548c:  mov ecx, DWORD PTR [ebp+0x8]
 806548f:  mov ebx, DWORD PTR [ecx+0x58]
 8065492:  mov eax, DWORD PTR [ebx+0x4]
 8065495:  lea edi, [ebx+0x3c]
 8065498:  mov DWORD PTR [ebp-0x20], edi
 806549b:  mov DWORD PTR [ecx+0x54], edi
 806549e:  mov DWORD PTR [ebx+0x2c], 0x0
 80654a5:  mov DWORD PTR [ebx], eax
 80654a7:  mov eax, DWORD PTR [ebx+0xc]
 80654aa:  mov DWORD PTR [ebx+0x30], 0x0
 80654b1:  mov DWORD PTR [ebx+0x10], eax
 80654b4:  mov eax, DWORD PTR [ecx+0x58]
 80654b7:  mov DWORD PTR [eax+0x34], 0x0
 80654be:  mov DWORD PTR [eax+0x38], 0x0
 80654c5:  lea eax, [ebp-0x1c]
 80654c8:  call 806d390
 80654cd:  cmp DWORD PTR [ebp-0x18], 0x1
 80654d1:  jne 80655ec
 80654d7:  cmp DWORD PTR [ebp-0x10], 0x1
 80654db:  jne 8065610
 80654e1:  mov edi, DWORD PTR [ebp-0x20]
 80654e4:  mov eax, esi
 80654e6:  mov ecx, 0x1e
 80654eb:  rep stosd
 80654ed:  mov DWORD PTR [ebx+0x5c], 0x1
 80654f4:  mov DWORD PTR [ebx+0x40], 0x80652c0
 80654fb:  mov eax, DWORD PTR [ebp-0x1c]
 80654fe:  mov DWORD PTR [ebx+0x70], 0x0
 8065505:  mov DWORD PTR [ebx+0x74], 0x1
 806550c:  mov DWORD PTR [ebx+0x6c], 0x1
 8065513:  mov DWORD PTR [ebx+0x60], eax
 8065516:  mov eax, DWORD PTR [ebp+0x8]
 8065519:  mov DWORD PTR [ebx+0x44], 0x80651f0
 8065520:  mov DWORD PTR [ebx+0x48], 0x8065120
 8065527:  mov DWORD PTR [ebx+0x4c], 0x80650d0
 806552e:  mov ecx, DWORD PTR [eax+0x58]
 8065531:  mov DWORD PTR [ebx+0x84], 0x0
 806553b:  mov DWORD PTR [ebx+0x88], 0x1
 8065545:  mov DWORD PTR [ebx+0x50], 0x8065100
 806554c:  lea edx, [ecx+0x2c]
 806554f:  mov DWORD PTR [ebx+0x78], edx
 8065552:  mov eax, DWORD PTR [ebp-0x14]
 8065555:  mov DWORD PTR [ebx+0x9c], 0x0
 806555f:  mov DWORD PTR [ebx+0xa0], 0x1
 8065569:  mov DWORD PTR [ebx+0x98], 0x1
 8065573:  mov DWORD PTR [ebx+0x8c], eax
 8065579:  mov DWORD PTR [ebx+0xa4], edx
 806557f:  mov DWORD PTR [ebx+0xb0], 0x80b1a58
 8065589:  mov eax, DWORD PTR [ecx+0xb8]
 806558f:  mov edx, DWORD PTR [ebp+0x8]
 8065592:  mov DWORD PTR [ebx+0x54], 0x8065390
 8065599:  mov DWORD PTR [ebx+0x58], 0x8065110
 80655a0:  mov DWORD PTR [edx+0x94], eax
 80655a6:  mov DWORD PTR [esp+0xc], 0x1
 80655ae:  mov DWORD PTR [esp+0x4], 0x0
 80655b6:  mov DWORD PTR [esp+0x8], 0x0
 80655be:  mov DWORD PTR [esp], edx
 80655c1:  call DWORD PTR [eax+0x40]
 80655c4:  mov ecx, DWORD PTR [ebp+0x8]
 80655c7:  mov DWORD PTR [ecx+0x4c], eax
 80655ca:  mov DWORD PTR [ecx+0x50], edx
 80655cd:  mov eax, DWORD PTR [ebp-0x24]
 80655d0:  mov edi, DWORD PTR [ebp+0x8]
 80655d3:  mov DWORD PTR [edi+0x68], eax
 80655d6:  mov ebx, DWORD PTR [ebp-0xc]
 80655d9:  mov esi, DWORD PTR [ebp-0x8]
 80655dc:  mov edi, DWORD PTR [ebp-0x4]
 80655df:  mov esp, ebp
 80655e1:  pop ebp
 80655e2:  ret
 80655e3:  nop
 80655e4:  lea esi, [esi]
 80655e8:  mov eax, esi
 80655ea:  jmp 80655d6
 80655ec:  mov DWORD PTR [esp+0xc], 0x80b19ca
 80655f4:  mov DWORD PTR [esp+0x8], 0x88
 80655fc:  mov DWORD PTR [esp+0x4], 0x80b1994
 8065604:  mov DWORD PTR [esp], 0x80b199e
 806560b:  call 8051490
 8065610:  mov DWORD PTR [esp+0xc], 0x80b19ca
 8065618:  mov DWORD PTR [esp+0x8], 0x89
 8065620:  mov DWORD PTR [esp+0x4], 0x80b1994
 8065628:  mov DWORD PTR [esp], 0x80b19b4
 806562f:  call 8051490
 8065634:  nop
 8065635:  nop
 8065636:  nop
 8065637:  nop
 8065638:  nop
 8065639:  nop
 806563a:  nop
 806563b:  nop
 806563c:  nop
 806563d:  nop
 806563e:  nop
 806563f:  nop

08065640 <open_memstream>:
 8065640:  push ebp
 8065641:  mov ebp, esp
 8065643:  sub esp, 0x18
 8065646:  mov DWORD PTR [esp], 0x170
 806564d:  mov DWORD PTR [ebp-0x8], ebx
 8065650:  mov DWORD PTR [ebp-0x4], esi
 8065653:  call 804d6f0
 8065658:  test eax, eax
 806565a:  mov ebx, eax
 806565c:  jne 8065670
 806565e:  xor ebx, ebx
 8065660:  mov eax, ebx
 8065662:  mov esi, DWORD PTR [ebp-0x4]
 8065665:  mov ebx, DWORD PTR [ebp-0x8]
 8065668:  mov esp, ebp
 806566a:  pop ebp
 806566b:  ret
 806566c:  lea esi, [esi]
 8065670:  lea eax, [eax+0xa8]
 8065676:  mov DWORD PTR [ebx+0x48], eax
 8065679:  mov DWORD PTR [esp+0x4], 0x2000
 8065681:  mov DWORD PTR [esp], 0x1
 8065688:  call 804d3c0
 806568d:  test eax, eax
 806568f:  mov esi, eax
 8065691:  je 806565e
 8065693:  mov DWORD PTR [esp+0x4], 0x0
 806569b:  mov DWORD PTR [esp], ebx
 806569e:  call 8069ca0
 80656a3:  mov DWORD PTR [ebx+0x94], 0x80b1a80
 80656ad:  mov DWORD PTR [esp+0xc], esi
 80656b1:  mov DWORD PTR [esp+0x8], 0x2000
 80656b9:  mov DWORD PTR [esp+0x4], esi
 80656bd:  mov DWORD PTR [esp], ebx
 80656c0:  call 806ac50
 80656c5:  mov eax, DWORD PTR [ebp+0x8]
 80656c8:  and DWORD PTR [ebx], 0xfe
 80656cb:  mov DWORD PTR [ebx+0x98], 0x804d6f0
 80656d5:  mov DWORD PTR [ebx+0xa0], eax
 80656db:  mov eax, DWORD PTR [ebp+0xc]
 80656de:  mov DWORD PTR [ebx+0x9c], 0x804b4a0
 80656e8:  mov DWORD PTR [ebx+0xa4], eax
 80656ee:  jmp 8065660
 80656f3:  lea esi, [esi]
 80656f9:  lea edi, [edi]

08065700 <_IO_mem_sync>:
 8065700:  push ebp
 8065701:  mov ebp, esp
 8065703:  push ebx
 8065704:  sub esp, 0x8
 8065707:  mov ebx, DWORD PTR [ebp+0x8]
 806570a:  mov eax, DWORD PTR [ebx+0x14]
 806570d:  cmp eax, DWORD PTR [ebx+0x18]
 8065710:  je 8065738
 8065712:  mov BYTE PTR [eax], 0x0
 8065715:  mov edx, DWORD PTR [ebx+0xa0]
 806571b:  mov eax, DWORD PTR [ebx+0x10]
 806571e:  mov DWORD PTR [edx], eax
 8065720:  mov edx, DWORD PTR [ebx+0xa4]
 8065726:  mov eax, DWORD PTR [ebx+0x14]
 8065729:  sub eax, DWORD PTR [ebx+0x10]
 806572c:  mov DWORD PTR [edx], eax
 806572e:  add esp, 0x8
 8065731:  xor eax, eax
 8065733:  pop ebx
 8065734:  pop ebp
 8065735:  ret
 8065736:  xchg ax, ax
 8065738:  mov DWORD PTR [esp+0x4], 0x0
 8065740:  mov DWORD PTR [esp], ebx
 8065743:  call 806aad0
 8065748:  sub DWORD PTR [ebx+0x14], 0x1
 806574c:  jmp 8065715
 806574e:  xchg ax, ax

08065750 <_IO_mem_finish>:
 8065750:  push ebp
 8065751:  mov ebp, esp
 8065753:  push esi
 8065754:  push ebx
 8065755:  sub esp, 0x8
 8065758:  mov esi, DWORD PTR [ebp+0x8]
 806575b:  mov eax, DWORD PTR [esi+0x14]
 806575e:  mov edx, DWORD PTR [esi+0x10]
 8065761:  mov ebx, DWORD PTR [esi+0xa0]
 8065767:  add eax, 0x1
 806576a:  sub eax, edx
 806576c:  mov DWORD PTR [esp], edx
 806576f:  mov DWORD PTR [esp+0x4], eax
 8065773:  call 804db10
 8065778:  mov DWORD PTR [ebx], eax
 806577a:  mov eax, DWORD PTR [esi+0xa0]
 8065780:  mov edx, DWORD PTR [eax]
 8065782:  test edx, edx
 8065784:  je 80657a5
 8065786:  mov eax, DWORD PTR [esi+0x14]
 8065789:  sub eax, DWORD PTR [esi+0x10]
 806578c:  mov BYTE PTR [edx+eax], 0x0
 8065790:  mov edx, DWORD PTR [esi+0xa4]
 8065796:  mov eax, DWORD PTR [esi+0x14]
 8065799:  sub eax, DWORD PTR [esi+0x10]
 806579c:  mov DWORD PTR [esi+0x1c], 0x0
 80657a3:  mov DWORD PTR [edx], eax
 80657a5:  mov DWORD PTR [ebp+0xc], 0x0
 80657ac:  mov DWORD PTR [ebp+0x8], esi
 80657af:  add esp, 0x8
 80657b2:  pop ebx
 80657b3:  pop esi
 80657b4:  pop ebp
 80657b5:  jmp 806a700
 80657ba:  nop
 80657bb:  nop
 80657bc:  nop
 80657bd:  nop
 80657be:  nop
 80657bf:  nop

080657c0 <_IO_vasprintf>:
 80657c0:  push ebp
 80657c1:  mov ebp, esp
 80657c3:  push edi
 80657c4:  mov edi, 0xffffffff
 80657c9:  push esi
 80657ca:  push ebx
 80657cb:  sub esp, 0xb4
 80657d1:  mov DWORD PTR [esp], 0x64
 80657d8:  call 804d6f0
 80657dd:  test eax, eax
 80657df:  mov esi, eax
 80657e1:  je 80658af
 80657e7:  mov DWORD PTR [ebp-0x64], 0x0
 80657ee:  lea ebx, [ebp-0xac]
 80657f4:  mov DWORD PTR [esp+0x10], 0x0
 80657fc:  mov DWORD PTR [esp+0xc], 0x0
 8065804:  mov DWORD PTR [esp+0x8], 0xffffffff
 806580c:  mov DWORD PTR [esp+0x4], 0x8000
 8065814:  mov DWORD PTR [esp], ebx
 8065817:  call 8069b90
 806581c:  mov DWORD PTR [ebp-0x18], 0x80b1c40
 8065823:  mov DWORD PTR [esp+0xc], esi
 8065827:  mov DWORD PTR [esp+0x8], 0x64
 806582f:  mov DWORD PTR [esp+0x4], esi
 8065833:  mov DWORD PTR [esp], ebx
 8065836:  call 806ac50
 806583b:  mov eax, DWORD PTR [ebp+0x10]
 806583e:  and DWORD PTR [ebp-0xac], 0xfe
 8065845:  mov DWORD PTR [ebp-0x14], 0x804d6f0
 806584c:  mov DWORD PTR [ebp-0x10], 0x804b4a0
 8065853:  mov DWORD PTR [esp+0x8], eax
 8065857:  mov edx, DWORD PTR [ebp+0xc]
 806585a:  mov DWORD PTR [esp], ebx
 806585d:  mov DWORD PTR [esp+0x4], edx
 8065861:  call 8058740
 8065866:  test eax, eax
 8065868:  mov edi, eax
 806586a:  js 8065908
 8065870:  mov eax, DWORD PTR [ebp-0x98]
 8065876:  mov edx, DWORD PTR [ebp-0x9c]
 806587c:  lea ebx, [eax+0x1]
 806587f:  mov eax, DWORD PTR [ebp-0x94]
 8065885:  sub ebx, edx
 8065887:  sub eax, edx
 8065889:  shr eax, 1
 806588b:  cmp ebx, eax
 806588d:  jb 80658c0
 806588f:  mov DWORD PTR [esp+0x4], ebx
 8065893:  mov eax, DWORD PTR [ebp-0x90]
 8065899:  mov DWORD PTR [esp], eax
 806589c:  call 804db10
 80658a1:  mov edx, DWORD PTR [ebp+0x8]
 80658a4:  mov DWORD PTR [edx], eax
 80658a6:  test eax, eax
 80658a8:  je 8065928
 80658aa:  mov BYTE PTR [eax+ebx-0x1], 0x0
 80658af:  add esp, 0xb4
 80658b5:  mov eax, edi
 80658b7:  pop ebx
 80658b8:  pop esi
 80658b9:  pop edi
 80658ba:  pop ebp
 80658bb:  ret
 80658bc:  lea esi, [esi]
 80658c0:  mov DWORD PTR [esp], ebx
 80658c3:  call 804d6f0
 80658c8:  mov edx, eax
 80658ca:  mov eax, DWORD PTR [ebp+0x8]
 80658cd:  test edx, edx
 80658cf:  mov DWORD PTR [eax], edx
 80658d1:  je 806588f
 80658d3:  lea eax, [ebx-0x1]
 80658d6:  mov DWORD PTR [esp+0x8], eax
 80658da:  mov eax, DWORD PTR [ebp-0x90]
 80658e0:  mov DWORD PTR [esp], edx
 80658e3:  mov DWORD PTR [esp+0x4], eax
 80658e7:  call 804efc0
 80658ec:  mov eax, DWORD PTR [ebp-0x90]
 80658f2:  mov DWORD PTR [esp], eax
 80658f5:  call 804b4a0
 80658fa:  mov edx, DWORD PTR [ebp+0x8]
 80658fd:  mov eax, DWORD PTR [edx]
 80658ff:  jmp 80658a6
 8065901:  lea esi, [esi]
 8065908:  mov eax, DWORD PTR [ebp-0x90]
 806590e:  mov DWORD PTR [esp], eax
 8065911:  call 804b4a0
 8065916:  add esp, 0xb4
 806591c:  mov eax, edi
 806591e:  pop ebx
 806591f:  pop esi
 8065920:  pop edi
 8065921:  pop ebp
 8065922:  ret
 8065923:  nop
 8065924:  lea esi, [esi]
 8065928:  mov eax, DWORD PTR [ebp-0x90]
 806592e:  mov edx, DWORD PTR [ebp+0x8]
 8065931:  mov DWORD PTR [edx], eax
 8065933:  jmp 80658aa
 8065938:  nop
 8065939:  nop
 806593a:  nop
 806593b:  nop
 806593c:  nop
 806593d:  nop
 806593e:  nop
 806593f:  nop

08065940 <_IO_vdprintf>:
 8065940:  push ebp
 8065941:  mov ebp, esp
 8065943:  push esi
 8065944:  push ebx
 8065945:  sub esp, 0x168
 806594b:  lea eax, [ebp-0x15c]
 8065951:  lea esi, [ebp-0xa0]
 8065957:  mov DWORD PTR [esp+0xc], eax
 806595b:  mov DWORD PTR [ebp-0x58], 0x0
 8065962:  mov DWORD PTR [esp+0x10], 0x80b1880
 806596a:  mov DWORD PTR [esp+0x8], 0x0
 8065972:  mov DWORD PTR [esp+0x4], 0x8000
 806597a:  mov DWORD PTR [esp], esi
 806597d:  call 8069b90
 8065982:  mov DWORD PTR [ebp-0xc], 0x80b1b00
 8065989:  mov DWORD PTR [esp], esi
 806598c:  call 80673c0
 8065991:  mov eax, DWORD PTR [ebp+0x8]
 8065994:  mov DWORD PTR [esp], esi
 8065997:  mov DWORD PTR [esp+0x4], eax
 806599b:  call 8065b50
 80659a0:  test eax, eax
 80659a2:  je 80659ed
 80659a4:  mov eax, DWORD PTR [ebp-0xa0]
 80659aa:  mov DWORD PTR [esp], esi
 80659ad:  and eax, 0xffffeff3
 80659b2:  or eax, 0x44
 80659b5:  mov DWORD PTR [ebp-0xa0], eax
 80659bb:  mov eax, DWORD PTR [ebp+0x10]
 80659be:  mov DWORD PTR [esp+0x8], eax
 80659c2:  mov eax, DWORD PTR [ebp+0xc]
 80659c5:  mov DWORD PTR [esp+0x4], eax
 80659c9:  call 8058740
 80659ce:  mov DWORD PTR [esp+0x4], 0x0
 80659d6:  mov DWORD PTR [esp], esi
 80659d9:  mov ebx, eax
 80659db:  mov eax, DWORD PTR [ebp-0xc]
 80659de:  call DWORD PTR [eax+0x8]
 80659e1:  add esp, 0x168
 80659e7:  mov eax, ebx
 80659e9:  pop ebx
 80659ea:  pop esi
 80659eb:  pop ebp
 80659ec:  ret
 80659ed:  mov DWORD PTR [esp], esi
 80659f0:  mov ebx, 0xffffffff
 80659f5:  call 8069980
 80659fa:  jmp 80659e1
 80659fc:  nop
 80659fd:  nop
 80659fe:  nop
 80659ff:  nop

08065a00 <__fcloseall>:
 8065a00:  push ebp
 8065a01:  mov ebp, esp
 8065a03:  pop ebp
 8065a04:  jmp 8069600
 8065a09:  nop
 8065a0a:  nop
 8065a0b:  nop
 8065a0c:  nop
 8065a0d:  nop
 8065a0e:  nop
 8065a0f:  nop

08065a10 <fgets_unlocked>:
 8065a10:  push ebp
 8065a11:  mov ebp, esp
 8065a13:  sub esp, 0x24
 8065a16:  mov edx, DWORD PTR [ebp+0xc]
 8065a19:  mov DWORD PTR [ebp-0xc], ebx
 8065a1c:  mov ebx, DWORD PTR [ebp+0x8]
 8065a1f:  mov DWORD PTR [ebp-0x8], esi
 8065a22:  mov DWORD PTR [ebp-0x4], edi
 8065a25:  test edx, edx
 8065a27:  jle 8065ab8
 8065a2d:  cmp edx, 0x1
 8065a30:  je 8065ad6
 8065a36:  mov eax, DWORD PTR [ebp+0x10]
 8065a39:  mov ecx, DWORD PTR [ebp+0x10]
 8065a3c:  mov edi, DWORD PTR [eax]
 8065a3e:  mov eax, edi
 8065a40:  and eax, 0xdf
 8065a43:  mov DWORD PTR [ecx], eax
 8065a45:  lea eax, [edx-0x1]
 8065a48:  mov DWORD PTR [esp+0x10], 0x1
 8065a50:  mov DWORD PTR [esp+0xc], 0xa
 8065a58:  mov DWORD PTR [esp+0x8], eax
 8065a5c:  mov DWORD PTR [esp+0x4], ebx
 8065a60:  mov DWORD PTR [esp], ecx
 8065a63:  call 8093d50
 8065a68:  test eax, eax
 8065a6a:  mov DWORD PTR [ebp-0x10], eax
 8065a6d:  jne 8065a98
 8065a6f:  mov eax, DWORD PTR [ebp+0x10]
 8065a72:  xor esi, esi
 8065a74:  mov ecx, DWORD PTR [eax]
 8065a76:  mov eax, DWORD PTR [ebp+0x10]
 8065a79:  and edi, 0x20
 8065a7c:  mov ebx, esi
 8065a7e:  or ecx, edi
 8065a80:  mov DWORD PTR [eax], ecx
 8065a82:  mov eax, ebx
 8065a84:  mov esi, DWORD PTR [ebp-0x8]
 8065a87:  mov ebx, DWORD PTR [ebp-0xc]
 8065a8a:  mov edi, DWORD PTR [ebp-0x4]
 8065a8d:  mov esp, ebp
 8065a8f:  pop ebp
 8065a90:  ret
 8065a91:  lea esi, [esi]
 8065a98:  mov eax, DWORD PTR [ebp+0x10]
 8065a9b:  mov ecx, DWORD PTR [eax]
 8065a9d:  test cl, 0x20
 8065aa0:  jne 8065ac0
 8065aa2:  mov ecx, DWORD PTR [ebp-0x10]
 8065aa5:  mov esi, ebx
 8065aa7:  mov BYTE PTR [ebx+ecx], 0x0
 8065aab:  mov eax, DWORD PTR [ebp+0x10]
 8065aae:  mov ecx, DWORD PTR [eax]
 8065ab0:  jmp 8065a76
 8065ab2:  lea esi, [esi]
 8065ab8:  xor ebx, ebx
 8065aba:  jmp 8065a82
 8065abc:  lea esi, [esi]
 8065ac0:  mov edx, 0xffffffe8
 8065ac6:  xor esi, esi
 8065ac8:  mov eax, gs:0x0
 8065ace:  cmp DWORD PTR [eax+edx], 0xb
 8065ad2:  jne 8065a76
 8065ad4:  jmp 8065aa2
 8065ad6:  mov BYTE PTR [ebx], 0x0
 8065ad9:  jmp 8065a82
 8065adb:  nop
 8065adc:  nop
 8065add:  nop
 8065ade:  nop
 8065adf:  nop

08065ae0 <fputs_unlocked>:
 8065ae0:  push ebp
 8065ae1:  mov ebp, esp
 8065ae3:  sub esp, 0x18
 8065ae6:  mov DWORD PTR [ebp-0x8], esi
 8065ae9:  mov esi, DWORD PTR [ebp+0x8]
 8065aec:  mov DWORD PTR [ebp-0xc], ebx
 8065aef:  mov ebx, DWORD PTR [ebp+0xc]
 8065af2:  mov DWORD PTR [ebp-0x4], edi
 8065af5:  mov DWORD PTR [esp], esi
 8065af8:  call 804eea0
 8065afd:  mov edi, eax
 8065aff:  mov eax, DWORD PTR [ebx+0x68]
 8065b02:  test eax, eax
 8065b04:  jne 8065b48
 8065b06:  mov DWORD PTR [ebx+0x68], 0xffffffff
 8065b0d:  mov eax, DWORD PTR [ebx+0x94]
 8065b13:  mov DWORD PTR [esp+0x8], edi
 8065b17:  mov DWORD PTR [esp+0x4], esi
 8065b1b:  mov DWORD PTR [esp], ebx
 8065b1e:  call DWORD PTR [eax+0x1c]
 8065b21:  mov edx, 0x1
 8065b26:  cmp eax, edi
 8065b28:  je 8065b35
 8065b2a:  lea esi, [esi]
 8065b30:  mov edx, 0xffffffff
 8065b35:  mov ebx, DWORD PTR [ebp-0xc]
 8065b38:  mov eax, edx
 8065b3a:  mov esi, DWORD PTR [ebp-0x8]
 8065b3d:  mov edi, DWORD PTR [ebp-0x4]
 8065b40:  mov esp, ebp
 8065b42:  pop ebp
 8065b43:  ret
 8065b44:  lea esi, [esi]
 8065b48:  add eax, 0x1
 8065b4b:  jne 8065b30
 8065b4d:  jmp 8065b0d
 8065b4f:  nop

08065b50 <_IO_new_file_attach>:
 8065b50:  push ebp
 8065b51:  mov ebp, esp
 8065b53:  sub esp, 0x24
 8065b56:  mov DWORD PTR [ebp-0xc], ebx
 8065b59:  mov ebx, DWORD PTR [ebp+0x8]
 8065b5c:  mov DWORD PTR [ebp-0x8], esi
 8065b5f:  mov DWORD PTR [ebp-0x4], edi
 8065b62:  cmp DWORD PTR [ebx+0x38], 0xff
 8065b66:  je 8065b80
 8065b68:  xor ebx, ebx
 8065b6a:  mov eax, ebx
 8065b6c:  mov esi, DWORD PTR [ebp-0x8]
 8065b6f:  mov ebx, DWORD PTR [ebp-0xc]
 8065b72:  mov edi, DWORD PTR [ebp-0x4]
 8065b75:  mov esp, ebp
 8065b77:  pop ebp
 8065b78:  ret
 8065b79:  lea esi, [esi]
 8065b80:  mov eax, DWORD PTR [ebp+0xc]
 8065b83:  mov esi, 0xffffffe8
 8065b89:  mov edi, DWORD PTR gs:0x0
 8065b90:  mov DWORD PTR [ebx+0x4c], 0xffffffff
 8065b97:  mov DWORD PTR [ebx+0x38], eax
 8065b9a:  mov eax, DWORD PTR [ebx]
 8065b9c:  mov DWORD PTR [ebx+0x50], 0xffffffff
 8065ba3:  and eax, 0xf3
 8065ba6:  or eax, 0x40
 8065ba9:  mov DWORD PTR [ebx], eax
 8065bab:  mov eax, DWORD PTR [edi+esi]
 8065bae:  mov DWORD PTR [ebp-0x10], eax
 8065bb1:  mov eax, DWORD PTR [ebx+0x94]
 8065bb7:  mov DWORD PTR [esp+0x10], 0x3
 8065bbf:  mov DWORD PTR [esp+0xc], 0x1
 8065bc7:  mov DWORD PTR [esp+0x4], 0x0
 8065bcf:  mov DWORD PTR [esp+0x8], 0x0
 8065bd7:  mov DWORD PTR [esp], ebx
 8065bda:  call DWORD PTR [eax+0x24]
 8065bdd:  and eax, edx
 8065bdf:  add eax, 0x1
 8065be2:  je 8065bef
 8065be4:  mov eax, DWORD PTR [ebp-0x10]
 8065be7:  mov DWORD PTR [edi+esi], eax
 8065bea:  jmp 8065b6a
 8065bef:  cmp DWORD PTR [edi+esi], 0x1d
 8065bf3:  jne 8065b68
 8065bf9:  lea esi, [esi]
 8065c00:  jmp 8065be4
 8065c02:  lea esi, [esi]
 8065c09:  lea edi, [edi]

08065c10 <_IO_file_seekoff_mmap>:
 8065c10:  push ebp
 8065c11:  mov ebp, esp
 8065c13:  sub esp, 0x28
 8065c16:  mov eax, DWORD PTR [ebp+0x18]
 8065c19:  mov DWORD PTR [ebp-0xc], ebx
 8065c1c:  mov ebx, DWORD PTR [ebp+0xc]
 8065c1f:  mov DWORD PTR [ebp-0x8], esi
 8065c22:  mov esi, DWORD PTR [ebp+0x10]
 8065c25:  mov DWORD PTR [ebp-0x4], edi
 8065c28:  mov edi, DWORD PTR [ebp+0x8]
 8065c2b:  test eax, eax
 8065c2d:  je 8065c80
 8065c2f:  cmp DWORD PTR [ebp+0x14], 0x1
 8065c33:  je 8065cf8
 8065c39:  cmp DWORD PTR [ebp+0x14], 0x2
 8065c3d:  jne 8065c4e
 8065c3f:  mov eax, DWORD PTR [edi+0x20]
 8065c42:  sub eax, DWORD PTR [edi+0x1c]
 8065c45:  mov edx, eax
 8065c47:  sar edx, 0x1f
 8065c4a:  add ebx, eax
 8065c4c:  adc esi, edx
 8065c4e:  test esi, esi
 8065c50:  jns 8065c98
 8065c52:  mov edx, 0xffffffe8
 8065c58:  mov ebx, 0xffffffff
 8065c5d:  mov esi, 0xffffffff
 8065c62:  mov eax, gs:0x0
 8065c68:  mov DWORD PTR [eax+edx], 0x16
 8065c6f:  mov eax, ebx
 8065c71:  mov edx, esi
 8065c73:  mov ebx, DWORD PTR [ebp-0xc]
 8065c76:  mov esi, DWORD PTR [ebp-0x8]
 8065c79:  mov edi, DWORD PTR [ebp-0x4]
 8065c7c:  mov esp, ebp
 8065c7e:  pop ebp
 8065c7f:  ret
 8065c80:  mov eax, DWORD PTR [edi+0x8]
 8065c83:  sub eax, DWORD PTR [edi+0x4]
 8065c86:  mov ebx, DWORD PTR [edi+0x4c]
 8065c89:  mov esi, DWORD PTR [edi+0x50]
 8065c8c:  mov edx, eax
 8065c8e:  sar edx, 0x1f
 8065c91:  sub ebx, eax
 8065c93:  sbb esi, edx
 8065c95:  jmp 8065c6f
 8065c97:  nop
 8065c98:  mov eax, DWORD PTR [edi+0x94]
 8065c9e:  mov DWORD PTR [esp+0xc], 0x0
 8065ca6:  mov DWORD PTR [esp+0x4], ebx
 8065caa:  mov DWORD PTR [esp+0x8], esi
 8065cae:  mov DWORD PTR [esp], edi
 8065cb1:  call DWORD PTR [eax+0x40]
 8065cb4:  test edx, edx
 8065cb6:  mov DWORD PTR [ebp-0x10], eax
 8065cb9:  mov DWORD PTR [ebp-0x14], edx
 8065cbc:  js 8065d28
 8065cbe:  mov eax, DWORD PTR [edi+0x20]
 8065cc1:  mov ecx, DWORD PTR [edi+0x1c]
 8065cc4:  mov DWORD PTR [ebp-0x18], eax
 8065cc7:  sub eax, ecx
 8065cc9:  mov edx, eax
 8065ccb:  sar edx, 0x1f
 8065cce:  cmp esi, edx
 8065cd0:  jge 8065d10
 8065cd2:  mov eax, ebx
 8065cd4:  add eax, DWORD PTR [edi+0x1c]
 8065cd7:  mov DWORD PTR [edi+0xc], ecx
 8065cda:  mov DWORD PTR [edi+0x4], eax
 8065cdd:  mov DWORD PTR [edi+0x8], eax
 8065ce0:  mov eax, DWORD PTR [ebp-0x10]
 8065ce3:  and DWORD PTR [edi], 0xef
 8065ce6:  mov DWORD PTR [edi+0x4c], eax
 8065ce9:  mov eax, DWORD PTR [ebp-0x14]
 8065cec:  mov DWORD PTR [edi+0x50], eax
 8065cef:  jmp 8065c6f
 8065cf4:  lea esi, [esi]
 8065cf8:  mov eax, DWORD PTR [edi+0x4]
 8065cfb:  sub eax, DWORD PTR [edi+0xc]
 8065cfe:  mov edx, eax
 8065d00:  sar edx, 0x1f
 8065d03:  add ebx, eax
 8065d05:  adc esi, edx
 8065d07:  jmp 8065c4e
 8065d0c:  lea esi, [esi]
 8065d10:  jg 8065d16
 8065d12:  cmp ebx, eax
 8065d14:  jbe 8065cd2
 8065d16:  mov eax, DWORD PTR [ebp-0x18]
 8065d19:  mov DWORD PTR [edi+0xc], ecx
 8065d1c:  mov DWORD PTR [edi+0x4], eax
 8065d1f:  mov DWORD PTR [edi+0x8], eax
 8065d22:  jmp 8065ce0
 8065d24:  lea esi, [esi]
 8065d28:  mov ebx, 0xffffffff
 8065d2d:  mov esi, 0xffffffff
 8065d32:  jmp 8065c6f
 8065d37:  mov esi, esi
 8065d39:  lea edi, [edi]

08065d40 <_IO_file_seekoff_maybe_mmap>:
 8065d40:  push ebp
 8065d41:  mov ebp, esp
 8065d43:  push ebx
 8065d44:  sub esp, 0x10
 8065d47:  mov ebx, DWORD PTR [ebp+0x8]
 8065d4a:  mov eax, DWORD PTR [ebp+0x14]
 8065d4d:  mov ecx, DWORD PTR [ebx+0x94]
 8065d53:  mov DWORD PTR [esp+0xc], eax
 8065d57:  mov eax, DWORD PTR [ebp+0xc]
 8065d5a:  mov edx, DWORD PTR [ebp+0x10]
 8065d5d:  mov DWORD PTR [esp], ebx
 8065d60:  mov DWORD PTR [esp+0x4], eax
 8065d64:  mov DWORD PTR [esp+0x8], edx
 8065d68:  call DWORD PTR [ecx+0x40]
 8065d6b:  test edx, edx
 8065d6d:  js 8065d80
 8065d6f:  mov DWORD PTR [ebx+0x4c], eax
 8065d72:  mov DWORD PTR [ebx+0x50], edx
 8065d75:  add esp, 0x10
 8065d78:  pop ebx
 8065d79:  pop ebp
 8065d7a:  ret
 8065d7b:  nop
 8065d7c:  lea esi, [esi]
 8065d80:  add esp, 0x10
 8065d83:  mov eax, 0xffffffff
 8065d88:  mov edx, 0xffffffff
 8065d8d:  pop ebx
 8065d8e:  pop ebp
 8065d8f:  ret

08065d90 <_IO_file_sync_mmap>:
 8065d90:  push ebp
 8065d91:  mov ebp, esp
 8065d93:  sub esp, 0x1c
 8065d96:  mov DWORD PTR [ebp-0x4], edi
 8065d99:  mov edi, DWORD PTR [ebp+0x8]
 8065d9c:  mov DWORD PTR [ebp-0xc], ebx
 8065d9f:  mov DWORD PTR [ebp-0x8], esi
 8065da2:  mov eax, DWORD PTR [edi+0x4]
 8065da5:  cmp eax, DWORD PTR [edi+0x8]
 8065da8:  je 8065e08
 8065daa:  mov DWORD PTR [esp+0xc], 0x0
 8065db2:  sub eax, DWORD PTR [edi+0x1c]
 8065db5:  mov edx, eax
 8065db7:  sar edx, 0x1f
 8065dba:  mov DWORD PTR [esp+0x4], eax
 8065dbe:  mov DWORD PTR [esp+0x8], edx
 8065dc2:  mov eax, DWORD PTR [edi+0x38]
 8065dc5:  mov DWORD PTR [esp], eax
 8065dc8:  call 80743e0
 8065dcd:  mov ebx, eax
 8065dcf:  mov eax, DWORD PTR [edi+0x4]
 8065dd2:  mov esi, edx
 8065dd4:  sub eax, DWORD PTR [edi+0x1c]
 8065dd7:  mov ecx, esi
 8065dd9:  mov edx, eax
 8065ddb:  xor eax, ebx
 8065ddd:  sar edx, 0x1f
 8065de0:  xor ecx, edx
 8065de2:  or ecx, eax
 8065de4:  jne 8065e18
 8065de6:  mov eax, DWORD PTR [edi+0xc]
 8065de9:  mov DWORD PTR [edi+0x4c], ebx
 8065dec:  mov DWORD PTR [edi+0x50], esi
 8065def:  mov DWORD PTR [edi+0x4], eax
 8065df2:  mov DWORD PTR [edi+0x8], eax
 8065df5:  xor eax, eax
 8065df7:  mov ebx, DWORD PTR [ebp-0xc]
 8065dfa:  mov esi, DWORD PTR [ebp-0x8]
 8065dfd:  mov edi, DWORD PTR [ebp-0x4]
 8065e00:  mov esp, ebp
 8065e02:  pop ebp
 8065e03:  ret
 8065e04:  lea esi, [esi]
 8065e08:  sub eax, DWORD PTR [edi+0x1c]
 8065e0b:  mov esi, eax
 8065e0d:  mov ebx, eax
 8065e0f:  sar esi, 0x1f
 8065e12:  jmp 8065de6
 8065e14:  lea esi, [esi]
 8065e18:  or DWORD PTR [edi], 0x20
 8065e1b:  mov eax, 0xffffffff
 8065e20:  jmp 8065df7
 8065e22:  lea esi, [esi]
 8065e29:  lea edi, [edi]

08065e30 <_IO_file_seek>:
 8065e30:  push ebp
 8065e31:  mov ebp, esp
 8065e33:  mov eax, DWORD PTR [ebp+0x8]
 8065e36:  mov eax, DWORD PTR [eax+0x38]
 8065e39:  mov DWORD PTR [ebp+0x8], eax
 8065e3c:  pop ebp
 8065e3d:  jmp 80743e0
 8065e42:  lea esi, [esi]
 8065e49:  lea edi, [edi]

08065e50 <decide_maybe_mmap>:
 8065e50:  push ebp
 8065e51:  mov ebp, esp
 8065e53:  sub esp, 0x88
 8065e59:  mov DWORD PTR [ebp-0xc], ebx
 8065e5c:  mov ebx, eax
 8065e5e:  mov DWORD PTR [ebp-0x8], esi
 8065e61:  lea edx, [ebp-0x6c]
 8065e64:  mov DWORD PTR [ebp-0x4], edi
 8065e67:  mov eax, DWORD PTR [eax+0x94]
 8065e6d:  mov DWORD PTR [esp+0x4], edx
 8065e71:  mov DWORD PTR [esp], ebx
 8065e74:  call DWORD PTR [eax+0x48]
 8065e77:  test eax, eax
 8065e79:  jne 8065e8a
 8065e7b:  mov eax, DWORD PTR [ebp-0x5c]
 8065e7e:  and eax, 0xf000
 8065e83:  cmp eax, 0x8000
 8065e88:  je 8065ec8
 8065e8a:  mov edx, DWORD PTR [ebx+0x68]
 8065e8d:  test edx, edx
 8065e8f:  jle 8065eb8
 8065e91:  mov DWORD PTR [ebx+0x94], 0x80b1880
 8065e9b:  mov eax, DWORD PTR [ebx+0x58]
 8065e9e:  mov DWORD PTR [eax+0xb8], 0x80b1880
 8065ea8:  mov ebx, DWORD PTR [ebp-0xc]
 8065eab:  mov esi, DWORD PTR [ebp-0x8]
 8065eae:  mov edi, DWORD PTR [ebp-0x4]
 8065eb1:  mov esp, ebp
 8065eb3:  pop ebp
 8065eb4:  ret
 8065eb5:  lea esi, [esi]
 8065eb8:  mov DWORD PTR [ebx+0x94], 0x80b1b00
 8065ec2:  jmp 8065e9b
 8065ec4:  lea esi, [esi]
 8065ec8:  mov edx, DWORD PTR [ebp-0x3c]
 8065ecb:  mov ecx, DWORD PTR [ebp-0x40]
 8065ece:  mov eax, edx
 8065ed0:  or eax, ecx
 8065ed2:  je 8065e8a
 8065ed4:  cmp edx, 0x0
 8065ed7:  jg 8065e8a
 8065ed9:  jl 8065eea
 8065edb:  cmp ecx, 0xfffff
 8065ee1:  lea esi, [esi]
 8065ee8:  ja 8065e8a
 8065eea:  mov edi, DWORD PTR [ebx+0x4c]
 8065eed:  mov esi, DWORD PTR [ebx+0x50]
 8065ef0:  mov eax, edi
 8065ef2:  and eax, esi
 8065ef4:  add eax, 0x1
 8065ef7:  je 8065f0a
 8065ef9:  cmp edx, esi
 8065efb:  jl 8065e8a
 8065efd:  jg 8065f0a
 8065eff:  cmp ecx, edi
 8065f01:  lea esi, [esi]
 8065f08:  jb 8065e8a
 8065f0a:  mov eax, DWORD PTR [ebx+0x38]
 8065f0d:  mov DWORD PTR [esp+0x14], 0x0
 8065f15:  mov DWORD PTR [esp+0x18], 0x0
 8065f1d:  mov DWORD PTR [esp+0xc], 0x1
 8065f25:  mov DWORD PTR [esp+0x10], eax
 8065f29:  mov DWORD PTR [esp+0x8], 0x1
 8065f31:  mov DWORD PTR [esp+0x4], ecx
 8065f35:  mov DWORD PTR [esp], 0x0
 8065f3c:  call 8073690
 8065f41:  cmp eax, 0xff
 8065f44:  mov esi, eax
 8065f46:  je 8065e8a
 8065f4c:  mov eax, DWORD PTR [ebp-0x40]
 8065f4f:  mov edx, DWORD PTR [ebp-0x3c]
 8065f52:  mov DWORD PTR [esp+0xc], 0x0
 8065f5a:  mov DWORD PTR [esp+0x4], eax
 8065f5e:  mov eax, DWORD PTR [ebx+0x38]
 8065f61:  mov DWORD PTR [esp+0x8], edx
 8065f65:  mov DWORD PTR [esp], eax
 8065f68:  call 80743e0
 8065f6d:  mov ecx, DWORD PTR [ebp-0x40]
 8065f70:  xor edx, DWORD PTR [ebp-0x3c]
 8065f73:  mov edi, eax
 8065f75:  mov eax, edi
 8065f77:  xor eax, ecx
 8065f79:  or edx, eax
 8065f7b:  je 8065f9c
 8065f7d:  mov DWORD PTR [esp+0x4], ecx
 8065f81:  mov DWORD PTR [esp], esi
 8065f84:  call 8050050
 8065f89:  mov DWORD PTR [ebx+0x4c], 0xffffffff
 8065f90:  mov DWORD PTR [ebx+0x50], 0xffffffff
 8065f97:  jmp 8065e8a
 8065f9c:  lea eax, [esi+edi]
 8065f9f:  mov DWORD PTR [esp+0x8], eax
 8065fa3:  mov DWORD PTR [esp+0xc], 0x0
 8065fab:  mov DWORD PTR [esp+0x4], esi
 8065faf:  mov DWORD PTR [esp], ebx
 8065fb2:  call 8068980
 8065fb7:  mov eax, DWORD PTR [ebx+0x4c]
 8065fba:  and eax, DWORD PTR [ebx+0x50]
 8065fbd:  add eax, 0x1
 8065fc0:  je 8066002
 8065fc2:  mov edx, DWORD PTR [ebp-0x40]
 8065fc5:  mov eax, esi
 8065fc7:  add eax, DWORD PTR [ebx+0x4c]
 8065fca:  mov ecx, DWORD PTR [ebx+0x68]
 8065fcd:  mov DWORD PTR [ebx+0xc], esi
 8065fd0:  mov DWORD PTR [ebx+0x4], eax
 8065fd3:  lea eax, [esi+edx]
 8065fd6:  mov DWORD PTR [ebx+0x8], eax
 8065fd9:  mov eax, DWORD PTR [ebp-0x3c]
 8065fdc:  test ecx, ecx
 8065fde:  mov DWORD PTR [ebx+0x4c], edx
 8065fe1:  mov DWORD PTR [ebx+0x50], eax
 8065fe4:  jle 8066012
 8065fe6:  mov DWORD PTR [ebx+0x94], 0x80b18e0
 8065ff0:  mov eax, DWORD PTR [ebx+0x58]
 8065ff3:  mov DWORD PTR [eax+0xb8], 0x80b18e0
 8065ffd:  jmp 8065ea8
 8066002:  mov DWORD PTR [ebx+0x4c], 0x0
 8066009:  mov DWORD PTR [ebx+0x50], 0x0
 8066010:  jmp 8065fc2
 8066012:  mov DWORD PTR [ebx+0x94], 0x80b1b60
 806601c:  jmp 8065ff0
 806601e:  xchg ax, ax

08066020 <_IO_file_xsgetn_maybe_mmap>:
 8066020:  push ebp
 8066021:  mov ebp, esp
 8066023:  sub esp, 0xc
 8066026:  mov DWORD PTR [esp], ebx
 8066029:  mov DWORD PTR [esp+0x4], esi
 806602d:  mov DWORD PTR [esp+0x8], edi
 8066031:  mov ebx, DWORD PTR [ebp+0x8]
 8066034:  mov edi, DWORD PTR [ebp+0xc]
 8066037:  mov esi, DWORD PTR [ebp+0x10]
 806603a:  mov eax, ebx
 806603c:  call 8065e50
 8066041:  mov eax, DWORD PTR [ebx+0x94]
 8066047:  mov DWORD PTR [ebp+0x10], esi
 806604a:  mov DWORD PTR [ebp+0xc], edi
 806604d:  mov DWORD PTR [ebp+0x8], ebx
 8066050:  mov ebx, DWORD PTR [esp]
 8066053:  mov ecx, DWORD PTR [eax+0x20]
 8066056:  mov esi, DWORD PTR [esp+0x4]
 806605a:  mov edi, DWORD PTR [esp+0x8]
 806605e:  mov esp, ebp
 8066060:  pop ebp
 8066061:  jmp ecx
 8066063:  lea esi, [esi]
 8066069:  lea edi, [edi]

08066070 <_IO_file_underflow_maybe_mmap>:
 8066070:  push ebp
 8066071:  mov ebp, esp
 8066073:  push ebx
 8066074:  mov ebx, DWORD PTR [ebp+0x8]
 8066077:  mov eax, ebx
 8066079:  call 8065e50
 806607e:  mov eax, DWORD PTR [ebx+0x94]
 8066084:  mov DWORD PTR [ebp+0x8], ebx
 8066087:  pop ebx
 8066088:  pop ebp
 8066089:  mov ecx, DWORD PTR [eax+0x10]
 806608c:  jmp ecx
 806608e:  xchg ax, ax

08066090 <mmap_remap_check>:
 8066090:  push ebp
 8066091:  mov ebp, esp
 8066093:  sub esp, 0x8c
 8066099:  mov DWORD PTR [ebp-0xc], ebx
 806609c:  mov ebx, eax
 806609e:  mov DWORD PTR [ebp-0x8], esi
 80660a1:  lea edx, [ebp-0x6c]
 80660a4:  mov DWORD PTR [ebp-0x4], edi
 80660a7:  mov eax, DWORD PTR [eax+0x94]
 80660ad:  mov DWORD PTR [esp+0x4], edx
 80660b1:  mov DWORD PTR [esp], ebx
 80660b4:  call DWORD PTR [eax+0x48]
 80660b7:  test eax, eax
 80660b9:  jne 80660ca
 80660bb:  mov eax, DWORD PTR [ebp-0x5c]
 80660be:  and eax, 0xf000
 80660c3:  cmp eax, 0x8000
 80660c8:  je 8066138
 80660ca:  mov edx, DWORD PTR [ebx+0x1c]
 80660cd:  mov eax, DWORD PTR [ebx+0x20]
 80660d0:  mov DWORD PTR [esp], edx
 80660d3:  sub eax, edx
 80660d5:  mov DWORD PTR [esp+0x4], eax
 80660d9:  call 8050050
 80660de:  mov esi, DWORD PTR [ebx+0x68]
 80660e1:  mov DWORD PTR [ebx+0x20], 0x0
 80660e8:  mov DWORD PTR [ebx+0x1c], 0x0
 80660ef:  mov DWORD PTR [ebx+0xc], 0x0
 80660f6:  test esi, esi
 80660f8:  mov DWORD PTR [ebx+0x4], 0x0
 80660ff:  mov DWORD PTR [ebx+0x8], 0x0
 8066106:  jle 8066270
 806610c:  mov DWORD PTR [ebx+0x94], 0x80b1880
 8066116:  mov eax, DWORD PTR [ebx+0x58]
 8066119:  mov DWORD PTR [eax+0xb8], 0x80b1880
 8066123:  mov eax, 0x1
 8066128:  mov ebx, DWORD PTR [ebp-0xc]
 806612b:  mov esi, DWORD PTR [ebp-0x8]
 806612e:  mov edi, DWORD PTR [ebp-0x4]
 8066131:  mov esp, ebp
 8066133:  pop ebp
 8066134:  ret
 8066135:  lea esi, [esi]
 8066138:  mov edi, DWORD PTR [ebp-0x3c]
 806613b:  mov esi, DWORD PTR [ebp-0x40]
 806613e:  mov eax, edi
 8066140:  or eax, esi
 8066142:  je 80660ca
 8066144:  cmp edi, 0x0
 8066147:  jg 80660ca
 8066149:  jl 806615e
 806614b:  cmp esi, 0xfffff
 8066151:  lea esi, [esi]
 8066158:  ja 80660ca
 806615e:  xchg ax, ax
 8066160:  call 804f4a0
 8066165:  mov ecx, DWORD PTR [ebx+0x20]
 8066168:  mov DWORD PTR [ebp-0x70], eax
 806616b:  mov edx, DWORD PTR [ebp-0x70]
 806616e:  neg eax
 8066170:  mov DWORD PTR [ebp-0x74], eax
 8066173:  mov eax, esi
 8066175:  add eax, 0xff
 8066178:  add edx, eax
 806617a:  mov eax, DWORD PTR [ebx+0x1c]
 806617d:  and edx, DWORD PTR [ebp-0x74]
 8066180:  sub ecx, eax
 8066182:  mov DWORD PTR [ebp-0x7c], eax
 8066185:  mov eax, DWORD PTR [ebp-0x70]
 8066188:  lea ecx, [ecx+eax-0x1]
 806618c:  and ecx, DWORD PTR [ebp-0x74]
 806618f:  cmp edx, ecx
 8066191:  jb 80662a8
 8066197:  jbe 8066295
 806619d:  mov eax, DWORD PTR [ebp-0x70]
 80661a0:  mov DWORD PTR [esp+0xc], 0x1
 80661a8:  mov DWORD PTR [esp+0x4], ecx
 80661ac:  add eax, esi
 80661ae:  sub eax, 0x1
 80661b1:  and eax, DWORD PTR [ebp-0x74]
 80661b4:  mov DWORD PTR [esp+0x8], eax
 80661b8:  mov eax, DWORD PTR [ebp-0x7c]
 80661bb:  mov DWORD PTR [esp], eax
 80661be:  call 8050120
 80661c3:  cmp eax, 0xff
 80661c6:  mov edx, eax
 80661c8:  je 80660ca
 80661ce:  mov DWORD PTR [ebx+0x1c], eax
 80661d1:  add eax, DWORD PTR [ebp-0x40]
 80661d4:  mov DWORD PTR [ebp-0x7c], edx
 80661d7:  mov DWORD PTR [ebx+0x20], eax
 80661da:  mov eax, DWORD PTR [ebx+0x8]
 80661dd:  sub eax, DWORD PTR [ebx+0x4]
 80661e0:  mov edx, eax
 80661e2:  sar edx, 0x1f
 80661e5:  sub DWORD PTR [ebx+0x4c], eax
 80661e8:  mov eax, DWORD PTR [ebp-0x7c]
 80661eb:  sbb DWORD PTR [ebx+0x50], edx
 80661ee:  mov edx, DWORD PTR [ebx+0x20]
 80661f1:  mov DWORD PTR [ebx+0xc], eax
 80661f4:  mov eax, DWORD PTR [ebx+0x4c]
 80661f7:  mov ecx, edx
 80661f9:  mov DWORD PTR [ebp-0x78], eax
 80661fc:  mov eax, edx
 80661fe:  sub eax, DWORD PTR [ebp-0x7c]
 8066201:  mov edi, eax
 8066203:  sar edi, 0x1f
 8066206:  cmp DWORD PTR [ebx+0x50], edi
 8066209:  jg 8066218
 806620b:  jl 8066212
 806620d:  cmp DWORD PTR [ebp-0x78], eax
 8066210:  jae 8066218
 8066212:  mov ecx, DWORD PTR [ebp-0x7c]
 8066215:  add ecx, DWORD PTR [ebp-0x78]
 8066218:  mov DWORD PTR [ebx+0x8], edx
 806621b:  sub edx, DWORD PTR [ebp-0x7c]
 806621e:  mov DWORD PTR [ebx+0x4], ecx
 8066221:  mov eax, edx
 8066223:  sar edx, 0x1f
 8066226:  cmp DWORD PTR [ebx+0x50], edx
 8066229:  jge 8066280
 806622b:  mov DWORD PTR [esp+0x4], eax
 806622f:  mov eax, DWORD PTR [ebx+0x38]
 8066232:  mov DWORD PTR [esp+0xc], 0x0
 806623a:  mov DWORD PTR [esp+0x8], edx
 806623e:  mov DWORD PTR [esp], eax
 8066241:  call 80743e0
 8066246:  mov esi, eax
 8066248:  mov eax, DWORD PTR [ebx+0x20]
 806624b:  mov edi, edx
 806624d:  sub eax, DWORD PTR [ebx+0x1c]
 8066250:  mov ecx, edi
 8066252:  mov edx, eax
 8066254:  xor eax, esi
 8066256:  sar edx, 0x1f
 8066259:  xor ecx, edx
 806625b:  or ecx, eax
 806625d:  je 80662d2
 806625f:  or DWORD PTR [ebx], 0x20
 8066262:  xor eax, eax
 8066264:  jmp 8066128
 8066269:  lea esi, [esi]
 8066270:  mov DWORD PTR [ebx+0x94], 0x80b1b00
 806627a:  jmp 8066116
 806627f:  nop
 8066280:  jg 8066262
 8066282:  cmp DWORD PTR [ebx+0x4c], eax
 8066285:  lea esi, [esi]
 8066288:  jb 806622b
 806628a:  xor eax, eax
 806628c:  lea esi, [esi]
 8066290:  jmp 8066128
 8066295:  mov eax, DWORD PTR [ebp-0x7c]
 8066298:  add eax, esi
 806629a:  mov DWORD PTR [ebx+0x20], eax
 806629d:  jmp 80661da
 80662a2:  lea esi, [esi]
 80662a8:  add eax, esi
 80662aa:  sub eax, 0x1
 80662ad:  and eax, DWORD PTR [ebp-0x74]
 80662b0:  sub ecx, eax
 80662b2:  add eax, DWORD PTR [ebp-0x7c]
 80662b5:  mov DWORD PTR [esp+0x4], ecx
 80662b9:  mov DWORD PTR [esp], eax
 80662bc:  call 8050050
 80662c1:  mov eax, DWORD PTR [ebx+0x1c]
 80662c4:  mov DWORD PTR [ebp-0x7c], eax
 80662c7:  add eax, DWORD PTR [ebp-0x40]
 80662ca:  mov DWORD PTR [ebx+0x20], eax
 80662cd:  jmp 80661da
 80662d2:  mov DWORD PTR [ebx+0x4c], esi
 80662d5:  xor eax, eax
 80662d7:  mov DWORD PTR [ebx+0x50], edi
 80662da:  jmp 8066128
 80662df:  nop

080662e0 <_IO_file_xsgetn_mmap>:
 80662e0:  push ebp
 80662e1:  mov ebp, esp
 80662e3:  sub esp, 0x1c
 80662e6:  mov eax, DWORD PTR [ebp+0x8]
 80662e9:  mov DWORD PTR [ebp-0x4], edi
 80662ec:  mov edi, DWORD PTR [ebp+0x10]
 80662ef:  mov DWORD PTR [ebp-0xc], ebx
 80662f2:  mov edx, DWORD PTR [ebp+0xc]
 80662f5:  mov DWORD PTR [ebp-0x8], esi
 80662f8:  mov esi, DWORD PTR [eax+0x4]
 80662fb:  mov ebx, DWORD PTR [eax+0x8]
 80662fe:  mov DWORD PTR [ebp-0x10], edx
 8066301:  sub ebx, esi
 8066303:  cmp ebx, edi
 8066305:  jb 8066320
 8066307:  test ebx, ebx
 8066309:  jne 8066349
 806630b:  mov eax, DWORD PTR [ebp-0x10]
 806630e:  sub eax, DWORD PTR [ebp+0xc]
 8066311:  mov ebx, DWORD PTR [ebp-0xc]
 8066314:  mov esi, DWORD PTR [ebp-0x8]
 8066317:  mov edi, DWORD PTR [ebp-0x4]
 806631a:  mov esp, ebp
 806631c:  pop ebp
 806631d:  ret
 806631e:  xchg ax, ax
 8066320:  mov eax, DWORD PTR [eax]
 8066322:  test ah, 0x1
 8066325:  jne 806639f
 8066327:  mov eax, DWORD PTR [ebp+0x8]
 806632a:  call 8066090
 806632f:  test eax, eax
 8066331:  jne 8066374
 8066333:  mov eax, DWORD PTR [ebp+0x8]
 8066336:  mov esi, DWORD PTR [eax+0x4]
 8066339:  mov ebx, DWORD PTR [eax+0x8]
 806633c:  sub ebx, esi
 806633e:  cmp ebx, edi
 8066340:  jae 8066307
 8066342:  or DWORD PTR [eax], 0x10
 8066345:  test ebx, ebx
 8066347:  je 806630b
 8066349:  cmp ebx, edi
 806634b:  ja 8066370
 806634d:  mov edx, DWORD PTR [ebp-0x10]
 8066350:  mov DWORD PTR [esp+0x8], ebx
 8066354:  mov DWORD PTR [esp+0x4], esi
 8066358:  mov DWORD PTR [esp], edx
 806635b:  call 806c310
 8066360:  mov edx, DWORD PTR [ebp+0x8]
 8066363:  mov DWORD PTR [ebp-0x10], eax
 8066366:  lea eax, [esi+ebx]
 8066369:  mov DWORD PTR [edx+0x4], eax
 806636c:  jmp 806630b
 806636e:  xchg ax, ax
 8066370:  mov ebx, edi
 8066372:  jmp 806634d
 8066374:  mov edx, DWORD PTR [ebp+0x8]
 8066377:  mov eax, DWORD PTR [edx+0x94]
 806637d:  mov edx, DWORD PTR [ebp+0xc]
 8066380:  mov DWORD PTR [esp+0x8], edi
 8066384:  mov DWORD PTR [esp+0x4], edx
 8066388:  mov edx, DWORD PTR [ebp+0x8]
 806638b:  mov DWORD PTR [esp], edx
 806638e:  call DWORD PTR [eax+0x20]
 8066391:  mov edx, DWORD PTR [ebp+0xc]
 8066394:  sub DWORD PTR [ebp-0x10], edx
 8066397:  add eax, DWORD PTR [ebp-0x10]
 806639a:  jmp 8066311
 806639f:  mov eax, DWORD PTR [ebp+0xc]
 80663a2:  sub edi, ebx
 80663a4:  mov DWORD PTR [esp+0x8], ebx
 80663a8:  mov DWORD PTR [esp+0x4], esi
 80663ac:  mov DWORD PTR [esp], eax
 80663af:  call 806c310
 80663b4:  mov edx, DWORD PTR [ebp+0x8]
 80663b7:  mov DWORD PTR [esp], edx
 80663ba:  mov DWORD PTR [ebp-0x10], eax
 80663bd:  call 8068380
 80663c2:  mov eax, DWORD PTR [ebp+0x8]
 80663c5:  mov esi, DWORD PTR [eax+0x4]
 80663c8:  mov ebx, DWORD PTR [eax+0x8]
 80663cb:  sub ebx, esi
 80663cd:  cmp edi, ebx
 80663cf:  jbe 8066307
 80663d5:  jmp 8066327
 80663da:  lea esi, [esi]

080663e0 <_IO_file_underflow_mmap>:
 80663e0:  push ebp
 80663e1:  mov ebp, esp
 80663e3:  push ebx
 80663e4:  mov ebx, DWORD PTR [ebp+0x8]
 80663e7:  mov eax, DWORD PTR [ebx+0x4]
 80663ea:  cmp eax, DWORD PTR [ebx+0x8]
 80663ed:  jae 80663f8
 80663ef:  movzx eax, BYTE PTR [eax]
 80663f2:  pop ebx
 80663f3:  pop ebp
 80663f4:  ret
 80663f5:  lea esi, [esi]
 80663f8:  mov eax, ebx
 80663fa:  call 8066090
 80663ff:  test eax, eax
 8066401:  jne 8066415
 8066403:  mov eax, DWORD PTR [ebx+0x4]
 8066406:  cmp eax, DWORD PTR [ebx+0x8]
 8066409:  jb 80663ef
 806640b:  or DWORD PTR [ebx], 0x10
 806640e:  mov eax, 0xffffffff
 8066413:  jmp 80663f2
 8066415:  mov eax, DWORD PTR [ebx+0x94]
 806641b:  mov DWORD PTR [ebp+0x8], ebx
 806641e:  pop ebx
 806641f:  pop ebp
 8066420:  mov ecx, DWORD PTR [eax+0x10]
 8066423:  jmp ecx
 8066425:  lea esi, [esi]
 8066429:  lea edi, [edi]

08066430 <_IO_file_xsgetn>:
 8066430:  push ebp
 8066431:  mov ebp, esp
 8066433:  push edi
 8066434:  push esi
 8066435:  push ebx
 8066436:  sub esp, 0x10
 8066439:  mov esi, DWORD PTR [ebp+0x8]
 806643c:  mov eax, DWORD PTR [esi+0x1c]
 806643f:  test eax, eax
 8066441:  je 80665ab
 8066447:  mov edi, DWORD PTR [ebp+0x10]
 806644a:  test edi, edi
 806644c:  je 8066530
 8066452:  mov eax, DWORD PTR [ebp+0xc]
 8066455:  mov ebx, DWORD PTR [esi+0x8]
 8066458:  mov edi, DWORD PTR [ebp+0x10]
 806645b:  mov DWORD PTR [ebp-0x10], eax
 806645e:  mov eax, DWORD PTR [esi+0x4]
 8066461:  sub ebx, eax
 8066463:  cmp ebx, edi
 8066465:  jae 806651a
 806646b:  nop
 806646c:  lea esi, [esi]
 8066470:  test ebx, ebx
 8066472:  jne 8066550
 8066478:  mov eax, DWORD PTR [esi]
 806647a:  test ah, 0x1
 806647d:  jne 8066540
 8066483:  mov edx, DWORD PTR [esi+0x1c]
 8066486:  test edx, edx
 8066488:  je 8066497
 806648a:  mov eax, DWORD PTR [esi+0x20]
 806648d:  sub eax, edx
 806648f:  cmp edi, eax
 8066491:  jb 8066570
 8066497:  test edx, edx
 8066499:  mov ecx, edi
 806649b:  mov DWORD PTR [esi+0xc], edx
 806649e:  mov DWORD PTR [esi+0x4], edx
 80664a1:  mov DWORD PTR [esi+0x8], edx
 80664a4:  mov DWORD PTR [esi+0x14], edx
 80664a7:  mov DWORD PTR [esi+0x10], edx
 80664aa:  mov DWORD PTR [esi+0x18], edx
 80664ad:  je 80664c1
 80664af:  mov ebx, DWORD PTR [esi+0x20]
 80664b2:  sub ebx, edx
 80664b4:  cmp ebx, 0x7f
 80664b7:  jbe 80664c1
 80664b9:  mov eax, edi
 80664bb:  xor edx, edx
 80664bd:  div ebx
 80664bf:  sub ecx, edx
 80664c1:  mov eax, DWORD PTR [esi+0x94]
 80664c7:  mov DWORD PTR [esp+0x8], ecx
 80664cb:  mov edx, DWORD PTR [ebp-0x10]
 80664ce:  mov DWORD PTR [esp], esi
 80664d1:  mov DWORD PTR [esp+0x4], edx
 80664d5:  call DWORD PTR [eax+0x38]
 80664d8:  cmp eax, 0x0
 80664db:  mov edx, eax
 80664dd:  jle 8066590
 80664e3:  mov ecx, DWORD PTR [esi+0x4c]
 80664e6:  sub edi, eax
 80664e8:  mov ebx, DWORD PTR [esi+0x50]
 80664eb:  add DWORD PTR [ebp-0x10], eax
 80664ee:  mov eax, ecx
 80664f0:  and eax, ebx
 80664f2:  add eax, 0x1
 80664f5:  je 8066506
 80664f7:  mov eax, edx
 80664f9:  sar edx, 0x1f
 80664fc:  add eax, ecx
 80664fe:  adc edx, ebx
 8066500:  mov DWORD PTR [esi+0x4c], eax
 8066503:  mov DWORD PTR [esi+0x50], edx
 8066506:  test edi, edi
 8066508:  je 8066530
 806650a:  mov eax, DWORD PTR [esi+0x4]
 806650d:  mov ebx, DWORD PTR [esi+0x8]
 8066510:  sub ebx, eax
 8066512:  cmp ebx, edi
 8066514:  jb 8066470
 806651a:  mov DWORD PTR [esp+0x8], edi
 806651e:  mov DWORD PTR [esp+0x4], eax
 8066522:  mov edx, DWORD PTR [ebp-0x10]
 8066525:  mov DWORD PTR [esp], edx
 8066528:  call 804efc0
 806652d:  add DWORD PTR [esi+0x4], edi
 8066530:  mov eax, DWORD PTR [ebp+0x10]
 8066533:  add esp, 0x10
 8066536:  pop ebx
 8066537:  pop esi
 8066538:  pop edi
 8066539:  pop ebp
 806653a:  ret
 806653b:  nop
 806653c:  lea esi, [esi]
 8066540:  mov DWORD PTR [esp], esi
 8066543:  call 8068380
 8066548:  jmp 8066506
 806654a:  lea esi, [esi]
 8066550:  mov DWORD PTR [esp+0x8], ebx
 8066554:  sub edi, ebx
 8066556:  mov DWORD PTR [esp+0x4], eax
 806655a:  mov eax, DWORD PTR [ebp-0x10]
 806655d:  mov DWORD PTR [esp], eax
 8066560:  call 806c310
 8066565:  add DWORD PTR [esi+0x4], ebx
 8066568:  mov DWORD PTR [ebp-0x10], eax
 806656b:  jmp 8066478
 8066570:  mov DWORD PTR [esp], esi
 8066573:  call 8069060
 8066578:  add eax, 0x1
 806657b:  jne 8066506
 806657d:  sub DWORD PTR [ebp+0x10], edi
 8066580:  mov eax, DWORD PTR [ebp+0x10]
 8066583:  add esp, 0x10
 8066586:  pop ebx
 8066587:  pop esi
 8066588:  pop edi
 8066589:  pop ebp
 806658a:  ret
 806658b:  nop
 806658c:  lea esi, [esi]
 8066590:  jne 806659a
 8066592:  or DWORD PTR [esi], 0x10
 8066595:  sub DWORD PTR [ebp+0x10], edi
 8066598:  jmp 8066580
 806659a:  or DWORD PTR [esi], 0x20
 806659d:  sub DWORD PTR [ebp+0x10], edi
 80665a0:  mov eax, DWORD PTR [ebp+0x10]
 80665a3:  add esp, 0x10
 80665a6:  pop ebx
 80665a7:  pop esi
 80665a8:  pop edi
 80665a9:  pop ebp
 80665aa:  ret
 80665ab:  mov eax, DWORD PTR [esi+0x24]
 80665ae:  test eax, eax
 80665b0:  je 80665c0
 80665b2:  mov DWORD PTR [esp], eax
 80665b5:  call 804b4a0
 80665ba:  and DWORD PTR [esi], 0xfffffeff
 80665c0:  mov DWORD PTR [esp], esi
 80665c3:  call 80689f0
 80665c8:  jmp 8066447
 80665cd:  lea esi, [esi]

080665d0 <new_do_write>:
 80665d0:  push ebp
 80665d1:  mov ebp, esp
 80665d3:  sub esp, 0x20
 80665d6:  mov DWORD PTR [ebp-0xc], ebx
 80665d9:  mov ebx, eax
 80665db:  mov DWORD PTR [ebp-0x4], edi
 80665de:  mov edi, ecx
 80665e0:  mov DWORD PTR [ebp-0x8], esi
 80665e3:  mov eax, DWORD PTR [eax]
 80665e5:  mov DWORD PTR [ebp-0x10], edx
 80665e8:  test ah, 0x10
 80665eb:  je 8066650
 80665ed:  mov DWORD PTR [ebx+0x4c], 0xffffffff
 80665f4:  mov DWORD PTR [ebx+0x50], 0xffffffff
 80665fb:  mov edx, DWORD PTR [ebp-0x10]
 80665fe:  mov eax, DWORD PTR [ebx+0x94]
 8066604:  mov DWORD PTR [esp+0x8], edi
 8066608:  mov DWORD PTR [esp], ebx
 806660b:  mov DWORD PTR [esp+0x4], edx
 806660f:  call DWORD PTR [eax+0x3c]
 8066612:  mov esi, eax
 8066614:  movzx eax, WORD PTR [ebx+0x44]
 8066618:  test ax, ax
 806661b:  jne 8066698
 806661d:  mov edx, DWORD PTR [ebx+0x68]
 8066620:  mov eax, DWORD PTR [ebx+0x1c]
 8066623:  test edx, edx
 8066625:  mov DWORD PTR [ebx+0xc], eax
 8066628:  mov DWORD PTR [ebx+0x4], eax
 806662b:  mov DWORD PTR [ebx+0x8], eax
 806662e:  mov DWORD PTR [ebx+0x14], eax
 8066631:  mov DWORD PTR [ebx+0x10], eax
 8066634:  jle 80666c8
 806663a:  mov eax, DWORD PTR [ebx+0x20]
 806663d:  mov DWORD PTR [ebx+0x18], eax
 8066640:  mov eax, esi
 8066642:  mov ebx, DWORD PTR [ebp-0xc]
 8066645:  mov esi, DWORD PTR [ebp-0x8]
 8066648:  mov edi, DWORD PTR [ebp-0x4]
 806664b:  mov esp, ebp
 806664d:  pop ebp
 806664e:  ret
 806664f:  nop
 8066650:  mov ecx, DWORD PTR [ebx+0x8]
 8066653:  mov edx, DWORD PTR [ebx+0x10]
 8066656:  cmp ecx, edx
 8066658:  je 80665fb
 806665a:  mov eax, DWORD PTR [ebx+0x94]
 8066660:  sub edx, ecx
 8066662:  xor esi, esi
 8066664:  mov ecx, edx
 8066666:  sar ecx, 0x1f
 8066669:  mov DWORD PTR [esp+0x8], ecx
 806666d:  mov DWORD PTR [esp+0xc], 0x1
 8066675:  mov DWORD PTR [esp+0x4], edx
 8066679:  mov DWORD PTR [esp], ebx
 806667c:  call DWORD PTR [eax+0x40]
 806667f:  mov ecx, eax
 8066681:  and eax, edx
 8066683:  add eax, 0x1
 8066686:  je 8066640
 8066688:  mov DWORD PTR [ebx+0x4c], ecx
 806668b:  mov DWORD PTR [ebx+0x50], edx
 806668e:  jmp 80665fb
 8066693:  nop
 8066694:  lea esi, [esi]
 8066698:  test esi, esi
 806669a:  je 806661d
 806669c:  mov ecx, DWORD PTR [ebp-0x10]
 806669f:  movzx eax, ax
 80666a2:  sub eax, 0x1
 80666a5:  mov DWORD PTR [esp+0x8], esi
 80666a9:  mov DWORD PTR [esp], eax
 80666ac:  mov DWORD PTR [esp+0x4], ecx
 80666b0:  call 80686a0
 80666b5:  add eax, 0x1
 80666b8:  mov WORD PTR [ebx+0x44], ax
 80666bc:  jmp 806661d
 80666c1:  lea esi, [esi]
 80666c8:  test DWORD PTR [ebx], 0x202
 80666ce:  jne 806663d
 80666d4:  lea esi, [esi]
 80666d8:  jmp 806663a
 80666dd:  lea esi, [esi]

080666e0 <_IO_new_file_xsputn>:
 80666e0:  push ebp
 80666e1:  xor edx, edx
 80666e3:  mov ebp, esp
 80666e5:  push edi
 80666e6:  push esi
 80666e7:  push ebx
 80666e8:  sub esp, 0x1c
 80666eb:  mov eax, DWORD PTR [ebp+0x10]
 80666ee:  test eax, eax
 80666f0:  je 80667ed
 80666f6:  mov edx, DWORD PTR [ebp+0x8]
 80666f9:  mov edi, DWORD PTR [ebp+0xc]
 80666fc:  mov eax, DWORD PTR [edx]
 80666fe:  and eax, 0xa00
 8066703:  cmp eax, 0xa00
 8066708:  je 80667f8
 806670e:  mov eax, DWORD PTR [edx+0x18]
 8066711:  mov ecx, DWORD PTR [edx+0x14]
 8066714:  mov ebx, DWORD PTR [ebp+0x10]
 8066717:  cmp eax, ecx
 8066719:  jbe 80667a0
 806671f:  mov edx, eax
 8066721:  xor eax, eax
 8066723:  sub edx, ecx
 8066725:  mov DWORD PTR [ebp-0x1c], 0x0
 806672c:  test edx, edx
 806672e:  mov esi, ecx
 8066730:  mov ebx, DWORD PTR [ebp+0x10]
 8066733:  je 8066797
 8066735:  mov eax, DWORD PTR [ebp+0x10]
 8066738:  mov DWORD PTR [ebp-0x10], edx
 806673b:  cmp edx, eax
 806673d:  jbe 8066742
 806673f:  mov DWORD PTR [ebp-0x10], eax
 8066742:  cmp DWORD PTR [ebp-0x10], 0x14
 8066746:  ja 80668f0
 806674c:  mov eax, DWORD PTR [ebp-0x10]
 806674f:  sub eax, 0x1
 8066752:  mov DWORD PTR [ebp-0x14], eax
 8066755:  add eax, 0x1
 8066758:  je 8066788
 806675a:  cmp DWORD PTR [ebp-0x10], 0x9
 806675e:  ja 8066858
 8066764:  xor edx, edx
 8066766:  xchg ax, ax
 8066768:  mov ebx, DWORD PTR [ebp+0xc]
 806676b:  movzx eax, BYTE PTR [ebx+edx]
 806676f:  mov BYTE PTR [ecx+edx], al
 8066772:  add edx, 0x1
 8066775:  cmp edx, DWORD PTR [ebp-0x10]
 8066778:  jne 8066768
 806677a:  mov eax, DWORD PTR [ebp-0x10]
 806677d:  mov edi, DWORD PTR [ebp+0xc]
 8066780:  add edi, DWORD PTR [ebp-0x10]
 8066783:  lea esi, [ecx+eax]
 8066786:  xchg ax, ax
 8066788:  mov edx, DWORD PTR [ebp+0x8]
 806678b:  mov DWORD PTR [edx+0x14], esi
 806678e:  mov ebx, DWORD PTR [ebp+0x10]
 8066791:  mov eax, DWORD PTR [ebp-0x1c]
 8066794:  sub ebx, DWORD PTR [ebp-0x10]
 8066797:  add eax, ebx
 8066799:  test eax, eax
 806679b:  je 80667e8
 806679d:  lea esi, [esi]
 80667a0:  mov esi, DWORD PTR [ebp+0x8]
 80667a3:  mov eax, DWORD PTR [esi+0x94]
 80667a9:  mov DWORD PTR [esp+0x4], 0xffffffff
 80667b1:  mov DWORD PTR [esp], esi
 80667b4:  call DWORD PTR [eax+0xc]
 80667b7:  add eax, 0x1
 80667ba:  je 8066918
 80667c0:  mov eax, DWORD PTR [ebp+0x8]
 80667c3:  xor edx, edx
 80667c5:  mov ecx, DWORD PTR [eax+0x20]
 80667c8:  sub ecx, DWORD PTR [eax+0x1c]
 80667cb:  cmp ecx, 0x7f
 80667ce:  jbe 80667d6
 80667d0:  mov eax, ebx
 80667d2:  xor edx, edx
 80667d4:  div ecx
 80667d6:  mov esi, ebx
 80667d8:  sub esi, edx
 80667da:  jne 8066930
 80667e0:  test ebx, ebx
 80667e2:  jne 8066950
 80667e8:  mov edx, DWORD PTR [ebp+0x10]
 80667eb:  sub edx, ebx
 80667ed:  add esp, 0x1c
 80667f0:  mov eax, edx
 80667f2:  pop ebx
 80667f3:  pop esi
 80667f4:  pop edi
 80667f5:  pop ebp
 80667f6:  ret
 80667f7:  nop
 80667f8:  mov ecx, DWORD PTR [edx+0x14]
 80667fb:  xor ax, ax
 80667fe:  mov edx, DWORD PTR [edx+0x20]
 8066801:  mov DWORD PTR [ebp-0x1c], 0x0
 8066808:  mov esi, ecx
 806680a:  sub edx, ecx
 806680c:  cmp DWORD PTR [ebp+0x10], edx
 806680f:  ja 806672c
 8066815:  mov ebx, DWORD PTR [ebp+0xc]
 8066818:  add ebx, DWORD PTR [ebp+0x10]
 806681b:  cmp DWORD PTR [ebp+0xc], ebx
 806681e:  jae 8066970
 8066824:  cmp BYTE PTR [ebx-0x1], 0xa
 8066828:  lea eax, [ebx-0x1]
 806682b:  je 8066841
 806682d:  lea esi, [esi]
 8066830:  cmp DWORD PTR [ebp+0xc], eax
 8066833:  jae 8066970
 8066839:  sub eax, 0x1
 806683c:  cmp BYTE PTR [eax], 0xa
 806683f:  jne 8066830
 8066841:  sub eax, DWORD PTR [ebp+0xc]
 8066844:  mov DWORD PTR [ebp-0x1c], 0x1
 806684b:  lea edx, [eax+0x1]
 806684e:  mov eax, 0x1
 8066853:  jmp 806672c
 8066858:  mov eax, DWORD PTR [ebp+0xc]
 806685b:  or eax, ecx
 806685d:  test al, 0x3
 806685f:  jne 8066764
 8066865:  mov eax, DWORD PTR [ebp+0xc]
 8066868:  add eax, 0x4
 806686b:  cmp ecx, eax
 806686d:  ja 806687b
 806686f:  lea eax, [ecx+0x4]
 8066872:  cmp DWORD PTR [ebp+0xc], eax
 8066875:  jbe 8066764
 806687b:  mov ebx, DWORD PTR [ebp-0x10]
 806687e:  mov edi, ecx
 8066880:  mov esi, DWORD PTR [ebp+0xc]
 8066883:  shr ebx, 0x2
 8066886:  lea edx, [ebx*4]
 806688d:  mov DWORD PTR [ebp-0x18], edx
 8066890:  mov eax, DWORD PTR [ebp-0x18]
 8066893:  xor edx, edx
 8066895:  test eax, eax
 8066897:  je 80668c7
 8066899:  lea esi, [esi]
 80668a0:  mov esi, DWORD PTR [ebp+0xc]
 80668a3:  mov eax, DWORD PTR [esi+edx*4]
 80668a6:  mov DWORD PTR [ecx+edx*4], eax
 80668a9:  add edx, 0x1
 80668ac:  cmp edx, ebx
 80668ae:  jb 80668a0
 80668b0:  mov eax, DWORD PTR [ebp-0x18]
 80668b3:  mov esi, DWORD PTR [ebp+0xc]
 80668b6:  sub DWORD PTR [ebp-0x14], eax
 80668b9:  lea edi, [ecx+eax]
 80668bc:  add esi, eax
 80668be:  cmp DWORD PTR [ebp-0x10], eax
 80668c1:  je 806677a
 80668c7:  xor edx, edx
 80668c9:  lea esi, [esi]
 80668d0:  movzx eax, BYTE PTR [esi+edx]
 80668d4:  mov BYTE PTR [edi+edx], al
 80668d7:  add edx, 0x1
 80668da:  cmp DWORD PTR [ebp-0x14], edx
 80668dd:  jns 80668d0
 80668df:  mov eax, DWORD PTR [ebp-0x10]
 80668e2:  mov edi, DWORD PTR [ebp+0xc]
 80668e5:  add edi, DWORD PTR [ebp-0x10]
 80668e8:  lea esi, [ecx+eax]
 80668eb:  jmp 8066788
 80668f0:  mov ebx, DWORD PTR [ebp+0xc]
 80668f3:  mov edx, DWORD PTR [ebp-0x10]
 80668f6:  mov DWORD PTR [esp], ecx
 80668f9:  mov DWORD PTR [esp+0x4], ebx
 80668fd:  mov edi, ebx
 80668ff:  mov DWORD PTR [esp+0x8], edx
 8066903:  call 806c310
 8066908:  mov esi, DWORD PTR [ebp+0x8]
 806690b:  add edi, DWORD PTR [ebp-0x10]
 806690e:  mov DWORD PTR [esi+0x14], eax
 8066911:  jmp 806678e
 8066916:  xchg ax, ax
 8066918:  mov edx, DWORD PTR [ebp+0x10]
 806691b:  sub edx, ebx
 806691d:  cmp ebx, 0x1
 8066920:  sbb eax, eax
 8066922:  or edx, eax
 8066924:  jmp 80667ed
 8066929:  lea esi, [esi]
 8066930:  mov eax, DWORD PTR [ebp+0x8]
 8066933:  mov ecx, esi
 8066935:  mov edx, edi
 8066937:  call 80665d0
 806693c:  sub ebx, eax
 806693e:  cmp esi, eax
 8066940:  jbe 80667e0
 8066946:  jmp 80667e8
 806694b:  nop
 806694c:  lea esi, [esi]
 8066950:  mov edx, DWORD PTR [ebp+0x8]
 8066953:  lea eax, [edi+esi]
 8066956:  mov DWORD PTR [esp+0x8], ebx
 806695a:  mov DWORD PTR [esp+0x4], eax
 806695e:  mov DWORD PTR [esp], edx
 8066961:  call 8068ab0
 8066966:  sub ebx, eax
 8066968:  jmp 80667e8
 806696d:  lea esi, [esi]
 8066970:  mov DWORD PTR [ebp-0x1c], 0x0
 8066977:  jmp 8066735
 806697c:  lea esi, [esi]

08066980 <_IO_new_file_write>:
 8066980:  push ebp
 8066981:  mov ebp, esp
 8066983:  push edi
 8066984:  push esi
 8066985:  push ebx
 8066986:  sub esp, 0x18
 8066989:  mov ebx, DWORD PTR [ebp+0x10]
 806698c:  mov edi, DWORD PTR [ebp+0x8]
 806698f:  mov esi, DWORD PTR [ebp+0xc]
 8066992:  mov DWORD PTR [ebp-0x10], 0x0
 8066999:  test ebx, ebx
 806699b:  jg 80669a8
 806699d:  jmp 80669d4
 806699f:  nop
 80669a0:  sub ebx, eax
 80669a2:  test ebx, ebx
 80669a4:  jle 8066a10
 80669a6:  add esi, eax
 80669a8:  test BYTE PTR [edi+0x3c], 0x2
 80669ac:  lea esi, [esi]
 80669b0:  jne 8066a1a
 80669b2:  mov DWORD PTR [esp+0x8], ebx
 80669b6:  mov DWORD PTR [esp+0x4], esi
 80669ba:  mov eax, DWORD PTR [edi+0x38]
 80669bd:  mov DWORD PTR [esp], eax
 80669c0:  call 804f2b0
 80669c5:  test eax, eax
 80669c7:  jns 80669a0
 80669c9:  mov eax, DWORD PTR [ebp+0x10]
 80669cc:  or DWORD PTR [edi], 0x20
 80669cf:  sub eax, ebx
 80669d1:  mov DWORD PTR [ebp-0x10], eax
 80669d4:  mov ebx, DWORD PTR [edi+0x50]
 80669d7:  mov ecx, DWORD PTR [edi+0x4c]
 80669da:  test ebx, ebx
 80669dc:  js 80669fe
 80669de:  mov eax, DWORD PTR [ebp-0x10]
 80669e1:  mov edx, eax
 80669e3:  sar edx, 0x1f
 80669e6:  mov DWORD PTR [ebp-0x18], eax
 80669e9:  add DWORD PTR [ebp-0x18], ecx
 80669ec:  mov eax, DWORD PTR [ebp-0x18]
 80669ef:  mov DWORD PTR [ebp-0x14], edx
 80669f2:  adc DWORD PTR [ebp-0x14], ebx
 80669f5:  mov edx, DWORD PTR [ebp-0x14]
 80669f8:  mov DWORD PTR [edi+0x4c], eax
 80669fb:  mov DWORD PTR [edi+0x50], edx
 80669fe:  mov eax, DWORD PTR [ebp-0x10]
 8066a01:  add esp, 0x18
 8066a04:  pop ebx
 8066a05:  pop esi
 8066a06:  pop edi
 8066a07:  pop ebp
 8066a08:  ret
 8066a09:  lea esi, [esi]
 8066a10:  mov edx, DWORD PTR [ebp+0x10]
 8066a13:  sub edx, ebx
 8066a15:  mov DWORD PTR [ebp-0x10], edx
 8066a18:  jmp 80669d4
 8066a1a:  mov DWORD PTR [esp+0x8], ebx
 8066a1e:  mov DWORD PTR [esp+0x4], esi
 8066a22:  mov eax, DWORD PTR [edi+0x38]
 8066a25:  mov DWORD PTR [esp], eax
 8066a28:  call 804f2ba
 8066a2d:  jmp 80669c5
 8066a2f:  nop

08066a30 <_IO_file_close>:
 8066a30:  push ebp
 8066a31:  mov ebp, esp
 8066a33:  mov eax, DWORD PTR [ebp+0x8]
 8066a36:  mov eax, DWORD PTR [eax+0x38]
 8066a39:  mov DWORD PTR [ebp+0x8], eax
 8066a3c:  pop ebp
 8066a3d:  jmp 807314a
 8066a42:  lea esi, [esi]
 8066a49:  lea edi, [edi]

08066a50 <_IO_file_close_mmap>:
 8066a50:  push ebp
 8066a51:  mov ebp, esp
 8066a53:  push ebx
 8066a54:  sub esp, 0x8
 8066a57:  mov ebx, DWORD PTR [ebp+0x8]
 8066a5a:  mov edx, DWORD PTR [ebx+0x1c]
 8066a5d:  mov eax, DWORD PTR [ebx+0x20]
 8066a60:  mov DWORD PTR [esp], edx
 8066a63:  sub eax, edx
 8066a65:  mov DWORD PTR [esp+0x4], eax
 8066a69:  call 8050050
 8066a6e:  mov eax, DWORD PTR [ebx+0x38]
 8066a71:  mov DWORD PTR [ebx+0x20], 0x0
 8066a78:  mov DWORD PTR [ebx+0x1c], 0x0
 8066a7f:  mov DWORD PTR [ebp+0x8], eax
 8066a82:  add esp, 0x8
 8066a85:  pop ebx
 8066a86:  pop ebp
 8066a87:  jmp 807314a
 8066a8c:  lea esi, [esi]

08066a90 <_IO_file_stat>:
 8066a90:  push ebp
 8066a91:  mov ebp, esp
 8066a93:  sub esp, 0xc
 8066a96:  mov eax, DWORD PTR [ebp+0xc]
 8066a99:  mov DWORD PTR [esp+0x8], eax
 8066a9d:  mov eax, DWORD PTR [ebp+0x8]
 8066aa0:  mov eax, DWORD PTR [eax+0x38]
 8066aa3:  mov DWORD PTR [esp], 0x3
 8066aaa:  mov DWORD PTR [esp+0x4], eax
 8066aae:  call 804f1b0
 8066ab3:  leave
 8066ab4:  ret
 8066ab5:  lea esi, [esi]
 8066ab9:  lea edi, [edi]

08066ac0 <_IO_file_read>:
 8066ac0:  push ebp
 8066ac1:  mov ebp, esp
 8066ac3:  mov eax, DWORD PTR [ebp+0x8]
 8066ac6:  mov ecx, DWORD PTR [ebp+0xc]
 8066ac9:  mov edx, DWORD PTR [ebp+0x10]
 8066acc:  test BYTE PTR [eax+0x3c], 0x2
 8066ad0:  jne 8066ae4
 8066ad2:  mov DWORD PTR [ebp+0x10], edx
 8066ad5:  mov DWORD PTR [ebp+0xc], ecx
 8066ad8:  mov eax, DWORD PTR [eax+0x38]
 8066adb:  mov DWORD PTR [ebp+0x8], eax
 8066ade:  pop ebp
 8066adf:  jmp 804f250
 8066ae4:  mov eax, DWORD PTR [eax+0x38]
 8066ae7:  mov DWORD PTR [ebp+0x8], eax
 8066aea:  pop ebp
 8066aeb:  jmp 804f25a

08066af0 <_IO_new_file_underflow>:
 8066af0:  push ebp
 8066af1:  mov ebp, esp
 8066af3:  sub esp, 0x28
 8066af6:  mov DWORD PTR [ebp-0x8], esi
 8066af9:  mov esi, DWORD PTR [ebp+0x8]
 8066afc:  mov DWORD PTR [ebp-0xc], ebx
 8066aff:  mov DWORD PTR [ebp-0x4], edi
 8066b02:  mov edx, DWORD PTR [esi]
 8066b04:  test dl, 0x4
 8066b07:  jne 8066cc0
 8066b0d:  mov eax, DWORD PTR [esi+0x4]
 8066b10:  cmp eax, DWORD PTR [esi+0x8]
 8066b13:  jb 8066c39
 8066b19:  mov eax, DWORD PTR [esi+0x1c]
 8066b1c:  test eax, eax
 8066b1e:  je 8066c80
 8066b24:  and edx, 0x202
 8066b2a:  je 8066bd8
 8066b30:  mov edx, DWORD PTR ds:0x80d11e0
 8066b36:  cmp WORD PTR [edx], 0x0
 8066b3a:  mov edi, edx
 8066b3c:  js 8066b93
 8066b3e:  mov ecx, DWORD PTR [edx+0x48]
 8066b41:  mov eax, gs:0x8
 8066b47:  mov DWORD PTR [ebp-0x10], eax
 8066b4a:  cmp DWORD PTR [ecx+0x8], eax
 8066b4d:  je 8066b8f
 8066b4f:  mov ebx, ecx
 8066b51:  xor eax, eax
 8066b53:  mov DWORD PTR [ebp-0x1c], 0x0
 8066b5a:  mov ecx, 0x1
 8066b5f:  mov DWORD PTR [ebp-0x18], 0x1
 8066b66:  cmp DWORD PTR gs:0xc, 0x0
 8066b6e:  je 8066b71
 8066b70:  cmpxchg DWORD PTR [ebx], ecx
 8066b74:  jne 80682a6
 8066b7a:  mov edx, DWORD PTR [edx+0x48]
 8066b7d:  mov eax, DWORD PTR [ebp-0x10]
 8066b80:  mov DWORD PTR [ebp-0x14], edx
 8066b83:  mov ecx, DWORD PTR [ebp-0x14]
 8066b86:  mov DWORD PTR [edx+0x8], eax
 8066b89:  mov edx, DWORD PTR ds:0x80d11e0
 8066b8f:  add DWORD PTR [ecx+0x4], 0x1
 8066b93:  mov eax, DWORD PTR [edx]
 8066b95:  and eax, 0x288
 8066b9a:  cmp eax, 0x280
 8066b9f:  je 8066c60
 8066ba5:  cmp WORD PTR [edi], 0x0
 8066ba9:  js 8066bd8
 8066bab:  mov edx, DWORD PTR [edi+0x48]
 8066bae:  mov eax, DWORD PTR [edx+0x4]
 8066bb1:  sub eax, 0x1
 8066bb4:  test eax, eax
 8066bb6:  mov DWORD PTR [edx+0x4], eax
 8066bb9:  jne 8066bd8
 8066bbb:  mov DWORD PTR [edx+0x8], 0x0
 8066bc2:  cmp DWORD PTR gs:0xc, 0x0
 8066bca:  je 8066bcd
 8066bcc:  sub DWORD PTR [edx], 0x1
 8066bd0:  jne 80682b2
 8066bd6:  xchg ax, ax
 8066bd8:  mov DWORD PTR [esp], esi
 8066bdb:  call 80683e0
 8066be0:  mov eax, DWORD PTR [esi+0x1c]
 8066be3:  mov edx, DWORD PTR [esi+0x20]
 8066be6:  mov ecx, DWORD PTR [esi+0x94]
 8066bec:  mov DWORD PTR [esi+0x4], eax
 8066bef:  sub edx, eax
 8066bf1:  mov DWORD PTR [esi+0xc], eax
 8066bf4:  mov DWORD PTR [esi+0x8], eax
 8066bf7:  mov DWORD PTR [esi+0x18], eax
 8066bfa:  mov DWORD PTR [esi+0x14], eax
 8066bfd:  mov DWORD PTR [esi+0x10], eax
 8066c00:  mov DWORD PTR [esp+0x8], edx
 8066c04:  mov DWORD PTR [esp+0x4], eax
 8066c08:  mov DWORD PTR [esp], esi
 8066c0b:  call DWORD PTR [ecx+0x38]
 8066c0e:  cmp eax, 0x0
 8066c11:  mov edx, eax
 8066c13:  jle 8066c50
 8066c15:  mov ecx, DWORD PTR [esi+0x4c]
 8066c18:  mov ebx, DWORD PTR [esi+0x50]
 8066c1b:  add DWORD PTR [esi+0x8], eax
 8066c1e:  mov eax, ecx
 8066c20:  and eax, ebx
 8066c22:  add eax, 0x1
 8066c25:  je 8066c36
 8066c27:  mov eax, edx
 8066c29:  sar edx, 0x1f
 8066c2c:  add eax, ecx
 8066c2e:  adc edx, ebx
 8066c30:  mov DWORD PTR [esi+0x4c], eax
 8066c33:  mov DWORD PTR [esi+0x50], edx
 8066c36:  mov eax, DWORD PTR [esi+0x4]
 8066c39:  movzx eax, BYTE PTR [eax]
 8066c3c:  mov ebx, DWORD PTR [ebp-0xc]
 8066c3f:  mov esi, DWORD PTR [ebp-0x8]
 8066c42:  mov edi, DWORD PTR [ebp-0x4]
 8066c45:  mov esp, ebp
 8066c47:  pop ebp
 8066c48:  ret
 8066c49:  lea esi, [esi]
 8066c50:  jne 8066cb0
 8066c52:  or DWORD PTR [esi], 0x10
 8066c55:  mov eax, 0xffffffff
 8066c5a:  jmp 8066c3c
 8066c5c:  lea esi, [esi]
 8066c60:  mov eax, DWORD PTR [edx+0x94]
 8066c66:  mov DWORD PTR [esp+0x4], 0xffffffff
 8066c6e:  mov DWORD PTR [esp], edx
 8066c71:  call DWORD PTR [eax+0xc]
 8066c74:  jmp 8066ba5
 8066c79:  lea esi, [esi]
 8066c80:  mov eax, DWORD PTR [esi+0x24]
 8066c83:  test eax, eax
 8066c85:  je 8066c9b
 8066c87:  mov DWORD PTR [esp], eax
 8066c8a:  lea esi, [esi]
 8066c90:  call 804b4a0
 8066c95:  and DWORD PTR [esi], 0xfffffeff
 8066c9b:  mov DWORD PTR [esp], esi
 8066c9e:  call 80689f0
 8066ca3:  mov edx, DWORD PTR [esi]
 8066ca5:  jmp 8066b24
 8066caa:  lea esi, [esi]
 8066cb0:  or DWORD PTR [esi], 0x20
 8066cb3:  mov eax, 0xffffffff
 8066cb8:  jmp 8066c3c
 8066cba:  lea esi, [esi]
 8066cc0:  or edx, 0x20
 8066cc3:  mov eax, gs:0x0
 8066cc9:  mov DWORD PTR [esi], edx
 8066ccb:  mov edx, 0xffffffe8
 8066cd1:  mov DWORD PTR [eax+edx], 0x9
 8066cd8:  mov eax, 0xffffffff
 8066cdd:  jmp 8066c3c
 8066ce2:  cmp WORD PTR [edi], 0x0
 8066ce6:  mov ecx, eax
 8066ce8:  js 8066d15
 8066cea:  mov edx, DWORD PTR [edi+0x48]
 8066ced:  mov eax, DWORD PTR [edx+0x4]
 8066cf0:  sub eax, 0x1
 8066cf3:  test eax, eax
 8066cf5:  mov DWORD PTR [edx+0x4], eax
 8066cf8:  jne 8066d15
 8066cfa:  mov DWORD PTR [edx+0x8], 0x0
 8066d01:  cmp DWORD PTR gs:0xc, 0x0
 8066d09:  je 8066d0c
 8066d0b:  sub DWORD PTR [edx], 0x1
 8066d0f:  jne 80682be
 8066d15:  mov DWORD PTR [esp], ecx
 8066d18:  call 80abe50
 8066d1d:  lea esi, [esi]

08066d20 <_IO_new_file_seekoff>:
 8066d20:  push ebp
 8066d21:  mov ebp, esp
 8066d23:  push edi
 8066d24:  push esi
 8066d25:  push ebx
 8066d26:  sub esp, 0x9c
 8066d2c:  mov esi, DWORD PTR [ebp+0x8]
 8066d2f:  mov edi, DWORD PTR [ebp+0x14]
 8066d32:  mov ebx, DWORD PTR [ebp+0x18]
 8066d35:  mov eax, DWORD PTR [esi+0xc]
 8066d38:  cmp eax, DWORD PTR [esi+0x8]
 8066d3b:  je 8067188
 8066d41:  mov eax, DWORD PTR [esi+0x10]
 8066d44:  mov edx, DWORD PTR [esi+0x14]
 8066d47:  mov DWORD PTR [ebp-0x7c], 0x0
 8066d4e:  test ebx, ebx
 8066d50:  jne 8066d65
 8066d52:  mov DWORD PTR [ebp+0xc], 0x0
 8066d59:  mov edi, 0x1
 8066d5e:  mov DWORD PTR [ebp+0x10], 0x0
 8066d65:  cmp edx, eax
 8066d67:  ja 8066e90
 8066d6d:  mov eax, DWORD PTR [esi]
 8066d6f:  test ah, 0x8
 8066d72:  jne 8066e90
 8066d78:  mov edx, DWORD PTR [esi+0x1c]
 8066d7b:  test edx, edx
 8066d7d:  je 80671a8
 8066d83:  cmp edi, 0x1
 8066d86:  je 8066f40
 8066d8c:  cmp edi, 0x2
 8066d8f:  nop
 8066d90:  je 8066ec0
 8066d96:  test ebx, ebx
 8066d98:  je 8066fa0
 8066d9e:  mov ecx, DWORD PTR [esi+0x4c]
 8066da1:  mov ebx, DWORD PTR [esi+0x50]
 8066da4:  mov eax, ecx
 8066da6:  and eax, ebx
 8066da8:  add eax, 0x1
 8066dab:  je 8066fe0
 8066db1:  mov eax, DWORD PTR [esi+0xc]
 8066db4:  test eax, eax
 8066db6:  je 80671e8
 8066dbc:  mov eax, DWORD PTR [esi]
 8066dbe:  test ah, 0x1
 8066dc1:  mov DWORD PTR [ebp-0x78], eax
 8066dc4:  jne 8066fe5
 8066dca:  mov edx, DWORD PTR [esi+0x1c]
 8066dcd:  mov eax, DWORD PTR [esi+0x8]
 8066dd0:  mov DWORD PTR [ebp-0x90], edx
 8066dd6:  sub eax, edx
 8066dd8:  mov edx, eax
 8066dda:  sar edx, 0x1f
 8066ddd:  mov DWORD PTR [ebp-0x98], eax
 8066de3:  mov eax, ecx
 8066de5:  mov DWORD PTR [ebp-0x94], edx
 8066deb:  mov edx, ebx
 8066ded:  sub eax, DWORD PTR [ebp-0x98]
 8066df3:  sbb edx, DWORD PTR [ebp-0x94]
 8066df9:  cmp DWORD PTR [ebp+0x10], edx
 8066dfc:  mov DWORD PTR [ebp-0x98], eax
 8066e02:  mov DWORD PTR [ebp-0x94], edx
 8066e08:  jl 8066fe5
 8066e0e:  jg 8066e19
 8066e10:  cmp DWORD PTR [ebp+0xc], eax
 8066e13:  jb 8066fe5
 8066e19:  cmp DWORD PTR [ebp+0x10], ebx
 8066e1c:  lea esi, [esi]
 8066e20:  jg 8066fe5
 8066e26:  xchg ax, ax
 8066e28:  jl 8066e36
 8066e2a:  cmp DWORD PTR [ebp+0xc], ecx
 8066e2d:  lea esi, [esi]
 8066e30:  jae 8066fe5
 8066e36:  mov edx, DWORD PTR [ebp-0x90]
 8066e3c:  mov eax, DWORD PTR [ebp+0xc]
 8066e3f:  sub eax, DWORD PTR [ebp-0x98]
 8066e45:  add eax, DWORD PTR [esi+0x1c]
 8066e48:  mov DWORD PTR [esi+0xc], edx
 8066e4b:  mov ecx, DWORD PTR [esi+0x4c]
 8066e4e:  mov DWORD PTR [esi+0x14], edx
 8066e51:  mov DWORD PTR [esi+0x10], edx
 8066e54:  mov DWORD PTR [esi+0x18], edx
 8066e57:  mov edx, DWORD PTR [esi+0x50]
 8066e5a:  and DWORD PTR [esi], 0xef
 8066e5d:  mov DWORD PTR [esi+0x4], eax
 8066e60:  test edx, edx
 8066e62:  js 8066fa0
 8066e68:  mov eax, DWORD PTR [esi+0x94]
 8066e6e:  mov DWORD PTR [esp+0x4], ecx
 8066e72:  mov DWORD PTR [esp+0xc], 0x0
 8066e7a:  mov DWORD PTR [esp+0x8], edx
 8066e7e:  mov DWORD PTR [esp], esi
 8066e81:  call DWORD PTR [eax+0x40]
 8066e84:  mov edx, DWORD PTR [ebp+0xc]
 8066e87:  mov ecx, DWORD PTR [ebp+0x10]
 8066e8a:  jmp 8066eaa
 8066e8c:  lea esi, [esi]
 8066e90:  mov DWORD PTR [esp], esi
 8066e93:  call 80683e0
 8066e98:  test eax, eax
 8066e9a:  je 8066d78
 8066ea0:  mov edx, 0xffffffff
 8066ea5:  mov ecx, 0xffffffff
 8066eaa:  add esp, 0x9c
 8066eb0:  mov eax, edx
 8066eb2:  pop ebx
 8066eb3:  mov edx, ecx
 8066eb5:  pop esi
 8066eb6:  pop edi
 8066eb7:  pop ebp
 8066eb8:  ret
 8066eb9:  lea esi, [esi]
 8066ec0:  mov eax, DWORD PTR [esi+0x94]
 8066ec6:  lea edx, [ebp-0x6c]
 8066ec9:  mov DWORD PTR [esp+0x4], edx
 8066ecd:  mov DWORD PTR [esp], esi
 8066ed0:  call DWORD PTR [eax+0x48]
 8066ed3:  test eax, eax
 8066ed5:  je 8066fb8
 8066edb:  mov DWORD PTR [esp], esi
 8066ede:  call 8069d50
 8066ee3:  mov eax, DWORD PTR [esi+0x94]
 8066ee9:  mov DWORD PTR [esp+0xc], edi
 8066eed:  mov ecx, DWORD PTR [ebp+0x10]
 8066ef0:  mov edx, DWORD PTR [ebp+0xc]
 8066ef3:  mov DWORD PTR [esp], esi
 8066ef6:  mov DWORD PTR [esp+0x8], ecx
 8066efa:  mov DWORD PTR [esp+0x4], edx
 8066efe:  call DWORD PTR [eax+0x40]
 8066f01:  mov ecx, edx
 8066f03:  mov edx, eax
 8066f05:  and eax, ecx
 8066f07:  add eax, 0x1
 8066f0a:  je 8066eaa
 8066f0c:  mov eax, DWORD PTR [esi+0x1c]
 8066f0f:  and DWORD PTR [esi], 0xef
 8066f12:  mov DWORD PTR [esi+0x4c], edx
 8066f15:  mov DWORD PTR [esi+0xc], eax
 8066f18:  mov DWORD PTR [esi+0x4], eax
 8066f1b:  mov DWORD PTR [esi+0x8], eax
 8066f1e:  mov DWORD PTR [esi+0x14], eax
 8066f21:  mov DWORD PTR [esi+0x10], eax
 8066f24:  mov DWORD PTR [esi+0x18], eax
 8066f27:  mov eax, edx
 8066f29:  mov edx, ecx
 8066f2b:  mov DWORD PTR [esi+0x50], ecx
 8066f2e:  add esp, 0x9c
 8066f34:  pop ebx
 8066f35:  pop esi
 8066f36:  pop edi
 8066f37:  pop ebp
 8066f38:  ret
 8066f39:  lea esi, [esi]
 8066f40:  mov eax, DWORD PTR [esi+0x8]
 8066f43:  sub eax, DWORD PTR [esi+0x4]
 8066f46:  mov ecx, DWORD PTR [esi+0x50]
 8066f49:  mov edx, eax
 8066f4b:  sar edx, 0x1f
 8066f4e:  sub DWORD PTR [ebp+0xc], eax
 8066f51:  sbb DWORD PTR [ebp+0x10], edx
 8066f54:  mov edx, DWORD PTR [esi+0x4c]
 8066f57:  mov eax, edx
 8066f59:  and eax, ecx
 8066f5b:  add eax, 0x1
 8066f5e:  je 8067140
 8066f64:  add DWORD PTR [ebp+0xc], edx
 8066f67:  adc DWORD PTR [ebp+0x10], ecx
 8066f6a:  xor edi, edi
 8066f6c:  mov eax, DWORD PTR [ebp+0x10]
 8066f6f:  test eax, eax
 8066f71:  jns 8066d96
 8066f77:  mov edx, 0xffffffe8
 8066f7d:  mov ecx, 0xffffffff
 8066f82:  mov eax, gs:0x0
 8066f88:  mov DWORD PTR [eax+edx], 0x16
 8066f8f:  mov edx, 0xffffffff
 8066f94:  jmp 8066eaa
 8066f99:  lea esi, [esi]
 8066fa0:  mov edx, DWORD PTR [ebp+0xc]
 8066fa3:  mov ecx, DWORD PTR [ebp+0x10]
 8066fa6:  add esp, 0x9c
 8066fac:  pop ebx
 8066fad:  pop esi
 8066fae:  mov eax, edx
 8066fb0:  pop edi
 8066fb1:  mov edx, ecx
 8066fb3:  pop ebp
 8066fb4:  ret
 8066fb5:  lea esi, [esi]
 8066fb8:  mov eax, DWORD PTR [ebp-0x5c]
 8066fbb:  and eax, 0xf000
 8066fc0:  cmp eax, 0x8000
 8066fc5:  jne 8066edb
 8066fcb:  mov eax, DWORD PTR [ebp-0x40]
 8066fce:  add DWORD PTR [ebp+0xc], eax
 8066fd1:  mov edx, DWORD PTR [ebp-0x3c]
 8066fd4:  adc DWORD PTR [ebp+0x10], edx
 8066fd7:  xor edi, edi
 8066fd9:  jmp 8066d96
 8066fde:  xchg ax, ax
 8066fe0:  mov ecx, DWORD PTR [esi]
 8066fe2:  mov DWORD PTR [ebp-0x78], ecx
 8066fe5:  test BYTE PTR [ebp-0x78], 0x4
 8066fe9:  jne 8066edb
 8066fef:  mov ebx, DWORD PTR [esi+0x1c]
 8066ff2:  mov ecx, DWORD PTR [esi+0x20]
 8066ff5:  mov edi, DWORD PTR [ebp+0xc]
 8066ff8:  mov eax, ebx
 8066ffa:  sub eax, ecx
 8066ffc:  and edi, eax
 8066ffe:  mov edx, eax
 8067000:  mov eax, DWORD PTR [ebp+0xc]
 8067003:  mov DWORD PTR [ebp-0x84], edi
 8067009:  mov edi, DWORD PTR [ebp+0x10]
 806700c:  sar edx, 0x1f
 806700f:  and edi, edx
 8067011:  mov edx, DWORD PTR [ebp+0x10]
 8067014:  sub eax, DWORD PTR [ebp-0x84]
 806701a:  mov DWORD PTR [ebp-0x80], edi
 806701d:  sbb edx, DWORD PTR [ebp-0x80]
 8067020:  sub ecx, ebx
 8067022:  mov DWORD PTR [ebp-0x8c], eax
 8067028:  mov DWORD PTR [ebp-0x88], edx
 806702e:  mov edx, ecx
 8067030:  sar edx, 0x1f
 8067033:  cmp DWORD PTR [ebp-0x88], edx
 8067039:  jl 8067068
 806703b:  jg 8067045
 806703d:  cmp DWORD PTR [ebp-0x8c], ecx
 8067043:  jbe 8067068
 8067045:  mov edx, DWORD PTR [ebp+0xc]
 8067048:  mov ecx, DWORD PTR [ebp+0x10]
 806704b:  mov DWORD PTR [ebp-0x8c], 0x0
 8067055:  mov DWORD PTR [ebp-0x88], 0x0
 806705f:  mov DWORD PTR [ebp-0x84], edx
 8067065:  mov DWORD PTR [ebp-0x80], ecx
 8067068:  mov eax, DWORD PTR [esi+0x94]
 806706e:  mov DWORD PTR [esp+0xc], 0x0
 8067076:  mov edx, DWORD PTR [ebp-0x84]
 806707c:  mov ecx, DWORD PTR [ebp-0x80]
 806707f:  mov DWORD PTR [esp], esi
 8067082:  mov DWORD PTR [esp+0x4], edx
 8067086:  mov DWORD PTR [esp+0x8], ecx
 806708a:  call DWORD PTR [eax+0x40]
 806708d:  test edx, edx
 806708f:  mov DWORD PTR [ebp-0x74], eax
 8067092:  mov DWORD PTR [ebp-0x70], edx
 8067095:  js 8066ea0
 806709b:  mov ecx, DWORD PTR [ebp-0x88]
 80670a1:  or ecx, DWORD PTR [ebp-0x8c]
 80670a7:  je 80671f2
 80670ad:  mov eax, DWORD PTR [esi+0x94]
 80670b3:  mov ecx, DWORD PTR [eax+0x38]
 80670b6:  mov eax, DWORD PTR [ebp-0x7c]
 80670b9:  test eax, eax
 80670bb:  jne 8067235
 80670c1:  mov edx, DWORD PTR [esi+0x1c]
 80670c4:  mov eax, DWORD PTR [esi+0x20]
 80670c7:  sub eax, edx
 80670c9:  mov DWORD PTR [esp+0x4], edx
 80670cd:  mov DWORD PTR [esp+0x8], eax
 80670d1:  mov DWORD PTR [esp], esi
 80670d4:  call ecx
 80670d6:  mov edx, eax
 80670d8:  mov ecx, eax
 80670da:  sar edx, 0x1f
 80670dd:  cmp DWORD PTR [ebp-0x88], edx
 80670e3:  mov ebx, edx
 80670e5:  mov DWORD PTR [ebp-0x98], eax
 80670eb:  jg 80671fd
 80670f1:  jl 80670ff
 80670f3:  cmp DWORD PTR [ebp-0x8c], eax
 80670f9:  ja 80671fd
 80670ff:  mov edi, DWORD PTR [ebp-0x98]
 8067105:  mov edx, DWORD PTR [esi+0x1c]
 8067108:  mov eax, DWORD PTR [ebp-0x8c]
 806710e:  add edi, edx
 8067110:  add eax, edx
 8067112:  add ecx, DWORD PTR [ebp-0x74]
 8067115:  adc ebx, DWORD PTR [ebp-0x70]
 8067118:  mov DWORD PTR [esi+0xc], edx
 806711b:  mov DWORD PTR [esi+0x14], edx
 806711e:  mov DWORD PTR [esi+0x10], edx
 8067121:  mov DWORD PTR [esi+0x18], edx
 8067124:  mov edx, DWORD PTR [ebp+0xc]
 8067127:  mov DWORD PTR [esi+0x4c], ecx
 806712a:  mov ecx, DWORD PTR [ebp+0x10]
 806712d:  mov DWORD PTR [esi+0x4], eax
 8067130:  mov DWORD PTR [esi+0x8], edi
 8067133:  mov DWORD PTR [esi+0x50], ebx
 8067136:  and DWORD PTR [esi], 0xef
 8067139:  jmp 8066eaa
 806713e:  xchg ax, ax
 8067140:  test ebx, ebx
 8067142:  jne 8066edb
 8067148:  mov eax, DWORD PTR [esi+0x94]
 806714e:  mov DWORD PTR [esp+0xc], 0x1
 8067156:  mov DWORD PTR [esp+0x4], 0x0
 806715e:  mov DWORD PTR [esp+0x8], 0x0
 8067166:  mov DWORD PTR [esp], esi
 8067169:  call DWORD PTR [eax+0x40]
 806716c:  mov ecx, edx
 806716e:  mov edx, eax
 8067170:  and eax, ecx
 8067172:  add eax, 0x1
 8067175:  je 8066eaa
 806717b:  mov DWORD PTR [esi+0x4c], edx
 806717e:  mov DWORD PTR [esi+0x50], ecx
 8067181:  jmp 8066f64
 8067186:  xchg ax, ax
 8067188:  mov eax, DWORD PTR [esi+0x10]
 806718b:  cmp eax, DWORD PTR [esi+0x14]
 806718e:  mov DWORD PTR [ebp-0x7c], 0x1
 8067195:  mov edx, eax
 8067197:  jne 8066d44
 806719d:  jmp 8066d4e
 80671a2:  lea esi, [esi]
 80671a8:  mov eax, DWORD PTR [esi+0xc]
 80671ab:  test eax, eax
 80671ad:  je 80671c3
 80671af:  mov DWORD PTR [esp], eax
 80671b2:  lea esi, [esi]
 80671b8:  call 804b4a0
 80671bd:  and DWORD PTR [esi], 0xfffffeff
 80671c3:  mov DWORD PTR [esp], esi
 80671c6:  call 80689f0
 80671cb:  mov eax, DWORD PTR [esi+0x1c]
 80671ce:  mov DWORD PTR [esi+0x14], eax
 80671d1:  mov DWORD PTR [esi+0x10], eax
 80671d4:  mov DWORD PTR [esi+0x18], eax
 80671d7:  mov DWORD PTR [esi+0xc], eax
 80671da:  mov DWORD PTR [esi+0x4], eax
 80671dd:  mov DWORD PTR [esi+0x8], eax
 80671e0:  jmp 8066d83
 80671e5:  lea esi, [esi]
 80671e8:  mov edx, DWORD PTR [esi]
 80671ea:  mov DWORD PTR [ebp-0x78], edx
 80671ed:  jmp 8066fe5
 80671f2:  xor edi, edi
 80671f4:  xor ecx, ecx
 80671f6:  xor ebx, ebx
 80671f8:  jmp 8067105
 80671fd:  mov eax, DWORD PTR [ebp-0x8c]
 8067203:  mov edi, 0x1
 8067208:  mov edx, DWORD PTR [ebp-0x88]
 806720e:  cmp DWORD PTR [ebp-0x98], 0xff
 8067215:  mov DWORD PTR [ebp+0xc], eax
 8067218:  mov DWORD PTR [ebp+0x10], edx
 806721b:  je 8066edb
 8067221:  sub eax, ecx
 8067223:  mov edi, 0x1
 8067228:  sbb edx, ebx
 806722a:  mov DWORD PTR [ebp+0xc], eax
 806722d:  mov DWORD PTR [ebp+0x10], edx
 8067230:  jmp 8066edb
 8067235:  mov eax, DWORD PTR [ebp-0x8c]
 806723b:  mov edx, DWORD PTR [esi+0x1c]
 806723e:  jmp 80670c9
 8067243:  lea esi, [esi]
 8067249:  lea edi, [edi]

08067250 <_IO_new_file_setbuf>:
 8067250:  push ebp
 8067251:  mov ebp, esp
 8067253:  push ebx
 8067254:  sub esp, 0xc
 8067257:  mov eax, DWORD PTR [ebp+0x10]
 806725a:  mov ebx, DWORD PTR [ebp+0x8]
 806725d:  mov DWORD PTR [esp+0x8], eax
 8067261:  mov eax, DWORD PTR [ebp+0xc]
 8067264:  mov DWORD PTR [esp], ebx
 8067267:  mov DWORD PTR [esp+0x4], eax
 806726b:  call 8069e60
 8067270:  test eax, eax
 8067272:  je 8067298
 8067274:  mov eax, DWORD PTR [ebx+0x1c]
 8067277:  mov DWORD PTR [ebx+0x18], eax
 806727a:  mov DWORD PTR [ebx+0x14], eax
 806727d:  mov DWORD PTR [ebx+0x10], eax
 8067280:  mov DWORD PTR [ebx+0xc], eax
 8067283:  mov DWORD PTR [ebx+0x4], eax
 8067286:  mov DWORD PTR [ebx+0x8], eax
 8067289:  mov eax, ebx
 806728b:  add esp, 0xc
 806728e:  pop ebx
 806728f:  pop ebp
 8067290:  ret
 8067291:  lea esi, [esi]
 8067298:  xor ebx, ebx
 806729a:  add esp, 0xc
 806729d:  mov eax, ebx
 806729f:  pop ebx
 80672a0:  pop ebp
 80672a1:  ret
 80672a2:  lea esi, [esi]
 80672a9:  lea edi, [edi]

080672b0 <_IO_file_open>:
 80672b0:  push ebp
 80672b1:  mov ebp, esp
 80672b3:  sub esp, 0x20
 80672b6:  mov DWORD PTR [ebp-0xc], ebx
 80672b9:  mov ebx, DWORD PTR [ebp+0x8]
 80672bc:  mov DWORD PTR [ebp-0x8], esi
 80672bf:  mov esi, DWORD PTR [ebp+0x18]
 80672c2:  mov DWORD PTR [ebp-0x4], edi
 80672c5:  test BYTE PTR [ebx+0x3c], 0x2
 80672c9:  jne 806738c
 80672cf:  cmp DWORD PTR [ebp+0x1c], 0x1
 80672d3:  mov edx, DWORD PTR [ebp+0x14]
 80672d6:  sbb eax, eax
 80672d8:  and eax, 0x8000
 80672dd:  or eax, DWORD PTR [ebp+0x10]
 80672e0:  mov DWORD PTR [esp+0x8], edx
 80672e4:  mov DWORD PTR [esp+0x4], eax
 80672e8:  mov eax, DWORD PTR [ebp+0xc]
 80672eb:  mov DWORD PTR [esp], eax
 80672ee:  call 804f1f0
 80672f3:  mov edi, eax
 80672f5:  test edi, edi
 80672f7:  js 8067388
 80672fd:  mov eax, DWORD PTR [ebx]
 80672ff:  mov edx, esi
 8067301:  and esi, 0x1004
 8067307:  and edx, 0x100c
 806730d:  mov DWORD PTR [ebx+0x38], edi
 8067310:  and eax, 0xffffeff3
 8067315:  or edx, eax
 8067317:  cmp esi, 0x1004
 806731d:  mov DWORD PTR [ebx], edx
 806731f:  je 8067338
 8067321:  mov DWORD PTR [esp], ebx
 8067324:  call 80697d0
 8067329:  mov eax, ebx
 806732b:  mov esi, DWORD PTR [ebp-0x8]
 806732e:  mov ebx, DWORD PTR [ebp-0xc]
 8067331:  mov edi, DWORD PTR [ebp-0x4]
 8067334:  mov esp, ebp
 8067336:  pop ebp
 8067337:  ret
 8067338:  mov eax, DWORD PTR [ebx+0x94]
 806733e:  mov DWORD PTR [esp+0x10], 0x3
 8067346:  mov DWORD PTR [esp+0xc], 0x2
 806734e:  mov DWORD PTR [esp+0x4], 0x0
 8067356:  mov DWORD PTR [esp+0x8], 0x0
 806735e:  mov DWORD PTR [esp], ebx
 8067361:  call DWORD PTR [eax+0x24]
 8067364:  and eax, edx
 8067366:  add eax, 0x1
 8067369:  jne 8067321
 806736b:  mov edx, 0xffffffe8
 8067371:  mov eax, gs:0x0
 8067377:  cmp DWORD PTR [eax+edx], 0x1d
 806737b:  je 8067321
 806737d:  mov DWORD PTR [esp], edi
 8067380:  call 807314a
 8067385:  lea esi, [esi]
 8067388:  xor ebx, ebx
 806738a:  jmp 8067329
 806738c:  cmp DWORD PTR [ebp+0x1c], 0x1
 8067390:  mov edx, DWORD PTR [ebp+0x14]
 8067393:  sbb eax, eax
 8067395:  and eax, 0x8000
 806739a:  or eax, DWORD PTR [ebp+0x10]
 806739d:  mov DWORD PTR [esp+0x8], edx
 80673a1:  mov DWORD PTR [esp+0x4], eax
 80673a5:  mov eax, DWORD PTR [ebp+0xc]
 80673a8:  mov DWORD PTR [esp], eax
 80673ab:  call 804f1fa
 80673b0:  mov edi, eax
 80673b2:  jmp 80672f5
 80673b7:  mov esi, esi
 80673b9:  lea edi, [edi]

080673c0 <_IO_new_file_init>:
 80673c0:  push ebp
 80673c1:  mov ebp, esp
 80673c3:  push ebx
 80673c4:  sub esp, 0x4
 80673c7:  mov ebx, DWORD PTR [ebp+0x8]
 80673ca:  or DWORD PTR [ebx], 0x240c
 80673d0:  mov DWORD PTR [ebx+0x4c], 0xffffffff
 80673d7:  mov DWORD PTR [ebx+0x50], 0xffffffff
 80673de:  mov DWORD PTR [esp], ebx
 80673e1:  call 80697d0
 80673e6:  mov DWORD PTR [ebx+0x38], 0xffffffff
 80673ed:  add esp, 0x4
 80673f0:  pop ebx
 80673f1:  pop ebp
 80673f2:  ret
 80673f3:  lea esi, [esi]
 80673f9:  lea edi, [edi]

08067400 <_IO_file_setbuf_mmap>:
 8067400:  push ebp
 8067401:  mov ebp, esp
 8067403:  push ebx
 8067404:  sub esp, 0xc
 8067407:  mov ebx, DWORD PTR [ebp+0x8]
 806740a:  mov eax, DWORD PTR [ebx+0x58]
 806740d:  mov DWORD PTR [ebx+0x94], 0x80b1b00
 8067417:  mov DWORD PTR [eax+0xb8], 0x80b1880
 8067421:  mov eax, DWORD PTR [ebp+0x10]
 8067424:  mov DWORD PTR [esp+0x8], eax
 8067428:  mov eax, DWORD PTR [ebp+0xc]
 806742b:  mov DWORD PTR [esp], ebx
 806742e:  mov DWORD PTR [esp+0x4], eax
 8067432:  call 8069e60
 8067437:  test eax, eax
 8067439:  je 8067458
 806743b:  mov eax, DWORD PTR [ebx+0x1c]
 806743e:  mov DWORD PTR [ebx+0x18], eax
 8067441:  mov DWORD PTR [ebx+0x14], eax
 8067444:  mov DWORD PTR [ebx+0x10], eax
 8067447:  mov DWORD PTR [ebx+0xc], eax
 806744a:  mov DWORD PTR [ebx+0x4], eax
 806744d:  mov DWORD PTR [ebx+0x8], eax
 8067450:  mov eax, ebx
 8067452:  add esp, 0xc
 8067455:  pop ebx
 8067456:  pop ebp
 8067457:  ret
 8067458:  mov eax, DWORD PTR [ebx+0x58]
 806745b:  mov DWORD PTR [ebx+0x94], 0x80b1b60
 8067465:  mov DWORD PTR [eax+0xb8], 0x80b18e0
 806746f:  add esp, 0xc
 8067472:  xor eax, eax
 8067474:  pop ebx
 8067475:  pop ebp
 8067476:  ret
 8067477:  mov esi, esi
 8067479:  lea edi, [edi]

08067480 <_IO_new_file_finish>:
 8067480:  push ebp
 8067481:  mov ebp, esp
 8067483:  push ebx
 8067484:  sub esp, 0xc
 8067487:  mov ebx, DWORD PTR [ebp+0x8]
 806748a:  cmp DWORD PTR [ebx+0x38], 0xff
 806748e:  je 80674ba
 8067490:  mov ecx, DWORD PTR [ebx+0x68]
 8067493:  test ecx, ecx
 8067495:  jle 80674e0
 8067497:  mov eax, DWORD PTR [ebx+0x58]
 806749a:  mov edx, DWORD PTR [eax+0xc]
 806749d:  mov eax, DWORD PTR [eax+0x10]
 80674a0:  mov DWORD PTR [esp], ebx
 80674a3:  mov DWORD PTR [esp+0x4], edx
 80674a7:  sub eax, edx
 80674a9:  sar eax, 0x2
 80674ac:  mov DWORD PTR [esp+0x8], eax
 80674b0:  call 80649f0
 80674b5:  test BYTE PTR [ebx], 0x40
 80674b8:  je 80674d0
 80674ba:  mov DWORD PTR [ebp+0xc], 0x0
 80674c1:  mov DWORD PTR [ebp+0x8], ebx
 80674c4:  add esp, 0xc
 80674c7:  pop ebx
 80674c8:  pop ebp
 80674c9:  jmp 806a2b0
 80674ce:  xchg ax, ax
 80674d0:  mov eax, DWORD PTR [ebx+0x94]
 80674d6:  mov DWORD PTR [esp], ebx
 80674d9:  call DWORD PTR [eax+0x44]
 80674dc:  jmp 80674ba
 80674de:  xchg ax, ax
 80674e0:  mov eax, DWORD PTR [ebx+0x14]
 80674e3:  mov edx, DWORD PTR [ebx+0x10]
 80674e6:  mov ecx, eax
 80674e8:  sub ecx, edx
 80674ea:  je 80674b5
 80674ec:  mov eax, ebx
 80674ee:  call 80665d0
 80674f3:  jmp 80674b5
 80674f5:  lea esi, [esi]
 80674f9:  lea edi, [edi]

08067500 <_IO_new_do_write>:
 8067500:  push ebp
 8067501:  mov ebp, esp
 8067503:  sub esp, 0x1c
 8067506:  mov DWORD PTR [ebp-0x4], edi
 8067509:  mov edi, DWORD PTR [ebp+0x10]
 806750c:  mov DWORD PTR [ebp-0xc], ebx
 806750f:  mov ebx, DWORD PTR [ebp+0x8]
 8067512:  mov DWORD PTR [ebp-0x8], esi
 8067515:  test edi, edi
 8067517:  jne 8067528
 8067519:  xor eax, eax
 806751b:  mov ebx, DWORD PTR [ebp-0xc]
 806751e:  mov esi, DWORD PTR [ebp-0x8]
 8067521:  mov edi, DWORD PTR [ebp-0x4]
 8067524:  mov esp, ebp
 8067526:  pop ebp
 8067527:  ret
 8067528:  mov eax, DWORD PTR [ebx]
 806752a:  test ah, 0x10
 806752d:  jne 80675f0
 8067533:  mov ecx, DWORD PTR [ebx+0x8]
 8067536:  mov edx, DWORD PTR [ebx+0x10]
 8067539:  cmp ecx, edx
 806753b:  je 806756f
 806753d:  mov eax, DWORD PTR [ebx+0x94]
 8067543:  sub edx, ecx
 8067545:  mov ecx, edx
 8067547:  sar ecx, 0x1f
 806754a:  mov DWORD PTR [esp+0x8], ecx
 806754e:  mov DWORD PTR [esp+0xc], 0x1
 8067556:  mov DWORD PTR [esp+0x4], edx
 806755a:  mov DWORD PTR [esp], ebx
 806755d:  call DWORD PTR [eax+0x40]
 8067560:  mov ecx, eax
 8067562:  and eax, edx
 8067564:  add eax, 0x1
 8067567:  je 80675e0
 8067569:  mov DWORD PTR [ebx+0x4c], ecx
 806756c:  mov DWORD PTR [ebx+0x50], edx
 806756f:  mov eax, DWORD PTR [ebx+0x94]
 8067575:  mov edx, DWORD PTR [ebp+0xc]
 8067578:  mov DWORD PTR [esp+0x8], edi
 806757c:  mov DWORD PTR [esp], ebx
 806757f:  mov DWORD PTR [esp+0x4], edx
 8067583:  call DWORD PTR [eax+0x3c]
 8067586:  mov esi, eax
 8067588:  movzx eax, WORD PTR [ebx+0x44]
 806758c:  test ax, ax
 806758f:  je 80675b5
 8067591:  test esi, esi
 8067593:  je 80675b5
 8067595:  mov ecx, DWORD PTR [ebp+0xc]
 8067598:  movzx eax, ax
 806759b:  sub eax, 0x1
 806759e:  mov DWORD PTR [esp+0x8], esi
 80675a2:  mov DWORD PTR [esp], eax
 80675a5:  mov DWORD PTR [esp+0x4], ecx
 80675a9:  call 80686a0
 80675ae:  add eax, 0x1
 80675b1:  mov WORD PTR [ebx+0x44], ax
 80675b5:  mov edx, DWORD PTR [ebx+0x68]
 80675b8:  mov eax, DWORD PTR [ebx+0x1c]
 80675bb:  test edx, edx
 80675bd:  mov DWORD PTR [ebx+0xc], eax
 80675c0:  mov DWORD PTR [ebx+0x4], eax
 80675c3:  mov DWORD PTR [ebx+0x8], eax
 80675c6:  mov DWORD PTR [ebx+0x14], eax
 80675c9:  mov DWORD PTR [ebx+0x10], eax
 80675cc:  jle 8067608
 80675ce:  mov eax, DWORD PTR [ebx+0x20]
 80675d1:  cmp edi, esi
 80675d3:  mov DWORD PTR [ebx+0x18], eax
 80675d6:  je 8067519
 80675dc:  lea esi, [esi]
 80675e0:  mov eax, 0xffffffff
 80675e5:  jmp 806751b
 80675ea:  lea esi, [esi]
 80675f0:  mov DWORD PTR [ebx+0x4c], 0xffffffff
 80675f7:  mov DWORD PTR [ebx+0x50], 0xffffffff
 80675fe:  jmp 806756f
 8067603:  nop
 8067604:  lea esi, [esi]
 8067608:  test DWORD PTR [ebx], 0x202
 806760e:  xchg ax, ax
 8067610:  jne 80675d1
 8067612:  lea esi, [esi]
 8067618:  jmp 80675ce
 806761a:  lea esi, [esi]

08067620 <_IO_new_file_sync>:
 8067620:  push ebp
 8067621:  mov ebp, esp
 8067623:  push ebx
 8067624:  sub esp, 0x10
 8067627:  mov ebx, DWORD PTR [ebp+0x8]
 806762a:  mov edx, DWORD PTR [ebx+0x14]
 806762d:  mov eax, DWORD PTR [ebx+0x10]
 8067630:  cmp edx, eax
 8067632:  ja 80676a8
 8067634:  mov eax, DWORD PTR [ebx+0x4]
 8067637:  mov edx, eax
 8067639:  sub edx, DWORD PTR [ebx+0x8]
 806763c:  jne 8067658
 806763e:  mov DWORD PTR [ebx+0x4c], 0xffffffff
 8067645:  xor eax, eax
 8067647:  mov DWORD PTR [ebx+0x50], 0xffffffff
 806764e:  add esp, 0x10
 8067651:  pop ebx
 8067652:  pop ebp
 8067653:  ret
 8067654:  lea esi, [esi]
 8067658:  mov eax, DWORD PTR [ebx+0x94]
 806765e:  mov ecx, edx
 8067660:  sar ecx, 0x1f
 8067663:  mov DWORD PTR [esp+0xc], 0x1
 806766b:  mov DWORD PTR [esp+0x4], edx
 806766f:  mov DWORD PTR [esp+0x8], ecx
 8067673:  mov DWORD PTR [esp], ebx
 8067676:  call DWORD PTR [eax+0x40]
 8067679:  and eax, edx
 806767b:  add eax, 0x1
 806767e:  je 8067688
 8067680:  mov eax, DWORD PTR [ebx+0x4]
 8067683:  mov DWORD PTR [ebx+0x8], eax
 8067686:  jmp 806763e
 8067688:  mov edx, 0xffffffe8
 806768e:  mov eax, gs:0x0
 8067694:  cmp DWORD PTR [eax+edx], 0x1d
 8067698:  je 806763e
 806769a:  add esp, 0x10
 806769d:  mov eax, 0xffffffff
 80676a2:  pop ebx
 80676a3:  pop ebp
 80676a4:  ret
 80676a5:  lea esi, [esi]
 80676a8:  mov ecx, DWORD PTR [ebx+0x68]
 80676ab:  test ecx, ecx
 80676ad:  jle 80676e0
 80676af:  mov eax, DWORD PTR [ebx+0x58]
 80676b2:  mov edx, DWORD PTR [eax+0xc]
 80676b5:  mov eax, DWORD PTR [eax+0x10]
 80676b8:  mov DWORD PTR [esp], ebx
 80676bb:  mov DWORD PTR [esp+0x4], edx
 80676bf:  sub eax, edx
 80676c1:  sar eax, 0x2
 80676c4:  mov DWORD PTR [esp+0x8], eax
 80676c8:  call 80649f0
 80676cd:  test eax, eax
 80676cf:  setne al
 80676d2:  test al, al
 80676d4:  je 8067634
 80676da:  jmp 806769a
 80676dc:  lea esi, [esi]
 80676e0:  sub edx, eax
 80676e2:  mov DWORD PTR [esp+0x8], edx
 80676e6:  mov DWORD PTR [esp+0x4], eax
 80676ea:  mov DWORD PTR [esp], ebx
 80676ed:  call 8067500
 80676f2:  test eax, eax
 80676f4:  setne al
 80676f7:  jmp 80676d2
 80676f9:  lea esi, [esi]

08067700 <_IO_new_file_close_it>:
 8067700:  push ebp
 8067701:  mov ebp, esp
 8067703:  sub esp, 0x1c
 8067706:  mov DWORD PTR [ebp-0xc], ebx
 8067709:  mov ebx, DWORD PTR [ebp+0x8]
 806770c:  mov DWORD PTR [ebp-0x8], esi
 806770f:  mov esi, 0xffffffff
 8067714:  mov DWORD PTR [ebp-0x4], edi
 8067717:  cmp DWORD PTR [ebx+0x38], 0xff
 806771b:  je 8067821
 8067721:  mov eax, DWORD PTR [ebx]
 8067723:  xor edi, edi
 8067725:  and eax, 0x808
 806772a:  cmp eax, 0x800
 806772f:  je 8067838
 8067735:  mov DWORD PTR [esp], ebx
 8067738:  call 8069d50
 806773d:  mov eax, DWORD PTR [ebx+0x94]
 8067743:  mov DWORD PTR [esp], ebx
 8067746:  call DWORD PTR [eax+0x44]
 8067749:  mov esi, eax
 806774b:  mov eax, DWORD PTR [ebx+0x68]
 806774e:  test eax, eax
 8067750:  jle 80677b0
 8067752:  mov eax, DWORD PTR [ebx+0x58]
 8067755:  mov eax, DWORD PTR [eax+0x20]
 8067758:  test eax, eax
 806775a:  je 8067764
 806775c:  mov DWORD PTR [esp], ebx
 806775f:  call 8063060
 8067764:  mov DWORD PTR [esp+0xc], 0x0
 806776c:  mov DWORD PTR [esp+0x8], 0x0
 8067774:  mov DWORD PTR [esp+0x4], 0x0
 806777c:  mov DWORD PTR [esp], ebx
 806777f:  call 8063120
 8067784:  mov eax, DWORD PTR [ebx+0x58]
 8067787:  mov DWORD PTR [eax+0x8], 0x0
 806778e:  mov DWORD PTR [eax], 0x0
 8067794:  mov DWORD PTR [eax+0x4], 0x0
 806779b:  mov DWORD PTR [eax+0x10], 0x0
 80677a2:  mov DWORD PTR [eax+0xc], 0x0
 80677a9:  mov DWORD PTR [eax+0x14], 0x0
 80677b0:  mov DWORD PTR [esp+0xc], 0x0
 80677b8:  mov DWORD PTR [esp+0x8], 0x0
 80677c0:  mov DWORD PTR [esp+0x4], 0x0
 80677c8:  mov DWORD PTR [esp], ebx
 80677cb:  call 8068980
 80677d0:  mov DWORD PTR [ebx+0xc], 0x0
 80677d7:  mov DWORD PTR [ebx+0x4], 0x0
 80677de:  mov DWORD PTR [ebx+0x8], 0x0
 80677e5:  mov DWORD PTR [ebx+0x14], 0x0
 80677ec:  mov DWORD PTR [ebx+0x10], 0x0
 80677f3:  mov DWORD PTR [ebx+0x18], 0x0
 80677fa:  mov DWORD PTR [esp], ebx
 80677fd:  call 8069980
 8067802:  test esi, esi
 8067804:  mov DWORD PTR [ebx], 0xfbad240c
 806780a:  mov DWORD PTR [ebx+0x38], 0xffffffff
 8067811:  mov DWORD PTR [ebx+0x4c], 0xffffffff
 8067818:  mov DWORD PTR [ebx+0x50], 0xffffffff
 806781f:  je 8067830
 8067821:  mov eax, esi
 8067823:  mov ebx, DWORD PTR [ebp-0xc]
 8067826:  mov esi, DWORD PTR [ebp-0x8]
 8067829:  mov edi, DWORD PTR [ebp-0x4]
 806782c:  mov esp, ebp
 806782e:  pop ebp
 806782f:  ret
 8067830:  mov esi, edi
 8067832:  jmp 8067821
 8067834:  lea esi, [esi]
 8067838:  mov eax, DWORD PTR [ebx+0x68]
 806783b:  test eax, eax
 806783d:  jle 8067868
 806783f:  mov eax, DWORD PTR [ebx+0x58]
 8067842:  mov edx, DWORD PTR [eax+0xc]
 8067845:  mov eax, DWORD PTR [eax+0x10]
 8067848:  mov DWORD PTR [esp], ebx
 806784b:  mov DWORD PTR [esp+0x4], edx
 806784f:  sub eax, edx
 8067851:  sar eax, 0x2
 8067854:  mov DWORD PTR [esp+0x8], eax
 8067858:  call 80649f0
 806785d:  mov edi, eax
 806785f:  jmp 8067735
 8067864:  lea esi, [esi]
 8067868:  mov edx, DWORD PTR [ebx+0x10]
 806786b:  mov eax, DWORD PTR [ebx+0x14]
 806786e:  mov DWORD PTR [esp], ebx
 8067871:  mov DWORD PTR [esp+0x4], edx
 8067875:  sub eax, edx
 8067877:  mov DWORD PTR [esp+0x8], eax
 806787b:  call 8067500
 8067880:  mov edi, eax
 8067882:  jmp 8067735
 8067887:  mov esi, esi
 8067889:  lea edi, [edi]

08067890 <_IO_new_file_fopen>:
 8067890:  push ebp
 8067891:  mov ebp, esp
 8067893:  push edi
 8067894:  push esi
 8067895:  push ebx
 8067896:  sub esp, 0x38
 8067899:  mov eax, DWORD PTR [ebp+0x8]
 806789c:  cmp DWORD PTR [eax+0x38], 0xff
 80678a0:  je 80678b0
 80678a2:  xor eax, eax
 80678a4:  lea esp, [ebp-0xc]
 80678a7:  pop ebx
 80678a8:  pop esi
 80678a9:  pop edi
 80678aa:  pop ebp
 80678ab:  ret
 80678ac:  lea esi, [esi]
 80678b0:  mov edx, DWORD PTR [ebp+0x10]
 80678b3:  movzx eax, BYTE PTR [edx]
 80678b6:  cmp al, 0x72
 80678b8:  je 8067998
 80678be:  cmp al, 0x77
 80678c0:  je 80678e8
 80678c2:  cmp al, 0x61
 80678c4:  je 80679b0
 80678ca:  mov eax, gs:0x0
 80678d0:  mov edx, 0xffffffe8
 80678d6:  mov DWORD PTR [eax+edx], 0x16
 80678dd:  xor eax, eax
 80678df:  jmp 80678a4
 80678e1:  lea esi, [esi]
 80678e8:  mov ebx, 0x240
 80678ed:  mov esi, 0x4
 80678f2:  mov DWORD PTR [ebp-0x24], 0x1
 80678f9:  mov ecx, DWORD PTR [ebp+0x10]
 80678fc:  mov edx, DWORD PTR [ebp+0x10]
 80678ff:  movzx eax, BYTE PTR [ecx+0x1]
 8067903:  add edx, 0x1
 8067906:  cmp al, 0x65
 8067908:  je 8067ab8
 806790e:  jg 8067940
 8067910:  cmp al, 0x62
 8067912:  je 80679c9
 8067918:  nop
 8067919:  lea esi, [esi]
 8067920:  jle 8067df0
 8067926:  cmp al, 0x63
 8067928:  jne 806794c
 806792a:  mov edi, DWORD PTR [ebp+0x10]
 806792d:  mov ecx, DWORD PTR [ebp+0x8]
 8067930:  or DWORD PTR [ecx+0x3c], 0x2
 8067934:  lea esi, [esi]
 8067938:  jmp 8067ac0
 806793d:  lea esi, [esi]
 8067940:  cmp al, 0x6d
 8067942:  je 8067e75
 8067948:  cmp al, 0x78
 806794a:  je 80679c6
 806794c:  mov edi, DWORD PTR [ebp+0x10]
 806794f:  movzx eax, BYTE PTR [edx+0x1]
 8067953:  lea ecx, [edx+0x1]
 8067956:  cmp al, 0x65
 8067958:  je 8067aba
 806795e:  jg 80679d0
 8067960:  cmp al, 0x62
 8067962:  je 8067e1d
 8067968:  nop
 8067969:  lea esi, [esi]
 8067970:  jg 8067e9d
 8067976:  test al, al
 8067978:  je 8067ac0
 806797e:  cmp al, 0x2b
 8067980:  jne 80679e6
 8067982:  and esi, 0x1000
 8067988:  mov edi, ecx
 806798a:  mov DWORD PTR [ebp-0x24], 0x2
 8067991:  jmp 80679e6
 8067993:  nop
 8067994:  lea esi, [esi]
 8067998:  xor ebx, ebx
 806799a:  mov esi, 0x8
 806799f:  mov DWORD PTR [ebp-0x24], 0x0
 80679a6:  jmp 80678f9
 80679ab:  nop
 80679ac:  lea esi, [esi]
 80679b0:  mov ebx, 0x440
 80679b5:  mov esi, 0x1004
 80679ba:  mov DWORD PTR [ebp-0x24], 0x1
 80679c1:  jmp 80678f9
 80679c6:  or bl, 0x80
 80679c9:  mov edi, edx
 80679cb:  jmp 806794f
 80679cd:  lea esi, [esi]
 80679d0:  cmp al, 0x6d
 80679d2:  je 8067e24
 80679d8:  cmp al, 0x78
 80679da:  lea esi, [esi]
 80679e0:  je 8067e1a
 80679e6:  movzx eax, BYTE PTR [ecx+0x1]
 80679ea:  lea edx, [ecx+0x1]
 80679ed:  cmp al, 0x65
 80679ef:  je 8067aba
 80679f5:  lea esi, [esi]
 80679f8:  jg 8067e58
 80679fe:  cmp al, 0x62
 8067a00:  je 8067e6b
 8067a06:  xchg ax, ax
 8067a08:  jg 8067ecd
 8067a0e:  test al, al
 8067a10:  je 8067ac0
 8067a16:  cmp al, 0x2b
 8067a18:  jne 8067a30
 8067a1a:  and esi, 0x1000
 8067a20:  mov edi, edx
 8067a22:  mov DWORD PTR [ebp-0x24], 0x2
 8067a29:  lea esi, [esi]
 8067a30:  movzx eax, BYTE PTR [edx+0x1]
 8067a34:  lea ecx, [edx+0x1]
 8067a37:  cmp al, 0x65
 8067a39:  je 8067aba
 8067a3b:  jg 8067e81
 8067a41:  cmp al, 0x62
 8067a43:  je 8067e91
 8067a49:  lea esi, [esi]
 8067a50:  jg 8067eed
 8067a56:  test al, al
 8067a58:  je 8067ac0
 8067a5a:  cmp al, 0x2b
 8067a5c:  lea esi, [esi]
 8067a60:  jne 8067a78
 8067a62:  and esi, 0x1000
 8067a68:  mov edi, ecx
 8067a6a:  mov DWORD PTR [ebp-0x24], 0x2
 8067a71:  lea esi, [esi]
 8067a78:  movzx eax, BYTE PTR [ecx+0x1]
 8067a7c:  lea edx, [ecx+0x1]
 8067a7f:  cmp al, 0x65
 8067a81:  je 8067aba
 8067a83:  jg 8067ead
 8067a89:  cmp al, 0x62
 8067a8b:  je 8067ec1
 8067a91:  cmp al, 0x63
 8067a93:  nop
 8067a94:  lea esi, [esi]
 8067a98:  je 806792d
 8067a9e:  cmp al, 0x2b
 8067aa0:  jne 8067ac0
 8067aa2:  and esi, 0x1000
 8067aa8:  mov edi, edx
 8067aaa:  mov DWORD PTR [ebp-0x24], 0x2
 8067ab1:  jmp 8067ac0
 8067ab3:  nop
 8067ab4:  lea esi, [esi]
 8067ab8:  mov edi, ecx
 8067aba:  or ebx, 0x80000
 8067ac0:  mov edx, DWORD PTR [ebp-0x24]
 8067ac3:  or edx, ebx
 8067ac5:  mov ebx, DWORD PTR [ebp+0x8]
 8067ac8:  test BYTE PTR [ebx+0x3c], 0x2
 8067acc:  jne 8067f29
 8067ad2:  cmp DWORD PTR [ebp+0x14], 0x1
 8067ad6:  mov DWORD PTR [esp+0x8], 0x1b6
 8067ade:  sbb eax, eax
 8067ae0:  and eax, 0x8000
 8067ae5:  or eax, edx
 8067ae7:  mov DWORD PTR [esp+0x4], eax
 8067aeb:  mov edx, DWORD PTR [ebp+0xc]
 8067aee:  mov DWORD PTR [esp], edx
 8067af1:  call 804f1f0
 8067af6:  mov ebx, eax
 8067af8:  test ebx, ebx
 8067afa:  js 80678a2
 8067b00:  mov ecx, DWORD PTR [ebp+0x8]
 8067b03:  mov eax, DWORD PTR [ecx]
 8067b05:  mov DWORD PTR [ecx+0x38], ebx
 8067b08:  and eax, 0xffffeff3
 8067b0d:  or eax, esi
 8067b0f:  and esi, 0x1004
 8067b15:  cmp esi, 0x1004
 8067b1b:  mov DWORD PTR [ecx], eax
 8067b1d:  je 8067d90
 8067b23:  mov ebx, DWORD PTR [ebp+0x8]
 8067b26:  mov DWORD PTR [esp], ebx
 8067b29:  call 80697d0
 8067b2e:  lea eax, [edi+0x1]
 8067b31:  mov DWORD PTR [esp+0x4], 0x80b1ad4
 8067b39:  mov DWORD PTR [esp], eax
 8067b3c:  call 806bbe0
 8067b41:  mov DWORD PTR [ebp-0x2c], eax
 8067b44:  mov edx, DWORD PTR [ebp-0x2c]
 8067b47:  mov eax, ebx
 8067b49:  test edx, edx
 8067b4b:  je 80678a4
 8067b51:  mov esi, DWORD PTR [ebp-0x2c]
 8067b54:  mov DWORD PTR [ebp-0x28], esp
 8067b57:  mov DWORD PTR [esp+0x4], 0x2c
 8067b5f:  add esi, 0x5
 8067b62:  mov DWORD PTR [esp], esi
 8067b65:  call 804f010
 8067b6a:  sub eax, esi
 8067b6c:  lea edx, [eax+0x15]
 8067b6f:  and edx, 0xfc
 8067b72:  sub esp, edx
 8067b74:  lea edx, [esp+0x23]
 8067b78:  and edx, 0xf0
 8067b7b:  mov DWORD PTR [ebp-0x30], edx
 8067b7e:  mov DWORD PTR [esp+0x8], eax
 8067b82:  mov DWORD PTR [esp+0x4], esi
 8067b86:  mov DWORD PTR [esp], edx
 8067b89:  call 806c310
 8067b8e:  mov BYTE PTR [eax], 0x0
 8067b91:  mov ecx, DWORD PTR [ebp-0x30]
 8067b94:  movzx eax, BYTE PTR [ecx]
 8067b97:  test al, al
 8067b99:  je 8067f0d
 8067b9f:  mov esi, DWORD PTR ds:0x80b0414
 8067ba5:  mov edi, ecx
 8067ba7:  mov DWORD PTR [ebp-0x20], 0x0
 8067bae:  jmp 8067be8
 8067bb0:  cmp al, 0x5f
 8067bb2:  je 8067bf1
 8067bb4:  cmp al, 0x2d
 8067bb6:  je 8067bf1
 8067bb8:  cmp al, 0x2e
 8067bba:  lea esi, [esi]
 8067bc0:  je 8067bf1
 8067bc2:  cmp al, 0x2c
 8067bc4:  lea esi, [esi]
 8067bc8:  je 8067bf1
 8067bca:  cmp al, 0x3a
 8067bcc:  lea esi, [esi]
 8067bd0:  je 8067bf1
 8067bd2:  cmp al, 0x2f
 8067bd4:  lea esi, [esi]
 8067bd8:  je 8067d70
 8067bde:  add edi, 0x1
 8067be1:  movzx eax, BYTE PTR [edi]
 8067be4:  test al, al
 8067be6:  je 8067c09
 8067be8:  movsx edx, al
 8067beb:  test BYTE PTR [esi+edx*2], 0x8
 8067bef:  je 8067bb0
 8067bf1:  mov ebx, DWORD PTR ds:0x80b041c
 8067bf7:  add edi, 0x1
 8067bfa:  mov eax, DWORD PTR [ebx+edx*4]
 8067bfd:  mov BYTE PTR [ecx], al
 8067bff:  movzx eax, BYTE PTR [edi]
 8067c02:  add ecx, 0x1
 8067c05:  test al, al
 8067c07:  jne 8067be8
 8067c09:  cmp DWORD PTR [ebp-0x20], 0x1
 8067c0d:  jg 8067c29
 8067c0f:  mov edx, DWORD PTR [ebp-0x20]
 8067c12:  add edx, 0x1
 8067c15:  lea esi, [esi]
 8067c18:  add edx, 0x1
 8067c1b:  lea eax, [edx-0x1]
 8067c1e:  mov BYTE PTR [ecx], 0x2f
 8067c21:  add ecx, 0x1
 8067c24:  sub eax, 0x1
 8067c27:  jle 8067c18
 8067c29:  mov BYTE PTR [ecx], 0x0
 8067c2c:  mov eax, DWORD PTR [ebp-0x30]
 8067c2f:  cmp BYTE PTR [eax+0x2], 0x0
 8067c33:  jne 8067c58
 8067c35:  mov ecx, DWORD PTR ds:0x80b041c
 8067c3b:  xor edx, edx
 8067c3d:  lea esi, [esi]
 8067c40:  mov ebx, DWORD PTR [ebp-0x2c]
 8067c43:  movsx eax, BYTE PTR [ebx+edx+0x5]
 8067c48:  mov ebx, DWORD PTR [ebp-0x30]
 8067c4b:  mov eax, DWORD PTR [ecx+eax*4]
 8067c4e:  mov BYTE PTR [ebx+edx], al
 8067c51:  add edx, 0x1
 8067c54:  test al, al
 8067c56:  jne 8067c40
 8067c58:  mov edx, DWORD PTR [ebp-0x30]
 8067c5b:  lea eax, [ebp-0x1c]
 8067c5e:  call 806cff0
 8067c63:  test eax, eax
 8067c65:  jne 8067e30
 8067c6b:  cmp DWORD PTR [ebp-0x18], 0x1
 8067c6f:  jne 8067f78
 8067c75:  cmp DWORD PTR [ebp-0x10], 0x1
 8067c79:  lea esi, [esi]
 8067c80:  jne 8067f54
 8067c86:  mov edx, DWORD PTR [ebp+0x8]
 8067c89:  mov esi, 0x80b19e0
 8067c8e:  mov eax, DWORD PTR [edx+0x58]
 8067c91:  mov edx, DWORD PTR [eax+0x4]
 8067c94:  mov DWORD PTR [eax+0x2c], 0x0
 8067c9b:  mov DWORD PTR [eax+0x30], 0x0
 8067ca2:  mov ecx, DWORD PTR [ebp+0x8]
 8067ca5:  mov DWORD PTR [eax], edx
 8067ca7:  mov edx, DWORD PTR [eax+0xc]
 8067caa:  mov DWORD PTR [eax+0x10], edx
 8067cad:  mov eax, DWORD PTR [ecx+0x58]
 8067cb0:  mov DWORD PTR [eax+0x34], 0x0
 8067cb7:  mov DWORD PTR [eax+0x38], 0x0
 8067cbe:  mov edx, DWORD PTR [ecx+0x58]
 8067cc1:  lea edi, [edx+0x3c]
 8067cc4:  mov DWORD PTR [ecx+0x54], edi
 8067cc7:  mov ecx, 0x1e
 8067ccc:  rep movsd
 8067cce:  mov eax, DWORD PTR [ebp-0x18]
 8067cd1:  mov DWORD PTR [edx+0x5c], eax
 8067cd4:  mov eax, DWORD PTR [ebp-0x1c]
 8067cd7:  mov DWORD PTR [edx+0x70], 0x0
 8067cde:  mov DWORD PTR [edx+0x74], 0x1
 8067ce5:  mov DWORD PTR [edx+0x6c], 0x1
 8067cec:  mov DWORD PTR [edx+0x60], eax
 8067cef:  mov ebx, DWORD PTR [ebp+0x8]
 8067cf2:  mov eax, DWORD PTR [ebx+0x58]
 8067cf5:  mov DWORD PTR [edx+0x84], 0x0
 8067cff:  add eax, 0x2c
 8067d02:  mov DWORD PTR [edx+0x78], eax
 8067d05:  mov eax, DWORD PTR [ebp-0x10]
 8067d08:  mov DWORD PTR [edx+0x88], eax
 8067d0e:  mov eax, DWORD PTR [ebp-0x14]
 8067d11:  mov DWORD PTR [edx+0x9c], 0x0
 8067d1b:  mov DWORD PTR [edx+0xa0], 0x1
 8067d25:  mov DWORD PTR [edx+0x8c], eax
 8067d2b:  mov DWORD PTR [edx+0x98], 0x1
 8067d35:  mov eax, DWORD PTR [ebx+0x58]
 8067d38:  mov DWORD PTR [edx+0xb0], 0x80b1a58
 8067d42:  add eax, 0x2c
 8067d45:  mov DWORD PTR [edx+0xa4], eax
 8067d4b:  mov eax, DWORD PTR [ebx+0x58]
 8067d4e:  mov DWORD PTR [ebx+0x68], 0x1
 8067d55:  mov eax, DWORD PTR [eax+0xb8]
 8067d5b:  mov DWORD PTR [ebx+0x94], eax
 8067d61:  mov eax, ebx
 8067d63:  mov esp, DWORD PTR [ebp-0x28]
 8067d66:  jmp 80678a4
 8067d6b:  nop
 8067d6c:  lea esi, [esi]
 8067d70:  add DWORD PTR [ebp-0x20], 0x1
 8067d74:  cmp DWORD PTR [ebp-0x20], 0x3
 8067d78:  je 8067c29
 8067d7e:  mov BYTE PTR [ecx], 0x2f
 8067d81:  add ecx, 0x1
 8067d84:  jmp 8067bde
 8067d89:  lea esi, [esi]
 8067d90:  mov eax, DWORD PTR [ecx+0x94]
 8067d96:  mov DWORD PTR [esp+0x10], 0x3
 8067d9e:  mov DWORD PTR [esp+0xc], 0x2
 8067da6:  mov DWORD PTR [esp+0x4], 0x0
 8067dae:  mov DWORD PTR [esp+0x8], 0x0
 8067db6:  mov DWORD PTR [esp], ecx
 8067db9:  call DWORD PTR [eax+0x24]
 8067dbc:  and eax, edx
 8067dbe:  add eax, 0x1
 8067dc1:  jne 8067b23
 8067dc7:  mov edx, 0xffffffe8
 8067dcd:  mov eax, gs:0x0
 8067dd3:  cmp DWORD PTR [eax+edx], 0x1d
 8067dd7:  je 8067b23
 8067ddd:  mov DWORD PTR [esp], ebx
 8067de0:  call 807314a
 8067de5:  xor eax, eax
 8067de7:  jmp 80678a4
 8067dec:  lea esi, [esi]
 8067df0:  test al, al
 8067df2:  mov edi, ecx
 8067df4:  je 8067ac0
 8067dfa:  cmp al, 0x2b
 8067dfc:  lea esi, [esi]
 8067e00:  jne 806794c
 8067e06:  and esi, 0x1000
 8067e0c:  mov edi, edx
 8067e0e:  mov DWORD PTR [ebp-0x24], 0x2
 8067e15:  jmp 806794f
 8067e1a:  or bl, 0x80
 8067e1d:  mov edi, ecx
 8067e1f:  jmp 80679e6
 8067e24:  mov edx, DWORD PTR [ebp+0x8]
 8067e27:  or DWORD PTR [edx+0x3c], 0x1
 8067e2b:  jmp 80679e6
 8067e30:  mov eax, DWORD PTR [ebp+0x8]
 8067e33:  mov DWORD PTR [esp], eax
 8067e36:  call 8067700
 8067e3b:  mov edx, 0xffffffe8
 8067e41:  mov eax, gs:0x0
 8067e47:  mov DWORD PTR [eax+edx], 0x16
 8067e4e:  xor eax, eax
 8067e50:  mov esp, DWORD PTR [ebp-0x28]
 8067e53:  jmp 80678a4
 8067e58:  cmp al, 0x6d
 8067e5a:  je 8067edd
 8067e60:  cmp al, 0x78
 8067e62:  jne 8067a30
 8067e68:  or bl, 0x80
 8067e6b:  mov edi, edx
 8067e6d:  lea esi, [esi]
 8067e70:  jmp 8067a30
 8067e75:  mov eax, DWORD PTR [ebp+0x8]
 8067e78:  or DWORD PTR [eax+0x3c], 0x1
 8067e7c:  jmp 806794c
 8067e81:  cmp al, 0x6d
 8067e83:  je 8067efd
 8067e85:  cmp al, 0x78
 8067e87:  nop
 8067e88:  jne 8067a78
 8067e8e:  or bl, 0x80
 8067e91:  mov edi, ecx
 8067e93:  nop
 8067e94:  lea esi, [esi]
 8067e98:  jmp 8067a78
 8067e9d:  cmp al, 0x63
 8067e9f:  nop
 8067ea0:  jne 80679e6
 8067ea6:  xchg ax, ax
 8067ea8:  jmp 806792d
 8067ead:  cmp al, 0x6d
 8067eaf:  nop
 8067eb0:  je 8067f1d
 8067eb2:  cmp al, 0x78
 8067eb4:  lea esi, [esi]
 8067eb8:  jne 8067ac0
 8067ebe:  or bl, 0x80
 8067ec1:  mov edi, edx
 8067ec3:  nop
 8067ec4:  lea esi, [esi]
 8067ec8:  jmp 8067ac0
 8067ecd:  cmp al, 0x63
 8067ecf:  nop
 8067ed0:  jne 8067a30
 8067ed6:  xchg ax, ax
 8067ed8:  jmp 806792d
 8067edd:  mov ecx, DWORD PTR [ebp+0x8]
 8067ee0:  or DWORD PTR [ecx+0x3c], 0x1
 8067ee4:  lea esi, [esi]
 8067ee8:  jmp 8067a30
 8067eed:  cmp al, 0x63
 8067eef:  nop
 8067ef0:  jne 8067a78
 8067ef6:  xchg ax, ax
 8067ef8:  jmp 806792d
 8067efd:  mov eax, DWORD PTR [ebp+0x8]
 8067f00:  or DWORD PTR [eax+0x3c], 0x1
 8067f04:  lea esi, [esi]
 8067f08:  jmp 8067a78
 8067f0d:  mov edx, 0x1
 8067f12:  lea esi, [esi]
 8067f18:  jmp 8067c18
 8067f1d:  mov edx, DWORD PTR [ebp+0x8]
 8067f20:  or DWORD PTR [edx+0x3c], 0x1
 8067f24:  jmp 8067ac0
 8067f29:  cmp DWORD PTR [ebp+0x14], 0x1
 8067f2d:  mov DWORD PTR [esp+0x8], 0x1b6
 8067f35:  sbb eax, eax
 8067f37:  and eax, 0x8000
 8067f3c:  or eax, edx
 8067f3e:  mov DWORD PTR [esp+0x4], eax
 8067f42:  mov eax, DWORD PTR [ebp+0xc]
 8067f45:  mov DWORD PTR [esp], eax
 8067f48:  call 804f1fa
 8067f4d:  mov ebx, eax
 8067f4f:  jmp 8067af8
 8067f54:  mov DWORD PTR [esp+0xc], 0x80b1ada
 8067f5c:  mov DWORD PTR [esp+0x8], 0x170
 8067f64:  mov DWORD PTR [esp+0x4], 0x80b1841
 8067f6c:  mov DWORD PTR [esp], 0x80b19b4
 8067f73:  call 8051490
 8067f78:  mov DWORD PTR [esp+0xc], 0x80b1ada
 8067f80:  mov DWORD PTR [esp+0x8], 0x16f
 8067f88:  mov DWORD PTR [esp+0x4], 0x80b1841
 8067f90:  mov DWORD PTR [esp], 0x80b199e
 8067f97:  call 8051490
 8067f9c:  mov esp, DWORD PTR [ebp-0x28]
 8067f9f:  mov DWORD PTR [esp], eax
 8067fa2:  call 80abe50
 8067fa7:  mov esi, esi
 8067fa9:  lea edi, [edi]

08067fb0 <_IO_new_file_overflow>:
 8067fb0:  push ebp
 8067fb1:  mov ebp, esp
 8067fb3:  push edi
 8067fb4:  push esi
 8067fb5:  push ebx
 8067fb6:  sub esp, 0x18
 8067fb9:  mov ebx, DWORD PTR [ebp+0x8]
 8067fbc:  mov edi, DWORD PTR [ebp+0xc]
 8067fbf:  mov edx, DWORD PTR [ebx]
 8067fc1:  test dl, 0x8
 8067fc4:  jne 80681e8
 8067fca:  test dh, 0x8
 8067fcd:  je 8068020
 8067fcf:  mov eax, DWORD PTR [ebx+0x10]
 8067fd2:  test eax, eax
 8067fd4:  je 80681c8
 8067fda:  cmp edi, 0xff
 8067fdd:  lea esi, [esi]
 8067fe0:  je 8068110
 8067fe6:  mov edx, DWORD PTR [ebx+0x14]
 8067fe9:  cmp edx, DWORD PTR [ebx+0x20]
 8067fec:  je 8068221
 8067ff2:  mov eax, edi
 8067ff4:  mov BYTE PTR [edx], al
 8067ff6:  mov eax, DWORD PTR [ebx]
 8067ff8:  add edx, 0x1
 8067ffb:  mov DWORD PTR [ebx+0x14], edx
 8067ffe:  test al, 0x2
 8068000:  jne 8068080
 8068002:  test ah, 0x2
 8068005:  je 806800c
 8068007:  cmp edi, 0xa
 806800a:  je 8068080
 806800c:  mov ecx, edi
 806800e:  movzx edx, cl
 8068011:  add esp, 0x18
 8068014:  mov eax, edx
 8068016:  pop ebx
 8068017:  pop esi
 8068018:  pop edi
 8068019:  pop ebp
 806801a:  ret
 806801b:  nop
 806801c:  lea esi, [esi]
 8068020:  mov eax, DWORD PTR [ebx+0x10]
 8068023:  test eax, eax
 8068025:  je 80681c8
 806802b:  test dh, 0x1
 806802e:  jne 806825e
 8068034:  mov ecx, DWORD PTR [ebx+0x4]
 8068037:  cmp ecx, DWORD PTR [ebx+0x20]
 806803a:  je 8068128
 8068040:  mov eax, DWORD PTR [ebx+0x20]
 8068043:  mov esi, DWORD PTR [ebx+0x68]
 8068046:  mov DWORD PTR [ebx+0x14], ecx
 8068049:  mov DWORD PTR [ebx+0x10], ecx
 806804c:  mov DWORD PTR [ebx+0x18], eax
 806804f:  mov eax, DWORD PTR [ebx+0x8]
 8068052:  mov DWORD PTR [ebx+0x4], eax
 8068055:  mov DWORD PTR [ebx+0xc], eax
 8068058:  mov eax, edx
 806805a:  or ah, 0x8
 806805d:  test esi, esi
 806805f:  mov DWORD PTR [ebx], eax
 8068061:  jg 8067fda
 8068067:  test eax, 0x202
 806806c:  je 8067fda
 8068072:  mov DWORD PTR [ebx+0x18], ecx
 8068075:  jmp 8067fda
 806807a:  lea esi, [esi]
 8068080:  mov esi, DWORD PTR [ebx+0x10]
 8068083:  sub edx, esi
 8068085:  mov DWORD PTR [ebp-0x10], edx
 8068088:  je 806800c
 806808a:  test ah, 0x10
 806808d:  je 8068138
 8068093:  mov DWORD PTR [ebx+0x4c], 0xffffffff
 806809a:  mov DWORD PTR [ebx+0x50], 0xffffffff
 80680a1:  mov eax, DWORD PTR [ebx+0x94]
 80680a7:  mov edx, DWORD PTR [ebp-0x10]
 80680aa:  mov DWORD PTR [esp+0x4], esi
 80680ae:  mov DWORD PTR [esp], ebx
 80680b1:  mov DWORD PTR [esp+0x8], edx
 80680b5:  call DWORD PTR [eax+0x3c]
 80680b8:  mov DWORD PTR [ebp-0x14], eax
 80680bb:  movzx eax, WORD PTR [ebx+0x44]
 80680bf:  test ax, ax
 80680c2:  je 80680cf
 80680c4:  mov edx, DWORD PTR [ebp-0x14]
 80680c7:  test edx, edx
 80680c9:  jne 80681a0
 80680cf:  mov ecx, DWORD PTR [ebx+0x68]
 80680d2:  mov eax, DWORD PTR [ebx+0x1c]
 80680d5:  test ecx, ecx
 80680d7:  mov DWORD PTR [ebx+0xc], eax
 80680da:  mov DWORD PTR [ebx+0x4], eax
 80680dd:  mov DWORD PTR [ebx+0x8], eax
 80680e0:  mov DWORD PTR [ebx+0x14], eax
 80680e3:  mov DWORD PTR [ebx+0x10], eax
 80680e6:  jle 8068210
 80680ec:  mov eax, DWORD PTR [ebx+0x20]
 80680ef:  mov DWORD PTR [ebx+0x18], eax
 80680f2:  mov eax, DWORD PTR [ebp-0x14]
 80680f5:  cmp DWORD PTR [ebp-0x10], eax
 80680f8:  je 806800c
 80680fe:  xchg ax, ax
 8068100:  mov edx, 0xffffffff
 8068105:  add esp, 0x18
 8068108:  mov eax, edx
 806810a:  pop ebx
 806810b:  pop esi
 806810c:  pop edi
 806810d:  pop ebp
 806810e:  ret
 806810f:  nop
 8068110:  mov eax, DWORD PTR [ebx+0x14]
 8068113:  mov edx, DWORD PTR [ebx+0x10]
 8068116:  mov esi, eax
 8068118:  sub esi, edx
 806811a:  jne 8068180
 806811c:  xor edx, edx
 806811e:  add esp, 0x18
 8068121:  mov eax, edx
 8068123:  pop ebx
 8068124:  pop esi
 8068125:  pop edi
 8068126:  pop ebp
 8068127:  ret
 8068128:  mov eax, DWORD PTR [ebx+0x1c]
 806812b:  mov DWORD PTR [ebx+0x4], eax
 806812e:  mov ecx, eax
 8068130:  mov DWORD PTR [ebx+0x8], eax
 8068133:  jmp 8068040
 8068138:  mov edx, DWORD PTR [ebx+0x8]
 806813b:  cmp esi, edx
 806813d:  je 80680a1
 8068143:  mov eax, DWORD PTR [ebx+0x94]
 8068149:  mov ecx, esi
 806814b:  sub ecx, edx
 806814d:  mov DWORD PTR [esp+0x4], ecx
 8068151:  sar ecx, 0x1f
 8068154:  mov DWORD PTR [esp+0x8], ecx
 8068158:  mov DWORD PTR [esp+0xc], 0x1
 8068160:  mov DWORD PTR [esp], ebx
 8068163:  call DWORD PTR [eax+0x40]
 8068166:  mov ecx, eax
 8068168:  and eax, edx
 806816a:  add eax, 0x1
 806816d:  je 8068100
 806816f:  mov DWORD PTR [ebx+0x4c], ecx
 8068172:  mov DWORD PTR [ebx+0x50], edx
 8068175:  jmp 80680a1
 806817a:  lea esi, [esi]
 8068180:  mov ecx, esi
 8068182:  mov eax, ebx
 8068184:  call 80665d0
 8068189:  mov edx, 0xffffffff
 806818e:  cmp esi, eax
 8068190:  jne 8068011
 8068196:  xor edx, edx
 8068198:  jmp 806811e
 806819a:  lea esi, [esi]
 80681a0:  mov ecx, DWORD PTR [ebp-0x14]
 80681a3:  movzx eax, ax
 80681a6:  sub eax, 0x1
 80681a9:  mov DWORD PTR [esp+0x4], esi
 80681ad:  mov DWORD PTR [esp], eax
 80681b0:  mov DWORD PTR [esp+0x8], ecx
 80681b4:  call 80686a0
 80681b9:  add eax, 0x1
 80681bc:  mov WORD PTR [ebx+0x44], ax
 80681c0:  jmp 80680cf
 80681c5:  lea esi, [esi]
 80681c8:  mov DWORD PTR [esp], ebx
 80681cb:  call 80689f0
 80681d0:  mov eax, DWORD PTR [ebx+0x1c]
 80681d3:  mov edx, DWORD PTR [ebx]
 80681d5:  mov DWORD PTR [ebx+0xc], eax
 80681d8:  mov DWORD PTR [ebx+0x4], eax
 80681db:  mov DWORD PTR [ebx+0x8], eax
 80681de:  jmp 806802b
 80681e3:  nop
 80681e4:  lea esi, [esi]
 80681e8:  or edx, 0x20
 80681eb:  mov eax, gs:0x0
 80681f1:  mov DWORD PTR [ebx], edx
 80681f3:  mov edx, 0xffffffe8
 80681f9:  mov DWORD PTR [eax+edx], 0x9
 8068200:  mov edx, 0xffffffff
 8068205:  jmp 8068011
 806820a:  lea esi, [esi]
 8068210:  test DWORD PTR [ebx], 0x202
 8068216:  jne 80680ef
 806821c:  jmp 80680ec
 8068221:  mov ecx, DWORD PTR [ebx+0x68]
 8068224:  test ecx, ecx
 8068226:  xchg ax, ax
 8068228:  jle 8068289
 806822a:  mov eax, DWORD PTR [ebx+0x58]
 806822d:  mov edx, DWORD PTR [eax+0xc]
 8068230:  mov eax, DWORD PTR [eax+0x10]
 8068233:  mov DWORD PTR [esp], ebx
 8068236:  mov DWORD PTR [esp+0x4], edx
 806823a:  sub eax, edx
 806823c:  sar eax, 0x2
 806823f:  mov DWORD PTR [esp+0x8], eax
 8068243:  call 80649f0
 8068248:  add eax, 0x1
 806824b:  sete al
 806824e:  test al, al
 8068250:  jne 8068100
 8068256:  mov edx, DWORD PTR [ebx+0x14]
 8068259:  jmp 8067ff2
 806825e:  mov esi, DWORD PTR [ebx+0x8]
 8068261:  sub esi, DWORD PTR [ebx+0x4]
 8068264:  mov DWORD PTR [esp], ebx
 8068267:  call 8068a50
 806826c:  mov eax, DWORD PTR [ebx+0xc]
 806826f:  mov edx, eax
 8068271:  sub edx, DWORD PTR [ebx+0x1c]
 8068274:  cmp edx, esi
 8068276:  jbe 806827a
 8068278:  mov edx, esi
 806827a:  sub eax, edx
 806827c:  mov edx, DWORD PTR [ebx]
 806827e:  mov DWORD PTR [ebx+0xc], eax
 8068281:  mov DWORD PTR [ebx+0x4], eax
 8068284:  jmp 8068034
 8068289:  mov eax, DWORD PTR [ebx+0x10]
 806828c:  mov DWORD PTR [esp], ebx
 806828f:  sub edx, eax
 8068291:  mov DWORD PTR [esp+0x8], edx
 8068295:  mov DWORD PTR [esp+0x4], eax
 8068299:  call 8067500
 806829e:  add eax, 0x1
 80682a1:  sete al
 80682a4:  jmp 806824e

080682a6 <_L_lock_2210>:
 80682a6:  lea ecx, [ebx]
 80682a8:  call 8050230
 80682ad:  jmp 8066b7a

080682b2 <_L_unlock_2250>:
 80682b2:  lea eax, [edx]
 80682b4:  call 8050260
 80682b9:  jmp 8066bd6

080682be <_L_unlock_2427>:
 80682be:  lea eax, [edx]
 80682c0:  call 8050260
 80682c5:  jmp 8066d15
 80682ca:  nop
 80682cb:  nop
 80682cc:  nop
 80682cd:  nop
 80682ce:  nop
 80682cf:  nop

080682d0 <flush_cleanup>:
 80682d0:  mov eax, ds:0x80d2938
 80682d5:  push ebp
 80682d6:  mov ebp, esp
 80682d8:  test eax, eax
 80682da:  je 806830d
 80682dc:  cmp WORD PTR [eax], 0x0
 80682e0:  js 806830d
 80682e2:  mov edx, DWORD PTR [eax+0x48]
 80682e5:  mov eax, DWORD PTR [edx+0x4]
 80682e8:  sub eax, 0x1
 80682eb:  test eax, eax
 80682ed:  mov DWORD PTR [edx+0x4], eax
 80682f0:  jne 806830d
 80682f2:  mov DWORD PTR [edx+0x8], 0x0
 80682f9:  cmp DWORD PTR gs:0xc, 0x0
 8068301:  je 8068304
 8068303:  sub DWORD PTR [edx], 0x1
 8068307:  jne 806a525
 806830d:  mov eax, ds:0x80d292c
 8068312:  sub eax, 0x1
 8068315:  test eax, eax
 8068317:  mov ds:0x80d292c, eax
 806831c:  jne 8068340
 806831e:  mov DWORD PTR ds:0x80d2930, 0x0
 8068328:  cmp DWORD PTR gs:0xc, 0x0
 8068330:  je 8068333
 8068332:  sub DWORD PTR ds:0x80d2928, 0x1
 806833a:  jne 806a531
 8068340:  pop ebp
 8068341:  ret
 8068342:  lea esi, [esi]
 8068349:  lea edi, [edi]

08068350 <_IO_least_marker>:
 8068350:  push ebp
 8068351:  mov ebp, esp
 8068353:  mov eax, DWORD PTR [ebp+0x8]
 8068356:  mov ecx, DWORD PTR [ebp+0xc]
 8068359:  sub ecx, DWORD PTR [eax+0xc]
 806835c:  mov eax, DWORD PTR [eax+0x30]
 806835f:  test eax, eax
 8068361:  je 8068377
 8068363:  nop
 8068364:  lea esi, [esi]
 8068368:  mov edx, DWORD PTR [eax+0x8]
 806836b:  cmp ecx, edx
 806836d:  jle 8068371
 806836f:  mov ecx, edx
 8068371:  mov eax, DWORD PTR [eax]
 8068373:  test eax, eax
 8068375:  jne 8068368
 8068377:  mov eax, ecx
 8068379:  pop ebp
 806837a:  ret
 806837b:  nop
 806837c:  lea esi, [esi]

08068380 <_IO_switch_to_main_get_area>:
 8068380:  push ebp
 8068381:  mov ebp, esp
 8068383:  mov eax, DWORD PTR [ebp+0x8]
 8068386:  mov ecx, DWORD PTR [eax+0x8]
 8068389:  mov edx, DWORD PTR [eax+0x2c]
 806838c:  and DWORD PTR [eax], 0xfffffeff
 8068392:  mov DWORD PTR [eax+0x2c], ecx
 8068395:  mov ecx, DWORD PTR [eax+0xc]
 8068398:  mov DWORD PTR [eax+0x8], edx
 806839b:  mov edx, DWORD PTR [eax+0x24]
 806839e:  mov DWORD PTR [eax+0x24], ecx
 80683a1:  mov DWORD PTR [eax+0xc], edx
 80683a4:  mov DWORD PTR [eax+0x4], edx
 80683a7:  pop ebp
 80683a8:  ret
 80683a9:  lea esi, [esi]

080683b0 <_IO_switch_to_backup_area>:
 80683b0:  push ebp
 80683b1:  mov ebp, esp
 80683b3:  mov eax, DWORD PTR [ebp+0x8]
 80683b6:  push ebx
 80683b7:  mov edx, DWORD PTR [eax+0x8]
 80683ba:  mov ebx, DWORD PTR [eax+0x2c]
 80683bd:  mov ecx, DWORD PTR [eax+0xc]
 80683c0:  or DWORD PTR [eax], 0x100
 80683c6:  mov DWORD PTR [eax+0x2c], edx
 80683c9:  mov edx, DWORD PTR [eax+0x24]
 80683cc:  mov DWORD PTR [eax+0x8], ebx
 80683cf:  mov DWORD PTR [eax+0x24], ecx
 80683d2:  mov DWORD PTR [eax+0x4], ebx
 80683d5:  mov DWORD PTR [eax+0xc], edx
 80683d8:  pop ebx
 80683d9:  pop ebp
 80683da:  ret
 80683db:  nop
 80683dc:  lea esi, [esi]

080683e0 <_IO_switch_to_get_mode>:
 80683e0:  push ebp
 80683e1:  mov ebp, esp
 80683e3:  push ebx
 80683e4:  sub esp, 0x8
 80683e7:  mov ebx, DWORD PTR [ebp+0x8]
 80683ea:  mov edx, DWORD PTR [ebx+0x14]
 80683ed:  cmp edx, DWORD PTR [ebx+0x10]
 80683f0:  ja 8068430
 80683f2:  mov eax, DWORD PTR [ebx]
 80683f4:  test ah, 0x1
 80683f7:  jne 8068428
 80683f9:  mov eax, DWORD PTR [ebx+0x1c]
 80683fc:  cmp edx, DWORD PTR [ebx+0x8]
 80683ff:  mov DWORD PTR [ebx+0xc], eax
 8068402:  jbe 8068407
 8068404:  mov DWORD PTR [ebx+0x8], edx
 8068407:  and DWORD PTR [ebx], 0xfffff7ff
 806840d:  mov DWORD PTR [ebx+0x4], edx
 8068410:  mov DWORD PTR [ebx+0x18], edx
 8068413:  mov DWORD PTR [ebx+0x14], edx
 8068416:  mov DWORD PTR [ebx+0x10], edx
 8068419:  xor edx, edx
 806841b:  add esp, 0x8
 806841e:  mov eax, edx
 8068420:  pop ebx
 8068421:  pop ebp
 8068422:  ret
 8068423:  nop
 8068424:  lea esi, [esi]
 8068428:  mov eax, DWORD PTR [ebx+0x28]
 806842b:  mov DWORD PTR [ebx+0xc], eax
 806842e:  jmp 8068407
 8068430:  mov eax, DWORD PTR [ebx+0x94]
 8068436:  mov DWORD PTR [esp+0x4], 0xffffffff
 806843e:  mov DWORD PTR [esp], ebx
 8068441:  call DWORD PTR [eax+0xc]
 8068444:  mov edx, 0xffffffff
 8068449:  add eax, 0x1
 806844c:  je 806841b
 806844e:  mov edx, DWORD PTR [ebx+0x14]
 8068451:  jmp 80683f2
 8068453:  lea esi, [esi]
 8068459:  lea edi, [edi]

08068460 <__overflow>:
 8068460:  push ebp
 8068461:  mov ebp, esp
 8068463:  mov edx, DWORD PTR [ebp+0x8]
 8068466:  mov ecx, DWORD PTR [ebp+0xc]
 8068469:  mov eax, DWORD PTR [edx+0x68]
 806846c:  test eax, eax
 806846e:  jne 8068477
 8068470:  mov DWORD PTR [edx+0x68], 0xffffffff
 8068477:  mov eax, DWORD PTR [edx+0x94]
 806847d:  mov DWORD PTR [ebp+0xc], ecx
 8068480:  mov DWORD PTR [ebp+0x8], edx
 8068483:  pop ebp
 8068484:  mov ecx, DWORD PTR [eax+0xc]
 8068487:  jmp ecx
 8068489:  lea esi, [esi]

08068490 <_IO_default_underflow>:
 8068490:  push ebp
 8068491:  mov eax, 0xffffffff
 8068496:  mov ebp, esp
 8068498:  pop ebp
 8068499:  ret
 806849a:  lea esi, [esi]

080684a0 <_IO_default_uflow>:
 80684a0:  push ebp
 80684a1:  mov ebp, esp
 80684a3:  push ebx
 80684a4:  sub esp, 0x4
 80684a7:  mov ebx, DWORD PTR [ebp+0x8]
 80684aa:  mov eax, DWORD PTR [ebx+0x94]
 80684b0:  mov DWORD PTR [esp], ebx
 80684b3:  call DWORD PTR [eax+0x10]
 80684b6:  mov edx, 0xffffffff
 80684bb:  add eax, 0x1
 80684be:  je 80684cc
 80684c0:  mov eax, DWORD PTR [ebx+0x4]
 80684c3:  movzx edx, BYTE PTR [eax]
 80684c6:  add eax, 0x1
 80684c9:  mov DWORD PTR [ebx+0x4], eax
 80684cc:  add esp, 0x4
 80684cf:  mov eax, edx
 80684d1:  pop ebx
 80684d2:  pop ebp
 80684d3:  ret
 80684d4:  lea esi, [esi]
 80684da:  lea edi, [edi]

080684e0 <_IO_sgetn>:
 80684e0:  push ebp
 80684e1:  mov ebp, esp
 80684e3:  mov edx, DWORD PTR [ebp+0x8]
 80684e6:  pop ebp
 80684e7:  mov ecx, DWORD PTR [edx+0x94]
 80684ed:  mov ecx, DWORD PTR [ecx+0x20]
 80684f0:  jmp ecx
 80684f2:  lea esi, [esi]
 80684f9:  lea edi, [edi]

08068500 <_IO_default_seekpos>:
 8068500:  push ebp
 8068501:  mov ebp, esp
 8068503:  push ebx
 8068504:  sub esp, 0x14
 8068507:  mov ecx, DWORD PTR [ebp+0x8]
 806850a:  mov eax, DWORD PTR [ebp+0x14]
 806850d:  mov edx, DWORD PTR [ebp+0x10]
 8068510:  mov ebx, DWORD PTR [ecx+0x94]
 8068516:  mov DWORD PTR [esp+0x10], eax
 806851a:  mov eax, DWORD PTR [ebp+0xc]
 806851d:  mov DWORD PTR [esp+0xc], 0x0
 8068525:  mov DWORD PTR [esp+0x8], edx
 8068529:  mov DWORD PTR [esp], ecx
 806852c:  mov DWORD PTR [esp+0x4], eax
 8068530:  call DWORD PTR [ebx+0x24]
 8068533:  add esp, 0x14
 8068536:  pop ebx
 8068537:  pop ebp
 8068538:  ret
 8068539:  lea esi, [esi]

08068540 <_IO_old_init>:
 8068540:  push ebp
 8068541:  mov ebp, esp
 8068543:  mov eax, DWORD PTR [ebp+0xc]
 8068546:  mov edx, DWORD PTR [ebp+0x8]
 8068549:  or eax, 0xfbad0000
 806854e:  mov DWORD PTR [edx], eax
 8068550:  mov eax, DWORD PTR [edx+0x48]
 8068553:  mov DWORD PTR [edx+0x3c], 0x0
 806855a:  mov DWORD PTR [edx+0x1c], 0x0
 8068561:  mov DWORD PTR [edx+0x20], 0x0
 8068568:  test eax, eax
 806856a:  mov DWORD PTR [edx+0xc], 0x0
 8068571:  mov DWORD PTR [edx+0x4], 0x0
 8068578:  mov DWORD PTR [edx+0x8], 0x0
 806857f:  mov DWORD PTR [edx+0x10], 0x0
 8068586:  mov DWORD PTR [edx+0x14], 0x0
 806858d:  mov DWORD PTR [edx+0x18], 0x0
 8068594:  mov DWORD PTR [edx+0x34], 0x0
 806859b:  mov DWORD PTR [edx+0x24], 0x0
 80685a2:  mov DWORD PTR [edx+0x28], 0x0
 80685a9:  mov DWORD PTR [edx+0x2c], 0x0
 80685b0:  mov DWORD PTR [edx+0x30], 0x0
 80685b7:  mov WORD PTR [edx+0x44], 0x0
 80685bd:  je 80685d3
 80685bf:  mov DWORD PTR [eax], 0x0
 80685c5:  mov DWORD PTR [eax+0x4], 0x0
 80685cc:  mov DWORD PTR [eax+0x8], 0x0
 80685d3:  pop ebp
 80685d4:  ret
 80685d5:  lea esi, [esi]
 80685d9:  lea edi, [edi]

080685e0 <_IO_default_sync>:
 80685e0:  push ebp
 80685e1:  xor eax, eax
 80685e3:  mov ebp, esp
 80685e5:  pop ebp
 80685e6:  ret
 80685e7:  mov esi, esi
 80685e9:  lea edi, [edi]

080685f0 <_IO_default_seekoff>:
 80685f0:  push ebp
 80685f1:  mov eax, 0xffffffff
 80685f6:  mov ebp, esp
 80685f8:  mov edx, 0xffffffff
 80685fd:  pop ebp
 80685fe:  ret
 80685ff:  nop

08068600 <_IO_sputbackc>:
 8068600:  push ebp
 8068601:  mov ebp, esp
 8068603:  push ebx
 8068604:  sub esp, 0x8
 8068607:  mov ebx, DWORD PTR [ebp+0x8]
 806860a:  mov ecx, DWORD PTR [ebp+0xc]
 806860d:  mov eax, DWORD PTR [ebx+0x4]
 8068610:  cmp eax, DWORD PTR [ebx+0xc]
 8068613:  jbe 8068620
 8068615:  lea edx, [eax-0x1]
 8068618:  movzx eax, BYTE PTR [eax-0x1]
 806861c:  cmp al, cl
 806861e:  je 8068640
 8068620:  mov eax, DWORD PTR [ebx+0x94]
 8068626:  mov DWORD PTR [esp+0x4], ecx
 806862a:  mov DWORD PTR [esp], ebx
 806862d:  call DWORD PTR [eax+0x18]
 8068630:  cmp eax, 0xff
 8068633:  je 8068638
 8068635:  and DWORD PTR [ebx], 0xef
 8068638:  add esp, 0x8
 806863b:  pop ebx
 806863c:  pop ebp
 806863d:  ret
 806863e:  xchg ax, ax
 8068640:  mov DWORD PTR [ebx+0x4], edx
 8068643:  movzx eax, al
 8068646:  jmp 8068635
 8068648:  nop
 8068649:  lea esi, [esi]

08068650 <_IO_sungetc>:
 8068650:  push ebp
 8068651:  mov ebp, esp
 8068653:  push ebx
 8068654:  sub esp, 0x8
 8068657:  mov ebx, DWORD PTR [ebp+0x8]
 806865a:  mov edx, DWORD PTR [ebx+0x4]
 806865d:  cmp edx, DWORD PTR [ebx+0xc]
 8068660:  jbe 8068678
 8068662:  lea eax, [edx-0x1]
 8068665:  mov DWORD PTR [ebx+0x4], eax
 8068668:  movzx eax, BYTE PTR [edx-0x1]
 806866c:  and DWORD PTR [ebx], 0xef
 806866f:  add esp, 0x8
 8068672:  pop ebx
 8068673:  pop ebp
 8068674:  ret
 8068675:  lea esi, [esi]
 8068678:  mov eax, DWORD PTR [ebx+0x94]
 806867e:  mov DWORD PTR [esp+0x4], 0xffffffff
 8068686:  mov DWORD PTR [esp], ebx
 8068689:  call DWORD PTR [eax+0x18]
 806868c:  cmp eax, 0xff
 806868f:  jne 806866c
 8068691:  add esp, 0x8
 8068694:  pop ebx
 8068695:  pop ebp
 8068696:  ret
 8068697:  mov esi, esi
 8068699:  lea edi, [edi]

080686a0 <_IO_adjust_column>:
 80686a0:  push ebp
 80686a1:  mov ebp, esp
 80686a3:  push ebx
 80686a4:  mov ecx, DWORD PTR [ebp+0xc]
 80686a7:  mov eax, DWORD PTR [ebp+0x10]
 80686aa:  lea edx, [ecx+eax]
 80686ad:  cmp ecx, edx
 80686af:  jae 80686d8
 80686b1:  cmp BYTE PTR [edx-0x1], 0xa
 80686b5:  lea ebx, [edx-0x1]
 80686b8:  mov eax, ebx
 80686ba:  je 80686cc
 80686bc:  lea esi, [esi]
 80686c0:  cmp ecx, eax
 80686c2:  jae 80686d8
 80686c4:  sub eax, 0x1
 80686c7:  cmp BYTE PTR [eax], 0xa
 80686ca:  jne 80686c0
 80686cc:  sub ebx, eax
 80686ce:  mov eax, ebx
 80686d0:  pop ebx
 80686d1:  pop ebp
 80686d2:  ret
 80686d3:  nop
 80686d4:  lea esi, [esi]
 80686d8:  mov eax, DWORD PTR [ebp+0x10]
 80686db:  add eax, DWORD PTR [ebp+0x8]
 80686de:  pop ebx
 80686df:  pop ebp
 80686e0:  ret
 80686e1:  jmp 80686f0
 80686e3:  nop
 80686e4:  nop
 80686e5:  nop
 80686e6:  nop
 80686e7:  nop
 80686e8:  nop
 80686e9:  nop
 80686ea:  nop
 80686eb:  nop
 80686ec:  nop
 80686ed:  nop
 80686ee:  nop
 80686ef:  nop

080686f0 <_IO_remove_marker>:
 80686f0:  push ebp
 80686f1:  mov ebp, esp
 80686f3:  mov eax, DWORD PTR [ebp+0x8]
 80686f6:  mov ecx, DWORD PTR [eax+0x4]
 80686f9:  mov edx, DWORD PTR [ecx+0x30]
 80686fc:  test edx, edx
 80686fe:  je 806871a
 8068700:  cmp eax, edx
 8068702:  jne 8068712
 8068704:  jmp 8068721
 8068706:  xchg ax, ax
 8068708:  cmp eax, edx
 806870a:  lea esi, [esi]
 8068710:  je 8068728
 8068712:  mov ecx, edx
 8068714:  mov edx, DWORD PTR [edx]
 8068716:  test edx, edx
 8068718:  jne 8068708
 806871a:  pop ebp
 806871b:  nop
 806871c:  lea esi, [esi]
 8068720:  ret
 8068721:  add ecx, 0x30
 8068724:  lea esi, [esi]
 8068728:  mov eax, DWORD PTR [eax]
 806872a:  mov DWORD PTR [ecx], eax
 806872c:  pop ebp
 806872d:  ret
 806872e:  xchg ax, ax

08068730 <_IO_marker_difference>:
 8068730:  push ebp
 8068731:  mov ebp, esp
 8068733:  mov eax, DWORD PTR [ebp+0x8]
 8068736:  mov edx, DWORD PTR [ebp+0xc]
 8068739:  pop ebp
 806873a:  mov eax, DWORD PTR [eax+0x8]
 806873d:  sub eax, DWORD PTR [edx+0x8]
 8068740:  ret
 8068741:  jmp 8068750
 8068743:  nop
 8068744:  nop
 8068745:  nop
 8068746:  nop
 8068747:  nop
 8068748:  nop
 8068749:  nop
 806874a:  nop
 806874b:  nop
 806874c:  nop
 806874d:  nop
 806874e:  nop
 806874f:  nop

08068750 <_IO_marker_delta>:
 8068750:  push ebp
 8068751:  mov eax, 0xffffffff
 8068756:  mov ebp, esp
 8068758:  push ebx
 8068759:  mov ebx, DWORD PTR [ebp+0x8]
 806875c:  mov edx, DWORD PTR [ebx+0x4]
 806875f:  test edx, edx
 8068761:  je 8068775
 8068763:  mov eax, DWORD PTR [edx]
 8068765:  test ah, 0x1
 8068768:  jne 8068778
 806876a:  mov ecx, DWORD PTR [edx+0x4]
 806876d:  sub ecx, DWORD PTR [edx+0xc]
 8068770:  mov eax, DWORD PTR [ebx+0x8]
 8068773:  sub eax, ecx
 8068775:  pop ebx
 8068776:  pop ebp
 8068777:  ret
 8068778:  mov ecx, DWORD PTR [edx+0x4]
 806877b:  sub ecx, DWORD PTR [edx+0x8]
 806877e:  jmp 8068770

08068780 <_IO_seekmark>:
 8068780:  push ebp
 8068781:  mov eax, 0xffffffff
 8068786:  mov ebp, esp
 8068788:  sub esp, 0x8
 806878b:  mov DWORD PTR [esp], ebx
 806878e:  mov DWORD PTR [esp+0x4], esi
 8068792:  mov esi, DWORD PTR [ebp+0xc]
 8068795:  mov ebx, DWORD PTR [esi+0x4]
 8068798:  cmp ebx, DWORD PTR [ebp+0x8]
 806879b:  je 80687a8
 806879d:  mov ebx, DWORD PTR [esp]
 80687a0:  mov esi, DWORD PTR [esp+0x4]
 80687a4:  mov esp, ebp
 80687a6:  pop ebp
 80687a7:  ret
 80687a8:  mov eax, DWORD PTR [esi+0x8]
 80687ab:  test eax, eax
 80687ad:  js 80687f0
 80687af:  mov edx, DWORD PTR [ebx]
 80687b1:  test dh, 0x1
 80687b4:  je 80687d9
 80687b6:  mov eax, DWORD PTR [ebx+0x2c]
 80687b9:  and dh, 0xfe
 80687bc:  mov DWORD PTR [ebx], edx
 80687be:  mov edx, DWORD PTR [ebx+0x8]
 80687c1:  mov DWORD PTR [ebx+0x8], eax
 80687c4:  mov eax, DWORD PTR [ebx+0x24]
 80687c7:  mov DWORD PTR [ebx+0x2c], edx
 80687ca:  mov edx, DWORD PTR [ebx+0xc]
 80687cd:  mov DWORD PTR [ebx+0x4], eax
 80687d0:  mov DWORD PTR [ebx+0xc], eax
 80687d3:  mov eax, DWORD PTR [esi+0x8]
 80687d6:  mov DWORD PTR [ebx+0x24], edx
 80687d9:  add eax, DWORD PTR [ebx+0xc]
 80687dc:  mov DWORD PTR [ebx+0x4], eax
 80687df:  xor eax, eax
 80687e1:  mov ebx, DWORD PTR [esp]
 80687e4:  mov esi, DWORD PTR [esp+0x4]
 80687e8:  mov esp, ebp
 80687ea:  pop ebp
 80687eb:  ret
 80687ec:  lea esi, [esi]
 80687f0:  mov edx, DWORD PTR [ebx]
 80687f2:  test dh, 0x1
 80687f5:  jne 806881a
 80687f7:  mov eax, DWORD PTR [ebx+0x8]
 80687fa:  or dh, 0x1
 80687fd:  mov ecx, DWORD PTR [ebx+0x2c]
 8068800:  mov DWORD PTR [ebx], edx
 8068802:  mov edx, DWORD PTR [ebx+0xc]
 8068805:  mov DWORD PTR [ebx+0x2c], eax
 8068808:  mov eax, DWORD PTR [ebx+0x24]
 806880b:  mov DWORD PTR [ebx+0x8], ecx
 806880e:  mov DWORD PTR [ebx+0x24], edx
 8068811:  mov DWORD PTR [ebx+0x4], ecx
 8068814:  mov DWORD PTR [ebx+0xc], eax
 8068817:  mov eax, DWORD PTR [esi+0x8]
 806881a:  add eax, DWORD PTR [ebx+0x8]
 806881d:  mov DWORD PTR [ebx+0x4], eax
 8068820:  xor eax, eax
 8068822:  jmp 806879d
 8068827:  mov esi, esi
 8068829:  lea edi, [edi]

08068830 <_IO_default_seek>:
 8068830:  push ebp
 8068831:  mov eax, 0xffffffff
 8068836:  mov ebp, esp
 8068838:  mov edx, 0xffffffff
 806883d:  pop ebp
 806883e:  ret
 806883f:  nop

08068840 <_IO_default_stat>:
 8068840:  push ebp
 8068841:  mov eax, 0xffffffff
 8068846:  mov ebp, esp
 8068848:  pop ebp
 8068849:  ret
 806884a:  lea esi, [esi]

08068850 <_IO_default_read>:
 8068850:  push ebp
 8068851:  mov eax, 0xffffffff
 8068856:  mov ebp, esp
 8068858:  pop ebp
 8068859:  ret
 806885a:  lea esi, [esi]

08068860 <_IO_default_write>:
 8068860:  push ebp
 8068861:  xor eax, eax
 8068863:  mov ebp, esp
 8068865:  pop ebp
 8068866:  ret
 8068867:  mov esi, esi
 8068869:  lea edi, [edi]

08068870 <_IO_default_showmanyc>:
 8068870:  push ebp
 8068871:  mov eax, 0xffffffff
 8068876:  mov ebp, esp
 8068878:  pop ebp
 8068879:  ret
 806887a:  lea esi, [esi]

08068880 <_IO_default_imbue>:
 8068880:  push ebp
 8068881:  mov ebp, esp
 8068883:  pop ebp
 8068884:  ret
 8068885:  lea esi, [esi]
 8068889:  lea edi, [edi]

08068890 <_IO_iter_begin>:
 8068890:  push ebp
 8068891:  mov eax, ds:0x80d0f98
 8068896:  mov ebp, esp
 8068898:  pop ebp
 8068899:  ret
 806889a:  lea esi, [esi]

080688a0 <_IO_iter_end>:
 80688a0:  push ebp
 80688a1:  xor eax, eax
 80688a3:  mov ebp, esp
 80688a5:  pop ebp
 80688a6:  ret
 80688a7:  mov esi, esi
 80688a9:  lea edi, [edi]

080688b0 <_IO_iter_next>:
 80688b0:  push ebp
 80688b1:  mov ebp, esp
 80688b3:  mov eax, DWORD PTR [ebp+0x8]
 80688b6:  pop ebp
 80688b7:  mov eax, DWORD PTR [eax+0x34]
 80688ba:  ret
 80688bb:  nop
 80688bc:  lea esi, [esi]

080688c0 <_IO_iter_file>:
 80688c0:  push ebp
 80688c1:  mov ebp, esp
 80688c3:  mov eax, DWORD PTR [ebp+0x8]
 80688c6:  pop ebp
 80688c7:  ret
 80688c8:  nop
 80688c9:  lea esi, [esi]

080688d0 <_IO_list_lock>:
 80688d0:  mov edx, DWORD PTR gs:0x8
 80688d7:  cmp DWORD PTR ds:0x80d2930, edx
 80688dd:  push ebp
 80688de:  mov ebp, esp
 80688e0:  je 8068907
 80688e2:  xor eax, eax
 80688e4:  mov ecx, 0x1
 80688e9:  cmp DWORD PTR gs:0xc, 0x0
 80688f1:  je 80688f4
 80688f3:  cmpxchg DWORD PTR ds:0x80d2928, ecx
 80688fb:  jne 806a541
 8068901:  mov DWORD PTR ds:0x80d2930, edx
 8068907:  add DWORD PTR ds:0x80d292c, 0x1
 806890e:  pop ebp
 806890f:  ret

08068910 <_IO_list_unlock>:
 8068910:  mov eax, ds:0x80d292c
 8068915:  push ebp
 8068916:  mov ebp, esp
 8068918:  sub eax, 0x1
 806891b:  test eax, eax
 806891d:  mov ds:0x80d292c, eax
 8068922:  jne 8068946
 8068924:  mov DWORD PTR ds:0x80d2930, 0x0
 806892e:  cmp DWORD PTR gs:0xc, 0x0
 8068936:  je 8068939
 8068938:  sub DWORD PTR ds:0x80d2928, 0x1
 8068940:  jne 806a551
 8068946:  pop ebp
 8068947:  ret
 8068948:  nop
 8068949:  lea esi, [esi]

08068950 <_IO_list_resetlock>:
 8068950:  push ebp
 8068951:  mov ebp, esp
 8068953:  mov DWORD PTR ds:0x80d2928, 0x0
 806895d:  mov DWORD PTR ds:0x80d292c, 0x0
 8068967:  mov DWORD PTR ds:0x80d2930, 0x0
 8068971:  pop ebp
 8068972:  ret
 8068973:  lea esi, [esi]
 8068979:  lea edi, [edi]

08068980 <_IO_setb>:
 8068980:  push ebp
 8068981:  mov ebp, esp
 8068983:  push ebx
 8068984:  sub esp, 0x8
 8068987:  mov ebx, DWORD PTR [ebp+0x8]
 806898a:  mov edx, DWORD PTR [ebx+0x1c]
 806898d:  test edx, edx
 806898f:  je 8068996
 8068991:  test BYTE PTR [ebx], 0x1
 8068994:  je 80689c8
 8068996:  mov eax, DWORD PTR [ebp+0xc]
 8068999:  mov edx, DWORD PTR [ebp+0x14]
 806899c:  mov DWORD PTR [ebx+0x1c], eax
 806899f:  mov eax, DWORD PTR [ebp+0x10]
 80689a2:  test edx, edx
 80689a4:  mov DWORD PTR [ebx+0x20], eax
 80689a7:  jne 80689b8
 80689a9:  or DWORD PTR [ebx], 0x1
 80689ac:  add esp, 0x8
 80689af:  pop ebx
 80689b0:  pop ebp
 80689b1:  ret
 80689b2:  lea esi, [esi]
 80689b8:  and DWORD PTR [ebx], 0xfe
 80689bb:  add esp, 0x8
 80689be:  pop ebx
 80689bf:  pop ebp
 80689c0:  ret
 80689c1:  lea esi, [esi]
 80689c8:  mov eax, DWORD PTR [ebx+0x20]
 80689cb:  mov DWORD PTR [esp], edx
 80689ce:  add eax, 0xfff
 80689d3:  sub eax, edx
 80689d5:  and eax, 0xfffff000
 80689da:  mov DWORD PTR [esp+0x4], eax
 80689de:  call 8050050
 80689e3:  jmp 8068996
 80689e5:  lea esi, [esi]
 80689e9:  lea edi, [edi]

080689f0 <_IO_doallocbuf>:
 80689f0:  push ebp
 80689f1:  mov ebp, esp
 80689f3:  push ebx
 80689f4:  sub esp, 0x10
 80689f7:  mov ebx, DWORD PTR [ebp+0x8]
 80689fa:  mov eax, DWORD PTR [ebx+0x1c]
 80689fd:  test eax, eax
 80689ff:  je 8068a08
 8068a01:  add esp, 0x10
 8068a04:  pop ebx
 8068a05:  pop ebp
 8068a06:  ret
 8068a07:  nop
 8068a08:  test BYTE PTR [ebx], 0x2
 8068a0b:  je 8068a1a
 8068a0d:  mov ecx, DWORD PTR [ebx+0x68]
 8068a10:  test ecx, ecx
 8068a12:  lea esi, [esi]
 8068a18:  jle 8068a2b
 8068a1a:  mov eax, DWORD PTR [ebx+0x94]
 8068a20:  mov DWORD PTR [esp], ebx
 8068a23:  call DWORD PTR [eax+0x34]
 8068a26:  add eax, 0x1
 8068a29:  jne 8068a01
 8068a2b:  lea eax, [ebx+0x48]
 8068a2e:  mov DWORD PTR [esp+0x8], eax
 8068a32:  lea eax, [ebx+0x47]
 8068a35:  mov DWORD PTR [esp+0xc], 0x0
 8068a3d:  mov DWORD PTR [esp+0x4], eax
 8068a41:  mov DWORD PTR [esp], ebx
 8068a44:  call 8068980
 8068a49:  jmp 8068a01
 8068a4b:  nop
 8068a4c:  lea esi, [esi]

08068a50 <_IO_free_backup_area>:
 8068a50:  push ebp
 8068a51:  mov ebp, esp
 8068a53:  push ebx
 8068a54:  sub esp, 0x4
 8068a57:  mov ebx, DWORD PTR [ebp+0x8]
 8068a5a:  mov eax, DWORD PTR [ebx]
 8068a5c:  test ah, 0x1
 8068a5f:  je 8068aa8
 8068a61:  mov edx, DWORD PTR [ebx+0x8]
 8068a64:  and ah, 0xfe
 8068a67:  mov ecx, DWORD PTR [ebx+0x24]
 8068a6a:  mov DWORD PTR [ebx], eax
 8068a6c:  mov eax, DWORD PTR [ebx+0x2c]
 8068a6f:  mov DWORD PTR [ebx+0x2c], edx
 8068a72:  mov edx, DWORD PTR [ebx+0xc]
 8068a75:  mov DWORD PTR [ebx+0xc], ecx
 8068a78:  mov DWORD PTR [ebx+0x8], eax
 8068a7b:  mov eax, ecx
 8068a7d:  mov DWORD PTR [ebx+0x4], eax
 8068a80:  mov ecx, edx
 8068a82:  mov DWORD PTR [ebx+0x24], edx
 8068a85:  mov DWORD PTR [esp], ecx
 8068a88:  call 804b4a0
 8068a8d:  mov DWORD PTR [ebx+0x24], 0x0
 8068a94:  mov DWORD PTR [ebx+0x2c], 0x0
 8068a9b:  mov DWORD PTR [ebx+0x28], 0x0
 8068aa2:  add esp, 0x4
 8068aa5:  pop ebx
 8068aa6:  pop ebp
 8068aa7:  ret
 8068aa8:  mov ecx, DWORD PTR [ebx+0x24]
 8068aab:  jmp 8068a85
 8068aad:  lea esi, [esi]

08068ab0 <_IO_default_xsputn>:
 8068ab0:  push ebp
 8068ab1:  xor eax, eax
 8068ab3:  mov ebp, esp
 8068ab5:  push edi
 8068ab6:  push esi
 8068ab7:  push ebx
 8068ab8:  sub esp, 0x28
 8068abb:  mov edi, DWORD PTR [ebp+0x10]
 8068abe:  mov ebx, DWORD PTR [ebp+0xc]
 8068ac1:  test edi, edi
 8068ac3:  je 8068bfd
 8068ac9:  lea esi, [esi]
 8068ad0:  mov eax, DWORD PTR [ebp+0x8]
 8068ad3:  mov ecx, DWORD PTR [eax+0x14]
 8068ad6:  mov eax, DWORD PTR [eax+0x18]
 8068ad9:  cmp ecx, eax
 8068adb:  jae 8068b33
 8068add:  sub eax, ecx
 8068adf:  cmp edi, eax
 8068ae1:  mov DWORD PTR [ebp-0x28], edi
 8068ae4:  jbe 8068ae9
 8068ae6:  mov DWORD PTR [ebp-0x28], eax
 8068ae9:  cmp DWORD PTR [ebp-0x28], 0x14
 8068aed:  ja 8068c08
 8068af3:  mov eax, DWORD PTR [ebp-0x28]
 8068af6:  test eax, eax
 8068af8:  je 8068b30
 8068afa:  mov esi, DWORD PTR [ebp-0x28]
 8068afd:  sub esi, 0x1
 8068b00:  cmp DWORD PTR [ebp-0x28], 0x9
 8068b04:  mov DWORD PTR [ebp-0x18], esi
 8068b07:  ja 8068b68
 8068b09:  xor edx, edx
 8068b0b:  nop
 8068b0c:  lea esi, [esi]
 8068b10:  movzx eax, BYTE PTR [ebx+edx]
 8068b14:  mov BYTE PTR [ecx+edx], al
 8068b17:  add edx, 0x1
 8068b1a:  cmp edx, DWORD PTR [ebp-0x28]
 8068b1d:  jne 8068b10
 8068b1f:  mov edx, DWORD PTR [ebp-0x28]
 8068b22:  mov esi, DWORD PTR [ebp+0x8]
 8068b25:  add ebx, DWORD PTR [ebp-0x28]
 8068b28:  lea eax, [ecx+edx]
 8068b2b:  mov DWORD PTR [esi+0x14], eax
 8068b2e:  xchg ax, ax
 8068b30:  sub edi, DWORD PTR [ebp-0x28]
 8068b33:  test edi, edi
 8068b35:  je 8068bf8
 8068b3b:  mov edx, DWORD PTR [ebp+0x8]
 8068b3e:  mov esi, DWORD PTR [ebp+0x8]
 8068b41:  mov eax, DWORD PTR [edx+0x94]
 8068b47:  movzx edx, BYTE PTR [ebx]
 8068b4a:  mov DWORD PTR [esp], esi
 8068b4d:  mov DWORD PTR [esp+0x4], edx
 8068b51:  call DWORD PTR [eax+0xc]
 8068b54:  add eax, 0x1
 8068b57:  je 8068bf8
 8068b5d:  add ebx, 0x1
 8068b60:  sub edi, 0x1
 8068b63:  jmp 8068ad0
 8068b68:  mov eax, ebx
 8068b6a:  or eax, ecx
 8068b6c:  test al, 0x3
 8068b6e:  jne 8068b09
 8068b70:  lea eax, [ebx+0x4]
 8068b73:  cmp ecx, eax
 8068b75:  jbe 8068c30
 8068b7b:  mov eax, DWORD PTR [ebp-0x28]
 8068b7e:  xor edx, edx
 8068b80:  mov DWORD PTR [ebp-0x10], ebx
 8068b83:  mov DWORD PTR [ebp-0x14], ecx
 8068b86:  shr eax, 0x2
 8068b89:  mov DWORD PTR [ebp-0x20], eax
 8068b8c:  shl eax, 0x2
 8068b8f:  test eax, eax
 8068b91:  mov DWORD PTR [ebp-0x1c], eax
 8068b94:  je 8068bc5
 8068b96:  xchg ax, ax
 8068b98:  mov eax, DWORD PTR [ebx+edx*4]
 8068b9b:  mov DWORD PTR [ecx+edx*4], eax
 8068b9e:  add edx, 0x1
 8068ba1:  cmp edx, DWORD PTR [ebp-0x20]
 8068ba4:  jb 8068b98
 8068ba6:  mov edx, DWORD PTR [ebp-0x1c]
 8068ba9:  mov esi, DWORD PTR [ebp-0x1c]
 8068bac:  mov eax, DWORD PTR [ebp-0x1c]
 8068baf:  sub DWORD PTR [ebp-0x18], edx
 8068bb2:  add edx, ecx
 8068bb4:  add esi, ebx
 8068bb6:  cmp DWORD PTR [ebp-0x28], eax
 8068bb9:  mov DWORD PTR [ebp-0x14], edx
 8068bbc:  mov DWORD PTR [ebp-0x10], esi
 8068bbf:  je 8068b1f
 8068bc5:  xor edx, edx
 8068bc7:  nop
 8068bc8:  mov eax, DWORD PTR [ebp-0x10]
 8068bcb:  mov esi, DWORD PTR [ebp-0x14]
 8068bce:  movzx eax, BYTE PTR [eax+edx]
 8068bd2:  mov BYTE PTR [esi+edx], al
 8068bd5:  add edx, 0x1
 8068bd8:  cmp DWORD PTR [ebp-0x18], edx
 8068bdb:  jns 8068bc8
 8068bdd:  mov edx, DWORD PTR [ebp-0x28]
 8068be0:  mov esi, DWORD PTR [ebp+0x8]
 8068be3:  add ebx, DWORD PTR [ebp-0x28]
 8068be6:  lea eax, [ecx+edx]
 8068be9:  mov DWORD PTR [esi+0x14], eax
 8068bec:  jmp 8068b30
 8068bf1:  lea esi, [esi]
 8068bf8:  mov eax, DWORD PTR [ebp+0x10]
 8068bfb:  sub eax, edi
 8068bfd:  add esp, 0x28
 8068c00:  pop ebx
 8068c01:  pop esi
 8068c02:  pop edi
 8068c03:  pop ebp
 8068c04:  ret
 8068c05:  lea esi, [esi]
 8068c08:  mov esi, DWORD PTR [ebp-0x28]
 8068c0b:  mov DWORD PTR [esp+0x4], ebx
 8068c0f:  mov DWORD PTR [esp], ecx
 8068c12:  mov DWORD PTR [esp+0x8], esi
 8068c16:  add ebx, esi
 8068c18:  call 806c310
 8068c1d:  mov edx, DWORD PTR [ebp+0x8]
 8068c20:  sub edi, DWORD PTR [ebp-0x28]
 8068c23:  mov DWORD PTR [edx+0x14], eax
 8068c26:  jmp 8068b33
 8068c2b:  nop
 8068c2c:  lea esi, [esi]
 8068c30:  lea eax, [ecx+0x4]
 8068c33:  cmp ebx, eax
 8068c35:  jbe 8068b09
 8068c3b:  jmp 8068b7b

08068c40 <save_for_backup>:
 8068c40:  push ebp
 8068c41:  mov ebp, esp
 8068c43:  push edi
 8068c44:  push esi
 8068c45:  push ebx
 8068c46:  sub esp, 0x24
 8068c49:  mov DWORD PTR [ebp-0x14], edx
 8068c4c:  mov edx, eax
 8068c4e:  mov ebx, DWORD PTR [ebp-0x14]
 8068c51:  mov edx, DWORD PTR [edx+0x30]
 8068c54:  mov DWORD PTR [ebp-0x1c], eax
 8068c57:  mov eax, DWORD PTR [eax+0xc]
 8068c5a:  mov DWORD PTR [ebp-0x24], edx
 8068c5d:  sub ebx, eax
 8068c5f:  test edx, edx
 8068c61:  je 8068d43
 8068c67:  mov esi, ebx
 8068c69:  lea esi, [esi]
 8068c70:  mov ecx, DWORD PTR [edx+0x8]
 8068c73:  cmp esi, ecx
 8068c75:  jle 8068c79
 8068c77:  mov esi, ecx
 8068c79:  mov edx, DWORD PTR [edx]
 8068c7b:  test edx, edx
 8068c7d:  jne 8068c70
 8068c7f:  mov edx, DWORD PTR [ebp-0x1c]
 8068c82:  mov edi, ebx
 8068c84:  mov ebx, esi
 8068c86:  sub edi, esi
 8068c88:  mov edx, DWORD PTR [edx+0x2c]
 8068c8b:  mov DWORD PTR [ebp-0x10], edx
 8068c8e:  mov edx, DWORD PTR [ebp-0x1c]
 8068c91:  mov ecx, DWORD PTR [edx+0x24]
 8068c94:  mov edx, DWORD PTR [ebp-0x10]
 8068c97:  sub edx, ecx
 8068c99:  cmp edi, edx
 8068c9b:  ja 8068d5e
 8068ca1:  mov esi, edx
 8068ca3:  sub esi, edi
 8068ca5:  test ebx, ebx
 8068ca7:  js 8068d08
 8068ca9:  test edi, edi
 8068cab:  jne 8068ce0
 8068cad:  mov edx, DWORD PTR [ebp-0x1c]
 8068cb0:  lea eax, [ecx+esi]
 8068cb3:  mov ecx, DWORD PTR [ebp-0x24]
 8068cb6:  mov DWORD PTR [edx+0x28], eax
 8068cb9:  mov eax, DWORD PTR [ebp-0x14]
 8068cbc:  sub eax, DWORD PTR [edx+0xc]
 8068cbf:  test ecx, ecx
 8068cc1:  je 8068cd1
 8068cc3:  nop
 8068cc4:  lea esi, [esi]
 8068cc8:  sub DWORD PTR [ecx+0x8], eax
 8068ccb:  mov ecx, DWORD PTR [ecx]
 8068ccd:  test ecx, ecx
 8068ccf:  jne 8068cc8
 8068cd1:  xor eax, eax
 8068cd3:  add esp, 0x24
 8068cd6:  pop ebx
 8068cd7:  pop esi
 8068cd8:  pop edi
 8068cd9:  pop ebp
 8068cda:  ret
 8068cdb:  nop
 8068cdc:  lea esi, [esi]
 8068ce0:  add eax, ebx
 8068ce2:  lea edx, [ecx+esi]
 8068ce5:  mov DWORD PTR [esp+0x8], edi
 8068ce9:  mov DWORD PTR [esp+0x4], eax
 8068ced:  mov DWORD PTR [esp], edx
 8068cf0:  call 804efc0
 8068cf5:  mov edx, DWORD PTR [ebp-0x1c]
 8068cf8:  mov eax, DWORD PTR [edx+0x30]
 8068cfb:  mov ecx, DWORD PTR [edx+0x24]
 8068cfe:  mov DWORD PTR [ebp-0x24], eax
 8068d01:  jmp 8068cad
 8068d03:  nop
 8068d04:  lea esi, [esi]
 8068d08:  mov eax, ebx
 8068d0a:  neg eax
 8068d0c:  mov DWORD PTR [esp+0x8], eax
 8068d10:  mov eax, DWORD PTR [ebp-0x10]
 8068d13:  add eax, ebx
 8068d15:  mov DWORD PTR [esp+0x4], eax
 8068d19:  lea eax, [ecx+esi]
 8068d1c:  mov DWORD PTR [esp], eax
 8068d1f:  call 806c260
 8068d24:  mov edx, DWORD PTR [ebp-0x1c]
 8068d27:  mov eax, DWORD PTR [ebp-0x1c]
 8068d2a:  mov ecx, DWORD PTR [edx+0xc]
 8068d2d:  mov edx, esi
 8068d2f:  sub edx, ebx
 8068d31:  add edx, DWORD PTR [eax+0x24]
 8068d34:  mov eax, DWORD PTR [ebp-0x14]
 8068d37:  mov DWORD PTR [esp+0x4], ecx
 8068d3b:  sub eax, ecx
 8068d3d:  mov DWORD PTR [esp+0x8], eax
 8068d41:  jmp 8068ced
 8068d43:  mov edx, DWORD PTR [ebp-0x1c]
 8068d46:  xor edi, edi
 8068d48:  mov edx, DWORD PTR [edx+0x2c]
 8068d4b:  mov DWORD PTR [ebp-0x10], edx
 8068d4e:  mov edx, DWORD PTR [ebp-0x1c]
 8068d51:  mov ecx, DWORD PTR [edx+0x24]
 8068d54:  mov edx, DWORD PTR [ebp-0x10]
 8068d57:  sub edx, ecx
 8068d59:  jmp 8068ca1
 8068d5e:  lea eax, [edi+0x64]
 8068d61:  mov DWORD PTR [ebp-0x18], eax
 8068d64:  mov DWORD PTR [esp], eax
 8068d67:  call 804d6f0
 8068d6c:  mov DWORD PTR [ebp-0x20], eax
 8068d6f:  mov edx, DWORD PTR [ebp-0x20]
 8068d72:  mov eax, 0xffffffff
 8068d77:  test edx, edx
 8068d79:  je 8068cd3
 8068d7f:  test esi, esi
 8068d81:  js 8068dd4
 8068d83:  mov edx, DWORD PTR [ebp-0x1c]
 8068d86:  mov eax, DWORD PTR [ebp-0x20]
 8068d89:  add esi, DWORD PTR [edx+0xc]
 8068d8c:  add eax, 0x64
 8068d8f:  mov DWORD PTR [esp+0x8], edi
 8068d93:  mov DWORD PTR [esp+0x4], esi
 8068d97:  mov DWORD PTR [esp], eax
 8068d9a:  call 804efc0
 8068d9f:  mov edx, DWORD PTR [ebp-0x1c]
 8068da2:  mov esi, 0x64
 8068da7:  mov eax, DWORD PTR [edx+0x24]
 8068daa:  mov DWORD PTR [esp], eax
 8068dad:  call 804b4a0
 8068db2:  mov edx, DWORD PTR [ebp-0x20]
 8068db5:  mov eax, DWORD PTR [ebp-0x1c]
 8068db8:  mov ecx, DWORD PTR [ebp-0x20]
 8068dbb:  mov DWORD PTR [eax+0x24], edx
 8068dbe:  mov eax, edx
 8068dc0:  mov edx, DWORD PTR [ebp-0x1c]
 8068dc3:  add eax, DWORD PTR [ebp-0x18]
 8068dc6:  mov DWORD PTR [edx+0x2c], eax
 8068dc9:  mov eax, DWORD PTR [edx+0x30]
 8068dcc:  mov DWORD PTR [ebp-0x24], eax
 8068dcf:  jmp 8068cad
 8068dd4:  mov edx, DWORD PTR [ebp-0x1c]
 8068dd7:  mov eax, esi
 8068dd9:  neg eax
 8068ddb:  mov ebx, DWORD PTR [edx+0xc]
 8068dde:  mov DWORD PTR [esp+0x8], eax
 8068de2:  mov eax, DWORD PTR [ebp-0x20]
 8068de5:  add esi, DWORD PTR [edx+0x2c]
 8068de8:  add eax, 0x64
 8068deb:  mov DWORD PTR [esp+0x4], esi
 8068def:  mov DWORD PTR [esp], eax
 8068df2:  call 806c310
 8068df7:  mov edx, DWORD PTR [ebp-0x14]
 8068dfa:  mov DWORD PTR [esp+0x4], ebx
 8068dfe:  sub edx, ebx
 8068e00:  mov DWORD PTR [esp+0x8], edx
 8068e04:  mov DWORD PTR [esp], eax
 8068e07:  call 804efc0
 8068e0c:  jmp 8068d9f
 8068e0e:  xchg ax, ax

08068e10 <_IO_default_pbackfail>:
 8068e10:  push ebp
 8068e11:  mov ebp, esp
 8068e13:  sub esp, 0x24
 8068e16:  mov DWORD PTR [ebp-0x8], esi
 8068e19:  mov esi, DWORD PTR [ebp+0x8]
 8068e1c:  mov DWORD PTR [ebp-0xc], ebx
 8068e1f:  mov ebx, DWORD PTR [ebp+0xc]
 8068e22:  mov DWORD PTR [ebp-0x4], edi
 8068e25:  mov ecx, DWORD PTR [esi+0x4]
 8068e28:  mov edx, DWORD PTR [esi+0xc]
 8068e2b:  cmp ecx, edx
 8068e2d:  jbe 8068e50
 8068e2f:  mov eax, DWORD PTR [esi]
 8068e31:  test ah, 0x1
 8068e34:  je 8068e80
 8068e36:  lea eax, [ecx-0x1]
 8068e39:  mov DWORD PTR [esi+0x4], eax
 8068e3c:  mov BYTE PTR [ecx-0x1], bl
 8068e3f:  movzx eax, bl
 8068e42:  mov ebx, DWORD PTR [ebp-0xc]
 8068e45:  mov esi, DWORD PTR [ebp-0x8]
 8068e48:  mov edi, DWORD PTR [ebp-0x4]
 8068e4b:  mov esp, ebp
 8068e4d:  pop ebp
 8068e4e:  ret
 8068e4f:  nop
 8068e50:  mov eax, DWORD PTR [esi]
 8068e52:  test ah, 0x1
 8068e55:  jne 8068ec8
 8068e57:  mov eax, DWORD PTR [esi+0x24]
 8068e5a:  test eax, eax
 8068e5c:  je 8068e96
 8068e5e:  mov eax, DWORD PTR [esi+0x8]
 8068e61:  mov edx, DWORD PTR [esi+0x2c]
 8068e64:  or DWORD PTR [esi], 0x100
 8068e6a:  mov DWORD PTR [esi+0x2c], eax
 8068e6d:  mov eax, DWORD PTR [esi+0x24]
 8068e70:  mov DWORD PTR [esi+0x8], edx
 8068e73:  mov DWORD PTR [esi+0x24], ecx
 8068e76:  mov ecx, edx
 8068e78:  mov DWORD PTR [esi+0x4], edx
 8068e7b:  mov DWORD PTR [esi+0xc], eax
 8068e7e:  jmp 8068e36
 8068e80:  movzx eax, BYTE PTR [ecx-0x1]
 8068e84:  lea edx, [ecx-0x1]
 8068e87:  cmp eax, ebx
 8068e89:  je 8068ec0
 8068e8b:  mov edi, DWORD PTR [esi+0x24]
 8068e8e:  test edi, edi
 8068e90:  jne 8068f30
 8068e96:  mov DWORD PTR [esp], 0x80
 8068e9d:  call 804d6f0
 8068ea2:  test eax, eax
 8068ea4:  je 8068f41
 8068eaa:  mov DWORD PTR [esi+0x24], eax
 8068ead:  sub eax, 0x80
 8068eb0:  mov DWORD PTR [esi+0x2c], eax
 8068eb3:  mov DWORD PTR [esi+0x28], eax
 8068eb6:  xchg ax, ax
 8068eb8:  mov ecx, DWORD PTR [esi+0x4]
 8068ebb:  jmp 8068e5e
 8068ebd:  lea esi, [esi]
 8068ec0:  mov DWORD PTR [esi+0x4], edx
 8068ec3:  jmp 8068e3f
 8068ec8:  mov edi, DWORD PTR [esi+0x8]
 8068ecb:  sub edi, edx
 8068ecd:  lea eax, [edi+edi]
 8068ed0:  mov DWORD PTR [ebp-0x10], eax
 8068ed3:  mov DWORD PTR [esp], eax
 8068ed6:  call 804d6f0
 8068edb:  test eax, eax
 8068edd:  mov DWORD PTR [ebp-0x14], eax
 8068ee0:  je 8068f41
 8068ee2:  add eax, edi
 8068ee4:  mov DWORD PTR [ebp-0x18], eax
 8068ee7:  mov eax, DWORD PTR [esi+0xc]
 8068eea:  mov DWORD PTR [esp+0x8], edi
 8068eee:  mov DWORD PTR [esp+0x4], eax
 8068ef2:  mov eax, DWORD PTR [ebp-0x18]
 8068ef5:  mov DWORD PTR [esp], eax
 8068ef8:  call 804efc0
 8068efd:  mov eax, DWORD PTR [esi+0xc]
 8068f00:  mov DWORD PTR [esp], eax
 8068f03:  call 804b4a0
 8068f08:  mov eax, DWORD PTR [ebp-0x14]
 8068f0b:  mov DWORD PTR [esi+0xc], eax
 8068f0e:  mov eax, DWORD PTR [ebp-0x18]
 8068f11:  mov DWORD PTR [esi+0x4], eax
 8068f14:  mov eax, DWORD PTR [ebp-0x14]
 8068f17:  add eax, DWORD PTR [ebp-0x10]
 8068f1a:  mov DWORD PTR [esi+0x8], eax
 8068f1d:  mov eax, DWORD PTR [ebp-0x18]
 8068f20:  mov DWORD PTR [esi+0x28], eax
 8068f23:  mov ecx, eax
 8068f25:  jmp 8068e36
 8068f2a:  lea esi, [esi]
 8068f30:  mov edx, ecx
 8068f32:  mov eax, esi
 8068f34:  call 8068c40
 8068f39:  test eax, eax
 8068f3b:  je 8068eb8
 8068f41:  mov eax, 0xffffffff
 8068f46:  jmp 8068e42
 8068f4b:  nop
 8068f4c:  lea esi, [esi]

08068f50 <__uflow>:
 8068f50:  push ebp
 8068f51:  mov ebp, esp
 8068f53:  sub esp, 0xc
 8068f56:  mov DWORD PTR [ebp-0x8], ebx
 8068f59:  mov ebx, DWORD PTR [ebp+0x8]
 8068f5c:  mov DWORD PTR [ebp-0x4], esi
 8068f5f:  mov eax, DWORD PTR [ebx+0x68]
 8068f62:  test eax, eax
 8068f64:  jne 8068fe0
 8068f66:  mov DWORD PTR [ebx+0x68], 0xffffffff
 8068f6d:  mov eax, DWORD PTR [ebx]
 8068f6f:  test ah, 0x8
 8068f72:  jne 806900d
 8068f78:  mov eax, DWORD PTR [ebx+0x4]
 8068f7b:  mov ecx, DWORD PTR [ebx+0x8]
 8068f7e:  cmp eax, ecx
 8068f80:  jb 8068ff8
 8068f82:  mov eax, DWORD PTR [ebx]
 8068f84:  test ah, 0x1
 8068f87:  je 8068fac
 8068f89:  mov edx, DWORD PTR [ebx+0x2c]
 8068f8c:  and ah, 0xfe
 8068f8f:  mov esi, DWORD PTR [ebx+0x24]
 8068f92:  mov DWORD PTR [ebx], eax
 8068f94:  mov eax, DWORD PTR [ebx+0xc]
 8068f97:  mov DWORD PTR [ebx+0x2c], ecx
 8068f9a:  mov DWORD PTR [ebx+0x8], edx
 8068f9d:  mov ecx, edx
 8068f9f:  cmp edx, esi
 8068fa1:  mov DWORD PTR [ebx+0xc], esi
 8068fa4:  mov DWORD PTR [ebx+0x24], eax
 8068fa7:  mov DWORD PTR [ebx+0x4], esi
 8068faa:  ja 8069028
 8068fac:  mov eax, DWORD PTR [ebx+0x30]
 8068faf:  test eax, eax
 8068fb1:  jne 8069040
 8068fb7:  mov eax, DWORD PTR [ebx+0x24]
 8068fba:  test eax, eax
 8068fbc:  je 8068fc6
 8068fbe:  mov DWORD PTR [esp], ebx
 8068fc1:  call 8068a50
 8068fc6:  mov eax, DWORD PTR [ebx+0x94]
 8068fcc:  mov DWORD PTR [ebp+0x8], ebx
 8068fcf:  mov esi, DWORD PTR [ebp-0x4]
 8068fd2:  mov ebx, DWORD PTR [ebp-0x8]
 8068fd5:  mov ecx, DWORD PTR [eax+0x14]
 8068fd8:  mov esp, ebp
 8068fda:  pop ebp
 8068fdb:  jmp ecx
 8068fdd:  lea esi, [esi]
 8068fe0:  add eax, 0x1
 8068fe3:  je 8068f6d
 8068fe5:  mov edx, 0xffffffff
 8068fea:  mov ebx, DWORD PTR [ebp-0x8]
 8068fed:  mov eax, edx
 8068fef:  mov esi, DWORD PTR [ebp-0x4]
 8068ff2:  mov esp, ebp
 8068ff4:  pop ebp
 8068ff5:  ret
 8068ff6:  xchg ax, ax
 8068ff8:  movzx edx, BYTE PTR [eax]
 8068ffb:  add eax, 0x1
 8068ffe:  mov DWORD PTR [ebx+0x4], eax
 8069001:  mov ebx, DWORD PTR [ebp-0x8]
 8069004:  mov esi, DWORD PTR [ebp-0x4]
 8069007:  mov esp, ebp
 8069009:  pop ebp
 806900a:  mov eax, edx
 806900c:  ret
 806900d:  mov DWORD PTR [esp], ebx
 8069010:  call 80683e0
 8069015:  add eax, 0x1
 8069018:  jne 8068f78
 806901e:  xchg ax, ax
 8069020:  jmp 8068fe5
 8069022:  lea esi, [esi]
 8069028:  lea eax, [esi+0x1]
 806902b:  movzx edx, BYTE PTR [esi]
 806902e:  mov DWORD PTR [ebx+0x4], eax
 8069031:  lea esi, [esi]
 8069038:  jmp 8068fea
 806903a:  lea esi, [esi]
 8069040:  mov edx, ecx
 8069042:  mov eax, ebx
 8069044:  call 8068c40
 8069049:  test eax, eax
 806904b:  je 8068fc6
 8069051:  lea esi, [esi]
 8069058:  jmp 8068fe5
 806905a:  lea esi, [esi]

08069060 <__underflow>:
 8069060:  push ebp
 8069061:  mov ebp, esp
 8069063:  sub esp, 0xc
 8069066:  mov DWORD PTR [ebp-0x8], ebx
 8069069:  mov ebx, DWORD PTR [ebp+0x8]
 806906c:  mov DWORD PTR [ebp-0x4], esi
 806906f:  mov eax, DWORD PTR [ebx+0x68]
 8069072:  test eax, eax
 8069074:  jne 80690f0
 8069076:  mov DWORD PTR [ebx+0x68], 0xffffffff
 806907d:  mov eax, DWORD PTR [ebx]
 806907f:  test ah, 0x8
 8069082:  jne 8069115
 8069088:  mov eax, DWORD PTR [ebx+0x4]
 806908b:  mov ecx, DWORD PTR [ebx+0x8]
 806908e:  cmp eax, ecx
 8069090:  jb 8069108
 8069092:  mov eax, DWORD PTR [ebx]
 8069094:  test ah, 0x1
 8069097:  je 80690bc
 8069099:  mov edx, DWORD PTR [ebx+0x2c]
 806909c:  and ah, 0xfe
 806909f:  mov esi, DWORD PTR [ebx+0x24]
 80690a2:  mov DWORD PTR [ebx], eax
 80690a4:  mov eax, DWORD PTR [ebx+0xc]
 80690a7:  mov DWORD PTR [ebx+0x2c], ecx
 80690aa:  mov DWORD PTR [ebx+0x8], edx
 80690ad:  mov ecx, edx
 80690af:  cmp edx, esi
 80690b1:  mov DWORD PTR [ebx+0xc], esi
 80690b4:  mov DWORD PTR [ebx+0x24], eax
 80690b7:  mov DWORD PTR [ebx+0x4], esi
 80690ba:  ja 8069130
 80690bc:  mov eax, DWORD PTR [ebx+0x30]
 80690bf:  test eax, eax
 80690c1:  jne 8069140
 80690c3:  mov eax, DWORD PTR [ebx+0x24]
 80690c6:  test eax, eax
 80690c8:  je 80690d2
 80690ca:  mov DWORD PTR [esp], ebx
 80690cd:  call 8068a50
 80690d2:  mov eax, DWORD PTR [ebx+0x94]
 80690d8:  mov DWORD PTR [ebp+0x8], ebx
 80690db:  mov esi, DWORD PTR [ebp-0x4]
 80690de:  mov ebx, DWORD PTR [ebp-0x8]
 80690e1:  mov ecx, DWORD PTR [eax+0x10]
 80690e4:  mov esp, ebp
 80690e6:  pop ebp
 80690e7:  jmp ecx
 80690e9:  lea esi, [esi]
 80690f0:  add eax, 0x1
 80690f3:  je 806907d
 80690f5:  mov eax, 0xffffffff
 80690fa:  mov ebx, DWORD PTR [ebp-0x8]
 80690fd:  mov esi, DWORD PTR [ebp-0x4]
 8069100:  mov esp, ebp
 8069102:  pop ebp
 8069103:  ret
 8069104:  lea esi, [esi]
 8069108:  movzx eax, BYTE PTR [eax]
 806910b:  mov ebx, DWORD PTR [ebp-0x8]
 806910e:  mov esi, DWORD PTR [ebp-0x4]
 8069111:  mov esp, ebp
 8069113:  pop ebp
 8069114:  ret
 8069115:  mov DWORD PTR [esp], ebx
 8069118:  call 80683e0
 806911d:  add eax, 0x1
 8069120:  jne 8069088
 8069126:  xchg ax, ax
 8069128:  jmp 80690f5
 806912a:  lea esi, [esi]
 8069130:  movzx eax, BYTE PTR [esi]
 8069133:  nop
 8069134:  lea esi, [esi]
 8069138:  jmp 80690fa
 806913a:  lea esi, [esi]
 8069140:  mov edx, ecx
 8069142:  mov eax, ebx
 8069144:  lea esi, [esi]
 8069148:  call 8068c40
 806914d:  test eax, eax
 806914f:  je 80690d2
 8069151:  lea esi, [esi]
 8069158:  jmp 80690f5
 806915a:  lea esi, [esi]

08069160 <_IO_flush_all_linebuffered>:
 8069160:  push ebp
 8069161:  mov eax, 0x0
 8069166:  mov ebp, esp
 8069168:  push edi
 8069169:  push esi
 806916a:  push ebx
 806916b:  sub esp, 0x28
 806916e:  test eax, eax
 8069170:  setne al
 8069173:  movzx eax, al
 8069176:  test eax, eax
 8069178:  mov DWORD PTR [ebp-0x20], eax
 806917b:  jne 8069328
 8069181:  mov DWORD PTR [ebp-0x1c], 0x80682d0
 8069188:  mov DWORD PTR [ebp-0x18], 0x0
 806918f:  mov edx, DWORD PTR gs:0x8
 8069196:  cmp DWORD PTR ds:0x80d2930, edx
 806919c:  je 80691c3
 806919e:  xor eax, eax
 80691a0:  mov ecx, 0x1
 80691a5:  cmp DWORD PTR gs:0xc, 0x0
 80691ad:  je 80691b0
 80691af:  cmpxchg DWORD PTR ds:0x80d2928, ecx
 80691b7:  jne 806a561
 80691bd:  mov DWORD PTR ds:0x80d2930, edx
 80691c3:  mov ebx, DWORD PTR ds:0x80d0f98
 80691c9:  add DWORD PTR ds:0x80d292c, 0x1
 80691d0:  mov esi, DWORD PTR ds:0x80d2934
 80691d6:  test ebx, ebx
 80691d8:  je 80692b1
 80691de:  mov eax, gs:0x8
 80691e4:  mov DWORD PTR [ebp-0x28], eax
 80691e7:  jmp 8069200
 80691e9:  lea esi, [esi]
 80691f0:  mov ebx, DWORD PTR ds:0x80d0f98
 80691f6:  test ebx, ebx
 80691f8:  je 80692b1
 80691fe:  mov esi, eax
 8069200:  cmp WORD PTR [ebx], 0x0
 8069204:  mov DWORD PTR ds:0x80d2938, ebx
 806920a:  js 806924c
 806920c:  mov edx, DWORD PTR [ebx+0x48]
 806920f:  mov edi, DWORD PTR [ebp-0x28]
 8069212:  cmp DWORD PTR [edx+0x8], edi
 8069215:  mov DWORD PTR [ebp-0x24], edx
 8069218:  je 8069245
 806921a:  mov edi, edx
 806921c:  xor edx, edx
 806921e:  mov ecx, 0x1
 8069223:  mov eax, edx
 8069225:  cmp DWORD PTR gs:0xc, 0x0
 806922d:  je 8069230
 806922f:  cmpxchg DWORD PTR [edi], ecx
 8069233:  jne 806a571
 8069239:  mov eax, DWORD PTR [ebx+0x48]
 806923c:  mov edx, DWORD PTR [ebp-0x28]
 806923f:  mov DWORD PTR [ebp-0x24], eax
 8069242:  mov DWORD PTR [eax+0x8], edx
 8069245:  mov edi, DWORD PTR [ebp-0x24]
 8069248:  add DWORD PTR [edi+0x4], 0x1
 806924c:  mov eax, DWORD PTR [ebx]
 806924e:  and eax, 0x208
 8069253:  cmp eax, 0x200
 8069258:  je 8069308
 806925e:  cmp WORD PTR [ebx], 0x0
 8069262:  js 806928f
 8069264:  mov edx, DWORD PTR [ebx+0x48]
 8069267:  mov eax, DWORD PTR [edx+0x4]
 806926a:  sub eax, 0x1
 806926d:  test eax, eax
 806926f:  mov DWORD PTR [edx+0x4], eax
 8069272:  jne 806928f
 8069274:  mov DWORD PTR [edx+0x8], 0x0
 806927b:  cmp DWORD PTR gs:0xc, 0x0
 8069283:  je 8069286
 8069285:  sub DWORD PTR [edx], 0x1
 8069289:  jne 806a57d
 806928f:  mov eax, ds:0x80d2934
 8069294:  mov DWORD PTR ds:0x80d2938, 0x0
 806929e:  cmp esi, eax
 80692a0:  jne 80691f0
 80692a6:  mov ebx, DWORD PTR [ebx+0x34]
 80692a9:  test ebx, ebx
 80692ab:  jne 80691fe
 80692b1:  mov eax, ds:0x80d292c
 80692b6:  sub eax, 0x1
 80692b9:  test eax, eax
 80692bb:  mov ds:0x80d292c, eax
 80692c0:  jne 80692e4
 80692c2:  mov DWORD PTR ds:0x80d2930, 0x0
 80692cc:  cmp DWORD PTR gs:0xc, 0x0
 80692d4:  je 80692d7
 80692d6:  sub DWORD PTR ds:0x80d2928, 0x1
 80692de:  jne 806a589
 80692e4:  mov eax, DWORD PTR [ebp-0x20]
 80692e7:  test eax, eax
 80692e9:  je 80692fe
 80692eb:  lea eax, [ebp-0x1c]
 80692ee:  mov DWORD PTR [esp+0x4], 0x0
 80692f6:  mov DWORD PTR [esp], eax
 80692f9:  call 0
 80692fe:  add esp, 0x28
 8069301:  pop ebx
 8069302:  pop esi
 8069303:  pop edi
 8069304:  pop ebp
 8069305:  ret
 8069306:  xchg ax, ax
 8069308:  mov eax, DWORD PTR [ebx+0x94]
 806930e:  mov DWORD PTR [esp+0x4], 0xffffffff
 8069316:  mov DWORD PTR [esp], ebx
 8069319:  call DWORD PTR [eax+0xc]
 806931c:  jmp 806925e
 8069321:  lea esi, [esi]
 8069328:  lea eax, [ebp-0x1c]
 806932b:  mov DWORD PTR [esp+0x8], 0x0
 8069333:  mov DWORD PTR [esp+0x4], 0x80682d0
 806933b:  mov DWORD PTR [esp], eax
 806933e:  call 0
 8069343:  jmp 806918f
 8069348:  nop
 8069349:  lea esi, [esi]

08069350 <_IO_flush_all_lockp>:
 8069350:  push ebp
 8069351:  mov eax, 0x0
 8069356:  mov ebp, esp
 8069358:  push edi
 8069359:  push esi
 806935a:  push ebx
 806935b:  sub esp, 0x2c
 806935e:  test eax, eax
 8069360:  setne al
 8069363:  movzx eax, al
 8069366:  test eax, eax
 8069368:  mov DWORD PTR [ebp-0x20], eax
 806936b:  jne 80695d8
 8069371:  mov DWORD PTR [ebp-0x1c], 0x80682d0
 8069378:  mov DWORD PTR [ebp-0x18], 0x0
 806937f:  mov eax, DWORD PTR [ebp+0x8]
 8069382:  test eax, eax
 8069384:  je 80693c1
 8069386:  mov edx, DWORD PTR gs:0x8
 806938d:  cmp DWORD PTR ds:0x80d2930, edx
 8069393:  je 80693ba
 8069395:  xor eax, eax
 8069397:  mov ecx, 0x1
 806939c:  cmp DWORD PTR gs:0xc, 0x0
 80693a4:  je 80693a7
 80693a6:  cmpxchg DWORD PTR ds:0x80d2928, ecx
 80693ae:  jne 806a599
 80693b4:  mov DWORD PTR ds:0x80d2930, edx
 80693ba:  add DWORD PTR ds:0x80d292c, 0x1
 80693c1:  mov ebx, DWORD PTR ds:0x80d0f98
 80693c7:  xor edi, edi
 80693c9:  mov esi, DWORD PTR ds:0x80d2934
 80693cf:  test ebx, ebx
 80693d1:  mov ecx, esi
 80693d3:  je 80694da
 80693d9:  mov eax, DWORD PTR [ebp+0x8]
 80693dc:  xor edi, edi
 80693de:  test eax, eax
 80693e0:  je 806952c
 80693e6:  mov eax, gs:0x8
 80693ec:  mov DWORD PTR [ebp-0x24], eax
 80693ef:  jmp 8069408
 80693f1:  lea esi, [esi]
 80693f8:  mov ebx, DWORD PTR ds:0x80d0f98
 80693fe:  test ebx, ebx
 8069400:  je 80694da
 8069406:  mov esi, eax
 8069408:  cmp WORD PTR [ebx], 0x0
 806940c:  mov DWORD PTR ds:0x80d2938, ebx
 8069412:  js 806944e
 8069414:  mov edx, DWORD PTR [ebx+0x48]
 8069417:  mov eax, DWORD PTR [ebp-0x24]
 806941a:  cmp DWORD PTR [edx+0x8], eax
 806941d:  je 806944a
 806941f:  mov DWORD PTR [ebp-0x2c], 0x0
 8069426:  mov ecx, 0x1
 806942b:  xor eax, eax
 806942d:  cmp DWORD PTR gs:0xc, 0x0
 8069435:  je 8069438
 8069437:  cmpxchg DWORD PTR [edx], ecx
 806943b:  jne 806a5a9
 8069441:  mov edx, DWORD PTR [ebx+0x48]
 8069444:  mov eax, DWORD PTR [ebp-0x24]
 8069447:  mov DWORD PTR [edx+0x8], eax
 806944a:  add DWORD PTR [edx+0x4], 0x1
 806944e:  mov eax, DWORD PTR [ebx+0x68]
 8069451:  test eax, eax
 8069453:  jle 80695c0
 8069459:  mov edx, DWORD PTR [ebx+0x58]
 806945c:  mov eax, DWORD PTR [edx+0x10]
 806945f:  cmp eax, DWORD PTR [edx+0xc]
 8069462:  jbe 8069486
 8069464:  mov eax, DWORD PTR [ebx+0x94]
 806946a:  mov DWORD PTR [esp+0x4], 0xffffffff
 8069472:  mov DWORD PTR [esp], ebx
 8069475:  call DWORD PTR [eax+0xc]
 8069478:  add eax, 0x1
 806947b:  setne al
 806947e:  movzx eax, al
 8069481:  sub eax, 0x1
 8069484:  or edi, eax
 8069486:  cmp WORD PTR [ebx], 0x0
 806948a:  js 80694b8
 806948c:  mov edx, DWORD PTR [ebx+0x48]
 806948f:  mov eax, DWORD PTR [edx+0x4]
 8069492:  sub eax, 0x1
 8069495:  test eax, eax
 8069497:  mov DWORD PTR [edx+0x4], eax
 806949a:  jne 80694b8
 806949c:  mov DWORD PTR [edx+0x8], 0x0
 80694a3:  cmp DWORD PTR gs:0xc, 0x0
 80694ab:  je 80694ae
 80694ad:  sub DWORD PTR [edx], 0x1
 80694b1:  jne 806a5b5
 80694b7:  nop
 80694b8:  mov eax, ds:0x80d2934
 80694bd:  mov DWORD PTR ds:0x80d2938, 0x0
 80694c7:  cmp esi, eax
 80694c9:  jne 80693f8
 80694cf:  mov ebx, DWORD PTR [ebx+0x34]
 80694d2:  test ebx, ebx
 80694d4:  jne 8069406
 80694da:  mov ecx, DWORD PTR [ebp+0x8]
 80694dd:  test ecx, ecx
 80694df:  je 80694f8
 80694e1:  mov eax, ds:0x80d292c
 80694e6:  sub eax, 0x1
 80694e9:  test eax, eax
 80694eb:  mov ds:0x80d292c, eax
 80694f0:  je 8069598
 80694f6:  xchg ax, ax
 80694f8:  mov edx, DWORD PTR [ebp-0x20]
 80694fb:  test edx, edx
 80694fd:  je 8069512
 80694ff:  lea eax, [ebp-0x1c]
 8069502:  mov DWORD PTR [esp+0x4], 0x0
 806950a:  mov DWORD PTR [esp], eax
 806950d:  call 0
 8069512:  add esp, 0x2c
 8069515:  mov eax, edi
 8069517:  pop ebx
 8069518:  pop esi
 8069519:  pop edi
 806951a:  pop ebp
 806951b:  ret
 806951c:  lea esi, [esi]
 8069520:  mov ebx, DWORD PTR ds:0x80d0f98
 8069526:  test ebx, ebx
 8069528:  je 80694f8
 806952a:  mov esi, ecx
 806952c:  mov eax, DWORD PTR [ebx+0x68]
 806952f:  mov DWORD PTR ds:0x80d2938, ebx
 8069535:  test eax, eax
 8069537:  jle 8069578
 8069539:  mov edx, DWORD PTR [ebx+0x58]
 806953c:  mov eax, DWORD PTR [edx+0x10]
 806953f:  cmp eax, DWORD PTR [edx+0xc]
 8069542:  jbe 8069563
 8069544:  mov eax, DWORD PTR [ebx+0x94]
 806954a:  mov DWORD PTR [esp+0x4], 0xffffffff
 8069552:  mov DWORD PTR [esp], ebx
 8069555:  call DWORD PTR [eax+0xc]
 8069558:  add eax, 0x1
 806955b:  je 8069588
 806955d:  mov ecx, DWORD PTR ds:0x80d2934
 8069563:  cmp esi, ecx
 8069565:  mov DWORD PTR ds:0x80d2938, 0x0
 806956f:  jne 8069520
 8069571:  mov ebx, DWORD PTR [ebx+0x34]
 8069574:  jmp 8069526
 8069576:  xchg ax, ax
 8069578:  mov eax, DWORD PTR [ebx+0x14]
 806957b:  cmp eax, DWORD PTR [ebx+0x10]
 806957e:  ja 8069544
 8069580:  jmp 8069563
 8069582:  lea esi, [esi]
 8069588:  mov edi, 0xffffffff
 806958d:  lea esi, [esi]
 8069590:  jmp 806955d
 8069592:  lea esi, [esi]
 8069598:  mov DWORD PTR ds:0x80d2930, 0x0
 80695a2:  cmp DWORD PTR gs:0xc, 0x0
 80695aa:  je 80695ad
 80695ac:  sub DWORD PTR ds:0x80d2928, 0x1
 80695b4:  jne 806a5c1
 80695ba:  jmp 80694f8
 80695bf:  nop
 80695c0:  mov eax, DWORD PTR [ebx+0x14]
 80695c3:  cmp eax, DWORD PTR [ebx+0x10]
 80695c6:  ja 8069464
 80695cc:  jmp 8069486
 80695d1:  lea esi, [esi]
 80695d8:  lea eax, [ebp-0x1c]
 80695db:  mov DWORD PTR [esp+0x8], 0x0
 80695e3:  mov DWORD PTR [esp+0x4], 0x80682d0
 80695eb:  mov DWORD PTR [esp], eax
 80695ee:  call 0
 80695f3:  jmp 806937f
 80695f8:  nop
 80695f9:  lea esi, [esi]

08069600 <_IO_cleanup>:
 8069600:  push ebp
 8069601:  mov ebp, esp
 8069603:  push edi
 8069604:  push esi
 8069605:  push ebx
 8069606:  sub esp, 0x14
 8069609:  mov DWORD PTR [esp], 0x0
 8069610:  call 8069350
 8069615:  mov ebx, DWORD PTR ds:0x80d0f98
 806961b:  test ebx, ebx
 806961d:  mov DWORD PTR [ebp-0x10], eax
 8069620:  je 8069732
 8069626:  mov eax, gs:0x8
 806962c:  mov DWORD PTR [ebp-0x14], eax
 806962f:  nop
 8069630:  mov eax, DWORD PTR [ebx]
 8069632:  mov esi, eax
 8069634:  and esi, 0x2
 8069637:  jne 8069720
 806963d:  and eax, 0x1008
 8069642:  cmp eax, 0x8
 8069645:  je 8069720
 806964b:  mov eax, DWORD PTR [ebx+0x68]
 806964e:  test eax, eax
 8069650:  je 8069720
 8069656:  mov edx, DWORD PTR [ebx+0x48]
 8069659:  xor edi, edi
 806965b:  mov ecx, DWORD PTR [ebp-0x14]
 806965e:  cmp ecx, DWORD PTR [edx+0x8]
 8069661:  je 806979d
 8069667:  mov eax, esi
 8069669:  mov ecx, 0x1
 806966e:  cmp DWORD PTR gs:0xc, 0x0
 8069676:  je 8069679
 8069678:  cmpxchg DWORD PTR [edx], ecx
 806967c:  xor edi, edi
 806967e:  test eax, eax
 8069680:  je 80696b8
 8069682:  call 80730a0
 8069687:  mov edx, DWORD PTR [ebx+0x48]
 806968a:  mov eax, DWORD PTR [ebp-0x14]
 806968d:  cmp eax, DWORD PTR [edx+0x8]
 8069690:  je 8069798
 8069696:  mov eax, esi
 8069698:  mov ecx, 0x1
 806969d:  cmp DWORD PTR gs:0xc, 0x0
 80696a5:  je 80696a8
 80696a7:  cmpxchg DWORD PTR [edx], ecx
 80696ab:  test eax, eax
 80696ad:  jne 8069780
 80696b3:  mov edi, 0x1
 80696b8:  mov eax, DWORD PTR [ebx+0x48]
 80696bb:  mov edx, DWORD PTR [ebp-0x14]
 80696be:  mov DWORD PTR [eax+0x4], 0x1
 80696c5:  mov DWORD PTR [eax+0x8], edx
 80696c8:  cmp BYTE PTR ds:0x80d293c, 0x0
 80696cf:  jne 80696f8
 80696d1:  mov eax, DWORD PTR [ebx]
 80696d3:  test al, 0x1
 80696d5:  jne 80696f8
 80696d7:  or eax, 0x1
 80696da:  mov edx, DWORD PTR [ebx+0x1c]
 80696dd:  mov DWORD PTR [ebx], eax
 80696df:  mov eax, ds:0x80d2940
 80696e4:  mov DWORD PTR [ebx+0x60], edx
 80696e7:  mov DWORD PTR [ebx+0x5c], eax
 80696ea:  mov eax, DWORD PTR [ebx+0x20]
 80696ed:  mov DWORD PTR ds:0x80d2940, ebx
 80696f3:  sub eax, edx
 80696f5:  mov DWORD PTR [ebx+0x64], eax
 80696f8:  mov eax, DWORD PTR [ebx+0x94]
 80696fe:  mov DWORD PTR [esp+0x8], 0x0
 8069706:  mov DWORD PTR [esp+0x4], 0x0
 806970e:  mov DWORD PTR [esp], ebx
 8069711:  call DWORD PTR [eax+0x2c]
 8069714:  cmp edi, 0x2
 8069717:  jne 8069740
 8069719:  lea esi, [esi]
 8069720:  mov DWORD PTR [ebx+0x68], 0xffffffff
 8069727:  mov ebx, DWORD PTR [ebx+0x34]
 806972a:  test ebx, ebx
 806972c:  jne 8069630
 8069732:  mov eax, DWORD PTR [ebp-0x10]
 8069735:  add esp, 0x14
 8069738:  pop ebx
 8069739:  pop esi
 806973a:  pop edi
 806973b:  pop ebp
 806973c:  ret
 806973d:  lea esi, [esi]
 8069740:  mov edx, DWORD PTR [ebx+0x48]
 8069743:  mov eax, DWORD PTR [edx+0x4]
 8069746:  sub eax, 0x1
 8069749:  test eax, eax
 806974b:  mov DWORD PTR [edx+0x4], eax
 806974e:  jne 8069720
 8069750:  mov DWORD PTR [edx+0x8], 0x0
 8069757:  cmp DWORD PTR gs:0xc, 0x0
 806975f:  je 8069762
 8069761:  sub DWORD PTR [edx], 0x1
 8069765:  jne 806a5d1
 806976b:  mov DWORD PTR [ebx+0x68], 0xffffffff
 8069772:  mov ebx, DWORD PTR [ebx+0x34]
 8069775:  test ebx, ebx
 8069777:  jne 8069630
 806977d:  jmp 8069732
 806977f:  nop
 8069780:  call 80730a0
 8069785:  mov edi, 0x2
 806978a:  lea esi, [esi]
 8069790:  jmp 80696c8
 8069795:  lea esi, [esi]
 8069798:  mov edi, 0x1
 806979d:  add DWORD PTR [edx+0x4], 0x1
 80697a1:  lea esi, [esi]
 80697a8:  jmp 80696c8
 80697ad:  lea esi, [esi]

080697b0 <_IO_flush_all>:
 80697b0:  push ebp
 80697b1:  mov ebp, esp
 80697b3:  sub esp, 0x4
 80697b6:  mov DWORD PTR [esp], 0x1
 80697bd:  call 8069350
 80697c2:  leave
 80697c3:  ret
 80697c4:  lea esi, [esi]
 80697ca:  lea edi, [edi]

080697d0 <_IO_link_in>:
 80697d0:  push ebp
 80697d1:  mov ebp, esp
 80697d3:  sub esp, 0x30
 80697d6:  mov DWORD PTR [ebp-0xc], ebx
 80697d9:  mov ebx, DWORD PTR [ebp+0x8]
 80697dc:  mov DWORD PTR [ebp-0x8], esi
 80697df:  mov DWORD PTR [ebp-0x4], edi
 80697e2:  mov eax, DWORD PTR [ebx]
 80697e4:  test al, al
 80697e6:  js 8069910
 80697ec:  or al, 0x80
 80697ee:  mov DWORD PTR [ebx], eax
 80697f0:  mov eax, 0x0
 80697f5:  test eax, eax
 80697f7:  setne al
 80697fa:  movzx edi, al
 80697fd:  test edi, edi
 80697ff:  jne 8069938
 8069805:  mov DWORD PTR [ebp-0x1c], 0x80682d0
 806980c:  mov DWORD PTR [ebp-0x18], 0x0
 8069813:  mov edx, DWORD PTR gs:0x8
 806981a:  cmp DWORD PTR ds:0x80d2930, edx
 8069820:  je 8069847
 8069822:  xor eax, eax
 8069824:  mov ecx, 0x1
 8069829:  cmp DWORD PTR gs:0xc, 0x0
 8069831:  je 8069834
 8069833:  cmpxchg DWORD PTR ds:0x80d2928, ecx
 806983b:  jne 806a5dd
 8069841:  mov DWORD PTR ds:0x80d2930, edx
 8069847:  add DWORD PTR ds:0x80d292c, 0x1
 806984e:  cmp WORD PTR [ebx], 0x0
 8069852:  mov DWORD PTR ds:0x80d2938, ebx
 8069858:  js 80698a0
 806985a:  mov eax, DWORD PTR [ebx+0x48]
 806985d:  mov esi, DWORD PTR gs:0x8
 8069864:  cmp DWORD PTR [eax+0x8], esi
 8069867:  mov DWORD PTR [ebp-0x20], eax
 806986a:  je 8069899
 806986c:  mov edx, eax
 806986e:  mov ecx, 0x1
 8069873:  mov DWORD PTR [ebp-0x24], 0x0
 806987a:  xor eax, eax
 806987c:  cmp DWORD PTR gs:0xc, 0x0
 8069884:  je 8069887
 8069886:  cmpxchg DWORD PTR [edx], ecx
 806988a:  jne 806a5ed
 8069890:  mov eax, DWORD PTR [ebx+0x48]
 8069893:  mov DWORD PTR [ebp-0x20], eax
 8069896:  mov DWORD PTR [eax+0x8], esi
 8069899:  mov edx, DWORD PTR [ebp-0x20]
 806989c:  add DWORD PTR [edx+0x4], 0x1
 80698a0:  mov eax, ds:0x80d0f98
 80698a5:  add DWORD PTR ds:0x80d2934, 0x1
 80698ac:  cmp WORD PTR [ebx], 0x0
 80698b0:  mov DWORD PTR ds:0x80d0f98, ebx
 80698b6:  mov DWORD PTR [ebx+0x34], eax
 80698b9:  js 80698cf
 80698bb:  mov edx, DWORD PTR [ebx+0x48]
 80698be:  mov eax, DWORD PTR [edx+0x4]
 80698c1:  sub eax, 0x1
 80698c4:  test eax, eax
 80698c6:  mov DWORD PTR [edx+0x4], eax
 80698c9:  je 8069958
 80698cf:  mov eax, ds:0x80d292c
 80698d4:  mov DWORD PTR ds:0x80d2938, 0x0
 80698de:  sub eax, 0x1
 80698e1:  test eax, eax
 80698e3:  mov ds:0x80d292c, eax
 80698e8:  jne 806990c
 80698ea:  mov DWORD PTR ds:0x80d2930, 0x0
 80698f4:  cmp DWORD PTR gs:0xc, 0x0
 80698fc:  je 80698ff
 80698fe:  sub DWORD PTR ds:0x80d2928, 0x1
 8069906:  jne 806a5f9
 806990c:  test edi, edi
 806990e:  jne 8069920
 8069910:  mov ebx, DWORD PTR [ebp-0xc]
 8069913:  mov esi, DWORD PTR [ebp-0x8]
 8069916:  mov edi, DWORD PTR [ebp-0x4]
 8069919:  mov esp, ebp
 806991b:  pop ebp
 806991c:  ret
 806991d:  lea esi, [esi]
 8069920:  lea eax, [ebp-0x1c]
 8069923:  mov DWORD PTR [esp+0x4], 0x0
 806992b:  mov DWORD PTR [esp], eax
 806992e:  call 0
 8069933:  jmp 8069910
 8069935:  lea esi, [esi]
 8069938:  lea eax, [ebp-0x1c]
 806993b:  mov DWORD PTR [esp+0x8], 0x0
 8069943:  mov DWORD PTR [esp+0x4], 0x80682d0
 806994b:  mov DWORD PTR [esp], eax
 806994e:  call 0
 8069953:  jmp 8069813
 8069958:  mov DWORD PTR [edx+0x8], 0x0
 806995f:  cmp DWORD PTR gs:0xc, 0x0
 8069967:  je 806996a
 8069969:  sub DWORD PTR [edx], 0x1
 806996d:  jne 806a609
 8069973:  jmp 80698cf
 8069978:  nop
 8069979:  lea esi, [esi]

08069980 <_IO_un_link>:
 8069980:  push ebp
 8069981:  mov ebp, esp
 8069983:  push edi
 8069984:  push esi
 8069985:  push ebx
 8069986:  sub esp, 0x24
 8069989:  mov ebx, DWORD PTR [ebp+0x8]
 806998c:  cmp BYTE PTR [ebx], 0x0
 806998f:  jns 8069aea
 8069995:  mov eax, 0x0
 806999a:  test eax, eax
 806999c:  setne al
 806999f:  movzx edi, al
 80699a2:  test edi, edi
 80699a4:  jne 8069b18
 80699aa:  mov DWORD PTR [ebp-0x1c], 0x80682d0
 80699b1:  mov DWORD PTR [ebp-0x18], 0x0
 80699b8:  mov edx, DWORD PTR gs:0x8
 80699bf:  cmp DWORD PTR ds:0x80d2930, edx
 80699c5:  je 80699ec
 80699c7:  xor eax, eax
 80699c9:  mov ecx, 0x1
 80699ce:  cmp DWORD PTR gs:0xc, 0x0
 80699d6:  je 80699d9
 80699d8:  cmpxchg DWORD PTR ds:0x80d2928, ecx
 80699e0:  jne 806a615
 80699e6:  mov DWORD PTR ds:0x80d2930, edx
 80699ec:  add DWORD PTR ds:0x80d292c, 0x1
 80699f3:  cmp WORD PTR [ebx], 0x0
 80699f7:  mov DWORD PTR ds:0x80d2938, ebx
 80699fd:  js 8069a45
 80699ff:  mov eax, DWORD PTR [ebx+0x48]
 8069a02:  mov esi, DWORD PTR gs:0x8
 8069a09:  cmp DWORD PTR [eax+0x8], esi
 8069a0c:  mov DWORD PTR [ebp-0x20], eax
 8069a0f:  je 8069a3e
 8069a11:  mov edx, eax
 8069a13:  mov ecx, 0x1
 8069a18:  mov DWORD PTR [ebp-0x24], 0x0
 8069a1f:  xor eax, eax
 8069a21:  cmp DWORD PTR gs:0xc, 0x0
 8069a29:  je 8069a2c
 8069a2b:  cmpxchg DWORD PTR [edx], ecx
 8069a2f:  jne 806a625
 8069a35:  mov eax, DWORD PTR [ebx+0x48]
 8069a38:  mov DWORD PTR [ebp-0x20], eax
 8069a3b:  mov DWORD PTR [eax+0x8], esi
 8069a3e:  mov edx, DWORD PTR [ebp-0x20]
 8069a41:  add DWORD PTR [edx+0x4], 0x1
 8069a45:  mov edx, DWORD PTR ds:0x80d0f98
 8069a4b:  test edx, edx
 8069a4d:  je 8069a8a
 8069a4f:  cmp ebx, edx
 8069a51:  je 8069b78
 8069a57:  mov eax, DWORD PTR [edx+0x34]
 8069a5a:  test eax, eax
 8069a5c:  je 8069a8a
 8069a5e:  cmp ebx, eax
 8069a60:  jne 8069a7e
 8069a62:  lea esi, [esi]
 8069a68:  jmp 8069b58
 8069a6d:  lea esi, [esi]
 8069a70:  cmp ebx, eax
 8069a72:  lea esi, [esi]
 8069a78:  je 8069b60
 8069a7e:  lea edx, [eax+0x34]
 8069a81:  mov eax, DWORD PTR [eax+0x34]
 8069a84:  test eax, eax
 8069a86:  xchg ax, ax
 8069a88:  jne 8069a70
 8069a8a:  mov eax, DWORD PTR [ebx]
 8069a8c:  and al, 0x7f
 8069a8e:  test ax, ax
 8069a91:  mov DWORD PTR [ebx], eax
 8069a93:  js 8069aa9
 8069a95:  mov edx, DWORD PTR [ebx+0x48]
 8069a98:  mov eax, DWORD PTR [edx+0x4]
 8069a9b:  sub eax, 0x1
 8069a9e:  test eax, eax
 8069aa0:  mov DWORD PTR [edx+0x4], eax
 8069aa3:  je 8069b38
 8069aa9:  mov eax, ds:0x80d292c
 8069aae:  mov DWORD PTR ds:0x80d2938, 0x0
 8069ab8:  sub eax, 0x1
 8069abb:  test eax, eax
 8069abd:  mov ds:0x80d292c, eax
 8069ac2:  jne 8069ae6
 8069ac4:  mov DWORD PTR ds:0x80d2930, 0x0
 8069ace:  cmp DWORD PTR gs:0xc, 0x0
 8069ad6:  je 8069ad9
 8069ad8:  sub DWORD PTR ds:0x80d2928, 0x1
 8069ae0:  jne 806a631
 8069ae6:  test edi, edi
 8069ae8:  jne 8069af8
 8069aea:  add esp, 0x24
 8069aed:  pop ebx
 8069aee:  pop esi
 8069aef:  pop edi
 8069af0:  pop ebp
 8069af1:  ret
 8069af2:  lea esi, [esi]
 8069af8:  lea eax, [ebp-0x1c]
 8069afb:  mov DWORD PTR [esp+0x4], 0x0
 8069b03:  mov DWORD PTR [esp], eax
 8069b06:  call 0
 8069b0b:  add esp, 0x24
 8069b0e:  pop ebx
 8069b0f:  pop esi
 8069b10:  pop edi
 8069b11:  pop ebp
 8069b12:  ret
 8069b13:  nop
 8069b14:  lea esi, [esi]
 8069b18:  lea eax, [ebp-0x1c]
 8069b1b:  mov DWORD PTR [esp+0x8], 0x0
 8069b23:  mov DWORD PTR [esp+0x4], 0x80682d0
 8069b2b:  mov DWORD PTR [esp], eax
 8069b2e:  call 0
 8069b33:  jmp 80699b8
 8069b38:  mov DWORD PTR [edx+0x8], 0x0
 8069b3f:  cmp DWORD PTR gs:0xc, 0x0
 8069b47:  je 8069b4a
 8069b49:  sub DWORD PTR [edx], 0x1
 8069b4d:  jne 806a641
 8069b53:  jmp 8069aa9
 8069b58:  add edx, 0x34
 8069b5b:  nop
 8069b5c:  lea esi, [esi]
 8069b60:  mov eax, DWORD PTR [ebx+0x34]
 8069b63:  add DWORD PTR ds:0x80d2934, 0x1
 8069b6a:  mov DWORD PTR [edx], eax
 8069b6c:  jmp 8069a8a
 8069b71:  lea esi, [esi]
 8069b78:  mov eax, DWORD PTR [ebx+0x34]
 8069b7b:  add DWORD PTR ds:0x80d2934, 0x1
 8069b82:  mov ds:0x80d0f98, eax
 8069b87:  jmp 8069a8a
 8069b8c:  lea esi, [esi]

08069b90 <_IO_no_init>:
 8069b90:  push ebp
 8069b91:  mov ebp, esp
 8069b93:  mov eax, DWORD PTR [ebp+0xc]
 8069b96:  mov edx, DWORD PTR [ebp+0x8]
 8069b99:  push ebx
 8069b9a:  mov ebx, DWORD PTR [ebp+0x10]
 8069b9d:  mov ecx, DWORD PTR [ebp+0x14]
 8069ba0:  or eax, 0xfbad0000
 8069ba5:  mov DWORD PTR [edx], eax
 8069ba7:  mov eax, DWORD PTR [edx+0x48]
 8069baa:  mov DWORD PTR [edx+0x3c], 0x0
 8069bb1:  mov DWORD PTR [edx+0x1c], 0x0
 8069bb8:  mov DWORD PTR [edx+0x20], 0x0
 8069bbf:  test eax, eax
 8069bc1:  mov DWORD PTR [edx+0xc], 0x0
 8069bc8:  mov DWORD PTR [edx+0x4], 0x0
 8069bcf:  mov DWORD PTR [edx+0x8], 0x0
 8069bd6:  mov DWORD PTR [edx+0x10], 0x0
 8069bdd:  mov DWORD PTR [edx+0x14], 0x0
 8069be4:  mov DWORD PTR [edx+0x18], 0x0
 8069beb:  mov DWORD PTR [edx+0x34], 0x0
 8069bf2:  mov DWORD PTR [edx+0x24], 0x0
 8069bf9:  mov DWORD PTR [edx+0x28], 0x0
 8069c00:  mov DWORD PTR [edx+0x2c], 0x0
 8069c07:  mov DWORD PTR [edx+0x30], 0x0
 8069c0e:  mov WORD PTR [edx+0x44], 0x0
 8069c14:  je 8069c2a
 8069c16:  mov DWORD PTR [eax], 0x0
 8069c1c:  mov DWORD PTR [eax+0x4], 0x0
 8069c23:  mov DWORD PTR [eax+0x8], 0x0
 8069c2a:  test ebx, ebx
 8069c2c:  mov DWORD PTR [edx+0x68], ebx
 8069c2f:  js 8069c89
 8069c31:  mov eax, DWORD PTR [ebp+0x18]
 8069c34:  mov DWORD PTR [edx+0x58], ecx
 8069c37:  mov DWORD PTR [ecx+0x18], 0x0
 8069c3e:  mov DWORD PTR [ecx+0x1c], 0x0
 8069c45:  mov DWORD PTR [ecx+0x8], 0x0
 8069c4c:  mov DWORD PTR [ecx], 0x0
 8069c52:  mov DWORD PTR [ecx+0x4], 0x0
 8069c59:  mov DWORD PTR [ecx+0xc], 0x0
 8069c60:  mov DWORD PTR [ecx+0x10], 0x0
 8069c67:  mov DWORD PTR [ecx+0x14], 0x0
 8069c6e:  mov DWORD PTR [ecx+0x20], 0x0
 8069c75:  mov DWORD PTR [ecx+0x24], 0x0
 8069c7c:  mov DWORD PTR [ecx+0x28], 0x0
 8069c83:  mov DWORD PTR [ecx+0xb8], eax
 8069c89:  mov DWORD PTR [edx+0x5c], 0x0
 8069c90:  pop ebx
 8069c91:  pop ebp
 8069c92:  ret
 8069c93:  lea esi, [esi]
 8069c99:  lea edi, [edi]

08069ca0 <_IO_init>:
 8069ca0:  push ebp
 8069ca1:  mov ebp, esp
 8069ca3:  mov eax, DWORD PTR [ebp+0xc]
 8069ca6:  mov edx, DWORD PTR [ebp+0x8]
 8069ca9:  or eax, 0xfbad0000
 8069cae:  mov DWORD PTR [edx], eax
 8069cb0:  mov eax, DWORD PTR [edx+0x48]
 8069cb3:  mov DWORD PTR [edx+0x3c], 0x0
 8069cba:  mov DWORD PTR [edx+0x1c], 0x0
 8069cc1:  mov DWORD PTR [edx+0x20], 0x0
 8069cc8:  test eax, eax
 8069cca:  mov DWORD PTR [edx+0xc], 0x0
 8069cd1:  mov DWORD PTR [edx+0x4], 0x0
 8069cd8:  mov DWORD PTR [edx+0x8], 0x0
 8069cdf:  mov DWORD PTR [edx+0x10], 0x0
 8069ce6:  mov DWORD PTR [edx+0x14], 0x0
 8069ced:  mov DWORD PTR [edx+0x18], 0x0
 8069cf4:  mov DWORD PTR [edx+0x34], 0x0
 8069cfb:  mov DWORD PTR [edx+0x24], 0x0
 8069d02:  mov DWORD PTR [edx+0x28], 0x0
 8069d09:  mov DWORD PTR [edx+0x2c], 0x0
 8069d10:  mov DWORD PTR [edx+0x30], 0x0
 8069d17:  mov WORD PTR [edx+0x44], 0x0
 8069d1d:  je 8069d33
 8069d1f:  mov DWORD PTR [eax], 0x0
 8069d25:  mov DWORD PTR [eax+0x4], 0x0
 8069d2c:  mov DWORD PTR [eax+0x8], 0x0
 8069d33:  mov DWORD PTR [edx+0x68], 0xffffffff
 8069d3a:  mov DWORD PTR [edx+0x5c], 0x0
 8069d41:  pop ebp
 8069d42:  ret
 8069d43:  lea esi, [esi]
 8069d49:  lea edi, [edi]

08069d50 <_IO_unsave_markers>:
 8069d50:  push ebp
 8069d51:  mov ebp, esp
 8069d53:  push ebx
 8069d54:  sub esp, 0x4
 8069d57:  mov ebx, DWORD PTR [ebp+0x8]
 8069d5a:  mov eax, DWORD PTR [ebx+0x30]
 8069d5d:  test eax, eax
 8069d5f:  je 8069d68
 8069d61:  mov DWORD PTR [ebx+0x30], 0x0
 8069d68:  mov ecx, DWORD PTR [ebx+0x24]
 8069d6b:  test ecx, ecx
 8069d6d:  je 8069db2
 8069d6f:  mov eax, DWORD PTR [ebx]
 8069d71:  test ah, 0x1
 8069d74:  je 8069d95
 8069d76:  and ah, 0xfe
 8069d79:  mov edx, DWORD PTR [ebx+0x2c]
 8069d7c:  mov DWORD PTR [ebx], eax
 8069d7e:  mov eax, DWORD PTR [ebx+0x8]
 8069d81:  mov DWORD PTR [ebx+0x4], ecx
 8069d84:  mov DWORD PTR [ebx+0x8], edx
 8069d87:  mov DWORD PTR [ebx+0x2c], eax
 8069d8a:  mov eax, DWORD PTR [ebx+0xc]
 8069d8d:  mov DWORD PTR [ebx+0xc], ecx
 8069d90:  mov DWORD PTR [ebx+0x24], eax
 8069d93:  mov ecx, eax
 8069d95:  mov DWORD PTR [esp], ecx
 8069d98:  call 804b4a0
 8069d9d:  mov DWORD PTR [ebx+0x24], 0x0
 8069da4:  mov DWORD PTR [ebx+0x2c], 0x0
 8069dab:  mov DWORD PTR [ebx+0x28], 0x0
 8069db2:  add esp, 0x4
 8069db5:  pop ebx
 8069db6:  pop ebp
 8069db7:  ret
 8069db8:  nop
 8069db9:  lea esi, [esi]

08069dc0 <_IO_default_doallocate>:
 8069dc0:  push ebp
 8069dc1:  mov ebp, esp
 8069dc3:  push esi
 8069dc4:  push ebx
 8069dc5:  sub esp, 0x18
 8069dc8:  mov esi, DWORD PTR [ebp+0x8]
 8069dcb:  mov DWORD PTR [esp+0x14], 0x0
 8069dd3:  mov DWORD PTR [esp+0x10], 0xffffffff
 8069ddb:  mov DWORD PTR [esp+0xc], 0x22
 8069de3:  mov DWORD PTR [esp+0x8], 0x3
 8069deb:  mov DWORD PTR [esp+0x4], 0x2000
 8069df3:  mov DWORD PTR [esp], 0x0
 8069dfa:  call 8050000
 8069dff:  mov ebx, eax
 8069e01:  mov eax, 0xffffffff
 8069e06:  cmp ebx, 0xff
 8069e09:  je 8069e2b
 8069e0b:  mov edx, DWORD PTR [esi+0x1c]
 8069e0e:  test edx, edx
 8069e10:  je 8069e17
 8069e12:  test BYTE PTR [esi], 0x1
 8069e15:  je 8069e38
 8069e17:  and DWORD PTR [esi], 0xfe
 8069e1a:  lea eax, [ebx+0x2000]
 8069e20:  mov DWORD PTR [esi+0x20], eax
 8069e23:  mov eax, 0x1
 8069e28:  mov DWORD PTR [esi+0x1c], ebx
 8069e2b:  add esp, 0x18
 8069e2e:  pop ebx
 8069e2f:  pop esi
 8069e30:  pop ebp
 8069e31:  ret
 8069e32:  lea esi, [esi]
 8069e38:  mov eax, DWORD PTR [esi+0x20]
 8069e3b:  mov DWORD PTR [esp], edx
 8069e3e:  add eax, 0xfff
 8069e43:  sub eax, edx
 8069e45:  and eax, 0xfffff000
 8069e4a:  mov DWORD PTR [esp+0x4], eax
 8069e4e:  call 8050050
 8069e53:  jmp 8069e17
 8069e55:  lea esi, [esi]
 8069e59:  lea edi, [edi]

08069e60 <_IO_default_setbuf>:
 8069e60:  push ebp
 8069e61:  mov ebp, esp
 8069e63:  push esi
 8069e64:  push ebx
 8069e65:  sub esp, 0x8
 8069e68:  mov ebx, DWORD PTR [ebp+0x8]
 8069e6b:  mov esi, DWORD PTR [ebp+0xc]
 8069e6e:  mov eax, DWORD PTR [ebx+0x94]
 8069e74:  mov DWORD PTR [esp], ebx
 8069e77:  call DWORD PTR [eax+0x30]
 8069e7a:  add eax, 0x1
 8069e7d:  je 8069f10
 8069e83:  test esi, esi
 8069e85:  je 8069e92
 8069e87:  mov edx, DWORD PTR [ebp+0x10]
 8069e8a:  test edx, edx
 8069e8c:  lea esi, [esi]
 8069e90:  jne 8069ee8
 8069e92:  mov eax, DWORD PTR [ebx]
 8069e94:  mov edx, DWORD PTR [ebx+0x1c]
 8069e97:  or eax, 0x2
 8069e9a:  test edx, edx
 8069e9c:  mov DWORD PTR [ebx], eax
 8069e9e:  je 8069ea4
 8069ea0:  test al, 0x1
 8069ea2:  je 8069f20
 8069ea4:  or DWORD PTR [ebx], 0x1
 8069ea7:  lea eax, [ebx+0x47]
 8069eaa:  mov DWORD PTR [ebx+0x1c], eax
 8069ead:  lea eax, [ebx+0x48]
 8069eb0:  mov DWORD PTR [ebx+0x20], eax
 8069eb3:  mov DWORD PTR [ebx+0x18], 0x0
 8069eba:  mov eax, ebx
 8069ebc:  mov DWORD PTR [ebx+0x14], 0x0
 8069ec3:  mov DWORD PTR [ebx+0x10], 0x0
 8069eca:  mov DWORD PTR [ebx+0x8], 0x0
 8069ed1:  mov DWORD PTR [ebx+0x4], 0x0
 8069ed8:  mov DWORD PTR [ebx+0xc], 0x0
 8069edf:  add esp, 0x8
 8069ee2:  pop ebx
 8069ee3:  pop esi
 8069ee4:  pop ebp
 8069ee5:  ret
 8069ee6:  xchg ax, ax
 8069ee8:  mov ecx, DWORD PTR [ebx]
 8069eea:  mov edx, DWORD PTR [ebx+0x1c]
 8069eed:  mov eax, ecx
 8069eef:  and eax, 0xfd
 8069ef2:  test edx, edx
 8069ef4:  mov DWORD PTR [ebx], eax
 8069ef6:  je 8069efd
 8069ef8:  and ecx, 0x1
 8069efb:  je 8069f40
 8069efd:  mov edx, DWORD PTR [ebp+0x10]
 8069f00:  mov DWORD PTR [ebx+0x1c], esi
 8069f03:  or DWORD PTR [ebx], 0x1
 8069f06:  lea eax, [esi+edx]
 8069f09:  mov DWORD PTR [ebx+0x20], eax
 8069f0c:  jmp 8069eb3
 8069f0e:  xchg ax, ax
 8069f10:  xor ebx, ebx
 8069f12:  add esp, 0x8
 8069f15:  mov eax, ebx
 8069f17:  pop ebx
 8069f18:  pop esi
 8069f19:  pop ebp
 8069f1a:  ret
 8069f1b:  nop
 8069f1c:  lea esi, [esi]
 8069f20:  mov eax, DWORD PTR [ebx+0x20]
 8069f23:  mov DWORD PTR [esp], edx
 8069f26:  add eax, 0xfff
 8069f2b:  sub eax, edx
 8069f2d:  and eax, 0xfffff000
 8069f32:  mov DWORD PTR [esp+0x4], eax
 8069f36:  call 8050050
 8069f3b:  jmp 8069ea4
 8069f40:  mov eax, DWORD PTR [ebx+0x20]
 8069f43:  mov DWORD PTR [esp], edx
 8069f46:  add eax, 0xfff
 8069f4b:  sub eax, edx
 8069f4d:  and eax, 0xfffff000
 8069f52:  mov DWORD PTR [esp+0x4], eax
 8069f56:  call 8050050
 8069f5b:  jmp 8069efd
 8069f5d:  lea esi, [esi]

08069f60 <_IO_default_xsgetn>:
 8069f60:  push ebp
 8069f61:  mov ebp, esp
 8069f63:  push edi
 8069f64:  push esi
 8069f65:  push ebx
 8069f66:  sub esp, 0x20
 8069f69:  mov edx, DWORD PTR [ebp+0x10]
 8069f6c:  mov ecx, DWORD PTR [ebp+0x8]
 8069f6f:  mov eax, DWORD PTR [ebp+0xc]
 8069f72:  mov DWORD PTR [ebp-0x20], edx
 8069f75:  mov edx, DWORD PTR [ecx+0x8]
 8069f78:  mov DWORD PTR [ebp-0x1c], eax
 8069f7b:  mov ebx, DWORD PTR [ebp+0x8]
 8069f7e:  mov ecx, DWORD PTR [ebx+0x4]
 8069f81:  cmp ecx, edx
 8069f83:  jae 8069fd3
 8069f85:  mov ebx, DWORD PTR [ebp-0x20]
 8069f88:  mov eax, edx
 8069f8a:  sub eax, ecx
 8069f8c:  cmp ebx, eax
 8069f8e:  jbe 8069f92
 8069f90:  mov ebx, eax
 8069f92:  cmp ebx, 0x14
 8069f95:  ja 806a0b8
 8069f9b:  test ebx, ebx
 8069f9d:  je 8069fd0
 8069f9f:  lea eax, [ebx-0x1]
 8069fa2:  cmp ebx, 0x9
 8069fa5:  mov DWORD PTR [ebp-0x14], eax
 8069fa8:  ja 806a110
 8069fae:  xor edx, edx
 8069fb0:  movzx eax, BYTE PTR [ecx+edx]
 8069fb4:  mov edi, DWORD PTR [ebp-0x1c]
 8069fb7:  mov BYTE PTR [edi+edx], al
 8069fba:  add edx, 0x1
 8069fbd:  cmp edx, ebx
 8069fbf:  jne 8069fb0
 8069fc1:  mov edx, DWORD PTR [ebp+0x8]
 8069fc4:  lea eax, [ecx+ebx]
 8069fc7:  add DWORD PTR [ebp-0x1c], ebx
 8069fca:  mov DWORD PTR [edx+0x4], eax
 8069fcd:  lea esi, [esi]
 8069fd0:  sub DWORD PTR [ebp-0x20], ebx
 8069fd3:  mov esi, DWORD PTR [ebp-0x20]
 8069fd6:  test esi, esi
 8069fd8:  je 806a0a6
 8069fde:  mov ecx, DWORD PTR [ebp+0x8]
 8069fe1:  mov eax, DWORD PTR [ecx+0x68]
 8069fe4:  test eax, eax
 8069fe6:  jne 806a098
 8069fec:  mov DWORD PTR [ecx+0x68], 0xffffffff
 8069ff3:  mov ebx, DWORD PTR [ebp+0x8]
 8069ff6:  mov eax, DWORD PTR [ebx]
 8069ff8:  test ah, 0x8
 8069ffb:  jne 806a1cd
 806a001:  mov esi, DWORD PTR [ebp+0x8]
 806a004:  mov edx, DWORD PTR [esi+0x8]
 806a007:  cmp DWORD PTR [esi+0x4], edx
 806a00a:  mov ecx, edx
 806a00c:  jb 8069f7b
 806a012:  mov eax, DWORD PTR [esi]
 806a014:  test ah, 0x1
 806a017:  jne 806a0e0
 806a01d:  mov edi, DWORD PTR [ebp+0x8]
 806a020:  mov ebx, DWORD PTR [edi+0x30]
 806a023:  test ebx, ebx
 806a025:  jne 806a1b3
 806a02b:  mov ecx, DWORD PTR [edi+0x24]
 806a02e:  test ecx, ecx
 806a030:  je 806a078
 806a032:  mov eax, DWORD PTR [edi]
 806a034:  test ah, 0x1
 806a037:  je 806a058
 806a039:  and ah, 0xfe
 806a03c:  mov edx, DWORD PTR [edi+0x2c]
 806a03f:  mov DWORD PTR [edi], eax
 806a041:  mov eax, DWORD PTR [edi+0x8]
 806a044:  mov DWORD PTR [edi+0x4], ecx
 806a047:  mov DWORD PTR [edi+0x8], edx
 806a04a:  mov DWORD PTR [edi+0x2c], eax
 806a04d:  mov eax, DWORD PTR [edi+0xc]
 806a050:  mov DWORD PTR [edi+0xc], ecx
 806a053:  mov DWORD PTR [edi+0x24], eax
 806a056:  mov ecx, eax
 806a058:  mov DWORD PTR [esp], ecx
 806a05b:  call 804b4a0
 806a060:  mov esi, DWORD PTR [ebp+0x8]
 806a063:  mov DWORD PTR [esi+0x24], 0x0
 806a06a:  mov DWORD PTR [esi+0x2c], 0x0
 806a071:  mov DWORD PTR [esi+0x28], 0x0
 806a078:  mov edi, DWORD PTR [ebp+0x8]
 806a07b:  mov eax, DWORD PTR [edi+0x94]
 806a081:  mov DWORD PTR [esp], edi
 806a084:  call DWORD PTR [eax+0x10]
 806a087:  add eax, 0x1
 806a08a:  je 806a0a6
 806a08c:  mov eax, DWORD PTR [ebp+0x8]
 806a08f:  mov edx, DWORD PTR [eax+0x8]
 806a092:  jmp 8069f7b
 806a097:  nop
 806a098:  add eax, 0x1
 806a09b:  nop
 806a09c:  lea esi, [esi]
 806a0a0:  je 8069ff3
 806a0a6:  mov edx, DWORD PTR [ebp-0x20]
 806a0a9:  sub DWORD PTR [ebp+0x10], edx
 806a0ac:  mov eax, DWORD PTR [ebp+0x10]
 806a0af:  add esp, 0x20
 806a0b2:  pop ebx
 806a0b3:  pop esi
 806a0b4:  pop edi
 806a0b5:  pop ebp
 806a0b6:  ret
 806a0b7:  nop
 806a0b8:  mov esi, DWORD PTR [ebp-0x1c]
 806a0bb:  mov DWORD PTR [esp+0x8], ebx
 806a0bf:  mov DWORD PTR [esp+0x4], ecx
 806a0c3:  mov DWORD PTR [esp], esi
 806a0c6:  call 806c310
 806a0cb:  mov edi, DWORD PTR [ebp+0x8]
 806a0ce:  sub DWORD PTR [ebp-0x20], ebx
 806a0d1:  add DWORD PTR [edi+0x4], ebx
 806a0d4:  mov DWORD PTR [ebp-0x1c], eax
 806a0d7:  jmp 8069fd3
 806a0dc:  lea esi, [esi]
 806a0e0:  and ah, 0xfe
 806a0e3:  mov ecx, DWORD PTR [esi+0x2c]
 806a0e6:  mov DWORD PTR [esi], eax
 806a0e8:  mov eax, DWORD PTR [esi+0x24]
 806a0eb:  mov DWORD PTR [esi+0x2c], edx
 806a0ee:  mov edx, DWORD PTR [esi+0xc]
 806a0f1:  mov DWORD PTR [esi+0x8], ecx
 806a0f4:  cmp eax, ecx
 806a0f6:  mov DWORD PTR [esi+0x24], edx
 806a0f9:  mov edx, ecx
 806a0fb:  mov DWORD PTR [esi+0xc], eax
 806a0fe:  mov DWORD PTR [esi+0x4], eax
 806a101:  jae 806a01d
 806a107:  jmp 8069f7b
 806a10c:  lea esi, [esi]
 806a110:  mov eax, DWORD PTR [ebp-0x1c]
 806a113:  or eax, ecx
 806a115:  test al, 0x3
 806a117:  jne 8069fae
 806a11d:  lea eax, [ecx+0x4]
 806a120:  cmp DWORD PTR [ebp-0x1c], eax
 806a123:  jbe 806a1a0
 806a125:  mov esi, ebx
 806a127:  mov edi, DWORD PTR [ebp-0x1c]
 806a12a:  shr esi, 0x2
 806a12d:  lea edx, [esi*4]
 806a134:  mov DWORD PTR [ebp-0x18], edx
 806a137:  mov eax, DWORD PTR [ebp-0x18]
 806a13a:  xor edx, edx
 806a13c:  mov DWORD PTR [ebp-0x10], ecx
 806a13f:  test eax, eax
 806a141:  je 806a172
 806a143:  nop
 806a144:  lea esi, [esi]
 806a148:  mov eax, DWORD PTR [ecx+edx*4]
 806a14b:  mov edi, DWORD PTR [ebp-0x1c]
 806a14e:  mov DWORD PTR [edi+edx*4], eax
 806a151:  add edx, 0x1
 806a154:  cmp edx, esi
 806a156:  jb 806a148
 806a158:  mov eax, DWORD PTR [ebp-0x18]
 806a15b:  mov edi, DWORD PTR [ebp-0x1c]
 806a15e:  sub DWORD PTR [ebp-0x14], eax
 806a161:  add edi, DWORD PTR [ebp-0x18]
 806a164:  add eax, ecx
 806a166:  cmp ebx, DWORD PTR [ebp-0x18]
 806a169:  mov DWORD PTR [ebp-0x10], eax
 806a16c:  je 8069fc1
 806a172:  xor edx, edx
 806a174:  lea esi, [esi]
 806a178:  mov esi, DWORD PTR [ebp-0x10]
 806a17b:  movzx eax, BYTE PTR [esi+edx]
 806a17f:  mov BYTE PTR [edi+edx], al
 806a182:  add edx, 0x1
 806a185:  cmp DWORD PTR [ebp-0x14], edx
 806a188:  jns 806a178
 806a18a:  mov edx, DWORD PTR [ebp+0x8]
 806a18d:  lea eax, [ecx+ebx]
 806a190:  add DWORD PTR [ebp-0x1c], ebx
 806a193:  mov DWORD PTR [edx+0x4], eax
 806a196:  jmp 8069fd0
 806a19b:  nop
 806a19c:  lea esi, [esi]
 806a1a0:  mov eax, DWORD PTR [ebp-0x1c]
 806a1a3:  add eax, 0x4
 806a1a6:  cmp ecx, eax
 806a1a8:  jbe 8069fae
 806a1ae:  jmp 806a125
 806a1b3:  mov edx, ecx
 806a1b5:  mov eax, edi
 806a1b7:  call 8068c40
 806a1bc:  test eax, eax
 806a1be:  xchg ax, ax
 806a1c0:  je 806a078
 806a1c6:  xchg ax, ax
 806a1c8:  jmp 806a0a6
 806a1cd:  mov DWORD PTR [esp], ebx
 806a1d0:  call 80683e0
 806a1d5:  add eax, 0x1
 806a1d8:  jne 806a001
 806a1de:  xchg ax, ax
 806a1e0:  jmp 806a0a6
 806a1e5:  lea esi, [esi]
 806a1e9:  lea edi, [edi]

0806a1f0 <_IO_init_marker>:
 806a1f0:  push ebp
 806a1f1:  mov ebp, esp
 806a1f3:  push esi
 806a1f4:  push ebx
 806a1f5:  sub esp, 0x8
 806a1f8:  mov ebx, DWORD PTR [ebp+0xc]
 806a1fb:  mov esi, DWORD PTR [ebp+0x8]
 806a1fe:  mov eax, DWORD PTR [ebx]
 806a200:  mov DWORD PTR [esi+0x4], ebx
 806a203:  test ah, 0x8
 806a206:  mov ecx, eax
 806a208:  jne 806a240
 806a20a:  test ah, 0x1
 806a20d:  jne 806a228
 806a20f:  mov eax, DWORD PTR [ebx+0x4]
 806a212:  sub eax, DWORD PTR [ebx+0xc]
 806a215:  mov DWORD PTR [esi+0x8], eax
 806a218:  mov eax, DWORD PTR [ebx+0x30]
 806a21b:  mov DWORD PTR [esi], eax
 806a21d:  mov DWORD PTR [ebx+0x30], esi
 806a220:  add esp, 0x8
 806a223:  pop ebx
 806a224:  pop esi
 806a225:  pop ebp
 806a226:  ret
 806a227:  nop
 806a228:  mov eax, DWORD PTR [ebx+0x4]
 806a22b:  sub eax, DWORD PTR [ebx+0x8]
 806a22e:  mov DWORD PTR [esi+0x8], eax
 806a231:  mov eax, DWORD PTR [ebx+0x30]
 806a234:  mov DWORD PTR [esi], eax
 806a236:  mov DWORD PTR [ebx+0x30], esi
 806a239:  add esp, 0x8
 806a23c:  pop ebx
 806a23d:  pop esi
 806a23e:  pop ebp
 806a23f:  ret
 806a240:  mov edx, DWORD PTR [ebx+0x14]
 806a243:  cmp edx, DWORD PTR [ebx+0x10]
 806a246:  ja 806a278
 806a248:  test ch, 0x1
 806a24b:  jne 806a270
 806a24d:  mov eax, DWORD PTR [ebx+0x1c]
 806a250:  cmp edx, DWORD PTR [ebx+0x8]
 806a253:  mov DWORD PTR [ebx+0xc], eax
 806a256:  jbe 806a25b
 806a258:  mov DWORD PTR [ebx+0x8], edx
 806a25b:  mov eax, ecx
 806a25d:  and ah, 0xf7
 806a260:  mov DWORD PTR [ebx+0x4], edx
 806a263:  mov DWORD PTR [ebx+0x18], edx
 806a266:  mov DWORD PTR [ebx+0x14], edx
 806a269:  mov DWORD PTR [ebx+0x10], edx
 806a26c:  mov DWORD PTR [ebx], eax
 806a26e:  jmp 806a20a
 806a270:  mov eax, DWORD PTR [ebx+0x28]
 806a273:  mov DWORD PTR [ebx+0xc], eax
 806a276:  jmp 806a25b
 806a278:  mov eax, DWORD PTR [ebx+0x94]
 806a27e:  mov DWORD PTR [esp+0x4], 0xffffffff
 806a286:  mov DWORD PTR [esp], ebx
 806a289:  call DWORD PTR [eax+0xc]
 806a28c:  add eax, 0x1
 806a28f:  je 806a298
 806a291:  mov ecx, DWORD PTR [ebx]
 806a293:  mov edx, DWORD PTR [ebx+0x14]
 806a296:  jmp 806a248
 806a298:  mov eax, DWORD PTR [ebx]
 806a29a:  lea esi, [esi]
 806a2a0:  jmp 806a20a
 806a2a5:  lea esi, [esi]
 806a2a9:  lea edi, [edi]

0806a2b0 <_IO_default_finish>:
 806a2b0:  push ebp
 806a2b1:  mov ebp, esp
 806a2b3:  push edi
 806a2b4:  push esi
 806a2b5:  push ebx
 806a2b6:  sub esp, 0x24
 806a2b9:  mov ebx, DWORD PTR [ebp+0x8]
 806a2bc:  mov edx, DWORD PTR [ebx+0x1c]
 806a2bf:  test edx, edx
 806a2c1:  je 806a2cc
 806a2c3:  test BYTE PTR [ebx], 0x1
 806a2c6:  je 806a468
 806a2cc:  mov eax, DWORD PTR [ebx+0x30]
 806a2cf:  test eax, eax
 806a2d1:  je 806a2e5
 806a2d3:  nop
 806a2d4:  lea esi, [esi]
 806a2d8:  mov DWORD PTR [eax+0x4], 0x0
 806a2df:  mov eax, DWORD PTR [eax]
 806a2e1:  test eax, eax
 806a2e3:  jne 806a2d8
 806a2e5:  mov eax, DWORD PTR [ebx+0x24]
 806a2e8:  test eax, eax
 806a2ea:  je 806a2fb
 806a2ec:  mov DWORD PTR [esp], eax
 806a2ef:  call 804b4a0
 806a2f4:  mov DWORD PTR [ebx+0x24], 0x0
 806a2fb:  cmp BYTE PTR [ebx], 0x0
 806a2fe:  jns 806a45a
 806a304:  mov eax, 0x0
 806a309:  test eax, eax
 806a30b:  setne al
 806a30e:  movzx edi, al
 806a311:  test edi, edi
 806a313:  jne 806a4b8
 806a319:  mov DWORD PTR [ebp-0x1c], 0x80682d0
 806a320:  mov DWORD PTR [ebp-0x18], 0x0
 806a327:  mov edx, DWORD PTR gs:0x8
 806a32e:  cmp edx, DWORD PTR ds:0x80d2930
 806a334:  je 806a35b
 806a336:  xor eax, eax
 806a338:  mov ecx, 0x1
 806a33d:  cmp DWORD PTR gs:0xc, 0x0
 806a345:  je 806a348
 806a347:  cmpxchg DWORD PTR ds:0x80d2928, ecx
 806a34f:  jne 806a64d
 806a355:  mov DWORD PTR ds:0x80d2930, edx
 806a35b:  add DWORD PTR ds:0x80d292c, 0x1
 806a362:  cmp WORD PTR [ebx], 0x0
 806a366:  mov DWORD PTR ds:0x80d2938, ebx
 806a36c:  js 806a3b4
 806a36e:  mov eax, DWORD PTR [ebx+0x48]
 806a371:  mov esi, DWORD PTR gs:0x8
 806a378:  cmp esi, DWORD PTR [eax+0x8]
 806a37b:  mov DWORD PTR [ebp-0x20], eax
 806a37e:  je 806a3ad
 806a380:  mov edx, eax
 806a382:  mov ecx, 0x1
 806a387:  mov DWORD PTR [ebp-0x24], 0x0
 806a38e:  xor eax, eax
 806a390:  cmp DWORD PTR gs:0xc, 0x0
 806a398:  je 806a39b
 806a39a:  cmpxchg DWORD PTR [edx], ecx
 806a39e:  jne 806a65d
 806a3a4:  mov eax, DWORD PTR [ebx+0x48]
 806a3a7:  mov DWORD PTR [ebp-0x20], eax
 806a3aa:  mov DWORD PTR [eax+0x8], esi
 806a3ad:  mov edx, DWORD PTR [ebp-0x20]
 806a3b0:  add DWORD PTR [edx+0x4], 0x1
 806a3b4:  mov edx, DWORD PTR ds:0x80d0f98
 806a3ba:  test edx, edx
 806a3bc:  je 806a3fa
 806a3be:  cmp ebx, edx
 806a3c0:  je 806a511
 806a3c6:  mov eax, DWORD PTR [edx+0x34]
 806a3c9:  test eax, eax
 806a3cb:  je 806a3fa
 806a3cd:  cmp ebx, eax
 806a3cf:  nop
 806a3d0:  jne 806a3ee
 806a3d2:  lea esi, [esi]
 806a3d8:  jmp 806a4f8
 806a3dd:  lea esi, [esi]
 806a3e0:  cmp ebx, eax
 806a3e2:  lea esi, [esi]
 806a3e8:  je 806a500
 806a3ee:  lea edx, [eax+0x34]
 806a3f1:  mov eax, DWORD PTR [eax+0x34]
 806a3f4:  test eax, eax
 806a3f6:  xchg ax, ax
 806a3f8:  jne 806a3e0
 806a3fa:  mov eax, DWORD PTR [ebx]
 806a3fc:  and al, 0x7f
 806a3fe:  test ax, ax
 806a401:  mov DWORD PTR [ebx], eax
 806a403:  js 806a419
 806a405:  mov edx, DWORD PTR [ebx+0x48]
 806a408:  mov eax, DWORD PTR [edx+0x4]
 806a40b:  sub eax, 0x1
 806a40e:  test eax, eax
 806a410:  mov DWORD PTR [edx+0x4], eax
 806a413:  je 806a4d8
 806a419:  mov eax, ds:0x80d292c
 806a41e:  mov DWORD PTR ds:0x80d2938, 0x0
 806a428:  sub eax, 0x1
 806a42b:  test eax, eax
 806a42d:  mov ds:0x80d292c, eax
 806a432:  jne 806a456
 806a434:  mov DWORD PTR ds:0x80d2930, 0x0
 806a43e:  cmp DWORD PTR gs:0xc, 0x0
 806a446:  je 806a449
 806a448:  sub DWORD PTR ds:0x80d2928, 0x1
 806a450:  jne 806a669
 806a456:  test edi, edi
 806a458:  jne 806a498
 806a45a:  add esp, 0x24
 806a45d:  pop ebx
 806a45e:  pop esi
 806a45f:  pop edi
 806a460:  pop ebp
 806a461:  ret
 806a462:  lea esi, [esi]
 806a468:  mov eax, DWORD PTR [ebx+0x20]
 806a46b:  mov DWORD PTR [esp], edx
 806a46e:  add eax, 0xfff
 806a473:  sub eax, edx
 806a475:  and eax, 0xfffff000
 806a47a:  mov DWORD PTR [esp+0x4], eax
 806a47e:  call 8050050
 806a483:  mov DWORD PTR [ebx+0x20], 0x0
 806a48a:  mov DWORD PTR [ebx+0x1c], 0x0
 806a491:  jmp 806a2cc
 806a496:  xchg ax, ax
 806a498:  lea eax, [ebp-0x1c]
 806a49b:  mov DWORD PTR [esp+0x4], 0x0
 806a4a3:  mov DWORD PTR [esp], eax
 806a4a6:  call 0
 806a4ab:  add esp, 0x24
 806a4ae:  pop ebx
 806a4af:  pop esi
 806a4b0:  pop edi
 806a4b1:  pop ebp
 806a4b2:  ret
 806a4b3:  nop
 806a4b4:  lea esi, [esi]
 806a4b8:  lea eax, [ebp-0x1c]
 806a4bb:  mov DWORD PTR [esp+0x8], 0x0
 806a4c3:  mov DWORD PTR [esp+0x4], 0x80682d0
 806a4cb:  mov DWORD PTR [esp], eax
 806a4ce:  call 0
 806a4d3:  jmp 806a327
 806a4d8:  mov DWORD PTR [edx+0x8], 0x0
 806a4df:  cmp DWORD PTR gs:0xc, 0x0
 806a4e7:  je 806a4ea
 806a4e9:  sub DWORD PTR [edx], 0x1
 806a4ed:  jne 806a679
 806a4f3:  jmp 806a419
 806a4f8:  add edx, 0x34
 806a4fb:  nop
 806a4fc:  lea esi, [esi]
 806a500:  mov eax, DWORD PTR [ebx+0x34]
 806a503:  add DWORD PTR ds:0x80d2934, 0x1
 806a50a:  mov DWORD PTR [edx], eax
 806a50c:  jmp 806a3fa
 806a511:  mov eax, DWORD PTR [ebx+0x34]
 806a514:  add DWORD PTR ds:0x80d2934, 0x1
 806a51b:  mov ds:0x80d0f98, eax
 806a520:  jmp 806a3fa

0806a525 <_L_unlock_26>:
 806a525:  lea eax, [edx]
 806a527:  call 8050260
 806a52c:  jmp 806830d

0806a531 <_L_unlock_40>:
 806a531:  lea eax, ds:0x80d2928
 806a537:  call 8050260
 806a53c:  jmp 8068340

0806a541 <_L_lock_981>:
 806a541:  lea ecx, ds:0x80d2928
 806a547:  call 8050230
 806a54c:  jmp 8068901

0806a551 <_L_unlock_1009>:
 806a551:  lea eax, ds:0x80d2928
 806a557:  call 8050260
 806a55c:  jmp 8068946

0806a561 <_L_lock_2249>:
 806a561:  lea ecx, ds:0x80d2928
 806a567:  call 8050230
 806a56c:  jmp 80691bd

0806a571 <_L_lock_2311>:
 806a571:  lea ecx, [edi]
 806a573:  call 8050230
 806a578:  jmp 8069239

0806a57d <_L_unlock_2349>:
 806a57d:  lea eax, [edx]
 806a57f:  call 8050260
 806a584:  jmp 806928f

0806a589 <_L_unlock_2378>:
 806a589:  lea eax, ds:0x80d2928
 806a58f:  call 8050260
 806a594:  jmp 80692e4

0806a599 <_L_lock_2485>:
 806a599:  lea ecx, ds:0x80d2928
 806a59f:  call 8050230
 806a5a4:  jmp 80693b4

0806a5a9 <_L_lock_2555>:
 806a5a9:  lea ecx, [edx]
 806a5ab:  call 8050230
 806a5b0:  jmp 8069441

0806a5b5 <_L_unlock_2613>:
 806a5b5:  lea eax, [edx]
 806a5b7:  call 8050260
 806a5bc:  jmp 80694b7

0806a5c1 <_L_unlock_2758>:
 806a5c1:  lea eax, ds:0x80d2928
 806a5c7:  call 8050260
 806a5cc:  jmp 80695ba

0806a5d1 <_L_unlock_2961>:
 806a5d1:  lea eax, [edx]
 806a5d3:  call 8050260
 806a5d8:  jmp 806976b

0806a5dd <_L_lock_3059>:
 806a5dd:  lea ecx, ds:0x80d2928
 806a5e3:  call 8050230
 806a5e8:  jmp 8069841

0806a5ed <_L_lock_3094>:
 806a5ed:  lea ecx, [edx]
 806a5ef:  call 8050230
 806a5f4:  jmp 8069890

0806a5f9 <_L_unlock_3142>:
 806a5f9:  lea eax, ds:0x80d2928
 806a5ff:  call 8050260
 806a604:  jmp 806990c

0806a609 <_L_unlock_3198>:
 806a609:  lea eax, [edx]
 806a60b:  call 8050260
 806a610:  jmp 8069973

0806a615 <_L_lock_3250>:
 806a615:  lea ecx, ds:0x80d2928
 806a61b:  call 8050230
 806a620:  jmp 80699e6

0806a625 <_L_lock_3285>:
 806a625:  lea ecx, [edx]
 806a627:  call 8050230
 806a62c:  jmp 8069a35

0806a631 <_L_unlock_3367>:
 806a631:  lea eax, ds:0x80d2928
 806a637:  call 8050260
 806a63c:  jmp 8069ae6

0806a641 <_L_unlock_3438>:
 806a641:  lea eax, [edx]
 806a643:  call 8050260
 806a648:  jmp 8069b53

0806a64d <_L_lock_4504>:
 806a64d:  lea ecx, ds:0x80d2928
 806a653:  call 8050230
 806a658:  jmp 806a355

0806a65d <_L_lock_4539>:
 806a65d:  lea ecx, [edx]
 806a65f:  call 8050230
 806a664:  jmp 806a3a4

0806a669 <_L_unlock_4621>:
 806a669:  lea eax, ds:0x80d2928
 806a66f:  call 8050260
 806a674:  jmp 806a456

0806a679 <_L_unlock_4723>:
 806a679:  lea eax, [edx]
 806a67b:  call 8050260
 806a680:  jmp 806a4f3
 806a685:  nop
 806a686:  nop
 806a687:  nop
 806a688:  nop
 806a689:  nop
 806a68a:  nop
 806a68b:  nop
 806a68c:  nop
 806a68d:  nop
 806a68e:  nop
 806a68f:  nop

0806a690 <_IO_str_underflow>:
 806a690:  push ebp
 806a691:  mov ebp, esp
 806a693:  mov edx, DWORD PTR [ebp+0x8]
 806a696:  mov ecx, DWORD PTR [edx+0x14]
 806a699:  cmp ecx, DWORD PTR [edx+0x8]
 806a69c:  jbe 806a6a1
 806a69e:  mov DWORD PTR [edx+0x8], ecx
 806a6a1:  mov eax, DWORD PTR [edx]
 806a6a3:  and eax, 0xc00
 806a6a8:  cmp eax, 0xc00
 806a6ad:  je 806a6c8
 806a6af:  mov ecx, DWORD PTR [edx+0x4]
 806a6b2:  mov eax, 0xffffffff
 806a6b7:  cmp ecx, DWORD PTR [edx+0x8]
 806a6ba:  jae 806a6bf
 806a6bc:  movzx eax, BYTE PTR [ecx]
 806a6bf:  pop ebp
 806a6c0:  ret
 806a6c1:  lea esi, [esi]
 806a6c8:  mov eax, DWORD PTR [edx+0x18]
 806a6cb:  and DWORD PTR [edx], 0xfffff7ff
 806a6d1:  mov DWORD PTR [edx+0x4], ecx
 806a6d4:  mov DWORD PTR [edx+0x14], eax
 806a6d7:  jmp 806a6af
 806a6d9:  lea esi, [esi]

0806a6e0 <_IO_str_count>:
 806a6e0:  push ebp
 806a6e1:  mov ebp, esp
 806a6e3:  mov edx, DWORD PTR [ebp+0x8]
 806a6e6:  mov ecx, DWORD PTR [edx+0x14]
 806a6e9:  mov eax, DWORD PTR [edx+0x8]
 806a6ec:  cmp ecx, eax
 806a6ee:  jbe 806a6f2
 806a6f0:  mov eax, ecx
 806a6f2:  sub eax, DWORD PTR [edx+0xc]
 806a6f5:  pop ebp
 806a6f6:  ret
 806a6f7:  mov esi, esi
 806a6f9:  lea edi, [edi]

0806a700 <_IO_str_finish>:
 806a700:  push ebp
 806a701:  mov ebp, esp
 806a703:  push ebx
 806a704:  sub esp, 0x4
 806a707:  mov ebx, DWORD PTR [ebp+0x8]
 806a70a:  mov eax, DWORD PTR [ebx+0x1c]
 806a70d:  test eax, eax
 806a70f:  je 806a71f
 806a711:  test BYTE PTR [ebx], 0x1
 806a714:  jne 806a71f
 806a716:  mov DWORD PTR [esp], eax
 806a719:  call DWORD PTR [ebx+0x9c]
 806a71f:  mov DWORD PTR [ebx+0x1c], 0x0
 806a726:  mov DWORD PTR [ebp+0xc], 0x0
 806a72d:  mov DWORD PTR [ebp+0x8], ebx
 806a730:  add esp, 0x4
 806a733:  pop ebx
 806a734:  pop ebp
 806a735:  jmp 806a2b0
 806a73a:  lea esi, [esi]

0806a740 <_IO_str_pbackfail>:
 806a740:  push ebp
 806a741:  mov ebp, esp
 806a743:  mov edx, DWORD PTR [ebp+0x8]
 806a746:  mov eax, DWORD PTR [ebp+0xc]
 806a749:  test BYTE PTR [edx], 0x8
 806a74c:  jne 806a760
 806a74e:  mov DWORD PTR [ebp+0xc], eax
 806a751:  mov DWORD PTR [ebp+0x8], edx
 806a754:  pop ebp
 806a755:  jmp 8068e10
 806a75a:  lea esi, [esi]
 806a760:  cmp eax, 0xff
 806a763:  je 806a74e
 806a765:  mov eax, 0xffffffff
 806a76a:  pop ebp
 806a76b:  ret
 806a76c:  lea esi, [esi]

0806a770 <enlarge_userbuf>:
 806a770:  push ebp
 806a771:  mov ebp, esp
 806a773:  sub esp, 0x30
 806a776:  mov DWORD PTR [ebp-0xc], ebx
 806a779:  mov ebx, eax
 806a77b:  mov DWORD PTR [ebp-0x8], esi
 806a77e:  mov DWORD PTR [ebp-0x4], edi
 806a781:  mov esi, DWORD PTR [eax+0x1c]
 806a784:  mov eax, DWORD PTR [eax+0x20]
 806a787:  mov DWORD PTR [ebp-0x1c], edx
 806a78a:  xor edx, edx
 806a78c:  mov DWORD PTR [ebp-0x20], ecx
 806a78f:  sub eax, esi
 806a791:  cmp eax, DWORD PTR [ebp-0x1c]
 806a794:  jge 806a7ac
 806a796:  mov eax, DWORD PTR [ebx+0x18]
 806a799:  mov edx, DWORD PTR [ebx+0x10]
 806a79c:  test BYTE PTR [ebx], 0x1
 806a79f:  mov DWORD PTR [ebp-0x18], eax
 806a7a2:  mov DWORD PTR [ebp-0x14], edx
 806a7a5:  je 806a7c0
 806a7a7:  mov edx, 0x1
 806a7ac:  mov ebx, DWORD PTR [ebp-0xc]
 806a7af:  mov eax, edx
 806a7b1:  mov esi, DWORD PTR [ebp-0x8]
 806a7b4:  mov edi, DWORD PTR [ebp-0x4]
 806a7b7:  mov esp, ebp
 806a7b9:  pop ebp
 806a7ba:  ret
 806a7bb:  nop
 806a7bc:  lea esi, [esi]
 806a7c0:  mov eax, DWORD PTR [ebp-0x1c]
 806a7c3:  add eax, 0x64
 806a7c6:  mov DWORD PTR [ebp-0x10], eax
 806a7c9:  mov DWORD PTR [esp], eax
 806a7cc:  call DWORD PTR [ebx+0x98]
 806a7d2:  test eax, eax
 806a7d4:  mov edi, eax
 806a7d6:  je 806a7a7
 806a7d8:  test esi, esi
 806a7da:  je 806a802
 806a7dc:  mov eax, DWORD PTR [ebx+0x20]
 806a7df:  sub eax, DWORD PTR [ebx+0x1c]
 806a7e2:  mov DWORD PTR [esp+0x4], esi
 806a7e6:  mov DWORD PTR [esp], edi
 806a7e9:  mov DWORD PTR [esp+0x8], eax
 806a7ed:  call 804efc0
 806a7f2:  mov DWORD PTR [esp], esi
 806a7f5:  call DWORD PTR [ebx+0x9c]
 806a7fb:  mov DWORD PTR [ebx+0x1c], 0x0
 806a802:  mov edx, DWORD PTR [ebp-0x10]
 806a805:  mov DWORD PTR [esp+0xc], 0x1
 806a80d:  mov DWORD PTR [esp+0x4], edi
 806a811:  mov DWORD PTR [esp], ebx
 806a814:  lea eax, [edi+edx]
 806a817:  mov DWORD PTR [esp+0x8], eax
 806a81b:  call 8068980
 806a820:  mov edx, DWORD PTR [ebp+0x8]
 806a823:  test edx, edx
 806a825:  je 806a8c0
 806a82b:  mov eax, edi
 806a82d:  sub eax, esi
 806a82f:  add DWORD PTR [ebx+0x10], eax
 806a832:  mov eax, edi
 806a834:  sub eax, esi
 806a836:  add DWORD PTR [ebx+0x14], eax
 806a839:  mov eax, edi
 806a83b:  sub eax, esi
 806a83d:  add DWORD PTR [ebx+0x18], eax
 806a840:  mov eax, edi
 806a842:  sub eax, esi
 806a844:  add DWORD PTR [ebx+0x4], eax
 806a847:  mov eax, DWORD PTR [ebx+0x20]
 806a84a:  mov DWORD PTR [ebx+0xc], edi
 806a84d:  mov DWORD PTR [ebx+0x8], eax
 806a850:  mov ecx, DWORD PTR [ebp-0x18]
 806a853:  sub ecx, DWORD PTR [ebp-0x14]
 806a856:  mov edx, ecx
 806a858:  sar edx, 0x1f
 806a85b:  cmp DWORD PTR [ebp-0x20], edx
 806a85e:  jg 806a890
 806a860:  jl 806a867
 806a862:  cmp DWORD PTR [ebp-0x1c], ecx
 806a865:  jae 806a890
 806a867:  mov DWORD PTR [esp+0xc], 0x80b1c2e
 806a86f:  mov DWORD PTR [esp+0x8], 0xef
 806a877:  mov DWORD PTR [esp+0x4], 0x80b1c14
 806a87f:  mov DWORD PTR [esp], 0x80b1c1d
 806a886:  call 8051490
 806a88b:  nop
 806a88c:  lea esi, [esi]
 806a890:  mov eax, DWORD PTR [ebp+0x8]
 806a893:  test eax, eax
 806a895:  jne 806a8f0
 806a897:  sub DWORD PTR [ebp-0x1c], ecx
 806a89a:  mov edx, DWORD PTR [ebp-0x1c]
 806a89d:  add ecx, DWORD PTR [ebx+0x10]
 806a8a0:  mov DWORD PTR [esp+0x4], 0x0
 806a8a8:  mov DWORD PTR [esp+0x8], edx
 806a8ac:  mov DWORD PTR [esp], ecx
 806a8af:  call 804ef50
 806a8b4:  xor edx, edx
 806a8b6:  jmp 806a7ac
 806a8bb:  nop
 806a8bc:  lea esi, [esi]
 806a8c0:  mov eax, edi
 806a8c2:  sub eax, esi
 806a8c4:  add DWORD PTR [ebx+0xc], eax
 806a8c7:  mov eax, edi
 806a8c9:  sub eax, esi
 806a8cb:  add DWORD PTR [ebx+0x4], eax
 806a8ce:  mov eax, edi
 806a8d0:  sub eax, esi
 806a8d2:  add DWORD PTR [ebx+0x8], eax
 806a8d5:  mov eax, edi
 806a8d7:  sub eax, esi
 806a8d9:  add DWORD PTR [ebx+0x14], eax
 806a8dc:  mov eax, DWORD PTR [ebx+0x20]
 806a8df:  mov DWORD PTR [ebx+0x10], edi
 806a8e2:  mov DWORD PTR [ebx+0x18], eax
 806a8e5:  jmp 806a850
 806a8ea:  lea esi, [esi]
 806a8f0:  sub DWORD PTR [ebp-0x1c], ecx
 806a8f3:  mov eax, DWORD PTR [ebp-0x1c]
 806a8f6:  add ecx, DWORD PTR [ebx+0xc]
 806a8f9:  mov DWORD PTR [esp+0x4], 0x0
 806a901:  mov DWORD PTR [esp+0x8], eax
 806a905:  mov DWORD PTR [esp], ecx
 806a908:  call 804ef50
 806a90d:  xor edx, edx
 806a90f:  jmp 806a7ac
 806a914:  lea esi, [esi]
 806a91a:  lea edi, [edi]

0806a920 <_IO_str_seekoff>:
 806a920:  push ebp
 806a921:  mov ebp, esp
 806a923:  sub esp, 0x1c
 806a926:  mov DWORD PTR [ebp-0xc], ebx
 806a929:  mov ebx, DWORD PTR [ebp+0x18]
 806a92c:  mov DWORD PTR [ebp-0x8], esi
 806a92f:  mov esi, DWORD PTR [ebp+0x8]
 806a932:  mov DWORD PTR [ebp-0x4], edi
 806a935:  test ebx, ebx
 806a937:  jne 806a9a8
 806a939:  mov eax, DWORD PTR [esi]
 806a93b:  test ah, 0x4
 806a93e:  je 806a990
 806a940:  and eax, 0x800
 806a945:  mov edx, DWORD PTR [esi+0x14]
 806a948:  cmp eax, 0x1
 806a94b:  mov edi, DWORD PTR [esi+0xc]
 806a94e:  sbb ebx, ebx
 806a950:  add ebx, 0x2
 806a953:  cmp eax, 0x1
 806a956:  mov eax, DWORD PTR [esi+0x8]
 806a959:  sbb ecx, ecx
 806a95b:  and ecx, 0x1
 806a95e:  cmp edx, eax
 806a960:  ja 806a9ba
 806a962:  sub eax, edi
 806a964:  test ecx, ecx
 806a966:  mov DWORD PTR [ebp-0x10], eax
 806a969:  mov edx, 0xffffffff
 806a96e:  mov eax, 0xffffffff
 806a973:  jne 806a9d0
 806a975:  and ebx, 0x2
 806a978:  jne 806aa20
 806a97e:  mov ebx, DWORD PTR [ebp-0xc]
 806a981:  mov esi, DWORD PTR [ebp-0x8]
 806a984:  mov edi, DWORD PTR [ebp-0x4]
 806a987:  mov esp, ebp
 806a989:  pop ebp
 806a98a:  ret
 806a98b:  nop
 806a98c:  lea esi, [esi]
 806a990:  test al, 0x8
 806a992:  je 806a9c0
 806a994:  mov eax, DWORD PTR [esi+0x4]
 806a997:  sub eax, DWORD PTR [esi+0xc]
 806a99a:  mov edx, eax
 806a99c:  sar edx, 0x1f
 806a99f:  jmp 806a97e
 806a9a1:  lea esi, [esi]
 806a9a8:  mov edx, DWORD PTR [esi+0x14]
 806a9ab:  mov ecx, ebx
 806a9ad:  mov eax, DWORD PTR [esi+0x8]
 806a9b0:  and ecx, 0x1
 806a9b3:  mov edi, DWORD PTR [esi+0xc]
 806a9b6:  cmp edx, eax
 806a9b8:  jbe 806a962
 806a9ba:  mov eax, edx
 806a9bc:  jmp 806a962
 806a9be:  xchg ax, ax
 806a9c0:  mov eax, DWORD PTR [esi+0x14]
 806a9c3:  sub eax, DWORD PTR [esi+0x10]
 806a9c6:  mov edx, eax
 806a9c8:  sar edx, 0x1f
 806a9cb:  jmp 806a97e
 806a9cd:  lea esi, [esi]
 806a9d0:  cmp DWORD PTR [ebp+0x14], 0x1
 806a9d4:  je 806aa87
 806a9da:  cmp DWORD PTR [ebp+0x14], 0x2
 806a9de:  jne 806a9ee
 806a9e0:  mov eax, DWORD PTR [ebp-0x10]
 806a9e3:  mov edx, eax
 806a9e5:  sar edx, 0x1f
 806a9e8:  add DWORD PTR [ebp+0xc], eax
 806a9eb:  adc DWORD PTR [ebp+0x10], edx
 806a9ee:  mov edi, DWORD PTR [ebp+0x10]
 806a9f1:  test edi, edi
 806a9f3:  js 806aa78
 806a9f9:  mov edx, DWORD PTR [ebp+0xc]
 806a9fc:  cmp DWORD PTR [ebp-0x10], edx
 806a9ff:  jl 806aa5d
 806aa01:  mov eax, DWORD PTR [ebp+0xc]
 806aa04:  add eax, DWORD PTR [esi+0xc]
 806aa07:  mov edx, DWORD PTR [ebp+0x10]
 806aa0a:  mov DWORD PTR [esi+0x4], eax
 806aa0d:  mov eax, DWORD PTR [ebp-0x10]
 806aa10:  add eax, DWORD PTR [esi+0xc]
 806aa13:  mov DWORD PTR [esi+0x8], eax
 806aa16:  mov eax, DWORD PTR [ebp+0xc]
 806aa19:  jmp 806a975
 806aa1e:  xchg ax, ax
 806aa20:  cmp DWORD PTR [ebp+0x14], 0x1
 806aa24:  je 806aa9c
 806aa26:  cmp DWORD PTR [ebp+0x14], 0x2
 806aa2a:  jne 806aa3a
 806aa2c:  mov eax, DWORD PTR [ebp-0x10]
 806aa2f:  mov edx, eax
 806aa31:  sar edx, 0x1f
 806aa34:  add DWORD PTR [ebp+0xc], eax
 806aa37:  adc DWORD PTR [ebp+0x10], edx
 806aa3a:  mov ecx, DWORD PTR [ebp+0x10]
 806aa3d:  test ecx, ecx
 806aa3f:  js 806aa78
 806aa41:  mov edx, DWORD PTR [ebp+0xc]
 806aa44:  cmp DWORD PTR [ebp-0x10], edx
 806aa47:  jl 806aaaf
 806aa49:  mov eax, DWORD PTR [ebp+0xc]
 806aa4c:  add eax, DWORD PTR [esi+0x10]
 806aa4f:  mov edx, DWORD PTR [ebp+0x10]
 806aa52:  mov DWORD PTR [esi+0x14], eax
 806aa55:  mov eax, DWORD PTR [ebp+0xc]
 806aa58:  jmp 806a97e
 806aa5d:  mov edx, DWORD PTR [ebp+0xc]
 806aa60:  mov eax, esi
 806aa62:  mov ecx, DWORD PTR [ebp+0x10]
 806aa65:  mov DWORD PTR [esp], 0x1
 806aa6c:  call 806a770
 806aa71:  test eax, eax
 806aa73:  je 806aa01
 806aa75:  lea esi, [esi]
 806aa78:  mov eax, 0xffffffff
 806aa7d:  mov edx, 0xffffffff
 806aa82:  jmp 806a97e
 806aa87:  mov eax, DWORD PTR [esi+0x4]
 806aa8a:  sub eax, edi
 806aa8c:  mov edx, eax
 806aa8e:  sar edx, 0x1f
 806aa91:  add DWORD PTR [ebp+0xc], eax
 806aa94:  adc DWORD PTR [ebp+0x10], edx
 806aa97:  jmp 806a9ee
 806aa9c:  mov eax, DWORD PTR [esi+0x14]
 806aa9f:  sub eax, DWORD PTR [esi+0x10]
 806aaa2:  mov edx, eax
 806aaa4:  sar edx, 0x1f
 806aaa7:  add DWORD PTR [ebp+0xc], eax
 806aaaa:  adc DWORD PTR [ebp+0x10], edx
 806aaad:  jmp 806aa3a
 806aaaf:  mov edx, DWORD PTR [ebp+0xc]
 806aab2:  mov eax, esi
 806aab4:  mov ecx, DWORD PTR [ebp+0x10]
 806aab7:  mov DWORD PTR [esp], 0x0
 806aabe:  call 806a770
 806aac3:  test eax, eax
 806aac5:  je 806aa49
 806aac7:  jmp 806aa78
 806aac9:  lea esi, [esi]

0806aad0 <_IO_str_overflow>:
 806aad0:  push ebp
 806aad1:  xor eax, eax
 806aad3:  mov ebp, esp
 806aad5:  sub esp, 0x2c
 806aad8:  mov DWORD PTR [ebp-0x8], esi
 806aadb:  mov esi, DWORD PTR [ebp+0x8]
 806aade:  mov DWORD PTR [ebp-0x4], edi
 806aae1:  mov edi, DWORD PTR [ebp+0xc]
 806aae4:  mov DWORD PTR [ebp-0xc], ebx
 806aae7:  mov edx, DWORD PTR [esi]
 806aae9:  cmp edi, 0xff
 806aaec:  sete al
 806aaef:  mov DWORD PTR [ebp-0x18], eax
 806aaf2:  test dl, 0x8
 806aaf5:  je 806ab18
 806aaf7:  xor edi, edi
 806aaf9:  test eax, eax
 806aafb:  jne 806ab02
 806aafd:  mov edi, 0xffffffff
 806ab02:  mov eax, edi
 806ab04:  mov ebx, DWORD PTR [ebp-0xc]
 806ab07:  mov esi, DWORD PTR [ebp-0x8]
 806ab0a:  mov edi, DWORD PTR [ebp-0x4]
 806ab0d:  mov esp, ebp
 806ab0f:  pop ebp
 806ab10:  ret
 806ab11:  lea esi, [esi]
 806ab18:  mov eax, edx
 806ab1a:  and eax, 0xc00
 806ab1f:  cmp eax, 0x400
 806ab24:  je 806ab60
 806ab26:  mov eax, DWORD PTR [esi+0x1c]
 806ab29:  mov ebx, DWORD PTR [esi+0x20]
 806ab2c:  mov ecx, DWORD PTR [esi+0x14]
 806ab2f:  mov DWORD PTR [ebp-0x1c], eax
 806ab32:  sub ebx, eax
 806ab34:  mov eax, DWORD PTR [ebp-0x18]
 806ab37:  mov edx, ecx
 806ab39:  sub edx, DWORD PTR [esi+0x10]
 806ab3c:  add eax, ebx
 806ab3e:  cmp edx, eax
 806ab40:  jae 806ab78
 806ab42:  mov eax, DWORD PTR [ebp-0x18]
 806ab45:  test eax, eax
 806ab47:  jne 806ab53
 806ab49:  mov eax, edi
 806ab4b:  mov BYTE PTR [ecx], al
 806ab4d:  add ecx, 0x1
 806ab50:  mov DWORD PTR [esi+0x14], ecx
 806ab53:  cmp ecx, DWORD PTR [esi+0x8]
 806ab56:  jbe 806ab02
 806ab58:  mov DWORD PTR [esi+0x8], ecx
 806ab5b:  jmp 806ab02
 806ab5d:  lea esi, [esi]
 806ab60:  mov eax, DWORD PTR [esi+0x4]
 806ab63:  or dh, 0x8
 806ab66:  mov DWORD PTR [esi], edx
 806ab68:  mov DWORD PTR [esi+0x14], eax
 806ab6b:  mov eax, DWORD PTR [esi+0x8]
 806ab6e:  mov DWORD PTR [esi+0x4], eax
 806ab71:  jmp 806ab26
 806ab73:  nop
 806ab74:  lea esi, [esi]
 806ab78:  test BYTE PTR [esi], 0x1
 806ab7b:  jne 806aafd
 806ab7d:  lea eax, [ebx+ebx+0x64]
 806ab81:  cmp ebx, eax
 806ab83:  mov DWORD PTR [ebp-0x10], eax
 806ab86:  ja 806aafd
 806ab8c:  mov DWORD PTR [esp], eax
 806ab8f:  call DWORD PTR [esi+0x98]
 806ab95:  test eax, eax
 806ab97:  mov DWORD PTR [ebp-0x14], eax
 806ab9a:  je 806aafd
 806aba0:  mov eax, DWORD PTR [ebp-0x1c]
 806aba3:  test eax, eax
 806aba5:  je 806abd0
 806aba7:  mov eax, DWORD PTR [ebp-0x1c]
 806abaa:  mov DWORD PTR [esp+0x8], ebx
 806abae:  mov DWORD PTR [esp+0x4], eax
 806abb2:  mov eax, DWORD PTR [ebp-0x14]
 806abb5:  mov DWORD PTR [esp], eax
 806abb8:  call 804efc0
 806abbd:  mov eax, DWORD PTR [ebp-0x1c]
 806abc0:  mov DWORD PTR [esp], eax
 806abc3:  call DWORD PTR [esi+0x9c]
 806abc9:  mov DWORD PTR [esi+0x1c], 0x0
 806abd0:  mov eax, DWORD PTR [ebp-0x10]
 806abd3:  mov edx, DWORD PTR [ebp-0x14]
 806abd6:  mov DWORD PTR [esp+0x4], 0x0
 806abde:  sub eax, ebx
 806abe0:  add edx, ebx
 806abe2:  mov DWORD PTR [esp], edx
 806abe5:  mov DWORD PTR [esp+0x8], eax
 806abe9:  call 804ef50
 806abee:  mov eax, DWORD PTR [ebp-0x14]
 806abf1:  add eax, DWORD PTR [ebp-0x10]
 806abf4:  mov DWORD PTR [esp+0xc], 0x1
 806abfc:  mov DWORD PTR [esp], esi
 806abff:  mov DWORD PTR [esp+0x8], eax
 806ac03:  mov eax, DWORD PTR [ebp-0x14]
 806ac06:  mov DWORD PTR [esp+0x4], eax
 806ac0a:  call 8068980
 806ac0f:  mov eax, DWORD PTR [ebp-0x14]
 806ac12:  sub eax, DWORD PTR [ebp-0x1c]
 806ac15:  add DWORD PTR [esi+0xc], eax
 806ac18:  mov eax, DWORD PTR [ebp-0x14]
 806ac1b:  sub eax, DWORD PTR [ebp-0x1c]
 806ac1e:  add DWORD PTR [esi+0x4], eax
 806ac21:  mov eax, DWORD PTR [ebp-0x14]
 806ac24:  sub eax, DWORD PTR [ebp-0x1c]
 806ac27:  add DWORD PTR [esi+0x8], eax
 806ac2a:  mov edx, eax
 806ac2c:  mov eax, DWORD PTR [ebp-0x14]
 806ac2f:  add edx, DWORD PTR [esi+0x14]
 806ac32:  mov DWORD PTR [esi+0x10], eax
 806ac35:  mov eax, DWORD PTR [esi+0x20]
 806ac38:  mov ecx, edx
 806ac3a:  mov DWORD PTR [esi+0x14], edx
 806ac3d:  mov DWORD PTR [esi+0x18], eax
 806ac40:  jmp 806ab42
 806ac45:  lea esi, [esi]
 806ac49:  lea edi, [edi]

0806ac50 <_IO_str_init_static_internal>:
 806ac50:  push ebp
 806ac51:  mov ebp, esp
 806ac53:  sub esp, 0x1c
 806ac56:  mov eax, DWORD PTR [ebp+0x10]
 806ac59:  mov DWORD PTR [ebp-0x8], esi
 806ac5c:  mov esi, DWORD PTR [ebp+0x8]
 806ac5f:  mov DWORD PTR [ebp-0x4], edi
 806ac62:  mov edi, DWORD PTR [ebp+0xc]
 806ac65:  mov DWORD PTR [ebp-0xc], ebx
 806ac68:  test eax, eax
 806ac6a:  je 806acc8
 806ac6c:  lea ebx, [edi+eax]
 806ac6f:  cmp edi, ebx
 806ac71:  sbb eax, eax
 806ac73:  not eax
 806ac75:  or ebx, eax
 806ac77:  mov DWORD PTR [esp+0xc], 0x0
 806ac7f:  mov DWORD PTR [esp+0x8], ebx
 806ac83:  mov DWORD PTR [esp+0x4], edi
 806ac87:  mov DWORD PTR [esp], esi
 806ac8a:  call 8068980
 806ac8f:  mov eax, DWORD PTR [ebp+0x14]
 806ac92:  mov DWORD PTR [esi+0x10], edi
 806ac95:  mov DWORD PTR [esi+0xc], edi
 806ac98:  mov DWORD PTR [esi+0x4], edi
 806ac9b:  test eax, eax
 806ac9d:  je 806ace0
 806ac9f:  mov eax, DWORD PTR [ebp+0x14]
 806aca2:  mov DWORD PTR [esi+0x18], ebx
 806aca5:  mov DWORD PTR [esi+0x14], eax
 806aca8:  mov DWORD PTR [esi+0x8], eax
 806acab:  mov DWORD PTR [esi+0x98], 0x0
 806acb5:  mov ebx, DWORD PTR [ebp-0xc]
 806acb8:  mov esi, DWORD PTR [ebp-0x8]
 806acbb:  mov edi, DWORD PTR [ebp-0x4]
 806acbe:  mov esp, ebp
 806acc0:  pop ebp
 806acc1:  ret
 806acc2:  lea esi, [esi]
 806acc8:  mov DWORD PTR [esp+0x4], 0x0
 806acd0:  mov DWORD PTR [esp], edi
 806acd3:  call 806c400
 806acd8:  mov ebx, eax
 806acda:  jmp 806ac77
 806acdc:  lea esi, [esi]
 806ace0:  mov DWORD PTR [esi+0x14], edi
 806ace3:  mov DWORD PTR [esi+0x18], edi
 806ace6:  mov DWORD PTR [esi+0x8], ebx
 806ace9:  jmp 806acab
 806aceb:  nop
 806acec:  lea esi, [esi]

0806acf0 <_IO_str_init_static>:
 806acf0:  push ebp
 806acf1:  mov ebp, esp
 806acf3:  sub esp, 0x1c
 806acf6:  mov edx, DWORD PTR [ebp+0x10]
 806acf9:  mov DWORD PTR [ebp-0x8], esi
 806acfc:  mov esi, DWORD PTR [ebp+0x8]
 806acff:  mov DWORD PTR [ebp-0x4], edi
 806ad02:  mov edi, DWORD PTR [ebp+0xc]
 806ad05:  mov DWORD PTR [ebp-0xc], ebx
 806ad08:  mov eax, edx
 806ad0a:  sar eax, 0x1f
 806ad0d:  or eax, edx
 806ad0f:  je 806ad68
 806ad11:  lea ebx, [edi+eax]
 806ad14:  cmp edi, ebx
 806ad16:  sbb eax, eax
 806ad18:  not eax
 806ad1a:  or ebx, eax
 806ad1c:  mov DWORD PTR [esp+0xc], 0x0
 806ad24:  mov DWORD PTR [esp+0x8], ebx
 806ad28:  mov DWORD PTR [esp+0x4], edi
 806ad2c:  mov DWORD PTR [esp], esi
 806ad2f:  call 8068980
 806ad34:  mov eax, DWORD PTR [ebp+0x14]
 806ad37:  mov DWORD PTR [esi+0x10], edi
 806ad3a:  mov DWORD PTR [esi+0xc], edi
 806ad3d:  mov DWORD PTR [esi+0x4], edi
 806ad40:  test eax, eax
 806ad42:  je 806ad80
 806ad44:  mov eax, DWORD PTR [ebp+0x14]
 806ad47:  mov DWORD PTR [esi+0x18], ebx
 806ad4a:  mov DWORD PTR [esi+0x14], eax
 806ad4d:  mov DWORD PTR [esi+0x8], eax
 806ad50:  mov DWORD PTR [esi+0x98], 0x0
 806ad5a:  mov ebx, DWORD PTR [ebp-0xc]
 806ad5d:  mov esi, DWORD PTR [ebp-0x8]
 806ad60:  mov edi, DWORD PTR [ebp-0x4]
 806ad63:  mov esp, ebp
 806ad65:  pop ebp
 806ad66:  ret
 806ad67:  nop
 806ad68:  mov DWORD PTR [esp+0x4], 0x0
 806ad70:  mov DWORD PTR [esp], edi
 806ad73:  call 806c400
 806ad78:  mov ebx, eax
 806ad7a:  jmp 806ad1c
 806ad7c:  lea esi, [esi]
 806ad80:  mov DWORD PTR [esi+0x14], edi
 806ad83:  mov DWORD PTR [esi+0x18], edi
 806ad86:  mov DWORD PTR [esi+0x8], ebx
 806ad89:  jmp 806ad50
 806ad8b:  nop
 806ad8c:  lea esi, [esi]

0806ad90 <_IO_str_init_readonly>:
 806ad90:  push ebp
 806ad91:  mov ebp, esp
 806ad93:  sub esp, 0x1c
 806ad96:  mov eax, DWORD PTR [ebp+0x10]
 806ad99:  mov DWORD PTR [ebp-0xc], ebx
 806ad9c:  mov ebx, DWORD PTR [ebp+0x8]
 806ad9f:  mov DWORD PTR [ebp-0x4], edi
 806ada2:  mov edi, DWORD PTR [ebp+0xc]
 806ada5:  mov DWORD PTR [ebp-0x8], esi
 806ada8:  mov edx, eax
 806adaa:  sar edx, 0x1f
 806adad:  or eax, edx
 806adaf:  je 806ae00
 806adb1:  lea esi, [edi+eax]
 806adb4:  cmp edi, esi
 806adb6:  sbb eax, eax
 806adb8:  not eax
 806adba:  or esi, eax
 806adbc:  mov DWORD PTR [esp+0x8], esi
 806adc0:  mov DWORD PTR [esp+0x4], edi
 806adc4:  mov DWORD PTR [esp], ebx
 806adc7:  mov DWORD PTR [esp+0xc], 0x0
 806adcf:  call 8068980
 806add4:  or DWORD PTR [ebx], 0x8
 806add7:  mov DWORD PTR [ebx+0x10], edi
 806adda:  mov DWORD PTR [ebx+0xc], edi
 806addd:  mov DWORD PTR [ebx+0x4], edi
 806ade0:  mov DWORD PTR [ebx+0x14], edi
 806ade3:  mov DWORD PTR [ebx+0x18], edi
 806ade6:  mov DWORD PTR [ebx+0x8], esi
 806ade9:  mov DWORD PTR [ebx+0x98], 0x0
 806adf3:  mov ebx, DWORD PTR [ebp-0xc]
 806adf6:  mov esi, DWORD PTR [ebp-0x8]
 806adf9:  mov edi, DWORD PTR [ebp-0x4]
 806adfc:  mov esp, ebp
 806adfe:  pop ebp
 806adff:  ret
 806ae00:  mov DWORD PTR [esp+0x4], 0x0
 806ae08:  mov DWORD PTR [esp], edi
 806ae0b:  call 806c400
 806ae10:  mov esi, eax
 806ae12:  jmp 806adbc
 806ae14:  nop
 806ae15:  nop
 806ae16:  nop
 806ae17:  nop
 806ae18:  nop
 806ae19:  nop
 806ae1a:  nop
 806ae1b:  nop
 806ae1c:  nop
 806ae1d:  nop
 806ae1e:  nop
 806ae1f:  nop

0806ae20 <strchr>:
 806ae20:  push edi
 806ae21:  mov eax, DWORD PTR [esp+0x8]
 806ae25:  mov edx, DWORD PTR [esp+0xc]
 806ae29:  mov dh, dl
 806ae2b:  mov ecx, edx
 806ae2d:  shl edx, 0x10
 806ae30:  mov dx, cx
 806ae33:  test al, 0x3
 806ae35:  je 806ae83
 806ae37:  mov cl, BYTE PTR [eax]
 806ae39:  cmp dl, cl
 806ae3b:  je 806af85
 806ae41:  test cl, cl
 806ae43:  je 806af5a
 806ae49:  inc eax
 806ae4a:  test al, 0x3
 806ae4c:  je 806ae83
 806ae4e:  mov cl, BYTE PTR [eax]
 806ae50:  cmp dl, cl
 806ae52:  je 806af85
 806ae58:  test cl, cl
 806ae5a:  je 806af5a
 806ae60:  inc eax
 806ae61:  test al, 0x3
 806ae63:  je 806ae83
 806ae65:  mov cl, BYTE PTR [eax]
 806ae67:  cmp dl, cl
 806ae69:  je 806af85
 806ae6f:  test cl, cl
 806ae71:  je 806af5a
 806ae77:  inc eax
 806ae78:  jmp 806ae83
 806ae7a:  lea esi, [esi]
 806ae80:  add eax, 0x10
 806ae83:  mov ecx, DWORD PTR [eax]
 806ae85:  xor ecx, edx
 806ae87:  mov edi, 0xfefefeff
 806ae8c:  add edi, ecx
 806ae8e:  jae 806af67
 806ae94:  xor edi, ecx
 806ae96:  or edi, 0xfefefeff
 806ae9c:  inc edi
 806ae9d:  jne 806af67
 806aea3:  xor ecx, edx
 806aea5:  mov edi, 0xfefefeff
 806aeaa:  add edi, ecx
 806aeac:  jae 806af5a
 806aeb2:  xor edi, ecx
 806aeb4:  or edi, 0xfefefeff
 806aeba:  inc edi
 806aebb:  jne 806af5a
 806aec1:  mov ecx, DWORD PTR [eax+0x4]
 806aec4:  xor ecx, edx
 806aec6:  mov edi, 0xfefefeff
 806aecb:  add edi, ecx
 806aecd:  jae 806af64
 806aed3:  xor edi, ecx
 806aed5:  or edi, 0xfefefeff
 806aedb:  inc edi
 806aedc:  jne 806af64
 806aee2:  xor ecx, edx
 806aee4:  mov edi, 0xfefefeff
 806aee9:  add edi, ecx
 806aeeb:  jae 806af5a
 806aeed:  xor edi, ecx
 806aeef:  or edi, 0xfefefeff
 806aef5:  inc edi
 806aef6:  jne 806af5a
 806aef8:  mov ecx, DWORD PTR [eax+0x8]
 806aefb:  xor ecx, edx
 806aefd:  mov edi, 0xfefefeff
 806af02:  add edi, ecx
 806af04:  jae 806af61
 806af06:  xor edi, ecx
 806af08:  or edi, 0xfefefeff
 806af0e:  inc edi
 806af0f:  jne 806af61
 806af11:  xor ecx, edx
 806af13:  mov edi, 0xfefefeff
 806af18:  add edi, ecx
 806af1a:  jae 806af5a
 806af1c:  xor edi, ecx
 806af1e:  or edi, 0xfefefeff
 806af24:  inc edi
 806af25:  jne 806af5a
 806af27:  mov ecx, DWORD PTR [eax+0xc]
 806af2a:  xor ecx, edx
 806af2c:  mov edi, 0xfefefeff
 806af31:  add edi, ecx
 806af33:  jae 806af5e
 806af35:  xor edi, ecx
 806af37:  or edi, 0xfefefeff
 806af3d:  inc edi
 806af3e:  jne 806af5e
 806af40:  xor ecx, edx
 806af42:  mov edi, 0xfefefeff
 806af47:  add edi, ecx
 806af49:  jae 806af5a
 806af4b:  xor edi, ecx
 806af4d:  or edi, 0xfefefeff
 806af53:  inc edi
 806af54:  je 806ae80
 806af5a:  xor eax, eax
 806af5c:  pop edi
 806af5d:  ret
 806af5e:  add eax, 0x4
 806af61:  add eax, 0x4
 806af64:  add eax, 0x4
 806af67:  test cl, cl
 806af69:  je 806af85
 806af6b:  cmp cl, dl
 806af6d:  je 806af5a
 806af6f:  inc eax
 806af70:  test ch, ch
 806af72:  je 806af85
 806af74:  cmp ch, dl
 806af76:  je 806af5a
 806af78:  inc eax
 806af79:  shr ecx, 0x10
 806af7c:  test cl, cl
 806af7e:  je 806af85
 806af80:  cmp cl, dl
 806af82:  je 806af5a
 806af84:  inc eax
 806af85:  pop edi
 806af86:  ret
 806af87:  nop
 806af88:  nop
 806af89:  nop
 806af8a:  nop
 806af8b:  nop
 806af8c:  nop
 806af8d:  nop
 806af8e:  nop
 806af8f:  nop

0806af90 <strcmp>:
 806af90:  push ebp
 806af91:  xor edx, edx
 806af93:  mov ebp, esp
 806af95:  push esi
 806af96:  push ebx
 806af97:  mov esi, DWORD PTR [ebp+0x8]
 806af9a:  mov ebx, DWORD PTR [ebp+0xc]
 806af9d:  lea esi, [esi]
 806afa0:  movzx eax, BYTE PTR [esi+edx]
 806afa4:  movzx ecx, BYTE PTR [ebx+edx]
 806afa8:  test al, al
 806afaa:  je 806afc8
 806afac:  add edx, 0x1
 806afaf:  cmp al, cl
 806afb1:  je 806afa0
 806afb3:  movzx edx, al
 806afb6:  movzx eax, cl
 806afb9:  sub edx, eax
 806afbb:  mov eax, edx
 806afbd:  pop ebx
 806afbe:  pop esi
 806afbf:  pop ebp
 806afc0:  ret
 806afc1:  lea esi, [esi]
 806afc8:  movzx edx, cl
 806afcb:  neg edx
 806afcd:  mov eax, edx
 806afcf:  pop ebx
 806afd0:  pop esi
 806afd1:  pop ebp
 806afd2:  ret
 806afd3:  nop
 806afd4:  nop
 806afd5:  nop
 806afd6:  nop
 806afd7:  nop
 806afd8:  nop
 806afd9:  nop
 806afda:  nop
 806afdb:  nop
 806afdc:  nop
 806afdd:  nop
 806afde:  nop
 806afdf:  nop

0806afe0 <strcpy>:
 806afe0:  push ebp
 806afe1:  xor edx, edx
 806afe3:  mov ebp, esp
 806afe5:  push esi
 806afe6:  mov esi, DWORD PTR [ebp+0x8]
 806afe9:  push ebx
 806afea:  mov ebx, DWORD PTR [ebp+0xc]
 806afed:  lea ecx, [esi-0x1]
 806aff0:  movzx eax, BYTE PTR [ebx+edx]
 806aff4:  mov BYTE PTR [ecx+edx+0x1], al
 806aff8:  add edx, 0x1
 806affb:  test al, al
 806affd:  jne 806aff0
 806afff:  mov eax, esi
 806b001:  pop ebx
 806b002:  pop esi
 806b003:  pop ebp
 806b004:  ret
 806b005:  nop
 806b006:  nop
 806b007:  nop
 806b008:  nop
 806b009:  nop
 806b00a:  nop
 806b00b:  nop
 806b00c:  nop
 806b00d:  nop
 806b00e:  nop
 806b00f:  nop

0806b010 <__strdup>:
 806b010:  push ebp
 806b011:  mov ebp, esp
 806b013:  sub esp, 0x14
 806b016:  mov DWORD PTR [ebp-0x4], esi
 806b019:  mov esi, DWORD PTR [ebp+0x8]
 806b01c:  mov DWORD PTR [ebp-0x8], ebx
 806b01f:  mov DWORD PTR [esp], esi
 806b022:  call 804eea0
 806b027:  lea ebx, [eax+0x1]
 806b02a:  mov DWORD PTR [esp], ebx
 806b02d:  call 804d6f0
 806b032:  mov edx, eax
 806b034:  xor eax, eax
 806b036:  test edx, edx
 806b038:  je 806b04a
 806b03a:  mov DWORD PTR [esp+0x8], ebx
 806b03e:  mov DWORD PTR [esp+0x4], esi
 806b042:  mov DWORD PTR [esp], edx
 806b045:  call 804efc0
 806b04a:  mov ebx, DWORD PTR [ebp-0x8]
 806b04d:  mov esi, DWORD PTR [ebp-0x4]
 806b050:  mov esp, ebp
 806b052:  pop ebp
 806b053:  ret
 806b054:  nop
 806b055:  nop
 806b056:  nop
 806b057:  nop
 806b058:  nop
 806b059:  nop
 806b05a:  nop
 806b05b:  nop
 806b05c:  nop
 806b05d:  nop
 806b05e:  nop
 806b05f:  nop

0806b060 <__strerror_r>:
 806b060:  push ebp
 806b061:  mov ebp, esp
 806b063:  sub esp, 0x38
 806b066:  mov DWORD PTR [ebp-0xc], ebx
 806b069:  mov ebx, DWORD PTR [ebp+0x8]
 806b06c:  mov DWORD PTR [ebp-0x4], edi
 806b06f:  mov edi, DWORD PTR [ebp+0xc]
 806b072:  mov DWORD PTR [ebp-0x8], esi
 806b075:  test ebx, ebx
 806b077:  js 806b0b8
 806b079:  cmp ebx, DWORD PTR ds:0x80c6090
 806b07f:  jge 806b0b8
 806b081:  mov eax, DWORD PTR [ebx*4+0x80c5e80]
 806b088:  test eax, eax
 806b08a:  je 806b0b8
 806b08c:  mov DWORD PTR [esp+0x8], 0x5
 806b094:  mov DWORD PTR [esp+0x4], eax
 806b098:  mov DWORD PTR [esp], 0x80c3c9c
 806b09f:  call 80515a0
 806b0a4:  mov edi, eax
 806b0a6:  mov eax, edi
 806b0a8:  mov ebx, DWORD PTR [ebp-0xc]
 806b0ab:  mov esi, DWORD PTR [ebp-0x8]
 806b0ae:  mov edi, DWORD PTR [ebp-0x4]
 806b0b1:  mov esp, ebp
 806b0b3:  pop ebp
 806b0b4:  ret
 806b0b5:  lea esi, [esi]
 806b0b8:  mov DWORD PTR [esp+0x8], 0x5
 806b0c0:  mov DWORD PTR [esp+0x4], 0x80b1c94
 806b0c8:  mov DWORD PTR [esp], 0x80c3c9c
 806b0cf:  call 80515a0
 806b0d4:  mov DWORD PTR [ebp-0x28], eax
 806b0d7:  mov DWORD PTR [esp], eax
 806b0da:  call 804eea0
 806b0df:  mov DWORD PTR [esp], ebx
 806b0e2:  mov BYTE PTR [ebp-0xd], 0x0
 806b0e6:  mov DWORD PTR [esp+0xc], 0x0
 806b0ee:  mov DWORD PTR [esp+0x8], 0xa
 806b0f6:  mov esi, eax
 806b0f8:  lea eax, [ebp-0xd]
 806b0fb:  mov DWORD PTR [esp+0x4], eax
 806b0ff:  call 8057700
 806b104:  mov ebx, eax
 806b106:  mov eax, DWORD PTR [ebp+0x10]
 806b109:  cmp eax, esi
 806b10b:  ja 806b140
 806b10d:  mov DWORD PTR [esp+0x8], eax
 806b111:  mov eax, DWORD PTR [ebp-0x28]
 806b114:  mov DWORD PTR [esp], edi
 806b117:  mov DWORD PTR [esp+0x4], eax
 806b11b:  call 806c310
 806b120:  cmp esi, DWORD PTR [ebp+0x10]
 806b123:  mov ecx, eax
 806b125:  jb 806b148
 806b127:  mov eax, DWORD PTR [ebp+0x10]
 806b12a:  test eax, eax
 806b12c:  je 806b0a6
 806b132:  mov eax, DWORD PTR [ebp+0x10]
 806b135:  mov BYTE PTR [edi+eax-0x1], 0x0
 806b13a:  jmp 806b0a6
 806b13f:  nop
 806b140:  mov eax, esi
 806b142:  jmp 806b10d
 806b144:  lea esi, [esi]
 806b148:  mov eax, DWORD PTR [ebp+0x10]
 806b14b:  lea edx, [ebp-0xc]
 806b14e:  sub edx, ebx
 806b150:  sub eax, esi
 806b152:  cmp edx, eax
 806b154:  jbe 806b158
 806b156:  mov edx, eax
 806b158:  mov DWORD PTR [esp+0x8], edx
 806b15c:  mov DWORD PTR [esp+0x4], ebx
 806b160:  mov DWORD PTR [esp], ecx
 806b163:  call 804efc0
 806b168:  mov eax, DWORD PTR [ebp+0x10]
 806b16b:  test eax, eax
 806b16d:  je 806b0a6
 806b173:  jmp 806b132
 806b175:  nop
 806b176:  nop
 806b177:  nop
 806b178:  nop
 806b179:  nop
 806b17a:  nop
 806b17b:  nop
 806b17c:  nop
 806b17d:  nop
 806b17e:  nop
 806b17f:  nop

0806b180 <__strnlen>:
 806b180:  push ebp
 806b181:  xor eax, eax
 806b183:  mov ebp, esp
 806b185:  push esi
 806b186:  push ebx
 806b187:  mov edx, DWORD PTR [ebp+0xc]
 806b18a:  mov esi, DWORD PTR [ebp+0x8]
 806b18d:  test edx, edx
 806b18f:  jne 806b198
 806b191:  pop ebx
 806b192:  pop esi
 806b193:  pop ebp
 806b194:  ret
 806b195:  lea esi, [esi]
 806b198:  mov ebx, esi
 806b19a:  mov ecx, esi
 806b19c:  add ebx, edx
 806b19e:  sbb eax, eax
 806b1a0:  or ebx, eax
 806b1a2:  test esi, 0x3
 806b1a8:  mov eax, esi
 806b1aa:  je 806b1cc
 806b1ac:  cmp BYTE PTR [esi], 0x0
 806b1af:  mov eax, esi
 806b1b1:  mov edx, esi
 806b1b3:  jne 806b1c2
 806b1b5:  jmp 806b21a
 806b1b7:  nop
 806b1b8:  cmp BYTE PTR [eax], 0x0
 806b1bb:  nop
 806b1bc:  lea esi, [esi]
 806b1c0:  je 806b218
 806b1c2:  add eax, 0x1
 806b1c5:  test al, 0x3
 806b1c7:  nop
 806b1c8:  jne 806b1b8
 806b1ca:  mov ecx, eax
 806b1cc:  mov edx, eax
 806b1ce:  jmp 806b203
 806b1d0:  mov eax, DWORD PTR [edx]
 806b1d2:  sub eax, 0x1010101
 806b1d7:  test eax, 0x80808080
 806b1dc:  je 806b1fe
 806b1de:  cmp BYTE PTR [edx], 0x0
 806b1e1:  je 806b228
 806b1e3:  cmp BYTE PTR [edx+0x1], 0x0
 806b1e7:  lea ecx, [edx+0x1]
 806b1ea:  je 806b207
 806b1ec:  cmp BYTE PTR [edx+0x2], 0x0
 806b1f0:  lea ecx, [edx+0x2]
 806b1f3:  je 806b207
 806b1f5:  cmp BYTE PTR [edx+0x3], 0x0
 806b1f9:  lea ecx, [edx+0x3]
 806b1fc:  je 806b207
 806b1fe:  add edx, 0x4
 806b201:  mov ecx, ebx
 806b203:  cmp ebx, edx
 806b205:  ja 806b1d0
 806b207:  cmp ebx, ecx
 806b209:  mov eax, ecx
 806b20b:  jae 806b20f
 806b20d:  mov eax, ebx
 806b20f:  sub eax, esi
 806b211:  pop ebx
 806b212:  pop esi
 806b213:  pop ebp
 806b214:  ret
 806b215:  lea esi, [esi]
 806b218:  mov edx, eax
 806b21a:  cmp ebx, eax
 806b21c:  jae 806b220
 806b21e:  mov edx, ebx
 806b220:  mov eax, edx
 806b222:  sub eax, esi
 806b224:  pop ebx
 806b225:  pop esi
 806b226:  pop ebp
 806b227:  ret
 806b228:  mov ecx, edx
 806b22a:  jmp 806b207
 806b22c:  nop
 806b22d:  nop
 806b22e:  nop
 806b22f:  nop

0806b230 <strncmp>:
 806b230:  push ebp
 806b231:  xor eax, eax
 806b233:  mov ebp, esp
 806b235:  push edi
 806b236:  push esi
 806b237:  push ebx
 806b238:  mov ecx, DWORD PTR [ebp+0x10]
 806b23b:  xor ebx, ebx
 806b23d:  mov edi, DWORD PTR [ebp+0x8]
 806b240:  mov esi, DWORD PTR [ebp+0xc]
 806b243:  cmp ecx, 0x3
 806b246:  jbe 806b2aa
 806b248:  mov edx, ecx
 806b24a:  shr edx, 0x2
 806b24d:  movzx eax, BYTE PTR [edi]
 806b250:  movzx ebx, BYTE PTR [esi]
 806b253:  test al, al
 806b255:  jne 806b268
 806b257:  movzx edx, al
 806b25a:  movzx eax, bl
 806b25d:  sub edx, eax
 806b25f:  mov eax, edx
 806b261:  pop ebx
 806b262:  pop esi
 806b263:  pop edi
 806b264:  pop ebp
 806b265:  ret
 806b266:  xchg ax, ax
 806b268:  cmp al, bl
 806b26a:  jne 806b257
 806b26c:  movzx eax, BYTE PTR [edi+0x1]
 806b270:  movzx ebx, BYTE PTR [esi+0x1]
 806b274:  test al, al
 806b276:  je 806b257
 806b278:  cmp al, bl
 806b27a:  jne 806b257
 806b27c:  movzx eax, BYTE PTR [edi+0x2]
 806b280:  movzx ebx, BYTE PTR [esi+0x2]
 806b284:  test al, al
 806b286:  je 806b257
 806b288:  cmp al, bl
 806b28a:  jne 806b257
 806b28c:  movzx eax, BYTE PTR [edi+0x3]
 806b290:  movzx ebx, BYTE PTR [esi+0x3]
 806b294:  test al, al
 806b296:  je 806b257
 806b298:  cmp al, bl
 806b29a:  jne 806b257
 806b29c:  add edi, 0x4
 806b29f:  add esi, 0x4
 806b2a2:  sub edx, 0x1
 806b2a5:  jne 806b24d
 806b2a7:  and ecx, 0x3
 806b2aa:  test ecx, ecx
 806b2ac:  je 806b257
 806b2ae:  movzx eax, BYTE PTR [edi]
 806b2b1:  movzx ebx, BYTE PTR [esi]
 806b2b4:  test al, al
 806b2b6:  je 806b257
 806b2b8:  cmp al, bl
 806b2ba:  jne 806b257
 806b2bc:  xor edx, edx
 806b2be:  sub ecx, 0x1
 806b2c1:  je 806b257
 806b2c3:  movzx eax, BYTE PTR [edi+edx+0x1]
 806b2c8:  movzx ebx, BYTE PTR [esi+edx+0x1]
 806b2cd:  add edx, 0x1
 806b2d0:  test al, al
 806b2d2:  je 806b257
 806b2d4:  cmp al, bl
 806b2d6:  je 806b2be
 806b2d8:  movzx edx, al
 806b2db:  movzx eax, bl
 806b2de:  sub edx, eax
 806b2e0:  mov eax, edx
 806b2e2:  pop ebx
 806b2e3:  pop esi
 806b2e4:  pop edi
 806b2e5:  pop ebp
 806b2e6:  ret
 806b2e7:  nop
 806b2e8:  nop
 806b2e9:  nop
 806b2ea:  nop
 806b2eb:  nop
 806b2ec:  nop
 806b2ed:  nop
 806b2ee:  nop
 806b2ef:  nop

0806b2f0 <strncpy>:
 806b2f0:  push ebp
 806b2f1:  mov ebp, esp
 806b2f3:  push edi
 806b2f4:  push esi
 806b2f5:  push ebx
 806b2f6:  sub esp, 0x8
 806b2f9:  mov edx, DWORD PTR [ebp+0x8]
 806b2fc:  mov ecx, DWORD PTR [ebp+0xc]
 806b2ff:  sub edx, 0x1
 806b302:  cmp DWORD PTR [ebp+0x10], 0x3
 806b306:  mov ebx, edx
 806b308:  jbe 806b400
 806b30e:  mov edi, DWORD PTR [ebp+0x10]
 806b311:  lea ebx, [edx+0x1]
 806b314:  movzx eax, BYTE PTR [ecx]
 806b317:  shr edi, 0x2
 806b31a:  test al, al
 806b31c:  mov BYTE PTR [edx+0x1], al
 806b31f:  je 806b368
 806b321:  movzx eax, BYTE PTR [ecx+0x1]
 806b325:  lea ebx, [edx+0x2]
 806b328:  test al, al
 806b32a:  mov BYTE PTR [edx+0x2], al
 806b32d:  je 806b368
 806b32f:  movzx eax, BYTE PTR [ecx+0x2]
 806b333:  lea ebx, [edx+0x3]
 806b336:  test al, al
 806b338:  mov BYTE PTR [edx+0x3], al
 806b33b:  je 806b368
 806b33d:  movzx eax, BYTE PTR [ecx+0x3]
 806b341:  lea esi, [edx+0x4]
 806b344:  mov ebx, esi
 806b346:  test al, al
 806b348:  mov BYTE PTR [edx+0x4], al
 806b34b:  je 806b368
 806b34d:  add ecx, 0x4
 806b350:  sub edi, 0x1
 806b353:  je 806b400
 806b359:  movzx eax, BYTE PTR [ecx]
 806b35c:  mov edx, esi
 806b35e:  lea ebx, [edx+0x1]
 806b361:  test al, al
 806b363:  mov BYTE PTR [edx+0x1], al
 806b366:  jne 806b321
 806b368:  mov eax, DWORD PTR [ebp+0x8]
 806b36b:  mov edx, DWORD PTR [ebp+0x10]
 806b36e:  sub eax, ebx
 806b370:  lea esi, [edx+eax-0x1]
 806b374:  test esi, esi
 806b376:  je 806b3f4
 806b378:  mov ecx, ebx
 806b37a:  not ecx
 806b37c:  and ecx, 0x3
 806b37f:  cmp ecx, esi
 806b381:  jbe 806b385
 806b383:  mov ecx, esi
 806b385:  test ecx, ecx
 806b387:  mov edx, ebx
 806b389:  mov edi, esi
 806b38b:  je 806b3ac
 806b38d:  mov edx, ebx
 806b38f:  mov edi, esi
 806b391:  xor eax, eax
 806b393:  nop
 806b394:  lea esi, [esi]
 806b398:  add eax, 0x1
 806b39b:  add edx, 0x1
 806b39e:  sub edi, 0x1
 806b3a1:  cmp ecx, eax
 806b3a3:  mov BYTE PTR [edx], 0x0
 806b3a6:  ja 806b398
 806b3a8:  cmp esi, ecx
 806b3aa:  je 806b3f4
 806b3ac:  sub esi, ecx
 806b3ae:  mov DWORD PTR [ebp-0x14], esi
 806b3b1:  shr esi, 0x2
 806b3b4:  lea eax, [esi*4]
 806b3bb:  test eax, eax
 806b3bd:  mov DWORD PTR [ebp-0x10], eax
 806b3c0:  je 806b3e4
 806b3c2:  lea ecx, [ebx+ecx+0x1]
 806b3c6:  xor eax, eax
 806b3c8:  mov DWORD PTR [ecx+eax*4], 0x0
 806b3cf:  add eax, 0x1
 806b3d2:  cmp eax, esi
 806b3d4:  jb 806b3c8
 806b3d6:  mov eax, DWORD PTR [ebp-0x10]
 806b3d9:  sub edi, DWORD PTR [ebp-0x10]
 806b3dc:  add edx, DWORD PTR [ebp-0x10]
 806b3df:  cmp DWORD PTR [ebp-0x14], eax
 806b3e2:  je 806b3f4
 806b3e4:  xor eax, eax
 806b3e6:  xchg ax, ax
 806b3e8:  mov BYTE PTR [edx+eax+0x1], 0x0
 806b3ed:  add eax, 0x1
 806b3f0:  cmp eax, edi
 806b3f2:  jne 806b3e8
 806b3f4:  mov eax, DWORD PTR [ebp+0x8]
 806b3f7:  add esp, 0x8
 806b3fa:  pop ebx
 806b3fb:  pop esi
 806b3fc:  pop edi
 806b3fd:  pop ebp
 806b3fe:  ret
 806b3ff:  nop
 806b400:  mov esi, DWORD PTR [ebp+0x10]
 806b403:  and esi, 0x3
 806b406:  je 806b3f4
 806b408:  movzx eax, BYTE PTR [ecx]
 806b40b:  add ebx, 0x1
 806b40e:  add ecx, 0x1
 806b411:  sub esi, 0x1
 806b414:  mov BYTE PTR [ebx], al
 806b416:  je 806b3f4
 806b418:  test al, al
 806b41a:  jne 806b408
 806b41c:  jmp 806b378
 806b421:  nop
 806b422:  nop
 806b423:  nop
 806b424:  nop
 806b425:  nop
 806b426:  nop
 806b427:  nop
 806b428:  nop
 806b429:  nop
 806b42a:  nop
 806b42b:  nop
 806b42c:  nop
 806b42d:  nop
 806b42e:  nop
 806b42f:  nop

0806b430 <strrchr>:
 806b430:  push edi
 806b431:  push esi
 806b432:  xor eax, eax
 806b434:  mov esi, DWORD PTR [esp+0xc]
 806b438:  mov ecx, DWORD PTR [esp+0x10]
 806b43c:  mov ch, cl
 806b43e:  mov edx, ecx
 806b440:  shl ecx, 0x10
 806b443:  mov cx, dx
 806b446:  test esi, 0x3
 806b44c:  je 806b4d3
 806b452:  mov dl, BYTE PTR [esi]
 806b454:  cmp cl, dl
 806b456:  jne 806b45a
 806b458:  mov eax, esi
 806b45a:  or dl, dl
 806b45c:  je 806b5e6
 806b462:  inc esi
 806b463:  test esi, 0x3
 806b469:  je 806b4d3
 806b46b:  mov dl, BYTE PTR [esi]
 806b46d:  cmp cl, dl
 806b46f:  jne 806b473
 806b471:  mov eax, esi
 806b473:  or dl, dl
 806b475:  je 806b5e6
 806b47b:  inc esi
 806b47c:  test esi, 0x3
 806b482:  je 806b4d3
 806b484:  mov dl, BYTE PTR [esi]
 806b486:  cmp cl, dl
 806b488:  jne 806b48c
 806b48a:  mov eax, esi
 806b48c:  or dl, dl
 806b48e:  je 806b5e6
 806b494:  inc esi
 806b495:  jmp 806b4d3
 806b497:  add BYTE PTR [eax], al
 806b499:  add BYTE PTR [ebx-0x117cfb12], al
 806b49f:  add al, 0x83
 806b4a1:  out dx, al
 806b4a2:  add al, 0xf7
 806b4a4:  ret 0x0
 806b4a7:  add bh, bh
 806b4a9:  jne 806b4b9
 806b4ab:  lea eax, [esi+0xf]
 806b4ae:  jmp 806b4d0
 806b4b0:  sub esi, 0x4
 806b4b3:  sub esi, 0x4
 806b4b6:  sub esi, 0x4
 806b4b9:  test edx, 0xff0000
 806b4bf:  jne 806b4c6
 806b4c1:  lea eax, [esi+0xe]
 806b4c4:  jmp 806b4d0
 806b4c6:  lea eax, [esi+0xc]
 806b4c9:  test dh, dh
 806b4cb:  jne 806b4d0
 806b4cd:  lea eax, [esi+0xd]
 806b4d0:  add esi, 0x10
 806b4d3:  mov edx, DWORD PTR [esi]
 806b4d5:  mov edi, 0xfefefeff
 806b4da:  add edi, edx
 806b4dc:  jae 806b5bc
 806b4e2:  xor edi, edx
 806b4e4:  or edi, 0xfefefeff
 806b4ea:  inc edi
 806b4eb:  jne 806b5bc
 806b4f1:  xor edx, ecx
 806b4f3:  mov edi, 0xfefefeff
 806b4f8:  add edi, edx
 806b4fa:  jae 806b49a
 806b4fc:  xor edi, edx
 806b4fe:  or edi, 0xfefefeff
 806b504:  inc edi
 806b505:  jne 806b4b0
 806b507:  mov edx, DWORD PTR [esi+0x4]
 806b50a:  mov edi, 0xfefefeff
 806b50f:  add edi, edx
 806b511:  jae 806b5b9
 806b517:  xor edi, edx
 806b519:  or edi, 0xfefefeff
 806b51f:  inc edi
 806b520:  jne 806b5b9
 806b526:  xor edx, ecx
 806b528:  mov edi, 0xfefefeff
 806b52d:  add edi, edx
 806b52f:  jae 806b49d
 806b535:  xor edi, edx
 806b537:  or edi, 0xfefefeff
 806b53d:  inc edi
 806b53e:  jne 806b4b3
 806b544:  mov edx, DWORD PTR [esi+0x8]
 806b547:  mov edi, 0xfefefeff
 806b54c:  add edi, edx
 806b54e:  jae 806b5b6
 806b550:  xor edi, edx
 806b552:  or edi, 0xfefefeff
 806b558:  inc edi
 806b559:  jne 806b5b6
 806b55b:  xor edx, ecx
 806b55d:  mov edi, 0xfefefeff
 806b562:  add edi, edx
 806b564:  jae 806b4a0
 806b56a:  xor edi, edx
 806b56c:  or edi, 0xfefefeff
 806b572:  inc edi
 806b573:  jne 806b4b6
 806b579:  mov edx, DWORD PTR [esi+0xc]
 806b57c:  mov edi, 0xfefefeff
 806b581:  add edi, edx
 806b583:  jae 806b5b3
 806b585:  xor edi, edx
 806b587:  or edi, 0xfefefeff
 806b58d:  inc edi
 806b58e:  jne 806b5b3
 806b590:  xor edx, ecx
 806b592:  mov edi, 0xfefefeff
 806b597:  add edi, edx
 806b599:  jae 806b4a3
 806b59f:  xor edi, edx
 806b5a1:  or edi, 0xfefefeff
 806b5a7:  inc edi
 806b5a8:  je 806b4d0
 806b5ae:  jmp 806b4b9
 806b5b3:  add esi, 0x4
 806b5b6:  add esi, 0x4
 806b5b9:  add esi, 0x4
 806b5bc:  cmp dl, cl
 806b5be:  jne 806b5c2
 806b5c0:  mov eax, esi
 806b5c2:  test dl, dl
 806b5c4:  je 806b5e6
 806b5c6:  cmp dh, cl
 806b5c8:  jne 806b5cd
 806b5ca:  lea eax, [esi+0x1]
 806b5cd:  test dh, dh
 806b5cf:  je 806b5e6
 806b5d1:  shr edx, 0x10
 806b5d4:  cmp dl, cl
 806b5d6:  jne 806b5db
 806b5d8:  lea eax, [esi+0x2]
 806b5db:  test dl, dl
 806b5dd:  je 806b5e6
 806b5df:  cmp dh, cl
 806b5e1:  jne 806b5e6
 806b5e3:  lea eax, [esi+0x3]
 806b5e6:  pop esi
 806b5e7:  pop edi
 806b5e8:  ret
 806b5e9:  nop
 806b5ea:  nop
 806b5eb:  nop
 806b5ec:  nop
 806b5ed:  nop
 806b5ee:  nop
 806b5ef:  nop

0806b5f0 <two_way_long_needle>:
 806b5f0:  push ebp
 806b5f1:  mov ebp, esp
 806b5f3:  push edi
 806b5f4:  mov edi, 0xffffffff
 806b5f9:  push esi
 806b5fa:  push ebx
 806b5fb:  sub esp, 0x458
 806b601:  mov DWORD PTR [ebp-0x43c], edx
 806b607:  mov edx, 0x1
 806b60c:  mov DWORD PTR [ebp-0x440], ecx
 806b612:  xor ecx, ecx
 806b614:  mov DWORD PTR [ebp-0x438], eax
 806b61a:  mov DWORD PTR [ebp-0x418], 0x1
 806b624:  jmp 806b63f
 806b626:  xchg ax, ax
 806b628:  mov edx, ebx
 806b62a:  mov ecx, edi
 806b62c:  sub edx, edi
 806b62e:  mov eax, 0x1
 806b633:  mov DWORD PTR [ebp-0x418], edx
 806b639:  mov edi, ecx
 806b63b:  mov edx, eax
 806b63d:  mov ecx, ebx
 806b63f:  lea ebx, [edx+ecx]
 806b642:  cmp DWORD PTR [ebp+0x8], ebx
 806b645:  jbe 806b690
 806b647:  mov eax, DWORD PTR [ebp-0x440]
 806b64d:  mov esi, DWORD PTR [ebp-0x440]
 806b653:  add eax, edi
 806b655:  movzx eax, BYTE PTR [eax+edx]
 806b659:  cmp BYTE PTR [esi+ebx], al
 806b65c:  jb 806b628
 806b65e:  je 806b670
 806b660:  lea ebx, [ecx+0x1]
 806b663:  mov edx, 0x1
 806b668:  mov eax, 0x1
 806b66d:  jmp 806b633
 806b66f:  nop
 806b670:  cmp edx, DWORD PTR [ebp-0x418]
 806b676:  je 806bbb8
 806b67c:  lea eax, [edx+0x1]
 806b67f:  mov ebx, ecx
 806b681:  mov edx, DWORD PTR [ebp-0x418]
 806b687:  mov ecx, edi
 806b689:  jmp 806b633
 806b68b:  nop
 806b68c:  lea esi, [esi]
 806b690:  mov DWORD PTR [ebp-0x414], 0x1
 806b69a:  mov edx, 0x1
 806b69f:  xor ebx, ebx
 806b6a1:  mov DWORD PTR [ebp-0x458], 0xffffffff
 806b6ab:  jmp 806b6d3
 806b6ad:  lea esi, [esi]
 806b6b0:  mov ebx, DWORD PTR [ebp-0x458]
 806b6b6:  mov edx, esi
 806b6b8:  mov eax, 0x1
 806b6bd:  sub edx, DWORD PTR [ebp-0x458]
 806b6c3:  mov DWORD PTR [ebp-0x414], edx
 806b6c9:  mov edx, eax
 806b6cb:  mov DWORD PTR [ebp-0x458], ebx
 806b6d1:  mov ebx, esi
 806b6d3:  lea esi, [edx+ebx]
 806b6d6:  cmp DWORD PTR [ebp+0x8], esi
 806b6d9:  jbe 806b728
 806b6db:  mov eax, DWORD PTR [ebp-0x440]
 806b6e1:  add eax, DWORD PTR [ebp-0x458]
 806b6e7:  mov ecx, DWORD PTR [ebp-0x440]
 806b6ed:  movzx eax, BYTE PTR [eax+edx]
 806b6f1:  cmp BYTE PTR [ecx+esi], al
 806b6f4:  ja 806b6b0
 806b6f6:  je 806b708
 806b6f8:  lea esi, [ebx+0x1]
 806b6fb:  mov edx, 0x1
 806b700:  mov eax, 0x1
 806b705:  jmp 806b6c3
 806b707:  nop
 806b708:  cmp edx, DWORD PTR [ebp-0x414]
 806b70e:  je 806bba8
 806b714:  lea eax, [edx+0x1]
 806b717:  mov esi, ebx
 806b719:  mov edx, DWORD PTR [ebp-0x414]
 806b71f:  mov ebx, DWORD PTR [ebp-0x458]
 806b725:  jmp 806b6c3
 806b727:  nop
 806b728:  mov ebx, DWORD PTR [ebp-0x458]
 806b72e:  lea ecx, [edi+0x1]
 806b731:  add ebx, 0x1
 806b734:  cmp ebx, ecx
 806b736:  mov DWORD PTR [ebp-0x430], ebx
 806b73c:  jae 806b750
 806b73e:  mov esi, DWORD PTR [ebp-0x418]
 806b744:  mov DWORD PTR [ebp-0x430], ecx
 806b74a:  mov DWORD PTR [ebp-0x414], esi
 806b750:  lea eax, [ebp-0x40c]
 806b756:  xchg ax, ax
 806b758:  mov edi, DWORD PTR [ebp+0x8]
 806b75b:  lea edx, [ebp-0xc]
 806b75e:  mov DWORD PTR [eax], edi
 806b760:  add eax, 0x4
 806b763:  cmp eax, edx
 806b765:  jne 806b758
 806b767:  test edi, edi
 806b769:  je 806b78e
 806b76b:  mov ebx, DWORD PTR [ebp-0x440]
 806b771:  mov ecx, edi
 806b773:  xor edx, edx
 806b775:  sub ecx, 0x1
 806b778:  movzx eax, BYTE PTR [ebx+edx]
 806b77c:  add edx, 0x1
 806b77f:  mov DWORD PTR [ebp+eax*4-0x40c], ecx
 806b786:  sub ecx, 0x1
 806b789:  cmp DWORD PTR [ebp+0x8], edx
 806b78c:  ja 806b778
 806b78e:  mov esi, DWORD PTR [ebp-0x430]
 806b794:  mov edi, DWORD PTR [ebp-0x440]
 806b79a:  add edi, DWORD PTR [ebp-0x414]
 806b7a0:  mov ecx, DWORD PTR [ebp-0x430]
 806b7a6:  cmp esi, esi
 806b7a8:  mov esi, DWORD PTR [ebp-0x440]
 806b7ae:  repz cmpsb
 806b7b0:  jne 806b9ca
 806b7b6:  mov edi, DWORD PTR [ebp-0x430]
 806b7bc:  mov eax, DWORD PTR [ebp-0x438]
 806b7c2:  mov DWORD PTR [ebp-0x434], 0x0
 806b7cc:  mov DWORD PTR [ebp-0x42c], 0x0
 806b7d6:  sub edi, 0x1
 806b7d9:  add eax, edi
 806b7db:  mov DWORD PTR [ebp-0x448], edi
 806b7e1:  mov DWORD PTR [ebp-0x44c], eax
 806b7e7:  jmp 806b827
 806b7e9:  lea esi, [esi]
 806b7f0:  mov edx, DWORD PTR [ebp-0x42c]
 806b7f6:  test edx, edx
 806b7f8:  je 806b815
 806b7fa:  cmp eax, DWORD PTR [ebp-0x414]
 806b800:  jae 806b815
 806b802:  mov eax, DWORD PTR [ebp+0x8]
 806b805:  sub eax, DWORD PTR [ebp-0x414]
 806b80b:  mov DWORD PTR [ebp-0x42c], 0x0
 806b815:  add DWORD PTR [ebp-0x434], eax
 806b81b:  mov esi, DWORD PTR [ebp-0x428]
 806b821:  mov DWORD PTR [ebp-0x43c], esi
 806b827:  mov edi, DWORD PTR [ebp-0x434]
 806b82d:  add edi, DWORD PTR [ebp+0x8]
 806b830:  mov DWORD PTR [esp+0x4], 0x0
 806b838:  mov eax, edi
 806b83a:  sub eax, DWORD PTR [ebp-0x43c]
 806b840:  mov DWORD PTR [ebp-0x428], edi
 806b846:  mov DWORD PTR [esp+0x8], eax
 806b84a:  mov eax, DWORD PTR [ebp-0x438]
 806b850:  add eax, DWORD PTR [ebp-0x43c]
 806b856:  mov DWORD PTR [esp], eax
 806b859:  call 806c0c0
 806b85e:  test eax, eax
 806b860:  jne 806b9bd
 806b866:  test edi, edi
 806b868:  je 806b9bd
 806b86e:  mov ecx, DWORD PTR [ebp-0x438]
 806b874:  mov edx, DWORD PTR [ebp-0x428]
 806b87a:  movzx eax, BYTE PTR [ecx+edx-0x1]
 806b87f:  mov eax, DWORD PTR [ebp+eax*4-0x40c]
 806b886:  test eax, eax
 806b888:  jne 806b7f0
 806b88e:  mov ebx, DWORD PTR [ebp-0x42c]
 806b894:  mov esi, DWORD PTR [ebp-0x430]
 806b89a:  cmp ebx, esi
 806b89c:  jae 806b8a0
 806b89e:  mov ebx, esi
 806b8a0:  mov esi, DWORD PTR [ebp+0x8]
 806b8a3:  sub esi, 0x1
 806b8a6:  cmp ebx, esi
 806b8a8:  jae 806b8fc
 806b8aa:  mov ecx, DWORD PTR [ebp-0x440]
 806b8b0:  mov edx, DWORD PTR [ebp-0x438]
 806b8b6:  mov edi, DWORD PTR [ebp-0x434]
 806b8bc:  add ecx, ebx
 806b8be:  add edx, ebx
 806b8c0:  movzx eax, BYTE PTR [ecx]
 806b8c3:  cmp al, BYTE PTR [edx+edi]
 806b8c6:  jne 806b998
 806b8cc:  mov edx, edi
 806b8ce:  mov edi, ecx
 806b8d0:  mov ecx, DWORD PTR [ebp-0x438]
 806b8d6:  lea eax, [ebx+edx+0x1]
 806b8da:  add ecx, eax
 806b8dc:  jmp 806b8f5
 806b8de:  xchg ax, ax
 806b8e0:  movzx edx, BYTE PTR [edi+0x1]
 806b8e4:  add edi, 0x1
 806b8e7:  movzx eax, BYTE PTR [ecx]
 806b8ea:  add ecx, 0x1
 806b8ed:  cmp dl, al
 806b8ef:  jne 806b998
 806b8f5:  add ebx, 0x1
 806b8f8:  cmp ebx, esi
 806b8fa:  jb 806b8e0
 806b8fc:  mov ecx, DWORD PTR [ebp-0x430]
 806b902:  cmp DWORD PTR [ebp-0x42c], ecx
 806b908:  jae 806bbc4
 806b90e:  mov edi, DWORD PTR [ebp-0x448]
 806b914:  mov ebx, DWORD PTR [ebp-0x440]
 806b91a:  mov edx, DWORD PTR [ebp-0x44c]
 806b920:  mov esi, DWORD PTR [ebp-0x434]
 806b926:  movzx eax, BYTE PTR [ebx+edi]
 806b92a:  cmp al, BYTE PTR [edx+esi]
 806b92d:  jne 806bbc4
 806b933:  lea eax, [ecx+esi-0x2]
 806b937:  add ebx, ecx
 806b939:  mov ecx, DWORD PTR [ebp-0x438]
 806b93f:  add ecx, eax
 806b941:  jmp 806b95e
 806b943:  nop
 806b944:  lea esi, [esi]
 806b948:  movzx edx, BYTE PTR [ebx-0x2]
 806b94c:  sub ebx, 0x1
 806b94f:  movzx eax, BYTE PTR [ecx]
 806b952:  sub ecx, 0x1
 806b955:  lea esi, [edi-0x1]
 806b958:  cmp dl, al
 806b95a:  jne 806b966
 806b95c:  mov edi, esi
 806b95e:  cmp DWORD PTR [ebp-0x42c], edi
 806b964:  jb 806b948
 806b966:  mov eax, DWORD PTR [ebp-0x42c]
 806b96c:  add eax, 0x1
 806b96f:  cmp eax, edi
 806b971:  ja 806bbcf
 806b977:  mov ecx, DWORD PTR [ebp-0x414]
 806b97d:  mov ebx, DWORD PTR [ebp+0x8]
 806b980:  add DWORD PTR [ebp-0x434], ecx
 806b986:  sub ebx, ecx
 806b988:  mov DWORD PTR [ebp-0x42c], ebx
 806b98e:  jmp 806b81b
 806b993:  nop
 806b994:  lea esi, [esi]
 806b998:  mov eax, DWORD PTR [ebp-0x434]
 806b99e:  sub eax, DWORD PTR [ebp-0x430]
 806b9a4:  mov DWORD PTR [ebp-0x42c], 0x0
 806b9ae:  lea eax, [ebx+eax+0x1]
 806b9b2:  mov DWORD PTR [ebp-0x434], eax
 806b9b8:  jmp 806b81b
 806b9bd:  xor eax, eax
 806b9bf:  add esp, 0x458
 806b9c5:  pop ebx
 806b9c6:  pop esi
 806b9c7:  pop edi
 806b9c8:  pop ebp
 806b9c9:  ret
 806b9ca:  mov eax, DWORD PTR [ebp+0x8]
 806b9cd:  sub eax, DWORD PTR [ebp-0x430]
 806b9d3:  cmp eax, DWORD PTR [ebp-0x430]
 806b9d9:  jb 806bb9d
 806b9df:  add eax, 0x1
 806b9e2:  mov edx, DWORD PTR [ebp-0x430]
 806b9e8:  xor esi, esi
 806b9ea:  mov DWORD PTR [ebp-0x424], eax
 806b9f0:  mov eax, DWORD PTR [ebp+0x8]
 806b9f3:  mov ecx, DWORD PTR [ebp-0x430]
 806b9f9:  mov DWORD PTR [ebp-0x450], 0x1
 806ba03:  sub DWORD PTR [ebp-0x450], ecx
 806ba09:  sub edx, 0x1
 806ba0c:  sub eax, 0x1
 806ba0f:  mov DWORD PTR [ebp-0x410], eax
 806ba15:  mov DWORD PTR [ebp-0x41c], edx
 806ba1b:  nop
 806ba1c:  lea esi, [esi]
 806ba20:  mov ebx, DWORD PTR [ebp+0x8]
 806ba23:  mov DWORD PTR [esp+0x4], 0x0
 806ba2b:  add ebx, esi
 806ba2d:  mov eax, ebx
 806ba2f:  sub eax, DWORD PTR [ebp-0x43c]
 806ba35:  mov DWORD PTR [ebp-0x420], ebx
 806ba3b:  mov DWORD PTR [esp+0x8], eax
 806ba3f:  mov eax, DWORD PTR [ebp-0x438]
 806ba45:  add eax, DWORD PTR [ebp-0x43c]
 806ba4b:  mov DWORD PTR [esp], eax
 806ba4e:  call 806c0c0
 806ba53:  test eax, eax
 806ba55:  jne 806b9bd
 806ba5b:  test ebx, ebx
 806ba5d:  je 806b9bd
 806ba63:  mov edi, DWORD PTR [ebp-0x438]
 806ba69:  mov ebx, DWORD PTR [ebp-0x420]
 806ba6f:  movzx eax, BYTE PTR [edi+ebx-0x1]
 806ba74:  mov eax, DWORD PTR [ebp+eax*4-0x40c]
 806ba7b:  test eax, eax
 806ba7d:  jne 806bb68
 806ba83:  mov edx, DWORD PTR [ebp-0x410]
 806ba89:  lea eax, [edi+esi]
 806ba8c:  cmp DWORD PTR [ebp-0x430], edx
 806ba92:  mov DWORD PTR [ebp-0x444], eax
 806ba98:  jae 806bb00
 806ba9a:  mov ecx, DWORD PTR [ebp-0x438]
 806baa0:  mov edx, DWORD PTR [ebp-0x440]
 806baa6:  add edx, DWORD PTR [ebp-0x430]
 806baac:  mov ebx, DWORD PTR [ebp-0x430]
 806bab2:  add ecx, esi
 806bab4:  mov DWORD PTR [ebp-0x444], ecx
 806baba:  movzx eax, BYTE PTR [edx]
 806babd:  cmp al, BYTE PTR [ecx+ebx]
 806bac0:  jne 806bb7b
 806bac6:  mov edi, edx
 806bac8:  mov edx, DWORD PTR [ebp-0x430]
 806bace:  mov ecx, DWORD PTR [ebp-0x438]
 806bad4:  lea eax, [esi+edx+0x1]
 806bad8:  mov ebx, edx
 806bada:  add ecx, eax
 806badc:  jmp 806baf5
 806bade:  xchg ax, ax
 806bae0:  movzx edx, BYTE PTR [edi+0x1]
 806bae4:  add edi, 0x1
 806bae7:  movzx eax, BYTE PTR [ecx]
 806baea:  add ecx, 0x1
 806baed:  cmp dl, al
 806baef:  jne 806bb88
 806baf5:  add ebx, 0x1
 806baf8:  cmp ebx, DWORD PTR [ebp-0x410]
 806bafe:  jb 806bae0
 806bb00:  cmp DWORD PTR [ebp-0x41c], 0xff
 806bb07:  je 806bb59
 806bb09:  mov ecx, DWORD PTR [ebp-0x41c]
 806bb0f:  mov ebx, DWORD PTR [ebp-0x440]
 806bb15:  mov edi, DWORD PTR [ebp-0x444]
 806bb1b:  movzx eax, BYTE PTR [ebx+ecx]
 806bb1f:  cmp al, BYTE PTR [edi+ecx]
 806bb22:  jne 806bb95
 806bb24:  mov edx, DWORD PTR [ebp-0x430]
 806bb2a:  mov edi, ebx
 806bb2c:  mov ebx, DWORD PTR [ebp-0x438]
 806bb32:  add edi, DWORD PTR [ebp-0x430]
 806bb38:  lea eax, [esi+edx-0x2]
 806bb3c:  add ebx, eax
 806bb3e:  jmp 806bb51
 806bb40:  movzx edx, BYTE PTR [edi-0x2]
 806bb44:  sub edi, 0x1
 806bb47:  movzx eax, BYTE PTR [ebx]
 806bb4a:  sub ebx, 0x1
 806bb4d:  cmp dl, al
 806bb4f:  jne 806bb95
 806bb51:  sub ecx, 0x1
 806bb54:  cmp ecx, 0xff
 806bb57:  jne 806bb40
 806bb59:  mov eax, DWORD PTR [ebp-0x444]
 806bb5f:  jmp 806b9bf
 806bb64:  lea esi, [esi]
 806bb68:  add esi, eax
 806bb6a:  mov ecx, DWORD PTR [ebp-0x420]
 806bb70:  mov DWORD PTR [ebp-0x43c], ecx
 806bb76:  jmp 806ba20
 806bb7b:  mov ebx, DWORD PTR [ebp-0x430]
 806bb81:  lea esi, [esi]
 806bb88:  mov eax, DWORD PTR [ebp-0x450]
 806bb8e:  add eax, esi
 806bb90:  lea esi, [eax+ebx]
 806bb93:  jmp 806bb6a
 806bb95:  add esi, DWORD PTR [ebp-0x424]
 806bb9b:  jmp 806bb6a
 806bb9d:  mov eax, DWORD PTR [ebp-0x430]
 806bba3:  jmp 806b9df
 806bba8:  mov ebx, DWORD PTR [ebp-0x458]
 806bbae:  mov eax, 0x1
 806bbb3:  jmp 806b6c3
 806bbb8:  mov ecx, edi
 806bbba:  mov eax, 0x1
 806bbbf:  jmp 806b633
 806bbc4:  mov edi, DWORD PTR [ebp-0x430]
 806bbca:  jmp 806b966
 806bbcf:  mov eax, DWORD PTR [ebp-0x438]
 806bbd5:  add eax, DWORD PTR [ebp-0x434]
 806bbdb:  jmp 806b9bf

0806bbe0 <strstr>:
 806bbe0:  push ebp
 806bbe1:  mov ebp, esp
 806bbe3:  push edi
 806bbe4:  push esi
 806bbe5:  push ebx
 806bbe6:  sub esp, 0x5c
 806bbe9:  mov eax, DWORD PTR [ebp+0x8]
 806bbec:  mov esi, DWORD PTR [ebp+0xc]
 806bbef:  mov DWORD PTR [ebp-0x40], eax
 806bbf2:  movzx ecx, BYTE PTR [eax]
 806bbf5:  test cl, cl
 806bbf7:  je 806c06d
 806bbfd:  movzx eax, BYTE PTR [esi]
 806bc00:  test al, al
 806bc02:  je 806bc44
 806bc04:  mov edx, DWORD PTR [ebp-0x40]
 806bc07:  mov edi, esi
 806bc09:  mov ebx, 0x1
 806bc0e:  jmp 806bc17
 806bc10:  movzx eax, BYTE PTR [edi]
 806bc13:  test al, al
 806bc15:  je 806bc40
 806bc17:  cmp cl, al
 806bc19:  sete al
 806bc1c:  add edx, 0x1
 806bc1f:  movzx ecx, BYTE PTR [edx]
 806bc22:  and ebx, eax
 806bc24:  add edi, 0x1
 806bc27:  test cl, cl
 806bc29:  jne 806bc10
 806bc2b:  xor eax, eax
 806bc2d:  cmp BYTE PTR [edi], 0x0
 806bc30:  je 806bc40
 806bc32:  add esp, 0x5c
 806bc35:  pop ebx
 806bc36:  pop esi
 806bc37:  pop edi
 806bc38:  pop ebp
 806bc39:  ret
 806bc3a:  lea esi, [esi]
 806bc40:  test bl, bl
 806bc42:  je 806bc50
 806bc44:  mov eax, DWORD PTR [ebp-0x40]
 806bc47:  add esp, 0x5c
 806bc4a:  pop ebx
 806bc4b:  pop esi
 806bc4c:  pop edi
 806bc4d:  pop ebp
 806bc4e:  ret
 806bc4f:  nop
 806bc50:  movsx eax, BYTE PTR [esi]
 806bc53:  mov DWORD PTR [esp+0x4], eax
 806bc57:  mov eax, DWORD PTR [ebp-0x40]
 806bc5a:  add eax, 0x1
 806bc5d:  mov DWORD PTR [esp], eax
 806bc60:  call 806ae20
 806bc65:  test eax, eax
 806bc67:  mov DWORD PTR [ebp-0x44], eax
 806bc6a:  je 806c060
 806bc70:  mov edx, edi
 806bc72:  sub edx, esi
 806bc74:  mov DWORD PTR [ebp-0x3c], edx
 806bc77:  sub edx, 0x1
 806bc7a:  je 806c060
 806bc80:  mov eax, DWORD PTR [ebp-0x40]
 806bc83:  sub edi, DWORD PTR [ebp-0x3c]
 806bc86:  add eax, DWORD PTR [ebp-0x3c]
 806bc89:  cmp DWORD PTR [ebp-0x44], eax
 806bc8c:  mov DWORD PTR [ebp-0x28], edi
 806bc8f:  mov DWORD PTR [ebp-0x38], 0x1
 806bc96:  ja 806bc9e
 806bc98:  sub eax, DWORD PTR [ebp-0x44]
 806bc9b:  mov DWORD PTR [ebp-0x38], eax
 806bc9e:  cmp DWORD PTR [ebp-0x3c], 0x1f
 806bca2:  jbe 806bcbf
 806bca4:  mov ecx, DWORD PTR [ebp-0x3c]
 806bca7:  mov edx, DWORD PTR [ebp-0x38]
 806bcaa:  mov eax, DWORD PTR [ebp-0x44]
 806bcad:  mov DWORD PTR [ebp+0x8], ecx
 806bcb0:  mov ecx, DWORD PTR [ebp-0x28]
 806bcb3:  add esp, 0x5c
 806bcb6:  pop ebx
 806bcb7:  pop esi
 806bcb8:  pop edi
 806bcb9:  pop ebp
 806bcba:  jmp 806b5f0
 806bcbf:  mov DWORD PTR [ebp-0x18], 0x1
 806bcc6:  mov edx, 0x1
 806bccb:  xor ecx, ecx
 806bccd:  mov edi, 0xffffffff
 806bcd2:  jmp 806bcec
 806bcd4:  lea esi, [esi]
 806bcd8:  mov edx, ebx
 806bcda:  mov ecx, edi
 806bcdc:  sub edx, edi
 806bcde:  mov eax, 0x1
 806bce3:  mov DWORD PTR [ebp-0x18], edx
 806bce6:  mov edi, ecx
 806bce8:  mov edx, eax
 806bcea:  mov ecx, ebx
 806bcec:  lea ebx, [edx+ecx]
 806bcef:  cmp DWORD PTR [ebp-0x3c], ebx
 806bcf2:  jbe 806bd32
 806bcf4:  mov eax, DWORD PTR [ebp-0x28]
 806bcf7:  mov esi, DWORD PTR [ebp-0x28]
 806bcfa:  add eax, edi
 806bcfc:  movzx eax, BYTE PTR [eax+edx]
 806bd00:  cmp BYTE PTR [esi+ebx], al
 806bd03:  jb 806bcd8
 806bd05:  je 806bd16
 806bd07:  lea ebx, [ecx+0x1]
 806bd0a:  mov edx, 0x1
 806bd0f:  mov eax, 0x1
 806bd14:  jmp 806bce3
 806bd16:  cmp edx, DWORD PTR [ebp-0x18]
 806bd19:  lea esi, [esi]
 806bd20:  je 806c08a
 806bd26:  lea eax, [edx+0x1]
 806bd29:  mov ebx, ecx
 806bd2b:  mov edx, DWORD PTR [ebp-0x18]
 806bd2e:  mov ecx, edi
 806bd30:  jmp 806bce3
 806bd32:  mov DWORD PTR [ebp-0x14], 0x1
 806bd39:  mov edx, 0x1
 806bd3e:  xor ebx, ebx
 806bd40:  mov DWORD PTR [ebp-0x5c], 0xffffffff
 806bd47:  jmp 806bd67
 806bd49:  lea esi, [esi]
 806bd50:  mov ebx, DWORD PTR [ebp-0x5c]
 806bd53:  mov edx, esi
 806bd55:  mov eax, 0x1
 806bd5a:  sub edx, DWORD PTR [ebp-0x5c]
 806bd5d:  mov DWORD PTR [ebp-0x14], edx
 806bd60:  mov edx, eax
 806bd62:  mov DWORD PTR [ebp-0x5c], ebx
 806bd65:  mov ebx, esi
 806bd67:  lea esi, [edx+ebx]
 806bd6a:  cmp DWORD PTR [ebp-0x3c], esi
 806bd6d:  jbe 806bdab
 806bd6f:  mov eax, DWORD PTR [ebp-0x28]
 806bd72:  add eax, DWORD PTR [ebp-0x5c]
 806bd75:  mov ecx, DWORD PTR [ebp-0x28]
 806bd78:  movzx eax, BYTE PTR [eax+edx]
 806bd7c:  cmp BYTE PTR [ecx+esi], al
 806bd7f:  ja 806bd50
 806bd81:  je 806bd92
 806bd83:  lea esi, [ebx+0x1]
 806bd86:  mov edx, 0x1
 806bd8b:  mov eax, 0x1
 806bd90:  jmp 806bd5d
 806bd92:  cmp edx, DWORD PTR [ebp-0x14]
 806bd95:  lea esi, [esi]
 806bd98:  je 806c07d
 806bd9e:  lea eax, [edx+0x1]
 806bda1:  mov esi, ebx
 806bda3:  mov edx, DWORD PTR [ebp-0x14]
 806bda6:  mov ebx, DWORD PTR [ebp-0x5c]
 806bda9:  jmp 806bd5d
 806bdab:  mov ebx, DWORD PTR [ebp-0x5c]
 806bdae:  lea ecx, [edi+0x1]
 806bdb1:  add ebx, 0x1
 806bdb4:  cmp ebx, ecx
 806bdb6:  mov DWORD PTR [ebp-0x10], ebx
 806bdb9:  jb 806c011
 806bdbf:  mov eax, DWORD PTR [ebp-0x10]
 806bdc2:  mov edi, DWORD PTR [ebp-0x28]
 806bdc5:  mov esi, DWORD PTR [ebp-0x28]
 806bdc8:  add edi, DWORD PTR [ebp-0x14]
 806bdcb:  mov ecx, eax
 806bdcd:  cmp eax, eax
 806bdcf:  repz cmpsb
 806bdd1:  jne 806bf02
 806bdd7:  mov edx, DWORD PTR [ebp-0x10]
 806bdda:  mov ecx, DWORD PTR [ebp-0x44]
 806bddd:  mov DWORD PTR [ebp-0x34], 0x0
 806bde4:  mov DWORD PTR [ebp-0x2c], 0x0
 806bdeb:  sub edx, 0x1
 806bdee:  add ecx, edx
 806bdf0:  mov DWORD PTR [ebp-0x4c], edx
 806bdf3:  mov DWORD PTR [ebp-0x50], ecx
 806bdf6:  xchg ax, ax
 806bdf8:  mov ebx, DWORD PTR [ebp-0x2c]
 806bdfb:  add ebx, DWORD PTR [ebp-0x3c]
 806bdfe:  mov eax, ebx
 806be00:  sub eax, DWORD PTR [ebp-0x38]
 806be03:  mov DWORD PTR [ebp-0x24], ebx
 806be06:  mov DWORD PTR [esp+0x4], 0x0
 806be0e:  mov DWORD PTR [esp+0x8], eax
 806be12:  mov eax, DWORD PTR [ebp-0x44]
 806be15:  add eax, DWORD PTR [ebp-0x38]
 806be18:  mov DWORD PTR [esp], eax
 806be1b:  call 806c0c0
 806be20:  test eax, eax
 806be22:  jne 806c059
 806be28:  test ebx, ebx
 806be2a:  je 806c059
 806be30:  mov edi, DWORD PTR [ebp-0x34]
 806be33:  mov ebx, DWORD PTR [ebp-0x10]
 806be36:  cmp edi, ebx
 806be38:  jae 806be3c
 806be3a:  mov edi, ebx
 806be3c:  cmp DWORD PTR [ebp-0x3c], edi
 806be3f:  jbe 806be85
 806be41:  mov ecx, DWORD PTR [ebp-0x28]
 806be44:  mov edx, DWORD PTR [ebp-0x44]
 806be47:  mov esi, DWORD PTR [ebp-0x2c]
 806be4a:  add ecx, edi
 806be4c:  add edx, edi
 806be4e:  movzx eax, BYTE PTR [ecx]
 806be51:  cmp al, BYTE PTR [edx+esi]
 806be54:  jne 806c020
 806be5a:  mov ebx, ecx
 806be5c:  mov ecx, DWORD PTR [ebp-0x44]
 806be5f:  lea eax, [edi+esi+0x1]
 806be63:  add ecx, eax
 806be65:  jmp 806be7d
 806be67:  nop
 806be68:  movzx edx, BYTE PTR [ebx+0x1]
 806be6c:  add ebx, 0x1
 806be6f:  movzx eax, BYTE PTR [ecx]
 806be72:  add ecx, 0x1
 806be75:  cmp dl, al
 806be77:  jne 806c020
 806be7d:  add edi, 0x1
 806be80:  cmp DWORD PTR [ebp-0x3c], edi
 806be83:  ja 806be68
 806be85:  mov eax, DWORD PTR [ebp-0x10]
 806be88:  cmp DWORD PTR [ebp-0x34], eax
 806be8b:  jae 806c096
 806be91:  mov edi, DWORD PTR [ebp-0x4c]
 806be94:  mov edx, DWORD PTR [ebp-0x28]
 806be97:  mov ebx, DWORD PTR [ebp-0x50]
 806be9a:  mov ecx, DWORD PTR [ebp-0x2c]
 806be9d:  movzx eax, BYTE PTR [edx+edi]
 806bea1:  cmp al, BYTE PTR [ebx+ecx]
 806bea4:  jne 806c096
 806beaa:  mov esi, DWORD PTR [ebp-0x10]
 806bead:  mov ebx, edx
 806beaf:  add ebx, DWORD PTR [ebp-0x10]
 806beb2:  lea eax, [esi+ecx-0x2]
 806beb6:  mov ecx, DWORD PTR [ebp-0x44]
 806beb9:  add ecx, eax
 806bebb:  jmp 806bed6
 806bebd:  lea esi, [esi]
 806bec0:  movzx edx, BYTE PTR [ebx-0x2]
 806bec4:  sub ebx, 0x1
 806bec7:  movzx eax, BYTE PTR [ecx]
 806beca:  sub ecx, 0x1
 806becd:  lea esi, [edi-0x1]
 806bed0:  cmp dl, al
 806bed2:  jne 806bedb
 806bed4:  mov edi, esi
 806bed6:  cmp edi, DWORD PTR [ebp-0x34]
 806bed9:  ja 806bec0
 806bedb:  mov eax, DWORD PTR [ebp-0x34]
 806bede:  add eax, 0x1
 806bee1:  cmp eax, edi
 806bee3:  ja 806c0ac
 806bee9:  mov eax, DWORD PTR [ebp-0x14]
 806beec:  mov edx, DWORD PTR [ebp-0x3c]
 806beef:  add DWORD PTR [ebp-0x2c], eax
 806bef2:  sub edx, eax
 806bef4:  mov DWORD PTR [ebp-0x34], edx
 806bef7:  mov ecx, DWORD PTR [ebp-0x24]
 806befa:  mov DWORD PTR [ebp-0x38], ecx
 806befd:  jmp 806bdf8
 806bf02:  mov eax, DWORD PTR [ebp-0x3c]
 806bf05:  sub eax, DWORD PTR [ebp-0x10]
 806bf08:  cmp eax, DWORD PTR [ebp-0x10]
 806bf0b:  jae 806bf10
 806bf0d:  mov eax, DWORD PTR [ebp-0x10]
 806bf10:  add eax, 0x1
 806bf13:  mov esi, DWORD PTR [ebp-0x10]
 806bf16:  mov DWORD PTR [ebp-0x30], eax
 806bf19:  mov eax, DWORD PTR [ebp-0x28]
 806bf1c:  add eax, DWORD PTR [ebp-0x10]
 806bf1f:  sub esi, 0x1
 806bf22:  mov DWORD PTR [ebp-0x20], esi
 806bf25:  xor esi, esi
 806bf27:  mov DWORD PTR [ebp-0x54], eax
 806bf2a:  lea esi, [esi]
 806bf30:  mov eax, DWORD PTR [ebp-0x3c]
 806bf33:  add eax, esi
 806bf35:  mov DWORD PTR [ebp-0x1c], eax
 806bf38:  sub eax, DWORD PTR [ebp-0x38]
 806bf3b:  mov DWORD PTR [esp+0x4], 0x0
 806bf43:  mov DWORD PTR [esp+0x8], eax
 806bf47:  mov eax, DWORD PTR [ebp-0x44]
 806bf4a:  add eax, DWORD PTR [ebp-0x38]
 806bf4d:  mov DWORD PTR [esp], eax
 806bf50:  call 806c0c0
 806bf55:  test eax, eax
 806bf57:  jne 806c059
 806bf5d:  mov ecx, DWORD PTR [ebp-0x1c]
 806bf60:  test ecx, ecx
 806bf62:  je 806c059
 806bf68:  mov edx, DWORD PTR [ebp-0x10]
 806bf6b:  cmp DWORD PTR [ebp-0x3c], edx
 806bf6e:  jbe 806bfb5
 806bf70:  mov ecx, DWORD PTR [ebp-0x54]
 806bf73:  mov edi, edx
 806bf75:  mov edx, DWORD PTR [ebp-0x44]
 806bf78:  add edx, DWORD PTR [ebp-0x10]
 806bf7b:  movzx eax, BYTE PTR [ecx]
 806bf7e:  cmp al, BYTE PTR [edx+esi]
 806bf81:  jne 806c040
 806bf87:  mov ebx, ecx
 806bf89:  mov ecx, DWORD PTR [ebp-0x44]
 806bf8c:  lea eax, [edi+esi+0x1]
 806bf90:  add ecx, eax
 806bf92:  jmp 806bfad
 806bf94:  lea esi, [esi]
 806bf98:  movzx edx, BYTE PTR [ebx+0x1]
 806bf9c:  add ebx, 0x1
 806bf9f:  movzx eax, BYTE PTR [ecx]
 806bfa2:  add ecx, 0x1
 806bfa5:  cmp dl, al
 806bfa7:  jne 806c040
 806bfad:  add edi, 0x1
 806bfb0:  cmp DWORD PTR [ebp-0x3c], edi
 806bfb3:  ja 806bf98
 806bfb5:  cmp DWORD PTR [ebp-0x20], 0xff
 806bfb9:  je 806c09e
 806bfbf:  mov ecx, DWORD PTR [ebp-0x44]
 806bfc2:  mov ebx, DWORD PTR [ebp-0x20]
 806bfc5:  mov edx, DWORD PTR [ebp-0x28]
 806bfc8:  add ecx, esi
 806bfca:  mov DWORD PTR [ebp-0x48], ecx
 806bfcd:  movzx eax, BYTE PTR [edx+ebx]
 806bfd1:  cmp al, BYTE PTR [ecx+ebx]
 806bfd4:  jne 806c054
 806bfd6:  mov ecx, DWORD PTR [ebp-0x10]
 806bfd9:  mov ebx, DWORD PTR [ebp-0x44]
 806bfdc:  mov edi, DWORD PTR [ebp-0x54]
 806bfdf:  lea eax, [ecx+esi-0x2]
 806bfe3:  mov ecx, DWORD PTR [ebp-0x20]
 806bfe6:  add ebx, eax
 806bfe8:  jmp 806c001
 806bfea:  lea esi, [esi]
 806bff0:  movzx edx, BYTE PTR [edi-0x2]
 806bff4:  sub edi, 0x1
 806bff7:  movzx eax, BYTE PTR [ebx]
 806bffa:  sub ebx, 0x1
 806bffd:  cmp dl, al
 806bfff:  jne 806c054
 806c001:  sub ecx, 0x1
 806c004:  cmp ecx, 0xff
 806c007:  jne 806bff0
 806c009:  mov eax, DWORD PTR [ebp-0x48]
 806c00c:  jmp 806bc32
 806c011:  mov esi, DWORD PTR [ebp-0x18]
 806c014:  mov DWORD PTR [ebp-0x10], ecx
 806c017:  mov DWORD PTR [ebp-0x14], esi
 806c01a:  jmp 806bdbf
 806c01f:  nop
 806c020:  mov eax, DWORD PTR [ebp-0x2c]
 806c023:  sub eax, DWORD PTR [ebp-0x10]
 806c026:  mov DWORD PTR [ebp-0x34], 0x0
 806c02d:  lea eax, [edi+eax+0x1]
 806c031:  mov DWORD PTR [ebp-0x2c], eax
 806c034:  jmp 806bef7
 806c039:  lea esi, [esi]
 806c040:  mov eax, esi
 806c042:  sub eax, DWORD PTR [ebp-0x10]
 806c045:  lea esi, [edi+eax+0x1]
 806c049:  mov ebx, DWORD PTR [ebp-0x1c]
 806c04c:  mov DWORD PTR [ebp-0x38], ebx
 806c04f:  jmp 806bf30
 806c054:  add esi, DWORD PTR [ebp-0x30]
 806c057:  jmp 806c049
 806c059:  xor eax, eax
 806c05b:  jmp 806bc32
 806c060:  mov eax, DWORD PTR [ebp-0x44]
 806c063:  nop
 806c064:  lea esi, [esi]
 806c068:  jmp 806bc32
 806c06d:  mov edi, esi
 806c06f:  mov ebx, 0x1
 806c074:  lea esi, [esi]
 806c078:  jmp 806bc2b
 806c07d:  mov ebx, DWORD PTR [ebp-0x5c]
 806c080:  mov eax, 0x1
 806c085:  jmp 806bd5d
 806c08a:  mov ecx, edi
 806c08c:  mov eax, 0x1
 806c091:  jmp 806bce3
 806c096:  mov edi, DWORD PTR [ebp-0x10]
 806c099:  jmp 806bedb
 806c09e:  mov edx, DWORD PTR [ebp-0x44]
 806c0a1:  lea esi, [edx+esi]
 806c0a4:  mov DWORD PTR [ebp-0x48], esi
 806c0a7:  jmp 806c009
 806c0ac:  mov eax, DWORD PTR [ebp-0x44]
 806c0af:  add eax, DWORD PTR [ebp-0x2c]
 806c0b2:  jmp 806bc32
 806c0b7:  nop
 806c0b8:  nop
 806c0b9:  nop
 806c0ba:  nop
 806c0bb:  nop
 806c0bc:  nop
 806c0bd:  nop
 806c0be:  nop
 806c0bf:  nop

0806c0c0 <__memchr>:
 806c0c0:  push esi
 806c0c1:  push edi
 806c0c2:  mov eax, DWORD PTR [esp+0xc]
 806c0c6:  mov edx, DWORD PTR [esp+0x10]
 806c0ca:  mov esi, DWORD PTR [esp+0x14]
 806c0ce:  cmp esi, 0x4
 806c0d1:  jb 806c21f
 806c0d7:  mov dh, dl
 806c0d9:  mov ecx, edx
 806c0db:  shl edx, 0x10
 806c0de:  mov dx, cx
 806c0e1:  test al, 0x3
 806c0e3:  je 806c1b6
 806c0e9:  cmp BYTE PTR [eax], dl
 806c0eb:  je 806c258
 806c0f1:  inc eax
 806c0f2:  dec esi
 806c0f3:  je 806c238
 806c0f9:  test al, 0x3
 806c0fb:  je 806c1b6
 806c101:  cmp BYTE PTR [eax], dl
 806c103:  je 806c258
 806c109:  inc eax
 806c10a:  dec esi
 806c10b:  je 806c238
 806c111:  test al, 0x3
 806c113:  je 806c1b6
 806c119:  cmp BYTE PTR [eax], dl
 806c11b:  je 806c258
 806c121:  inc eax
 806c122:  dec esi
 806c123:  jmp 806c1b6
 806c128:  nop
 806c129:  lea esi, [esi]
 806c130:  mov ecx, DWORD PTR [eax]
 806c132:  mov edi, 0xfefefeff
 806c137:  xor ecx, edx
 806c139:  add edi, ecx
 806c13b:  jae 806c245
 806c141:  xor edi, ecx
 806c143:  or edi, 0xfefefeff
 806c149:  inc edi
 806c14a:  jne 806c245
 806c150:  mov ecx, DWORD PTR [eax+0x4]
 806c153:  mov edi, 0xfefefeff
 806c158:  xor ecx, edx
 806c15a:  add edi, ecx
 806c15c:  jae 806c242
 806c162:  xor edi, ecx
 806c164:  or edi, 0xfefefeff
 806c16a:  inc edi
 806c16b:  jne 806c242
 806c171:  mov ecx, DWORD PTR [eax+0x8]
 806c174:  mov edi, 0xfefefeff
 806c179:  xor ecx, edx
 806c17b:  add edi, ecx
 806c17d:  jae 806c23f
 806c183:  xor edi, ecx
 806c185:  or edi, 0xfefefeff
 806c18b:  inc edi
 806c18c:  jne 806c23f
 806c192:  mov ecx, DWORD PTR [eax+0xc]
 806c195:  mov edi, 0xfefefeff
 806c19a:  xor ecx, edx
 806c19c:  add edi, ecx
 806c19e:  jae 806c23c
 806c1a4:  xor edi, ecx
 806c1a6:  or edi, 0xfefefeff
 806c1ac:  inc edi
 806c1ad:  jne 806c23c
 806c1b3:  add eax, 0x10
 806c1b6:  sub esi, 0x10
 806c1b9:  jae 806c130
 806c1bf:  cmp esi, 0xf4
 806c1c2:  jb 806c21f
 806c1c4:  mov ecx, DWORD PTR [eax]
 806c1c6:  mov edi, 0xfefefeff
 806c1cb:  xor ecx, edx
 806c1cd:  add edi, ecx
 806c1cf:  jae 806c245
 806c1d1:  xor edi, ecx
 806c1d3:  or edi, 0xfefefeff
 806c1d9:  inc edi
 806c1da:  jne 806c245
 806c1dc:  add eax, 0x4
 806c1df:  cmp esi, 0xf8
 806c1e2:  jb 806c21f
 806c1e4:  mov ecx, DWORD PTR [eax]
 806c1e6:  mov edi, 0xfefefeff
 806c1eb:  xor ecx, edx
 806c1ed:  add edi, ecx
 806c1ef:  jae 806c245
 806c1f1:  xor edi, ecx
 806c1f3:  or edi, 0xfefefeff
 806c1f9:  inc edi
 806c1fa:  jne 806c245
 806c1fc:  add eax, 0x4
 806c1ff:  cmp esi, 0xfc
 806c202:  jb 806c21f
 806c204:  mov ecx, DWORD PTR [eax]
 806c206:  mov edi, 0xfefefeff
 806c20b:  xor ecx, edx
 806c20d:  add edi, ecx
 806c20f:  jae 806c245
 806c211:  xor edi, ecx
 806c213:  or edi, 0xfefefeff
 806c219:  inc edi
 806c21a:  jne 806c245
 806c21c:  add eax, 0x4
 806c21f:  and esi, 0x3
 806c222:  je 806c238
 806c224:  cmp BYTE PTR [eax], dl
 806c226:  je 806c258
 806c228:  inc eax
 806c229:  dec esi
 806c22a:  je 806c238
 806c22c:  cmp BYTE PTR [eax], dl
 806c22e:  je 806c258
 806c230:  inc eax
 806c231:  dec esi
 806c232:  je 806c238
 806c234:  cmp BYTE PTR [eax], dl
 806c236:  je 806c258
 806c238:  xor eax, eax
 806c23a:  jmp 806c258
 806c23c:  add eax, 0x4
 806c23f:  add eax, 0x4
 806c242:  add eax, 0x4
 806c245:  test cl, cl
 806c247:  je 806c258
 806c249:  inc eax
 806c24a:  test ch, ch
 806c24c:  je 806c258
 806c24e:  inc eax
 806c24f:  test ecx, 0xff0000
 806c255:  je 806c258
 806c257:  inc eax
 806c258:  pop edi
 806c259:  pop esi
 806c25a:  ret
 806c25b:  nop
 806c25c:  nop
 806c25d:  nop
 806c25e:  nop
 806c25f:  nop

0806c260 <memmove>:
 806c260:  push ebp
 806c261:  mov ebp, esp
 806c263:  sub esp, 0xc
 806c266:  mov DWORD PTR [esp+0x8], edi
 806c26a:  mov edi, DWORD PTR [ebp+0x8]
 806c26d:  mov edx, DWORD PTR [ebp+0xc]
 806c270:  mov ecx, DWORD PTR [ebp+0x10]
 806c273:  mov DWORD PTR [esp+0x4], esi
 806c277:  mov eax, edi
 806c279:  sub eax, edx
 806c27b:  mov esi, edx
 806c27d:  cmp eax, ecx
 806c27f:  mov DWORD PTR [esp], ebx
 806c282:  jb 806c2c0
 806c284:  cmp ecx, 0x7
 806c287:  jbe 806c2a8
 806c289:  mov edx, edi
 806c28b:  mov eax, ecx
 806c28d:  neg edx
 806c28f:  and edx, 0x3
 806c292:  sub eax, edx
 806c294:  mov ecx, edx
 806c296:  cld
 806c297:  rep movsb
 806c299:  mov edx, eax
 806c29b:  shr edx, 0x2
 806c29e:  mov ecx, edx
 806c2a0:  cld
 806c2a1:  rep movsd
 806c2a3:  mov ecx, eax
 806c2a5:  and ecx, 0x3
 806c2a8:  cld
 806c2a9:  rep movsb
 806c2ab:  mov eax, DWORD PTR [ebp+0x8]
 806c2ae:  mov ebx, DWORD PTR [esp]
 806c2b1:  mov esi, DWORD PTR [esp+0x4]
 806c2b5:  mov edi, DWORD PTR [esp+0x8]
 806c2b9:  mov esp, ebp
 806c2bb:  pop ebp
 806c2bc:  ret
 806c2bd:  lea esi, [esi]
 806c2c0:  cmp ecx, 0x7
 806c2c3:  lea esi, [ecx+edx]
 806c2c6:  lea edx, [ecx+edi]
 806c2c9:  jbe 806c2fc
 806c2cb:  mov ebx, edx
 806c2cd:  mov eax, ecx
 806c2cf:  and ebx, 0x3
 806c2d2:  sub esi, 0x1
 806c2d5:  sub eax, ebx
 806c2d7:  mov ecx, ebx
 806c2d9:  lea edi, [edx-0x1]
 806c2dc:  std
 806c2dd:  rep movsb
 806c2df:  cld
 806c2e0:  mov edx, eax
 806c2e2:  sub edi, 0x3
 806c2e5:  shr edx, 0x2
 806c2e8:  sub esi, 0x3
 806c2eb:  mov ecx, edx
 806c2ed:  std
 806c2ee:  rep movsd
 806c2f0:  cld
 806c2f1:  mov ecx, eax
 806c2f3:  add esi, 0x4
 806c2f6:  lea edx, [edi+0x4]
 806c2f9:  and ecx, 0x3
 806c2fc:  lea edi, [edx-0x1]
 806c2ff:  sub esi, 0x1
 806c302:  std
 806c303:  rep movsb
 806c305:  cld
 806c306:  jmp 806c2ab
 806c308:  nop
 806c309:  nop
 806c30a:  nop
 806c30b:  nop
 806c30c:  nop
 806c30d:  nop
 806c30e:  nop
 806c30f:  nop

0806c310 <__mempcpy>:
 806c310:  push ebp
 806c311:  mov ebp, esp
 806c313:  sub esp, 0x8
 806c316:  mov eax, DWORD PTR [ebp+0x10]
 806c319:  mov DWORD PTR [esp], esi
 806c31c:  mov esi, DWORD PTR [ebp+0xc]
 806c31f:  mov DWORD PTR [esp+0x4], edi
 806c323:  mov edi, DWORD PTR [ebp+0x8]
 806c326:  cmp eax, 0x7
 806c329:  jbe 806c342
 806c32b:  mov ecx, edi
 806c32d:  neg ecx
 806c32f:  and ecx, 0x3
 806c332:  sub eax, ecx
 806c334:  cld
 806c335:  rep movsb
 806c337:  mov ecx, eax
 806c339:  shr ecx, 0x2
 806c33c:  cld
 806c33d:  rep movsd
 806c33f:  and eax, 0x3
 806c342:  mov ecx, eax
 806c344:  cld
 806c345:  rep movsb
 806c347:  mov eax, edi
 806c349:  mov esi, DWORD PTR [esp]
 806c34c:  mov edi, DWORD PTR [esp+0x4]
 806c350:  mov esp, ebp
 806c352:  pop ebp
 806c353:  ret
 806c354:  nop
 806c355:  nop
 806c356:  nop
 806c357:  nop
 806c358:  nop
 806c359:  nop
 806c35a:  nop
 806c35b:  nop
 806c35c:  nop
 806c35d:  nop
 806c35e:  nop
 806c35f:  nop

0806c360 <__stpcpy>:
 806c360:  mov eax, DWORD PTR [esp+0x4]
 806c364:  mov ecx, DWORD PTR [esp+0x8]
 806c368:  sub ecx, eax
 806c36a:  sub eax, 0x4
 806c370:  add eax, 0x4
 806c373:  mov dl, BYTE PTR [eax+ecx]
 806c376:  mov BYTE PTR [eax], dl
 806c378:  test dl, dl
 806c37a:  je 806c3a0
 806c37c:  mov dl, BYTE PTR [eax+ecx+0x1]
 806c380:  mov BYTE PTR [eax+0x1], dl
 806c383:  test dl, dl
 806c385:  je 806c39f
 806c387:  mov dl, BYTE PTR [eax+ecx+0x2]
 806c38b:  mov BYTE PTR [eax+0x2], dl
 806c38e:  test dl, dl
 806c390:  je 806c39e
 806c392:  mov dl, BYTE PTR [eax+ecx+0x3]
 806c396:  mov BYTE PTR [eax+0x3], dl
 806c399:  test dl, dl
 806c39b:  jne 806c370
 806c39d:  inc eax
 806c39e:  inc eax
 806c39f:  inc eax
 806c3a0:  ret
 806c3a1:  nop
 806c3a2:  nop
 806c3a3:  nop
 806c3a4:  nop
 806c3a5:  nop
 806c3a6:  nop
 806c3a7:  nop
 806c3a8:  nop
 806c3a9:  nop
 806c3aa:  nop
 806c3ab:  nop
 806c3ac:  nop
 806c3ad:  nop
 806c3ae:  nop
 806c3af:  nop

0806c3b0 <__strcasecmp>:
 806c3b0:  mov eax, gs:0x0
 806c3b6:  mov edx, 0xffffffe4
 806c3bc:  push ebp
 806c3bd:  mov ebp, esp
 806c3bf:  push edi
 806c3c0:  mov edi, DWORD PTR [ebp+0xc]
 806c3c3:  push esi
 806c3c4:  push ebx
 806c3c5:  mov edx, DWORD PTR [eax+edx]
 806c3c8:  xor eax, eax
 806c3ca:  cmp DWORD PTR [ebp+0x8], edi
 806c3cd:  je 806c3f9
 806c3cf:  mov ebx, DWORD PTR [edx+0x38]
 806c3d2:  xor ecx, ecx
 806c3d4:  lea esi, [esi]
 806c3d8:  mov eax, DWORD PTR [ebp+0x8]
 806c3db:  movzx esi, BYTE PTR [eax+ecx]
 806c3df:  mov edx, esi
 806c3e1:  movzx eax, dl
 806c3e4:  movzx edx, BYTE PTR [edi+ecx]
 806c3e8:  mov eax, DWORD PTR [ebx+eax*4]
 806c3eb:  sub eax, DWORD PTR [ebx+edx*4]
 806c3ee:  jne 806c3f9
 806c3f0:  mov edx, esi
 806c3f2:  add ecx, 0x1
 806c3f5:  test dl, dl
 806c3f7:  jne 806c3d8
 806c3f9:  pop ebx
 806c3fa:  pop esi
 806c3fb:  pop edi
 806c3fc:  pop ebp
 806c3fd:  ret
 806c3fe:  nop
 806c3ff:  nop

0806c400 <__rawmemchr>:
 806c400:  push edi
 806c401:  mov eax, DWORD PTR [esp+0x8]
 806c405:  mov edx, DWORD PTR [esp+0xc]
 806c409:  mov dh, dl
 806c40b:  mov ecx, edx
 806c40d:  shl edx, 0x10
 806c410:  mov dx, cx
 806c413:  test al, 0x3
 806c415:  je 806c440
 806c417:  cmp BYTE PTR [eax], dl
 806c419:  je 806c4c4
 806c41f:  inc eax
 806c420:  test al, 0x3
 806c422:  je 806c440
 806c424:  cmp BYTE PTR [eax], dl
 806c426:  je 806c4c4
 806c42c:  inc eax
 806c42d:  test al, 0x3
 806c42f:  je 806c440
 806c431:  cmp BYTE PTR [eax], dl
 806c433:  je 806c4c4
 806c439:  inc eax
 806c43a:  lea esi, [esi]
 806c440:  mov ecx, DWORD PTR [eax]
 806c442:  mov edi, 0xfefefeff
 806c447:  xor ecx, edx
 806c449:  add edi, ecx
 806c44b:  jae 806c4b1
 806c44d:  xor edi, ecx
 806c44f:  or edi, 0xfefefeff
 806c455:  inc edi
 806c456:  jne 806c4b1
 806c458:  mov ecx, DWORD PTR [eax+0x4]
 806c45b:  mov edi, 0xfefefeff
 806c460:  xor ecx, edx
 806c462:  add edi, ecx
 806c464:  jae 806c4ae
 806c466:  xor edi, ecx
 806c468:  or edi, 0xfefefeff
 806c46e:  inc edi
 806c46f:  jne 806c4ae
 806c471:  mov ecx, DWORD PTR [eax+0x8]
 806c474:  mov edi, 0xfefefeff
 806c479:  xor ecx, edx
 806c47b:  add edi, ecx
 806c47d:  jae 806c4ab
 806c47f:  xor edi, ecx
 806c481:  or edi, 0xfefefeff
 806c487:  inc edi
 806c488:  jne 806c4ab
 806c48a:  mov ecx, DWORD PTR [eax+0xc]
 806c48d:  mov edi, 0xfefefeff
 806c492:  xor ecx, edx
 806c494:  add edi, ecx
 806c496:  jae 806c4a8
 806c498:  xor edi, ecx
 806c49a:  or edi, 0xfefefeff
 806c4a0:  inc edi
 806c4a1:  jne 806c4a8
 806c4a3:  add eax, 0x10
 806c4a6:  jmp 806c440
 806c4a8:  add eax, 0x4
 806c4ab:  add eax, 0x4
 806c4ae:  add eax, 0x4
 806c4b1:  test cl, cl
 806c4b3:  je 806c4c4
 806c4b5:  inc eax
 806c4b6:  test ch, ch
 806c4b8:  je 806c4c4
 806c4ba:  inc eax
 806c4bb:  test ecx, 0xff0000
 806c4c1:  je 806c4c4
 806c4c3:  inc eax
 806c4c4:  pop edi
 806c4c5:  ret
 806c4c6:  nop
 806c4c7:  nop
 806c4c8:  nop
 806c4c9:  nop
 806c4ca:  nop
 806c4cb:  nop
 806c4cc:  nop
 806c4cd:  nop
 806c4ce:  nop
 806c4cf:  nop

0806c4d0 <__argz_count>:
 806c4d0:  push ebp
 806c4d1:  mov ebp, esp
 806c4d3:  push edi
 806c4d4:  xor edi, edi
 806c4d6:  push esi
 806c4d7:  push ebx
 806c4d8:  sub esp, 0x4
 806c4db:  mov ebx, DWORD PTR [ebp+0xc]
 806c4de:  mov esi, DWORD PTR [ebp+0x8]
 806c4e1:  test ebx, ebx
 806c4e3:  je 806c4fd
 806c4e5:  lea esi, [esi]
 806c4e8:  mov DWORD PTR [esp], esi
 806c4eb:  add edi, 0x1
 806c4ee:  call 804eea0
 806c4f3:  lea esi, [esi+eax+0x1]
 806c4f7:  not eax
 806c4f9:  add ebx, eax
 806c4fb:  jne 806c4e8
 806c4fd:  add esp, 0x4
 806c500:  mov eax, edi
 806c502:  pop ebx
 806c503:  pop esi
 806c504:  pop edi
 806c505:  pop ebp
 806c506:  ret
 806c507:  nop
 806c508:  nop
 806c509:  nop
 806c50a:  nop
 806c50b:  nop
 806c50c:  nop
 806c50d:  nop
 806c50e:  nop
 806c50f:  nop

0806c510 <__argz_stringify>:
 806c510:  push ebp
 806c511:  mov ebp, esp
 806c513:  push edi
 806c514:  push esi
 806c515:  push ebx
 806c516:  sub esp, 0x8
 806c519:  mov ebx, DWORD PTR [ebp+0xc]
 806c51c:  mov esi, DWORD PTR [ebp+0x8]
 806c51f:  mov edi, DWORD PTR [ebp+0x10]
 806c522:  test ebx, ebx
 806c524:  jne 806c532
 806c526:  jmp 806c54c
 806c528:  lea eax, [esi+edx]
 806c52b:  mov edx, edi
 806c52d:  mov BYTE PTR [eax], dl
 806c52f:  lea esi, [eax+0x1]
 806c532:  mov DWORD PTR [esp+0x4], ebx
 806c536:  mov DWORD PTR [esp], esi
 806c539:  call 806b180
 806c53e:  mov edx, eax
 806c540:  mov eax, ebx
 806c542:  sub eax, edx
 806c544:  cmp eax, 0x1
 806c547:  lea ebx, [eax-0x1]
 806c54a:  ja 806c528
 806c54c:  add esp, 0x8
 806c54f:  pop ebx
 806c550:  pop esi
 806c551:  pop edi
 806c552:  pop ebp
 806c553:  ret
 806c554:  nop
 806c555:  nop
 806c556:  nop
 806c557:  nop
 806c558:  nop
 806c559:  nop
 806c55a:  nop
 806c55b:  nop
 806c55c:  nop
 806c55d:  nop
 806c55e:  nop
 806c55f:  nop

0806c560 <__wmemcpy>:
 806c560:  push ebp
 806c561:  mov ebp, esp
 806c563:  shl DWORD PTR [ebp+0x10], 0x2
 806c567:  pop ebp
 806c568:  jmp 804efc0
 806c56d:  nop
 806c56e:  nop
 806c56f:  nop

0806c570 <__wmemmove>:
 806c570:  push ebp
 806c571:  mov ebp, esp
 806c573:  shl DWORD PTR [ebp+0x10], 0x2
 806c577:  pop ebp
 806c578:  jmp 806c260
 806c57d:  nop
 806c57e:  nop
 806c57f:  nop

0806c580 <wmemset>:
 806c580:  push ebp
 806c581:  mov ebp, esp
 806c583:  push edi
 806c584:  mov edi, DWORD PTR [ebp+0x8]
 806c587:  push esi
 806c588:  mov ecx, DWORD PTR [ebp+0xc]
 806c58b:  push ebx
 806c58c:  mov ebx, DWORD PTR [ebp+0x10]
 806c58f:  mov eax, edi
 806c591:  mov esi, edi
 806c593:  cmp ebx, 0x3
 806c596:  mov edx, ebx
 806c598:  jbe 806c5c8
 806c59a:  lea esi, [esi]
 806c5a0:  sub edx, 0x4
 806c5a3:  mov DWORD PTR [eax], ecx
 806c5a5:  mov DWORD PTR [eax+0x4], ecx
 806c5a8:  mov DWORD PTR [eax+0x8], ecx
 806c5ab:  mov DWORD PTR [eax+0xc], ecx
 806c5ae:  add eax, 0x10
 806c5b1:  cmp edx, 0x3
 806c5b4:  ja 806c5a0
 806c5b6:  lea eax, [ebx-0x4]
 806c5b9:  mov ebx, eax
 806c5bb:  shr eax, 0x2
 806c5be:  and ebx, 0x3
 806c5c1:  shl eax, 0x4
 806c5c4:  lea esi, [edi+eax+0x10]
 806c5c8:  test ebx, ebx
 806c5ca:  je 806c5de
 806c5cc:  cmp ebx, 0x1
 806c5cf:  mov DWORD PTR [esi], ecx
 806c5d1:  je 806c5de
 806c5d3:  cmp ebx, 0x3
 806c5d6:  mov DWORD PTR [esi+0x4], ecx
 806c5d9:  jne 806c5de
 806c5db:  mov DWORD PTR [esi+0x8], ecx
 806c5de:  mov eax, edi
 806c5e0:  pop ebx
 806c5e1:  pop esi
 806c5e2:  pop edi
 806c5e3:  pop ebp
 806c5e4:  ret
 806c5e5:  nop
 806c5e6:  nop
 806c5e7:  nop
 806c5e8:  nop
 806c5e9:  nop
 806c5ea:  nop
 806c5eb:  nop
 806c5ec:  nop
 806c5ed:  nop
 806c5ee:  nop
 806c5ef:  nop

0806c5f0 <__wmempcpy>:
 806c5f0:  push ebp
 806c5f1:  mov ebp, esp
 806c5f3:  shl DWORD PTR [ebp+0x10], 0x2
 806c5f7:  pop ebp
 806c5f8:  jmp 806c310
 806c5fd:  nop
 806c5fe:  nop
 806c5ff:  nop

0806c600 <__wcrtomb>:
 806c600:  push ebp
 806c601:  mov eax, gs:0x0
 806c607:  mov ebp, esp
 806c609:  push edi
 806c60a:  push esi
 806c60b:  push ebx
 806c60c:  sub esp, 0x50
 806c60f:  mov ecx, 0xffffffd8
 806c615:  mov DWORD PTR [ebp-0x3c], eax
 806c618:  mov edx, DWORD PTR [ebp+0x10]
 806c61b:  mov edi, DWORD PTR [ebp+0x8]
 806c61e:  mov eax, DWORD PTR [eax+ecx]
 806c621:  mov eax, DWORD PTR [eax]
 806c623:  mov eax, DWORD PTR [eax+0x58]
 806c626:  mov DWORD PTR [ebp-0x2c], 0x0
 806c62d:  mov DWORD PTR [ebp-0x28], 0x1
 806c634:  mov DWORD PTR [ebp-0x30], 0x1
 806c63b:  add eax, 0x12
 806c63e:  and eax, 0xfc
 806c641:  sub esp, eax
 806c643:  lea eax, [esp+0x2f]
 806c647:  and eax, 0xf0
 806c64a:  test edx, edx
 806c64c:  je 806c810
 806c652:  test edi, edi
 806c654:  mov DWORD PTR [ebp-0x24], edx
 806c657:  mov DWORD PTR [ebp-0x18], 0x0
 806c65e:  je 806c828
 806c664:  mov edx, DWORD PTR [ebp-0x3c]
 806c667:  mov DWORD PTR [ebp-0x38], edi
 806c66a:  mov eax, DWORD PTR [edx+ecx]
 806c66d:  mov ebx, DWORD PTR [eax]
 806c66f:  mov eax, edi
 806c671:  add eax, DWORD PTR [ebx+0x58]
 806c674:  mov DWORD PTR [ebp-0x34], eax
 806c677:  mov esi, DWORD PTR [ebx+0x14]
 806c67a:  test esi, esi
 806c67c:  je 806c838
 806c682:  mov eax, DWORD PTR [esi+0x8]
 806c685:  mov edx, DWORD PTR [eax]
 806c687:  mov ebx, DWORD PTR [eax+0x14]
 806c68a:  test edx, edx
 806c68c:  je 806c698
 806c68e:  ror ebx, 0x9
 806c691:  xor ebx, DWORD PTR gs:0x18
 806c698:  mov eax, DWORD PTR [ebp+0xc]
 806c69b:  test eax, eax
 806c69d:  jne 806c710
 806c69f:  mov DWORD PTR [esp], ebx
 806c6a2:  call 807f350
 806c6a7:  lea eax, [ebp-0x10]
 806c6aa:  mov DWORD PTR [esp+0x14], eax
 806c6ae:  lea eax, [ebp-0x38]
 806c6b1:  mov DWORD PTR [esp+0x1c], 0x1
 806c6b9:  mov DWORD PTR [esp+0x18], 0x1
 806c6c1:  mov DWORD PTR [esp+0x10], 0x0
 806c6c9:  mov DWORD PTR [esp+0xc], 0x0
 806c6d1:  mov DWORD PTR [esp+0x8], 0x0
 806c6d9:  mov DWORD PTR [esp+0x4], eax
 806c6dd:  mov eax, DWORD PTR [esi+0x8]
 806c6e0:  mov DWORD PTR [esp], eax
 806c6e3:  call ebx
 806c6e5:  test eax, eax
 806c6e7:  mov edx, eax
 806c6e9:  jne 806c7b0
 806c6ef:  mov eax, DWORD PTR [ebp-0x38]
 806c6f2:  mov BYTE PTR [eax], 0x0
 806c6f5:  add eax, 0x1
 806c6f8:  test edx, edx
 806c6fa:  mov DWORD PTR [ebp-0x38], eax
 806c6fd:  jne 806c763
 806c6ff:  nop
 806c700:  mov eax, DWORD PTR [ebp-0x38]
 806c703:  lea esp, [ebp-0xc]
 806c706:  pop ebx
 806c707:  pop esi
 806c708:  sub eax, edi
 806c70a:  pop edi
 806c70b:  pop ebp
 806c70c:  ret
 806c70d:  lea esi, [esi]
 806c710:  lea eax, [ebp+0xc]
 806c713:  mov DWORD PTR [ebp-0x14], eax
 806c716:  mov DWORD PTR [esp], ebx
 806c719:  call 807f350
 806c71e:  lea eax, [ebp-0x10]
 806c721:  mov DWORD PTR [esp+0x1c], 0x1
 806c729:  mov DWORD PTR [esp+0x18], 0x0
 806c731:  mov DWORD PTR [esp+0x14], eax
 806c735:  mov DWORD PTR [esp+0x10], 0x0
 806c73d:  mov eax, DWORD PTR [ebp-0x14]
 806c740:  add eax, 0x4
 806c743:  mov DWORD PTR [esp+0xc], eax
 806c747:  lea eax, [ebp-0x14]
 806c74a:  mov DWORD PTR [esp+0x8], eax
 806c74e:  lea eax, [ebp-0x38]
 806c751:  mov DWORD PTR [esp+0x4], eax
 806c755:  mov eax, DWORD PTR [esi+0x8]
 806c758:  mov DWORD PTR [esp], eax
 806c75b:  call ebx
 806c75d:  mov edx, eax
 806c75f:  test edx, edx
 806c761:  je 806c700
 806c763:  cmp edx, 0x4
 806c766:  je 806c7c0
 806c768:  cmp edx, 0x6
 806c76b:  nop
 806c76c:  lea esi, [esi]
 806c770:  je 806c7c0
 806c772:  cmp edx, 0x7
 806c775:  lea esi, [esi]
 806c778:  je 806c7c0
 806c77a:  cmp edx, 0x5
 806c77d:  lea esi, [esi]
 806c780:  je 806c700
 806c786:  mov DWORD PTR [esp+0xc], 0x80b1cad
 806c78e:  mov DWORD PTR [esp+0x8], 0x67
 806c796:  mov DWORD PTR [esp+0x4], 0x80b1ca3
 806c79e:  mov DWORD PTR [esp], 0x80b1cb8
 806c7a5:  call 8051490
 806c7aa:  lea esi, [esi]
 806c7b0:  cmp eax, 0x4
 806c7b3:  jne 806c75f
 806c7b5:  jmp 806c6ef
 806c7ba:  lea esi, [esi]
 806c7c0:  test edx, edx
 806c7c2:  lea esi, [esi]
 806c7c8:  je 806c700
 806c7ce:  cmp edx, 0x4
 806c7d1:  lea esi, [esi]
 806c7d8:  je 806c700
 806c7de:  cmp edx, 0x5
 806c7e1:  lea esi, [esi]
 806c7e8:  je 806c700
 806c7ee:  mov ebx, DWORD PTR [ebp-0x3c]
 806c7f1:  mov eax, 0xffffffe8
 806c7f6:  mov DWORD PTR [ebx+eax], 0x54
 806c7fd:  lea esp, [ebp-0xc]
 806c800:  mov eax, 0xffffffff
 806c805:  pop ebx
 806c806:  pop esi
 806c807:  pop edi
 806c808:  pop ebp
 806c809:  ret
 806c80a:  lea esi, [esi]
 806c810:  mov edx, 0x80d2968
 806c815:  test edi, edi
 806c817:  mov DWORD PTR [ebp-0x24], edx
 806c81a:  mov DWORD PTR [ebp-0x18], 0x0
 806c821:  jne 806c664
 806c827:  nop
 806c828:  mov edi, eax
 806c82a:  mov DWORD PTR [ebp+0xc], 0x0
 806c831:  jmp 806c664
 806c836:  xchg ax, ax
 806c838:  cmp ebx, 0x80b8880
 806c83e:  mov esi, 0x80b1e20
 806c843:  je 806c682
 806c849:  mov eax, ebx
 806c84b:  call 806d110
 806c850:  mov esi, DWORD PTR [ebx+0x14]
 806c853:  jmp 806c682
 806c858:  nop
 806c859:  nop
 806c85a:  nop
 806c85b:  nop
 806c85c:  nop
 806c85d:  nop
 806c85e:  nop
 806c85f:  nop

0806c860 <__wcsrtombs>:
 806c860:  push ebp
 806c861:  mov ebp, esp
 806c863:  push edi
 806c864:  push esi
 806c865:  push ebx
 806c866:  sub esp, 0x164
 806c86c:  mov eax, DWORD PTR [ebp+0x14]
 806c86f:  mov DWORD PTR [ebp-0x34], 0x0
 806c876:  mov DWORD PTR [ebp-0x30], 0x1
 806c87d:  mov DWORD PTR [ebp-0x38], 0x1
 806c884:  test eax, eax
 806c886:  je 806ca18
 806c88c:  mov DWORD PTR [ebp-0x2c], eax
 806c88f:  mov eax, gs:0x0
 806c895:  mov DWORD PTR [ebp-0x20], 0x0
 806c89c:  mov DWORD PTR [ebp-0x14c], eax
 806c8a2:  mov eax, 0xffffffd8
 806c8a7:  mov edx, DWORD PTR [ebp-0x14c]
 806c8ad:  mov eax, DWORD PTR [edx+eax]
 806c8b0:  mov ebx, DWORD PTR [eax]
 806c8b2:  mov eax, DWORD PTR [ebx+0x14]
 806c8b5:  test eax, eax
 806c8b7:  je 806ca28
 806c8bd:  mov edi, DWORD PTR [eax+0x8]
 806c8c0:  mov ecx, DWORD PTR [edi]
 806c8c2:  mov esi, DWORD PTR [edi+0x14]
 806c8c5:  test ecx, ecx
 806c8c7:  je 806c8d3
 806c8c9:  ror esi, 0x9
 806c8cc:  xor esi, DWORD PTR gs:0x18
 806c8d3:  mov edx, DWORD PTR [ebp+0x8]
 806c8d6:  test edx, edx
 806c8d8:  je 806ca48
 806c8de:  mov edx, DWORD PTR [ebp+0xc]
 806c8e1:  mov eax, DWORD PTR [ebp+0x10]
 806c8e4:  mov ebx, DWORD PTR [edx]
 806c8e6:  mov DWORD PTR [esp+0x4], eax
 806c8ea:  mov DWORD PTR [esp], ebx
 806c8ed:  call 806cea0
 806c8f2:  mov edx, DWORD PTR [ebp+0x8]
 806c8f5:  mov DWORD PTR [esp], esi
 806c8f8:  mov DWORD PTR [ebp-0x40], edx
 806c8fb:  mov DWORD PTR [ebp-0x148], eax
 806c901:  mov eax, edx
 806c903:  add eax, DWORD PTR [ebp+0x10]
 806c906:  mov DWORD PTR [ebp-0x3c], eax
 806c909:  call 807f350
 806c90e:  mov edx, DWORD PTR [ebp-0x148]
 806c914:  lea eax, [ebp-0x14]
 806c917:  mov DWORD PTR [esp+0x14], eax
 806c91b:  mov DWORD PTR [esp+0x1c], 0x1
 806c923:  mov DWORD PTR [esp+0x18], 0x0
 806c92b:  lea eax, [ebx+edx*4+0x4]
 806c92f:  mov DWORD PTR [esp+0xc], eax
 806c933:  mov eax, DWORD PTR [ebp+0xc]
 806c936:  mov DWORD PTR [esp+0x10], 0x0
 806c93e:  mov DWORD PTR [esp], edi
 806c941:  mov DWORD PTR [esp+0x8], eax
 806c945:  lea eax, [ebp-0x40]
 806c948:  mov DWORD PTR [esp+0x4], eax
 806c94c:  call esi
 806c94e:  mov edx, eax
 806c950:  mov eax, DWORD PTR [ebp-0x40]
 806c953:  mov ebx, eax
 806c955:  sub ebx, DWORD PTR [ebp+0x8]
 806c958:  test edx, edx
 806c95a:  je 806c9b0
 806c95c:  cmp edx, 0x4
 806c95f:  je 806c9b0
 806c961:  test edx, edx
 806c963:  setne al
 806c966:  cmp edx, 0x4
 806c969:  setne cl
 806c96c:  test al, al
 806c96e:  je 806c9a1
 806c970:  test cl, cl
 806c972:  jne 806c9e0
 806c974:  test al, al
 806c976:  je 806c9a1
 806c978:  cmp edx, 0x5
 806c97b:  nop
 806c97c:  lea esi, [esi]
 806c980:  je 806c9a1
 806c982:  test cl, cl
 806c984:  lea esi, [esi]
 806c988:  je 806c9a1
 806c98a:  mov eax, 0xffffffe8
 806c98f:  mov ebx, 0xffffffff
 806c994:  mov edx, DWORD PTR [ebp-0x14c]
 806c99a:  mov DWORD PTR [edx+eax], 0x54
 806c9a1:  add esp, 0x164
 806c9a7:  mov eax, ebx
 806c9a9:  pop ebx
 806c9aa:  pop esi
 806c9ab:  pop edi
 806c9ac:  pop ebp
 806c9ad:  ret
 806c9ae:  xchg ax, ax
 806c9b0:  cmp BYTE PTR [eax-0x1], 0x0
 806c9b4:  jne 806c961
 806c9b6:  cmp DWORD PTR [ebp+0x8], eax
 806c9b9:  je 806cb32
 806c9bf:  mov eax, DWORD PTR [ebp-0x2c]
 806c9c2:  mov eax, DWORD PTR [eax]
 806c9c4:  test eax, eax
 806c9c6:  jne 806cb56
 806c9cc:  mov eax, DWORD PTR [ebp+0xc]
 806c9cf:  mov DWORD PTR [eax], 0x0
 806c9d5:  sub ebx, 0x1
 806c9d8:  jmp 806c961
 806c9da:  lea esi, [esi]
 806c9e0:  cmp edx, 0x6
 806c9e3:  je 806c974
 806c9e5:  cmp edx, 0x7
 806c9e8:  je 806c974
 806c9ea:  cmp edx, 0x5
 806c9ed:  lea esi, [esi]
 806c9f0:  je 806c9a1
 806c9f2:  mov DWORD PTR [esp+0xc], 0x80b1d7e
 806c9fa:  mov DWORD PTR [esp+0x8], 0x8c
 806ca02:  mov DWORD PTR [esp+0x4], 0x80b1d58
 806ca0a:  mov DWORD PTR [esp], 0x80b1cb8
 806ca11:  call 8051490
 806ca16:  xchg ax, ax
 806ca18:  mov eax, 0x80d2970
 806ca1d:  jmp 806c88c
 806ca22:  lea esi, [esi]
 806ca28:  cmp ebx, 0x80b8880
 806ca2e:  mov eax, 0x80b1e20
 806ca33:  je 806c8bd
 806ca39:  mov eax, ebx
 806ca3b:  call 806d110
 806ca40:  mov eax, DWORD PTR [ebx+0x14]
 806ca43:  jmp 806c8bd
 806ca48:  mov eax, DWORD PTR [ebp+0xc]
 806ca4b:  mov ebx, DWORD PTR [eax]
 806ca4d:  mov DWORD PTR [esp], ebx
 806ca50:  call 80944a0
 806ca55:  mov edx, DWORD PTR [ebp-0x2c]
 806ca58:  mov DWORD PTR [ebp-0x10], ebx
 806ca5b:  mov ecx, DWORD PTR [edx+0x4]
 806ca5e:  mov edx, DWORD PTR [edx]
 806ca60:  lea ebx, [ebx+eax*4+0x4]
 806ca64:  mov DWORD PTR [ebp-0x144], ebx
 806ca6a:  xor ebx, ebx
 806ca6c:  mov DWORD PTR [ebp-0x18], ecx
 806ca6f:  mov DWORD PTR [ebp-0x1c], edx
 806ca72:  lea edx, [ebp-0x1c]
 806ca75:  mov DWORD PTR [ebp-0x2c], edx
 806ca78:  lea edx, [ebp-0x140]
 806ca7e:  mov DWORD PTR [ebp-0x150], edx
 806ca84:  lea edx, [ebp-0x40]
 806ca87:  mov DWORD PTR [ebp-0x3c], edx
 806ca8a:  lea esi, [esi]
 806ca90:  lea eax, [ebp-0x140]
 806ca96:  mov DWORD PTR [ebp-0x40], eax
 806ca99:  mov DWORD PTR [esp], esi
 806ca9c:  call 807f350
 806caa1:  mov eax, DWORD PTR [ebp-0x144]
 806caa7:  lea edx, [ebp-0x14]
 806caaa:  mov DWORD PTR [esp+0x14], edx
 806caae:  lea edx, [ebp-0x10]
 806cab1:  mov DWORD PTR [esp+0x8], edx
 806cab5:  mov DWORD PTR [esp+0x1c], 0x1
 806cabd:  mov DWORD PTR [esp+0xc], eax
 806cac1:  lea eax, [ebp-0x40]
 806cac4:  mov DWORD PTR [esp+0x18], 0x0
 806cacc:  mov DWORD PTR [esp+0x10], 0x0
 806cad4:  mov DWORD PTR [esp+0x4], eax
 806cad8:  mov DWORD PTR [esp], edi
 806cadb:  call esi
 806cadd:  mov ecx, DWORD PTR [ebp-0x40]
 806cae0:  mov edx, eax
 806cae2:  mov eax, ecx
 806cae4:  sub eax, DWORD PTR [ebp-0x150]
 806caea:  add ebx, eax
 806caec:  cmp edx, 0x5
 806caef:  je 806ca90
 806caf1:  test edx, edx
 806caf3:  je 806cafe
 806caf5:  cmp edx, 0x4
 806caf8:  jne 806c961
 806cafe:  cmp BYTE PTR [ecx-0x1], 0x0
 806cb02:  lea esi, [esi]
 806cb08:  je 806c9d5
 806cb0e:  mov DWORD PTR [esp+0xc], 0x80b1d7e
 806cb16:  mov DWORD PTR [esp+0x8], 0x64
 806cb1e:  mov DWORD PTR [esp+0x4], 0x80b1d58
 806cb26:  mov DWORD PTR [esp], 0x80b1d64
 806cb2d:  call 8051490
 806cb32:  mov DWORD PTR [esp+0xc], 0x80b1d7e
 806cb3a:  mov DWORD PTR [esp+0x8], 0x80
 806cb42:  mov DWORD PTR [esp+0x4], 0x80b1d58
 806cb4a:  mov DWORD PTR [esp], 0x80b1d8c
 806cb51:  call 8051490
 806cb56:  mov DWORD PTR [esp+0xc], 0x80b1d7e
 806cb5e:  mov DWORD PTR [esp+0x8], 0x81
 806cb66:  mov DWORD PTR [esp+0x4], 0x80b1d58
 806cb6e:  mov DWORD PTR [esp], 0x80b1db4
 806cb75:  call 8051490
 806cb7a:  nop
 806cb7b:  nop
 806cb7c:  nop
 806cb7d:  nop
 806cb7e:  nop
 806cb7f:  nop

0806cb80 <__mbsnrtowcs>:
 806cb80:  push ebp
 806cb81:  mov ebp, esp
 806cb83:  push edi
 806cb84:  push esi
 806cb85:  push ebx
 806cb86:  sub esp, 0x158
 806cb8c:  mov edx, DWORD PTR [ebp+0x18]
 806cb8f:  mov eax, DWORD PTR [ebp+0x10]
 806cb92:  test edx, edx
 806cb94:  je 806cd80
 806cb9a:  xor ebx, ebx
 806cb9c:  test eax, eax
 806cb9e:  jne 806cbb0
 806cba0:  add esp, 0x158
 806cba6:  mov eax, ebx
 806cba8:  pop ebx
 806cba9:  pop esi
 806cbaa:  pop edi
 806cbab:  pop ebp
 806cbac:  ret
 806cbad:  lea esi, [esi]
 806cbb0:  mov DWORD PTR [ebp-0x24], edx
 806cbb3:  mov edx, DWORD PTR [ebp+0xc]
 806cbb6:  sub eax, 0x1
 806cbb9:  mov DWORD PTR [ebp-0x2c], 0x0
 806cbc0:  mov DWORD PTR [ebp-0x28], 0x1
 806cbc7:  mov DWORD PTR [ebp-0x30], 0x1
 806cbce:  mov ebx, DWORD PTR [edx]
 806cbd0:  mov DWORD PTR [ebp-0x18], 0x0
 806cbd7:  mov DWORD PTR [esp+0x4], eax
 806cbdb:  mov DWORD PTR [esp], ebx
 806cbde:  call 806b180
 806cbe3:  mov ecx, DWORD PTR gs:0x0
 806cbea:  mov DWORD PTR [ebp-0x140], ecx
 806cbf0:  lea ebx, [ebx+eax+0x1]
 806cbf4:  mov eax, 0xffffffd8
 806cbf9:  mov DWORD PTR [ebp-0x13c], ebx
 806cbff:  mov eax, DWORD PTR [ecx+eax]
 806cc02:  mov ebx, DWORD PTR [eax]
 806cc04:  mov eax, DWORD PTR [ebx+0x14]
 806cc07:  test eax, eax
 806cc09:  je 806ce30
 806cc0f:  mov edi, DWORD PTR [eax]
 806cc11:  mov eax, DWORD PTR [edi]
 806cc13:  mov esi, DWORD PTR [edi+0x14]
 806cc16:  test eax, eax
 806cc18:  je 806cc24
 806cc1a:  ror esi, 0x9
 806cc1d:  xor esi, DWORD PTR gs:0x18
 806cc24:  mov eax, DWORD PTR [ebp+0x8]
 806cc27:  test eax, eax
 806cc29:  je 806cd90
 806cc2f:  mov eax, DWORD PTR [ebp+0x8]
 806cc32:  mov edx, DWORD PTR [ebp+0x14]
 806cc35:  mov DWORD PTR [esp], esi
 806cc38:  mov DWORD PTR [ebp-0x38], eax
 806cc3b:  lea eax, [eax+edx*4]
 806cc3e:  mov DWORD PTR [ebp-0x34], eax
 806cc41:  call 807f350
 806cc46:  lea eax, [ebp-0x10]
 806cc49:  mov edx, DWORD PTR [ebp+0xc]
 806cc4c:  mov DWORD PTR [esp+0x14], eax
 806cc50:  mov eax, DWORD PTR [ebp-0x13c]
 806cc56:  mov DWORD PTR [esp+0x1c], 0x1
 806cc5e:  mov DWORD PTR [esp+0x18], 0x0
 806cc66:  mov DWORD PTR [esp+0x8], edx
 806cc6a:  mov DWORD PTR [esp+0xc], eax
 806cc6e:  lea eax, [ebp-0x38]
 806cc71:  mov DWORD PTR [esp+0x10], 0x0
 806cc79:  mov DWORD PTR [esp+0x4], eax
 806cc7d:  mov DWORD PTR [esp], edi
 806cc80:  call esi
 806cc82:  mov edx, DWORD PTR [ebp-0x38]
 806cc85:  sub edx, DWORD PTR [ebp+0x8]
 806cc88:  sar edx, 0x2
 806cc8b:  mov ebx, edx
 806cc8d:  test eax, eax
 806cc8f:  mov ecx, eax
 806cc91:  je 806cd00
 806cc93:  cmp eax, 0x4
 806cc96:  je 806cd00
 806cc98:  test ecx, ecx
 806cc9a:  setne al
 806cc9d:  cmp ecx, 0x4
 806cca0:  setne dl
 806cca3:  test al, al
 806cca5:  je 806cba0
 806ccab:  test dl, dl
 806ccad:  jne 806cd38
 806ccb3:  test al, al
 806ccb5:  je 806cba0
 806ccbb:  cmp ecx, 0x5
 806ccbe:  xchg ax, ax
 806ccc0:  je 806cba0
 806ccc6:  test dl, dl
 806ccc8:  je 806cba0
 806ccce:  cmp ecx, 0x7
 806ccd1:  lea esi, [esi]
 806ccd8:  je 806cba0
 806ccde:  mov eax, 0xffffffe8
 806cce3:  mov ebx, 0xffffffff
 806cce8:  mov edx, DWORD PTR [ebp-0x140]
 806ccee:  mov DWORD PTR [edx+eax], 0x54
 806ccf5:  jmp 806cba0
 806ccfa:  lea esi, [esi]
 806cd00:  test edx, edx
 806cd02:  je 806ce50
 806cd08:  mov eax, DWORD PTR [ebp+0x8]
 806cd0b:  mov esi, DWORD PTR [eax+edx*4-0x4]
 806cd0f:  test esi, esi
 806cd11:  jne 806cc98
 806cd13:  mov eax, DWORD PTR [ebp-0x24]
 806cd16:  mov eax, DWORD PTR [eax]
 806cd18:  test eax, eax
 806cd1a:  jne 806ce74
 806cd20:  mov eax, DWORD PTR [ebp+0xc]
 806cd23:  lea ebx, [edx-0x1]
 806cd26:  mov DWORD PTR [eax], 0x0
 806cd2c:  jmp 806cc98
 806cd31:  lea esi, [esi]
 806cd38:  cmp ecx, 0x6
 806cd3b:  je 806ccb3
 806cd41:  cmp ecx, 0x7
 806cd44:  je 806ccb3
 806cd4a:  cmp ecx, 0x5
 806cd4d:  lea esi, [esi]
 806cd50:  je 806cba0
 806cd56:  mov DWORD PTR [esp+0xc], 0x80b1dec
 806cd5e:  mov DWORD PTR [esp+0x8], 0x86
 806cd66:  mov DWORD PTR [esp+0x4], 0x80b1dd4
 806cd6e:  mov DWORD PTR [esp], 0x80b1cb8
 806cd75:  call 8051490
 806cd7a:  lea esi, [esi]
 806cd80:  mov edx, 0x80d2978
 806cd85:  jmp 806cb9a
 806cd8a:  lea esi, [esi]
 806cd90:  mov edx, DWORD PTR [ebp+0xc]
 806cd93:  lea ecx, [ebp-0x138]
 806cd99:  xor ebx, ebx
 806cd9b:  mov DWORD PTR [ebp-0x144], ecx
 806cda1:  mov eax, DWORD PTR [edx]
 806cda3:  mov DWORD PTR [ebp-0x14], eax
 806cda6:  lea eax, [ebp-0x38]
 806cda9:  mov DWORD PTR [ebp-0x34], eax
 806cdac:  lea esi, [esi]
 806cdb0:  lea edx, [ebp-0x138]
 806cdb6:  mov DWORD PTR [ebp-0x38], edx
 806cdb9:  mov DWORD PTR [esp], esi
 806cdbc:  call 807f350
 806cdc1:  mov eax, DWORD PTR [ebp-0x13c]
 806cdc7:  lea ecx, [ebp-0x10]
 806cdca:  lea edx, [ebp-0x14]
 806cdcd:  mov DWORD PTR [esp+0x14], ecx
 806cdd1:  lea ecx, [ebp-0x38]
 806cdd4:  mov DWORD PTR [esp+0x8], edx
 806cdd8:  mov DWORD PTR [esp+0x4], ecx
 806cddc:  mov DWORD PTR [esp+0x1c], 0x1
 806cde4:  mov DWORD PTR [esp+0x18], 0x0
 806cdec:  mov DWORD PTR [esp+0x10], 0x0
 806cdf4:  mov DWORD PTR [esp+0xc], eax
 806cdf8:  mov DWORD PTR [esp], edi
 806cdfb:  call esi
 806cdfd:  mov edx, DWORD PTR [ebp-0x38]
 806ce00:  mov ecx, eax
 806ce02:  mov eax, edx
 806ce04:  sub eax, DWORD PTR [ebp-0x144]
 806ce0a:  sar eax, 0x2
 806ce0d:  add ebx, eax
 806ce0f:  cmp ecx, 0x5
 806ce12:  je 806cdb0
 806ce14:  test ecx, ecx
 806ce16:  je 806ce21
 806ce18:  cmp ecx, 0x4
 806ce1b:  jne 806cc98
 806ce21:  cmp DWORD PTR [edx-0x4], 0x1
 806ce25:  sbb ebx, 0x0
 806ce28:  jmp 806cc98
 806ce2d:  lea esi, [esi]
 806ce30:  cmp ebx, 0x80b8880
 806ce36:  mov eax, 0x80b1e20
 806ce3b:  je 806cc0f
 806ce41:  mov eax, ebx
 806ce43:  call 806d110
 806ce48:  mov eax, DWORD PTR [ebx+0x14]
 806ce4b:  jmp 806cc0f
 806ce50:  mov DWORD PTR [esp+0xc], 0x80b1dec
 806ce58:  mov DWORD PTR [esp+0x8], 0x78
 806ce60:  mov DWORD PTR [esp+0x4], 0x80b1dd4
 806ce68:  mov DWORD PTR [esp], 0x80b1de1
 806ce6f:  call 8051490
 806ce74:  mov DWORD PTR [esp+0xc], 0x80b1dec
 806ce7c:  mov DWORD PTR [esp+0x8], 0x7b
 806ce84:  mov DWORD PTR [esp+0x4], 0x80b1dd4
 806ce8c:  mov DWORD PTR [esp], 0x80b1db4
 806ce93:  call 8051490
 806ce98:  nop
 806ce99:  nop
 806ce9a:  nop
 806ce9b:  nop
 806ce9c:  nop
 806ce9d:  nop
 806ce9e:  nop
 806ce9f:  nop

0806cea0 <__wcsnlen>:
 806cea0:  push ebp
 806cea1:  mov ebp, esp
 806cea3:  push ebx
 806cea4:  mov edx, DWORD PTR [ebp+0xc]
 806cea7:  mov ebx, DWORD PTR [ebp+0x8]
 806ceaa:  test edx, edx
 806ceac:  je 806cf39
 806ceb2:  mov ecx, DWORD PTR [ebx]
 806ceb4:  test ecx, ecx
 806ceb6:  je 806cf39
 806cebc:  cmp edx, 0x1
 806cebf:  je 806cf42
 806cec5:  mov eax, DWORD PTR [ebx+0x4]
 806cec8:  test eax, eax
 806ceca:  je 806cf42
 806cecc:  sub edx, 0x2
 806cecf:  mov eax, 0x2
 806ced4:  jne 806cf18
 806ced6:  xchg ax, ax
 806ced8:  jmp 806cf1f
 806ceda:  lea esi, [esi]
 806cee0:  cmp edx, 0x1
 806cee3:  lea ecx, [eax+0x1]
 806cee6:  xchg ax, ax
 806cee8:  je 806cf30
 806ceea:  cmp DWORD PTR [ebx+eax*4+0x4], 0x0
 806ceef:  nop
 806cef0:  je 806cf30
 806cef2:  cmp edx, 0x2
 806cef5:  lea ecx, [eax+0x2]
 806cef8:  je 806cf30
 806cefa:  cmp DWORD PTR [ebx+eax*4+0x8], 0x0
 806ceff:  je 806cf30
 806cf01:  cmp edx, 0x3
 806cf04:  lea ecx, [eax+0x3]
 806cf07:  je 806cf30
 806cf09:  cmp DWORD PTR [ebx+eax*4+0xc], 0x0
 806cf0e:  je 806cf30
 806cf10:  add eax, 0x4
 806cf13:  sub edx, 0x4
 806cf16:  je 806cf1f
 806cf18:  mov ecx, DWORD PTR [ebx+eax*4]
 806cf1b:  test ecx, ecx
 806cf1d:  jne 806cee0
 806cf1f:  pop ebx
 806cf20:  pop ebp
 806cf21:  lea esi, [esi]
 806cf28:  ret
 806cf29:  lea esi, [esi]
 806cf30:  mov eax, ecx
 806cf32:  pop ebx
 806cf33:  pop ebp
 806cf34:  lea esi, [esi]
 806cf38:  ret
 806cf39:  xor eax, eax
 806cf3b:  nop
 806cf3c:  lea esi, [esi]
 806cf40:  jmp 806cf1f
 806cf42:  mov eax, 0x1
 806cf47:  nop
 806cf48:  jmp 806cf1f
 806cf4a:  nop
 806cf4b:  nop
 806cf4c:  nop
 806cf4d:  nop
 806cf4e:  nop
 806cf4f:  nop

0806cf50 <_nl_cleanup_ctype>:
 806cf50:  push ebp
 806cf51:  mov ebp, esp
 806cf53:  push ebx
 806cf54:  sub esp, 0x4
 806cf57:  mov ebx, DWORD PTR [eax+0x14]
 806cf5a:  test ebx, ebx
 806cf5c:  je 806cf89
 806cf5e:  mov DWORD PTR [eax+0x14], 0x0
 806cf65:  mov edx, DWORD PTR [ebx+0xc]
 806cf68:  mov DWORD PTR [eax+0x10], 0x0
 806cf6f:  mov eax, DWORD PTR [ebx+0x8]
 806cf72:  call 8080460
 806cf77:  mov edx, DWORD PTR [ebx+0x4]
 806cf7a:  mov eax, DWORD PTR [ebx]
 806cf7c:  call 8080460
 806cf81:  mov DWORD PTR [esp], ebx
 806cf84:  call 804b4a0
 806cf89:  add esp, 0x4
 806cf8c:  pop ebx
 806cf8d:  pop ebp
 806cf8e:  ret
 806cf8f:  nop

0806cf90 <__wcsmbs_getfct>:
 806cf90:  push ebp
 806cf91:  mov ebp, esp
 806cf93:  sub esp, 0x10
 806cf96:  lea eax, [ebp-0x4]
 806cf99:  mov edx, DWORD PTR [ebp+0xc]
 806cf9c:  mov DWORD PTR [esp], eax
 806cf9f:  mov eax, DWORD PTR [ebp+0x8]
 806cfa2:  lea ecx, [ebp-0x8]
 806cfa5:  mov DWORD PTR [esp+0x4], 0x0
 806cfad:  call 8080fa0
 806cfb2:  xor edx, edx
 806cfb4:  sub esp, 0x8
 806cfb7:  test eax, eax
 806cfb9:  jne 806cfd5
 806cfbb:  mov edx, DWORD PTR [ebp-0x4]
 806cfbe:  cmp edx, 0x1
 806cfc1:  jbe 806cfe0
 806cfc3:  mov eax, DWORD PTR [ebp-0x8]
 806cfc6:  call 8080460
 806cfcb:  mov DWORD PTR [ebp-0x8], 0x0
 806cfd2:  mov edx, DWORD PTR [ebp-0x8]
 806cfd5:  mov eax, edx
 806cfd7:  leave
 806cfd8:  ret
 806cfd9:  lea esi, [esi]
 806cfe0:  mov eax, DWORD PTR [ebp+0x10]
 806cfe3:  mov DWORD PTR [eax], edx
 806cfe5:  jmp 806cfd2
 806cfe7:  mov esi, esi
 806cfe9:  lea edi, [edi]

0806cff0 <__wcsmbs_named_conv>:
 806cff0:  push ebp
 806cff1:  mov ebp, esp
 806cff3:  sub esp, 0x1c
 806cff6:  lea ecx, [ebp-0x14]
 806cff9:  mov DWORD PTR [ebp-0xc], ebx
 806cffc:  mov ebx, eax
 806cffe:  mov eax, 0x80b5649
 806d003:  mov DWORD PTR [ebp-0x4], edi
 806d006:  lea edi, [ebp-0x10]
 806d009:  mov DWORD PTR [ebp-0x8], esi
 806d00c:  mov esi, edx
 806d00e:  mov DWORD PTR [esp+0x4], 0x0
 806d016:  mov DWORD PTR [esp], edi
 806d019:  call 8080fa0
 806d01e:  sub esp, 0x8
 806d021:  test eax, eax
 806d023:  jne 806d0b0
 806d029:  mov edx, DWORD PTR [ebp-0x10]
 806d02c:  cmp edx, 0x1
 806d02f:  jbe 806d058
 806d031:  mov eax, DWORD PTR [ebp-0x14]
 806d034:  call 8080460
 806d039:  mov eax, 0x1
 806d03e:  mov DWORD PTR [ebx], 0x0
 806d044:  lea esi, [esi]
 806d048:  mov ebx, DWORD PTR [ebp-0xc]
 806d04b:  mov esi, DWORD PTR [ebp-0x8]
 806d04e:  mov edi, DWORD PTR [ebp-0x4]
 806d051:  mov esp, ebp
 806d053:  pop ebp
 806d054:  ret
 806d055:  lea esi, [esi]
 806d058:  mov eax, DWORD PTR [ebp-0x14]
 806d05b:  mov DWORD PTR [ebx+0x4], edx
 806d05e:  test eax, eax
 806d060:  mov DWORD PTR [ebx], eax
 806d062:  je 806d0f7
 806d068:  lea ecx, [ebp-0x14]
 806d06b:  mov edx, 0x80b5649
 806d070:  mov eax, esi
 806d072:  mov DWORD PTR [esp+0x4], 0x0
 806d07a:  mov DWORD PTR [esp], edi
 806d07d:  call 8080fa0
 806d082:  sub esp, 0x8
 806d085:  test eax, eax
 806d087:  jne 806d0c0
 806d089:  mov edx, DWORD PTR [ebp-0x10]
 806d08c:  cmp edx, 0x1
 806d08f:  jbe 806d0e8
 806d091:  mov eax, DWORD PTR [ebp-0x14]
 806d094:  call 8080460
 806d099:  mov DWORD PTR [ebp-0x14], 0x0
 806d0a0:  mov DWORD PTR [ebx+0x8], 0x0
 806d0a7:  jmp 806d0c7
 806d0a9:  lea esi, [esi]
 806d0b0:  mov DWORD PTR [ebx], 0x0
 806d0b6:  mov eax, 0x1
 806d0bb:  jmp 806d048
 806d0bd:  lea esi, [esi]
 806d0c0:  mov DWORD PTR [ebx+0x8], 0x0
 806d0c7:  mov edx, DWORD PTR [ebx+0x4]
 806d0ca:  mov eax, DWORD PTR [ebx]
 806d0cc:  call 8080460
 806d0d1:  mov eax, DWORD PTR [ebx]
 806d0d3:  test eax, eax
 806d0d5:  je 806d0f7
 806d0d7:  xor eax, eax
 806d0d9:  cmp DWORD PTR [ebx+0x8], 0x0
 806d0dd:  sete al
 806d0e0:  jmp 806d048
 806d0e5:  lea esi, [esi]
 806d0e8:  mov eax, DWORD PTR [ebp-0x14]
 806d0eb:  mov DWORD PTR [ebx+0xc], edx
 806d0ee:  test eax, eax
 806d0f0:  mov DWORD PTR [ebx+0x8], eax
 806d0f3:  jne 806d0d1
 806d0f5:  jmp 806d0c7
 806d0f7:  mov eax, 0x1
 806d0fc:  jmp 806d048
 806d101:  jmp 806d110
 806d103:  nop
 806d104:  nop
 806d105:  nop
 806d106:  nop
 806d107:  nop
 806d108:  nop
 806d109:  nop
 806d10a:  nop
 806d10b:  nop
 806d10c:  nop
 806d10d:  nop
 806d10e:  nop
 806d10f:  nop

0806d110 <__wcsmbs_load_conv>:
 806d110:  push ebp
 806d111:  mov ebp, esp
 806d113:  push edi
 806d114:  push esi
 806d115:  push ebx
 806d116:  sub esp, 0x28
 806d119:  mov DWORD PTR [ebp-0x24], eax
 806d11c:  mov eax, 0x0
 806d121:  test eax, eax
 806d123:  je 806d131
 806d125:  mov DWORD PTR [esp], 0x80d2a80
 806d12c:  call 0
 806d131:  mov eax, DWORD PTR [ebp-0x24]
 806d134:  mov esi, DWORD PTR [eax+0x14]
 806d137:  test esi, esi
 806d139:  jne 806d264
 806d13f:  mov DWORD PTR [esp], 0x10
 806d146:  call 804d6f0
 806d14b:  test eax, eax
 806d14d:  mov DWORD PTR [ebp-0x28], eax
 806d150:  je 806d25a
 806d156:  mov ecx, DWORD PTR [ebp-0x24]
 806d159:  mov edx, DWORD PTR [ebp-0x24]
 806d15c:  mov ecx, DWORD PTR [ecx+0x1c]
 806d15f:  mov edx, DWORD PTR [edx+0x5c]
 806d162:  cmp ecx, 0x1
 806d165:  sbb eax, eax
 806d167:  not eax
 806d169:  and eax, 0x8
 806d16c:  cmp ecx, 0x1
 806d16f:  mov DWORD PTR [ebp-0x1c], ecx
 806d172:  sbb ecx, ecx
 806d174:  xor ebx, ebx
 806d176:  and ecx, 0xf8
 806d179:  mov DWORD PTR [ebp-0x20], edx
 806d17c:  add ecx, 0xb
 806d17f:  mov DWORD PTR [ebp-0x18], eax
 806d182:  jmp 806d195
 806d184:  lea esi, [esi]
 806d188:  cmp al, 0x2f
 806d18a:  sete al
 806d18d:  add edx, 0x1
 806d190:  movzx eax, al
 806d193:  add ebx, eax
 806d195:  movzx eax, BYTE PTR [edx]
 806d198:  test al, al
 806d19a:  jne 806d188
 806d19c:  sub edx, DWORD PTR [ebp-0x20]
 806d19f:  lea eax, [edx+ecx+0x12]
 806d1a3:  mov edx, DWORD PTR [ebp-0x20]
 806d1a6:  and eax, 0xfc
 806d1a9:  sub esp, eax
 806d1ab:  lea edi, [esp+0x1b]
 806d1af:  movzx eax, BYTE PTR [edx]
 806d1b2:  and edi, 0xf0
 806d1b5:  mov ecx, edi
 806d1b7:  mov edx, edi
 806d1b9:  test al, al
 806d1bb:  je 806d1df
 806d1bd:  mov esi, DWORD PTR ds:0x80b041c
 806d1c3:  mov ecx, edi
 806d1c5:  mov edx, DWORD PTR [ebp-0x20]
 806d1c8:  movsx eax, al
 806d1cb:  add edx, 0x1
 806d1ce:  mov eax, DWORD PTR [esi+eax*4]
 806d1d1:  mov BYTE PTR [ecx], al
 806d1d3:  movzx eax, BYTE PTR [edx]
 806d1d6:  add ecx, 0x1
 806d1d9:  test al, al
 806d1db:  jne 806d1c8
 806d1dd:  mov edx, ecx
 806d1df:  cmp ebx, 0x1
 806d1e2:  jbe 806d298
 806d1e8:  lea esi, [ebp-0x14]
 806d1eb:  mov eax, 0x80b5649
 806d1f0:  mov BYTE PTR [edx], 0x0
 806d1f3:  lea ebx, [ebp-0x10]
 806d1f6:  mov ecx, esi
 806d1f8:  mov edx, edi
 806d1fa:  mov DWORD PTR [esp+0x4], 0x0
 806d202:  mov DWORD PTR [esp], ebx
 806d205:  call 8080fa0
 806d20a:  sub esp, 0x8
 806d20d:  test eax, eax
 806d20f:  jne 806d288
 806d211:  mov edx, DWORD PTR [ebp-0x10]
 806d214:  cmp edx, 0x1
 806d217:  jbe 806d2e8
 806d21d:  mov eax, DWORD PTR [ebp-0x14]
 806d220:  call 8080460
 806d225:  mov eax, DWORD PTR [ebp-0x28]
 806d228:  mov DWORD PTR [ebp-0x14], 0x0
 806d22f:  mov ecx, eax
 806d231:  mov DWORD PTR [eax], 0x0
 806d237:  mov DWORD PTR [ecx+0x8], 0x0
 806d23e:  mov edx, DWORD PTR [ebp-0x28]
 806d241:  mov eax, DWORD PTR [edx]
 806d243:  test eax, eax
 806d245:  je 806d24f
 806d247:  mov edx, DWORD PTR [edx+0x4]
 806d24a:  call 8080460
 806d24f:  mov eax, DWORD PTR [ebp-0x28]
 806d252:  mov DWORD PTR [esp], eax
 806d255:  call 804b4a0
 806d25a:  mov edx, DWORD PTR [ebp-0x24]
 806d25d:  mov DWORD PTR [edx+0x14], 0x80b1e20
 806d264:  mov eax, 0x0
 806d269:  test eax, eax
 806d26b:  je 806d279
 806d26d:  mov DWORD PTR [esp], 0x80d2a80
 806d274:  call 0
 806d279:  lea esp, [ebp-0xc]
 806d27c:  pop ebx
 806d27d:  pop esi
 806d27e:  pop edi
 806d27f:  pop ebp
 806d280:  ret
 806d281:  lea esi, [esi]
 806d288:  mov edx, DWORD PTR [ebp-0x28]
 806d28b:  mov DWORD PTR [edx], 0x0
 806d291:  mov ecx, edx
 806d293:  jmp 806d237
 806d295:  lea esi, [esi]
 806d298:  test ebx, ebx
 806d29a:  mov BYTE PTR [ecx], 0x2f
 806d29d:  lea edx, [ecx+0x1]
 806d2a0:  jne 806d1e8
 806d2a6:  mov BYTE PTR [ecx+0x1], 0x2f
 806d2aa:  mov ebx, DWORD PTR [ebp-0x18]
 806d2ad:  lea edx, [ecx+0x2]
 806d2b0:  test ebx, ebx
 806d2b2:  je 806d1e8
 806d2b8:  mov ecx, DWORD PTR [ebp-0x1c]
 806d2bb:  mov eax, 0x80b1e09
 806d2c0:  test ecx, ecx
 806d2c2:  je 806d380
 806d2c8:  mov ecx, DWORD PTR [ebp-0x18]
 806d2cb:  mov DWORD PTR [esp], edx
 806d2ce:  mov DWORD PTR [esp+0x4], eax
 806d2d2:  mov DWORD PTR [esp+0x8], ecx
 806d2d6:  call 806c310
 806d2db:  mov edx, eax
 806d2dd:  jmp 806d1e8
 806d2e2:  lea esi, [esi]
 806d2e8:  mov eax, DWORD PTR [ebp-0x14]
 806d2eb:  mov ecx, DWORD PTR [ebp-0x28]
 806d2ee:  test eax, eax
 806d2f0:  mov DWORD PTR [ecx+0x4], edx
 806d2f3:  mov DWORD PTR [ecx], eax
 806d2f5:  je 806d237
 806d2fb:  mov ecx, esi
 806d2fd:  mov edx, 0x80b5649
 806d302:  mov eax, edi
 806d304:  mov DWORD PTR [esp+0x4], 0x0
 806d30c:  mov DWORD PTR [esp], ebx
 806d30f:  call 8080fa0
 806d314:  sub esp, 0x8
 806d317:  test eax, eax
 806d319:  jne 806d348
 806d31b:  mov edx, DWORD PTR [ebp-0x10]
 806d31e:  cmp edx, 0x1
 806d321:  jbe 806d358
 806d323:  mov eax, DWORD PTR [ebp-0x14]
 806d326:  call 8080460
 806d32b:  mov eax, DWORD PTR [ebp-0x28]
 806d32e:  mov DWORD PTR [ebp-0x14], 0x0
 806d335:  mov DWORD PTR [eax+0x8], 0x0
 806d33c:  jmp 806d23e
 806d341:  lea esi, [esi]
 806d348:  mov eax, DWORD PTR [ebp-0x28]
 806d34b:  mov DWORD PTR [eax+0x8], 0x0
 806d352:  jmp 806d23e
 806d357:  nop
 806d358:  mov eax, DWORD PTR [ebp-0x14]
 806d35b:  mov ecx, DWORD PTR [ebp-0x28]
 806d35e:  test eax, eax
 806d360:  mov DWORD PTR [ecx+0xc], edx
 806d363:  mov DWORD PTR [ecx+0x8], eax
 806d366:  je 806d23e
 806d36c:  mov eax, ecx
 806d36e:  mov ecx, DWORD PTR [ebp-0x24]
 806d371:  mov DWORD PTR [ecx+0x14], eax
 806d374:  mov DWORD PTR [ecx+0x10], 0x806cf50
 806d37b:  jmp 806d264
 806d380:  mov eax, 0x80c2c93
 806d385:  jmp 806d2c8
 806d38a:  lea esi, [esi]

0806d390 <__wcsmbs_clone_conv>:
 806d390:  push ebp
 806d391:  mov edx, DWORD PTR gs:0x0
 806d398:  mov ebp, esp
 806d39a:  push esi
 806d39b:  mov esi, eax
 806d39d:  mov eax, 0xffffffd8
 806d3a2:  push ebx
 806d3a3:  mov eax, DWORD PTR [edx+eax]
 806d3a6:  mov ebx, DWORD PTR [eax]
 806d3a8:  mov edx, DWORD PTR [ebx+0x14]
 806d3ab:  test edx, edx
 806d3ad:  je 806d3e0
 806d3af:  mov ecx, DWORD PTR [edx]
 806d3b1:  mov DWORD PTR [esi], ecx
 806d3b3:  mov eax, DWORD PTR [edx+0x4]
 806d3b6:  mov ebx, DWORD PTR [ecx]
 806d3b8:  mov DWORD PTR [esi+0x4], eax
 806d3bb:  mov eax, DWORD PTR [edx+0x8]
 806d3be:  test ebx, ebx
 806d3c0:  mov DWORD PTR [esi+0x8], eax
 806d3c3:  mov eax, DWORD PTR [edx+0xc]
 806d3c6:  mov DWORD PTR [esi+0xc], eax
 806d3c9:  je 806d3cf
 806d3cb:  add DWORD PTR [ecx+0x8], 0x1
 806d3cf:  mov eax, DWORD PTR [esi+0x8]
 806d3d2:  mov edx, DWORD PTR [eax]
 806d3d4:  test edx, edx
 806d3d6:  je 806d3dc
 806d3d8:  add DWORD PTR [eax+0x8], 0x1
 806d3dc:  pop ebx
 806d3dd:  pop esi
 806d3de:  pop ebp
 806d3df:  ret
 806d3e0:  cmp ebx, 0x80b8880
 806d3e6:  mov edx, 0x80b1e20
 806d3eb:  je 806d3af
 806d3ed:  mov eax, ebx
 806d3ef:  call 806d110
 806d3f4:  mov edx, DWORD PTR [ebx+0x14]
 806d3f7:  jmp 806d3af
 806d3f9:  nop
 806d3fa:  nop
 806d3fb:  nop
 806d3fc:  nop
 806d3fd:  nop
 806d3fe:  nop
 806d3ff:  nop

0806d400 <localtime>:
 806d400:  push ebp
 806d401:  mov ebp, esp
 806d403:  sub esp, 0xc
 806d406:  mov eax, DWORD PTR [ebp+0x8]
 806d409:  mov DWORD PTR [esp+0x8], 0x80d2e80
 806d411:  mov DWORD PTR [esp+0x4], 0x1
 806d419:  mov DWORD PTR [esp], eax
 806d41c:  call 806e2b0
 806d421:  leave
 806d422:  ret
 806d423:  lea esi, [esi]
 806d429:  lea edi, [edi]

0806d430 <__localtime_r>:
 806d430:  push ebp
 806d431:  mov ebp, esp
 806d433:  sub esp, 0xc
 806d436:  mov eax, DWORD PTR [ebp+0xc]
 806d439:  mov DWORD PTR [esp+0x4], 0x1
 806d441:  mov DWORD PTR [esp+0x8], eax
 806d445:  mov eax, DWORD PTR [ebp+0x8]
 806d448:  mov DWORD PTR [esp], eax
 806d44b:  call 806e2b0
 806d450:  leave
 806d451:  ret
 806d452:  nop
 806d453:  nop
 806d454:  nop
 806d455:  nop
 806d456:  nop
 806d457:  nop
 806d458:  nop
 806d459:  nop
 806d45a:  nop
 806d45b:  nop
 806d45c:  nop
 806d45d:  nop
 806d45e:  nop
 806d45f:  nop

0806d460 <time>:
 806d460:  push ebp
 806d461:  mov ebp, esp
 806d463:  mov edx, DWORD PTR [ebp+0x8]
 806d466:  push ebx
 806d467:  xor ebx, ebx
 806d469:  mov eax, 0xd
 806d46e:  int 0x80
 806d470:  test edx, edx
 806d472:  je 806d476
 806d474:  mov DWORD PTR [edx], eax
 806d476:  pop ebx
 806d477:  pop ebp
 806d478:  ret
 806d479:  nop
 806d47a:  nop
 806d47b:  nop
 806d47c:  nop
 806d47d:  nop
 806d47e:  nop
 806d47f:  nop

0806d480 <compute_change>:
 806d480:  push ebp
 806d481:  mov ebp, esp
 806d483:  push edi
 806d484:  mov edi, edx
 806d486:  push esi
 806d487:  push ebx
 806d488:  sub esp, 0x18
 806d48b:  cmp edx, 0xff
 806d48e:  mov DWORD PTR [ebp-0x1c], eax
 806d491:  je 806d530
 806d497:  cmp DWORD PTR [eax+0x1c], edx
 806d49a:  je 806d526
 806d4a0:  cmp edx, 0x7b2
 806d4a6:  jle 806d530
 806d4ac:  imul eax, edx, 0x16d
 806d4b2:  lea ebx, [edx-0x1]
 806d4b5:  mov edx, ebx
 806d4b7:  sar edx, 0x2
 806d4ba:  lea esi, [eax+edx-0xafaa7]
 806d4c1:  mov eax, ebx
 806d4c3:  mov edx, 0x51eb851f
 806d4c8:  imul edx
 806d4ca:  sar ebx, 0x1f
 806d4cd:  mov ecx, ebx
 806d4cf:  sar edx, 0x5
 806d4d2:  sub ecx, edx
 806d4d4:  sar edx, 0x2
 806d4d7:  sub edx, ebx
 806d4d9:  lea eax, [esi+ecx]
 806d4dc:  add eax, edx
 806d4de:  mov edx, DWORD PTR [ebp-0x1c]
 806d4e1:  imul eax, eax, 0x15180
 806d4e7:  mov DWORD PTR [ebp-0x14], eax
 806d4ea:  mov eax, DWORD PTR [edx+0x4]
 806d4ed:  cmp eax, 0x1
 806d4f0:  je 806d542
 806d4f2:  jae 806d598
 806d4f8:  mov edx, DWORD PTR [ebp-0x1c]
 806d4fb:  movzx eax, WORD PTR [edx+0xc]
 806d4ff:  imul eax, eax, 0x15180
 806d505:  add DWORD PTR [ebp-0x14], eax
 806d508:  mov eax, DWORD PTR [ebp-0x1c]
 806d50b:  mov edx, DWORD PTR [ebp-0x1c]
 806d50e:  mov eax, DWORD PTR [eax+0x14]
 806d511:  sub DWORD PTR [ebp-0x14], eax
 806d514:  mov edx, DWORD PTR [edx+0x10]
 806d517:  add DWORD PTR [ebp-0x14], edx
 806d51a:  mov eax, DWORD PTR [ebp-0x1c]
 806d51d:  mov ecx, DWORD PTR [ebp-0x14]
 806d520:  mov DWORD PTR [eax+0x1c], edi
 806d523:  mov DWORD PTR [eax+0x18], ecx
 806d526:  add esp, 0x18
 806d529:  pop ebx
 806d52a:  pop esi
 806d52b:  pop edi
 806d52c:  pop ebp
 806d52d:  ret
 806d52e:  xchg ax, ax
 806d530:  mov edx, DWORD PTR [ebp-0x1c]
 806d533:  mov DWORD PTR [ebp-0x14], 0x0
 806d53a:  mov eax, DWORD PTR [edx+0x4]
 806d53d:  cmp eax, 0x1
 806d540:  jne 806d4f2
 806d542:  movzx edx, WORD PTR [edx+0xc]
 806d546:  mov ecx, DWORD PTR [ebp-0x14]
 806d549:  movzx eax, dx
 806d54c:  imul eax, eax, 0x15180
 806d552:  cmp dx, 0x3b
 806d556:  lea eax, [ecx+eax-0x15180]
 806d55d:  mov DWORD PTR [ebp-0x14], eax
 806d560:  jbe 806d508
 806d562:  test edi, 0x3
 806d568:  jne 806d508
 806d56a:  mov eax, 0x51eb851f
 806d56f:  mov ecx, edi
 806d571:  imul edi
 806d573:  sar ecx, 0x1f
 806d576:  mov eax, edx
 806d578:  sar eax, 0x5
 806d57b:  sub eax, ecx
 806d57d:  imul eax, eax, 0x64
 806d580:  cmp edi, eax
 806d582:  je 806d738
 806d588:  add DWORD PTR [ebp-0x14], 0x15180
 806d58f:  jmp 806d508
 806d594:  lea esi, [esi]
 806d598:  cmp eax, 0x2
 806d59b:  jne 806d508
 806d5a1:  test edi, 0x3
 806d5a7:  nop
 806d5a8:  je 806d6e0
 806d5ae:  xor ecx, ecx
 806d5b0:  mov eax, DWORD PTR [ebp-0x1c]
 806d5b3:  mov ebx, edi
 806d5b5:  movzx edx, WORD PTR [eax+0x8]
 806d5b9:  movzx eax, dx
 806d5bc:  add ecx, eax
 806d5be:  cmp dx, 0x3
 806d5c2:  mov DWORD PTR [ebp-0x20], ecx
 806d5c5:  movzx ecx, WORD PTR [ecx+ecx+0x80c631e]
 806d5cd:  sbb ebx, 0x0
 806d5d0:  mov DWORD PTR [ebp-0x24], eax
 806d5d3:  mov eax, ebx
 806d5d5:  mov DWORD PTR [ebp-0x18], ecx
 806d5d8:  mov ecx, 0x51eb851f
 806d5dd:  imul ecx
 806d5df:  mov ecx, DWORD PTR [ebp-0x24]
 806d5e2:  mov esi, edx
 806d5e4:  mov edx, ebx
 806d5e6:  sar edx, 0x1f
 806d5e9:  add ecx, 0x9
 806d5ec:  sar esi, 0x5
 806d5ef:  mov eax, ecx
 806d5f1:  sub esi, edx
 806d5f3:  imul edx, esi, 0x64
 806d5f6:  sub ebx, edx
 806d5f8:  mov edx, 0x2aaaaaab
 806d5fd:  imul edx
 806d5ff:  sar edx, 1
 806d601:  lea edx, [edx+edx*2]
 806d604:  shl edx, 0x2
 806d607:  sub ecx, edx
 806d609:  mov edx, 0x66666667
 806d60e:  lea eax, [ecx+0x1]
 806d611:  imul ecx, eax, 0xf3
 806d614:  not ecx
 806d616:  mov eax, ecx
 806d618:  imul edx
 806d61a:  mov eax, ebx
 806d61c:  sar eax, 0x1f
 806d61f:  sar ecx, 0x1f
 806d622:  shr eax, 0x1e
 806d625:  sar edx, 1
 806d627:  add eax, ebx
 806d629:  sub edx, ecx
 806d62b:  sar eax, 0x2
 806d62e:  lea ecx, [ebx+edx+0x1]
 806d632:  mov edx, 0x92492493
 806d637:  add ecx, eax
 806d639:  mov eax, esi
 806d63b:  sar eax, 0x1f
 806d63e:  shr eax, 0x1e
 806d641:  add eax, esi
 806d643:  sar eax, 0x2
 806d646:  add ecx, eax
 806d648:  lea eax, [esi+esi]
 806d64b:  sub ecx, eax
 806d64d:  mov eax, ecx
 806d64f:  imul edx
 806d651:  mov eax, ecx
 806d653:  sar eax, 0x1f
 806d656:  add edx, ecx
 806d658:  sar edx, 0x2
 806d65b:  sub edx, eax
 806d65d:  lea eax, [edx*8]
 806d664:  sub eax, edx
 806d666:  mov edx, ecx
 806d668:  sub edx, eax
 806d66a:  js 806d728
 806d670:  mov ecx, DWORD PTR [ebp-0x1c]
 806d673:  movzx eax, WORD PTR [ecx+0xc]
 806d677:  sub eax, edx
 806d679:  mov DWORD PTR [ebp-0x10], eax
 806d67c:  js 806d718
 806d682:  mov eax, DWORD PTR [ebp-0x1c]
 806d685:  movzx esi, WORD PTR [eax+0xa]
 806d689:  cmp esi, 0x1
 806d68c:  jbe 806d6c3
 806d68e:  mov ecx, DWORD PTR [ebp-0x20]
 806d691:  mov ebx, DWORD PTR [ebp-0x10]
 806d694:  movzx edx, WORD PTR [ecx+ecx+0x80c6320]
 806d69c:  mov ecx, 0x1
 806d6a1:  sub edx, DWORD PTR [ebp-0x18]
 806d6a4:  add ebx, 0x7
 806d6a7:  cmp ebx, edx
 806d6a9:  jl 806d6b9
 806d6ab:  jmp 806d6c3
 806d6ad:  lea esi, [esi]
 806d6b0:  lea eax, [ebx+0x7]
 806d6b3:  cmp eax, edx
 806d6b5:  jge 806d6c0
 806d6b7:  mov ebx, eax
 806d6b9:  add ecx, 0x1
 806d6bc:  cmp esi, ecx
 806d6be:  ja 806d6b0
 806d6c0:  mov DWORD PTR [ebp-0x10], ebx
 806d6c3:  imul eax, DWORD PTR [ebp-0x18], 0x15180
 806d6ca:  imul edx, DWORD PTR [ebp-0x10], 0x15180
 806d6d1:  add eax, DWORD PTR [ebp-0x14]
 806d6d4:  lea edx, [eax+edx]
 806d6d7:  mov DWORD PTR [ebp-0x14], edx
 806d6da:  jmp 806d508
 806d6df:  nop
 806d6e0:  mov eax, 0x51eb851f
 806d6e5:  mov ecx, edi
 806d6e7:  imul edi
 806d6e9:  sar ecx, 0x1f
 806d6ec:  mov eax, edx
 806d6ee:  sar eax, 0x5
 806d6f1:  sub eax, ecx
 806d6f3:  imul eax, eax, 0x64
 806d6f6:  cmp edi, eax
 806d6f8:  jne 806d70d
 806d6fa:  sar edx, 0x7
 806d6fd:  sub edx, ecx
 806d6ff:  imul edx, edx, 0x190
 806d705:  cmp edi, edx
 806d707:  jne 806d5ae
 806d70d:  mov ecx, 0xd
 806d712:  jmp 806d5b0
 806d717:  nop
 806d718:  add eax, 0x7
 806d71b:  mov DWORD PTR [ebp-0x10], eax
 806d71e:  jmp 806d682
 806d723:  nop
 806d724:  lea esi, [esi]
 806d728:  add edx, 0x7
 806d72b:  nop
 806d72c:  lea esi, [esi]
 806d730:  jmp 806d670
 806d735:  lea esi, [esi]
 806d738:  sar edx, 0x7
 806d73b:  sub edx, ecx
 806d73d:  imul edx, edx, 0x190
 806d743:  cmp edi, edx
 806d745:  jne 806d508
 806d74b:  jmp 806d588

0806d750 <__tz_compute>:
 806d750:  push ebp
 806d751:  mov ebp, esp
 806d753:  sub esp, 0xc
 806d756:  mov DWORD PTR [esp], ebx
 806d759:  mov ebx, ecx
 806d75b:  mov DWORD PTR [esp+0x4], esi
 806d75f:  mov esi, edx
 806d761:  mov DWORD PTR [esp+0x8], edi
 806d765:  mov edx, DWORD PTR [edx+0x14]
 806d768:  mov edi, eax
 806d76a:  mov eax, 0x80d29a0
 806d76f:  add edx, 0x76c
 806d775:  call 806d480
 806d77a:  mov edx, DWORD PTR [esi+0x14]
 806d77d:  mov eax, 0x80d29c0
 806d782:  add edx, 0x76c
 806d788:  call 806d480
 806d78d:  test ebx, ebx
 806d78f:  jne 806d7a0
 806d791:  mov ebx, DWORD PTR [esp]
 806d794:  mov esi, DWORD PTR [esp+0x4]
 806d798:  mov edi, DWORD PTR [esp+0x8]
 806d79c:  mov esp, ebp
 806d79e:  pop ebp
 806d79f:  ret
 806d7a0:  mov eax, ds:0x80d29b8
 806d7a5:  mov ecx, DWORD PTR ds:0x80d29d8
 806d7ab:  cmp eax, ecx
 806d7ad:  jg 806d7dd
 806d7af:  xor edx, edx
 806d7b1:  cmp eax, edi
 806d7b3:  jg 806d7bc
 806d7b5:  xor edx, edx
 806d7b7:  cmp ecx, edi
 806d7b9:  setg dl
 806d7bc:  mov eax, DWORD PTR [edx*4+0x80d11e8]
 806d7c3:  mov DWORD PTR [esi+0x20], edx
 806d7c6:  mov DWORD PTR [esi+0x28], eax
 806d7c9:  lea eax, [edx+edx]
 806d7cc:  add eax, 0x1
 806d7cf:  shl eax, 0x4
 806d7d2:  mov eax, DWORD PTR [eax+0x80d29a4]
 806d7d8:  mov DWORD PTR [esi+0x24], eax
 806d7db:  jmp 806d791
 806d7dd:  cmp ecx, edi
 806d7df:  mov edx, 0x1
 806d7e4:  jg 806d7bc
 806d7e6:  xor edx, edx
 806d7e8:  cmp eax, edi
 806d7ea:  setle dl
 806d7ed:  jmp 806d7bc
 806d7ef:  nop

0806d7f0 <__tzstring>:
 806d7f0:  push ebp
 806d7f1:  mov ebp, esp
 806d7f3:  push edi
 806d7f4:  push esi
 806d7f5:  push ebx
 806d7f6:  sub esp, 0xc
 806d7f9:  mov eax, DWORD PTR [ebp+0x8]
 806d7fc:  mov DWORD PTR [esp], eax
 806d7ff:  call 804eea0
 806d804:  mov ebx, DWORD PTR ds:0x80d29e0
 806d80a:  mov DWORD PTR [ebp-0x10], 0x0
 806d811:  test ebx, ebx
 806d813:  mov esi, eax
 806d815:  jne 806d828
 806d817:  jmp 806d85b
 806d819:  lea esi, [esi]
 806d820:  mov eax, DWORD PTR [ebx]
 806d822:  test eax, eax
 806d824:  je 806d858
 806d826:  mov ebx, eax
 806d828:  mov eax, DWORD PTR [ebx+0x4]
 806d82b:  cmp esi, eax
 806d82d:  ja 806d820
 806d82f:  sub eax, esi
 806d831:  lea edi, [ebx+eax+0x8]
 806d835:  mov DWORD PTR [esp+0x4], edi
 806d839:  mov eax, DWORD PTR [ebp+0x8]
 806d83c:  mov DWORD PTR [esp], eax
 806d83f:  call 806af90
 806d844:  test eax, eax
 806d846:  jne 806d820
 806d848:  add esp, 0xc
 806d84b:  mov eax, edi
 806d84d:  pop ebx
 806d84e:  pop esi
 806d84f:  pop edi
 806d850:  pop ebp
 806d851:  ret
 806d852:  lea esi, [esi]
 806d858:  mov DWORD PTR [ebp-0x10], ebx
 806d85b:  lea eax, [esi+0x9]
 806d85e:  xor edi, edi
 806d860:  mov DWORD PTR [esp], eax
 806d863:  call 804d6f0
 806d868:  test eax, eax
 806d86a:  mov ebx, eax
 806d86c:  je 806d848
 806d86e:  mov DWORD PTR [eax], 0x0
 806d874:  lea edi, [eax+0x8]
 806d877:  mov DWORD PTR [eax+0x4], esi
 806d87a:  mov eax, DWORD PTR [ebp+0x8]
 806d87d:  mov DWORD PTR [esp], edi
 806d880:  mov DWORD PTR [esp+0x4], eax
 806d884:  call 806afe0
 806d889:  mov eax, DWORD PTR [ebp-0x10]
 806d88c:  test eax, eax
 806d88e:  je 806d89f
 806d890:  mov eax, DWORD PTR [ebp-0x10]
 806d893:  mov DWORD PTR [eax], ebx
 806d895:  add esp, 0xc
 806d898:  mov eax, edi
 806d89a:  pop ebx
 806d89b:  pop esi
 806d89c:  pop edi
 806d89d:  pop ebp
 806d89e:  ret
 806d89f:  mov DWORD PTR ds:0x80d29e0, ebx
 806d8a5:  jmp 806d848
 806d8a7:  mov esi, esi
 806d8a9:  lea edi, [edi]

0806d8b0 <__tzset_parse_tz>:
 806d8b0:  push ebp
 806d8b1:  xor eax, eax
 806d8b3:  mov ebp, esp
 806d8b5:  mov ecx, 0x10
 806d8ba:  push edi
 806d8bb:  mov edi, 0x80d29a0
 806d8c0:  push esi
 806d8c1:  push ebx
 806d8c2:  sub esp, 0x2c
 806d8c5:  mov ebx, DWORD PTR [ebp+0x8]
 806d8c8:  rep stosd
 806d8ca:  mov DWORD PTR ds:0x80d29c0, 0x80c2c93
 806d8d4:  mov DWORD PTR ds:0x80d29a0, 0x80c2c93
 806d8de:  mov DWORD PTR [esp], ebx
 806d8e1:  call 804eea0
 806d8e6:  lea edx, [eax+0x1]
 806d8e9:  add eax, 0x13
 806d8ec:  and eax, 0xfc
 806d8ef:  sub esp, eax
 806d8f1:  lea eax, [esp+0x27]
 806d8f5:  and eax, 0xf0
 806d8f8:  mov DWORD PTR [esp+0x8], edx
 806d8fc:  mov DWORD PTR [esp+0x4], ebx
 806d900:  mov DWORD PTR [esp], eax
 806d903:  call 804efc0
 806d908:  mov DWORD PTR [esp+0x4], 0x80b1ebc
 806d910:  mov DWORD PTR [esp], ebx
 806d913:  mov esi, eax
 806d915:  mov DWORD PTR [esp+0x8], eax
 806d919:  call 80930f0
 806d91e:  sub eax, 0x1
 806d921:  je 806d990
 806d923:  mov ecx, DWORD PTR ds:0x80d29a0
 806d929:  mov ebx, DWORD PTR ds:0x80d29c0
 806d92f:  mov eax, ds:0x80d29b4
 806d934:  xor edx, edx
 806d936:  cmp eax, DWORD PTR ds:0x80d29d4
 806d93c:  mov DWORD PTR ds:0x80d11e8, ecx
 806d942:  mov DWORD PTR [esp], ecx
 806d945:  setne dl
 806d948:  neg eax
 806d94a:  mov DWORD PTR ds:0x80d2980, edx
 806d950:  mov ds:0x80d2984, eax
 806d955:  mov DWORD PTR ds:0x80d11ec, ebx
 806d95b:  call 804eea0
 806d960:  mov DWORD PTR [esp], ebx
 806d963:  mov edi, eax
 806d965:  call 804eea0
 806d96a:  cmp edi, DWORD PTR ds:0x80d2eac
 806d970:  jbe 806d978
 806d972:  mov DWORD PTR ds:0x80d2eac, edi
 806d978:  cmp eax, DWORD PTR ds:0x80d2eac
 806d97e:  jbe 806d985
 806d980:  mov ds:0x80d2eac, eax
 806d985:  lea esp, [ebp-0xc]
 806d988:  pop ebx
 806d989:  pop esi
 806d98a:  pop edi
 806d98b:  pop ebp
 806d98c:  ret
 806d98d:  lea esi, [esi]
 806d990:  mov DWORD PTR [esp], esi
 806d993:  call 804eea0
 806d998:  cmp eax, 0x2
 806d99b:  mov edi, eax
 806d99d:  jbe 806d923
 806d99f:  mov DWORD PTR [esp], esi
 806d9a2:  add ebx, edi
 806d9a4:  call 806d7f0
 806d9a9:  mov ds:0x80d29a0, eax
 806d9ae:  movzx edx, BYTE PTR [ebx]
 806d9b1:  mov ecx, eax
 806d9b3:  test dl, dl
 806d9b5:  je 806da40
 806d9bb:  cmp dl, 0x2b
 806d9be:  je 806d9d0
 806d9c0:  cmp dl, 0x2d
 806d9c3:  je 806d9d0
 806d9c5:  movsx eax, dl
 806d9c8:  sub eax, 0x30
 806d9cb:  cmp eax, 0x9
 806d9ce:  ja 806da40
 806d9d0:  cmp dl, 0x2d
 806d9d3:  mov eax, 0x1
 806d9d8:  je 806da50
 806d9da:  cmp dl, 0x2b
 806d9dd:  je 806da4b
 806d9df:  mov DWORD PTR ds:0x80d29b4, 0xffffffff
 806d9e9:  lea eax, [ebp-0x12]
 806d9ec:  mov DWORD PTR [esp+0x10], eax
 806d9f0:  lea eax, [ebp-0x10]
 806d9f3:  mov DWORD PTR [esp+0xc], eax
 806d9f7:  lea eax, [ebp-0xe]
 806d9fa:  mov DWORD PTR [esp+0x8], eax
 806d9fe:  mov DWORD PTR [esp+0x4], 0x80b1ec7
 806da06:  mov DWORD PTR [esp], ebx
 806da09:  call 80930f0
 806da0e:  cmp eax, 0x2
 806da11:  je 806da60
 806da13:  cmp eax, 0x3
 806da16:  je 806db08
 806da1c:  sub eax, 0x1
 806da1f:  nop
 806da20:  je 806da5a
 806da22:  mov DWORD PTR ds:0x80d29b4, 0x0
 806da2c:  mov ecx, DWORD PTR ds:0x80d29a0
 806da32:  mov ebx, DWORD PTR ds:0x80d29c0
 806da38:  jmp 806d92f
 806da3d:  lea esi, [esi]
 806da40:  mov ebx, DWORD PTR ds:0x80d29c0
 806da46:  jmp 806d92f
 806da4b:  mov eax, 0xffffffff
 806da50:  add ebx, 0x1
 806da53:  mov ds:0x80d29b4, eax
 806da58:  jmp 806d9e9
 806da5a:  mov WORD PTR [ebp-0x10], 0x0
 806da60:  mov eax, ds:0x80d29b4
 806da65:  xor ecx, ecx
 806da67:  mov WORD PTR [ebp-0x12], 0x0
 806da6d:  mov DWORD PTR [ebp-0x20], eax
 806da70:  movzx eax, WORD PTR [ebp-0x10]
 806da74:  mov edi, 0xdd4
 806da79:  cmp ax, 0x3a
 806da7d:  ja 806da85
 806da7f:  movzx eax, ax
 806da82:  imul edi, eax, 0x3c
 806da85:  movzx eax, WORD PTR [ebp-0xe]
 806da89:  mov edx, 0x15180
 806da8e:  cmp ax, 0x17
 806da92:  ja 806da9d
 806da94:  movzx eax, ax
 806da97:  imul edx, eax, 0xe10
 806da9d:  lea eax, [edi+ecx]
 806daa0:  xor ecx, ecx
 806daa2:  lea edi, [eax+edx]
 806daa5:  imul edi, DWORD PTR [ebp-0x20]
 806daa9:  mov DWORD PTR ds:0x80d29b4, edi
 806daaf:  jmp 806dabb
 806dab1:  lea esi, [esi]
 806dab8:  add ebx, 0x1
 806dabb:  movzx edx, BYTE PTR [ebx]
 806dabe:  movsx eax, dl
 806dac1:  sub eax, 0x30
 806dac4:  cmp eax, 0x9
 806dac7:  jbe 806dab8
 806dac9:  cmp ecx, 0x2
 806dacc:  jne 806daf0
 806dace:  cmp BYTE PTR [ebx], 0x0
 806dad1:  jne 806db2b
 806dad3:  mov ecx, DWORD PTR ds:0x80d29a0
 806dad9:  mov DWORD PTR ds:0x80d29d4, edi
 806dadf:  mov DWORD PTR ds:0x80d29c0, ecx
 806dae5:  mov ebx, ecx
 806dae7:  jmp 806d92f
 806daec:  lea esi, [esi]
 806daf0:  xor eax, eax
 806daf2:  cmp dl, 0x3a
 806daf5:  sete al
 806daf8:  add ecx, 0x1
 806dafb:  add ebx, eax
 806dafd:  cmp ecx, 0x3
 806db00:  jne 806dabb
 806db02:  jmp 806dace
 806db04:  lea esi, [esi]
 806db08:  mov eax, ds:0x80d29b4
 806db0d:  mov DWORD PTR [ebp-0x20], eax
 806db10:  movzx eax, WORD PTR [ebp-0x12]
 806db14:  cmp ax, 0x3a
 806db18:  movzx ecx, ax
 806db1b:  jbe 806da70
 806db21:  mov ecx, 0x3b
 806db26:  jmp 806da70
 806db2b:  mov DWORD PTR [esp], esi
 806db2e:  call 804eea0
 806db33:  mov DWORD PTR [esp+0x4], 0x80b1ebc
 806db3b:  mov DWORD PTR [esp], ebx
 806db3e:  lea esi, [esi+eax+0x1]
 806db42:  mov DWORD PTR [esp+0x8], esi
 806db46:  call 80930f0
 806db4b:  sub eax, 0x1
 806db4e:  je 806dd18
 806db54:  movzx eax, BYTE PTR [ebx]
 806db57:  mov esi, 0x80d29a0
 806db5c:  lea edi, [ebp-0x18]
 806db5f:  cmp al, 0x2c
 806db61:  sete al
 806db64:  movzx eax, al
 806db67:  add ebx, eax
 806db69:  movzx edx, BYTE PTR [ebx]
 806db6c:  cmp dl, 0x4a
 806db6f:  je 806dc50
 806db75:  movsx eax, dl
 806db78:  sub eax, 0x30
 806db7b:  cmp eax, 0x9
 806db7e:  ja 806dc10
 806db84:  mov DWORD PTR [esi+0x4], 0x0
 806db8b:  mov DWORD PTR [esp+0x8], 0xa
 806db93:  mov DWORD PTR [esp+0x4], edi
 806db97:  mov DWORD PTR [esp], ebx
 806db9a:  call 8056a80
 806db9f:  mov edx, eax
 806dba1:  mov WORD PTR [esi+0xc], ax
 806dba5:  mov eax, DWORD PTR [ebp-0x18]
 806dba8:  cmp eax, ebx
 806dbaa:  je 806d923
 806dbb0:  cmp dx, 0x16d
 806dbb5:  ja 806d923
 806dbbb:  cmp DWORD PTR [esi+0x4], 0x1
 806dbbf:  je 806dbff
 806dbc1:  mov ebx, eax
 806dbc3:  movzx eax, BYTE PTR [ebx]
 806dbc6:  test al, al
 806dbc8:  je 806dbda
 806dbca:  cmp al, 0x2f
 806dbcc:  je 806dc70
 806dbd2:  cmp al, 0x2c
 806dbd4:  jne 806d923
 806dbda:  mov DWORD PTR [esi+0x10], 0x1c20
 806dbe1:  mov DWORD PTR [esi+0x1c], 0xffffffff
 806dbe8:  add esi, 0x20
 806dbeb:  cmp esi, 0x80d29e0
 806dbf1:  je 806d923
 806dbf7:  movzx eax, BYTE PTR [ebx]
 806dbfa:  jmp 806db5f
 806dbff:  test dx, dx
 806dc02:  jne 806dbc1
 806dc04:  lea esi, [esi]
 806dc08:  jmp 806d923
 806dc0d:  lea esi, [esi]
 806dc10:  cmp dl, 0x4d
 806dc13:  nop
 806dc14:  lea esi, [esi]
 806dc18:  je 806de50
 806dc1e:  test dl, dl
 806dc20:  jne 806d923
 806dc26:  cmp esi, 0x80d29a0
 806dc2c:  mov DWORD PTR [esi+0x4], 0x2
 806dc33:  je 806dedd
 806dc39:  mov WORD PTR [esi+0x8], 0xa
 806dc3f:  mov WORD PTR [esi+0xa], 0x5
 806dc45:  mov WORD PTR [esi+0xc], 0x0
 806dc4b:  jmp 806dbc3
 806dc50:  add ebx, 0x1
 806dc53:  mov DWORD PTR [esi+0x4], 0x1
 806dc5a:  movsx eax, BYTE PTR [ebx]
 806dc5d:  sub eax, 0x30
 806dc60:  cmp eax, 0x9
 806dc63:  jbe 806db8b
 806dc69:  jmp 806d923
 806dc6e:  xchg ax, ax
 806dc70:  add ebx, 0x1
 806dc73:  cmp BYTE PTR [ebx], 0x0
 806dc76:  je 806d923
 806dc7c:  lea eax, [ebp-0x12]
 806dc7f:  mov DWORD PTR [esp+0x10], eax
 806dc83:  lea eax, [ebp-0x10]
 806dc86:  mov DWORD PTR [esp+0xc], eax
 806dc8a:  lea eax, [ebp-0xe]
 806dc8d:  mov DWORD PTR [esp+0x8], eax
 806dc91:  mov DWORD PTR [esp+0x4], 0x80b1ec7
 806dc99:  mov DWORD PTR [esp], ebx
 806dc9c:  call 80930f0
 806dca1:  cmp eax, 0x2
 806dca4:  je 806dcbe
 806dca6:  cmp eax, 0x3
 806dca9:  je 806dcc4
 806dcab:  sub eax, 0x1
 806dcae:  xchg ax, ax
 806dcb0:  je 806dcb8
 806dcb2:  mov WORD PTR [ebp-0xe], 0x2
 806dcb8:  mov WORD PTR [ebp-0x10], 0x0
 806dcbe:  mov WORD PTR [ebp-0x12], 0x0
 806dcc4:  xor ecx, ecx
 806dcc6:  jmp 806dccb
 806dcc8:  add ebx, 0x1
 806dccb:  movzx edx, BYTE PTR [ebx]
 806dcce:  movsx eax, dl
 806dcd1:  sub eax, 0x30
 806dcd4:  cmp eax, 0x9
 806dcd7:  jbe 806dcc8
 806dcd9:  cmp ecx, 0x2
 806dcdc:  jne 806dcff
 806dcde:  movzx eax, WORD PTR [ebp-0xe]
 806dce2:  movzx edx, WORD PTR [ebp-0x10]
 806dce6:  imul eax, eax, 0xe10
 806dcec:  imul edx, edx, 0x3c
 806dcef:  add eax, edx
 806dcf1:  movzx edx, WORD PTR [ebp-0x12]
 806dcf5:  add eax, edx
 806dcf7:  mov DWORD PTR [esi+0x10], eax
 806dcfa:  jmp 806dbe1
 806dcff:  xor eax, eax
 806dd01:  cmp dl, 0x3a
 806dd04:  sete al
 806dd07:  add ecx, 0x1
 806dd0a:  add ebx, eax
 806dd0c:  cmp ecx, 0x3
 806dd0f:  jne 806dccb
 806dd11:  jmp 806dcde
 806dd13:  nop
 806dd14:  lea esi, [esi]
 806dd18:  mov DWORD PTR [esp], esi
 806dd1b:  call 804eea0
 806dd20:  cmp eax, 0x2
 806dd23:  mov edi, eax
 806dd25:  lea esi, [esi]
 806dd28:  jbe 806db54
 806dd2e:  mov DWORD PTR [esp], esi
 806dd31:  add ebx, edi
 806dd33:  call 806d7f0
 806dd38:  mov edx, 0x1
 806dd3d:  mov ds:0x80d29c0, eax
 806dd42:  movzx eax, BYTE PTR [ebx]
 806dd45:  cmp al, 0x2d
 806dd47:  je 806df1d
 806dd4d:  cmp al, 0x2b
 806dd4f:  je 806df18
 806dd55:  mov DWORD PTR ds:0x80d29d4, 0xffffffff
 806dd5f:  lea eax, [ebp-0x12]
 806dd62:  mov DWORD PTR [esp+0x10], eax
 806dd66:  lea eax, [ebp-0x10]
 806dd69:  mov DWORD PTR [esp+0xc], eax
 806dd6d:  lea eax, [ebp-0xe]
 806dd70:  mov DWORD PTR [esp+0x8], eax
 806dd74:  mov DWORD PTR [esp+0x4], 0x80b1ec7
 806dd7c:  mov DWORD PTR [esp], ebx
 806dd7f:  call 80930f0
 806dd84:  cmp eax, 0x2
 806dd87:  je 806df31
 806dd8d:  cmp eax, 0x3
 806dd90:  je 806df7e
 806dd96:  sub eax, 0x1
 806dd99:  lea esi, [esi]
 806dda0:  je 806df2b
 806dda6:  mov eax, ds:0x80d29b4
 806ddab:  add eax, 0xe10
 806ddb0:  mov ds:0x80d29d4, eax
 806ddb5:  xor ecx, ecx
 806ddb7:  jmp 806ddc3
 806ddb9:  lea esi, [esi]
 806ddc0:  add ebx, 0x1
 806ddc3:  movzx edx, BYTE PTR [ebx]
 806ddc6:  movsx eax, dl
 806ddc9:  sub eax, 0x30
 806ddcc:  cmp eax, 0x9
 806ddcf:  jbe 806ddc0
 806ddd1:  cmp ecx, 0x2
 806ddd4:  jne 806defd
 806ddda:  movzx eax, BYTE PTR [ebx]
 806dddd:  test al, al
 806dddf:  je 806ddfe
 806dde1:  cmp al, 0x2c
 806dde3:  nop
 806dde4:  lea esi, [esi]
 806dde8:  jne 806db57
 806ddee:  cmp BYTE PTR [ebx+0x1], 0x0
 806ddf2:  lea esi, [esi]
 806ddf8:  jne 806db57
 806ddfe:  mov eax, ds:0x80d29d4
 806de03:  mov DWORD PTR [esp+0xc], eax
 806de07:  mov eax, ds:0x80d29b4
 806de0c:  mov DWORD PTR [esp+0x8], eax
 806de10:  mov eax, ds:0x80d29c0
 806de15:  mov DWORD PTR [esp+0x4], eax
 806de19:  mov eax, ds:0x80d29a0
 806de1e:  mov DWORD PTR [esp], eax
 806de21:  call 806f8f0
 806de26:  mov edx, DWORD PTR ds:0x80d2eb0
 806de2c:  test edx, edx
 806de2e:  je 806db54
 806de34:  mov eax, ds:0x80d29e4
 806de39:  mov DWORD PTR [esp], eax
 806de3c:  call 804b4a0
 806de41:  mov DWORD PTR ds:0x80d29e4, 0x0
 806de4b:  jmp 806d985
 806de50:  lea eax, [ebp-0x1c]
 806de53:  mov DWORD PTR [esi+0x4], 0x2
 806de5a:  mov DWORD PTR [esp+0x14], eax
 806de5e:  lea eax, [esi+0xc]
 806de61:  mov DWORD PTR [esp+0x10], eax
 806de65:  lea eax, [esi+0xa]
 806de68:  mov DWORD PTR [esp+0xc], eax
 806de6c:  lea eax, [esi+0x8]
 806de6f:  mov DWORD PTR [esp+0x8], eax
 806de73:  mov DWORD PTR [esp+0x4], 0x80b1ed3
 806de7b:  mov DWORD PTR [esp], ebx
 806de7e:  call 80930f0
 806de83:  cmp eax, 0x3
 806de86:  jne 806d923
 806de8c:  movzx eax, WORD PTR [esi+0x8]
 806de90:  test ax, ax
 806de93:  je 806d923
 806de99:  cmp ax, 0xc
 806de9d:  lea esi, [esi]
 806dea0:  ja 806d923
 806dea6:  movzx eax, WORD PTR [esi+0xa]
 806deaa:  test ax, ax
 806dead:  je 806d923
 806deb3:  cmp ax, 0x5
 806deb7:  nop
 806deb8:  ja 806d923
 806debe:  cmp WORD PTR [esi+0xc], 0x6
 806dec3:  nop
 806dec4:  lea esi, [esi]
 806dec8:  ja 806d923
 806dece:  add ebx, DWORD PTR [ebp-0x1c]
 806ded1:  lea esi, [esi]
 806ded8:  jmp 806dbc3
 806dedd:  mov WORD PTR ds:0x80d29a8, 0x4
 806dee6:  mov WORD PTR ds:0x80d29aa, 0x1
 806deef:  mov WORD PTR ds:0x80d29ac, 0x0
 806def8:  jmp 806dbc3
 806defd:  xor eax, eax
 806deff:  cmp dl, 0x3a
 806df02:  sete al
 806df05:  add ecx, 0x1
 806df08:  add ebx, eax
 806df0a:  cmp ecx, 0x3
 806df0d:  jne 806ddc3
 806df13:  jmp 806ddda
 806df18:  mov edx, 0xffffffff
 806df1d:  add ebx, 0x1
 806df20:  mov DWORD PTR ds:0x80d29d4, edx
 806df26:  jmp 806dd5f
 806df2b:  mov WORD PTR [ebp-0x10], 0x0
 806df31:  mov edi, DWORD PTR ds:0x80d29d4
 806df37:  xor ecx, ecx
 806df39:  mov WORD PTR [ebp-0x12], 0x0
 806df3f:  movzx eax, WORD PTR [ebp-0x10]
 806df43:  mov esi, 0xdd4
 806df48:  cmp ax, 0x3a
 806df4c:  ja 806df54
 806df4e:  movzx eax, ax
 806df51:  imul esi, eax, 0x3c
 806df54:  movzx eax, WORD PTR [ebp-0xe]
 806df58:  mov edx, 0x14370
 806df5d:  cmp ax, 0x16
 806df61:  ja 806df6c
 806df63:  movzx eax, ax
 806df66:  imul edx, eax, 0xe10
 806df6c:  lea eax, [esi+ecx]
 806df6f:  add eax, edx
 806df71:  imul eax, edi
 806df74:  mov ds:0x80d29d4, eax
 806df79:  jmp 806ddb5
 806df7e:  movzx eax, WORD PTR [ebp-0x12]
 806df82:  mov edi, DWORD PTR ds:0x80d29d4
 806df88:  cmp ax, 0x3a
 806df8c:  movzx ecx, ax
 806df8f:  jbe 806df3f
 806df91:  mov ecx, 0x3b
 806df96:  jmp 806df3f
 806df98:  nop
 806df99:  lea esi, [esi]

0806dfa0 <tzset_internal>:
 806dfa0:  push ebp
 806dfa1:  mov ebp, esp
 806dfa3:  sub esp, 0x18
 806dfa6:  mov DWORD PTR [ebp-0xc], ebx
 806dfa9:  mov ebx, DWORD PTR ds:0x80d2988
 806dfaf:  mov DWORD PTR [ebp-0x4], edi
 806dfb2:  mov edi, edx
 806dfb4:  mov DWORD PTR [ebp-0x8], esi
 806dfb7:  test ebx, ebx
 806dfb9:  jne 806e178
 806dfbf:  mov DWORD PTR ds:0x80d2988, 0x1
 806dfc9:  mov DWORD PTR [esp], 0x80b1ee2
 806dfd0:  call 80562f0
 806dfd5:  test eax, eax
 806dfd7:  mov ebx, eax
 806dfd9:  je 806e198
 806dfdf:  movzx eax, BYTE PTR [ebx]
 806dfe2:  test al, al
 806dfe4:  je 806e188
 806dfea:  cmp al, 0x3a
 806dfec:  sete al
 806dfef:  movzx eax, al
 806dff2:  add ebx, eax
 806dff4:  mov edi, DWORD PTR ds:0x80d29e4
 806dffa:  test edi, edi
 806dffc:  je 806e01a
 806dffe:  test ebx, ebx
 806e000:  je 806e1d8
 806e006:  mov DWORD PTR [esp+0x4], edi
 806e00a:  mov DWORD PTR [esp], ebx
 806e00d:  call 806af90
 806e012:  test eax, eax
 806e014:  je 806e168
 806e01a:  test ebx, ebx
 806e01c:  je 806e1d8
 806e022:  mov DWORD PTR ds:0x80d29a0, 0x0
 806e02c:  mov DWORD PTR ds:0x80d29c0, 0x0
 806e036:  mov DWORD PTR [esp], edi
 806e039:  call 804b4a0
 806e03e:  mov DWORD PTR [esp], ebx
 806e041:  call 806b010
 806e046:  mov DWORD PTR [esp+0x8], 0x0
 806e04e:  mov DWORD PTR [esp+0x4], 0x0
 806e056:  mov DWORD PTR [esp], ebx
 806e059:  mov ds:0x80d29e4, eax
 806e05e:  call 806eb00
 806e063:  mov ecx, DWORD PTR ds:0x80d2eb0
 806e069:  test ecx, ecx
 806e06b:  jne 806e168
 806e071:  cmp BYTE PTR [ebx], 0x0
 806e074:  jne 806e1b8
 806e07a:  cmp DWORD PTR ds:0x80d2eac, 0x2
 806e081:  mov DWORD PTR ds:0x80d29c0, 0x80b1efe
 806e08b:  mov DWORD PTR ds:0x80d29a0, 0x80b1efe
 806e095:  mov DWORD PTR ds:0x80d29c4, 0x0
 806e09f:  mov DWORD PTR ds:0x80d29a4, 0x0
 806e0a9:  mov WORD PTR ds:0x80d29ac, 0x0
 806e0b2:  mov WORD PTR ds:0x80d29aa, 0x0
 806e0bb:  mov WORD PTR ds:0x80d29a8, 0x0
 806e0c4:  mov WORD PTR ds:0x80d29cc, 0x0
 806e0cd:  mov WORD PTR ds:0x80d29ca, 0x0
 806e0d6:  mov WORD PTR ds:0x80d29c8, 0x0
 806e0df:  mov DWORD PTR ds:0x80d29d0, 0x0
 806e0e9:  mov DWORD PTR ds:0x80d29b0, 0x0
 806e0f3:  mov DWORD PTR ds:0x80d29d4, 0x0
 806e0fd:  mov DWORD PTR ds:0x80d29b4, 0x0
 806e107:  mov DWORD PTR ds:0x80d29d8, 0xffffffff
 806e111:  mov DWORD PTR ds:0x80d29b8, 0xffffffff
 806e11b:  mov DWORD PTR ds:0x80d29dc, 0x0
 806e125:  mov DWORD PTR ds:0x80d29bc, 0x0
 806e12f:  mov DWORD PTR ds:0x80d2980, 0x0
 806e139:  mov DWORD PTR ds:0x80d2984, 0x0
 806e143:  mov DWORD PTR ds:0x80d11e8, 0x80b1efe
 806e14d:  mov DWORD PTR ds:0x80d11ec, 0x80b1efe
 806e157:  ja 806e168
 806e159:  mov DWORD PTR ds:0x80d2eac, 0x3
 806e163:  nop
 806e164:  lea esi, [esi]
 806e168:  mov ebx, DWORD PTR [ebp-0xc]
 806e16b:  mov esi, DWORD PTR [ebp-0x8]
 806e16e:  mov edi, DWORD PTR [ebp-0x4]
 806e171:  mov esp, ebp
 806e173:  pop ebp
 806e174:  ret
 806e175:  lea esi, [esi]
 806e178:  test eax, eax
 806e17a:  je 806e168
 806e17c:  jmp 806dfbf
 806e181:  lea esi, [esi]
 806e188:  mov ebx, 0x80b1ef4
 806e18d:  lea esi, [esi]
 806e190:  jmp 806dff4
 806e195:  lea esi, [esi]
 806e198:  test edi, edi
 806e19a:  mov ebx, 0x80b1ee5
 806e19f:  je 806dfdf
 806e1a5:  mov edi, DWORD PTR ds:0x80d29e4
 806e1ab:  mov ebx, 0x80b1ee5
 806e1b0:  jmp 806e022
 806e1b5:  lea esi, [esi]
 806e1b8:  mov edi, 0x80b1ee5
 806e1bd:  mov ecx, 0xf
 806e1c2:  mov esi, ebx
 806e1c4:  repz cmpsb
 806e1c6:  je 806e07a
 806e1cc:  mov DWORD PTR [esp], ebx
 806e1cf:  call 806d8b0
 806e1d4:  jmp 806e168
 806e1d6:  xchg ax, ax
 806e1d8:  mov ebx, 0x80b1ee5
 806e1dd:  jmp 806e022
 806e1e2:  lea esi, [esi]
 806e1e9:  lea edi, [edi]

0806e1f0 <__tzset>:
 806e1f0:  push ebp
 806e1f1:  xor eax, eax
 806e1f3:  mov ebp, esp
 806e1f5:  mov ecx, 0x1
 806e1fa:  cmp DWORD PTR gs:0xc, 0x0
 806e202:  je 806e205
 806e204:  cmpxchg DWORD PTR ds:0x80d298c, ecx
 806e20c:  jne 806e476
 806e212:  mov eax, 0x1
 806e217:  mov edx, 0x1
 806e21c:  call 806dfa0
 806e221:  mov eax, ds:0x80d2eb0
 806e226:  test eax, eax
 806e228:  jne 806e23e
 806e22a:  mov eax, ds:0x80d29a0
 806e22f:  mov ds:0x80d11e8, eax
 806e234:  mov eax, ds:0x80d29c0
 806e239:  mov ds:0x80d11ec, eax
 806e23e:  cmp DWORD PTR gs:0xc, 0x0
 806e246:  je 806e249
 806e248:  sub DWORD PTR ds:0x80d298c, 0x1
 806e250:  jne 806e486
 806e256:  pop ebp
 806e257:  ret
 806e258:  nop
 806e259:  lea esi, [esi]

0806e260 <__tzname_max>:
 806e260:  push ebp
 806e261:  xor eax, eax
 806e263:  mov ebp, esp
 806e265:  mov ecx, 0x1
 806e26a:  cmp DWORD PTR gs:0xc, 0x0
 806e272:  je 806e275
 806e274:  cmpxchg DWORD PTR ds:0x80d298c, ecx
 806e27c:  jne 806e496
 806e282:  xor edx, edx
 806e284:  xor eax, eax
 806e286:  call 806dfa0
 806e28b:  cmp DWORD PTR gs:0xc, 0x0
 806e293:  je 806e296
 806e295:  sub DWORD PTR ds:0x80d298c, 0x1
 806e29d:  jne 806e4a6
 806e2a3:  mov eax, ds:0x80d2eac
 806e2a8:  pop ebp
 806e2a9:  ret
 806e2aa:  lea esi, [esi]

0806e2b0 <__tz_convert>:
 806e2b0:  push ebp
 806e2b1:  mov ebp, esp
 806e2b3:  push edi
 806e2b4:  push esi
 806e2b5:  push ebx
 806e2b6:  sub esp, 0x20
 806e2b9:  mov esi, DWORD PTR [ebp+0x8]
 806e2bc:  mov edi, DWORD PTR [ebp+0xc]
 806e2bf:  mov ebx, DWORD PTR [ebp+0x10]
 806e2c2:  test esi, esi
 806e2c4:  je 806e448
 806e2ca:  xor eax, eax
 806e2cc:  mov ecx, 0x1
 806e2d1:  cmp DWORD PTR gs:0xc, 0x0
 806e2d9:  je 806e2dc
 806e2db:  cmpxchg DWORD PTR ds:0x80d298c, ecx
 806e2e3:  jne 806e4b6
 806e2e9:  cmp ebx, 0x80d2e80
 806e2ef:  sete dl
 806e2f2:  xor eax, eax
 806e2f4:  test edi, edi
 806e2f6:  setne al
 806e2f9:  and eax, edx
 806e2fb:  mov edx, 0x1
 806e300:  call 806dfa0
 806e305:  mov eax, ds:0x80d2eb0
 806e30a:  test eax, eax
 806e30c:  jne 806e3a0
 806e312:  mov DWORD PTR [esp+0x8], ebx
 806e316:  mov DWORD PTR [esp+0x4], 0x0
 806e31e:  mov DWORD PTR [esp], esi
 806e321:  call 8094b20
 806e326:  test eax, eax
 806e328:  jne 806e3d0
 806e32e:  xor ebx, ebx
 806e330:  mov DWORD PTR [ebp-0x10], 0x0
 806e337:  mov DWORD PTR [ebp-0x14], 0x0
 806e33e:  test ebx, ebx
 806e340:  je 806e377
 806e342:  test edi, edi
 806e344:  jne 806e35b
 806e346:  mov DWORD PTR [ebx+0x20], 0x0
 806e34d:  mov DWORD PTR [ebx+0x28], 0x80b1f02
 806e354:  mov DWORD PTR [ebx+0x24], 0x0
 806e35b:  mov DWORD PTR [esp+0x8], ebx
 806e35f:  mov eax, DWORD PTR [ebx+0x24]
 806e362:  sub eax, DWORD PTR [ebp-0x10]
 806e365:  mov DWORD PTR [esp], esi
 806e368:  mov DWORD PTR [esp+0x4], eax
 806e36c:  call 8094b20
 806e371:  test eax, eax
 806e373:  jne 806e3c8
 806e375:  xor ebx, ebx
 806e377:  cmp DWORD PTR gs:0xc, 0x0
 806e37f:  je 806e382
 806e381:  sub DWORD PTR ds:0x80d298c, 0x1
 806e389:  jne 806e4c6
 806e38f:  add esp, 0x20
 806e392:  mov eax, ebx
 806e394:  pop ebx
 806e395:  pop esi
 806e396:  pop edi
 806e397:  pop ebp
 806e398:  ret
 806e399:  lea esi, [esi]
 806e3a0:  lea eax, [ebp-0x14]
 806e3a3:  mov DWORD PTR [esp+0xc], eax
 806e3a7:  lea eax, [ebp-0x10]
 806e3aa:  mov DWORD PTR [esp+0x10], ebx
 806e3ae:  mov DWORD PTR [esp+0x8], eax
 806e3b2:  mov DWORD PTR [esp+0x4], edi
 806e3b6:  mov eax, DWORD PTR [esi]
 806e3b8:  mov DWORD PTR [esp], eax
 806e3bb:  call 806e4e0
 806e3c0:  jmp 806e33e
 806e3c5:  lea esi, [esi]
 806e3c8:  mov eax, DWORD PTR [ebp-0x14]
 806e3cb:  add DWORD PTR [ebx], eax
 806e3cd:  jmp 806e377
 806e3cf:  nop
 806e3d0:  mov eax, DWORD PTR [esi]
 806e3d2:  mov edx, DWORD PTR [ebx+0x14]
 806e3d5:  mov DWORD PTR [ebp-0x18], eax
 806e3d8:  mov eax, 0x80d29a0
 806e3dd:  add edx, 0x76c
 806e3e3:  call 806d480
 806e3e8:  mov edx, DWORD PTR [ebx+0x14]
 806e3eb:  mov eax, 0x80d29c0
 806e3f0:  add edx, 0x76c
 806e3f6:  call 806d480
 806e3fb:  test edi, edi
 806e3fd:  je 806e330
 806e403:  mov eax, ds:0x80d29b8
 806e408:  mov ecx, DWORD PTR ds:0x80d29d8
 806e40e:  cmp eax, ecx
 806e410:  jg 806e462
 806e412:  xor edx, edx
 806e414:  cmp DWORD PTR [ebp-0x18], eax
 806e417:  jl 806e421
 806e419:  xor edx, edx
 806e41b:  cmp DWORD PTR [ebp-0x18], ecx
 806e41e:  setl dl
 806e421:  mov eax, DWORD PTR [edx*4+0x80d11e8]
 806e428:  mov DWORD PTR [ebx+0x20], edx
 806e42b:  mov DWORD PTR [ebx+0x28], eax
 806e42e:  lea eax, [edx+edx]
 806e431:  add eax, 0x1
 806e434:  shl eax, 0x4
 806e437:  mov eax, DWORD PTR [eax+0x80d29a4]
 806e43d:  mov DWORD PTR [ebx+0x24], eax
 806e440:  jmp 806e330
 806e445:  lea esi, [esi]
 806e448:  mov edx, 0xffffffe8
 806e44e:  xor ebx, ebx
 806e450:  mov eax, gs:0x0
 806e456:  mov DWORD PTR [eax+edx], 0x16
 806e45d:  jmp 806e38f
 806e462:  cmp DWORD PTR [ebp-0x18], ecx
 806e465:  mov edx, 0x1
 806e46a:  jl 806e421
 806e46c:  xor edx, edx
 806e46e:  cmp DWORD PTR [ebp-0x18], eax
 806e471:  setge dl
 806e474:  jmp 806e421

0806e476 <_L_lock_1584>:
 806e476:  lea ecx, ds:0x80d298c
 806e47c:  call 8050230
 806e481:  jmp 806e212

0806e486 <_L_unlock_1602>:
 806e486:  lea eax, ds:0x80d298c
 806e48c:  call 8050260
 806e491:  jmp 806e256

0806e496 <_L_lock_1623>:
 806e496:  lea ecx, ds:0x80d298c
 806e49c:  call 8050230
 806e4a1:  jmp 806e282

0806e4a6 <_L_unlock_1631>:
 806e4a6:  lea eax, ds:0x80d298c
 806e4ac:  call 8050260
 806e4b1:  jmp 806e2a3

0806e4b6 <_L_lock_1670>:
 806e4b6:  lea ecx, ds:0x80d298c
 806e4bc:  call 8050230
 806e4c1:  jmp 806e2e9

0806e4c6 <_L_unlock_1733>:
 806e4c6:  lea eax, ds:0x80d298c
 806e4cc:  call 8050260
 806e4d1:  jmp 806e38f
 806e4d6:  nop
 806e4d7:  nop
 806e4d8:  nop
 806e4d9:  nop
 806e4da:  nop
 806e4db:  nop
 806e4dc:  nop
 806e4dd:  nop
 806e4de:  nop
 806e4df:  nop

0806e4e0 <__tzfile_compute>:
 806e4e0:  push ebp
 806e4e1:  mov ebp, esp
 806e4e3:  push edi
 806e4e4:  push esi
 806e4e5:  push ebx
 806e4e6:  sub esp, 0x24
 806e4e9:  mov eax, DWORD PTR [ebp+0xc]
 806e4ec:  test eax, eax
 806e4ee:  jne 806e5c8
 806e4f4:  mov ebx, DWORD PTR [ebp+0x10]
 806e4f7:  mov eax, DWORD PTR [ebp+0x14]
 806e4fa:  mov edi, DWORD PTR ds:0x80d2a1c
 806e500:  mov DWORD PTR [ebx], 0x0
 806e506:  mov esi, DWORD PTR [ebp+0x8]
 806e509:  mov DWORD PTR [eax], 0x0
 806e50f:  mov ebx, DWORD PTR ds:0x80d2a18
 806e515:  lea ecx, [edi+ebx*8-0x8]
 806e519:  lea esi, [esi]
 806e520:  test ebx, ebx
 806e522:  je 806e541
 806e524:  mov eax, DWORD PTR [ecx]
 806e526:  sub ebx, 0x1
 806e529:  mov edx, ecx
 806e52b:  lea ecx, [ecx-0x8]
 806e52e:  cmp eax, esi
 806e530:  jg 806e520
 806e532:  mov ecx, DWORD PTR [ebp+0x10]
 806e535:  mov eax, DWORD PTR [edx+0x4]
 806e538:  mov DWORD PTR [ecx], eax
 806e53a:  mov ecx, DWORD PTR [edx]
 806e53c:  cmp ecx, DWORD PTR [ebp+0x8]
 806e53f:  je 806e550
 806e541:  add esp, 0x24
 806e544:  pop ebx
 806e545:  pop esi
 806e546:  pop edi
 806e547:  pop ebp
 806e548:  ret
 806e549:  lea esi, [esi]
 806e550:  test ebx, ebx
 806e552:  je 806e7e8
 806e558:  mov eax, DWORD PTR [edx+0x4]
 806e55b:  cmp eax, DWORD PTR [edi+ebx*8-0x4]
 806e55f:  jle 806e541
 806e561:  mov eax, DWORD PTR [ebp+0x14]
 806e564:  test ebx, ebx
 806e566:  mov DWORD PTR [eax], 0x1
 806e56c:  je 806e541
 806e56e:  lea esi, [edi+ebx*8-0x8]
 806e572:  mov eax, DWORD PTR [esi]
 806e574:  add eax, 0x1
 806e577:  cmp eax, ecx
 806e579:  jne 806e541
 806e57b:  mov eax, DWORD PTR [esi+0x4]
 806e57e:  add eax, 0x1
 806e581:  cmp DWORD PTR [edx+0x4], eax
 806e584:  jne 806e541
 806e586:  lea esi, [edi+ebx*8-0x4]
 806e58a:  lea ecx, [edi+ebx*8-0xc]
 806e58e:  mov edi, 0x1
 806e593:  jmp 806e5b4
 806e595:  lea esi, [esi]
 806e598:  mov eax, DWORD PTR [ecx-0x4]
 806e59b:  add eax, 0x1
 806e59e:  cmp DWORD PTR [esi-0x4], eax
 806e5a1:  jne 806e541
 806e5a3:  mov eax, DWORD PTR [ecx]
 806e5a5:  sub ecx, 0x8
 806e5a8:  mov edx, DWORD PTR [esi]
 806e5aa:  sub esi, 0x8
 806e5ad:  add eax, 0x1
 806e5b0:  cmp edx, eax
 806e5b2:  jne 806e541
 806e5b4:  mov edx, DWORD PTR [ebp+0x14]
 806e5b7:  add edi, 0x1
 806e5ba:  sub ebx, 0x1
 806e5bd:  mov DWORD PTR [edx], edi
 806e5bf:  jne 806e598
 806e5c1:  jmp 806e541
 806e5c6:  xchg ax, ax
 806e5c8:  mov eax, ds:0x80d29fc
 806e5cd:  mov DWORD PTR ds:0x80d11e8, 0x0
 806e5d7:  mov DWORD PTR ds:0x80d11ec, 0x0
 806e5e1:  test eax, eax
 806e5e3:  mov DWORD PTR [ebp-0x20], eax
 806e5e6:  je 806e89b
 806e5ec:  mov edi, DWORD PTR ds:0x80d2f44
 806e5f2:  mov esi, DWORD PTR [ebp+0x8]
 806e5f5:  cmp DWORD PTR [edi], esi
 806e5f7:  jg 806e89b
 806e5fd:  mov ecx, DWORD PTR [ebp-0x20]
 806e600:  mov eax, DWORD PTR [edi+ecx*4-0x4]
 806e604:  cmp esi, eax
 806e606:  jge 806e9bd
 806e60c:  mov ebx, eax
 806e60e:  mov edx, 0x881a22ef
 806e613:  sub ebx, esi
 806e615:  sub ecx, 0x1
 806e618:  mov eax, ebx
 806e61a:  imul edx
 806e61c:  add edx, ebx
 806e61e:  sar edx, 0x17
 806e621:  sar ebx, 0x1f
 806e624:  sub edx, ebx
 806e626:  xor ebx, ebx
 806e628:  cmp DWORD PTR [ebp-0x20], edx
 806e62b:  ja 806e650
 806e62d:  lea edx, [ebx+0x1]
 806e630:  jmp 806e63a
 806e632:  lea esi, [esi]
 806e638:  mov ecx, eax
 806e63a:  cmp ecx, edx
 806e63c:  jbe 806e7f8
 806e642:  lea eax, [ecx+ebx]
 806e645:  shr eax, 1
 806e647:  cmp esi, DWORD PTR [edi+eax*4]
 806e64a:  jl 806e638
 806e64c:  mov ebx, eax
 806e64e:  jmp 806e62d
 806e650:  mov eax, ecx
 806e652:  sub eax, edx
 806e654:  cmp esi, DWORD PTR [edi+eax*4]
 806e657:  mov DWORD PTR [ebp-0x14], eax
 806e65a:  jge 806e808
 806e660:  cmp eax, 0x9
 806e663:  ja 806e842
 806e669:  mov edx, DWORD PTR [ebp-0x14]
 806e66c:  cmp esi, DWORD PTR [edi+edx*4-0x4]
 806e670:  jge 806e688
 806e672:  lea edx, [edi+edx*4-0x8]
 806e676:  xchg ax, ax
 806e678:  mov eax, DWORD PTR [edx]
 806e67a:  sub edx, 0x4
 806e67d:  sub DWORD PTR [ebp-0x14], 0x1
 806e681:  cmp esi, eax
 806e683:  jl 806e678
 806e685:  lea esi, [esi]
 806e688:  mov ecx, DWORD PTR [ebp-0x14]
 806e68b:  mov ebx, DWORD PTR [ebp-0x14]
 806e68e:  mov eax, ds:0x80d2a00
 806e693:  sub ecx, 0x1
 806e696:  mov DWORD PTR [ebp-0x18], ecx
 806e699:  movzx eax, BYTE PTR [eax+ebx-0x1]
 806e69e:  shl eax, 0x3
 806e6a1:  add eax, DWORD PTR ds:0x80d2a08
 806e6a7:  movzx ebx, BYTE PTR [eax+0x4]
 806e6ab:  movzx eax, BYTE PTR [eax+0x5]
 806e6af:  add eax, DWORD PTR ds:0x80d2a0c
 806e6b5:  mov DWORD PTR [esp], eax
 806e6b8:  call 806d7f0
 806e6bd:  mov DWORD PTR [ebx*4+0x80d11e8], eax
 806e6c4:  mov eax, DWORD PTR [ebp-0x14]
 806e6c7:  cmp eax, DWORD PTR ds:0x80d29fc
 806e6cd:  jae 806e890
 806e6d3:  mov esi, eax
 806e6d5:  mov edx, DWORD PTR ds:0x80d2a00
 806e6db:  mov edi, 0x1
 806e6e0:  jmp 806e6f3
 806e6e2:  lea esi, [esi]
 806e6e8:  add esi, 0x1
 806e6eb:  cmp DWORD PTR ds:0x80d29fc, esi
 806e6f1:  jbe 806e750
 806e6f3:  movzx eax, BYTE PTR [edx+esi]
 806e6f7:  shl eax, 0x3
 806e6fa:  add eax, DWORD PTR ds:0x80d2a08
 806e700:  movzx ebx, BYTE PTR [eax+0x4]
 806e704:  movzx eax, BYTE PTR [eax+0x5]
 806e708:  mov ecx, DWORD PTR [ebx*4+0x80d11e8]
 806e70f:  test ecx, ecx
 806e711:  jne 806e6e8
 806e713:  movzx eax, al
 806e716:  add eax, DWORD PTR ds:0x80d2a0c
 806e71c:  mov DWORD PTR [esp], eax
 806e71f:  call 806d7f0
 806e724:  mov DWORD PTR [ebx*4+0x80d11e8], eax
 806e72b:  mov eax, edi
 806e72d:  sub eax, ebx
 806e72f:  mov ecx, DWORD PTR [eax*4+0x80d11e8]
 806e736:  test ecx, ecx
 806e738:  jne 806e890
 806e73e:  add esi, 0x1
 806e741:  mov edx, DWORD PTR ds:0x80d2a00
 806e747:  cmp DWORD PTR ds:0x80d29fc, esi
 806e74d:  ja 806e6f3
 806e74f:  nop
 806e750:  mov ecx, DWORD PTR ds:0x80d11e8
 806e756:  test ecx, ecx
 806e758:  je 806e9ac
 806e75e:  mov ebx, DWORD PTR [ebp-0x18]
 806e761:  movzx eax, BYTE PTR [edx+ebx]
 806e765:  lea edi, [eax*8]
 806e76c:  mov ebx, DWORD PTR ds:0x80d2a08
 806e772:  mov edx, DWORD PTR ds:0x80d2a10
 806e778:  xor eax, eax
 806e77a:  cmp edx, DWORD PTR ds:0x80d2a14
 806e780:  setne al
 806e783:  neg edx
 806e785:  test ecx, ecx
 806e787:  mov ds:0x80d2980, eax
 806e78c:  mov DWORD PTR ds:0x80d2984, edx
 806e792:  je 806e86c
 806e798:  mov edx, DWORD PTR ds:0x80d11ec
 806e79e:  test edx, edx
 806e7a0:  je 806e85d
 806e7a6:  add ebx, edi
 806e7a8:  mov edx, DWORD PTR [ebp+0x18]
 806e7ab:  movzx eax, BYTE PTR [ebx+0x4]
 806e7af:  mov DWORD PTR [edx+0x20], eax
 806e7b2:  mov esi, DWORD PTR [eax*4+0x80d11e8]
 806e7b9:  movzx eax, BYTE PTR [ebx+0x5]
 806e7bd:  add eax, DWORD PTR ds:0x80d2a0c
 806e7c3:  mov DWORD PTR [esp+0x4], esi
 806e7c7:  mov DWORD PTR [esp], eax
 806e7ca:  call 806af90
 806e7cf:  test eax, eax
 806e7d1:  jne 806ea31
 806e7d7:  mov ecx, DWORD PTR [ebp+0x18]
 806e7da:  mov eax, DWORD PTR [ebx]
 806e7dc:  mov DWORD PTR [ecx+0x28], esi
 806e7df:  mov DWORD PTR [ecx+0x24], eax
 806e7e2:  jmp 806e4f4
 806e7e7:  nop
 806e7e8:  mov eax, DWORD PTR [edx+0x4]
 806e7eb:  test eax, eax
 806e7ed:  jg 806e561
 806e7f3:  jmp 806e558
 806e7f8:  mov DWORD PTR [ebp-0x14], ecx
 806e7fb:  nop
 806e7fc:  lea esi, [esi]
 806e800:  jmp 806e688
 806e805:  lea esi, [esi]
 806e808:  mov ebx, eax
 806e80a:  add ebx, 0xa
 806e80d:  cmp DWORD PTR [ebp-0x20], ebx
 806e810:  ja 806e834
 806e812:  mov ecx, DWORD PTR [ebp-0x14]
 806e815:  add ecx, 0x1
 806e818:  lea edx, [edi+ecx*4]
 806e81b:  jmp 806e823
 806e81d:  lea esi, [esi]
 806e820:  add ecx, 0x1
 806e823:  mov eax, DWORD PTR [edx]
 806e825:  add edx, 0x4
 806e828:  mov DWORD PTR [ebp-0x14], ecx
 806e82b:  cmp esi, eax
 806e82d:  jge 806e820
 806e82f:  jmp 806e688
 806e834:  cmp esi, DWORD PTR [edi+ebx*4]
 806e837:  jge 806e62d
 806e83d:  lea esi, [esi]
 806e840:  jmp 806e812
 806e842:  sub eax, 0xa
 806e845:  cmp esi, DWORD PTR [edi+eax*4]
 806e848:  mov ecx, eax
 806e84a:  lea esi, [esi]
 806e850:  jl 806e62d
 806e856:  xchg ax, ax
 806e858:  jmp 806e669
 806e85d:  mov eax, ds:0x80d11e8
 806e862:  mov ds:0x80d11ec, eax
 806e867:  jmp 806e7a6
 806e86c:  cmp DWORD PTR ds:0x80d2a04, 0x1
 806e873:  jne 806ea64
 806e879:  mov eax, ds:0x80d2a0c
 806e87e:  mov DWORD PTR [esp], eax
 806e881:  call 806d7f0
 806e886:  mov ds:0x80d11e8, eax
 806e88b:  jmp 806e798
 806e890:  mov edx, DWORD PTR ds:0x80d2a00
 806e896:  jmp 806e750
 806e89b:  mov eax, ds:0x80d2a04
 806e8a0:  test eax, eax
 806e8a2:  je 806ea55
 806e8a8:  mov ebx, DWORD PTR ds:0x80d2a08
 806e8ae:  xor esi, esi
 806e8b0:  cmp BYTE PTR [ebx+0x4], 0x0
 806e8b4:  mov eax, ebx
 806e8b6:  jne 806e8e0
 806e8b8:  jmp 806e911
 806e8ba:  lea esi, [esi]
 806e8c0:  mov edx, DWORD PTR ds:0x80d2a04
 806e8c6:  add esi, 0x1
 806e8c9:  cmp edx, esi
 806e8cb:  jbe 806e903
 806e8cd:  lea eax, [esi*8]
 806e8d4:  add eax, DWORD PTR ds:0x80d2a08
 806e8da:  cmp BYTE PTR [eax+0x4], 0x0
 806e8de:  je 806e903
 806e8e0:  mov edi, DWORD PTR ds:0x80d11ec
 806e8e6:  test edi, edi
 806e8e8:  jne 806e8c0
 806e8ea:  movzx eax, BYTE PTR [eax+0x5]
 806e8ee:  add eax, DWORD PTR ds:0x80d2a0c
 806e8f4:  mov DWORD PTR [esp], eax
 806e8f7:  call 806d7f0
 806e8fc:  mov ds:0x80d11ec, eax
 806e901:  jmp 806e8c0
 806e903:  cmp edx, esi
 806e905:  je 806ea55
 806e90b:  mov ebx, DWORD PTR ds:0x80d2a08
 806e911:  lea edi, [esi*8]
 806e918:  movzx eax, BYTE PTR [ebx+edi+0x5]
 806e91d:  add eax, DWORD PTR ds:0x80d2a0c
 806e923:  mov DWORD PTR [esp], eax
 806e926:  call 806d7f0
 806e92b:  mov ebx, DWORD PTR ds:0x80d11ec
 806e931:  test ebx, ebx
 806e933:  mov ecx, eax
 806e935:  mov ds:0x80d11e8, eax
 806e93a:  jne 806e76c
 806e940:  mov edx, DWORD PTR ds:0x80d2a04
 806e946:  cmp esi, edx
 806e948:  mov DWORD PTR [ebp-0x10], edx
 806e94b:  jae 806e76c
 806e951:  mov ebx, DWORD PTR ds:0x80d2a08
 806e957:  lea eax, [ebx+edi]
 806e95a:  mov DWORD PTR [ebp-0x1c], eax
 806e95d:  lea edx, [ebx+esi*8+0x8]
 806e961:  cmp BYTE PTR [eax+0x4], 0x0
 806e965:  jne 806e981
 806e967:  add esi, 0x1
 806e96a:  cmp DWORD PTR [ebp-0x10], esi
 806e96d:  jbe 806e772
 806e973:  mov DWORD PTR [ebp-0x1c], edx
 806e976:  movzx eax, BYTE PTR [edx+0x4]
 806e97a:  add edx, 0x8
 806e97d:  test al, al
 806e97f:  je 806e967
 806e981:  mov edx, DWORD PTR [ebp-0x1c]
 806e984:  movzx eax, BYTE PTR [edx+0x5]
 806e988:  add eax, DWORD PTR ds:0x80d2a0c
 806e98e:  mov DWORD PTR [esp], eax
 806e991:  call 806d7f0
 806e996:  mov ecx, DWORD PTR ds:0x80d11e8
 806e99c:  mov ebx, DWORD PTR ds:0x80d2a08
 806e9a2:  mov ds:0x80d11ec, eax
 806e9a7:  jmp 806e772
 806e9ac:  mov ecx, DWORD PTR ds:0x80d11ec
 806e9b2:  mov DWORD PTR ds:0x80d11e8, ecx
 806e9b8:  jmp 806e75e
 806e9bd:  mov eax, ds:0x80d2a20
 806e9c2:  test eax, eax
 806e9c4:  je 806eacb
 806e9ca:  mov DWORD PTR [esp], eax
 806e9cd:  call 806d8b0
 806e9d2:  mov eax, DWORD PTR [ebp+0x18]
 806e9d5:  lea edx, [ebp+0x8]
 806e9d8:  mov DWORD PTR [esp+0x4], 0x0
 806e9e0:  mov DWORD PTR [esp], edx
 806e9e3:  mov DWORD PTR [esp+0x8], eax
 806e9e7:  call 8094b20
 806e9ec:  test eax, eax
 806e9ee:  je 806eac2
 806e9f4:  mov eax, DWORD PTR [ebp+0x8]
 806e9f7:  mov ecx, 0x1
 806e9fc:  mov edx, DWORD PTR [ebp+0x18]
 806e9ff:  call 806d750
 806ea04:  mov eax, ds:0x80d2a18
 806ea09:  shl eax, 0x3
 806ea0c:  add eax, DWORD PTR ds:0x80d2a1c
 806ea12:  cmp eax, DWORD PTR ds:0x80d2a0c
 806ea18:  je 806ea88
 806ea1a:  mov ebx, DWORD PTR [ebp+0x10]
 806ea1d:  mov eax, DWORD PTR [ebp+0x14]
 806ea20:  mov DWORD PTR [ebx], 0x0
 806ea26:  mov DWORD PTR [eax], 0x0
 806ea2c:  jmp 806e541
 806ea31:  mov DWORD PTR [esp+0xc], 0x80b1f47
 806ea39:  mov DWORD PTR [esp+0x8], 0x2f8
 806ea41:  mov DWORD PTR [esp+0x4], 0x80b1f06
 806ea49:  mov DWORD PTR [esp], 0x80b1f7c
 806ea50:  call 8051490
 806ea55:  xor esi, esi
 806ea57:  xor edi, edi
 806ea59:  mov ebx, DWORD PTR ds:0x80d2a08
 806ea5f:  jmp 806e918
 806ea64:  mov DWORD PTR [esp+0xc], 0x80b1f47
 806ea6c:  mov DWORD PTR [esp+0x8], 0x2f1
 806ea74:  mov DWORD PTR [esp+0x4], 0x80b1f06
 806ea7c:  mov DWORD PTR [esp], 0x80b1f1e
 806ea83:  call 8051490
 806ea88:  cmp DWORD PTR ds:0x80d2a04, 0x2
 806ea8f:  jne 806ead6
 806ea91:  mov DWORD PTR [esp], eax
 806ea94:  call 806d7f0
 806ea99:  mov ebx, DWORD PTR ds:0x80d2a0c
 806ea9f:  mov DWORD PTR [esp], ebx
 806eaa2:  mov ds:0x80d11e8, eax
 806eaa7:  call 804eea0
 806eaac:  lea ebx, [ebx+eax+0x1]
 806eab0:  mov DWORD PTR [esp], ebx
 806eab3:  call 806d7f0
 806eab8:  mov ds:0x80d11ec, eax
 806eabd:  jmp 806ea1a
 806eac2:  mov ecx, DWORD PTR ds:0x80d29fc
 806eac8:  mov DWORD PTR [ebp-0x20], ecx
 806eacb:  mov ebx, DWORD PTR [ebp-0x20]
 806eace:  mov DWORD PTR [ebp-0x14], ebx
 806ead1:  jmp 806e688
 806ead6:  mov DWORD PTR [esp+0xc], 0x80b1f47
 806eade:  mov DWORD PTR [esp+0x8], 0x291
 806eae6:  mov DWORD PTR [esp+0x4], 0x80b1f06
 806eaee:  mov DWORD PTR [esp], 0x80b1f0f
 806eaf5:  call 8051490
 806eafa:  lea esi, [esi]

0806eb00 <__tzfile_read>:
 806eb00:  push ebp
 806eb01:  mov ebp, esp
 806eb03:  push edi
 806eb04:  push esi
 806eb05:  push ebx
 806eb06:  sub esp, 0xdc
 806eb0c:  mov eax, ds:0x80d2eb0
 806eb11:  mov DWORD PTR ds:0x80d2eb0, 0x0
 806eb1b:  mov DWORD PTR [ebp-0xc0], eax
 806eb21:  mov eax, DWORD PTR [ebp+0x8]
 806eb24:  test eax, eax
 806eb26:  je 806eda8
 806eb2c:  mov edx, DWORD PTR [ebp+0x8]
 806eb2f:  movzx ebx, BYTE PTR [edx]
 806eb32:  test bl, bl
 806eb34:  jne 806eb58
 806eb36:  mov eax, ds:0x80d2f44
 806eb3b:  mov DWORD PTR [esp], eax
 806eb3e:  call 804b4a0
 806eb43:  mov DWORD PTR ds:0x80d2f44, 0x0
 806eb4d:  lea esp, [ebp-0xc]
 806eb50:  pop ebx
 806eb51:  pop esi
 806eb52:  pop edi
 806eb53:  pop ebp
 806eb54:  ret
 806eb55:  lea esi, [esi]
 806eb58:  mov eax, ds:0x80d0cd8
 806eb5d:  test eax, eax
 806eb5f:  je 806eb88
 806eb61:  cmp bl, 0x2f
 806eb64:  je 806ed70
 806eb6a:  mov eax, DWORD PTR [ebp+0x8]
 806eb6d:  mov DWORD PTR [esp+0x4], 0x80b1f2d
 806eb75:  mov DWORD PTR [esp], eax
 806eb78:  call 806bbe0
 806eb7d:  test eax, eax
 806eb7f:  jne 806eb36
 806eb81:  lea esi, [esi]
 806eb88:  cmp bl, 0x2f
 806eb8b:  je 806ec16
 806eb91:  mov DWORD PTR [esp], 0x80b1f31
 806eb98:  call 80562f0
 806eb9d:  test eax, eax
 806eb9f:  mov ebx, eax
 806eba1:  je 806ebac
 806eba3:  cmp BYTE PTR [eax], 0x0
 806eba6:  jne 806edc8
 806ebac:  mov DWORD PTR [ebp-0xbc], 0x80b1f66
 806ebb6:  mov esi, DWORD PTR [ebp-0xbc]
 806ebbc:  mov DWORD PTR [ebp-0xb8], 0x13
 806ebc6:  mov edx, DWORD PTR [ebp+0x8]
 806ebc9:  mov DWORD PTR [esp], edx
 806ebcc:  call 804eea0
 806ebd1:  mov ecx, DWORD PTR [ebp-0xb8]
 806ebd7:  lea ebx, [eax+0x1]
 806ebda:  lea eax, [ecx+eax+0x14]
 806ebde:  and eax, 0xfc
 806ebe1:  sub esp, eax
 806ebe3:  lea edi, [esp+0x1f]
 806ebe7:  and edi, 0xf0
 806ebea:  mov DWORD PTR [esp+0x8], ecx
 806ebee:  mov DWORD PTR [esp+0x4], esi
 806ebf2:  mov DWORD PTR [esp], edi
 806ebf5:  call 806c310
 806ebfa:  mov BYTE PTR [eax], 0x2f
 806ebfd:  mov edx, DWORD PTR [ebp+0x8]
 806ec00:  add eax, 0x1
 806ec03:  mov DWORD PTR [esp+0x8], ebx
 806ec07:  mov DWORD PTR [esp], eax
 806ec0a:  mov DWORD PTR [esp+0x4], edx
 806ec0e:  call 804efc0
 806ec13:  mov DWORD PTR [ebp+0x8], edi
 806ec16:  mov eax, DWORD PTR [ebp-0xc0]
 806ec1c:  test eax, eax
 806ec1e:  je 806ec60
 806ec20:  mov ecx, DWORD PTR [ebp+0x8]
 806ec23:  lea eax, [ebp-0xa4]
 806ec29:  mov DWORD PTR [esp+0x8], eax
 806ec2d:  mov DWORD PTR [esp], 0x3
 806ec34:  mov DWORD PTR [esp+0x4], ecx
 806ec38:  call 8073100
 806ec3d:  test eax, eax
 806ec3f:  jne 806ec60
 806ec41:  mov edx, DWORD PTR [ebp-0x4c]
 806ec44:  mov eax, DWORD PTR [ebp-0x48]
 806ec47:  xor eax, DWORD PTR ds:0x80d29f4
 806ec4d:  xor edx, DWORD PTR ds:0x80d29f0
 806ec53:  or eax, edx
 806ec55:  je 806ede8
 806ec5b:  nop
 806ec5c:  lea esi, [esi]
 806ec60:  mov ebx, DWORD PTR [ebp+0x8]
 806ec63:  mov DWORD PTR [esp+0x4], 0x80b0518
 806ec6b:  mov DWORD PTR [esp], ebx
 806ec6e:  call 8062450
 806ec73:  test eax, eax
 806ec75:  mov DWORD PTR [ebp-0xd8], eax
 806ec7b:  je 806eb36
 806ec81:  mov DWORD PTR [esp], eax
 806ec84:  call 8093e20
 806ec89:  lea edx, [ebp-0xa4]
 806ec8f:  mov DWORD PTR [esp+0x8], edx
 806ec93:  mov DWORD PTR [esp], 0x3
 806ec9a:  mov DWORD PTR [esp+0x4], eax
 806ec9e:  call 804f1b0
 806eca3:  test eax, eax
 806eca5:  jne 806ed58
 806ecab:  mov eax, ds:0x80d2f44
 806ecb0:  mov DWORD PTR [esp], eax
 806ecb3:  call 804b4a0
 806ecb8:  mov eax, DWORD PTR [ebp-0xa4]
 806ecbe:  mov edx, DWORD PTR [ebp-0xa0]
 806ecc4:  mov edi, DWORD PTR [ebp-0xd8]
 806ecca:  mov DWORD PTR ds:0x80d2f44, 0x0
 806ecd4:  mov ds:0x80d29e8, eax
 806ecd9:  mov eax, DWORD PTR [ebp-0x4c]
 806ecdc:  mov DWORD PTR ds:0x80d29ec, edx
 806ece2:  mov edx, DWORD PTR [ebp-0x48]
 806ece5:  or DWORD PTR [edi], 0x8000
 806eceb:  mov ds:0x80d29f0, eax
 806ecf0:  mov eax, DWORD PTR [ebp-0x5c]
 806ecf3:  mov DWORD PTR ds:0x80d29f4, edx
 806ecf9:  mov DWORD PTR [esp+0xc], edi
 806ecfd:  mov DWORD PTR [esp+0x8], 0x1
 806ed05:  mov ds:0x80d29f8, eax
 806ed0a:  lea eax, [ebp-0x44]
 806ed0d:  mov DWORD PTR [esp+0x4], 0x2c
 806ed15:  mov DWORD PTR [ebp-0xd4], eax
 806ed1b:  mov DWORD PTR [esp], eax
 806ed1e:  call 8094150
 806ed23:  sub eax, 0x1
 806ed26:  jne 806ed40
 806ed28:  mov esi, DWORD PTR [ebp-0xd4]
 806ed2e:  mov ecx, 0x4
 806ed33:  mov edi, 0x80b1f37
 806ed38:  repz cmpsb
 806ed3a:  je 806ee28
 806ed40:  mov ebx, DWORD PTR [ebp-0xd8]
 806ed46:  mov DWORD PTR [esp], ebx
 806ed49:  call 8062010
 806ed4e:  jmp 806eb36
 806ed53:  nop
 806ed54:  lea esi, [esi]
 806ed58:  mov esi, DWORD PTR [ebp-0xd8]
 806ed5e:  mov DWORD PTR [esp], esi
 806ed61:  call 8062010
 806ed66:  jmp 806eb36
 806ed6b:  nop
 806ed6c:  lea esi, [esi]
 806ed70:  mov eax, 0x80b1ee5
 806ed75:  mov ecx, 0xf
 806ed7a:  mov esi, edx
 806ed7c:  mov edi, eax
 806ed7e:  repz cmpsb
 806ed80:  je 806eb6a
 806ed86:  mov esi, DWORD PTR [ebp+0x8]
 806ed89:  mov eax, 0x80b1f66
 806ed8e:  mov ecx, 0x13
 806ed93:  mov edi, eax
 806ed95:  repz cmpsb
 806ed97:  jne 806eb36
 806ed9d:  jmp 806eb6a
 806eda2:  lea esi, [esi]
 806eda8:  mov eax, DWORD PTR [ebp-0xc0]
 806edae:  mov DWORD PTR [ebp+0x8], 0x80b1ee5
 806edb5:  test eax, eax
 806edb7:  je 806ec60
 806edbd:  jmp 806ec20
 806edc2:  lea esi, [esi]
 806edc8:  mov DWORD PTR [esp], eax
 806edcb:  mov esi, ebx
 806edcd:  call 804eea0
 806edd2:  mov DWORD PTR [ebp-0xbc], ebx
 806edd8:  mov DWORD PTR [ebp-0xb8], eax
 806edde:  jmp 806ebc6
 806ede3:  nop
 806ede4:  lea esi, [esi]
 806ede8:  mov edx, DWORD PTR [ebp-0xa4]
 806edee:  mov eax, DWORD PTR [ebp-0xa0]
 806edf4:  xor eax, DWORD PTR ds:0x80d29ec
 806edfa:  xor edx, DWORD PTR ds:0x80d29e8
 806ee00:  or eax, edx
 806ee02:  jne 806ec60
 806ee08:  mov eax, DWORD PTR [ebp-0x5c]
 806ee0b:  cmp eax, DWORD PTR ds:0x80d29f8
 806ee11:  jne 806ec60
 806ee17:  mov DWORD PTR ds:0x80d2eb0, 0x1
 806ee21:  jmp 806eb4d
 806ee26:  xchg ax, ax
 806ee28:  mov edx, DWORD PTR [ebp-0x1c]
 806ee2b:  bswap edx
 806ee2d:  mov DWORD PTR [ebp-0xb4], edx
 806ee33:  mov edi, DWORD PTR [ebp-0xb4]
 806ee39:  mov ecx, DWORD PTR [ebp-0x24]
 806ee3c:  mov esi, DWORD PTR [ebp-0x30]
 806ee3f:  bswap ecx
 806ee41:  bswap esi
 806ee43:  mov DWORD PTR [ebp-0xac], esi
 806ee49:  lea esi, [ecx+ecx*4+0x3]
 806ee4d:  mov eax, DWORD PTR [ebp-0x20]
 806ee50:  mov DWORD PTR ds:0x80d29fc, ecx
 806ee56:  and esi, 0xfc
 806ee59:  mov ecx, DWORD PTR [ebp+0xc]
 806ee5c:  bswap eax
 806ee5e:  mov ds:0x80d2a04, eax
 806ee63:  lea eax, [esi+eax*8+0x3]
 806ee67:  mov ebx, DWORD PTR [ebp-0x2c]
 806ee6a:  bswap ebx
 806ee6c:  mov DWORD PTR [ebp-0xb0], ebx
 806ee72:  lea ebx, [eax+edi]
 806ee75:  mov edx, DWORD PTR [ebp-0x28]
 806ee78:  and ebx, 0xfc
 806ee7b:  lea eax, [ebx+ecx]
 806ee7e:  bswap edx
 806ee80:  mov DWORD PTR ds:0x80d2a18, edx
 806ee86:  lea edx, [eax+edx*8]
 806ee89:  mov DWORD PTR [esp], edx
 806ee8c:  call 804d6f0
 806ee91:  test eax, eax
 806ee93:  mov ds:0x80d2f44, eax
 806ee98:  je 806ed40
 806ee9e:  mov ecx, DWORD PTR ds:0x80d29fc
 806eea4:  mov edx, esi
 806eea6:  add edx, DWORD PTR ds:0x80d2f44
 806eeac:  add ebx, DWORD PTR ds:0x80d2f44
 806eeb2:  mov DWORD PTR ds:0x80d2a20, 0x0
 806eebc:  lea eax, [eax+ecx*4]
 806eebf:  mov ds:0x80d2a00, eax
 806eec4:  mov eax, ds:0x80d2a04
 806eec9:  mov DWORD PTR ds:0x80d2a08, edx
 806eecf:  mov DWORD PTR ds:0x80d2a1c, ebx
 806eed5:  lea eax, [edx+eax*8]
 806eed8:  mov ds:0x80d2a0c, eax
 806eedd:  mov eax, DWORD PTR [ebp+0xc]
 806eee0:  test eax, eax
 806eee2:  je 806eef3
 806eee4:  mov eax, ds:0x80d2a18
 806eee9:  shl eax, 0x3
 806eeec:  add eax, ebx
 806eeee:  mov ebx, DWORD PTR [ebp+0x10]
 806eef1:  mov DWORD PTR [ebx], eax
 806eef3:  mov esi, DWORD PTR [ebp-0xd8]
 806eef9:  mov eax, ds:0x80d2f44
 806eefe:  mov DWORD PTR [esp+0x8], ecx
 806ef02:  mov DWORD PTR [esp+0x4], 0x5
 806ef0a:  mov DWORD PTR [esp+0xc], esi
 806ef0e:  mov DWORD PTR [esp], eax
 806ef11:  call 8094150
 806ef16:  cmp eax, DWORD PTR ds:0x80d29fc
 806ef1c:  mov ecx, eax
 806ef1e:  jne 806ed40
 806ef24:  test eax, eax
 806ef26:  je 806ef8a
 806ef28:  mov esi, DWORD PTR ds:0x80d2a00
 806ef2e:  xor edx, edx
 806ef30:  mov ebx, DWORD PTR ds:0x80d2a04
 806ef36:  movzx eax, BYTE PTR [esi]
 806ef39:  cmp ebx, eax
 806ef3b:  ja 806ef54
 806ef3d:  jmp 806ed40
 806ef42:  lea esi, [esi]
 806ef48:  movzx eax, BYTE PTR [esi+edx]
 806ef4c:  cmp ebx, eax
 806ef4e:  jbe 806ed40
 806ef54:  add edx, 0x1
 806ef57:  cmp ecx, edx
 806ef59:  lea esi, [esi]
 806ef60:  ja 806ef48
 806ef62:  lea ebx, [ecx-0x1]
 806ef65:  lea edx, [ecx*4-0x4]
 806ef6c:  mov ecx, DWORD PTR ds:0x80d2f44
 806ef72:  jmp 806ef7b
 806ef74:  lea esi, [esi]
 806ef78:  sub ebx, 0x1
 806ef7b:  mov eax, DWORD PTR [ecx+edx]
 806ef7e:  bswap eax
 806ef80:  mov DWORD PTR [ecx+edx], eax
 806ef83:  sub edx, 0x4
 806ef86:  test ebx, ebx
 806ef88:  jne 806ef78
 806ef8a:  mov eax, ds:0x80d2a04
 806ef8f:  test eax, eax
 806ef91:  je 806f0ba
 806ef97:  xor esi, esi
 806ef99:  jmp 806efdd
 806ef9b:  nop
 806ef9c:  lea esi, [esi]
 806efa0:  mov ecx, edx
 806efa2:  movzx edx, BYTE PTR [eax]
 806efa5:  add eax, 0x1
 806efa8:  mov DWORD PTR [ecx+0x4], eax
 806efab:  cmp edx, DWORD PTR [ebp-0xb4]
 806efb1:  ja 806ed40
 806efb7:  mov eax, ds:0x80d2a08
 806efbc:  add esi, 0x1
 806efbf:  mov BYTE PTR [eax+ebx+0x5], dl
 806efc3:  mov edx, DWORD PTR ds:0x80d2a08
 806efc9:  mov eax, DWORD PTR [ebp-0x10]
 806efcc:  bswap eax
 806efce:  cmp DWORD PTR ds:0x80d2a04, esi
 806efd4:  mov DWORD PTR [edx+ebx], eax
 806efd7:  jbe 806f0ba
 806efdd:  mov edi, DWORD PTR [ebp-0xd8]
 806efe3:  mov eax, DWORD PTR [edi+0x4]
 806efe6:  cmp eax, DWORD PTR [edi+0x8]
 806efe9:  jae 806f31d
 806efef:  movzx edx, BYTE PTR [eax]
 806eff2:  add eax, 0x1
 806eff5:  mov DWORD PTR [edi+0x4], eax
 806eff8:  mov BYTE PTR [ebp-0x10], dl
 806effb:  mov edx, DWORD PTR [ebp-0xd8]
 806f001:  mov eax, DWORD PTR [edx+0x4]
 806f004:  cmp eax, DWORD PTR [edx+0x8]
 806f007:  jae 806f62e
 806f00d:  mov ecx, edx
 806f00f:  movzx edx, BYTE PTR [eax]
 806f012:  add eax, 0x1
 806f015:  mov DWORD PTR [ecx+0x4], eax
 806f018:  mov edi, DWORD PTR [ebp-0xd8]
 806f01e:  mov BYTE PTR [ebp-0xf], dl
 806f021:  mov eax, DWORD PTR [edi+0x4]
 806f024:  cmp eax, DWORD PTR [edi+0x8]
 806f027:  jae 806f650
 806f02d:  movzx edx, BYTE PTR [eax]
 806f030:  add eax, 0x1
 806f033:  mov DWORD PTR [edi+0x4], eax
 806f036:  mov BYTE PTR [ebp-0xe], dl
 806f039:  mov edx, DWORD PTR [ebp-0xd8]
 806f03f:  mov eax, DWORD PTR [edx+0x4]
 806f042:  cmp eax, DWORD PTR [edx+0x8]
 806f045:  jae 806f678
 806f04b:  mov ecx, edx
 806f04d:  movzx edx, BYTE PTR [eax]
 806f050:  add eax, 0x1
 806f053:  mov DWORD PTR [ecx+0x4], eax
 806f056:  mov ebx, ecx
 806f058:  mov BYTE PTR [ebp-0xd], dl
 806f05b:  mov eax, DWORD PTR [ebx+0x4]
 806f05e:  cmp eax, DWORD PTR [ebx+0x8]
 806f061:  jae 806f0a8
 806f063:  movzx edx, BYTE PTR [eax]
 806f066:  add eax, 0x1
 806f069:  mov DWORD PTR [ebx+0x4], eax
 806f06c:  cmp edx, 0x1
 806f06f:  ja 806ed40
 806f075:  mov eax, ds:0x80d2a08
 806f07a:  lea ebx, [esi*8]
 806f081:  mov BYTE PTR [eax+ebx+0x4], dl
 806f085:  mov edx, DWORD PTR [ebp-0xd8]
 806f08b:  mov eax, DWORD PTR [edx+0x4]
 806f08e:  cmp eax, DWORD PTR [edx+0x8]
 806f091:  jb 806efa0
 806f097:  mov DWORD PTR [esp], edx
 806f09a:  call 8068f50
 806f09f:  mov edx, eax
 806f0a1:  jmp 806efab
 806f0a6:  xchg ax, ax
 806f0a8:  mov DWORD PTR [esp], ebx
 806f0ab:  call 8068f50
 806f0b0:  mov edx, eax
 806f0b2:  lea esi, [esi]
 806f0b8:  jmp 806f06c
 806f0ba:  mov esi, DWORD PTR [ebp-0xb4]
 806f0c0:  mov ebx, DWORD PTR [ebp-0xd8]
 806f0c6:  mov eax, ds:0x80d2a0c
 806f0cb:  mov DWORD PTR [esp+0x4], 0x1
 806f0d3:  mov DWORD PTR [esp+0x8], esi
 806f0d7:  mov DWORD PTR [esp+0xc], ebx
 806f0db:  mov DWORD PTR [esp], eax
 806f0de:  call 8094150
 806f0e3:  cmp eax, esi
 806f0e5:  mov DWORD PTR [ebp-0xc4], eax
 806f0eb:  jne 806ed40
 806f0f1:  mov eax, ds:0x80d2a18
 806f0f6:  test eax, eax
 806f0f8:  je 806f241
 806f0fe:  lea esi, [ebp-0x18]
 806f101:  xor ebx, ebx
 806f103:  nop
 806f104:  lea esi, [esi]
 806f108:  mov edi, DWORD PTR [ebp-0xd8]
 806f10e:  mov eax, DWORD PTR [edi+0x4]
 806f111:  cmp DWORD PTR [edi+0x8], eax
 806f114:  jbe 806f740
 806f11a:  movzx edx, BYTE PTR [eax]
 806f11d:  add eax, 0x1
 806f120:  mov DWORD PTR [edi+0x4], eax
 806f123:  mov BYTE PTR [esi], dl
 806f125:  mov edx, DWORD PTR [ebp-0xd8]
 806f12b:  mov eax, DWORD PTR [edx+0x4]
 806f12e:  cmp eax, DWORD PTR [edx+0x8]
 806f131:  jae 806f718
 806f137:  mov ecx, edx
 806f139:  movzx edx, BYTE PTR [eax]
 806f13c:  add eax, 0x1
 806f13f:  mov DWORD PTR [ecx+0x4], eax
 806f142:  mov BYTE PTR [ebp-0x17], dl
 806f145:  mov edx, DWORD PTR [ebp-0xd8]
 806f14b:  mov eax, DWORD PTR [edx+0x4]
 806f14e:  cmp eax, DWORD PTR [edx+0x8]
 806f151:  jae 806f6f0
 806f157:  mov ecx, edx
 806f159:  movzx edx, BYTE PTR [eax]
 806f15c:  add eax, 0x1
 806f15f:  mov DWORD PTR [ecx+0x4], eax
 806f162:  mov BYTE PTR [ebp-0x16], dl
 806f165:  mov edx, DWORD PTR [ebp-0xd8]
 806f16b:  mov eax, DWORD PTR [edx+0x4]
 806f16e:  cmp eax, DWORD PTR [edx+0x8]
 806f171:  jae 806f7b0
 806f177:  mov ecx, edx
 806f179:  movzx edx, BYTE PTR [eax]
 806f17c:  add eax, 0x1
 806f17f:  mov DWORD PTR [ecx+0x4], eax
 806f182:  mov BYTE PTR [ebp-0x15], dl
 806f185:  mov edx, DWORD PTR ds:0x80d2a1c
 806f18b:  lea edi, [ebx*8]
 806f192:  mov eax, DWORD PTR [esi]
 806f194:  bswap eax
 806f196:  mov DWORD PTR [ebp-0xa8], edi
 806f19c:  mov DWORD PTR [edx+ebx*8], eax
 806f19f:  mov edx, DWORD PTR [ebp-0xd8]
 806f1a5:  mov eax, DWORD PTR [edx+0x4]
 806f1a8:  cmp DWORD PTR [edx+0x8], eax
 806f1ab:  jbe 806f6c8
 806f1b1:  mov ecx, edx
 806f1b3:  movzx edx, BYTE PTR [eax]
 806f1b6:  add eax, 0x1
 806f1b9:  mov DWORD PTR [ecx+0x4], eax
 806f1bc:  mov BYTE PTR [esi], dl
 806f1be:  mov edx, DWORD PTR [ebp-0xd8]
 806f1c4:  mov eax, DWORD PTR [edx+0x4]
 806f1c7:  cmp DWORD PTR [edx+0x8], eax
 806f1ca:  jbe 806f6a8
 806f1d0:  mov ecx, edx
 806f1d2:  movzx edx, BYTE PTR [eax]
 806f1d5:  add eax, 0x1
 806f1d8:  mov DWORD PTR [ecx+0x4], eax
 806f1db:  mov BYTE PTR [ebp-0x17], dl
 806f1de:  mov edx, DWORD PTR [ebp-0xd8]
 806f1e4:  mov eax, DWORD PTR [edx+0x4]
 806f1e7:  cmp eax, DWORD PTR [edx+0x8]
 806f1ea:  jae 806f790
 806f1f0:  mov ecx, edx
 806f1f2:  movzx edx, BYTE PTR [eax]
 806f1f5:  add eax, 0x1
 806f1f8:  mov DWORD PTR [ecx+0x4], eax
 806f1fb:  mov BYTE PTR [ebp-0x16], dl
 806f1fe:  mov edx, DWORD PTR [ebp-0xd8]
 806f204:  mov eax, DWORD PTR [edx+0x4]
 806f207:  cmp eax, DWORD PTR [edx+0x8]
 806f20a:  jae 806f768
 806f210:  mov ecx, edx
 806f212:  movzx edx, BYTE PTR [eax]
 806f215:  add eax, 0x1
 806f218:  mov DWORD PTR [ecx+0x4], eax
 806f21b:  mov BYTE PTR [ebp-0x15], dl
 806f21e:  mov edi, DWORD PTR [ebp-0xa8]
 806f224:  add ebx, 0x1
 806f227:  mov edx, DWORD PTR ds:0x80d2a1c
 806f22d:  mov eax, DWORD PTR [esi]
 806f22f:  bswap eax
 806f231:  cmp DWORD PTR ds:0x80d2a18, ebx
 806f237:  mov DWORD PTR [edx+edi+0x4], eax
 806f23b:  ja 806f108
 806f241:  mov edi, DWORD PTR [ebp-0xb0]
 806f247:  xor ebx, ebx
 806f249:  test edi, edi
 806f24b:  jne 806f272
 806f24d:  jmp 806f295
 806f24f:  nop
 806f250:  mov ecx, edx
 806f252:  movzx edx, BYTE PTR [eax]
 806f255:  add eax, 0x1
 806f258:  mov DWORD PTR [ecx+0x4], eax
 806f25b:  mov eax, ds:0x80d2a08
 806f260:  test edx, edx
 806f262:  setne BYTE PTR [eax+ebx*8+0x6]
 806f267:  add ebx, 0x1
 806f26a:  cmp ebx, DWORD PTR [ebp-0xb0]
 806f270:  jae 806f295
 806f272:  mov edx, DWORD PTR [ebp-0xd8]
 806f278:  mov eax, DWORD PTR [edx+0x4]
 806f27b:  cmp eax, DWORD PTR [edx+0x8]
 806f27e:  jb 806f250
 806f280:  mov DWORD PTR [esp], edx
 806f283:  call 8068f50
 806f288:  cmp eax, 0xff
 806f28b:  mov edx, eax
 806f28d:  jne 806f25b
 806f28f:  nop
 806f290:  jmp 806ed40
 806f295:  cmp DWORD PTR ds:0x80d2a04, ebx
 806f29b:  nop
 806f29c:  lea esi, [esi]
 806f2a0:  jbe 806f2c8
 806f2a2:  lea edx, [ebx*8]
 806f2a9:  lea esi, [esi]
 806f2b0:  mov eax, ds:0x80d2a08
 806f2b5:  add ebx, 0x1
 806f2b8:  mov BYTE PTR [eax+edx+0x6], 0x0
 806f2bd:  add edx, 0x8
 806f2c0:  cmp DWORD PTR ds:0x80d2a04, ebx
 806f2c6:  ja 806f2b0
 806f2c8:  mov esi, DWORD PTR [ebp-0xac]
 806f2ce:  xor ebx, ebx
 806f2d0:  test esi, esi
 806f2d2:  jne 806f2f8
 806f2d4:  jmp 806f340
 806f2d6:  xchg ax, ax
 806f2d8:  movzx edx, BYTE PTR [eax]
 806f2db:  add eax, 0x1
 806f2de:  mov DWORD PTR [esi+0x4], eax
 806f2e1:  mov eax, ds:0x80d2a08
 806f2e6:  test edx, edx
 806f2e8:  setne BYTE PTR [eax+ebx*8+0x7]
 806f2ed:  add ebx, 0x1
 806f2f0:  cmp ebx, DWORD PTR [ebp-0xac]
 806f2f6:  jae 806f340
 806f2f8:  mov esi, DWORD PTR [ebp-0xd8]
 806f2fe:  mov eax, DWORD PTR [esi+0x4]
 806f301:  cmp eax, DWORD PTR [esi+0x8]
 806f304:  jb 806f2d8
 806f306:  mov DWORD PTR [esp], esi
 806f309:  call 8068f50
 806f30e:  cmp eax, 0xff
 806f311:  mov edx, eax
 806f313:  jne 806f2e1
 806f315:  lea esi, [esi]
 806f318:  jmp 806ed40
 806f31d:  mov DWORD PTR [esp], edi
 806f320:  call 8068f50
 806f325:  cmp eax, 0xff
 806f328:  mov edx, eax
 806f32a:  lea esi, [esi]
 806f330:  je 806ed40
 806f336:  xchg ax, ax
 806f338:  jmp 806eff8
 806f33d:  lea esi, [esi]
 806f340:  cmp DWORD PTR ds:0x80d2a04, ebx
 806f346:  xchg ax, ax
 806f348:  jbe 806f370
 806f34a:  lea edx, [ebx*8]
 806f351:  lea esi, [esi]
 806f358:  mov eax, ds:0x80d2a08
 806f35d:  add ebx, 0x1
 806f360:  mov BYTE PTR [eax+edx+0x7], 0x0
 806f365:  add edx, 0x8
 806f368:  cmp DWORD PTR ds:0x80d2a04, ebx
 806f36e:  ja 806f358
 806f370:  cmp BYTE PTR [ebp-0x40], 0x0
 806f374:  je 806f4e0
 806f37a:  mov eax, DWORD PTR [ebp-0xd8]
 806f380:  lea edx, [ebp-0x44]
 806f383:  mov DWORD PTR [esp+0x8], 0x1
 806f38b:  mov DWORD PTR [esp+0x4], 0x2c
 806f393:  mov DWORD PTR [esp], edx
 806f396:  mov DWORD PTR [esp+0xc], eax
 806f39a:  call 8094150
 806f39f:  sub eax, 0x1
 806f3a2:  jne 806ed40
 806f3a8:  mov esi, DWORD PTR [ebp-0xd4]
 806f3ae:  mov ecx, 0x4
 806f3b3:  mov edi, 0x80b1f37
 806f3b8:  repz cmpsb
 806f3ba:  jne 806ed40
 806f3c0:  mov ecx, DWORD PTR [ebp-0x24]
 806f3c3:  mov edx, DWORD PTR [ebp-0x20]
 806f3c6:  bswap ecx
 806f3c8:  bswap edx
 806f3ca:  lea ecx, [ecx+ecx*8]
 806f3cd:  mov eax, DWORD PTR [ebp-0x1c]
 806f3d0:  lea edx, [edx+edx*2]
 806f3d3:  mov ebx, DWORD PTR [ebp-0x2c]
 806f3d6:  bswap eax
 806f3d8:  lea edx, [ecx+edx*2]
 806f3db:  mov esi, DWORD PTR [ebp-0xd8]
 806f3e1:  mov DWORD PTR [ebp-0xc8], eax
 806f3e7:  mov eax, DWORD PTR [ebp-0x28]
 806f3ea:  add edx, DWORD PTR [ebp-0xc8]
 806f3f0:  bswap eax
 806f3f2:  lea eax, [eax+eax*2]
 806f3f5:  bswap ebx
 806f3f7:  lea eax, [edx+eax*4]
 806f3fa:  mov DWORD PTR [ebp-0xcc], ebx
 806f400:  mov ebx, DWORD PTR [ebp-0x30]
 806f403:  add eax, DWORD PTR [ebp-0xcc]
 806f409:  bswap ebx
 806f40b:  mov DWORD PTR [esp+0x8], 0x1
 806f413:  add eax, ebx
 806f415:  mov DWORD PTR [esp+0x4], eax
 806f419:  mov DWORD PTR [esp], esi
 806f41c:  call 8093e60
 806f421:  test eax, eax
 806f423:  jne 806ed40
 806f429:  mov DWORD PTR [esp], esi
 806f42c:  call 8093f80
 806f431:  test eax, eax
 806f433:  mov ecx, eax
 806f435:  js 806ed40
 806f43b:  lea eax, [eax+0x2]
 806f43e:  mov ebx, DWORD PTR [ebp-0x78]
 806f441:  mov edx, eax
 806f443:  sar edx, 0x1f
 806f446:  cmp DWORD PTR [ebp-0x74], edx
 806f449:  jl 806ed40
 806f44f:  jle 806f8aa
 806f455:  lea esi, [ebx-0x1]
 806f458:  mov edx, DWORD PTR [ebp-0xd8]
 806f45e:  sub esi, ecx
 806f460:  lea eax, [esi+0x12]
 806f463:  and eax, 0xfc
 806f466:  sub esp, eax
 806f468:  mov eax, DWORD PTR [edx+0x4]
 806f46b:  lea edi, [esp+0x1f]
 806f46f:  and edi, 0xf0
 806f472:  cmp eax, DWORD PTR [edx+0x8]
 806f475:  mov DWORD PTR [ebp-0xd0], edi
 806f47b:  jae 806f8db
 806f481:  mov ecx, DWORD PTR [ebp-0xd8]
 806f487:  movzx edx, BYTE PTR [eax]
 806f48a:  add eax, 0x1
 806f48d:  mov DWORD PTR [ecx+0x4], eax
 806f490:  cmp edx, 0xa
 806f493:  jne 806ed40
 806f499:  mov edi, DWORD PTR [ebp-0xd8]
 806f49f:  lea ebx, [esi-0x1]
 806f4a2:  mov eax, DWORD PTR [ebp-0xd0]
 806f4a8:  mov DWORD PTR [esp+0x8], ebx
 806f4ac:  mov DWORD PTR [esp+0x4], 0x1
 806f4b4:  mov DWORD PTR [esp+0xc], edi
 806f4b8:  mov DWORD PTR [esp], eax
 806f4bb:  call 8094150
 806f4c0:  cmp ebx, eax
 806f4c2:  jne 806ed40
 806f4c8:  mov edx, DWORD PTR [ebp-0xd0]
 806f4ce:  mov BYTE PTR [edx+esi-0x1], 0x0
 806f4d3:  mov DWORD PTR [esp], edx
 806f4d6:  call 806d7f0
 806f4db:  mov ds:0x80d2a20, eax
 806f4e0:  mov ecx, DWORD PTR [ebp-0xd8]
 806f4e6:  mov DWORD PTR [esp], ecx
 806f4e9:  call 8062010
 806f4ee:  mov ecx, DWORD PTR ds:0x80d2a04
 806f4f4:  test ecx, ecx
 806f4f6:  je 806f523
 806f4f8:  xor ebx, ebx
 806f4fa:  lea esi, [esi]
 806f500:  mov eax, ds:0x80d2a08
 806f505:  movzx eax, BYTE PTR [eax+ebx*8+0x5]
 806f50a:  add ebx, 0x1
 806f50d:  add eax, DWORD PTR ds:0x80d2a0c
 806f513:  mov DWORD PTR [esp], eax
 806f516:  call 806d7f0
 806f51b:  cmp DWORD PTR ds:0x80d2a04, ebx
 806f521:  ja 806f500
 806f523:  mov esi, DWORD PTR ds:0x80d29fc
 806f529:  mov DWORD PTR ds:0x80d11e8, 0x0
 806f533:  mov DWORD PTR ds:0x80d11ec, 0x0
 806f53d:  test esi, esi
 806f53f:  je 806f598
 806f541:  mov edi, 0x1
 806f546:  jmp 806f54c
 806f548:  test esi, esi
 806f54a:  je 806f598
 806f54c:  mov eax, ds:0x80d2a00
 806f551:  sub esi, 0x1
 806f554:  movzx eax, BYTE PTR [eax+esi]
 806f558:  shl eax, 0x3
 806f55b:  add eax, DWORD PTR ds:0x80d2a08
 806f561:  movzx ebx, BYTE PTR [eax+0x4]
 806f565:  mov edx, DWORD PTR [ebx*4+0x80d11e8]
 806f56c:  test edx, edx
 806f56e:  jne 806f548
 806f570:  movzx eax, BYTE PTR [eax+0x5]
 806f574:  add eax, DWORD PTR ds:0x80d2a0c
 806f57a:  mov DWORD PTR [esp], eax
 806f57d:  call 806d7f0
 806f582:  mov DWORD PTR [ebx*4+0x80d11e8], eax
 806f589:  mov eax, edi
 806f58b:  sub eax, ebx
 806f58d:  mov eax, DWORD PTR [eax*4+0x80d11e8]
 806f594:  test eax, eax
 806f596:  je 806f548
 806f598:  mov eax, ds:0x80d11e8
 806f59d:  test eax, eax
 806f59f:  je 806f87b
 806f5a5:  mov eax, ds:0x80d11ec
 806f5aa:  test eax, eax
 806f5ac:  je 806f89b
 806f5b2:  mov edx, DWORD PTR ds:0x80d2a0c
 806f5b8:  cmp BYTE PTR [edx], 0x0
 806f5bb:  je 806f5de
 806f5bd:  mov eax, edx
 806f5bf:  nop
 806f5c0:  add eax, 0x1
 806f5c3:  cmp BYTE PTR [eax], 0x0
 806f5c6:  jne 806f5c0
 806f5c8:  mov ecx, eax
 806f5ca:  sub ecx, edx
 806f5cc:  mov edx, eax
 806f5ce:  cmp DWORD PTR ds:0x80d2eac, ecx
 806f5d4:  jae 806f5de
 806f5d6:  mov DWORD PTR ds:0x80d2eac, ecx
 806f5dc:  mov edx, eax
 806f5de:  mov eax, DWORD PTR [ebp-0xc4]
 806f5e4:  add edx, 0x1
 806f5e7:  add eax, DWORD PTR ds:0x80d2a0c
 806f5ed:  cmp edx, eax
 806f5ef:  jb 806f5b8
 806f5f1:  mov eax, ds:0x80d29fc
 806f5f6:  test eax, eax
 806f5f8:  jne 806f7d8
 806f5fe:  mov eax, ds:0x80d2a08
 806f603:  mov eax, DWORD PTR [eax]
 806f605:  mov ds:0x80d2a14, eax
 806f60a:  mov edx, eax
 806f60c:  mov ds:0x80d2a10, eax
 806f611:  xor eax, eax
 806f613:  cmp edx, DWORD PTR ds:0x80d2a14
 806f619:  setne al
 806f61c:  neg edx
 806f61e:  mov ds:0x80d2980, eax
 806f623:  mov DWORD PTR ds:0x80d2984, edx
 806f629:  jmp 806ee17
 806f62e:  mov DWORD PTR [esp], edx
 806f631:  call 8068f50
 806f636:  cmp eax, 0xff
 806f639:  mov edx, eax
 806f63b:  je 806ed40
 806f641:  lea esi, [esi]
 806f648:  jmp 806f018
 806f64d:  lea esi, [esi]
 806f650:  mov DWORD PTR [esp], edi
 806f653:  nop
 806f654:  lea esi, [esi]
 806f658:  call 8068f50
 806f65d:  cmp eax, 0xff
 806f660:  mov edx, eax
 806f662:  lea esi, [esi]
 806f668:  je 806ed40
 806f66e:  xchg ax, ax
 806f670:  jmp 806f036
 806f675:  lea esi, [esi]
 806f678:  mov DWORD PTR [esp], edx
 806f67b:  nop
 806f67c:  lea esi, [esi]
 806f680:  call 8068f50
 806f685:  cmp eax, 0xff
 806f688:  mov edx, eax
 806f68a:  lea esi, [esi]
 806f690:  je 806ed40
 806f696:  mov ebx, DWORD PTR [ebp-0xd8]
 806f69c:  jmp 806f058
 806f6a1:  lea esi, [esi]
 806f6a8:  mov DWORD PTR [esp], edx
 806f6ab:  call 8068f50
 806f6b0:  cmp eax, 0xff
 806f6b3:  mov edx, eax
 806f6b5:  je 806ed40
 806f6bb:  nop
 806f6bc:  lea esi, [esi]
 806f6c0:  jmp 806f1db
 806f6c5:  lea esi, [esi]
 806f6c8:  mov DWORD PTR [esp], edx
 806f6cb:  nop
 806f6cc:  lea esi, [esi]
 806f6d0:  call 8068f50
 806f6d5:  cmp eax, 0xff
 806f6d8:  mov edx, eax
 806f6da:  lea esi, [esi]
 806f6e0:  je 806ed40
 806f6e6:  xchg ax, ax
 806f6e8:  jmp 806f1bc
 806f6ed:  lea esi, [esi]
 806f6f0:  mov DWORD PTR [esp], edx
 806f6f3:  nop
 806f6f4:  lea esi, [esi]
 806f6f8:  call 8068f50
 806f6fd:  cmp eax, 0xff
 806f700:  mov edx, eax
 806f702:  lea esi, [esi]
 806f708:  je 806ed40
 806f70e:  xchg ax, ax
 806f710:  jmp 806f162
 806f715:  lea esi, [esi]
 806f718:  mov DWORD PTR [esp], edx
 806f71b:  nop
 806f71c:  lea esi, [esi]
 806f720:  call 8068f50
 806f725:  cmp eax, 0xff
 806f728:  mov edx, eax
 806f72a:  lea esi, [esi]
 806f730:  je 806ed40
 806f736:  xchg ax, ax
 806f738:  jmp 806f142
 806f73d:  lea esi, [esi]
 806f740:  mov DWORD PTR [esp], edi
 806f743:  nop
 806f744:  lea esi, [esi]
 806f748:  call 8068f50
 806f74d:  cmp eax, 0xff
 806f750:  mov edx, eax
 806f752:  lea esi, [esi]
 806f758:  je 806ed40
 806f75e:  xchg ax, ax
 806f760:  jmp 806f123
 806f765:  lea esi, [esi]
 806f768:  mov DWORD PTR [esp], edx
 806f76b:  nop
 806f76c:  lea esi, [esi]
 806f770:  call 8068f50
 806f775:  cmp eax, 0xff
 806f778:  mov edx, eax
 806f77a:  lea esi, [esi]
 806f780:  je 806ed40
 806f786:  xchg ax, ax
 806f788:  jmp 806f21b
 806f78d:  lea esi, [esi]
 806f790:  mov edi, DWORD PTR [ebp-0xd8]
 806f796:  mov DWORD PTR [esp], edi
 806f799:  call 8068f50
 806f79e:  cmp eax, 0xff
 806f7a1:  mov edx, eax
 806f7a3:  je 806ed40
 806f7a9:  jmp 806f1fb
 806f7ae:  xchg ax, ax
 806f7b0:  mov DWORD PTR [esp], edx
 806f7b3:  nop
 806f7b4:  lea esi, [esi]
 806f7b8:  call 8068f50
 806f7bd:  cmp eax, 0xff
 806f7c0:  mov edx, eax
 806f7c2:  lea esi, [esi]
 806f7c8:  je 806ed40
 806f7ce:  xchg ax, ax
 806f7d0:  jmp 806f182
 806f7d5:  lea esi, [esi]
 806f7d8:  mov eax, ds:0x80d29fc
 806f7dd:  xor ebx, ebx
 806f7df:  xor ecx, ecx
 806f7e1:  mov DWORD PTR ds:0x80d2a14, 0x0
 806f7eb:  mov DWORD PTR ds:0x80d2a10, 0x0
 806f7f5:  lea edx, [eax-0x1]
 806f7f8:  test ebx, ebx
 806f7fa:  jne 806f82c
 806f7fc:  mov eax, ds:0x80d2a00
 806f801:  movzx eax, BYTE PTR [eax+edx]
 806f805:  shl eax, 0x3
 806f808:  add eax, DWORD PTR ds:0x80d2a08
 806f80e:  cmp BYTE PTR [eax+0x4], 0x0
 806f812:  jne 806f82c
 806f814:  mov eax, DWORD PTR [eax]
 806f816:  test ecx, ecx
 806f818:  mov bl, 0x1
 806f81a:  mov ds:0x80d2a10, eax
 806f81f:  je 806f858
 806f821:  mov edx, DWORD PTR ds:0x80d2a10
 806f827:  jmp 806f611
 806f82c:  test ecx, ecx
 806f82e:  jne 806f84f
 806f830:  mov eax, ds:0x80d2a00
 806f835:  movzx eax, BYTE PTR [eax+edx]
 806f839:  shl eax, 0x3
 806f83c:  add eax, DWORD PTR ds:0x80d2a08
 806f842:  cmp BYTE PTR [eax+0x4], 0x0
 806f846:  je 806f858
 806f848:  mov eax, DWORD PTR [eax]
 806f84a:  mov ds:0x80d2a14, eax
 806f84f:  test bl, bl
 806f851:  mov ecx, 0x1
 806f856:  jne 806f821
 806f858:  test edx, edx
 806f85a:  je 806f861
 806f85c:  sub edx, 0x1
 806f85f:  jmp 806f7f8
 806f861:  test ecx, ecx
 806f863:  nop
 806f864:  lea esi, [esi]
 806f868:  jne 806f821
 806f86a:  mov edx, DWORD PTR ds:0x80d2a10
 806f870:  mov DWORD PTR ds:0x80d2a14, edx
 806f876:  jmp 806f611
 806f87b:  cmp DWORD PTR ds:0x80d2a04, 0x1
 806f882:  jne 806f8b7
 806f884:  mov eax, ds:0x80d2a0c
 806f889:  mov DWORD PTR [esp], eax
 806f88c:  call 806d7f0
 806f891:  mov ds:0x80d11e8, eax
 806f896:  jmp 806f5a5
 806f89b:  mov eax, ds:0x80d11e8
 806f8a0:  mov ds:0x80d11ec, eax
 806f8a5:  jmp 806f5b2
 806f8aa:  cmp ebx, eax
 806f8ac:  jb 806ed40
 806f8b2:  jmp 806f455
 806f8b7:  mov DWORD PTR [esp+0xc], 0x80b1f58
 806f8bf:  mov DWORD PTR [esp+0x8], 0x1c4
 806f8c7:  mov DWORD PTR [esp+0x4], 0x80b1f06
 806f8cf:  mov DWORD PTR [esp], 0x80b1f1e
 806f8d6:  call 8051490
 806f8db:  mov DWORD PTR [esp], edx
 806f8de:  call 8068f50
 806f8e3:  mov edx, eax
 806f8e5:  jmp 806f490
 806f8ea:  lea esi, [esi]

0806f8f0 <__tzfile_default>:
 806f8f0:  push ebp
 806f8f1:  mov ebp, esp
 806f8f3:  push edi
 806f8f4:  push esi
 806f8f5:  push ebx
 806f8f6:  sub esp, 0x24
 806f8f9:  mov eax, DWORD PTR [ebp+0x8]
 806f8fc:  mov DWORD PTR [esp], eax
 806f8ff:  call 804eea0
 806f904:  mov edx, DWORD PTR [ebp+0xc]
 806f907:  add eax, 0x1
 806f90a:  mov DWORD PTR [ebp-0x14], eax
 806f90d:  mov DWORD PTR [esp], edx
 806f910:  call 804eea0
 806f915:  mov ecx, DWORD PTR [ebp-0x14]
 806f918:  lea ebx, [eax+0x1]
 806f91b:  add ecx, ebx
 806f91d:  mov DWORD PTR [ebp-0x24], ecx
 806f920:  lea eax, [ebp-0x10]
 806f923:  mov DWORD PTR [esp+0x8], eax
 806f927:  mov DWORD PTR [esp+0x4], ecx
 806f92b:  mov DWORD PTR [esp], 0x80b1f3c
 806f932:  call 806eb00
 806f937:  mov edx, DWORD PTR ds:0x80d2eb0
 806f93d:  test edx, edx
 806f93f:  je 806fabd
 806f945:  cmp DWORD PTR ds:0x80d2a04, 0x1
 806f94c:  jbe 806fac8
 806f952:  mov eax, DWORD PTR [ebp-0x14]
 806f955:  mov DWORD PTR [esp+0x8], eax
 806f959:  mov edx, DWORD PTR [ebp+0x8]
 806f95c:  mov DWORD PTR [esp+0x4], edx
 806f960:  mov eax, DWORD PTR [ebp-0x10]
 806f963:  mov DWORD PTR [esp], eax
 806f966:  call 806c310
 806f96b:  mov DWORD PTR [esp+0x8], ebx
 806f96f:  mov ecx, DWORD PTR [ebp+0xc]
 806f972:  mov DWORD PTR [esp+0x4], ecx
 806f976:  mov DWORD PTR [esp], eax
 806f979:  call 804efc0
 806f97e:  mov eax, DWORD PTR [ebp-0x10]
 806f981:  mov DWORD PTR ds:0x80d2a04, 0x2
 806f98b:  mov ds:0x80d2a0c, eax
 806f990:  mov eax, ds:0x80d29fc
 806f995:  test eax, eax
 806f997:  mov DWORD PTR [ebp-0x18], eax
 806f99a:  je 806fa2e
 806f9a0:  mov edx, DWORD PTR [ebp+0x14]
 806f9a3:  xor ebx, ebx
 806f9a5:  xor edi, edi
 806f9a7:  mov ecx, DWORD PTR [ebp+0x10]
 806f9aa:  xor esi, esi
 806f9ac:  sub edx, DWORD PTR ds:0x80d2a14
 806f9b2:  sub ecx, DWORD PTR ds:0x80d2a10
 806f9b8:  mov DWORD PTR [ebp-0x20], edx
 806f9bb:  mov DWORD PTR [ebp-0x1c], ecx
 806f9be:  jmp 806f9ea
 806f9c0:  cmp BYTE PTR [ecx+0x6], 0x0
 806f9c4:  jne 806fa12
 806f9c6:  mov eax, esi
 806f9c8:  mov edx, DWORD PTR [ebp-0x20]
 806f9cb:  add eax, DWORD PTR ds:0x80d2f44
 806f9d1:  add DWORD PTR [eax], edx
 806f9d3:  nop
 806f9d4:  lea esi, [esi]
 806f9d8:  add ebx, 0x1
 806f9db:  add esi, 0x4
 806f9de:  movzx eax, BYTE PTR [ecx+0x4]
 806f9e2:  cmp ebx, DWORD PTR [ebp-0x18]
 806f9e5:  jae 806fa2e
 806f9e7:  movzx edi, al
 806f9ea:  mov eax, ebx
 806f9ec:  add eax, DWORD PTR ds:0x80d2a00
 806f9f2:  movzx edx, BYTE PTR [eax]
 806f9f5:  lea ecx, [edx*8]
 806f9fc:  add ecx, DWORD PTR ds:0x80d2a08
 806fa02:  movzx edx, BYTE PTR [ecx+0x4]
 806fa06:  mov BYTE PTR [eax], dl
 806fa08:  cmp BYTE PTR [ecx+0x7], 0x0
 806fa0c:  jne 806f9d8
 806fa0e:  test edi, edi
 806fa10:  jne 806f9c0
 806fa12:  mov eax, esi
 806fa14:  mov edx, DWORD PTR [ebp-0x1c]
 806fa17:  add ebx, 0x1
 806fa1a:  add eax, DWORD PTR ds:0x80d2f44
 806fa20:  add esi, 0x4
 806fa23:  add DWORD PTR [eax], edx
 806fa25:  cmp ebx, DWORD PTR [ebp-0x18]
 806fa28:  movzx eax, BYTE PTR [ecx+0x4]
 806fa2c:  jb 806f9e7
 806fa2e:  mov eax, DWORD PTR [ebp+0x14]
 806fa31:  mov ecx, DWORD PTR [ebp+0x10]
 806fa34:  mov ds:0x80d2a14, eax
 806fa39:  mov eax, ds:0x80d2a08
 806fa3e:  mov DWORD PTR ds:0x80d2a10, ecx
 806fa44:  mov BYTE PTR [eax+0x5], 0x0
 806fa48:  lea edx, [eax+0x8]
 806fa4b:  mov BYTE PTR [eax+0x4], 0x0
 806fa4f:  mov DWORD PTR [eax], ecx
 806fa51:  movzx ecx, BYTE PTR [ebp-0x14]
 806fa55:  mov BYTE PTR [edx+0x5], cl
 806fa58:  mov ecx, DWORD PTR [ebp+0x14]
 806fa5b:  mov BYTE PTR [edx+0x4], 0x1
 806fa5f:  mov edx, DWORD PTR [ebp+0xc]
 806fa62:  mov DWORD PTR [eax+0x8], ecx
 806fa65:  mov eax, DWORD PTR [ebp+0x8]
 806fa68:  neg DWORD PTR [ebp+0x10]
 806fa6b:  mov ecx, DWORD PTR [ebp+0x10]
 806fa6e:  mov DWORD PTR ds:0x80d11ec, edx
 806fa74:  mov edx, DWORD PTR ds:0x80d2a0c
 806fa7a:  mov ds:0x80d11e8, eax
 806fa7f:  mov eax, DWORD PTR [ebp-0x24]
 806fa82:  mov DWORD PTR ds:0x80d2984, ecx
 806fa88:  lea ebx, [edx+eax]
 806fa8b:  nop
 806fa8c:  lea esi, [esi]
 806fa90:  cmp BYTE PTR [edx], 0x0
 806fa93:  je 806fab6
 806fa95:  mov eax, edx
 806fa97:  nop
 806fa98:  add eax, 0x1
 806fa9b:  cmp BYTE PTR [eax], 0x0
 806fa9e:  jne 806fa98
 806faa0:  mov ecx, eax
 806faa2:  sub ecx, edx
 806faa4:  mov edx, eax
 806faa6:  cmp DWORD PTR ds:0x80d2eac, ecx
 806faac:  jae 806fab6
 806faae:  mov DWORD PTR ds:0x80d2eac, ecx
 806fab4:  mov edx, eax
 806fab6:  add edx, 0x1
 806fab9:  cmp edx, ebx
 806fabb:  jb 806fa90
 806fabd:  add esp, 0x24
 806fac0:  pop ebx
 806fac1:  pop esi
 806fac2:  pop edi
 806fac3:  pop ebp
 806fac4:  ret
 806fac5:  lea esi, [esi]
 806fac8:  mov DWORD PTR ds:0x80d2eb0, 0x0
 806fad2:  add esp, 0x24
 806fad5:  pop ebx
 806fad6:  pop esi
 806fad7:  pop edi
 806fad8:  pop ebp
 806fad9:  ret
 806fada:  nop
 806fadb:  nop
 806fadc:  nop
 806fadd:  nop
 806fade:  nop
 806fadf:  nop

0806fae0 <__strftime_internal>:
 806fae0:  push ebp
 806fae1:  mov ebp, esp
 806fae3:  push edi
 806fae4:  push esi
 806fae5:  push ebx
 806fae6:  sub esp, 0xdc
 806faec:  mov ebx, DWORD PTR [ebp+0x8]
 806faef:  mov DWORD PTR [ebp-0xd0], edx
 806faf5:  mov esi, DWORD PTR [ebp+0x8]
 806faf8:  mov edx, DWORD PTR [ebp+0x10]
 806fafb:  mov ebx, DWORD PTR [ebx+0x8]
 806fafe:  mov esi, DWORD PTR [esi+0x28]
 806fb01:  mov edx, DWORD PTR [edx+0x8]
 806fb04:  cmp ebx, 0xc
 806fb07:  mov DWORD PTR [ebp-0x94], ebx
 806fb0d:  mov DWORD PTR [ebp-0x98], edx
 806fb13:  mov DWORD PTR [ebp-0x90], esi
 806fb19:  jle 806fe48
 806fb1f:  sub ebx, 0xc
 806fb22:  mov DWORD PTR [ebp-0x94], ebx
 806fb28:  movzx edx, BYTE PTR [ecx]
 806fb2b:  mov DWORD PTR [ebp-0x58], eax
 806fb2e:  mov DWORD PTR [ebp-0x8c], 0x0
 806fb38:  test dl, dl
 806fb3a:  je 806fe68
 806fb40:  mov DWORD PTR [ebp-0x58], eax
 806fb43:  mov DWORD PTR [ebp-0x88], ecx
 806fb49:  mov DWORD PTR [ebp-0x8c], 0x0
 806fb53:  jmp 806fb9e
 806fb55:  lea esi, [esi]
 806fb58:  mov eax, DWORD PTR [ebp-0xd0]
 806fb5e:  sub eax, DWORD PTR [ebp-0x8c]
 806fb64:  cmp eax, 0x1
 806fb67:  jbe 806fe28
 806fb6d:  mov ebx, DWORD PTR [ebp-0x58]
 806fb70:  test ebx, ebx
 806fb72:  je 806fb7f
 806fb74:  mov edi, DWORD PTR [ebp-0x58]
 806fb77:  mov BYTE PTR [edi], dl
 806fb79:  add edi, 0x1
 806fb7c:  mov DWORD PTR [ebp-0x58], edi
 806fb7f:  add DWORD PTR [ebp-0x8c], 0x1
 806fb86:  add DWORD PTR [ebp-0x88], 0x1
 806fb8d:  mov ebx, DWORD PTR [ebp-0x88]
 806fb93:  movzx edx, BYTE PTR [ebx]
 806fb96:  test dl, dl
 806fb98:  je 806fe68
 806fb9e:  cmp dl, 0x25
 806fba1:  jne 806fb58
 806fba3:  mov DWORD PTR [ebp-0x84], 0x0
 806fbad:  xor ecx, ecx
 806fbaf:  mov DWORD PTR [ebp-0x70], 0x0
 806fbb6:  add DWORD PTR [ebp-0x88], 0x1
 806fbbd:  mov eax, DWORD PTR [ebp-0x88]
 806fbc3:  movzx esi, BYTE PTR [eax]
 806fbc6:  mov edx, esi
 806fbc8:  cmp dl, 0x30
 806fbcb:  je 806fd88
 806fbd1:  jg 806fd70
 806fbd7:  cmp dl, 0x23
 806fbda:  je 806fda8
 806fbe0:  cmp dl, 0x2d
 806fbe3:  nop
 806fbe4:  lea esi, [esi]
 806fbe8:  je 806fd88
 806fbee:  mov ebx, esi
 806fbf0:  movsx edx, bl
 806fbf3:  lea eax, [edx-0x30]
 806fbf6:  cmp eax, 0x9
 806fbf9:  mov DWORD PTR [ebp-0x74], 0x0
 806fc00:  jbe 806fd5c
 806fc06:  mov DWORD PTR [ebp-0x74], 0xffffffff
 806fc0d:  mov ebx, esi
 806fc0f:  cmp bl, 0x45
 806fc12:  je 806fde8
 806fc18:  xor edi, edi
 806fc1a:  cmp bl, 0x4f
 806fc1d:  je 806fde8
 806fc23:  mov edx, esi
 806fc25:  cmp dl, 0x7a
 806fc28:  jbe 806fdd8
 806fc2e:  mov ecx, esi
 806fc30:  cmp cl, 0x25
 806fc33:  je 806fea7
 806fc39:  mov ebx, 0xffffffff
 806fc3e:  mov edx, 0x1
 806fc43:  jmp 806fc4a
 806fc45:  lea esi, [esi]
 806fc48:  mov ebx, eax
 806fc4a:  mov edi, DWORD PTR [ebp-0x88]
 806fc50:  mov esi, edx
 806fc52:  mov ecx, DWORD PTR [ebp-0x88]
 806fc58:  sub esi, ebx
 806fc5a:  lea eax, [ebx-0x1]
 806fc5d:  add edi, ebx
 806fc5f:  mov DWORD PTR [ebp-0x48], edi
 806fc62:  cmp BYTE PTR [ecx+ebx], 0x25
 806fc66:  jne 806fc48
 806fc68:  mov edi, DWORD PTR [ebp-0x74]
 806fc6b:  sub edi, esi
 806fc6d:  mov eax, edi
 806fc6f:  sar eax, 0x1f
 806fc72:  not eax
 806fc74:  and eax, edi
 806fc76:  add eax, esi
 806fc78:  mov DWORD PTR [ebp-0x9c], eax
 806fc7e:  mov eax, DWORD PTR [ebp-0xd0]
 806fc84:  sub eax, DWORD PTR [ebp-0x8c]
 806fc8a:  cmp DWORD PTR [ebp-0x9c], eax
 806fc90:  jae 806fe28
 806fc96:  mov eax, DWORD PTR [ebp-0x58]
 806fc99:  test eax, eax
 806fc9b:  je 806fd15
 806fc9d:  test edi, edi
 806fc9f:  jle 806fcc8
 806fca1:  cmp DWORD PTR [ebp-0x84], 0x30
 806fca8:  je 806fe88
 806fcae:  mov edx, DWORD PTR [ebp-0x58]
 806fcb1:  mov DWORD PTR [esp+0x8], edi
 806fcb5:  mov DWORD PTR [esp+0x4], 0x20
 806fcbd:  mov DWORD PTR [esp], edx
 806fcc0:  call 804ef50
 806fcc5:  add DWORD PTR [ebp-0x58], edi
 806fcc8:  mov ecx, DWORD PTR [ebp-0x70]
 806fccb:  test ecx, ecx
 806fccd:  je 806fe00
 806fcd3:  mov ecx, DWORD PTR [ebp-0x58]
 806fcd6:  test esi, esi
 806fcd8:  lea ebx, [ecx+esi]
 806fcdb:  je 806fd12
 806fcdd:  mov edi, DWORD PTR [ebp-0x48]
 806fce0:  xor ecx, ecx
 806fce2:  add edi, esi
 806fce4:  mov DWORD PTR [ebp-0xdc], edi
 806fcea:  lea esi, [esi]
 806fcf0:  mov eax, DWORD PTR [ebp-0xdc]
 806fcf6:  mov edi, DWORD PTR [ebp+0x10]
 806fcf9:  movzx edx, BYTE PTR [eax+ecx-0x1]
 806fcfe:  mov eax, DWORD PTR [edi+0x3c]
 806fd01:  mov eax, DWORD PTR [eax+edx*4]
 806fd04:  mov BYTE PTR [ebx+ecx-0x1], al
 806fd08:  sub ecx, 0x1
 806fd0b:  lea eax, [esi+ecx]
 806fd0e:  test eax, eax
 806fd10:  jne 806fcf0
 806fd12:  mov DWORD PTR [ebp-0x58], ebx
 806fd15:  mov ecx, DWORD PTR [ebp-0x9c]
 806fd1b:  add DWORD PTR [ebp-0x8c], ecx
 806fd21:  jmp 806fb86
 806fd26:  xchg ax, ax
 806fd28:  je 806fdb8
 806fd2e:  mov ebx, DWORD PTR [ebp-0x74]
 806fd31:  lea eax, [ebx+ebx*4]
 806fd34:  lea edx, [edx+eax*2-0x30]
 806fd38:  mov DWORD PTR [ebp-0x74], edx
 806fd3b:  add DWORD PTR [ebp-0x88], 0x1
 806fd42:  mov edi, DWORD PTR [ebp-0x88]
 806fd48:  movzx esi, BYTE PTR [edi]
 806fd4b:  mov eax, esi
 806fd4d:  movsx edx, al
 806fd50:  lea eax, [edx-0x30]
 806fd53:  cmp eax, 0x9
 806fd56:  ja 806fc0d
 806fd5c:  cmp DWORD PTR [ebp-0x74], 0xccccccc
 806fd63:  jle 806fd28
 806fd65:  mov DWORD PTR [ebp-0x74], 0x7fffffff
 806fd6c:  jmp 806fd3b
 806fd6e:  xchg ax, ax
 806fd70:  mov ebx, esi
 806fd72:  cmp bl, 0x5e
 806fd75:  lea esi, [esi]
 806fd78:  je 806fd98
 806fd7a:  cmp bl, 0x5f
 806fd7d:  lea esi, [esi]
 806fd80:  jne 806fbee
 806fd86:  xchg ax, ax
 806fd88:  mov eax, esi
 806fd8a:  movsx esi, al
 806fd8d:  mov DWORD PTR [ebp-0x84], esi
 806fd93:  jmp 806fbb6
 806fd98:  mov DWORD PTR [ebp-0x70], 0x1
 806fd9f:  jmp 806fbb6
 806fda4:  lea esi, [esi]
 806fda8:  mov ecx, 0x1
 806fdad:  jmp 806fbb6
 806fdb2:  lea esi, [esi]
 806fdb8:  mov eax, esi
 806fdba:  cmp al, 0x37
 806fdbc:  lea esi, [esi]
 806fdc0:  jle 806fd2e
 806fdc6:  mov DWORD PTR [ebp-0x74], 0x7fffffff
 806fdcd:  lea esi, [esi]
 806fdd0:  jmp 806fd3b
 806fdd5:  lea esi, [esi]
 806fdd8:  movzx eax, dl
 806fddb:  nop
 806fddc:  lea esi, [esi]
 806fde0:  jmp DWORD PTR [eax*4+0x80b2ac4]
 806fde7:  nop
 806fde8:  add DWORD PTR [ebp-0x88], 0x1
 806fdef:  mov edi, edx
 806fdf1:  mov eax, DWORD PTR [ebp-0x88]
 806fdf7:  movzx esi, BYTE PTR [eax]
 806fdfa:  jmp 806fc23
 806fdff:  nop
 806fe00:  mov eax, DWORD PTR [ebp-0x88]
 806fe06:  mov DWORD PTR [esp+0x8], esi
 806fe0a:  add eax, ebx
 806fe0c:  mov DWORD PTR [esp+0x4], eax
 806fe10:  mov eax, DWORD PTR [ebp-0x58]
 806fe13:  mov DWORD PTR [esp], eax
 806fe16:  call 804efc0
 806fe1b:  mov edx, DWORD PTR [ebp-0x58]
 806fe1e:  lea ebx, [edx+esi]
 806fe21:  jmp 806fd12
 806fe26:  xchg ax, ax
 806fe28:  mov DWORD PTR [ebp-0x8c], 0x0
 806fe32:  mov eax, DWORD PTR [ebp-0x8c]
 806fe38:  add esp, 0xdc
 806fe3e:  pop ebx
 806fe3f:  pop esi
 806fe40:  pop edi
 806fe41:  pop ebp
 806fe42:  ret
 806fe43:  nop
 806fe44:  lea esi, [esi]
 806fe48:  mov esi, DWORD PTR [ebp-0x94]
 806fe4e:  test esi, esi
 806fe50:  jne 806fb28
 806fe56:  mov DWORD PTR [ebp-0x94], 0xc
 806fe60:  jmp 806fb28
 806fe65:  lea esi, [esi]
 806fe68:  mov edx, DWORD PTR [ebp-0x58]
 806fe6b:  test edx, edx
 806fe6d:  je 806fe32
 806fe6f:  mov eax, DWORD PTR [ebp-0xd0]
 806fe75:  test eax, eax
 806fe77:  je 806fe32
 806fe79:  mov esi, DWORD PTR [ebp-0x58]
 806fe7c:  mov BYTE PTR [esi], 0x0
 806fe7f:  jmp 806fe32
 806fe81:  lea esi, [esi]
 806fe88:  mov eax, DWORD PTR [ebp-0x58]
 806fe8b:  mov DWORD PTR [esp+0x8], edi
 806fe8f:  mov DWORD PTR [esp+0x4], 0x30
 806fe97:  mov DWORD PTR [esp], eax
 806fe9a:  call 804ef50
 806fe9f:  add DWORD PTR [ebp-0x58], edi
 806fea2:  jmp 806fcc8
 806fea7:  mov ebx, DWORD PTR [ebp-0x88]
 806fead:  mov esi, 0x1
 806feb2:  mov DWORD PTR [ebp-0x48], ebx
 806feb5:  xor ebx, ebx
 806feb7:  jmp 806fc68
 806febc:  mov DWORD PTR [ebp-0x78], 0x80b2a94
 806fec3:  nop
 806fec4:  lea esi, [esi]
 806fec8:  mov ecx, DWORD PTR [ebp+0x10]
 806fecb:  xor eax, eax
 806fecd:  mov edx, 0xffffffff
 806fed2:  mov esi, DWORD PTR [ebp+0x8]
 806fed5:  mov ebx, DWORD PTR [ebp+0xc]
 806fed8:  mov DWORD PTR [esp+0x8], ecx
 806fedc:  mov ecx, DWORD PTR [ebp-0x78]
 806fedf:  mov DWORD PTR [esp], esi
 806fee2:  mov DWORD PTR [esp+0x4], ebx
 806fee6:  call 806fae0
 806feeb:  mov esi, DWORD PTR [ebp-0x74]
 806feee:  sub esi, eax
 806fef0:  mov edi, eax
 806fef2:  mov eax, esi
 806fef4:  sar eax, 0x1f
 806fef7:  not eax
 806fef9:  and eax, esi
 806fefb:  add eax, edi
 806fefd:  mov DWORD PTR [ebp-0xbc], eax
 806ff03:  mov eax, DWORD PTR [ebp-0xd0]
 806ff09:  sub eax, DWORD PTR [ebp-0x8c]
 806ff0f:  cmp DWORD PTR [ebp-0xbc], eax
 806ff15:  mov DWORD PTR [ebp-0x54], eax
 806ff18:  jae 806fe28
 806ff1e:  mov ecx, DWORD PTR [ebp-0x58]
 806ff21:  xor ebx, ebx
 806ff23:  test ecx, ecx
 806ff25:  je 806ff7a
 806ff27:  test esi, esi
 806ff29:  mov ebx, DWORD PTR [ebp-0x58]
 806ff2c:  jle 806ff57
 806ff2e:  cmp DWORD PTR [ebp-0x84], 0x30
 806ff35:  je 807119d
 806ff3b:  mov ecx, DWORD PTR [ebp-0x58]
 806ff3e:  mov DWORD PTR [esp+0x8], esi
 806ff42:  mov DWORD PTR [esp+0x4], 0x20
 806ff4a:  mov DWORD PTR [esp], ecx
 806ff4d:  call 804ef50
 806ff52:  mov ebx, DWORD PTR [ebp-0x58]
 806ff55:  add ebx, esi
 806ff57:  mov edx, DWORD PTR [ebp+0x8]
 806ff5a:  mov eax, DWORD PTR [ebp+0xc]
 806ff5d:  mov esi, DWORD PTR [ebp+0x10]
 806ff60:  mov ecx, DWORD PTR [ebp-0x78]
 806ff63:  mov DWORD PTR [esp], edx
 806ff66:  mov edx, DWORD PTR [ebp-0x54]
 806ff69:  mov DWORD PTR [esp+0x4], eax
 806ff6d:  mov eax, ebx
 806ff6f:  add ebx, edi
 806ff71:  mov DWORD PTR [esp+0x8], esi
 806ff75:  call 806fae0
 806ff7a:  mov edx, DWORD PTR [ebp-0x70]
 806ff7d:  mov ecx, DWORD PTR [ebp-0xbc]
 806ff83:  add DWORD PTR [ebp-0x8c], ecx
 806ff89:  test edx, edx
 806ff8b:  je 806ffad
 806ff8d:  cmp ebx, DWORD PTR [ebp-0x58]
 806ff90:  jbe 806ffad
 806ff92:  mov ecx, DWORD PTR [ebp-0x58]
 806ff95:  lea esi, [esi]
 806ff98:  mov esi, DWORD PTR [ebp+0x10]
 806ff9b:  movzx eax, BYTE PTR [ecx]
 806ff9e:  mov edx, DWORD PTR [esi+0x3c]
 806ffa1:  mov eax, DWORD PTR [edx+eax*4]
 806ffa4:  mov BYTE PTR [ecx], al
 806ffa6:  add ecx, 0x1
 806ffa9:  cmp ebx, ecx
 806ffab:  ja 806ff98
 806ffad:  mov DWORD PTR [ebp-0x58], ebx
 806ffb0:  jmp 806fb86
 806ffb5:  mov esi, 0x1
 806ffba:  test ecx, ecx
 806ffbc:  je 806ffca
 806ffbe:  mov esi, 0x1
 806ffc3:  mov DWORD PTR [ebp-0x70], 0x0
 806ffca:  mov edx, DWORD PTR [ebp+0x8]
 806ffcd:  xor eax, eax
 806ffcf:  mov ecx, DWORD PTR [ebp-0x98]
 806ffd5:  cmp DWORD PTR [edx+0x8], 0xb
 806ffd9:  setg al
 806ffdc:  add eax, 0x2e
 806ffdf:  mov eax, DWORD PTR [ecx+eax*4+0x4]
 806ffe3:  mov DWORD PTR [esp], eax
 806ffe6:  call 804eea0
 806ffeb:  mov ebx, DWORD PTR [ebp-0x74]
 806ffee:  sub ebx, eax
 806fff0:  mov edi, eax
 806fff2:  mov eax, ebx
 806fff4:  sar eax, 0x1f
 806fff7:  not eax
 806fff9:  and eax, ebx
 806fffb:  add eax, edi
 806fffd:  mov DWORD PTR [ebp-0xac], eax
 8070003:  mov eax, DWORD PTR [ebp-0xd0]
 8070009:  sub eax, DWORD PTR [ebp-0x8c]
 807000f:  cmp DWORD PTR [ebp-0xac], eax
 8070015:  jae 806fe28
 807001b:  mov eax, DWORD PTR [ebp-0x58]
 807001e:  test eax, eax
 8070020:  je 80700ad
 8070026:  test ebx, ebx
 8070028:  jle 8070051
 807002a:  cmp DWORD PTR [ebp-0x84], 0x30
 8070031:  je 80712c8
 8070037:  mov edx, DWORD PTR [ebp-0x58]
 807003a:  mov DWORD PTR [esp+0x8], ebx
 807003e:  mov DWORD PTR [esp+0x4], 0x20
 8070046:  mov DWORD PTR [esp], edx
 8070049:  call 804ef50
 807004e:  add DWORD PTR [ebp-0x58], ebx
 8070051:  test esi, esi
 8070053:  je 80711be
 8070059:  mov ecx, DWORD PTR [ebp+0x8]
 807005c:  xor eax, eax
 807005e:  mov ebx, DWORD PTR [ebp-0x98]
 8070064:  mov esi, DWORD PTR [ebp-0x58]
 8070067:  cmp DWORD PTR [ecx+0x8], 0xb
 807006b:  setg al
 807006e:  add eax, 0x2e
 8070071:  test edi, edi
 8070073:  mov eax, DWORD PTR [ebx+eax*4+0x4]
 8070077:  lea ebx, [esi+edi]
 807007a:  je 80700aa
 807007c:  add eax, edi
 807007e:  xor ecx, ecx
 8070080:  mov DWORD PTR [ebp-0xd4], eax
 8070086:  xchg ax, ax
 8070088:  mov eax, DWORD PTR [ebp-0xd4]
 807008e:  mov esi, DWORD PTR [ebp+0x10]
 8070091:  movzx edx, BYTE PTR [eax+ecx-0x1]
 8070096:  mov eax, DWORD PTR [esi+0x38]
 8070099:  mov eax, DWORD PTR [eax+edx*4]
 807009c:  mov BYTE PTR [ebx+ecx-0x1], al
 80700a0:  sub ecx, 0x1
 80700a3:  lea eax, [ecx+edi]
 80700a6:  test eax, eax
 80700a8:  jne 8070088
 80700aa:  mov DWORD PTR [ebp-0x58], ebx
 80700ad:  mov edi, DWORD PTR [ebp-0xac]
 80700b3:  add DWORD PTR [ebp-0x8c], edi
 80700b9:  jmp 806fb86
 80700be:  mov DWORD PTR [ebp-0x78], 0x80b2a9d
 80700c5:  jmp 806fec8
 80700ca:  xor esi, esi
 80700cc:  jmp 806ffba
 80700d1:  test edi, edi
 80700d3:  nop
 80700d4:  lea esi, [esi]
 80700d8:  jne 806fc39
 80700de:  test ecx, ecx
 80700e0:  je 80700e9
 80700e2:  mov DWORD PTR [ebp-0x70], 0x1
 80700e9:  mov eax, DWORD PTR [ebp+0x8]
 80700ec:  mov edx, DWORD PTR [ebp-0x98]
 80700f2:  mov esi, DWORD PTR [eax+0x18]
 80700f5:  lea eax, [esi+0x20007]
 80700fb:  and eax, 0xffff
 8070100:  mov eax, DWORD PTR [edx+eax*4+0x24]
 8070104:  mov DWORD PTR [esp], eax
 8070107:  call 804eea0
 807010c:  mov ebx, DWORD PTR [ebp-0x74]
 807010f:  sub ebx, eax
 8070111:  mov edi, eax
 8070113:  mov eax, ebx
 8070115:  sar eax, 0x1f
 8070118:  not eax
 807011a:  and eax, ebx
 807011c:  add eax, edi
 807011e:  mov DWORD PTR [ebp-0xc8], eax
 8070124:  mov eax, DWORD PTR [ebp-0xd0]
 807012a:  sub eax, DWORD PTR [ebp-0x8c]
 8070130:  cmp DWORD PTR [ebp-0xc8], eax
 8070136:  jae 806fe28
 807013c:  mov eax, DWORD PTR [ebp-0x58]
 807013f:  test eax, eax
 8070141:  je 80701d5
 8070147:  test ebx, ebx
 8070149:  jle 807017a
 807014b:  cmp DWORD PTR [ebp-0x84], 0x30
 8070152:  je 8071393
 8070158:  mov esi, DWORD PTR [ebp-0x58]
 807015b:  mov DWORD PTR [esp+0x8], ebx
 807015f:  mov DWORD PTR [esp+0x4], 0x20
 8070167:  mov DWORD PTR [esp], esi
 807016a:  add esi, ebx
 807016c:  call 804ef50
 8070171:  mov eax, DWORD PTR [ebp+0x8]
 8070174:  mov DWORD PTR [ebp-0x58], esi
 8070177:  mov esi, DWORD PTR [eax+0x18]
 807017a:  mov eax, DWORD PTR [ebp-0x70]
 807017d:  test eax, eax
 807017f:  je 80717f4
 8070185:  mov edx, DWORD PTR [ebp-0x98]
 807018b:  lea eax, [esi+0x20007]
 8070191:  mov ecx, DWORD PTR [ebp-0x58]
 8070194:  and eax, 0xffff
 8070199:  test edi, edi
 807019b:  mov eax, DWORD PTR [edx+eax*4+0x24]
 807019f:  lea ebx, [ecx+edi]
 80701a2:  je 80701d2
 80701a4:  add eax, edi
 80701a6:  xor ecx, ecx
 80701a8:  mov DWORD PTR [ebp-0xd4], eax
 80701ae:  xchg ax, ax
 80701b0:  mov esi, DWORD PTR [ebp-0xd4]
 80701b6:  movzx edx, BYTE PTR [esi+ecx-0x1]
 80701bb:  mov esi, DWORD PTR [ebp+0x10]
 80701be:  mov eax, DWORD PTR [esi+0x3c]
 80701c1:  mov eax, DWORD PTR [eax+edx*4]
 80701c4:  mov BYTE PTR [ebx+ecx-0x1], al
 80701c8:  sub ecx, 0x1
 80701cb:  lea eax, [ecx+edi]
 80701ce:  test eax, eax
 80701d0:  jne 80701b0
 80701d2:  mov DWORD PTR [ebp-0x58], ebx
 80701d5:  mov edi, DWORD PTR [ebp-0xc8]
 80701db:  add DWORD PTR [ebp-0x8c], edi
 80701e1:  jmp 806fb86
 80701e6:  test edi, edi
 80701e8:  jne 806fc39
 80701ee:  test ecx, ecx
 80701f0:  je 80701f9
 80701f2:  mov DWORD PTR [ebp-0x70], 0x1
 80701f9:  mov eax, DWORD PTR [ebp+0x8]
 80701fc:  mov edx, DWORD PTR [ebp-0x98]
 8070202:  mov esi, DWORD PTR [eax+0x10]
 8070205:  lea eax, [esi+0x2001a]
 807020b:  and eax, 0xffff
 8070210:  mov eax, DWORD PTR [edx+eax*4+0x24]
 8070214:  mov DWORD PTR [esp], eax
 8070217:  call 804eea0
 807021c:  mov ebx, DWORD PTR [ebp-0x74]
 807021f:  sub ebx, eax
 8070221:  mov edi, eax
 8070223:  mov eax, ebx
 8070225:  sar eax, 0x1f
 8070228:  not eax
 807022a:  and eax, ebx
 807022c:  add eax, edi
 807022e:  mov DWORD PTR [ebp-0xc0], eax
 8070234:  mov eax, DWORD PTR [ebp-0xd0]
 807023a:  sub eax, DWORD PTR [ebp-0x8c]
 8070240:  cmp DWORD PTR [ebp-0xc0], eax
 8070246:  jae 806fe28
 807024c:  mov eax, DWORD PTR [ebp-0x58]
 807024f:  test eax, eax
 8070251:  je 80702e5
 8070257:  test ebx, ebx
 8070259:  jle 807028a
 807025b:  cmp DWORD PTR [ebp-0x84], 0x30
 8070262:  je 8071346
 8070268:  mov esi, DWORD PTR [ebp-0x58]
 807026b:  mov DWORD PTR [esp+0x8], ebx
 807026f:  mov DWORD PTR [esp+0x4], 0x20
 8070277:  mov DWORD PTR [esp], esi
 807027a:  add esi, ebx
 807027c:  call 804ef50
 8070281:  mov eax, DWORD PTR [ebp+0x8]
 8070284:  mov DWORD PTR [ebp-0x58], esi
 8070287:  mov esi, DWORD PTR [eax+0x10]
 807028a:  mov ebx, DWORD PTR [ebp-0x70]
 807028d:  test ebx, ebx
 807028f:  je 8071833
 8070295:  mov edx, DWORD PTR [ebp-0x98]
 807029b:  lea eax, [esi+0x2001a]
 80702a1:  mov ecx, DWORD PTR [ebp-0x58]
 80702a4:  and eax, 0xffff
 80702a9:  test edi, edi
 80702ab:  mov eax, DWORD PTR [edx+eax*4+0x24]
 80702af:  lea ebx, [ecx+edi]
 80702b2:  je 80702e2
 80702b4:  add eax, edi
 80702b6:  xor ecx, ecx
 80702b8:  mov DWORD PTR [ebp-0xd4], eax
 80702be:  xchg ax, ax
 80702c0:  mov esi, DWORD PTR [ebp-0xd4]
 80702c6:  movzx edx, BYTE PTR [esi+ecx-0x1]
 80702cb:  mov esi, DWORD PTR [ebp+0x10]
 80702ce:  mov eax, DWORD PTR [esi+0x3c]
 80702d1:  mov eax, DWORD PTR [eax+edx*4]
 80702d4:  mov BYTE PTR [ebx+ecx-0x1], al
 80702d8:  sub ecx, 0x1
 80702db:  lea eax, [ecx+edi]
 80702de:  test eax, eax
 80702e0:  jne 80702c0
 80702e2:  mov DWORD PTR [ebp-0x58], ebx
 80702e5:  mov edi, DWORD PTR [ebp-0xc0]
 80702eb:  add DWORD PTR [ebp-0x8c], edi
 80702f1:  jmp 806fb86
 80702f6:  cmp edi, 0x4f
 80702f9:  je 806fc39
 80702ff:  cmp edi, 0x45
 8070302:  je 8071866
 8070308:  mov ebx, DWORD PTR [ebp+0x8]
 807030b:  mov esi, DWORD PTR [ebp-0x74]
 807030e:  mov eax, DWORD PTR [ebx+0x14]
 8070311:  test esi, esi
 8070313:  mov DWORD PTR [ebp-0x80], esi
 8070316:  lea ebx, [eax+0x76c]
 807031c:  jle 8071827
 8070322:  mov eax, ebx
 8070324:  mov edx, 0x51eb851f
 8070329:  imul edx
 807032b:  mov eax, ebx
 807032d:  sar eax, 0x1f
 8070330:  sar edx, 0x5
 8070333:  sub edx, eax
 8070335:  mov eax, ebx
 8070337:  imul ecx, edx, 0x64
 807033a:  mov esi, edx
 807033c:  sub eax, ecx
 807033e:  shr eax, 0x1f
 8070341:  sub esi, eax
 8070343:  nop
 8070344:  lea esi, [esi]
 8070348:  mov ebx, esi
 807034a:  mov eax, esi
 807034c:  shr eax, 0x1f
 807034f:  lea edi, [ebp-0xc]
 8070352:  test eax, eax
 8070354:  mov DWORD PTR [ebp-0x50], edi
 8070357:  mov DWORD PTR [ebp-0x7c], eax
 807035a:  je 8070360
 807035c:  mov ebx, esi
 807035e:  neg ebx
 8070360:  mov esi, DWORD PTR [ebp-0x50]
 8070363:  mov ecx, 0xcccccccd
 8070368:  mov eax, ebx
 807036a:  sub esi, 0x1
 807036d:  mul ecx
 807036f:  shr edx, 0x3
 8070372:  lea eax, [edx+edx*4]
 8070375:  add eax, eax
 8070377:  sub ebx, eax
 8070379:  test edx, edx
 807037b:  lea eax, [ebx+0x30]
 807037e:  mov ebx, edx
 8070380:  mov BYTE PTR [esi], al
 8070382:  jne 8070368
 8070384:  mov eax, DWORD PTR [ebp-0x7c]
 8070387:  test eax, eax
 8070389:  je 8070391
 807038b:  sub esi, 0x1
 807038e:  mov BYTE PTR [esi], 0x2d
 8070391:  cmp DWORD PTR [ebp-0x84], 0x2d
 8070398:  lea edi, [ebp-0xc]
 807039b:  je 8070424
 80703a1:  mov edi, DWORD PTR [ebp-0x50]
 80703a4:  mov eax, DWORD PTR [ebp-0x80]
 80703a7:  sub eax, edi
 80703a9:  lea ebx, [eax+esi]
 80703ac:  test ebx, ebx
 80703ae:  jle 8070424
 80703b0:  cmp DWORD PTR [ebp-0x84], 0x5f
 80703b7:  je 8071148
 80703bd:  mov eax, DWORD PTR [ebp-0xd0]
 80703c3:  sub eax, DWORD PTR [ebp-0x8c]
 80703c9:  cmp DWORD PTR [ebp-0x80], eax
 80703cc:  jae 806fe28
 80703d2:  mov ecx, DWORD PTR [ebp-0x7c]
 80703d5:  test ecx, ecx
 80703d7:  je 80703f6
 80703d9:  mov edx, DWORD PTR [ebp-0x58]
 80703dc:  test edx, edx
 80703de:  je 80703ec
 80703e0:  mov ecx, DWORD PTR [ebp-0x58]
 80703e3:  mov BYTE PTR [ecx], 0x2d
 80703e6:  add ecx, 0x1
 80703e9:  mov DWORD PTR [ebp-0x58], ecx
 80703ec:  add DWORD PTR [ebp-0x8c], 0x1
 80703f3:  add esi, 0x1
 80703f6:  mov eax, DWORD PTR [ebp-0x58]
 80703f9:  test eax, eax
 80703fb:  je 8070417
 80703fd:  mov eax, DWORD PTR [ebp-0x58]
 8070400:  mov DWORD PTR [esp+0x8], ebx
 8070404:  mov DWORD PTR [esp+0x4], 0x30
 807040c:  mov DWORD PTR [esp], eax
 807040f:  call 804ef50
 8070414:  add DWORD PTR [ebp-0x58], ebx
 8070417:  add DWORD PTR [ebp-0x8c], ebx
 807041d:  mov DWORD PTR [ebp-0x74], 0x0
 8070424:  mov ebx, DWORD PTR [ebp-0x74]
 8070427:  sub edi, esi
 8070429:  sub ebx, edi
 807042b:  mov eax, ebx
 807042d:  sar eax, 0x1f
 8070430:  not eax
 8070432:  and eax, ebx
 8070434:  add eax, edi
 8070436:  mov DWORD PTR [ebp-0xb0], eax
 807043c:  mov eax, DWORD PTR [ebp-0xd0]
 8070442:  sub eax, DWORD PTR [ebp-0x8c]
 8070448:  cmp DWORD PTR [ebp-0xb0], eax
 807044e:  jae 806fe28
 8070454:  mov eax, DWORD PTR [ebp-0x58]
 8070457:  test eax, eax
 8070459:  je 80704cd
 807045b:  test ebx, ebx
 807045d:  jle 8070486
 807045f:  cmp DWORD PTR [ebp-0x84], 0x30
 8070466:  je 8071128
 807046c:  mov ecx, DWORD PTR [ebp-0x58]
 807046f:  mov DWORD PTR [esp+0x8], ebx
 8070473:  mov DWORD PTR [esp+0x4], 0x20
 807047b:  mov DWORD PTR [esp], ecx
 807047e:  call 804ef50
 8070483:  add DWORD PTR [ebp-0x58], ebx
 8070486:  mov eax, DWORD PTR [ebp-0x70]
 8070489:  test eax, eax
 807048b:  je 8071108
 8070491:  mov eax, DWORD PTR [ebp-0x58]
 8070494:  test edi, edi
 8070496:  lea ebx, [eax+edi]
 8070499:  je 80704ca
 807049b:  add esi, edi
 807049d:  xor ecx, ecx
 807049f:  mov DWORD PTR [ebp-0xd4], esi
 80704a5:  lea esi, [esi]
 80704a8:  mov esi, DWORD PTR [ebp-0xd4]
 80704ae:  movzx edx, BYTE PTR [esi+ecx-0x1]
 80704b3:  mov esi, DWORD PTR [ebp+0x10]
 80704b6:  mov eax, DWORD PTR [esi+0x3c]
 80704b9:  mov eax, DWORD PTR [eax+edx*4]
 80704bc:  mov BYTE PTR [ebx+ecx-0x1], al
 80704c0:  sub ecx, 0x1
 80704c3:  lea eax, [edi+ecx]
 80704c6:  test eax, eax
 80704c8:  jne 80704a8
 80704ca:  mov DWORD PTR [ebp-0x58], ebx
 80704cd:  mov ecx, DWORD PTR [ebp-0xb0]
 80704d3:  add DWORD PTR [ebp-0x8c], ecx
 80704d9:  jmp 806fb86
 80704de:  sub DWORD PTR [ebp-0x88], 0x1
 80704e5:  mov edx, DWORD PTR [ebp-0x88]
 80704eb:  movzx esi, BYTE PTR [edx]
 80704ee:  jmp 806fc2e
 80704f3:  cmp edi, 0x45
 80704f6:  je 8071690
 80704fc:  mov ecx, DWORD PTR [ebp-0x74]
 80704ff:  cmp ecx, 0x2
 8070502:  mov DWORD PTR [ebp-0x80], ecx
 8070505:  jl 8071642
 807050b:  mov ebx, DWORD PTR [ebp+0x8]
 807050e:  mov esi, DWORD PTR [ebx+0x14]
 8070511:  mov ebx, 0x51eb851f
 8070516:  mov eax, esi
 8070518:  mov ecx, esi
 807051a:  imul ebx
 807051c:  sar ecx, 0x1f
 807051f:  sar edx, 0x5
 8070522:  sub edx, ecx
 8070524:  imul edx, edx, 0x64
 8070527:  sub esi, edx
 8070529:  lea ecx, [esi+0x64]
 807052c:  mov eax, ecx
 807052e:  mov esi, ecx
 8070530:  imul ebx
 8070532:  mov ebx, edx
 8070534:  mov edx, ecx
 8070536:  sar edx, 0x1f
 8070539:  sar ebx, 0x5
 807053c:  sub ebx, edx
 807053e:  imul edx, ebx, 0x64
 8070541:  sub esi, edx
 8070543:  nop
 8070544:  lea esi, [esi]
 8070548:  cmp edi, 0x4f
 807054b:  jne 8070348
 8070551:  test esi, esi
 8070553:  js 8070348
 8070559:  mov edx, DWORD PTR [ebp-0x98]
 807055f:  mov eax, esi
 8070561:  mov ebx, esi
 8070563:  call 8071e90
 8070568:  test eax, eax
 807056a:  mov DWORD PTR [ebp-0x68], eax
 807056d:  je 807034a
 8070573:  mov DWORD PTR [esp], eax
 8070576:  call 804eea0
 807057b:  test eax, eax
 807057d:  mov edi, eax
 807057f:  je 807034a
 8070585:  mov ebx, DWORD PTR [ebp-0x74]
 8070588:  sub ebx, eax
 807058a:  mov eax, ebx
 807058c:  sar eax, 0x1f
 807058f:  not eax
 8070591:  and eax, ebx
 8070593:  add eax, edi
 8070595:  mov DWORD PTR [ebp-0xb4], eax
 807059b:  mov eax, DWORD PTR [ebp-0xd0]
 80705a1:  sub eax, DWORD PTR [ebp-0x8c]
 80705a7:  cmp DWORD PTR [ebp-0xb4], eax
 80705ad:  jae 806fe28
 80705b3:  mov eax, DWORD PTR [ebp-0x58]
 80705b6:  test eax, eax
 80705b8:  je 807062d
 80705ba:  test ebx, ebx
 80705bc:  jle 80705e5
 80705be:  cmp DWORD PTR [ebp-0x84], 0x30
 80705c5:  je 80712e7
 80705cb:  mov eax, DWORD PTR [ebp-0x58]
 80705ce:  mov DWORD PTR [esp+0x8], ebx
 80705d2:  mov DWORD PTR [esp+0x4], 0x20
 80705da:  mov DWORD PTR [esp], eax
 80705dd:  call 804ef50
 80705e2:  add DWORD PTR [ebp-0x58], ebx
 80705e5:  mov eax, DWORD PTR [ebp-0x70]
 80705e8:  test eax, eax
 80705ea:  je 80712a7
 80705f0:  mov esi, DWORD PTR [ebp-0x68]
 80705f3:  xor ecx, ecx
 80705f5:  mov edx, DWORD PTR [ebp-0x58]
 80705f8:  add esi, edi
 80705fa:  lea ebx, [edx+edi]
 80705fd:  mov DWORD PTR [ebp-0xd4], esi
 8070603:  nop
 8070604:  lea esi, [esi]
 8070608:  mov eax, DWORD PTR [ebp-0xd4]
 807060e:  mov esi, DWORD PTR [ebp+0x10]
 8070611:  movzx edx, BYTE PTR [eax+ecx-0x1]
 8070616:  mov eax, DWORD PTR [esi+0x3c]
 8070619:  mov eax, DWORD PTR [eax+edx*4]
 807061c:  mov BYTE PTR [ebx+ecx-0x1], al
 8070620:  sub ecx, 0x1
 8070623:  lea eax, [ecx+edi]
 8070626:  test eax, eax
 8070628:  jne 8070608
 807062a:  mov DWORD PTR [ebp-0x58], ebx
 807062d:  mov ebx, DWORD PTR [ebp-0xb4]
 8070633:  add DWORD PTR [ebp-0x8c], ebx
 8070639:  jmp 806fb86
 807063e:  mov ebx, DWORD PTR [ebp+0x8]
 8070641:  mov eax, DWORD PTR [ebx+0x20]
 8070644:  test eax, eax
 8070646:  js 806fb86
 807064c:  mov esi, DWORD PTR [ebx+0x24]
 807064f:  test esi, esi
 8070651:  js 8071583
 8070657:  mov ebx, DWORD PTR [ebp-0x74]
 807065a:  sub ebx, 0x1
 807065d:  mov eax, ebx
 807065f:  sar eax, 0x1f
 8070662:  not eax
 8070664:  and eax, ebx
 8070666:  add eax, 0x1
 8070669:  mov DWORD PTR [ebp-0xa0], eax
 807066f:  mov eax, DWORD PTR [ebp-0xd0]
 8070675:  sub eax, DWORD PTR [ebp-0x8c]
 807067b:  cmp DWORD PTR [ebp-0xa0], eax
 8070681:  jae 806fe28
 8070687:  mov eax, DWORD PTR [ebp-0x58]
 807068a:  test eax, eax
 807068c:  je 80706c5
 807068e:  test ebx, ebx
 8070690:  jle 80706b9
 8070692:  cmp DWORD PTR [ebp-0x84], 0x30
 8070699:  je 80713b8
 807069f:  mov edx, DWORD PTR [ebp-0x58]
 80706a2:  mov DWORD PTR [esp+0x8], ebx
 80706a6:  mov DWORD PTR [esp+0x4], 0x20
 80706ae:  mov DWORD PTR [esp], edx
 80706b1:  call 804ef50
 80706b6:  add DWORD PTR [ebp-0x58], ebx
 80706b9:  mov ecx, DWORD PTR [ebp-0x58]
 80706bc:  mov BYTE PTR [ecx], 0x2b
 80706bf:  add ecx, 0x1
 80706c2:  mov DWORD PTR [ebp-0x58], ecx
 80706c5:  mov ebx, DWORD PTR [ebp-0xa0]
 80706cb:  add DWORD PTR [ebp-0x8c], ebx
 80706d1:  mov eax, esi
 80706d3:  mov edx, 0x88888889
 80706d8:  imul edx
 80706da:  lea ebx, [edx+esi]
 80706dd:  mov edx, DWORD PTR [ebp-0x74]
 80706e0:  sar ebx, 0x5
 80706e3:  sar esi, 0x1f
 80706e6:  sub ebx, esi
 80706e8:  cmp edx, 0x4
 80706eb:  mov DWORD PTR [ebp-0x80], edx
 80706ee:  jge 80706f7
 80706f0:  mov DWORD PTR [ebp-0x80], 0x4
 80706f7:  mov eax, ebx
 80706f9:  mov edx, 0x88888889
 80706fe:  imul edx
 8070700:  mov eax, ebx
 8070702:  sar eax, 0x1f
 8070705:  add edx, ebx
 8070707:  sar edx, 0x5
 807070a:  sub edx, eax
 807070c:  mov eax, ebx
 807070e:  imul ecx, edx, 0x64
 8070711:  imul edx, edx, 0x3c
 8070714:  sub eax, edx
 8070716:  lea esi, [ecx+eax]
 8070719:  jmp 8070548
 807071e:  test edi, edi
 8070720:  jne 806fea7
 8070726:  mov ebx, DWORD PTR [ebp-0x74]
 8070729:  sub ebx, 0x1
 807072c:  mov eax, ebx
 807072e:  sar eax, 0x1f
 8070731:  not eax
 8070733:  and eax, ebx
 8070735:  lea esi, [eax+0x1]
 8070738:  mov eax, DWORD PTR [ebp-0xd0]
 807073e:  sub eax, DWORD PTR [ebp-0x8c]
 8070744:  cmp esi, eax
 8070746:  jae 806fe28
 807074c:  mov ecx, DWORD PTR [ebp-0x58]
 807074f:  test ecx, ecx
 8070751:  je 8070803
 8070757:  test ebx, ebx
 8070759:  mov eax, 0x25
 807075e:  jle 8070792
 8070760:  cmp DWORD PTR [ebp-0x84], 0x30
 8070767:  je 807136b
 807076d:  mov edi, DWORD PTR [ebp-0x58]
 8070770:  mov DWORD PTR [esp+0x8], ebx
 8070774:  mov DWORD PTR [esp+0x4], 0x20
 807077c:  mov DWORD PTR [esp], edi
 807077f:  add edi, ebx
 8070781:  call 804ef50
 8070786:  mov edx, DWORD PTR [ebp-0x88]
 807078c:  mov DWORD PTR [ebp-0x58], edi
 807078f:  movzx eax, BYTE PTR [edx]
 8070792:  mov ecx, DWORD PTR [ebp-0x58]
 8070795:  mov BYTE PTR [ecx], al
 8070797:  add ecx, 0x1
 807079a:  mov DWORD PTR [ebp-0x58], ecx
 807079d:  jmp 8070803
 807079f:  mov ebx, DWORD PTR [ebp-0x74]
 80707a2:  sub ebx, 0x1
 80707a5:  mov eax, ebx
 80707a7:  sar eax, 0x1f
 80707aa:  not eax
 80707ac:  and eax, ebx
 80707ae:  lea esi, [eax+0x1]
 80707b1:  mov eax, DWORD PTR [ebp-0xd0]
 80707b7:  sub eax, DWORD PTR [ebp-0x8c]
 80707bd:  cmp esi, eax
 80707bf:  jae 806fe28
 80707c5:  mov edi, DWORD PTR [ebp-0x58]
 80707c8:  test edi, edi
 80707ca:  je 8070803
 80707cc:  test ebx, ebx
 80707ce:  jle 80707f7
 80707d0:  cmp DWORD PTR [ebp-0x84], 0x30
 80707d7:  je 807164e
 80707dd:  mov eax, DWORD PTR [ebp-0x58]
 80707e0:  mov DWORD PTR [esp+0x8], ebx
 80707e4:  mov DWORD PTR [esp+0x4], 0x20
 80707ec:  mov DWORD PTR [esp], eax
 80707ef:  call 804ef50
 80707f4:  add DWORD PTR [ebp-0x58], ebx
 80707f7:  mov edx, DWORD PTR [ebp-0x58]
 80707fa:  mov BYTE PTR [edx], 0x9
 80707fd:  add edx, 0x1
 8070800:  mov DWORD PTR [ebp-0x58], edx
 8070803:  add DWORD PTR [ebp-0x8c], esi
 8070809:  jmp 806fb86
 807080e:  mov ecx, DWORD PTR [ebp-0x74]
 8070811:  test ecx, ecx
 8070813:  mov DWORD PTR [ebp-0x80], ecx
 8070816:  jle 807149b
 807081c:  mov ebx, DWORD PTR [ebp+0x8]
 807081f:  mov edx, 0x92492493
 8070824:  mov ecx, DWORD PTR [ebx+0x18]
 8070827:  add ecx, 0x6
 807082a:  mov eax, ecx
 807082c:  imul edx
 807082e:  mov eax, ecx
 8070830:  sar eax, 0x1f
 8070833:  add edx, ecx
 8070835:  sar edx, 0x2
 8070838:  sub edx, eax
 807083a:  lea eax, [edx*8]
 8070841:  sub eax, edx
 8070843:  sub ecx, eax
 8070845:  lea esi, [ecx+0x1]
 8070848:  jmp 8070548
 807084d:  cmp edi, 0x45
 8070850:  je 807166f
 8070856:  cmp edi, 0x4f
 8070859:  je 806fc2e
 807085f:  mov ebx, DWORD PTR [ebp-0x74]
 8070862:  test ebx, ebx
 8070864:  mov DWORD PTR [ebp-0x80], ebx
 8070867:  jle 8071795
 807086d:  mov esi, DWORD PTR [ebp+0x8]
 8070870:  mov eax, DWORD PTR [esi+0x14]
 8070873:  lea esi, [eax+0x76c]
 8070879:  jmp 8070548
 807087e:  mov ebx, DWORD PTR [ebp-0x90]
 8070884:  cmp ecx, 0x1
 8070887:  sbb esi, esi
 8070889:  add esi, 0x1
 807088c:  cmp ecx, 0x1
 807088f:  sbb eax, eax
 8070891:  and DWORD PTR [ebp-0x70], eax
 8070894:  test ebx, ebx
 8070896:  je 80708a3
 8070898:  mov ecx, DWORD PTR [ebp-0x90]
 807089e:  cmp BYTE PTR [ecx], 0x0
 80708a1:  jne 80708da
 80708a3:  mov ebx, DWORD PTR [ebp+0x8]
 80708a6:  mov ecx, DWORD PTR [ebx+0x20]
 80708a9:  test ecx, ecx
 80708ab:  js 80708cc
 80708ad:  mov edi, DWORD PTR [ebp+0xc]
 80708b0:  cmp BYTE PTR [edi], 0x0
 80708b3:  je 8071785
 80708b9:  mov edx, DWORD PTR [ebp+0x8]
 80708bc:  mov eax, DWORD PTR [edx+0x20]
 80708bf:  mov eax, DWORD PTR [eax*4+0x80d11e8]
 80708c6:  mov DWORD PTR [ebp-0x90], eax
 80708cc:  mov edx, DWORD PTR [ebp-0x90]
 80708d2:  test edx, edx
 80708d4:  je 807173d
 80708da:  mov ecx, DWORD PTR [ebp-0x90]
 80708e0:  mov DWORD PTR [esp], ecx
 80708e3:  call 804eea0
 80708e8:  mov edi, eax
 80708ea:  mov edx, eax
 80708ec:  mov ebx, DWORD PTR [ebp-0x74]
 80708ef:  sub ebx, edx
 80708f1:  mov eax, ebx
 80708f3:  sar eax, 0x1f
 80708f6:  not eax
 80708f8:  and eax, ebx
 80708fa:  add eax, edx
 80708fc:  mov DWORD PTR [ebp-0xa8], eax
 8070902:  mov eax, DWORD PTR [ebp-0xd0]
 8070908:  sub eax, DWORD PTR [ebp-0x8c]
 807090e:  cmp DWORD PTR [ebp-0xa8], eax
 8070914:  jae 806fe28
 807091a:  mov eax, DWORD PTR [ebp-0x58]
 807091d:  test eax, eax
 807091f:  je 8070995
 8070921:  test ebx, ebx
 8070923:  jle 807094c
 8070925:  cmp DWORD PTR [ebp-0x84], 0x30
 807092c:  je 8071604
 8070932:  mov edx, DWORD PTR [ebp-0x58]
 8070935:  mov DWORD PTR [esp+0x8], ebx
 8070939:  mov DWORD PTR [esp+0x4], 0x20
 8070941:  mov DWORD PTR [esp], edx
 8070944:  call 804ef50
 8070949:  add DWORD PTR [ebp-0x58], ebx
 807094c:  test esi, esi
 807094e:  je 8071257
 8070954:  mov ecx, DWORD PTR [ebp-0x58]
 8070957:  test edi, edi
 8070959:  lea esi, [ecx+edi]
 807095c:  je 8070992
 807095e:  mov ebx, DWORD PTR [ebp-0x90]
 8070964:  xor ecx, ecx
 8070966:  add ebx, edi
 8070968:  mov DWORD PTR [ebp-0xd8], ebx
 807096e:  xchg ax, ax
 8070970:  mov eax, DWORD PTR [ebp-0xd8]
 8070976:  mov ebx, DWORD PTR [ebp+0x10]
 8070979:  movzx edx, BYTE PTR [eax+ecx-0x1]
 807097e:  mov eax, DWORD PTR [ebx+0x38]
 8070981:  mov eax, DWORD PTR [eax+edx*4]
 8070984:  mov BYTE PTR [esi+ecx-0x1], al
 8070988:  sub ecx, 0x1
 807098b:  lea eax, [ecx+edi]
 807098e:  test eax, eax
 8070990:  jne 8070970
 8070992:  mov DWORD PTR [ebp-0x58], esi
 8070995:  mov ecx, DWORD PTR [ebp-0xa8]
 807099b:  add DWORD PTR [ebp-0x8c], ecx
 80709a1:  jmp 806fb86
 80709a6:  test edi, edi
 80709a8:  jne 806fc39
 80709ae:  test ecx, ecx
 80709b0:  je 80709b9
 80709b2:  mov DWORD PTR [ebp-0x70], 0x1
 80709b9:  mov ebx, DWORD PTR [ebp+0x8]
 80709bc:  mov edi, DWORD PTR [ebp-0x98]
 80709c2:  mov esi, DWORD PTR [ebx+0x18]
 80709c5:  movzx eax, si
 80709c8:  mov eax, DWORD PTR [edi+eax*4+0x24]
 80709cc:  mov DWORD PTR [esp], eax
 80709cf:  call 804eea0
 80709d4:  mov ebx, DWORD PTR [ebp-0x74]
 80709d7:  sub ebx, eax
 80709d9:  mov edi, eax
 80709db:  mov eax, ebx
 80709dd:  sar eax, 0x1f
 80709e0:  not eax
 80709e2:  and eax, ebx
 80709e4:  add eax, edi
 80709e6:  mov DWORD PTR [ebp-0xcc], eax
 80709ec:  mov eax, DWORD PTR [ebp-0xd0]
 80709f2:  sub eax, DWORD PTR [ebp-0x8c]
 80709f8:  cmp DWORD PTR [ebp-0xcc], eax
 80709fe:  jae 806fe28
 8070a04:  mov edx, DWORD PTR [ebp-0x58]
 8070a07:  test edx, edx
 8070a09:  je 8070a95
 8070a0f:  test ebx, ebx
 8070a11:  jle 8070a40
 8070a13:  cmp DWORD PTR [ebp-0x84], 0x30
 8070a1a:  je 80713d7
 8070a20:  mov ecx, DWORD PTR [ebp-0x58]
 8070a23:  mov DWORD PTR [esp+0x8], ebx
 8070a27:  mov DWORD PTR [esp+0x4], 0x20
 8070a2f:  mov DWORD PTR [esp], ecx
 8070a32:  call 804ef50
 8070a37:  add DWORD PTR [ebp-0x58], ebx
 8070a3a:  mov ebx, DWORD PTR [ebp+0x8]
 8070a3d:  mov esi, DWORD PTR [ebx+0x18]
 8070a40:  mov eax, DWORD PTR [ebp-0x70]
 8070a43:  test eax, eax
 8070a45:  je 80717c9
 8070a4b:  movzx eax, si
 8070a4e:  mov edx, DWORD PTR [ebp-0x58]
 8070a51:  test edi, edi
 8070a53:  mov esi, DWORD PTR [ebp-0x98]
 8070a59:  lea ebx, [edx+edi]
 8070a5c:  mov eax, DWORD PTR [esi+eax*4+0x24]
 8070a60:  je 8070a92
 8070a62:  add eax, edi
 8070a64:  xor ecx, ecx
 8070a66:  mov DWORD PTR [ebp-0xd4], eax
 8070a6c:  lea esi, [esi]
 8070a70:  mov esi, DWORD PTR [ebp-0xd4]
 8070a76:  movzx edx, BYTE PTR [esi+ecx-0x1]
 8070a7b:  mov esi, DWORD PTR [ebp+0x10]
 8070a7e:  mov eax, DWORD PTR [esi+0x3c]
 8070a81:  mov eax, DWORD PTR [eax+edx*4]
 8070a84:  mov BYTE PTR [ebx+ecx-0x1], al
 8070a88:  sub ecx, 0x1
 8070a8b:  lea eax, [ecx+edi]
 8070a8e:  test eax, eax
 8070a90:  jne 8070a70
 8070a92:  mov DWORD PTR [ebp-0x58], ebx
 8070a95:  mov edi, DWORD PTR [ebp-0xcc]
 8070a9b:  add DWORD PTR [ebp-0x8c], edi
 8070aa1:  jmp 806fb86
 8070aa6:  cmp edi, 0x45
 8070aa9:  je 806fc39
 8070aaf:  mov edx, DWORD PTR [ebp-0x74]
 8070ab2:  cmp edx, 0x2
 8070ab5:  mov DWORD PTR [ebp-0x80], edx
 8070ab8:  jl 807172d
 8070abe:  mov ecx, DWORD PTR [ebp+0x8]
 8070ac1:  mov edx, 0x92492493
 8070ac6:  mov ebx, DWORD PTR [ebp+0x8]
 8070ac9:  mov eax, DWORD PTR [ecx+0x1c]
 8070acc:  lea ecx, [eax+0x7]
 8070acf:  sub ecx, DWORD PTR [ebx+0x18]
 8070ad2:  mov eax, ecx
 8070ad4:  imul edx
 8070ad6:  lea esi, [edx+ecx]
 8070ad9:  sar esi, 0x2
 8070adc:  sar ecx, 0x1f
 8070adf:  sub esi, ecx
 8070ae1:  jmp 8070548
 8070ae6:  cmp edi, 0x4f
 8070ae9:  je 806fc39
 8070aef:  cmp edi, 0x45
 8070af2:  je 80714e1
 8070af8:  mov edx, DWORD PTR [ebp-0x98]
 8070afe:  mov edx, DWORD PTR [edx+0xc4]
 8070b04:  mov DWORD PTR [ebp-0x78], edx
 8070b07:  jmp 806fec8
 8070b0c:  cmp edi, 0x45
 8070b0f:  je 806fc39
 8070b15:  mov ebx, DWORD PTR [ebp-0x74]
 8070b18:  cmp ebx, 0x2
 8070b1b:  mov DWORD PTR [ebp-0x80], ebx
 8070b1e:  jl 807170d
 8070b24:  mov eax, DWORD PTR [ebp+0x8]
 8070b27:  mov esi, DWORD PTR [eax+0xc]
 8070b2a:  jmp 8070548
 8070b2f:  cmp edi, 0x45
 8070b32:  je 806fc39
 8070b38:  mov edx, DWORD PTR [ebp-0x74]
 8070b3b:  cmp edx, 0x2
 8070b3e:  mov DWORD PTR [ebp-0x80], edx
 8070b41:  jl 80716fd
 8070b47:  mov ecx, DWORD PTR [ebp+0x8]
 8070b4a:  mov esi, DWORD PTR [ecx+0xc]
 8070b4d:  cmp DWORD PTR [ebp-0x84], 0x30
 8070b54:  je 8070548
 8070b5a:  cmp DWORD PTR [ebp-0x84], 0x2d
 8070b61:  je 8070548
 8070b67:  mov DWORD PTR [ebp-0x84], 0x5f
 8070b71:  jmp 8070548
 8070b76:  cmp edi, 0x45
 8070b79:  je 806fc39
 8070b7f:  mov eax, DWORD PTR [ebp-0x74]
 8070b82:  cmp eax, 0x3
 8070b85:  mov DWORD PTR [ebp-0x80], eax
 8070b88:  jge 8070b91
 8070b8a:  mov DWORD PTR [ebp-0x80], 0x3
 8070b91:  mov edx, DWORD PTR [ebp+0x8]
 8070b94:  mov eax, DWORD PTR [edx+0x1c]
 8070b97:  lea esi, [eax+0x1]
 8070b9a:  jmp 8070548
 8070b9f:  cmp edi, 0x45
 8070ba2:  je 806fc39
 8070ba8:  mov ecx, DWORD PTR [ebp-0x74]
 8070bab:  cmp ecx, 0x2
 8070bae:  mov DWORD PTR [ebp-0x80], ecx
 8070bb1:  jl 80716ed
 8070bb7:  mov ebx, DWORD PTR [ebp+0x8]
 8070bba:  mov esi, DWORD PTR [ebx+0x8]
 8070bbd:  jmp 8070b4d
 8070bbf:  cmp edi, 0x45
 8070bc2:  je 806fc39
 8070bc8:  mov esi, DWORD PTR [ebp-0x74]
 8070bcb:  cmp esi, 0x2
 8070bce:  mov DWORD PTR [ebp-0x80], esi
 8070bd1:  jl 80716e1
 8070bd7:  mov esi, DWORD PTR [ebp-0x94]
 8070bdd:  jmp 8070b4d
 8070be2:  cmp edi, 0x45
 8070be5:  je 806fc39
 8070beb:  mov esi, DWORD PTR [ebp-0x74]
 8070bee:  cmp esi, 0x2
 8070bf1:  mov DWORD PTR [ebp-0x80], esi
 8070bf4:  jl 80716d5
 8070bfa:  mov edx, DWORD PTR [ebp+0x8]
 8070bfd:  mov eax, DWORD PTR [edx+0x10]
 8070c00:  lea esi, [eax+0x1]
 8070c03:  jmp 8070548
 8070c08:  cmp edi, 0x4f
 8070c0b:  je 806fc39
 8070c11:  cmp edi, 0x45
 8070c14:  je 80714c4
 8070c1a:  mov ecx, DWORD PTR [ebp-0x98]
 8070c20:  mov ecx, DWORD PTR [ecx+0xcc]
 8070c26:  mov DWORD PTR [ebp-0x78], ecx
 8070c29:  jmp 806fec8
 8070c2e:  mov eax, DWORD PTR [ebp-0x98]
 8070c34:  mov eax, DWORD PTR [eax+0xd0]
 8070c3a:  mov DWORD PTR [ebp-0x78], eax
 8070c3d:  cmp BYTE PTR [eax], 0x0
 8070c40:  jne 806fec8
 8070c46:  mov DWORD PTR [ebp-0x78], 0x80b2ab5
 8070c4d:  jmp 806fec8
 8070c52:  mov ebx, DWORD PTR [ebp+0x8]
 8070c55:  lea esi, [ebp-0xc]
 8070c58:  mov eax, DWORD PTR [ebx]
 8070c5a:  mov DWORD PTR [ebp-0x44], eax
 8070c5d:  mov eax, DWORD PTR [ebx+0x4]
 8070c60:  mov DWORD PTR [ebp-0x40], eax
 8070c63:  mov eax, DWORD PTR [ebx+0x8]
 8070c66:  mov DWORD PTR [ebp-0x3c], eax
 8070c69:  mov eax, DWORD PTR [ebx+0xc]
 8070c6c:  mov DWORD PTR [ebp-0x38], eax
 8070c6f:  mov eax, DWORD PTR [ebx+0x10]
 8070c72:  mov DWORD PTR [ebp-0x34], eax
 8070c75:  mov eax, DWORD PTR [ebx+0x14]
 8070c78:  mov DWORD PTR [ebp-0x30], eax
 8070c7b:  mov eax, DWORD PTR [ebx+0x18]
 8070c7e:  mov DWORD PTR [ebp-0x2c], eax
 8070c81:  mov eax, DWORD PTR [ebx+0x1c]
 8070c84:  mov DWORD PTR [ebp-0x28], eax
 8070c87:  mov eax, DWORD PTR [ebx+0x20]
 8070c8a:  mov DWORD PTR [ebp-0x24], eax
 8070c8d:  mov eax, DWORD PTR [ebx+0x24]
 8070c90:  mov DWORD PTR [ebp-0x20], eax
 8070c93:  mov eax, DWORD PTR [ebx+0x28]
 8070c96:  mov ebx, 0x66666667
 8070c9b:  mov DWORD PTR [ebp-0x1c], eax
 8070c9e:  lea eax, [ebp-0x44]
 8070ca1:  mov DWORD PTR [esp], eax
 8070ca4:  call 80957a0
 8070ca9:  mov DWORD PTR [ebp-0x50], esi
 8070cac:  mov edi, eax
 8070cae:  mov ecx, eax
 8070cb0:  shr edi, 0x1f
 8070cb3:  test edi, edi
 8070cb5:  mov DWORD PTR [ebp-0x7c], edi
 8070cb8:  jne 8070cf8
 8070cba:  lea esi, [esi]
 8070cc0:  mov eax, ecx
 8070cc2:  sub esi, 0x1
 8070cc5:  imul ebx
 8070cc7:  mov eax, ecx
 8070cc9:  sar eax, 0x1f
 8070ccc:  sar edx, 0x2
 8070ccf:  sub edx, eax
 8070cd1:  lea eax, [edx+edx*4]
 8070cd4:  add eax, eax
 8070cd6:  sub ecx, eax
 8070cd8:  mov eax, ecx
 8070cda:  mov ecx, edx
 8070cdc:  add eax, 0x30
 8070cdf:  test edx, edx
 8070ce1:  mov BYTE PTR [esi], al
 8070ce3:  jne 8070cc0
 8070ce5:  mov DWORD PTR [ebp-0x80], 0x1
 8070cec:  jmp 8070384
 8070cf1:  lea esi, [esi]
 8070cf8:  mov eax, ecx
 8070cfa:  sub esi, 0x1
 8070cfd:  imul ebx
 8070cff:  mov eax, ecx
 8070d01:  sar eax, 0x1f
 8070d04:  sar edx, 0x2
 8070d07:  sub edx, eax
 8070d09:  lea eax, [edx+edx*4]
 8070d0c:  add eax, eax
 8070d0e:  sub ecx, eax
 8070d10:  mov eax, ecx
 8070d12:  mov ecx, edx
 8070d14:  neg eax
 8070d16:  add eax, 0x30
 8070d19:  test edx, edx
 8070d1b:  mov BYTE PTR [esi], al
 8070d1d:  jne 8070cf8
 8070d1f:  jmp 8070ce5
 8070d21:  cmp edi, 0x45
 8070d24:  je 806fc39
 8070d2a:  mov edx, DWORD PTR [ebp-0x74]
 8070d2d:  test edx, edx
 8070d2f:  mov DWORD PTR [ebp-0x80], edx
 8070d32:  lea esi, [esi]
 8070d38:  jle 80716c9
 8070d3e:  mov ecx, DWORD PTR [ebp+0x8]
 8070d41:  mov esi, DWORD PTR [ecx+0x18]
 8070d44:  jmp 8070548
 8070d49:  cmp edi, 0x4f
 8070d4c:  je 806fc39
 8070d52:  cmp edi, 0x45
 8070d55:  lea esi, [esi]
 8070d58:  je 80714a7
 8070d5e:  mov ecx, DWORD PTR [ebp-0x98]
 8070d64:  mov ecx, DWORD PTR [ecx+0xc8]
 8070d6a:  mov DWORD PTR [ebp-0x78], ecx
 8070d6d:  jmp 806fec8
 8070d72:  mov ebx, DWORD PTR [ebp-0x74]
 8070d75:  sub ebx, 0x1
 8070d78:  mov eax, ebx
 8070d7a:  sar eax, 0x1f
 8070d7d:  not eax
 8070d7f:  and eax, ebx
 8070d81:  lea esi, [eax+0x1]
 8070d84:  mov eax, DWORD PTR [ebp-0xd0]
 8070d8a:  sub eax, DWORD PTR [ebp-0x8c]
 8070d90:  cmp esi, eax
 8070d92:  jae 806fe28
 8070d98:  mov eax, DWORD PTR [ebp-0x58]
 8070d9b:  test eax, eax
 8070d9d:  je 8070803
 8070da3:  test ebx, ebx
 8070da5:  jle 8070dd0
 8070da7:  cmp DWORD PTR [ebp-0x84], 0x30
 8070dae:  je 8071623
 8070db4:  mov edi, DWORD PTR [ebp-0x58]
 8070db7:  mov DWORD PTR [esp+0x8], ebx
 8070dbb:  mov DWORD PTR [esp+0x4], 0x20
 8070dc3:  mov DWORD PTR [esp], edi
 8070dc6:  add edi, ebx
 8070dc8:  call 804ef50
 8070dcd:  mov DWORD PTR [ebp-0x58], edi
 8070dd0:  mov eax, DWORD PTR [ebp-0x58]
 8070dd3:  mov BYTE PTR [eax], 0xa
 8070dd6:  add eax, 0x1
 8070dd9:  mov DWORD PTR [ebp-0x58], eax
 8070ddc:  jmp 8070803
 8070de1:  test ecx, ecx
 8070de3:  je 8070dec
 8070de5:  mov DWORD PTR [ebp-0x70], 0x1
 8070dec:  test edi, edi
 8070dee:  jne 806fc2e
 8070df4:  mov eax, DWORD PTR [ebp+0x8]
 8070df7:  mov edx, DWORD PTR [ebp-0x98]
 8070dfd:  mov esi, DWORD PTR [eax+0x10]
 8070e00:  lea eax, [esi+0x2000e]
 8070e06:  and eax, 0xffff
 8070e0b:  mov eax, DWORD PTR [edx+eax*4+0x24]
 8070e0f:  mov DWORD PTR [esp], eax
 8070e12:  call 804eea0
 8070e17:  mov ebx, DWORD PTR [ebp-0x74]
 8070e1a:  sub ebx, eax
 8070e1c:  mov edi, eax
 8070e1e:  mov eax, ebx
 8070e20:  sar eax, 0x1f
 8070e23:  not eax
 8070e25:  and eax, ebx
 8070e27:  add eax, edi
 8070e29:  mov DWORD PTR [ebp-0xc4], eax
 8070e2f:  mov eax, DWORD PTR [ebp-0xd0]
 8070e35:  sub eax, DWORD PTR [ebp-0x8c]
 8070e3b:  cmp DWORD PTR [ebp-0xc4], eax
 8070e41:  jae 806fe28
 8070e47:  mov eax, DWORD PTR [ebp-0x58]
 8070e4a:  test eax, eax
 8070e4c:  je 8070ee5
 8070e52:  test ebx, ebx
 8070e54:  jle 8070e85
 8070e56:  cmp DWORD PTR [ebp-0x84], 0x30
 8070e5d:  je 8071947
 8070e63:  mov esi, DWORD PTR [ebp-0x58]
 8070e66:  mov DWORD PTR [esp+0x8], ebx
 8070e6a:  mov DWORD PTR [esp+0x4], 0x20
 8070e72:  mov DWORD PTR [esp], esi
 8070e75:  add esi, ebx
 8070e77:  call 804ef50
 8070e7c:  mov eax, DWORD PTR [ebp+0x8]
 8070e7f:  mov DWORD PTR [ebp-0x58], esi
 8070e82:  mov esi, DWORD PTR [eax+0x10]
 8070e85:  mov eax, DWORD PTR [ebp-0x70]
 8070e88:  test eax, eax
 8070e8a:  je 80713fc
 8070e90:  mov edx, DWORD PTR [ebp-0x98]
 8070e96:  lea eax, [esi+0x2000e]
 8070e9c:  mov ecx, DWORD PTR [ebp-0x58]
 8070e9f:  and eax, 0xffff
 8070ea4:  test edi, edi
 8070ea6:  mov eax, DWORD PTR [edx+eax*4+0x24]
 8070eaa:  lea ebx, [ecx+edi]
 8070ead:  je 8070ee2
 8070eaf:  add eax, edi
 8070eb1:  xor ecx, ecx
 8070eb3:  mov DWORD PTR [ebp-0xd4], eax
 8070eb9:  lea esi, [esi]
 8070ec0:  mov esi, DWORD PTR [ebp-0xd4]
 8070ec6:  movzx edx, BYTE PTR [esi+ecx-0x1]
 8070ecb:  mov esi, DWORD PTR [ebp+0x10]
 8070ece:  mov eax, DWORD PTR [esi+0x3c]
 8070ed1:  mov eax, DWORD PTR [eax+edx*4]
 8070ed4:  mov BYTE PTR [ebx+ecx-0x1], al
 8070ed8:  sub ecx, 0x1
 8070edb:  lea eax, [ecx+edi]
 8070ede:  test eax, eax
 8070ee0:  jne 8070ec0
 8070ee2:  mov DWORD PTR [ebp-0x58], ebx
 8070ee5:  mov edi, DWORD PTR [ebp-0xc4]
 8070eeb:  add DWORD PTR [ebp-0x8c], edi
 8070ef1:  jmp 806fb86
 8070ef6:  test edi, edi
 8070ef8:  mov DWORD PTR [ebp-0x78], 0x80b2aac
 8070eff:  je 806fec8
 8070f05:  jmp 806fc39
 8070f0a:  cmp edi, 0x45
 8070f0d:  lea esi, [esi]
 8070f10:  je 806fc39
 8070f16:  mov edx, DWORD PTR [ebp+0x8]
 8070f19:  mov eax, DWORD PTR [edx+0x1c]
 8070f1c:  mov ebx, DWORD PTR [edx+0x14]
 8070f1f:  mov edx, DWORD PTR [edx+0x18]
 8070f22:  mov DWORD PTR [ebp-0x4c], eax
 8070f25:  lea ecx, [ebx+0x76c]
 8070f2b:  neg edx
 8070f2d:  mov DWORD PTR [ebp-0x64], ecx
 8070f30:  lea ecx, [eax+edx+0x17e]
 8070f37:  mov eax, ecx
 8070f39:  mov DWORD PTR [ebp-0x5c], edx
 8070f3c:  mov edx, 0x92492493
 8070f41:  imul edx
 8070f43:  mov eax, ecx
 8070f45:  sar eax, 0x1f
 8070f48:  add edx, ecx
 8070f4a:  sar edx, 0x2
 8070f4d:  sub edx, eax
 8070f4f:  lea eax, [edx*8]
 8070f56:  sub eax, edx
 8070f58:  mov edx, DWORD PTR [ebp-0x4c]
 8070f5b:  sub edx, ecx
 8070f5d:  lea edx, [edx+eax+0x3]
 8070f61:  test edx, edx
 8070f63:  mov DWORD PTR [ebp-0x60], edx
 8070f66:  js 80714fe
 8070f6c:  xor ebx, ebx
 8070f6e:  test BYTE PTR [ebp-0x64], 0x3
 8070f72:  je 8071308
 8070f78:  mov ecx, DWORD PTR [ebp-0x4c]
 8070f7b:  mov edx, DWORD PTR [ebp-0x5c]
 8070f7e:  sub ecx, 0x16d
 8070f84:  sub ecx, ebx
 8070f86:  lea ebx, [edx+ecx+0x17e]
 8070f8d:  mov edx, 0x92492493
 8070f92:  mov eax, ebx
 8070f94:  sub ecx, ebx
 8070f96:  imul edx
 8070f98:  mov eax, ebx
 8070f9a:  sar eax, 0x1f
 8070f9d:  add edx, ebx
 8070f9f:  sar edx, 0x2
 8070fa2:  sub edx, eax
 8070fa4:  lea eax, [edx*8]
 8070fab:  sub eax, edx
 8070fad:  lea eax, [ecx+eax+0x3]
 8070fb1:  test eax, eax
 8070fb3:  js 8070fbc
 8070fb5:  add DWORD PTR [ebp-0x64], 0x1
 8070fb9:  mov DWORD PTR [ebp-0x60], eax
 8070fbc:  mov edx, esi
 8070fbe:  cmp dl, 0x47
 8070fc1:  je 807143b
 8070fc7:  cmp dl, 0x67
 8070fca:  je 8071451
 8070fd0:  mov ebx, DWORD PTR [ebp-0x74]
 8070fd3:  cmp ebx, 0x2
 8070fd6:  mov DWORD PTR [ebp-0x80], ebx
 8070fd9:  jl 807142f
 8070fdf:  mov eax, DWORD PTR [ebp-0x60]
 8070fe2:  mov edx, 0x92492493
 8070fe7:  imul edx
 8070fe9:  add edx, DWORD PTR [ebp-0x60]
 8070fec:  sar DWORD PTR [ebp-0x60], 0x1f
 8070ff0:  sar edx, 0x2
 8070ff3:  sub edx, DWORD PTR [ebp-0x60]
 8070ff6:  lea esi, [edx+0x1]
 8070ff9:  jmp 8070548
 8070ffe:  cmp edi, 0x45
 8071001:  je 806fc39
 8071007:  mov edx, DWORD PTR [ebp-0x74]
 807100a:  cmp edx, 0x2
 807100d:  mov DWORD PTR [ebp-0x80], edx
 8071010:  jl 8071775
 8071016:  mov ebx, DWORD PTR [ebp+0x8]
 8071019:  mov esi, 0x92492493
 807101e:  mov ecx, DWORD PTR [ebx+0x1c]
 8071021:  mov ebx, DWORD PTR [ebx+0x18]
 8071024:  add ebx, 0x6
 8071027:  mov eax, ebx
 8071029:  sub ecx, ebx
 807102b:  imul esi
 807102d:  mov eax, ebx
 807102f:  sar eax, 0x1f
 8071032:  add edx, ebx
 8071034:  sar edx, 0x2
 8071037:  sub edx, eax
 8071039:  lea eax, [edx*8]
 8071040:  sub eax, edx
 8071042:  lea ecx, [ecx+eax+0x7]
 8071046:  mov eax, ecx
 8071048:  imul esi
 807104a:  lea esi, [edx+ecx]
 807104d:  sar esi, 0x2
 8071050:  sar ecx, 0x1f
 8071053:  sub esi, ecx
 8071055:  jmp 8070548
 807105a:  cmp edi, 0x45
 807105d:  je 806fc39
 8071063:  mov ebx, DWORD PTR [ebp-0x74]
 8071066:  cmp ebx, 0x2
 8071069:  mov DWORD PTR [ebp-0x80], ebx
 807106c:  jl 8071768
 8071072:  mov eax, DWORD PTR [ebp+0x8]
 8071075:  mov esi, DWORD PTR [eax+0x8]
 8071078:  jmp 8070548
 807107d:  cmp edi, 0x45
 8071080:  je 806fc39
 8071086:  mov edx, DWORD PTR [ebp-0x74]
 8071089:  cmp edx, 0x2
 807108c:  mov DWORD PTR [ebp-0x80], edx
 807108f:  jl 807175c
 8071095:  mov ecx, DWORD PTR [ebp+0x8]
 8071098:  mov esi, DWORD PTR [ecx]
 807109a:  jmp 8070548
 807109f:  cmp edi, 0x45
 80710a2:  je 806fc39
 80710a8:  mov ecx, DWORD PTR [ebp-0x74]
 80710ab:  cmp ecx, 0x2
 80710ae:  mov DWORD PTR [ebp-0x80], ecx
 80710b1:  jl 8071750
 80710b7:  mov ebx, DWORD PTR [ebp+0x8]
 80710ba:  mov esi, DWORD PTR [ebx+0x4]
 80710bd:  jmp 8070548
 80710c2:  test edi, edi
 80710c4:  mov DWORD PTR [ebp-0x78], 0x80b2aa3
 80710cb:  je 806fec8
 80710d1:  jmp 806fc39
 80710d6:  cmp edi, 0x45
 80710d9:  lea esi, [esi]
 80710e0:  je 806fc39
 80710e6:  mov edx, DWORD PTR [ebp-0x74]
 80710e9:  cmp edx, 0x2
 80710ec:  mov DWORD PTR [ebp-0x80], edx
 80710ef:  nop
 80710f0:  jl 807171d
 80710f6:  mov esi, DWORD PTR [ebp-0x94]
 80710fc:  jmp 8070548
 8071101:  lea esi, [esi]
 8071108:  mov eax, DWORD PTR [ebp-0x58]
 807110b:  mov DWORD PTR [esp+0x8], edi
 807110f:  mov DWORD PTR [esp+0x4], esi
 8071113:  mov DWORD PTR [esp], eax
 8071116:  call 804efc0
 807111b:  mov edx, DWORD PTR [ebp-0x58]
 807111e:  lea ebx, [edx+edi]
 8071121:  jmp 80704ca
 8071126:  xchg ax, ax
 8071128:  mov edx, DWORD PTR [ebp-0x58]
 807112b:  mov DWORD PTR [esp+0x8], ebx
 807112f:  mov DWORD PTR [esp+0x4], 0x30
 8071137:  mov DWORD PTR [esp], edx
 807113a:  call 804ef50
 807113f:  add DWORD PTR [ebp-0x58], ebx
 8071142:  jmp 8070486
 8071147:  nop
 8071148:  mov eax, DWORD PTR [ebp-0xd0]
 807114e:  sub eax, DWORD PTR [ebp-0x8c]
 8071154:  cmp ebx, eax
 8071156:  jae 806fe28
 807115c:  mov eax, DWORD PTR [ebp-0x58]
 807115f:  test eax, eax
 8071161:  je 807117d
 8071163:  mov edx, DWORD PTR [ebp-0x58]
 8071166:  mov DWORD PTR [esp+0x8], ebx
 807116a:  mov DWORD PTR [esp+0x4], 0x20
 8071172:  mov DWORD PTR [esp], edx
 8071175:  call 804ef50
 807117a:  add DWORD PTR [ebp-0x58], ebx
 807117d:  mov edx, DWORD PTR [ebp-0x74]
 8071180:  xor eax, eax
 8071182:  add DWORD PTR [ebp-0x8c], ebx
 8071188:  sub edx, ebx
 807118a:  cmp DWORD PTR [ebp-0x74], ebx
 807118d:  setle al
 8071190:  sub eax, 0x1
 8071193:  and eax, edx
 8071195:  mov DWORD PTR [ebp-0x74], eax
 8071198:  jmp 8070424
 807119d:  mov edx, DWORD PTR [ebp-0x58]
 80711a0:  mov DWORD PTR [esp+0x8], esi
 80711a4:  mov DWORD PTR [esp+0x4], 0x30
 80711ac:  mov DWORD PTR [esp], edx
 80711af:  call 804ef50
 80711b4:  mov ebx, DWORD PTR [ebp-0x58]
 80711b7:  add ebx, esi
 80711b9:  jmp 806ff57
 80711be:  mov eax, DWORD PTR [ebp-0x70]
 80711c1:  test eax, eax
 80711c3:  je 807121f
 80711c5:  mov eax, DWORD PTR [ebp+0x8]
 80711c8:  mov edx, DWORD PTR [ebp-0x98]
 80711ce:  mov ecx, DWORD PTR [ebp-0x58]
 80711d1:  cmp DWORD PTR [eax+0x8], 0xb
 80711d5:  lea ebx, [ecx+edi]
 80711d8:  setg al
 80711db:  movzx eax, al
 80711de:  add eax, 0x2e
 80711e1:  test edi, edi
 80711e3:  mov eax, DWORD PTR [edx+eax*4+0x4]
 80711e7:  je 80700aa
 80711ed:  add eax, edi
 80711ef:  xor ecx, ecx
 80711f1:  mov DWORD PTR [ebp-0xd4], eax
 80711f7:  nop
 80711f8:  mov esi, DWORD PTR [ebp-0xd4]
 80711fe:  movzx edx, BYTE PTR [esi+ecx-0x1]
 8071203:  mov esi, DWORD PTR [ebp+0x10]
 8071206:  mov eax, DWORD PTR [esi+0x3c]
 8071209:  mov eax, DWORD PTR [eax+edx*4]
 807120c:  mov BYTE PTR [ebx+ecx-0x1], al
 8071210:  sub ecx, 0x1
 8071213:  lea eax, [ecx+edi]
 8071216:  test eax, eax
 8071218:  jne 80711f8
 807121a:  jmp 80700aa
 807121f:  mov eax, DWORD PTR [ebp+0x8]
 8071222:  mov edx, DWORD PTR [ebp-0x98]
 8071228:  mov ecx, DWORD PTR [ebp-0x58]
 807122b:  cmp DWORD PTR [eax+0x8], 0xb
 807122f:  setg al
 8071232:  movzx eax, al
 8071235:  add eax, 0x2e
 8071238:  mov eax, DWORD PTR [edx+eax*4+0x4]
 807123c:  mov DWORD PTR [esp+0x8], edi
 8071240:  mov DWORD PTR [esp], ecx
 8071243:  mov DWORD PTR [esp+0x4], eax
 8071247:  call 804efc0
 807124c:  mov esi, DWORD PTR [ebp-0x58]
 807124f:  lea ebx, [esi+edi]
 8071252:  jmp 80700aa
 8071257:  mov eax, DWORD PTR [ebp-0x70]
 807125a:  test eax, eax
 807125c:  je 80717a5
 8071262:  mov eax, DWORD PTR [ebp-0x58]
 8071265:  test edi, edi
 8071267:  lea esi, [eax+edi]
 807126a:  je 8070992
 8071270:  mov edx, DWORD PTR [ebp-0x90]
 8071276:  xor ecx, ecx
 8071278:  add edx, edi
 807127a:  mov DWORD PTR [ebp-0xd8], edx
 8071280:  mov ebx, DWORD PTR [ebp-0xd8]
 8071286:  movzx edx, BYTE PTR [ebx+ecx-0x1]
 807128b:  mov ebx, DWORD PTR [ebp+0x10]
 807128e:  mov eax, DWORD PTR [ebx+0x3c]
 8071291:  mov eax, DWORD PTR [eax+edx*4]
 8071294:  mov BYTE PTR [esi+ecx-0x1], al
 8071298:  sub ecx, 0x1
 807129b:  lea eax, [ecx+edi]
 807129e:  test eax, eax
 80712a0:  jne 8071280
 80712a2:  jmp 8070992
 80712a7:  mov eax, DWORD PTR [ebp-0x68]
 80712aa:  mov edx, DWORD PTR [ebp-0x58]
 80712ad:  mov DWORD PTR [esp+0x8], edi
 80712b1:  mov DWORD PTR [esp+0x4], eax
 80712b5:  mov DWORD PTR [esp], edx
 80712b8:  call 804efc0
 80712bd:  mov ecx, DWORD PTR [ebp-0x58]
 80712c0:  lea ebx, [ecx+edi]
 80712c3:  jmp 807062a
 80712c8:  mov eax, DWORD PTR [ebp-0x58]
 80712cb:  mov DWORD PTR [esp+0x8], ebx
 80712cf:  mov DWORD PTR [esp+0x4], 0x30
 80712d7:  mov DWORD PTR [esp], eax
 80712da:  call 804ef50
 80712df:  add DWORD PTR [ebp-0x58], ebx
 80712e2:  jmp 8070051
 80712e7:  mov esi, DWORD PTR [ebp-0x58]
 80712ea:  mov DWORD PTR [esp+0x8], ebx
 80712ee:  mov DWORD PTR [esp+0x4], 0x30
 80712f6:  mov DWORD PTR [esp], esi
 80712f9:  add esi, ebx
 80712fb:  call 804ef50
 8071300:  mov DWORD PTR [ebp-0x58], esi
 8071303:  jmp 80705e5
 8071308:  mov eax, 0x51eb851f
 807130d:  mov ecx, DWORD PTR [ebp-0x64]
 8071310:  mov ebx, 0x1
 8071315:  imul DWORD PTR [ebp-0x64]
 8071318:  sar ecx, 0x1f
 807131b:  mov eax, edx
 807131d:  sar eax, 0x5
 8071320:  sub eax, ecx
 8071322:  imul eax, eax, 0x64
 8071325:  cmp DWORD PTR [ebp-0x64], eax
 8071328:  jne 8070f78
 807132e:  sar edx, 0x7
 8071331:  xor ebx, ebx
 8071333:  sub edx, ecx
 8071335:  imul edx, edx, 0x190
 807133b:  cmp DWORD PTR [ebp-0x64], edx
 807133e:  sete bl
 8071341:  jmp 8070f78
 8071346:  mov ecx, DWORD PTR [ebp-0x58]
 8071349:  mov DWORD PTR [esp+0x8], ebx
 807134d:  mov DWORD PTR [esp+0x4], 0x30
 8071355:  mov DWORD PTR [esp], ecx
 8071358:  call 804ef50
 807135d:  add DWORD PTR [ebp-0x58], ebx
 8071360:  mov ebx, DWORD PTR [ebp+0x8]
 8071363:  mov esi, DWORD PTR [ebx+0x10]
 8071366:  jmp 807028a
 807136b:  mov ecx, DWORD PTR [ebp-0x58]
 807136e:  mov DWORD PTR [esp+0x8], ebx
 8071372:  mov DWORD PTR [esp+0x4], 0x30
 807137a:  mov DWORD PTR [esp], ecx
 807137d:  call 804ef50
 8071382:  add DWORD PTR [ebp-0x58], ebx
 8071385:  mov ebx, DWORD PTR [ebp-0x88]
 807138b:  movzx eax, BYTE PTR [ebx]
 807138e:  jmp 8070792
 8071393:  mov ecx, DWORD PTR [ebp-0x58]
 8071396:  mov DWORD PTR [esp+0x8], ebx
 807139a:  mov DWORD PTR [esp+0x4], 0x30
 80713a2:  mov DWORD PTR [esp], ecx
 80713a5:  call 804ef50
 80713aa:  add DWORD PTR [ebp-0x58], ebx
 80713ad:  mov ebx, DWORD PTR [ebp+0x8]
 80713b0:  mov esi, DWORD PTR [ebx+0x18]
 80713b3:  jmp 807017a
 80713b8:  mov eax, DWORD PTR [ebp-0x58]
 80713bb:  mov DWORD PTR [esp+0x8], ebx
 80713bf:  mov DWORD PTR [esp+0x4], 0x30
 80713c7:  mov DWORD PTR [esp], eax
 80713ca:  call 804ef50
 80713cf:  add DWORD PTR [ebp-0x58], ebx
 80713d2:  jmp 80706b9
 80713d7:  mov eax, DWORD PTR [ebp-0x58]
 80713da:  mov DWORD PTR [esp+0x8], ebx
 80713de:  mov DWORD PTR [esp+0x4], 0x30
 80713e6:  mov DWORD PTR [esp], eax
 80713e9:  call 804ef50
 80713ee:  mov edx, DWORD PTR [ebp+0x8]
 80713f1:  add DWORD PTR [ebp-0x58], ebx
 80713f4:  mov esi, DWORD PTR [edx+0x18]
 80713f7:  jmp 8070a40
 80713fc:  mov edx, DWORD PTR [ebp-0x98]
 8071402:  lea eax, [esi+0x2000e]
 8071408:  and eax, 0xffff
 807140d:  mov ecx, DWORD PTR [ebp-0x58]
 8071410:  mov eax, DWORD PTR [edx+eax*4+0x24]
 8071414:  mov DWORD PTR [esp+0x8], edi
 8071418:  mov DWORD PTR [esp], ecx
 807141b:  mov DWORD PTR [esp+0x4], eax
 807141f:  call 804efc0
 8071424:  mov esi, DWORD PTR [ebp-0x58]
 8071427:  lea ebx, [esi+edi]
 807142a:  jmp 8070ee2
 807142f:  mov DWORD PTR [ebp-0x80], 0x2
 8071436:  jmp 8070fdf
 807143b:  mov ecx, DWORD PTR [ebp-0x74]
 807143e:  test ecx, ecx
 8071440:  mov DWORD PTR [ebp-0x80], ecx
 8071443:  jle 8071978
 8071449:  mov esi, DWORD PTR [ebp-0x64]
 807144c:  jmp 8070548
 8071451:  mov ecx, DWORD PTR [ebp-0x74]
 8071454:  cmp ecx, 0x2
 8071457:  mov DWORD PTR [ebp-0x80], ecx
 807145a:  jl 807196c
 8071460:  mov eax, DWORD PTR [ebp-0x64]
 8071463:  mov ecx, 0x51eb851f
 8071468:  imul ecx
 807146a:  mov eax, DWORD PTR [ebp-0x64]
 807146d:  sar edx, 0x5
 8071470:  sar eax, 0x1f
 8071473:  sub edx, eax
 8071475:  imul edx, edx, 0x64
 8071478:  sub DWORD PTR [ebp-0x64], edx
 807147b:  mov esi, DWORD PTR [ebp-0x64]
 807147e:  add esi, 0x64
 8071481:  mov eax, esi
 8071483:  imul ecx
 8071485:  mov eax, esi
 8071487:  sar eax, 0x1f
 807148a:  mov ebx, edx
 807148c:  sar ebx, 0x5
 807148f:  sub ebx, eax
 8071491:  imul eax, ebx, 0x64
 8071494:  sub esi, eax
 8071496:  jmp 8070548
 807149b:  mov DWORD PTR [ebp-0x80], 0x1
 80714a2:  jmp 807081c
 80714a7:  mov edx, DWORD PTR [ebp-0x98]
 80714ad:  mov edx, DWORD PTR [edx+0xdc]
 80714b3:  mov DWORD PTR [ebp-0x78], edx
 80714b6:  cmp BYTE PTR [edx], 0x0
 80714b9:  jne 806fec8
 80714bf:  jmp 8070d5e
 80714c4:  mov edx, DWORD PTR [ebp-0x98]
 80714ca:  mov edx, DWORD PTR [edx+0xe8]
 80714d0:  mov DWORD PTR [ebp-0x78], edx
 80714d3:  cmp BYTE PTR [edx], 0x0
 80714d6:  jne 806fec8
 80714dc:  jmp 8070c1a
 80714e1:  mov eax, DWORD PTR [ebp-0x98]
 80714e7:  mov eax, DWORD PTR [eax+0xe4]
 80714ed:  mov DWORD PTR [ebp-0x78], eax
 80714f0:  cmp BYTE PTR [eax], 0x0
 80714f3:  jne 806fec8
 80714f9:  jmp 8070af8
 80714fe:  add ebx, 0x76b
 8071504:  xor ecx, ecx
 8071506:  mov DWORD PTR [ebp-0x64], ebx
 8071509:  and ebx, 0x3
 807150c:  jne 8071543
 807150e:  mov eax, 0x51eb851f
 8071513:  mov ebx, DWORD PTR [ebp-0x64]
 8071516:  mov ecx, 0x1
 807151b:  imul DWORD PTR [ebp-0x64]
 807151e:  sar ebx, 0x1f
 8071521:  mov eax, edx
 8071523:  sar eax, 0x5
 8071526:  sub eax, ebx
 8071528:  imul eax, eax, 0x64
 807152b:  cmp DWORD PTR [ebp-0x64], eax
 807152e:  jne 8071543
 8071530:  sar edx, 0x7
 8071533:  xor ecx, ecx
 8071535:  sub edx, ebx
 8071537:  imul edx, edx, 0x190
 807153d:  cmp DWORD PTR [ebp-0x64], edx
 8071540:  sete cl
 8071543:  mov edx, DWORD PTR [ebp-0x4c]
 8071546:  mov eax, DWORD PTR [ebp-0x5c]
 8071549:  lea ebx, [edx+ecx+0x16d]
 8071550:  mov edx, 0x92492493
 8071555:  lea ecx, [eax+ebx+0x17e]
 807155c:  mov eax, ecx
 807155e:  sub ebx, ecx
 8071560:  imul edx
 8071562:  mov eax, ecx
 8071564:  sar eax, 0x1f
 8071567:  add edx, ecx
 8071569:  sar edx, 0x2
 807156c:  sub edx, eax
 807156e:  lea eax, [edx*8]
 8071575:  sub eax, edx
 8071577:  lea eax, [ebx+eax+0x3]
 807157b:  mov DWORD PTR [ebp-0x60], eax
 807157e:  jmp 8070fbc
 8071583:  mov ebx, DWORD PTR [ebp-0x74]
 8071586:  sub ebx, 0x1
 8071589:  mov eax, ebx
 807158b:  sar eax, 0x1f
 807158e:  not eax
 8071590:  and eax, ebx
 8071592:  add eax, 0x1
 8071595:  mov DWORD PTR [ebp-0xa4], eax
 807159b:  mov eax, DWORD PTR [ebp-0xd0]
 80715a1:  sub eax, DWORD PTR [ebp-0x8c]
 80715a7:  cmp DWORD PTR [ebp-0xa4], eax
 80715ad:  jae 806fe28
 80715b3:  mov eax, DWORD PTR [ebp-0x58]
 80715b6:  test eax, eax
 80715b8:  je 80715f1
 80715ba:  test ebx, ebx
 80715bc:  jle 80715e5
 80715be:  cmp DWORD PTR [ebp-0x84], 0x30
 80715c5:  je 8071984
 80715cb:  mov edx, DWORD PTR [ebp-0x58]
 80715ce:  mov DWORD PTR [esp+0x8], ebx
 80715d2:  mov DWORD PTR [esp+0x4], 0x20
 80715da:  mov DWORD PTR [esp], edx
 80715dd:  call 804ef50
 80715e2:  add DWORD PTR [ebp-0x58], ebx
 80715e5:  mov ecx, DWORD PTR [ebp-0x58]
 80715e8:  mov BYTE PTR [ecx], 0x2d
 80715eb:  add ecx, 0x1
 80715ee:  mov DWORD PTR [ebp-0x58], ecx
 80715f1:  mov ebx, DWORD PTR [ebp-0xa4]
 80715f7:  neg esi
 80715f9:  add DWORD PTR [ebp-0x8c], ebx
 80715ff:  jmp 80706d1
 8071604:  mov eax, DWORD PTR [ebp-0x58]
 8071607:  mov DWORD PTR [esp+0x8], ebx
 807160b:  mov DWORD PTR [esp+0x4], 0x30
 8071613:  mov DWORD PTR [esp], eax
 8071616:  call 804ef50
 807161b:  add DWORD PTR [ebp-0x58], ebx
 807161e:  jmp 807094c
 8071623:  mov ecx, DWORD PTR [ebp-0x58]
 8071626:  mov DWORD PTR [esp+0x8], ebx
 807162a:  mov DWORD PTR [esp+0x4], 0x30
 8071632:  mov DWORD PTR [esp], ecx
 8071635:  call 804ef50
 807163a:  add DWORD PTR [ebp-0x58], ebx
 807163d:  jmp 8070dd0
 8071642:  mov DWORD PTR [ebp-0x80], 0x2
 8071649:  jmp 807050b
 807164e:  mov edi, DWORD PTR [ebp-0x58]
 8071651:  mov DWORD PTR [esp+0x8], ebx
 8071655:  mov DWORD PTR [esp+0x4], 0x30
 807165d:  mov DWORD PTR [esp], edi
 8071660:  add edi, ebx
 8071662:  call 804ef50
 8071667:  mov DWORD PTR [ebp-0x58], edi
 807166a:  jmp 80707f7
 807166f:  mov edx, DWORD PTR [ebp-0x98]
 8071675:  mov eax, DWORD PTR [ebp+0x8]
 8071678:  call 8071d00
 807167d:  test eax, eax
 807167f:  je 807085f
 8071685:  mov eax, DWORD PTR [eax+0x24]
 8071688:  mov DWORD PTR [ebp-0x78], eax
 807168b:  jmp 806fec8
 8071690:  mov edx, DWORD PTR [ebp-0x98]
 8071696:  mov eax, DWORD PTR [ebp+0x8]
 8071699:  call 8071d00
 807169e:  test eax, eax
 80716a0:  je 80704fc
 80716a6:  mov edi, DWORD PTR [ebp-0x74]
 80716a9:  test edi, edi
 80716ab:  mov DWORD PTR [ebp-0x80], edi
 80716ae:  jle 80719a3
 80716b4:  mov edx, DWORD PTR [ebp+0x8]
 80716b7:  mov esi, DWORD PTR [edx+0x14]
 80716ba:  sub esi, DWORD PTR [eax+0x8]
 80716bd:  imul esi, DWORD PTR [eax+0x30]
 80716c1:  add esi, DWORD PTR [eax+0x4]
 80716c4:  jmp 8070348
 80716c9:  mov DWORD PTR [ebp-0x80], 0x1
 80716d0:  jmp 8070d3e
 80716d5:  mov DWORD PTR [ebp-0x80], 0x2
 80716dc:  jmp 8070bfa
 80716e1:  mov DWORD PTR [ebp-0x80], 0x2
 80716e8:  jmp 8070bd7
 80716ed:  mov DWORD PTR [ebp-0x80], 0x2
 80716f4:  lea esi, [esi]
 80716f8:  jmp 8070bb7
 80716fd:  mov DWORD PTR [ebp-0x80], 0x2
 8071704:  lea esi, [esi]
 8071708:  jmp 8070b47
 807170d:  mov DWORD PTR [ebp-0x80], 0x2
 8071714:  lea esi, [esi]
 8071718:  jmp 8070b24
 807171d:  mov DWORD PTR [ebp-0x80], 0x2
 8071724:  lea esi, [esi]
 8071728:  jmp 80710f6
 807172d:  mov DWORD PTR [ebp-0x80], 0x2
 8071734:  lea esi, [esi]
 8071738:  jmp 8070abe
 807173d:  mov DWORD PTR [ebp-0x90], 0x80c2c93
 8071747:  xor edi, edi
 8071749:  xor edx, edx
 807174b:  jmp 80708ec
 8071750:  mov DWORD PTR [ebp-0x80], 0x2
 8071757:  jmp 80710b7
 807175c:  mov DWORD PTR [ebp-0x80], 0x2
 8071763:  jmp 8071095
 8071768:  mov DWORD PTR [ebp-0x80], 0x2
 807176f:  nop
 8071770:  jmp 8071072
 8071775:  mov DWORD PTR [ebp-0x80], 0x2
 807177c:  lea esi, [esi]
 8071780:  jmp 8071016
 8071785:  lea esi, [esi]
 8071788:  call 806e1f0
 807178d:  mov BYTE PTR [edi], 0x1
 8071790:  jmp 80708b9
 8071795:  mov DWORD PTR [ebp-0x80], 0x1
 807179c:  lea esi, [esi]
 80717a0:  jmp 807086d
 80717a5:  mov esi, DWORD PTR [ebp-0x90]
 80717ab:  mov eax, DWORD PTR [ebp-0x58]
 80717ae:  mov DWORD PTR [esp+0x8], edi
 80717b2:  mov DWORD PTR [esp+0x4], esi
 80717b6:  mov DWORD PTR [esp], eax
 80717b9:  call 804efc0
 80717be:  mov edx, DWORD PTR [ebp-0x58]
 80717c1:  lea esi, [edx+edi]
 80717c4:  jmp 8070992
 80717c9:  mov edx, DWORD PTR [ebp-0x98]
 80717cf:  movzx eax, si
 80717d2:  mov ecx, DWORD PTR [ebp-0x58]
 80717d5:  mov eax, DWORD PTR [edx+eax*4+0x24]
 80717d9:  mov DWORD PTR [esp+0x8], edi
 80717dd:  mov DWORD PTR [esp], ecx
 80717e0:  mov DWORD PTR [esp+0x4], eax
 80717e4:  call 804efc0
 80717e9:  mov esi, DWORD PTR [ebp-0x58]
 80717ec:  lea ebx, [esi+edi]
 80717ef:  jmp 8070a92
 80717f4:  mov edx, DWORD PTR [ebp-0x98]
 80717fa:  lea eax, [esi+0x20007]
 8071800:  and eax, 0xffff
 8071805:  mov ecx, DWORD PTR [ebp-0x58]
 8071808:  mov eax, DWORD PTR [edx+eax*4+0x24]
 807180c:  mov DWORD PTR [esp+0x8], edi
 8071810:  mov DWORD PTR [esp], ecx
 8071813:  mov DWORD PTR [esp+0x4], eax
 8071817:  call 804efc0
 807181c:  mov esi, DWORD PTR [ebp-0x58]
 807181f:  lea ebx, [esi+edi]
 8071822:  jmp 80701d2
 8071827:  mov DWORD PTR [ebp-0x80], 0x1
 807182e:  jmp 8070322
 8071833:  mov edx, DWORD PTR [ebp-0x98]
 8071839:  lea eax, [esi+0x2001a]
 807183f:  and eax, 0xffff
 8071844:  mov ecx, DWORD PTR [ebp-0x58]
 8071847:  mov eax, DWORD PTR [edx+eax*4+0x24]
 807184b:  mov DWORD PTR [esp+0x8], edi
 807184f:  mov DWORD PTR [esp], ecx
 8071852:  mov DWORD PTR [esp+0x4], eax
 8071856:  call 804efc0
 807185b:  mov esi, DWORD PTR [ebp-0x58]
 807185e:  lea ebx, [esi+edi]
 8071861:  jmp 80702e2
 8071866:  mov edx, DWORD PTR [ebp-0x98]
 807186c:  mov eax, DWORD PTR [ebp+0x8]
 807186f:  call 8071d00
 8071874:  test eax, eax
 8071876:  mov DWORD PTR [ebp-0x6c], eax
 8071879:  je 8070308
 807187f:  mov edi, DWORD PTR [eax+0x20]
 8071882:  mov DWORD PTR [esp], edi
 8071885:  call 804eea0
 807188a:  mov ebx, DWORD PTR [ebp-0x74]
 807188d:  sub ebx, eax
 807188f:  mov esi, eax
 8071891:  mov eax, ebx
 8071893:  sar eax, 0x1f
 8071896:  not eax
 8071898:  and eax, ebx
 807189a:  add eax, esi
 807189c:  mov DWORD PTR [ebp-0xb8], eax
 80718a2:  mov eax, DWORD PTR [ebp-0xd0]
 80718a8:  sub eax, DWORD PTR [ebp-0x8c]
 80718ae:  cmp DWORD PTR [ebp-0xb8], eax
 80718b4:  jae 806fe28
 80718ba:  mov eax, DWORD PTR [ebp-0x58]
 80718bd:  test eax, eax
 80718bf:  je 8071936
 80718c1:  test ebx, ebx
 80718c3:  jle 80718f2
 80718c5:  cmp DWORD PTR [ebp-0x84], 0x30
 80718cc:  je 80719cd
 80718d2:  mov edx, DWORD PTR [ebp-0x58]
 80718d5:  mov DWORD PTR [esp+0x8], ebx
 80718d9:  mov DWORD PTR [esp+0x4], 0x20
 80718e1:  mov DWORD PTR [esp], edx
 80718e4:  call 804ef50
 80718e9:  mov ecx, DWORD PTR [ebp-0x6c]
 80718ec:  add DWORD PTR [ebp-0x58], ebx
 80718ef:  mov edi, DWORD PTR [ecx+0x20]
 80718f2:  mov eax, DWORD PTR [ebp-0x70]
 80718f5:  test eax, eax
 80718f7:  je 80719af
 80718fd:  mov eax, DWORD PTR [ebp-0x58]
 8071900:  test esi, esi
 8071902:  lea ebx, [eax+esi]
 8071905:  je 8071933
 8071907:  add edi, esi
 8071909:  xor ecx, ecx
 807190b:  mov DWORD PTR [ebp-0xdc], edi
 8071911:  mov edi, DWORD PTR [ebp-0xdc]
 8071917:  movzx edx, BYTE PTR [edi+ecx-0x1]
 807191c:  mov edi, DWORD PTR [ebp+0x10]
 807191f:  mov eax, DWORD PTR [edi+0x3c]
 8071922:  mov eax, DWORD PTR [eax+edx*4]
 8071925:  mov BYTE PTR [ebx+ecx-0x1], al
 8071929:  sub ecx, 0x1
 807192c:  lea eax, [ecx+esi]
 807192f:  test eax, eax
 8071931:  jne 8071911
 8071933:  mov DWORD PTR [ebp-0x58], ebx
 8071936:  mov ecx, DWORD PTR [ebp-0xb8]
 807193c:  add DWORD PTR [ebp-0x8c], ecx
 8071942:  jmp 806fb86
 8071947:  mov ecx, DWORD PTR [ebp-0x58]
 807194a:  mov DWORD PTR [esp+0x8], ebx
 807194e:  mov DWORD PTR [esp+0x4], 0x30
 8071956:  mov DWORD PTR [esp], ecx
 8071959:  call 804ef50
 807195e:  add DWORD PTR [ebp-0x58], ebx
 8071961:  mov ebx, DWORD PTR [ebp+0x8]
 8071964:  mov esi, DWORD PTR [ebx+0x10]
 8071967:  jmp 8070e85
 807196c:  mov DWORD PTR [ebp-0x80], 0x2
 8071973:  jmp 8071460
 8071978:  mov DWORD PTR [ebp-0x80], 0x1
 807197f:  jmp 8071449
 8071984:  mov eax, DWORD PTR [ebp-0x58]
 8071987:  mov DWORD PTR [esp+0x8], ebx
 807198b:  mov DWORD PTR [esp+0x4], 0x30
 8071993:  mov DWORD PTR [esp], eax
 8071996:  call 804ef50
 807199b:  add DWORD PTR [ebp-0x58], ebx
 807199e:  jmp 80715e5
 80719a3:  mov DWORD PTR [ebp-0x80], 0x1
 80719aa:  jmp 80716b4
 80719af:  mov eax, DWORD PTR [ebp-0x58]
 80719b2:  mov DWORD PTR [esp+0x8], esi
 80719b6:  mov DWORD PTR [esp+0x4], edi
 80719ba:  mov DWORD PTR [esp], eax
 80719bd:  call 804efc0
 80719c2:  mov edx, DWORD PTR [ebp-0x58]
 80719c5:  lea ebx, [edx+esi]
 80719c8:  jmp 8071933
 80719cd:  mov edi, DWORD PTR [ebp-0x58]
 80719d0:  mov DWORD PTR [esp+0x8], ebx
 80719d4:  mov DWORD PTR [esp+0x4], 0x30
 80719dc:  mov DWORD PTR [esp], edi
 80719df:  add edi, ebx
 80719e1:  call 804ef50
 80719e6:  mov eax, DWORD PTR [ebp-0x6c]
 80719e9:  mov DWORD PTR [ebp-0x58], edi
 80719ec:  mov edi, DWORD PTR [eax+0x20]
 80719ef:  jmp 80718f2
 80719f4:  lea esi, [esi]
 80719fa:  lea edi, [edi]

08071a00 <__strftime_l>:
 8071a00:  push ebp
 8071a01:  mov ebp, esp
 8071a03:  sub esp, 0x10
 8071a06:  mov eax, DWORD PTR [ebp+0x18]
 8071a09:  mov ecx, DWORD PTR [ebp+0x10]
 8071a0c:  mov edx, DWORD PTR [ebp+0xc]
 8071a0f:  mov BYTE PTR [ebp-0x1], 0x0
 8071a13:  mov DWORD PTR [esp+0x8], eax
 8071a17:  lea eax, [ebp-0x1]
 8071a1a:  mov DWORD PTR [esp+0x4], eax
 8071a1e:  mov eax, DWORD PTR [ebp+0x14]
 8071a21:  mov DWORD PTR [esp], eax
 8071a24:  mov eax, DWORD PTR [ebp+0x8]
 8071a27:  call 806fae0
 8071a2c:  leave
 8071a2d:  ret
 8071a2e:  nop
 8071a2f:  nop

08071a30 <_nl_init_era_entries>:
 8071a30:  push ebp
 8071a31:  mov ebp, esp
 8071a33:  push edi
 8071a34:  push esi
 8071a35:  push ebx
 8071a36:  mov ebx, eax
 8071a38:  sub esp, 0x24
 8071a3b:  mov ecx, DWORD PTR [eax+0xec]
 8071a41:  test ecx, ecx
 8071a43:  je 8071a87
 8071a45:  mov eax, 0x0
 8071a4a:  test eax, eax
 8071a4c:  je 8071a5a
 8071a4e:  mov DWORD PTR [esp], 0x80d2a80
 8071a55:  call 0
 8071a5a:  mov eax, DWORD PTR [ebx+0x14]
 8071a5d:  test eax, eax
 8071a5f:  mov DWORD PTR [ebp-0x14], eax
 8071a62:  je 8071c48
 8071a68:  mov ecx, DWORD PTR [ebp-0x14]
 8071a6b:  mov edx, DWORD PTR [ecx+0x8]
 8071a6e:  test edx, edx
 8071a70:  je 8071a90
 8071a72:  mov eax, 0x0
 8071a77:  test eax, eax
 8071a79:  je 8071a87
 8071a7b:  mov DWORD PTR [esp], 0x80d2a80
 8071a82:  call 0
 8071a87:  add esp, 0x24
 8071a8a:  pop ebx
 8071a8b:  pop esi
 8071a8c:  pop edi
 8071a8d:  pop ebp
 8071a8e:  ret
 8071a8f:  nop
 8071a90:  mov eax, DWORD PTR [ebx+0xec]
 8071a96:  test eax, eax
 8071a98:  mov DWORD PTR [ebp-0x1c], eax
 8071a9b:  je 8071bf8
 8071aa1:  mov ecx, DWORD PTR [ebp-0x14]
 8071aa4:  mov edx, eax
 8071aa6:  mov eax, DWORD PTR [ebp-0x14]
 8071aa9:  mov ecx, DWORD PTR [ecx]
 8071aab:  cmp DWORD PTR [eax+0x4], edx
 8071aae:  mov DWORD PTR [ebp-0x18], ecx
 8071ab1:  je 8071ac5
 8071ab3:  imul eax, edx, 0x34
 8071ab6:  mov DWORD PTR [esp], ecx
 8071ab9:  mov DWORD PTR [esp+0x4], eax
 8071abd:  call 804db10
 8071ac2:  mov DWORD PTR [ebp-0x18], eax
 8071ac5:  mov eax, DWORD PTR [ebp-0x18]
 8071ac8:  test eax, eax
 8071aca:  je 8071c89
 8071ad0:  mov edx, DWORD PTR [ebp-0x14]
 8071ad3:  mov eax, DWORD PTR [ebp-0x18]
 8071ad6:  mov ecx, DWORD PTR [ebp-0x1c]
 8071ad9:  mov esi, DWORD PTR [ebx+0xf0]
 8071adf:  mov DWORD PTR [ebp-0x20], 0x0
 8071ae6:  mov DWORD PTR [edx], eax
 8071ae8:  mov ebx, eax
 8071aea:  mov DWORD PTR [edx+0x4], ecx
 8071aed:  mov DWORD PTR [ebp-0x10], 0x0
 8071af4:  jmp 8071b96
 8071af9:  lea esi, [esi]
 8071b00:  je 8071c20
 8071b06:  mov eax, DWORD PTR [ebp-0x10]
 8071b09:  mov edx, DWORD PTR [ebp-0x18]
 8071b0c:  cmp DWORD PTR [edx+eax], 0x2b
 8071b10:  setne al
 8071b13:  movzx eax, al
 8071b16:  lea eax, [eax+eax-0x1]
 8071b1a:  mov DWORD PTR [ebx+0x30], eax
 8071b1d:  lea eax, [esi+0x20]
 8071b20:  mov DWORD PTR [ebx+0x20], eax
 8071b23:  mov DWORD PTR [esp+0x4], 0x0
 8071b2b:  mov DWORD PTR [esp], eax
 8071b2e:  call 806c400
 8071b33:  add eax, 0x1
 8071b36:  mov DWORD PTR [ebx+0x24], eax
 8071b39:  mov DWORD PTR [esp+0x4], 0x0
 8071b41:  mov DWORD PTR [esp], eax
 8071b44:  call 806c400
 8071b49:  lea edx, [eax+0x4]
 8071b4c:  sub edx, esi
 8071b4e:  not edx
 8071b50:  and edx, 0x3
 8071b53:  lea eax, [eax+edx+0x1]
 8071b57:  mov DWORD PTR [ebx+0x28], eax
 8071b5a:  mov DWORD PTR [esp+0x4], 0x0
 8071b62:  mov DWORD PTR [esp], eax
 8071b65:  call 8094470
 8071b6a:  add eax, 0x4
 8071b6d:  mov DWORD PTR [ebx+0x2c], eax
 8071b70:  add ebx, 0x34
 8071b73:  mov DWORD PTR [esp+0x4], 0x0
 8071b7b:  mov DWORD PTR [esp], eax
 8071b7e:  call 8094470
 8071b83:  add DWORD PTR [ebp-0x20], 0x1
 8071b87:  mov ecx, DWORD PTR [ebp-0x20]
 8071b8a:  add DWORD PTR [ebp-0x10], 0x34
 8071b8e:  cmp DWORD PTR [ebp-0x1c], ecx
 8071b91:  jbe 8071c0f
 8071b93:  lea esi, [eax+0x4]
 8071b96:  mov eax, DWORD PTR [esi]
 8071b98:  mov DWORD PTR [ebx], eax
 8071b9a:  mov eax, DWORD PTR [esi+0x4]
 8071b9d:  mov DWORD PTR [ebx+0x4], eax
 8071ba0:  mov eax, DWORD PTR [esi+0x8]
 8071ba3:  mov DWORD PTR [ebx+0x8], eax
 8071ba6:  mov edi, DWORD PTR [esi+0xc]
 8071ba9:  mov DWORD PTR [ebx+0xc], edi
 8071bac:  mov edx, DWORD PTR [esi+0x10]
 8071baf:  mov DWORD PTR [ebp-0x24], edx
 8071bb2:  mov DWORD PTR [ebx+0x10], edx
 8071bb5:  mov edx, DWORD PTR [esi+0x14]
 8071bb8:  mov DWORD PTR [ebx+0x14], edx
 8071bbb:  mov ecx, DWORD PTR [esi+0x18]
 8071bbe:  mov DWORD PTR [ebp-0x28], ecx
 8071bc1:  mov DWORD PTR [ebx+0x18], ecx
 8071bc4:  mov eax, DWORD PTR [esi+0x1c]
 8071bc7:  mov DWORD PTR [ebx+0x1c], eax
 8071bca:  mov ecx, DWORD PTR [ebp-0x18]
 8071bcd:  mov eax, DWORD PTR [ebp-0x10]
 8071bd0:  cmp DWORD PTR [ecx+eax+0x8], edx
 8071bd4:  jge 8071b00
 8071bda:  mov ecx, DWORD PTR [ebp-0x18]
 8071bdd:  xor eax, eax
 8071bdf:  mov edx, DWORD PTR [ebp-0x10]
 8071be2:  cmp DWORD PTR [ecx+edx], 0x2b
 8071be6:  sete al
 8071be9:  lea eax, [eax+eax-0x1]
 8071bed:  mov DWORD PTR [ebx+0x30], eax
 8071bf0:  jmp 8071b1d
 8071bf5:  lea esi, [esi]
 8071bf8:  mov eax, DWORD PTR [ecx]
 8071bfa:  test eax, eax
 8071bfc:  je 8071c0f
 8071bfe:  mov DWORD PTR [esp], eax
 8071c01:  call 804b4a0
 8071c06:  mov edx, DWORD PTR [ebp-0x14]
 8071c09:  mov DWORD PTR [edx], 0x0
 8071c0f:  mov eax, DWORD PTR [ebp-0x14]
 8071c12:  mov DWORD PTR [eax+0x8], 0x1
 8071c19:  jmp 8071a72
 8071c1e:  xchg ax, ax
 8071c20:  cmp edi, DWORD PTR [ebp-0x28]
 8071c23:  jl 8071bda
 8071c25:  jne 8071b06
 8071c2b:  mov eax, DWORD PTR [ebp-0x24]
 8071c2e:  cmp eax, DWORD PTR [ebx+0x1c]
 8071c31:  lea esi, [esi]
 8071c38:  jg 8071b06
 8071c3e:  xchg ax, ax
 8071c40:  jmp 8071bda
 8071c42:  lea esi, [esi]
 8071c48:  mov DWORD PTR [esp], 0x1c
 8071c4f:  nop
 8071c50:  call 804d6f0
 8071c55:  test eax, eax
 8071c57:  mov DWORD PTR [ebx+0x14], eax
 8071c5a:  lea esi, [esi]
 8071c60:  je 8071a72
 8071c66:  xor edx, edx
 8071c68:  mov DWORD PTR [eax+edx], 0x0
 8071c6f:  add edx, 0x4
 8071c72:  cmp edx, 0x1c
 8071c75:  jb 8071c68
 8071c77:  mov edx, DWORD PTR [ebx+0x14]
 8071c7a:  mov DWORD PTR [ebx+0x10], 0x80722a0
 8071c81:  mov DWORD PTR [ebp-0x14], edx
 8071c84:  jmp 8071a68
 8071c89:  mov ecx, DWORD PTR [ebp-0x14]
 8071c8c:  mov eax, DWORD PTR [ecx]
 8071c8e:  mov DWORD PTR [esp], eax
 8071c91:  call 804b4a0
 8071c96:  mov eax, DWORD PTR [ebp-0x14]
 8071c99:  mov DWORD PTR [eax+0x4], 0x0
 8071ca0:  mov DWORD PTR [eax], 0x0
 8071ca6:  jmp 8071c0f
 8071cab:  nop
 8071cac:  lea esi, [esi]

08071cb0 <_nl_select_era_entry>:
 8071cb0:  push ebp
 8071cb1:  mov ebp, esp
 8071cb3:  sub esp, 0x8
 8071cb6:  mov DWORD PTR [esp], ebx
 8071cb9:  mov ebx, edx
 8071cbb:  mov DWORD PTR [esp+0x4], esi
 8071cbf:  mov edx, DWORD PTR [edx+0x14]
 8071cc2:  mov esi, eax
 8071cc4:  test edx, edx
 8071cc6:  je 8071ce0
 8071cc8:  mov eax, DWORD PTR [edx+0x8]
 8071ccb:  test eax, eax
 8071ccd:  je 8071ce0
 8071ccf:  imul eax, esi, 0x34
 8071cd2:  mov ebx, DWORD PTR [esp]
 8071cd5:  add eax, DWORD PTR [edx]
 8071cd7:  mov esi, DWORD PTR [esp+0x4]
 8071cdb:  mov esp, ebp
 8071cdd:  pop ebp
 8071cde:  ret
 8071cdf:  nop
 8071ce0:  mov eax, ebx
 8071ce2:  call 8071a30
 8071ce7:  mov edx, DWORD PTR [ebx+0x14]
 8071cea:  xor eax, eax
 8071cec:  test edx, edx
 8071cee:  jne 8071ccf
 8071cf0:  mov ebx, DWORD PTR [esp]
 8071cf3:  mov esi, DWORD PTR [esp+0x4]
 8071cf7:  mov esp, ebp
 8071cf9:  pop ebp
 8071cfa:  ret
 8071cfb:  nop
 8071cfc:  lea esi, [esi]

08071d00 <_nl_get_era_entry>:
 8071d00:  push ebp
 8071d01:  mov ebp, esp
 8071d03:  push edi
 8071d04:  push esi
 8071d05:  mov esi, eax
 8071d07:  push ebx
 8071d08:  mov ebx, edx
 8071d0a:  sub esp, 0xc
 8071d0d:  mov edx, DWORD PTR [edx+0x14]
 8071d10:  test edx, edx
 8071d12:  je 8071dd0
 8071d18:  mov eax, DWORD PTR [edx+0x8]
 8071d1b:  test eax, eax
 8071d1d:  je 8071dd0
 8071d23:  mov ecx, DWORD PTR [esi+0x10]
 8071d26:  mov eax, DWORD PTR [esi+0x14]
 8071d29:  mov esi, DWORD PTR [esi+0xc]
 8071d2c:  mov DWORD PTR [ebp-0x10], ecx
 8071d2f:  mov ecx, DWORD PTR [edx+0x4]
 8071d32:  mov DWORD PTR [ebp-0x18], esi
 8071d35:  test ecx, ecx
 8071d37:  mov DWORD PTR [ebp-0x14], ecx
 8071d3a:  je 8071dee
 8071d40:  mov ecx, DWORD PTR [edx]
 8071d42:  xor ebx, ebx
 8071d44:  jmp 8071d7a
 8071d46:  xchg ax, ax
 8071d48:  je 8071e40
 8071d4e:  mov edx, DWORD PTR [ecx+0x14]
 8071d51:  cmp eax, edx
 8071d53:  nop
 8071d54:  lea esi, [esi]
 8071d58:  jle 8071e00
 8071d5e:  cmp eax, esi
 8071d60:  jl 8071df0
 8071d66:  xchg ax, ax
 8071d68:  je 8071e10
 8071d6e:  add ebx, 0x1
 8071d71:  add ecx, 0x34
 8071d74:  cmp DWORD PTR [ebp-0x14], ebx
 8071d77:  nop
 8071d78:  jbe 8071dee
 8071d7a:  mov esi, DWORD PTR [ecx+0x8]
 8071d7d:  mov edi, ecx
 8071d7f:  cmp eax, esi
 8071d81:  jle 8071d48
 8071d83:  mov edx, DWORD PTR [ecx+0x14]
 8071d86:  cmp eax, edx
 8071d88:  jl 8071df0
 8071d8a:  jne 8071d51
 8071d8c:  mov edx, DWORD PTR [ecx+0x18]
 8071d8f:  cmp DWORD PTR [ebp-0x10], edx
 8071d92:  lea esi, [esi]
 8071d98:  jl 8071df0
 8071d9a:  lea esi, [esi]
 8071da0:  je 8071e70
 8071da6:  cmp DWORD PTR [ebp-0x10], edx
 8071da9:  lea esi, [esi]
 8071db0:  jg 8071d5e
 8071db2:  cmp DWORD PTR [ebp-0x10], edx
 8071db5:  lea esi, [esi]
 8071db8:  jne 8071d6e
 8071dba:  mov edx, DWORD PTR [ebp-0x18]
 8071dbd:  cmp edx, DWORD PTR [ecx+0x1c]
 8071dc0:  jl 8071d6e
 8071dc2:  lea esi, [esi]
 8071dc8:  jmp 8071d5e
 8071dca:  lea esi, [esi]
 8071dd0:  mov eax, ebx
 8071dd2:  lea esi, [esi]
 8071dd8:  call 8071a30
 8071ddd:  mov edx, DWORD PTR [ebx+0x14]
 8071de0:  test edx, edx
 8071de2:  lea esi, [esi]
 8071de8:  jne 8071d23
 8071dee:  xor edi, edi
 8071df0:  add esp, 0xc
 8071df3:  mov eax, edi
 8071df5:  pop ebx
 8071df6:  pop esi
 8071df7:  pop edi
 8071df8:  pop ebp
 8071df9:  ret
 8071dfa:  lea esi, [esi]
 8071e00:  jne 8071d6e
 8071e06:  mov edx, DWORD PTR [ecx+0x18]
 8071e09:  jmp 8071da6
 8071e0b:  nop
 8071e0c:  lea esi, [esi]
 8071e10:  mov edx, DWORD PTR [ebp-0x10]
 8071e13:  cmp edx, DWORD PTR [ecx+0xc]
 8071e16:  xchg ax, ax
 8071e18:  jl 8071df0
 8071e1a:  lea esi, [esi]
 8071e20:  jne 8071d6e
 8071e26:  mov edx, DWORD PTR [ebp-0x18]
 8071e29:  cmp edx, DWORD PTR [ecx+0x10]
 8071e2c:  lea esi, [esi]
 8071e30:  jg 8071d6e
 8071e36:  xchg ax, ax
 8071e38:  jmp 8071df0
 8071e3a:  lea esi, [esi]
 8071e40:  mov edx, DWORD PTR [ebp-0x10]
 8071e43:  cmp edx, DWORD PTR [ecx+0xc]
 8071e46:  xchg ax, ax
 8071e48:  jg 8071d83
 8071e4e:  xchg ax, ax
 8071e50:  jne 8071d4e
 8071e56:  mov edx, DWORD PTR [ebp-0x18]
 8071e59:  cmp edx, DWORD PTR [ecx+0x10]
 8071e5c:  lea esi, [esi]
 8071e60:  jge 8071d83
 8071e66:  xchg ax, ax
 8071e68:  jmp 8071d4e
 8071e6d:  lea esi, [esi]
 8071e70:  mov edx, DWORD PTR [ebp-0x18]
 8071e73:  cmp edx, DWORD PTR [ecx+0x1c]
 8071e76:  xchg ax, ax
 8071e78:  jle 8071df0
 8071e7e:  mov edx, DWORD PTR [ebp-0x10]
 8071e81:  lea esi, [esi]
 8071e88:  jmp 8071db2
 8071e8d:  nop
 8071e8e:  nop
 8071e8f:  nop

08071e90 <_nl_get_alt_digit>:
 8071e90:  push ebp
 8071e91:  mov ebp, esp
 8071e93:  sub esp, 0x1c
 8071e96:  cmp eax, 0x63
 8071e99:  mov DWORD PTR [ebp-0x4], edi
 8071e9c:  mov edi, edx
 8071e9e:  mov DWORD PTR [ebp-0xc], ebx
 8071ea1:  mov DWORD PTR [ebp-0x8], esi
 8071ea4:  mov DWORD PTR [ebp-0x14], eax
 8071ea7:  jbe 8071ec0
 8071ea9:  xor ebx, ebx
 8071eab:  mov eax, ebx
 8071ead:  mov esi, DWORD PTR [ebp-0x8]
 8071eb0:  mov ebx, DWORD PTR [ebp-0xc]
 8071eb3:  mov edi, DWORD PTR [ebp-0x4]
 8071eb6:  mov esp, ebp
 8071eb8:  pop ebp
 8071eb9:  ret
 8071eba:  lea esi, [esi]
 8071ec0:  mov eax, DWORD PTR [edx+0xe0]
 8071ec6:  cmp BYTE PTR [eax], 0x0
 8071ec9:  je 8071ea9
 8071ecb:  mov eax, 0x0
 8071ed0:  test eax, eax
 8071ed2:  je 8071ee0
 8071ed4:  mov DWORD PTR [esp], 0x80d2a80
 8071edb:  call 0
 8071ee0:  mov eax, DWORD PTR [edi+0x14]
 8071ee3:  test eax, eax
 8071ee5:  mov DWORD PTR [ebp-0x10], eax
 8071ee8:  je 8071f8e
 8071eee:  mov ecx, DWORD PTR [eax+0x14]
 8071ef1:  test ecx, ecx
 8071ef3:  jne 8071f5c
 8071ef5:  mov esi, DWORD PTR [edi+0xe0]
 8071efb:  mov eax, DWORD PTR [ebp-0x10]
 8071efe:  test esi, esi
 8071f00:  mov DWORD PTR [eax+0x14], 0x1
 8071f07:  je 8071f4f
 8071f09:  mov DWORD PTR [esp], 0x190
 8071f10:  xor ebx, ebx
 8071f12:  call 804d6f0
 8071f17:  mov edx, DWORD PTR [ebp-0x10]
 8071f1a:  test eax, eax
 8071f1c:  mov DWORD PTR [edx+0xc], eax
 8071f1f:  je 8071f4f
 8071f21:  lea esi, [esi]
 8071f28:  mov edx, DWORD PTR [ebp-0x10]
 8071f2b:  mov eax, DWORD PTR [edx+0xc]
 8071f2e:  mov DWORD PTR [eax+ebx], esi
 8071f31:  add ebx, 0x4
 8071f34:  mov DWORD PTR [esp], esi
 8071f37:  mov DWORD PTR [esp+0x4], 0x0
 8071f3f:  call 806c400
 8071f44:  cmp ebx, 0x190
 8071f4a:  lea esi, [eax+0x1]
 8071f4d:  jne 8071f28
 8071f4f:  mov edi, DWORD PTR [edi+0x14]
 8071f52:  mov DWORD PTR [ebp-0x10], edi
 8071f55:  mov eax, DWORD PTR [ebp-0x10]
 8071f58:  test eax, eax
 8071f5a:  je 8071f8a
 8071f5c:  mov edx, DWORD PTR [ebp-0x10]
 8071f5f:  mov eax, DWORD PTR [edx+0xc]
 8071f62:  test eax, eax
 8071f64:  je 8071f8a
 8071f66:  mov edx, DWORD PTR [ebp-0x14]
 8071f69:  mov ebx, DWORD PTR [eax+edx*4]
 8071f6c:  mov eax, 0x0
 8071f71:  test eax, eax
 8071f73:  je 8071eab
 8071f79:  mov DWORD PTR [esp], 0x80d2a80
 8071f80:  call 0
 8071f85:  jmp 8071eab
 8071f8a:  xor ebx, ebx
 8071f8c:  jmp 8071f6c
 8071f8e:  mov DWORD PTR [esp], 0x1c
 8071f95:  lea esi, [esi]
 8071f98:  call 804d6f0
 8071f9d:  test eax, eax
 8071f9f:  mov DWORD PTR [edi+0x14], eax
 8071fa2:  je 8071f8a
 8071fa4:  xor edx, edx
 8071fa6:  mov DWORD PTR [eax+edx], 0x0
 8071fad:  add edx, 0x4
 8071fb0:  cmp edx, 0x1c
 8071fb3:  jb 8071fa6
 8071fb5:  mov edx, DWORD PTR [edi+0x14]
 8071fb8:  mov DWORD PTR [edi+0x10], 0x80722a0
 8071fbf:  mov DWORD PTR [ebp-0x10], edx
 8071fc2:  mov edx, DWORD PTR [edx+0x14]
 8071fc5:  test edx, edx
 8071fc7:  jne 8071f55
 8071fc9:  jmp 8071ef5
 8071fce:  xchg ax, ax

08071fd0 <_nl_get_walt_digit>:
 8071fd0:  push ebp
 8071fd1:  mov ebp, esp
 8071fd3:  sub esp, 0x18
 8071fd6:  cmp eax, 0x63
 8071fd9:  mov DWORD PTR [ebp-0xc], ebx
 8071fdc:  mov ebx, edx
 8071fde:  mov DWORD PTR [ebp-0x8], esi
 8071fe1:  mov DWORD PTR [ebp-0x4], edi
 8071fe4:  mov DWORD PTR [ebp-0x10], eax
 8071fe7:  jbe 8072000
 8071fe9:  xor ebx, ebx
 8071feb:  mov eax, ebx
 8071fed:  mov esi, DWORD PTR [ebp-0x8]
 8071ff0:  mov ebx, DWORD PTR [ebp-0xc]
 8071ff3:  mov edi, DWORD PTR [ebp-0x4]
 8071ff6:  mov esp, ebp
 8071ff8:  pop ebp
 8071ff9:  ret
 8071ffa:  lea esi, [esi]
 8072000:  mov eax, DWORD PTR [edx+0x1ac]
 8072006:  mov edi, DWORD PTR [eax]
 8072008:  test edi, edi
 807200a:  je 8071fe9
 807200c:  mov eax, 0x0
 8072011:  test eax, eax
 8072013:  je 8072021
 8072015:  mov DWORD PTR [esp], 0x80d2a80
 807201c:  call 0
 8072021:  mov edi, DWORD PTR [ebx+0x14]
 8072024:  test edi, edi
 8072026:  je 80720b3
 807202c:  mov esi, DWORD PTR [edi+0x18]
 807202f:  test esi, esi
 8072031:  jne 8072084
 8072033:  mov esi, DWORD PTR [ebx+0x1ac]
 8072039:  mov DWORD PTR [edi+0x18], 0x1
 8072040:  test esi, esi
 8072042:  je 8072084
 8072044:  mov DWORD PTR [esp], 0x190
 807204b:  call 804d6f0
 8072050:  test eax, eax
 8072052:  mov DWORD PTR [edi+0x10], eax
 8072055:  je 80720af
 8072057:  xor ebx, ebx
 8072059:  lea esi, [esi]
 8072060:  mov eax, DWORD PTR [edi+0x10]
 8072063:  mov DWORD PTR [eax+ebx], esi
 8072066:  add ebx, 0x4
 8072069:  mov DWORD PTR [esp], esi
 807206c:  mov DWORD PTR [esp+0x4], 0x0
 8072074:  call 8094470
 8072079:  cmp ebx, 0x190
 807207f:  lea esi, [eax+0x4]
 8072082:  jne 8072060
 8072084:  mov eax, DWORD PTR [edi+0x10]
 8072087:  test eax, eax
 8072089:  je 80720af
 807208b:  mov edx, DWORD PTR [ebp-0x10]
 807208e:  mov ebx, DWORD PTR [eax+edx*4]
 8072091:  mov eax, 0x0
 8072096:  test eax, eax
 8072098:  je 8071feb
 807209e:  mov DWORD PTR [esp], 0x80d2a80
 80720a5:  call 0
 80720aa:  jmp 8071feb
 80720af:  xor ebx, ebx
 80720b1:  jmp 8072091
 80720b3:  mov DWORD PTR [esp], 0x1c
 80720ba:  lea esi, [esi]
 80720c0:  call 804d6f0
 80720c5:  test eax, eax
 80720c7:  mov DWORD PTR [ebx+0x14], eax
 80720ca:  je 80720af
 80720cc:  xor edx, edx
 80720ce:  mov DWORD PTR [eax+edx], 0x0
 80720d5:  add edx, 0x4
 80720d8:  cmp edx, 0x1c
 80720db:  jb 80720ce
 80720dd:  mov DWORD PTR [ebx+0x10], 0x80722a0
 80720e4:  mov edi, DWORD PTR [ebx+0x14]
 80720e7:  jmp 807202c
 80720ec:  lea esi, [esi]

080720f0 <_nl_parse_alt_digit>:
 80720f0:  push ebp
 80720f1:  mov ebp, esp
 80720f3:  push edi
 80720f4:  push esi
 80720f5:  push ebx
 80720f6:  sub esp, 0x24
 80720f9:  mov DWORD PTR [ebp-0x20], eax
 80720fc:  mov eax, DWORD PTR [eax]
 80720fe:  mov DWORD PTR [ebp-0x24], edx
 8072101:  mov DWORD PTR [ebp-0x18], eax
 8072104:  mov eax, DWORD PTR [edx+0x1ac]
 807210a:  mov DWORD PTR [ebp-0x14], 0xffffffff
 8072111:  mov eax, DWORD PTR [eax]
 8072113:  test eax, eax
 8072115:  je 80721db
 807211b:  mov eax, 0x0
 8072120:  test eax, eax
 8072122:  je 8072130
 8072124:  mov DWORD PTR [esp], 0x80d2a80
 807212b:  call 0
 8072130:  mov edx, DWORD PTR [ebp-0x24]
 8072133:  mov edi, DWORD PTR [edx+0x14]
 8072136:  test edi, edi
 8072138:  je 80721e6
 807213e:  mov eax, DWORD PTR [edi+0x14]
 8072141:  test eax, eax
 8072143:  je 8072225
 8072149:  mov edi, DWORD PTR [edi+0xc]
 807214c:  test edi, edi
 807214e:  mov DWORD PTR [ebp-0x1c], edi
 8072151:  je 8072282
 8072157:  mov DWORD PTR [ebp-0x14], 0xffffffff
 807215e:  xor esi, esi
 8072160:  mov DWORD PTR [ebp-0x10], 0x0
 8072167:  jmp 8072178
 8072169:  lea esi, [esi]
 8072170:  add esi, 0x1
 8072173:  cmp esi, 0x64
 8072176:  je 80721b8
 8072178:  mov eax, DWORD PTR [ebp-0x1c]
 807217b:  mov edi, DWORD PTR [eax+esi*4]
 807217e:  mov DWORD PTR [esp], edi
 8072181:  call 804eea0
 8072186:  cmp eax, DWORD PTR [ebp-0x10]
 8072189:  mov ebx, eax
 807218b:  jbe 8072170
 807218d:  mov edx, DWORD PTR [ebp-0x18]
 8072190:  mov DWORD PTR [esp+0x8], eax
 8072194:  mov DWORD PTR [esp], edi
 8072197:  mov DWORD PTR [esp+0x4], edx
 807219b:  call 806b230
 80721a0:  test eax, eax
 80721a2:  jne 8072170
 80721a4:  mov DWORD PTR [ebp-0x14], esi
 80721a7:  add esi, 0x1
 80721aa:  cmp esi, 0x64
 80721ad:  mov DWORD PTR [ebp-0x10], ebx
 80721b0:  jne 8072178
 80721b2:  lea esi, [esi]
 80721b8:  mov eax, 0x0
 80721bd:  test eax, eax
 80721bf:  je 80721cd
 80721c1:  mov DWORD PTR [esp], 0x80d2a80
 80721c8:  call 0
 80721cd:  cmp DWORD PTR [ebp-0x14], 0xff
 80721d1:  je 80721db
 80721d3:  mov eax, DWORD PTR [ebp-0x20]
 80721d6:  mov edx, DWORD PTR [ebp-0x10]
 80721d9:  add DWORD PTR [eax], edx
 80721db:  mov eax, DWORD PTR [ebp-0x14]
 80721de:  add esp, 0x24
 80721e1:  pop ebx
 80721e2:  pop esi
 80721e3:  pop edi
 80721e4:  pop ebp
 80721e5:  ret
 80721e6:  mov DWORD PTR [esp], 0x1c
 80721ed:  call 804d6f0
 80721f2:  mov edx, DWORD PTR [ebp-0x24]
 80721f5:  test eax, eax
 80721f7:  mov DWORD PTR [edx+0x14], eax
 80721fa:  je 8072282
 8072200:  xor edx, edx
 8072202:  mov DWORD PTR [eax+edx], 0x0
 8072209:  add edx, 0x4
 807220c:  cmp edx, 0x1c
 807220f:  jb 8072202
 8072211:  mov eax, DWORD PTR [ebp-0x24]
 8072214:  mov edi, DWORD PTR [eax+0x14]
 8072217:  mov DWORD PTR [eax+0x10], 0x80722a0
 807221e:  mov eax, DWORD PTR [edi+0x14]
 8072221:  test eax, eax
 8072223:  jne 807227a
 8072225:  mov edx, DWORD PTR [ebp-0x24]
 8072228:  mov esi, DWORD PTR [edx+0xe0]
 807222e:  mov DWORD PTR [edi+0x14], 0x1
 8072235:  test esi, esi
 8072237:  je 8072277
 8072239:  mov DWORD PTR [esp], 0x190
 8072240:  xor ebx, ebx
 8072242:  call 804d6f0
 8072247:  test eax, eax
 8072249:  mov DWORD PTR [edi+0xc], eax
 807224c:  je 8072295
 807224e:  xchg ax, ax
 8072250:  mov eax, DWORD PTR [edi+0xc]
 8072253:  mov DWORD PTR [eax+ebx], esi
 8072256:  add ebx, 0x4
 8072259:  mov DWORD PTR [esp], esi
 807225c:  mov DWORD PTR [esp+0x4], 0x0
 8072264:  call 806c400
 8072269:  cmp ebx, 0x190
 807226f:  lea esi, [eax+0x1]
 8072272:  jne 8072250
 8072274:  mov edx, DWORD PTR [ebp-0x24]
 8072277:  mov edi, DWORD PTR [edx+0x14]
 807227a:  test edi, edi
 807227c:  jne 8072149
 8072282:  mov DWORD PTR [ebp-0x14], 0xffffffff
 8072289:  mov DWORD PTR [ebp-0x10], 0x0
 8072290:  jmp 80721b8
 8072295:  mov eax, DWORD PTR [ebp-0x24]
 8072298:  mov edi, DWORD PTR [eax+0x14]
 807229b:  jmp 807227a
 807229d:  nop
 807229e:  nop
 807229f:  nop

080722a0 <_nl_cleanup_time>:
 80722a0:  push ebp
 80722a1:  mov ebp, esp
 80722a3:  push ebx
 80722a4:  sub esp, 0x4
 80722a7:  mov ebx, DWORD PTR [eax+0x14]
 80722aa:  test ebx, ebx
 80722ac:  je 80722e4
 80722ae:  mov DWORD PTR [eax+0x14], 0x0
 80722b5:  mov DWORD PTR [eax+0x10], 0x0
 80722bc:  mov eax, DWORD PTR [ebx]
 80722be:  mov DWORD PTR [esp], eax
 80722c1:  call 804b4a0
 80722c6:  mov eax, DWORD PTR [ebx+0xc]
 80722c9:  mov DWORD PTR [esp], eax
 80722cc:  call 804b4a0
 80722d1:  mov eax, DWORD PTR [ebx+0x10]
 80722d4:  mov DWORD PTR [esp], eax
 80722d7:  call 804b4a0
 80722dc:  mov DWORD PTR [esp], ebx
 80722df:  call 804b4a0
 80722e4:  add esp, 0x4
 80722e7:  pop ebx
 80722e8:  pop ebp
 80722e9:  ret
 80722ea:  nop
 80722eb:  nop
 80722ec:  nop
 80722ed:  nop
 80722ee:  nop
 80722ef:  nop

080722f0 <__uname>:
 80722f0:  mov edx, ebx
 80722f2:  mov ebx, DWORD PTR [esp+0x4]
 80722f6:  mov eax, 0x7a
 80722fb:  int 0x80
 80722fd:  mov ebx, edx
 80722ff:  cmp eax, 0xfffff001
 8072304:  jae 8051470
 807230a:  ret
 807230b:  nop
 807230c:  nop
 807230d:  nop
 807230e:  nop
 807230f:  nop

08072310 <__libc_fork>:
 8072310:  push ebp
 8072311:  mov ebp, esp
 8072313:  push edi
 8072314:  push esi
 8072315:  push ebx
 8072316:  sub esp, 0x20
 8072319:  lea esi, [esi]
 8072320:  mov ebx, DWORD PTR ds:0x80d2eb8
 8072326:  test ebx, ebx
 8072328:  je 8072378
 807232a:  mov ecx, DWORD PTR [ebx+0x14]
 807232d:  test ecx, ecx
 807232f:  je 8072320
 8072331:  mov esi, DWORD PTR ds:0x80d2eb8
 8072337:  lea edx, [ecx+0x1]
 807233a:  mov eax, ecx
 807233c:  cmpxchg DWORD PTR [esi+0x14], edx
 8072341:  jne 8072320
 8072343:  xor esi, esi
 8072345:  jmp 807234e
 8072347:  nop
 8072348:  inc DWORD PTR [ebx+0x14]
 807234c:  mov esi, eax
 807234e:  mov eax, DWORD PTR [ebx+0x4]
 8072351:  test eax, eax
 8072353:  je 8072357
 8072355:  call eax
 8072357:  sub esp, 0x18
 807235a:  lea eax, [esp+0x1f]
 807235e:  and eax, 0xf0
 8072361:  mov DWORD PTR [eax], ebx
 8072363:  mov ebx, DWORD PTR [ebx]
 8072365:  mov DWORD PTR [eax+0x4], esi
 8072368:  test ebx, ebx
 807236a:  jne 8072348
 807236c:  mov DWORD PTR [ebp-0x18], eax
 807236f:  jmp 807237f
 8072371:  lea esi, [esi]
 8072378:  mov DWORD PTR [ebp-0x18], 0x0
 807237f:  call 80688d0
 8072384:  mov edx, DWORD PTR gs:0x48
 807238b:  mov DWORD PTR [ebp-0x14], edx
 807238e:  mov ecx, DWORD PTR gs:0x4c
 8072395:  mov eax, ecx
 8072397:  mov DWORD PTR [ebp-0x10], ecx
 807239a:  neg eax
 807239c:  mov gs:0x4c, eax
 80723a2:  xor esi, esi
 80723a4:  mov ebx, 0x1200011
 80723a9:  mov eax, gs:0x8
 80723af:  add eax, 0x48
 80723b2:  mov ecx, esi
 80723b4:  mov edx, esi
 80723b6:  mov edi, eax
 80723b8:  mov eax, 0x78
 80723bd:  int 0x80
 80723bf:  cmp eax, 0xfffff000
 80723c4:  mov ebx, eax
 80723c6:  ja 80724a3
 80723cc:  test eax, eax
 80723ce:  mov esi, eax
 80723d0:  jne 80724c0
 80723d6:  mov eax, gs:0x48
 80723dc:  cmp DWORD PTR [ebp-0x14], eax
 80723df:  je 807253d
 80723e5:  mov eax, ds:0x80d2eb4
 80723ea:  test eax, eax
 80723ec:  je 80723f1
 80723ee:  add DWORD PTR [eax], 0x4
 80723f1:  mov eax, gs:0x48
 80723f7:  mov gs:0x4c, eax
 80723fd:  call 8068890
 8072402:  mov ebx, eax
 8072404:  jmp 8072431
 8072406:  xchg ax, ax
 8072408:  mov DWORD PTR [esp], ebx
 807240b:  call 80688c0
 8072410:  mov eax, DWORD PTR [eax+0x48]
 8072413:  mov DWORD PTR [eax], 0x0
 8072419:  mov DWORD PTR [eax+0x4], 0x0
 8072420:  mov DWORD PTR [eax+0x8], 0x0
 8072427:  mov DWORD PTR [esp], ebx
 807242a:  call 80688b0
 807242f:  mov ebx, eax
 8072431:  call 80688a0
 8072436:  cmp ebx, eax
 8072438:  jne 8072408
 807243a:  call 8068950
 807243f:  xor eax, eax
 8072441:  mov DWORD PTR [eax+0x80d0d7c], 0x0
 807244b:  add eax, 0x4
 807244e:  cmp eax, 0x18
 8072451:  jb 8072441
 8072453:  mov ecx, DWORD PTR [ebp-0x18]
 8072456:  mov DWORD PTR ds:0x80d0d88, 0x1
 8072460:  test ecx, ecx
 8072462:  je 807248f
 8072464:  lea esi, [esi]
 8072468:  mov edx, DWORD PTR [ebp-0x18]
 807246b:  mov eax, DWORD PTR [edx]
 807246d:  mov edx, DWORD PTR [eax+0xc]
 8072470:  test edx, edx
 8072472:  je 807247b
 8072474:  call edx
 8072476:  mov ecx, DWORD PTR [ebp-0x18]
 8072479:  mov eax, DWORD PTR [ecx]
 807247b:  mov edi, DWORD PTR [ebp-0x18]
 807247e:  mov DWORD PTR [eax+0x14], 0x1
 8072485:  mov edi, DWORD PTR [edi+0x4]
 8072488:  test edi, edi
 807248a:  mov DWORD PTR [ebp-0x18], edi
 807248d:  jne 8072468
 807248f:  mov DWORD PTR ds:0x80d22c0, 0x0
 8072499:  lea esp, [ebp-0xc]
 807249c:  mov eax, esi
 807249e:  pop ebx
 807249f:  pop esi
 80724a0:  pop edi
 80724a1:  pop ebp
 80724a2:  ret
 80724a3:  mov edx, 0xffffffe8
 80724a9:  neg ebx
 80724ab:  mov esi, 0xffffffff
 80724b0:  mov eax, gs:0x0
 80724b6:  mov DWORD PTR [eax+edx], ebx
 80724b9:  lea esi, [esi]
 80724c0:  mov eax, gs:0x48
 80724c6:  cmp DWORD PTR [ebp-0x14], eax
 80724c9:  jne 8072561
 80724cf:  mov eax, DWORD PTR [ebp-0x10]
 80724d2:  mov gs:0x4c, eax
 80724d8:  call 8068910
 80724dd:  mov edx, DWORD PTR [ebp-0x18]
 80724e0:  test edx, edx
 80724e2:  je 8072499
 80724e4:  lea esi, [esi]
 80724e8:  mov edx, DWORD PTR [ebp-0x18]
 80724eb:  mov ebx, DWORD PTR [edx]
 80724ed:  mov eax, DWORD PTR [ebx+0x8]
 80724f0:  test eax, eax
 80724f2:  je 80724fb
 80724f4:  call eax
 80724f6:  mov ecx, DWORD PTR [ebp-0x18]
 80724f9:  mov ebx, DWORD PTR [ecx]
 80724fb:  dec DWORD PTR [ebx+0x14]
 80724ff:  sete al
 8072502:  test al, al
 8072504:  je 8072526
 8072506:  mov eax, DWORD PTR [ebx+0x18]
 8072509:  test eax, eax
 807250b:  je 8072526
 807250d:  mov edx, 0x1
 8072512:  mov ecx, DWORD PTR gs:0x20
 8072519:  mov eax, 0xf0
 807251e:  mov ebx, DWORD PTR [ebx+0x14]
 8072521:  or ecx, 0x1
 8072524:  int 0x80
 8072526:  mov edi, DWORD PTR [ebp-0x18]
 8072529:  mov edi, DWORD PTR [edi+0x4]
 807252c:  test edi, edi
 807252e:  mov DWORD PTR [ebp-0x18], edi
 8072531:  jne 80724e8
 8072533:  lea esp, [ebp-0xc]
 8072536:  mov eax, esi
 8072538:  pop ebx
 8072539:  pop esi
 807253a:  pop edi
 807253b:  pop ebp
 807253c:  ret
 807253d:  mov DWORD PTR [esp+0xc], 0x80b31b3
 8072545:  mov DWORD PTR [esp+0x8], 0x8d
 807254d:  mov DWORD PTR [esp+0x4], 0x80b2cb0
 8072555:  mov DWORD PTR [esp], 0x80b2ce0
 807255c:  call 8051490
 8072561:  mov DWORD PTR [esp+0xc], 0x80b31b3
 8072569:  mov DWORD PTR [esp+0x8], 0xc1
 8072571:  mov DWORD PTR [esp+0x4], 0x80b2cb0
 8072579:  mov DWORD PTR [esp], 0x80b2f08
 8072580:  call 8051490
 8072585:  nop
 8072586:  nop
 8072587:  nop
 8072588:  nop
 8072589:  nop
 807258a:  nop
 807258b:  nop
 807258c:  nop
 807258d:  nop
 807258e:  nop
 807258f:  nop

08072590 <__getpid>:
 8072590:  mov edx, DWORD PTR gs:0x4c
 8072597:  cmp edx, 0x0
 807259a:  mov eax, edx
 807259c:  jle 80725a0
 807259e:  repz ret
 80725a0:  jne 80725ac
 80725a2:  mov eax, gs:0x48
 80725a8:  test eax, eax
 80725aa:  jne 807259e
 80725ac:  mov eax, 0x14
 80725b1:  int 0x80
 80725b3:  test edx, edx
 80725b5:  mov ecx, eax
 80725b7:  jne 807259e
 80725b9:  mov DWORD PTR gs:0x48, ecx
 80725c0:  ret
 80725c1:  nop
 80725c2:  nop
 80725c3:  nop
 80725c4:  nop
 80725c5:  nop
 80725c6:  nop
 80725c7:  nop
 80725c8:  nop
 80725c9:  nop
 80725ca:  nop
 80725cb:  nop
 80725cc:  nop
 80725cd:  nop
 80725ce:  nop
 80725cf:  nop

080725d0 <__getuid>:
 80725d0:  push ebp
 80725d1:  mov ebp, esp
 80725d3:  mov eax, 0xc7
 80725d8:  int 0x80
 80725da:  pop ebp
 80725db:  ret
 80725dc:  nop
 80725dd:  nop
 80725de:  nop
 80725df:  nop

080725e0 <__geteuid>:
 80725e0:  push ebp
 80725e1:  mov ebp, esp
 80725e3:  mov eax, 0xc9
 80725e8:  int 0x80
 80725ea:  pop ebp
 80725eb:  ret
 80725ec:  nop
 80725ed:  nop
 80725ee:  nop
 80725ef:  nop

080725f0 <__getgid>:
 80725f0:  push ebp
 80725f1:  mov ebp, esp
 80725f3:  mov eax, 0xc8
 80725f8:  int 0x80
 80725fa:  pop ebp
 80725fb:  ret
 80725fc:  nop
 80725fd:  nop
 80725fe:  nop
 80725ff:  nop

08072600 <__getegid>:
 8072600:  push ebp
 8072601:  mov ebp, esp
 8072603:  mov eax, 0xca
 8072608:  int 0x80
 807260a:  pop ebp
 807260b:  ret
 807260c:  nop
 807260d:  nop
 807260e:  nop
 807260f:  nop

08072610 <intel_02_known_compare>:
 8072610:  push ebp
 8072611:  xor ecx, ecx
 8072613:  mov ebp, esp
 8072615:  mov eax, DWORD PTR [ebp+0xc]
 8072618:  mov edx, DWORD PTR [eax]
 807261a:  mov eax, DWORD PTR [ebp+0x8]
 807261d:  cmp DWORD PTR [eax], edx
 807261f:  je 8072626
 8072621:  sbb ecx, ecx
 8072623:  or ecx, 0x1
 8072626:  mov eax, ecx
 8072628:  pop ebp
 8072629:  ret
 807262a:  lea esi, [esi]

08072630 <__sysconf_check_spec>:
 8072630:  push ebp
 8072631:  mov ebp, esp
 8072633:  push edi
 8072634:  mov edi, 0x80b31cb
 8072639:  push esi
 807263a:  mov esi, 0x14
 807263f:  push ebx
 8072640:  sub esp, 0x7c
 8072643:  mov edx, 0xffffffe8
 8072649:  mov DWORD PTR [ebp-0x74], eax
 807264c:  mov eax, gs:0x0
 8072652:  mov edx, DWORD PTR [eax+edx]
 8072655:  mov DWORD PTR [ebp-0x7c], eax
 8072658:  mov DWORD PTR [esp], 0x80b31bf
 807265f:  mov DWORD PTR [ebp-0x70], edx
 8072662:  call 80569d0
 8072667:  test eax, eax
 8072669:  mov ebx, eax
 807266b:  je 8072679
 807266d:  mov DWORD PTR [esp], eax
 8072670:  mov edi, ebx
 8072672:  call 804eea0
 8072677:  mov esi, eax
 8072679:  mov ecx, DWORD PTR [ebp-0x74]
 807267c:  mov DWORD PTR [esp], ecx
 807267f:  call 804eea0
 8072684:  mov DWORD PTR [ebp-0x78], eax
 8072687:  lea eax, [esi+eax+0x1d]
 807268b:  and eax, 0xfc
 807268e:  sub esp, eax
 8072690:  lea ebx, [esp+0x1b]
 8072694:  and ebx, 0xf0
 8072697:  mov DWORD PTR [esp+0x8], esi
 807269b:  mov DWORD PTR [esp+0x4], edi
 807269f:  mov DWORD PTR [esp], ebx
 80726a2:  call 806c310
 80726a7:  mov DWORD PTR [eax], 0x534f502f
 80726ad:  mov DWORD PTR [eax+0x4], 0x565f5849
 80726b4:  mov WORD PTR [eax+0x8], 0x5f36
 80726ba:  mov edx, DWORD PTR [ebp-0x78]
 80726bd:  add eax, 0xa
 80726c0:  mov DWORD PTR [esp], eax
 80726c3:  add edx, 0x1
 80726c6:  mov DWORD PTR [esp+0x8], edx
 80726ca:  mov edx, DWORD PTR [ebp-0x74]
 80726cd:  mov DWORD PTR [esp+0x4], edx
 80726d1:  call 804efc0
 80726d6:  lea eax, [ebp-0x6c]
 80726d9:  mov DWORD PTR [esp+0x4], ebx
 80726dd:  mov DWORD PTR [esp+0x8], eax
 80726e1:  mov DWORD PTR [esp], 0x3
 80726e8:  call 8073100
 80726ed:  mov ebx, DWORD PTR [ebp-0x7c]
 80726f0:  mov edx, DWORD PTR [ebp-0x70]
 80726f3:  mov ecx, 0xffffffe8
 80726f9:  sar eax, 0x1f
 80726fc:  mov DWORD PTR [ebx+ecx], edx
 80726ff:  or eax, 0x1
 8072702:  lea esp, [ebp-0xc]
 8072705:  pop ebx
 8072706:  pop esi
 8072707:  pop edi
 8072708:  pop ebp
 8072709:  ret
 807270a:  lea esi, [esi]

08072710 <handle_i486>:
 8072710:  push ebp
 8072711:  sub eax, 0xb9
 8072716:  mov ebp, esp
 8072718:  sub esp, 0x10
 807271b:  cmp eax, 0xd
 807271e:  jbe 8072748
 8072720:  mov DWORD PTR [esp+0xc], 0x80b324e
 8072728:  mov DWORD PTR [esp+0x8], 0x3d
 8072730:  mov DWORD PTR [esp+0x4], 0x80b3278
 8072738:  mov DWORD PTR [esp], 0x80b31e0
 807273f:  call 8051490
 8072744:  lea esi, [esi]
 8072748:  jmp DWORD PTR [eax*4+0x80b32c0]
 807274f:  nop
 8072750:  mov eax, 0xffffffff
 8072755:  leave
 8072756:  ret
 8072757:  nop
 8072758:  mov eax, 0x10
 807275d:  leave
 807275e:  xchg ax, ax
 8072760:  ret
 8072761:  lea esi, [esi]
 8072768:  xor eax, eax
 807276a:  leave
 807276b:  nop
 807276c:  lea esi, [esi]
 8072770:  ret
 8072771:  lea esi, [esi]
 8072778:  mov eax, 0x2000
 807277d:  leave
 807277e:  xchg ax, ax
 8072780:  ret
 8072781:  jmp 8072790
 8072783:  nop
 8072784:  nop
 8072785:  nop
 8072786:  nop
 8072787:  nop
 8072788:  nop
 8072789:  nop
 807278a:  nop
 807278b:  nop
 807278c:  nop
 807278d:  nop
 807278e:  nop
 807278f:  nop

08072790 <handle_amd>:
 8072790:  push ebp
 8072791:  mov ebp, esp
 8072793:  sub esp, 0x24
 8072796:  mov DWORD PTR [ebp-0x14], eax
 8072799:  mov eax, 0x80000000
 807279e:  mov DWORD PTR [ebp-0xc], ebx
 80727a1:  mov DWORD PTR [ebp-0x8], esi
 80727a4:  mov DWORD PTR [ebp-0x4], edi
 80727a7:  xchg esi, ebx
 80727a9:  cpuid
 80727ab:  xchg esi, ebx
 80727ad:  cmp DWORD PTR [ebp-0x14], 0xc1
 80727b4:  mov DWORD PTR [ebp-0x10], eax
 80727b7:  jg 8072820
 80727b9:  xor eax, eax
 80727bb:  cmp DWORD PTR [ebp-0x14], 0xbe
 80727c2:  setg al
 80727c5:  sub eax, 0x7ffffffb
 80727ca:  cmp eax, DWORD PTR [ebp-0x10]
 80727cd:  ja 8072820
 80727cf:  xchg esi, ebx
 80727d1:  cpuid
 80727d3:  xchg esi, ebx
 80727d5:  cmp DWORD PTR [ebp-0x14], 0xbb
 80727dc:  mov edi, ecx
 80727de:  jg 80727e6
 80727e0:  add DWORD PTR [ebp-0x14], 0x3
 80727e4:  mov edi, edx
 80727e6:  mov eax, DWORD PTR [ebp-0x14]
 80727e9:  sub eax, 0xbc
 80727ee:  cmp eax, 0x5
 80727f1:  jbe 8072830
 80727f3:  mov DWORD PTR [esp+0xc], 0x80b326b
 80727fb:  mov DWORD PTR [esp+0x8], 0x169
 8072803:  mov DWORD PTR [esp+0x4], 0x80b3278
 807280b:  mov DWORD PTR [esp], 0x80b31e0
 8072812:  call 8051490
 8072817:  nop
 8072818:  test di, 0xf000
 807281d:  jne 8072838
 807281f:  nop
 8072820:  xor eax, eax
 8072822:  mov ebx, DWORD PTR [ebp-0xc]
 8072825:  mov esi, DWORD PTR [ebp-0x8]
 8072828:  mov edi, DWORD PTR [ebp-0x4]
 807282b:  mov esp, ebp
 807282d:  pop ebp
 807282e:  ret
 807282f:  nop
 8072830:  jmp DWORD PTR [eax*4+0x80b32f8]
 8072837:  nop
 8072838:  mov eax, edi
 807283a:  and eax, 0xff
 807283f:  jmp 8072822
 8072841:  lea esi, [esi]
 8072848:  mov edx, edi
 807284a:  shr edx, 0xc
 807284d:  mov eax, edx
 807284f:  and eax, 0xf
 8072852:  jmp DWORD PTR [eax*4+0x80b3310]
 8072859:  lea esi, [esi]
 8072860:  test di, 0xf000
 8072865:  je 8072820
 8072867:  mov eax, edi
 8072869:  shr eax, 0x6
 807286c:  and eax, 0x3fffc00
 8072871:  jmp 8072822
 8072873:  nop
 8072874:  lea esi, [esi]
 8072878:  mov edx, edi
 807287a:  shr edx, 0x10
 807287d:  movzx eax, dl
 8072880:  cmp eax, 0xff
 8072885:  jne 8072822
 8072887:  lea eax, [edx*4]
 807288e:  and eax, 0x3fc00
 8072893:  jmp 8072822
 8072895:  lea esi, [esi]
 8072898:  mov eax, edi
 807289a:  shr eax, 0xe
 807289d:  and eax, 0x3fc00
 80728a2:  jmp 8072822
 80728a7:  mov eax, edx
 80728a9:  shl eax, 0x6
 80728ac:  and eax, 0x3fffc00
 80728b1:  jmp 8072822
 80728b6:  mov eax, 0x10
 80728bb:  jmp 8072822
 80728c0:  mov eax, 0x8
 80728c5:  jmp 8072822
 80728ca:  mov eax, edx
 80728cc:  and eax, 0xf
 80728cf:  nop
 80728d0:  jmp 8072822
 80728d5:  lea esi, [esi]
 80728d9:  lea edi, [edi]

080728e0 <intel_check_word>:
 80728e0:  push ebp
 80728e1:  mov ebp, esp
 80728e3:  push edi
 80728e4:  push esi
 80728e5:  mov esi, edx
 80728e7:  push ebx
 80728e8:  sub esp, 0x44
 80728eb:  cmp edx, 0x0
 80728ee:  mov DWORD PTR [ebp-0x28], eax
 80728f1:  mov DWORD PTR [ebp-0x2c], ecx
 80728f4:  jl 80729a0
 80728fa:  je 80729a0
 8072900:  mov ecx, eax
 8072902:  mov edx, 0x55555556
 8072907:  sub ecx, 0xb9
 807290d:  mov eax, ecx
 807290f:  imul edx
 8072911:  sar ecx, 0x1f
 8072914:  sub edx, ecx
 8072916:  lea edx, [edx+edx*2+0xb9]
 807291d:  mov DWORD PTR [ebp-0x3c], edx
 8072920:  jmp 8072981
 8072922:  lea esi, [esi]
 8072928:  cmp ebx, 0x49
 807292b:  je 80729b0
 8072931:  mov DWORD PTR [ebp-0x20], ebx
 8072934:  lea eax, [ebp-0x20]
 8072937:  mov DWORD PTR [esp+0x10], 0x8072610
 807293f:  mov DWORD PTR [esp+0xc], 0x14
 8072947:  mov DWORD PTR [esp+0x8], 0x30
 807294f:  mov DWORD PTR [esp+0x4], 0x80b3720
 8072957:  mov DWORD PTR [esp], eax
 807295a:  call 8055c60
 807295f:  test eax, eax
 8072961:  je 807297a
 8072963:  mov edx, DWORD PTR [eax+0x4]
 8072966:  cmp edx, DWORD PTR [ebp-0x3c]
 8072969:  je 8072a20
 807296f:  cmp edx, 0xbf
 8072975:  lea esi, [esi]
 8072978:  je 80729f0
 807297a:  shr esi, 0x8
 807297d:  test esi, esi
 807297f:  je 80729a0
 8072981:  mov ebx, esi
 8072983:  and ebx, 0xff
 8072989:  cmp ebx, 0x40
 807298c:  jne 8072928
 807298e:  mov edx, DWORD PTR [ebp+0x8]
 8072991:  cmp DWORD PTR [ebp-0x3c], 0xc2
 8072998:  mov BYTE PTR [edx], 0x1
 807299b:  jne 807297a
 807299d:  lea esi, [esi]
 80729a0:  xor eax, eax
 80729a2:  add esp, 0x44
 80729a5:  pop ebx
 80729a6:  pop esi
 80729a7:  pop edi
 80729a8:  pop ebp
 80729a9:  ret
 80729aa:  lea esi, [esi]
 80729b0:  cmp DWORD PTR [ebp-0x3c], 0xc2
 80729b7:  jne 8072931
 80729bd:  mov eax, 0x1
 80729c2:  xchg edi, ebx
 80729c4:  cpuid
 80729c6:  xchg edi, ebx
 80729c8:  mov edx, eax
 80729ca:  shr edx, 0x8
 80729cd:  mov DWORD PTR [ebp-0x38], eax
 80729d0:  shr eax, 0x14
 80729d3:  and edx, 0xf
 80729d6:  and eax, 0xff
 80729db:  add edx, eax
 80729dd:  cmp edx, 0xf
 80729e0:  je 80729f8
 80729e2:  mov DWORD PTR [ebp-0x3c], 0xc2
 80729e9:  jmp 8072931
 80729ee:  xchg ax, ax
 80729f0:  mov edx, DWORD PTR [ebp-0x2c]
 80729f3:  mov BYTE PTR [edx], 0x1
 80729f6:  jmp 807297a
 80729f8:  mov eax, DWORD PTR [ebp-0x38]
 80729fb:  shr DWORD PTR [ebp-0x38], 0x4
 80729ff:  and DWORD PTR [ebp-0x38], 0xf
 8072a03:  shr eax, 0xc
 8072a06:  and eax, 0xf0
 8072a0b:  add eax, DWORD PTR [ebp-0x38]
 8072a0e:  cmp eax, 0x6
 8072a11:  jne 80729e2
 8072a13:  sub DWORD PTR [ebp-0x28], 0x3
 8072a17:  jmp 8072931
 8072a1c:  lea esi, [esi]
 8072a20:  mov edx, DWORD PTR [ebp-0x28]
 8072a23:  sub edx, DWORD PTR [ebp-0x3c]
 8072a26:  je 8072a45
 8072a28:  cmp edx, 0x1
 8072a2b:  nop
 8072a2c:  lea esi, [esi]
 8072a30:  je 8072a50
 8072a32:  cmp edx, 0x2
 8072a35:  lea esi, [esi]
 8072a38:  jne 8072a58
 8072a3a:  mov eax, DWORD PTR [eax+0x10]
 8072a3d:  lea esi, [esi]
 8072a40:  jmp 80729a2
 8072a45:  mov eax, DWORD PTR [eax+0x8]
 8072a48:  add esp, 0x44
 8072a4b:  pop ebx
 8072a4c:  pop esi
 8072a4d:  pop edi
 8072a4e:  pop ebp
 8072a4f:  ret
 8072a50:  mov eax, DWORD PTR [eax+0xc]
 8072a53:  jmp 80729a2
 8072a58:  mov DWORD PTR [esp+0xc], 0x80b325a
 8072a60:  mov DWORD PTR [esp+0x8], 0xda
 8072a68:  mov DWORD PTR [esp+0x4], 0x80b3278
 8072a70:  mov DWORD PTR [esp], 0x80b31f2
 8072a77:  call 8051490
 8072a7c:  lea esi, [esi]

08072a80 <handle_intel>:
 8072a80:  push ebp
 8072a81:  xor ecx, ecx
 8072a83:  mov ebp, esp
 8072a85:  push edi
 8072a86:  push esi
 8072a87:  mov esi, eax
 8072a89:  push ebx
 8072a8a:  sub esp, 0x14
 8072a8d:  cmp edx, 0x1
 8072a90:  jbe 8072b60
 8072a96:  mov BYTE PTR [ebp-0xd], 0x0
 8072a9a:  mov ebx, 0x1
 8072a9f:  mov BYTE PTR [ebp-0xe], 0x0
 8072aa3:  mov DWORD PTR [ebp-0x1c], 0x1
 8072aaa:  mov eax, 0x2
 8072aaf:  xchg edi, ebx
 8072ab1:  cpuid
 8072ab3:  xchg edi, ebx
 8072ab5:  cmp ebx, 0x1
 8072ab8:  mov DWORD PTR [ebp-0x14], edx
 8072abb:  mov DWORD PTR [ebp-0x18], ecx
 8072abe:  je 8072b38
 8072ac0:  lea ecx, [ebp-0xd]
 8072ac3:  mov edx, eax
 8072ac5:  mov DWORD PTR [esp], ecx
 8072ac8:  mov eax, esi
 8072aca:  lea ecx, [ebp-0xe]
 8072acd:  call 80728e0
 8072ad2:  test eax, eax
 8072ad4:  mov ecx, eax
 8072ad6:  jne 8072b60
 8072adc:  lea eax, [ebp-0xd]
 8072adf:  mov edx, edi
 8072ae1:  mov DWORD PTR [esp], eax
 8072ae4:  lea ecx, [ebp-0xe]
 8072ae7:  mov eax, esi
 8072ae9:  call 80728e0
 8072aee:  test eax, eax
 8072af0:  mov ecx, eax
 8072af2:  jne 8072b60
 8072af4:  lea edx, [ebp-0xd]
 8072af7:  mov eax, esi
 8072af9:  mov DWORD PTR [esp], edx
 8072afc:  mov edx, DWORD PTR [ebp-0x18]
 8072aff:  lea ecx, [ebp-0xe]
 8072b02:  call 80728e0
 8072b07:  test eax, eax
 8072b09:  mov ecx, eax
 8072b0b:  jne 8072b60
 8072b0d:  mov edx, DWORD PTR [ebp-0x14]
 8072b10:  lea ecx, [ebp-0xd]
 8072b13:  mov eax, esi
 8072b15:  mov DWORD PTR [esp], ecx
 8072b18:  lea ecx, [ebp-0xe]
 8072b1b:  call 80728e0
 8072b20:  test eax, eax
 8072b22:  mov ecx, eax
 8072b24:  jne 8072b60
 8072b26:  cmp DWORD PTR [ebp-0x1c], ebx
 8072b29:  jbe 8072b48
 8072b2b:  add ebx, 0x1
 8072b2e:  xchg ax, ax
 8072b30:  jmp 8072aaa
 8072b35:  lea esi, [esi]
 8072b38:  movzx edx, al
 8072b3b:  xor al, al
 8072b3d:  mov DWORD PTR [ebp-0x1c], edx
 8072b40:  jmp 8072ac0
 8072b45:  lea esi, [esi]
 8072b48:  lea eax, [esi-0xbf]
 8072b4e:  cmp eax, 0x5
 8072b51:  ja 8072b60
 8072b53:  cmp BYTE PTR [ebp-0xd], 0x1
 8072b57:  sbb ecx, ecx
 8072b59:  not ecx
 8072b5b:  nop
 8072b5c:  lea esi, [esi]
 8072b60:  add esp, 0x14
 8072b63:  mov eax, ecx
 8072b65:  pop ebx
 8072b66:  pop esi
 8072b67:  pop edi
 8072b68:  pop ebp
 8072b69:  ret
 8072b6a:  lea esi, [esi]

08072b70 <__sysconf>:
 8072b70:  push ebp
 8072b71:  mov ebp, esp
 8072b73:  sub esp, 0x54
 8072b76:  mov DWORD PTR [ebp-0x8], esi
 8072b79:  mov esi, DWORD PTR [ebp+0x8]
 8072b7c:  mov DWORD PTR [ebp-0xc], ebx
 8072b7f:  mov DWORD PTR [ebp-0x4], edi
 8072b82:  lea eax, [esi-0xb9]
 8072b88:  cmp eax, 0xe
 8072b8b:  jbe 8072d90
 8072b91:  cmp esi, 0x22
 8072b94:  je 8072d80
 8072b9a:  jle 8072be8
 8072b9c:  cmp esi, 0x8a
 8072ba2:  lea esi, [esi]
 8072ba8:  jge 8072c70
 8072bae:  cmp esi, 0xec
 8072bb4:  lea esi, [esi]
 8072bb8:  jbe 8072c38
 8072bba:  mov edx, 0xffffffe8
 8072bc0:  mov eax, gs:0x0
 8072bc6:  mov DWORD PTR [eax+edx], 0x16
 8072bcd:  mov edx, 0xffffffff
 8072bd2:  lea esi, [esi]
 8072bd8:  mov ebx, DWORD PTR [ebp-0xc]
 8072bdb:  mov eax, edx
 8072bdd:  mov esi, DWORD PTR [ebp-0x8]
 8072be0:  mov edi, DWORD PTR [ebp-0x4]
 8072be3:  mov esp, ebp
 8072be5:  pop ebp
 8072be6:  ret
 8072be7:  nop
 8072be8:  test esi, esi
 8072bea:  jne 8072ca8
 8072bf0:  call 80512d0
 8072bf5:  cmp eax, 0x20616
 8072bfa:  lea esi, [esi]
 8072c00:  jle 8072d60
 8072c06:  lea eax, [ebp-0x20]
 8072c09:  mov DWORD PTR [esp+0x4], eax
 8072c0d:  mov DWORD PTR [esp], 0x3
 8072c14:  call 8073320
 8072c19:  test eax, eax
 8072c1b:  jne 8072d60
 8072c21:  mov eax, DWORD PTR [ebp-0x20]
 8072c24:  cmp eax, 0x7ffff
 8072c29:  jbe 8072d60
 8072c2f:  mov edx, eax
 8072c31:  shr edx, 0x2
 8072c34:  jmp 8072bd8
 8072c36:  xchg ax, ax
 8072c38:  jmp DWORD PTR [esi*4+0x80b3350]
 8072c3f:  nop
 8072c40:  xor ebx, ebx
 8072c42:  cmp esi, 0x8a
 8072c48:  setne bl
 8072c4b:  add ebx, 0x2
 8072c4e:  lea ecx, [ebp-0x18]
 8072c51:  mov eax, 0x10a
 8072c56:  int 0x80
 8072c58:  cmp eax, 0xfffff000
 8072c5d:  ja 8072c9c
 8072c5f:  mov edx, 0x30db0
 8072c64:  jmp 8072bd8
 8072c69:  lea esi, [esi]
 8072c70:  cmp esi, 0x8b
 8072c76:  jle 8072c40
 8072c78:  cmp esi, 0x95
 8072c7e:  xchg ax, ax
 8072c80:  jne 8072bae
 8072c86:  lea ecx, [ebp-0x18]
 8072c89:  mov ebx, 0x1
 8072c8e:  mov eax, 0x10a
 8072c93:  int 0x80
 8072c95:  cmp eax, 0xfffff000
 8072c9a:  jbe 8072c5f
 8072c9c:  mov edx, 0xffffffff
 8072ca1:  jmp 8072bd8
 8072ca6:  xchg ax, ax
 8072ca8:  cmp esi, 0x3
 8072cab:  jne 8072bae
 8072cb1:  mov eax, 0x80b3231
 8072cb6:  mov DWORD PTR [esp+0x4], 0x0
 8072cbe:  lea edi, [ebp-0x40]
 8072cc1:  mov DWORD PTR [esp], eax
 8072cc4:  call 804f1fa
 8072cc9:  mov ecx, DWORD PTR gs:0x0
 8072cd0:  mov DWORD PTR [ebp-0x44], ecx
 8072cd3:  cmp eax, 0xff
 8072cd6:  mov ebx, eax
 8072cd8:  je 8072bae
 8072cde:  xchg ax, ax
 8072ce0:  mov DWORD PTR [esp+0x8], 0x1f
 8072ce8:  mov DWORD PTR [esp+0x4], edi
 8072cec:  mov DWORD PTR [esp], ebx
 8072cef:  call 804f25a
 8072cf4:  cmp eax, 0xff
 8072cf7:  mov edx, eax
 8072cf9:  jne 8072d09
 8072cfb:  mov eax, 0xffffffe8
 8072d00:  mov ecx, DWORD PTR [ebp-0x44]
 8072d03:  cmp DWORD PTR [ecx+eax], 0x4
 8072d07:  je 8072ce0
 8072d09:  mov eax, 0x6
 8072d0e:  int 0x80
 8072d10:  test edx, edx
 8072d12:  jle 8072bae
 8072d18:  lea eax, [ebp-0x10]
 8072d1b:  mov BYTE PTR [ebp+edx-0x40], 0x0
 8072d20:  mov DWORD PTR [esp+0x8], 0xa
 8072d28:  mov DWORD PTR [esp+0x4], eax
 8072d2c:  mov DWORD PTR [esp], edi
 8072d2f:  call 8056a00
 8072d34:  mov edx, eax
 8072d36:  mov eax, DWORD PTR [ebp-0x10]
 8072d39:  cmp eax, edi
 8072d3b:  je 8072bae
 8072d41:  movzx eax, BYTE PTR [eax]
 8072d44:  test al, al
 8072d46:  je 8072bd8
 8072d4c:  cmp al, 0xa
 8072d4e:  jne 8072bae
 8072d54:  lea esi, [esi]
 8072d58:  jmp 8072bd8
 8072d5d:  lea esi, [esi]
 8072d60:  mov edx, 0x20000
 8072d65:  lea esi, [esi]
 8072d68:  jmp 8072bd8
 8072d6d:  mov edx, 0x1
 8072d72:  lea esi, [esi]
 8072d78:  jmp 8072bd8
 8072d7d:  lea esi, [esi]
 8072d80:  mov eax, 0x80b31fe
 8072d85:  lea esi, [esi]
 8072d88:  jmp 8072cb6
 8072d8d:  lea esi, [esi]
 8072d90:  pushf
 8072d91:  pop edx
 8072d92:  mov eax, 0x240000
 8072d97:  xor eax, edx
 8072d99:  push eax
 8072d9a:  popf
 8072d9b:  pushf
 8072d9c:  pop eax
 8072d9d:  xor eax, edx
 8072d9f:  push edx
 8072da0:  popf
 8072da1:  test eax, eax
 8072da3:  mov edx, 0xffffffff
 8072da8:  je 8072bd8
 8072dae:  test eax, 0x200000
 8072db3:  je 807305d
 8072db9:  xor eax, eax
 8072dbb:  xchg edi, ebx
 8072dbd:  cpuid
 8072dbf:  xchg edi, ebx
 8072dc1:  cmp edi, 0x756e6547
 8072dc7:  je 807306d
 8072dcd:  cmp edi, 0x68747541
 8072dd3:  je 8072dfe
 8072dd5:  xor edx, edx
 8072dd7:  jmp 8072bd8
 8072ddc:  mov eax, 0x80b3219
 8072de1:  call 8072630
 8072de6:  mov edx, eax
 8072de8:  jmp 8072bd8
 8072ded:  mov eax, 0x80b3224
 8072df2:  call 8072630
 8072df7:  mov edx, eax
 8072df9:  jmp 8072bd8
 8072dfe:  cmp ecx, 0x444d4163
 8072e04:  jne 8072dd5
 8072e06:  cmp edx, 0x69746e65
 8072e0c:  lea esi, [esi]
 8072e10:  jne 8072dd5
 8072e12:  mov eax, esi
 8072e14:  lea esi, [esi]
 8072e18:  call 8072790
 8072e1d:  mov edx, eax
 8072e1f:  nop
 8072e20:  jmp 8072bd8
 8072e25:  mov edx, 0x7fffffff
 8072e2a:  lea esi, [esi]
 8072e30:  jmp 8072bd8
 8072e35:  mov edx, 0x20
 8072e3a:  lea esi, [esi]
 8072e40:  jmp 8072bd8
 8072e45:  mov edx, 0x400
 8072e4a:  lea esi, [esi]
 8072e50:  jmp 8072bd8
 8072e55:  mov edx, 0x800
 8072e5a:  lea esi, [esi]
 8072e60:  jmp 8072bd8
 8072e65:  mov edx, 0x7fff
 8072e6a:  lea esi, [esi]
 8072e70:  jmp 8072bd8
 8072e75:  mov edx, 0x14
 8072e7a:  lea esi, [esi]
 8072e80:  jmp 8072bd8
 8072e85:  mov edx, 0x4
 8072e8a:  lea esi, [esi]
 8072e90:  jmp 8072bd8
 8072e95:  mov edx, 0xffffff80
 8072e9a:  lea esi, [esi]
 8072ea0:  jmp 8072bd8
 8072ea5:  mov edx, 0xff
 8072eaa:  lea esi, [esi]
 8072eb0:  jmp 8072bd8
 8072eb5:  mov edx, 0x63
 8072eba:  lea esi, [esi]
 8072ec0:  jmp 8072bd8
 8072ec5:  mov edx, 0x7f
 8072eca:  lea esi, [esi]
 8072ed0:  jmp 8072bd8
 8072ed5:  mov edx, 0x80000000
 8072eda:  lea esi, [esi]
 8072ee0:  jmp 8072bd8
 8072ee5:  lea esi, [esi]
 8072ee8:  call 80743d0
 8072eed:  mov edx, eax
 8072eef:  nop
 8072ef0:  jmp 8072bd8
 8072ef5:  mov edx, 0x10000
 8072efa:  lea esi, [esi]
 8072f00:  jmp 8072bd8
 8072f05:  lea esi, [esi]
 8072f08:  call 8073660
 8072f0d:  mov edx, eax
 8072f0f:  nop
 8072f10:  jmp 8072bd8
 8072f15:  lea esi, [esi]
 8072f18:  call 806e260
 8072f1d:  mov edx, 0x6
 8072f22:  cmp eax, 0x6
 8072f25:  lea esi, [esi]
 8072f28:  jle 8072bd8
 8072f2e:  call 806e260
 8072f33:  mov edx, eax
 8072f35:  lea esi, [esi]
 8072f38:  jmp 8072bd8
 8072f3d:  lea esi, [esi]
 8072f40:  call 80730c0
 8072f45:  mov edx, eax
 8072f47:  nop
 8072f48:  jmp 8072bd8
 8072f4d:  lea esi, [esi]
 8072f50:  call 8074330
 8072f55:  mov edx, eax
 8072f57:  nop
 8072f58:  jmp 8072bd8
 8072f5d:  mov edx, 0xffff8000
 8072f62:  lea esi, [esi]
 8072f68:  jmp 8072bd8
 8072f6d:  mov edx, 0x8
 8072f72:  lea esi, [esi]
 8072f78:  jmp 8072bd8
 8072f7d:  mov edx, 0x258
 8072f82:  lea esi, [esi]
 8072f88:  jmp 8072bd8
 8072f8d:  lea esi, [esi]
 8072f90:  call 80741d0
 8072f95:  mov edx, eax
 8072f97:  nop
 8072f98:  jmp 8072bd8
 8072f9d:  mov edx, 0x3e8
 8072fa2:  lea esi, [esi]
 8072fa8:  jmp 8072bd8
 8072fad:  lea esi, [esi]
 8072fb0:  call 804f4a0
 8072fb5:  mov edx, eax
 8072fb7:  nop
 8072fb8:  jmp 8072bd8
 8072fbd:  mov edx, 0x1000
 8072fc2:  lea esi, [esi]
 8072fc8:  jmp 8072bd8
 8072fcd:  mov edx, 0xffff
 8072fd2:  lea esi, [esi]
 8072fd8:  jmp 8072bd8
 8072fdd:  lea esi, [esi]
 8072fe0:  call 80741f0
 8072fe5:  mov edx, eax
 8072fe7:  nop
 8072fe8:  jmp 8072bd8
 8072fed:  mov edx, 0x4000
 8072ff2:  lea esi, [esi]
 8072ff8:  jmp 8072bd8
 8072ffd:  mov edx, 0x8000
 8073002:  lea esi, [esi]
 8073008:  jmp 8072bd8
 807300d:  lea esi, [esi]
 8073010:  call 80741e0
 8073015:  mov edx, eax
 8073017:  nop
 8073018:  jmp 8072bd8
 807301d:  mov edx, 0x2000
 8073022:  lea esi, [esi]
 8073028:  jmp 8072bd8
 807302d:  mov edx, 0x100
 8073032:  lea esi, [esi]
 8073038:  jmp 8072bd8
 807303d:  mov edx, 0x40
 8073042:  lea esi, [esi]
 8073048:  jmp 8072bd8
 807304d:  mov edx, 0x10
 8073052:  lea esi, [esi]
 8073058:  jmp 8072bd8
 807305d:  mov eax, esi
 807305f:  nop
 8073060:  call 8072710
 8073065:  mov edx, eax
 8073067:  nop
 8073068:  jmp 8072bd8
 807306d:  cmp ecx, 0x6c65746e
 8073073:  nop
 8073074:  lea esi, [esi]
 8073078:  jne 8072dd5
 807307e:  cmp edx, 0x49656e69
 8073084:  lea esi, [esi]
 8073088:  jne 8072dd5
 807308e:  mov edx, eax
 8073090:  mov eax, esi
 8073092:  call 8072a80
 8073097:  mov edx, eax
 8073099:  jmp 8072bd8
 807309e:  nop
 807309f:  nop

080730a0 <__sched_yield>:
 80730a0:  mov eax, 0x9e
 80730a5:  int 0x80
 80730a7:  cmp eax, 0xfffff001
 80730ac:  jae 8051470
 80730b2:  ret
 80730b3:  nop
 80730b4:  nop
 80730b5:  nop
 80730b6:  nop
 80730b7:  nop
 80730b8:  nop
 80730b9:  nop
 80730ba:  nop
 80730bb:  nop
 80730bc:  nop
 80730bd:  nop
 80730be:  nop
 80730bf:  nop

080730c0 <__get_child_max>:
 80730c0:  push ebp
 80730c1:  mov ebp, esp
 80730c3:  sub esp, 0x10
 80730c6:  lea eax, [ebp-0x8]
 80730c9:  mov DWORD PTR [esp+0x4], eax
 80730cd:  mov DWORD PTR [esp], 0x6
 80730d4:  call 8073320
 80730d9:  test eax, eax
 80730db:  je 80730e8
 80730dd:  mov eax, 0xffffffff
 80730e2:  leave
 80730e3:  ret
 80730e4:  lea esi, [esi]
 80730e8:  mov eax, DWORD PTR [ebp-0x8]
 80730eb:  cmp eax, 0xff
 80730ee:  xchg ax, ax
 80730f0:  je 80730dd
 80730f2:  leave
 80730f3:  nop
 80730f4:  lea esi, [esi]
 80730f8:  ret
 80730f9:  nop
 80730fa:  nop
 80730fb:  nop
 80730fc:  nop
 80730fd:  nop
 80730fe:  nop
 80730ff:  nop

08073100 <___xstat64>:
 8073100:  push ebp
 8073101:  mov ebp, esp
 8073103:  mov ecx, DWORD PTR [ebp+0x10]
 8073106:  push ebx
 8073107:  mov ebx, DWORD PTR [ebp+0xc]
 807310a:  mov eax, 0xc3
 807310f:  int 0x80
 8073111:  mov ecx, eax
 8073113:  cmp ecx, 0xfffff000
 8073119:  ja 807311e
 807311b:  pop ebx
 807311c:  pop ebp
 807311d:  ret
 807311e:  mov eax, gs:0x0
 8073124:  neg ecx
 8073126:  mov edx, 0xffffffe8
 807312c:  mov DWORD PTR [eax+edx], ecx
 807312f:  mov eax, 0xffffffff
 8073134:  jmp 807311b
 8073136:  nop
 8073137:  nop
 8073138:  nop
 8073139:  nop
 807313a:  nop
 807313b:  nop
 807313c:  nop
 807313d:  nop
 807313e:  nop
 807313f:  nop

08073140 <__libc_close>:
 8073140:  cmp DWORD PTR gs:0xc, 0x0
 8073148:  jne 8073165

0807314a <__close_nocancel>:
 807314a:  mov edx, ebx
 807314c:  mov ebx, DWORD PTR [esp+0x4]
 8073150:  mov eax, 0x6
 8073155:  int 0x80
 8073157:  mov ebx, edx
 8073159:  cmp eax, 0xfffff001
 807315e:  jae 8051470
 8073164:  ret
 8073165:  call 80502f0
 807316a:  mov ecx, eax
 807316c:  mov edx, ebx
 807316e:  mov ebx, DWORD PTR [esp+0x4]
 8073172:  mov eax, 0x6
 8073177:  int 0x80
 8073179:  mov ebx, edx
 807317b:  push eax
 807317c:  mov eax, ecx
 807317e:  call 80502b0
 8073183:  pop eax
 8073184:  cmp eax, 0xfffff001
 8073189:  jae 8051470
 807318f:  ret

08073190 <__access>:
 8073190:  mov edx, ebx
 8073192:  mov ecx, DWORD PTR [esp+0x8]
 8073196:  mov ebx, DWORD PTR [esp+0x4]
 807319a:  mov eax, 0x21
 807319f:  int 0x80
 80731a1:  mov ebx, edx
 80731a3:  cmp eax, 0xfffff001
 80731a8:  jae 8051470
 80731ae:  ret
 80731af:  nop

080731b0 <__getcwd>:
 80731b0:  push ebp
 80731b1:  mov ebp, esp
 80731b3:  sub esp, 0x1c
 80731b6:  mov DWORD PTR [ebp-0xc], ebx
 80731b9:  mov ebx, DWORD PTR [ebp+0xc]
 80731bc:  mov DWORD PTR [ebp-0x8], esi
 80731bf:  mov DWORD PTR [ebp-0x4], edi
 80731c2:  test ebx, ebx
 80731c4:  jne 80731f8
 80731c6:  mov ecx, DWORD PTR [ebp+0x8]
 80731c9:  test ecx, ecx
 80731cb:  jne 8073268
 80731d1:  call 804f4a0
 80731d6:  cmp eax, 0x1000
 80731db:  mov esi, eax
 80731dd:  jge 80731e4
 80731df:  mov esi, 0x1000
 80731e4:  mov DWORD PTR [esp], esi
 80731e7:  call 804d6f0
 80731ec:  test eax, eax
 80731ee:  mov edi, eax
 80731f0:  jne 8073206
 80731f2:  jmp 807325b
 80731f4:  lea esi, [esi]
 80731f8:  mov edi, DWORD PTR [ebp+0x8]
 80731fb:  mov esi, DWORD PTR [ebp+0xc]
 80731fe:  test edi, edi
 8073200:  je 8073309
 8073206:  mov ebx, edi
 8073208:  mov ecx, esi
 807320a:  mov eax, 0xb7
 807320f:  int 0x80
 8073211:  cmp eax, 0xfffff000
 8073216:  ja 80732de
 807321c:  test eax, eax
 807321e:  js 8073238
 8073220:  mov edx, DWORD PTR [ebp+0x8]
 8073223:  test edx, edx
 8073225:  je 8073288
 8073227:  mov eax, DWORD PTR [ebp+0x8]
 807322a:  mov ebx, DWORD PTR [ebp-0xc]
 807322d:  mov esi, DWORD PTR [ebp-0x8]
 8073230:  mov edi, DWORD PTR [ebp-0x4]
 8073233:  mov esp, ebp
 8073235:  pop ebp
 8073236:  ret
 8073237:  nop
 8073238:  mov ecx, DWORD PTR gs:0x0
 807323f:  mov edx, 0xffffffe8
 8073245:  mov ebx, DWORD PTR [ebp+0x8]
 8073248:  test ebx, ebx
 807324a:  sete al
 807324d:  cmp DWORD PTR [ecx+edx], 0x22
 8073251:  je 80732a8
 8073253:  test al, al
 8073255:  jne 80732f5
 807325b:  mov DWORD PTR [ebp+0x8], 0x0
 8073262:  jmp 8073227
 8073264:  lea esi, [esi]
 8073268:  mov edx, 0xffffffe8
 807326e:  mov eax, gs:0x0
 8073274:  mov DWORD PTR [ebp+0x8], 0x0
 807327b:  mov DWORD PTR [eax+edx], 0x16
 8073282:  jmp 8073227
 8073284:  lea esi, [esi]
 8073288:  mov esi, DWORD PTR [ebp+0xc]
 807328b:  test esi, esi
 807328d:  jne 80732a2
 807328f:  mov DWORD PTR [esp+0x4], eax
 8073293:  mov DWORD PTR [esp], edi
 8073296:  call 804db10
 807329b:  test eax, eax
 807329d:  mov DWORD PTR [ebp+0x8], eax
 80732a0:  jne 8073227
 80732a2:  mov DWORD PTR [ebp+0x8], edi
 80732a5:  jmp 8073227
 80732a7:  nop
 80732a8:  test al, al
 80732aa:  lea esi, [esi]
 80732b0:  je 807325b
 80732b2:  mov edx, DWORD PTR [ebp+0xc]
 80732b5:  test edx, edx
 80732b7:  nop
 80732b8:  jne 8073253
 80732ba:  mov DWORD PTR [esp+0xc], 0x80b3b3a
 80732c2:  mov DWORD PTR [esp+0x8], 0x83
 80732ca:  mov DWORD PTR [esp+0x4], 0x80b3ae0
 80732d2:  mov DWORD PTR [esp], 0x80b3b04
 80732d9:  call 8051490
 80732de:  mov ecx, DWORD PTR gs:0x0
 80732e5:  neg eax
 80732e7:  mov edx, 0xffffffe8
 80732ed:  mov DWORD PTR [ecx+edx], eax
 80732f0:  jmp 8073245
 80732f5:  mov DWORD PTR [esp], edi
 80732f8:  call 804b4a0
 80732fd:  mov DWORD PTR [ebp+0x8], 0x0
 8073304:  jmp 8073227
 8073309:  mov esi, DWORD PTR [ebp+0xc]
 807330c:  lea esi, [esi]
 8073310:  jmp 80731e4
 8073315:  nop
 8073316:  nop
 8073317:  nop
 8073318:  nop
 8073319:  nop
 807331a:  nop
 807331b:  nop
 807331c:  nop
 807331d:  nop
 807331e:  nop
 807331f:  nop

08073320 <__new_getrlimit>:
 8073320:  push ebp
 8073321:  mov ebp, esp
 8073323:  mov ecx, DWORD PTR [ebp+0xc]
 8073326:  push ebx
 8073327:  mov ebx, DWORD PTR [ebp+0x8]
 807332a:  mov eax, 0xbf
 807332f:  int 0x80
 8073331:  mov ecx, eax
 8073333:  cmp ecx, 0xfffff000
 8073339:  ja 807333e
 807333b:  pop ebx
 807333c:  pop ebp
 807333d:  ret
 807333e:  mov eax, gs:0x0
 8073344:  neg ecx
 8073346:  mov edx, 0xffffffe8
 807334c:  mov DWORD PTR [eax+edx], ecx
 807334f:  mov eax, 0xffffffff
 8073354:  jmp 807333b
 8073356:  nop
 8073357:  nop
 8073358:  nop
 8073359:  nop
 807335a:  nop
 807335b:  nop
 807335c:  nop
 807335d:  nop
 807335e:  nop
 807335f:  nop

08073360 <__brk>:
 8073360:  push ebp
 8073361:  mov ebp, esp
 8073363:  push ebx
 8073364:  mov ebx, DWORD PTR [ebp+0x8]
 8073367:  mov eax, 0x2d
 807336c:  int 0x80
 807336e:  xor edx, edx
 8073370:  cmp ebx, eax
 8073372:  mov ds:0x80d2a24, eax
 8073377:  ja 8073380
 8073379:  mov eax, edx
 807337b:  pop ebx
 807337c:  pop ebp
 807337d:  ret
 807337e:  xchg ax, ax
 8073380:  mov edx, 0xffffffe8
 8073386:  mov eax, gs:0x0
 807338c:  mov DWORD PTR [eax+edx], 0xc
 8073393:  mov edx, 0xffffffff
 8073398:  jmp 8073379
 807339a:  nop
 807339b:  nop
 807339c:  nop
 807339d:  nop
 807339e:  nop
 807339f:  nop

080733a0 <__atomic_writev_replacement>:
 80733a0:  push ebp
 80733a1:  mov ebp, esp
 80733a3:  push edi
 80733a4:  push esi
 80733a5:  push ebx
 80733a6:  sub esp, 0x24
 80733a9:  mov DWORD PTR [ebp-0x24], ecx
 80733ac:  mov ebx, DWORD PTR [ebp-0x24]
 80733af:  xor ecx, ecx
 80733b1:  mov DWORD PTR [ebp-0x1c], eax
 80733b4:  mov DWORD PTR [ebp-0x20], edx
 80733b7:  mov DWORD PTR [ebp-0x14], 0x0
 80733be:  test ebx, ebx
 80733c0:  jle 8073417
 80733c2:  mov ecx, DWORD PTR [edx+0x4]
 80733c5:  cmp ecx, 0x7fffffff
 80733cb:  ja 80734b8
 80733d1:  xor edx, edx
 80733d3:  mov ebx, 0x7fffffff
 80733d8:  mov DWORD PTR [ebp-0x14], 0x0
 80733df:  jmp 80733fc
 80733e1:  lea esi, [esi]
 80733e8:  mov eax, DWORD PTR [ebp-0x20]
 80733eb:  mov ecx, DWORD PTR [eax+edx*8+0x4]
 80733ef:  mov eax, ebx
 80733f1:  sub eax, DWORD PTR [ebp-0x14]
 80733f4:  cmp eax, ecx
 80733f6:  jb 80734b8
 80733fc:  add DWORD PTR [ebp-0x14], ecx
 80733ff:  add edx, 0x1
 8073402:  cmp DWORD PTR [ebp-0x24], edx
 8073405:  jg 80733e8
 8073407:  cmp DWORD PTR [ebp-0x14], 0x1000
 807340e:  ja 80734e0
 8073414:  mov ecx, DWORD PTR [ebp-0x14]
 8073417:  mov eax, DWORD PTR [ebp-0x14]
 807341a:  mov edx, DWORD PTR [ebp-0x24]
 807341d:  add eax, 0x12
 8073420:  and eax, 0xfc
 8073423:  sub esp, eax
 8073425:  lea eax, [esp+0x1b]
 8073429:  and eax, 0xf0
 807342c:  test edx, edx
 807342e:  mov DWORD PTR [ebp-0x18], eax
 8073431:  jle 8073518
 8073437:  mov edx, eax
 8073439:  mov edi, ecx
 807343b:  mov BYTE PTR [ebp-0xd], 0x0
 807343f:  xor esi, esi
 8073441:  jmp 8073450
 8073443:  nop
 8073444:  lea esi, [esi]
 8073448:  add esi, 0x1
 807344b:  cmp DWORD PTR [ebp-0x24], esi
 807344e:  jle 807347b
 8073450:  mov ecx, DWORD PTR [ebp-0x20]
 8073453:  mov ebx, edi
 8073455:  mov eax, DWORD PTR [ecx+esi*8+0x4]
 8073459:  cmp edi, eax
 807345b:  jbe 8073462
 807345d:  mov ecx, DWORD PTR [ebp-0x20]
 8073460:  mov ebx, eax
 8073462:  mov DWORD PTR [esp+0x8], ebx
 8073466:  mov eax, DWORD PTR [ecx+esi*8]
 8073469:  mov DWORD PTR [esp], edx
 807346c:  mov DWORD PTR [esp+0x4], eax
 8073470:  call 806c310
 8073475:  sub edi, ebx
 8073477:  mov edx, eax
 8073479:  jne 8073448
 807347b:  mov eax, DWORD PTR [ebp-0x14]
 807347e:  mov DWORD PTR [esp+0x8], eax
 8073482:  mov edx, DWORD PTR [ebp-0x18]
 8073485:  mov DWORD PTR [esp+0x4], edx
 8073489:  mov ecx, DWORD PTR [ebp-0x1c]
 807348c:  mov DWORD PTR [esp], ecx
 807348f:  call 804f2b0
 8073494:  cmp BYTE PTR [ebp-0xd], 0x0
 8073498:  mov ebx, eax
 807349a:  je 80734a7
 807349c:  mov eax, DWORD PTR [ebp-0x18]
 807349f:  mov DWORD PTR [esp], eax
 80734a2:  call 804b4a0
 80734a7:  lea esp, [ebp-0xc]
 80734aa:  mov eax, ebx
 80734ac:  pop ebx
 80734ad:  pop esi
 80734ae:  pop edi
 80734af:  pop ebp
 80734b0:  ret
 80734b1:  lea esi, [esi]
 80734b8:  mov edx, 0xffffffe8
 80734be:  mov ebx, 0xffffffff
 80734c3:  mov eax, gs:0x0
 80734c9:  mov DWORD PTR [eax+edx], 0x16
 80734d0:  lea esp, [ebp-0xc]
 80734d3:  mov eax, ebx
 80734d5:  pop ebx
 80734d6:  pop esi
 80734d7:  pop edi
 80734d8:  pop ebp
 80734d9:  ret
 80734da:  lea esi, [esi]
 80734e0:  mov edx, DWORD PTR [ebp-0x14]
 80734e3:  mov DWORD PTR [esp], edx
 80734e6:  call 8074540
 80734eb:  test eax, eax
 80734ed:  jne 8073414
 80734f3:  mov edx, DWORD PTR [ebp-0x14]
 80734f6:  mov ebx, 0xffffffff
 80734fb:  mov DWORD PTR [esp], edx
 80734fe:  call 804d6f0
 8073503:  test eax, eax
 8073505:  mov DWORD PTR [ebp-0x18], eax
 8073508:  je 80734a7
 807350a:  mov edx, eax
 807350c:  mov edi, DWORD PTR [ebp-0x14]
 807350f:  mov BYTE PTR [ebp-0xd], 0x1
 8073513:  jmp 807343f
 8073518:  mov ecx, DWORD PTR [ebp-0x14]
 807351b:  mov DWORD PTR [esp+0x4], eax
 807351f:  mov DWORD PTR [esp+0x8], ecx
 8073523:  mov eax, DWORD PTR [ebp-0x1c]
 8073526:  mov DWORD PTR [esp], eax
 8073529:  call 804f2b0
 807352e:  mov ebx, eax
 8073530:  jmp 80734a7
 8073535:  lea esi, [esi]
 8073539:  lea edi, [edi]

08073540 <__libc_writev>:
 8073540:  push ebp
 8073541:  mov ebp, esp
 8073543:  sub esp, 0x14
 8073546:  mov eax, DWORD PTR [ebp+0x8]
 8073549:  mov DWORD PTR [ebp-0x8], esi
 807354c:  mov esi, DWORD PTR [ebp+0x10]
 807354f:  mov DWORD PTR [ebp-0x4], edi
 8073552:  mov edi, DWORD PTR [ebp+0xc]
 8073555:  mov DWORD PTR [ebp-0xc], ebx
 8073558:  mov DWORD PTR [ebp-0x14], eax
 807355b:  mov eax, gs:0xc
 8073561:  test eax, eax
 8073563:  jne 80735d1
 8073565:  mov ebx, DWORD PTR [ebp-0x14]
 8073568:  mov ecx, edi
 807356a:  mov edx, esi
 807356c:  mov eax, 0x92
 8073571:  int 0x80
 8073573:  cmp eax, 0xfffff000
 8073578:  jbe 80735b8
 807357a:  mov ecx, DWORD PTR gs:0x0
 8073581:  neg eax
 8073583:  mov ebx, 0xffffffff
 8073588:  mov edx, 0xffffffe8
 807358e:  mov DWORD PTR [ecx+edx], eax
 8073591:  cmp DWORD PTR [ecx+edx], 0x16
 8073595:  jne 80735c2
 8073597:  cmp esi, 0x8
 807359a:  jle 80735c2
 807359c:  mov eax, DWORD PTR [ebp-0x14]
 807359f:  mov ecx, esi
 80735a1:  mov edx, edi
 80735a3:  mov ebx, DWORD PTR [ebp-0xc]
 80735a6:  mov esi, DWORD PTR [ebp-0x8]
 80735a9:  mov edi, DWORD PTR [ebp-0x4]
 80735ac:  mov esp, ebp
 80735ae:  pop ebp
 80735af:  jmp 80733a0
 80735b4:  lea esi, [esi]
 80735b8:  test eax, eax
 80735ba:  mov ebx, eax
 80735bc:  js 807364d
 80735c2:  mov eax, ebx
 80735c4:  mov esi, DWORD PTR [ebp-0x8]
 80735c7:  mov ebx, DWORD PTR [ebp-0xc]
 80735ca:  mov edi, DWORD PTR [ebp-0x4]
 80735cd:  mov esp, ebp
 80735cf:  pop ebp
 80735d0:  ret
 80735d1:  call 80502f0
 80735d6:  mov ebx, DWORD PTR [ebp-0x14]
 80735d9:  mov ecx, edi
 80735db:  mov edx, esi
 80735dd:  mov DWORD PTR [ebp-0x10], eax
 80735e0:  mov eax, 0x92
 80735e5:  int 0x80
 80735e7:  cmp eax, 0xfffff000
 80735ec:  jbe 8073615
 80735ee:  mov ecx, DWORD PTR gs:0x0
 80735f5:  neg eax
 80735f7:  mov ebx, 0xffffffff
 80735fc:  mov edx, 0xffffffe8
 8073602:  mov DWORD PTR [ecx+edx], eax
 8073605:  cmp DWORD PTR [ecx+edx], 0x16
 8073609:  je 8073638
 807360b:  mov eax, DWORD PTR [ebp-0x10]
 807360e:  call 80502b0
 8073613:  jmp 80735c2
 8073615:  test eax, eax
 8073617:  mov ebx, eax
 8073619:  lea esi, [esi]
 8073620:  jns 807360b
 8073622:  mov ecx, DWORD PTR gs:0x0
 8073629:  mov edx, 0xffffffe8
 807362f:  jmp 8073605
 8073631:  lea esi, [esi]
 8073638:  cmp esi, 0x8
 807363b:  jle 807360b
 807363d:  mov eax, DWORD PTR [ebp-0x14]
 8073640:  mov ecx, esi
 8073642:  mov edx, edi
 8073644:  call 80733a0
 8073649:  mov ebx, eax
 807364b:  jmp 807360b
 807364d:  mov ecx, DWORD PTR gs:0x0
 8073654:  mov edx, 0xffffffe8
 807365a:  jmp 8073591
 807365f:  nop

08073660 <__getdtablesize>:
 8073660:  push ebp
 8073661:  mov ebp, esp
 8073663:  sub esp, 0x10
 8073666:  lea eax, [ebp-0x8]
 8073669:  mov DWORD PTR [esp+0x4], eax
 807366d:  mov DWORD PTR [esp], 0x7
 8073674:  call 8073320
 8073679:  mov edx, 0x100
 807367e:  test eax, eax
 8073680:  js 8073685
 8073682:  mov edx, DWORD PTR [ebp-0x8]
 8073685:  mov eax, edx
 8073687:  leave
 8073688:  ret
 8073689:  nop
 807368a:  nop
 807368b:  nop
 807368c:  nop
 807368d:  nop
 807368e:  nop
 807368f:  nop

08073690 <__mmap64>:
 8073690:  push ebp
 8073691:  push ebx
 8073692:  push esi
 8073693:  push edi
 8073694:  mov edx, DWORD PTR [esp+0x28]
 8073698:  mov ecx, DWORD PTR [esp+0x2c]
 807369c:  test edx, 0xfff
 80736a2:  jne 80736da
 80736a4:  shrd edx, ecx, 0xc
 80736a8:  shr ecx, 0xc
 80736ab:  jne 80736da
 80736ad:  mov ebp, edx
 80736af:  mov ebx, DWORD PTR [esp+0x14]
 80736b3:  mov ecx, DWORD PTR [esp+0x18]
 80736b7:  mov edx, DWORD PTR [esp+0x1c]
 80736bb:  mov esi, DWORD PTR [esp+0x20]
 80736bf:  mov edi, DWORD PTR [esp+0x24]
 80736c3:  mov eax, 0xc0
 80736c8:  int 0x80
 80736ca:  pop edi
 80736cb:  pop esi
 80736cc:  pop ebx
 80736cd:  pop ebp
 80736ce:  cmp eax, 0xfffff000
 80736d3:  ja 8051470
 80736d9:  ret
 80736da:  pop edi
 80736db:  pop esi
 80736dc:  pop ebx
 80736dd:  pop ebp
 80736de:  mov eax, 0xffffffea
 80736e3:  jmp 8051470
 80736e8:  nop
 80736e9:  nop
 80736ea:  nop
 80736eb:  nop
 80736ec:  nop
 80736ed:  nop
 80736ee:  nop
 80736ef:  nop

080736f0 <__tfind>:
 80736f0:  push ebp
 80736f1:  mov ebp, esp
 80736f3:  sub esp, 0x18
 80736f6:  mov eax, DWORD PTR [ebp+0xc]
 80736f9:  mov DWORD PTR [ebp-0x8], esi
 80736fc:  mov esi, DWORD PTR [ebp+0x10]
 80736ff:  mov DWORD PTR [ebp-0x4], edi
 8073702:  mov edi, DWORD PTR [ebp+0x8]
 8073705:  mov DWORD PTR [ebp-0xc], ebx
 8073708:  test eax, eax
 807370a:  jne 8073723
 807370c:  xor eax, eax
 807370e:  mov ebx, DWORD PTR [ebp-0xc]
 8073711:  mov esi, DWORD PTR [ebp-0x8]
 8073714:  mov edi, DWORD PTR [ebp-0x4]
 8073717:  mov esp, ebp
 8073719:  pop ebp
 807371a:  ret
 807371b:  nop
 807371c:  lea esi, [esi]
 8073720:  lea eax, [ebx+0x4]
 8073723:  mov ebx, DWORD PTR [eax]
 8073725:  test ebx, ebx
 8073727:  je 807370c
 8073729:  mov eax, DWORD PTR [ebx]
 807372b:  mov DWORD PTR [esp], edi
 807372e:  mov DWORD PTR [esp+0x4], eax
 8073732:  call esi
 8073734:  cmp eax, 0x0
 8073737:  je 8073760
 8073739:  lea esi, [esi]
 8073740:  jl 8073720
 8073742:  lea eax, [ebx+0x8]
 8073745:  mov ebx, DWORD PTR [eax]
 8073747:  test ebx, ebx
 8073749:  lea esi, [esi]
 8073750:  jne 8073729
 8073752:  lea esi, [esi]
 8073758:  jmp 807370c
 807375a:  lea esi, [esi]
 8073760:  mov eax, ebx
 8073762:  lea esi, [esi]
 8073768:  jmp 807370e
 807376a:  lea esi, [esi]

08073770 <trecurse>:
 8073770:  push ebp
 8073771:  mov ebp, esp
 8073773:  sub esp, 0x18
 8073776:  mov DWORD PTR [ebp-0xc], ebx
 8073779:  mov ebx, eax
 807377b:  mov DWORD PTR [ebp-0x8], esi
 807377e:  mov esi, ecx
 8073780:  mov DWORD PTR [ebp-0x4], edi
 8073783:  mov edi, edx
 8073785:  mov edx, DWORD PTR [eax+0x4]
 8073788:  test edx, edx
 807378a:  je 80737f0
 807378c:  mov DWORD PTR [esp+0x8], esi
 8073790:  mov DWORD PTR [esp+0x4], 0x0
 8073798:  mov DWORD PTR [esp], ebx
 807379b:  call edi
 807379d:  mov eax, DWORD PTR [ebx+0x4]
 80737a0:  test eax, eax
 80737a2:  je 80737ae
 80737a4:  lea ecx, [esi+0x1]
 80737a7:  mov edx, edi
 80737a9:  call 8073770
 80737ae:  mov DWORD PTR [esp+0x8], esi
 80737b2:  mov DWORD PTR [esp+0x4], 0x1
 80737ba:  mov DWORD PTR [esp], ebx
 80737bd:  call edi
 80737bf:  mov eax, DWORD PTR [ebx+0x8]
 80737c2:  test eax, eax
 80737c4:  je 80737d0
 80737c6:  lea ecx, [esi+0x1]
 80737c9:  mov edx, edi
 80737cb:  call 8073770
 80737d0:  mov DWORD PTR [esp+0x8], esi
 80737d4:  mov DWORD PTR [esp+0x4], 0x2
 80737dc:  mov DWORD PTR [esp], ebx
 80737df:  call edi
 80737e1:  mov ebx, DWORD PTR [ebp-0xc]
 80737e4:  mov esi, DWORD PTR [ebp-0x8]
 80737e7:  mov edi, DWORD PTR [ebp-0x4]
 80737ea:  mov esp, ebp
 80737ec:  pop ebp
 80737ed:  ret
 80737ee:  xchg ax, ax
 80737f0:  mov eax, DWORD PTR [eax+0x8]
 80737f3:  test eax, eax
 80737f5:  jne 807378c
 80737f7:  mov DWORD PTR [esp+0x8], ecx
 80737fb:  mov DWORD PTR [esp+0x4], 0x3
 8073803:  mov DWORD PTR [esp], ebx
 8073806:  call edi
 8073808:  jmp 80737e1
 807380a:  lea esi, [esi]

08073810 <__twalk>:
 8073810:  push ebp
 8073811:  mov ebp, esp
 8073813:  mov eax, DWORD PTR [ebp+0x8]
 8073816:  mov edx, DWORD PTR [ebp+0xc]
 8073819:  test eax, eax
 807381b:  je 8073830
 807381d:  test edx, edx
 807381f:  je 8073830
 8073821:  pop ebp
 8073822:  xor ecx, ecx
 8073824:  jmp 8073770
 8073829:  lea esi, [esi]
 8073830:  pop ebp
 8073831:  lea esi, [esi]
 8073838:  ret
 8073839:  lea esi, [esi]

08073840 <__tdelete>:
 8073840:  push ebp
 8073841:  mov ebp, esp
 8073843:  push edi
 8073844:  push esi
 8073845:  push ebx
 8073846:  sub esp, 0xdc
 807384c:  mov esi, DWORD PTR [ebp+0xc]
 807384f:  lea eax, [esp+0x1b]
 8073853:  and eax, 0xf0
 8073856:  test esi, esi
 8073858:  jne 8073868
 807385a:  xor eax, eax
 807385c:  lea esp, [ebp-0xc]
 807385f:  pop ebx
 8073860:  pop esi
 8073861:  pop edi
 8073862:  pop ebp
 8073863:  ret
 8073864:  lea esi, [esi]
 8073868:  mov edx, DWORD PTR [esi]
 807386a:  test edx, edx
 807386c:  mov DWORD PTR [ebp-0x2c], edx
 807386f:  je 807385a
 8073871:  mov DWORD PTR [ebp-0x1c], eax
 8073874:  mov eax, edx
 8073876:  mov DWORD PTR [ebp-0x24], 0x28
 807387d:  mov DWORD PTR [ebp-0x20], 0x0
 8073884:  jmp 807389a
 8073886:  xchg ax, ax
 8073888:  mov edx, esi
 807388a:  add esi, 0x8
 807388d:  mov eax, DWORD PTR [edx+0x8]
 8073890:  test eax, eax
 8073892:  je 807385a
 8073894:  add DWORD PTR [ebp-0x20], 0x1
 8073898:  mov eax, DWORD PTR [esi]
 807389a:  mov eax, DWORD PTR [eax]
 807389c:  mov ecx, DWORD PTR [ebp+0x8]
 807389f:  mov DWORD PTR [esp+0x4], eax
 80738a3:  mov DWORD PTR [esp], ecx
 80738a6:  call DWORD PTR [ebp+0x10]
 80738a9:  test eax, eax
 80738ab:  mov edi, eax
 80738ad:  je 8073918
 80738af:  mov ecx, DWORD PTR [ebp-0x24]
 80738b2:  cmp DWORD PTR [ebp-0x20], ecx
 80738b5:  je 80738d8
 80738b7:  mov ebx, DWORD PTR [ebp-0x20]
 80738ba:  mov ecx, DWORD PTR [ebp-0x1c]
 80738bd:  shl ebx, 0x2
 80738c0:  mov DWORD PTR [ecx+ebx], esi
 80738c3:  mov esi, DWORD PTR [esi]
 80738c5:  test edi, edi
 80738c7:  mov DWORD PTR [ebp-0x2c], esi
 80738ca:  jns 8073888
 80738cc:  mov ebx, esi
 80738ce:  add esi, 0x4
 80738d1:  mov eax, DWORD PTR [ebx+0x4]
 80738d4:  jmp 8073890
 80738d6:  xchg ax, ax
 80738d8:  mov ebx, DWORD PTR [ebp-0x20]
 80738db:  mov edx, DWORD PTR [ebp-0x1c]
 80738de:  add ebx, 0x14
 80738e1:  mov DWORD PTR [ebp-0x24], ebx
 80738e4:  lea eax, [ebx*4+0x1e]
 80738eb:  mov ebx, DWORD PTR [ebp-0x20]
 80738ee:  and eax, 0xf0
 80738f1:  sub esp, eax
 80738f3:  lea eax, [esp+0x1b]
 80738f7:  and eax, 0xf0
 80738fa:  shl ebx, 0x2
 80738fd:  mov DWORD PTR [esp+0x8], ebx
 8073901:  mov DWORD PTR [esp+0x4], edx
 8073905:  mov DWORD PTR [esp], eax
 8073908:  call 804efc0
 807390d:  mov DWORD PTR [ebp-0x1c], eax
 8073910:  mov ecx, eax
 8073912:  jmp 80738c0
 8073914:  lea esi, [esi]
 8073918:  mov ebx, DWORD PTR [esi]
 807391a:  mov eax, DWORD PTR [ebx+0x4]
 807391d:  mov DWORD PTR [ebp-0x28], ebx
 8073920:  mov edx, DWORD PTR [ebx+0x8]
 8073923:  mov DWORD PTR [ebp-0x10], ebx
 8073926:  test eax, eax
 8073928:  je 80739c8
 807392e:  test edx, edx
 8073930:  je 80739bd
 8073936:  mov eax, DWORD PTR [ebp-0x20]
 8073939:  mov edi, ebx
 807393b:  mov ebx, DWORD PTR [ebp-0x20]
 807393e:  add edi, 0x8
 8073941:  mov DWORD PTR [ebp-0x18], esi
 8073944:  lea eax, [eax*4+0x50]
 807394b:  shl ebx, 0x2
 807394e:  mov DWORD PTR [ebp-0x14], eax
 8073951:  jmp 8073982
 8073953:  nop
 8073954:  lea esi, [esi]
 8073958:  mov eax, DWORD PTR [ebp-0x18]
 807395b:  mov edx, DWORD PTR [edi]
 807395d:  mov ecx, DWORD PTR [ebp-0x1c]
 8073960:  add DWORD PTR [ebp-0x20], 0x1
 8073964:  add DWORD PTR [ebp-0x14], 0x4
 8073968:  mov DWORD PTR [ecx+ebx], eax
 807396b:  mov eax, DWORD PTR [edx+0x4]
 807396e:  add ebx, 0x4
 8073971:  mov DWORD PTR [ebp-0x10], edx
 8073974:  test eax, eax
 8073976:  je 8073b90
 807397c:  mov DWORD PTR [ebp-0x18], edi
 807397f:  lea edi, [edx+0x4]
 8073982:  mov edx, DWORD PTR [ebp-0x24]
 8073985:  cmp DWORD PTR [ebp-0x20], edx
 8073988:  jne 8073958
 807398a:  mov eax, DWORD PTR [ebp-0x14]
 807398d:  mov ecx, DWORD PTR [ebp-0x20]
 8073990:  mov edx, DWORD PTR [ebp-0x1c]
 8073993:  add eax, 0x1e
 8073996:  and eax, 0xf0
 8073999:  add ecx, 0x14
 807399c:  sub esp, eax
 807399e:  lea eax, [esp+0x1b]
 80739a2:  and eax, 0xf0
 80739a5:  mov DWORD PTR [ebp-0x24], ecx
 80739a8:  mov DWORD PTR [esp+0x8], ebx
 80739ac:  mov DWORD PTR [esp+0x4], edx
 80739b0:  mov DWORD PTR [esp], eax
 80739b3:  call 804efc0
 80739b8:  mov DWORD PTR [ebp-0x1c], eax
 80739bb:  jmp 8073958
 80739bd:  mov ecx, DWORD PTR [ebp-0x28]
 80739c0:  mov edx, eax
 80739c2:  mov DWORD PTR [ebp-0x10], ecx
 80739c5:  lea esi, [esi]
 80739c8:  mov ebx, DWORD PTR [ebp-0x20]
 80739cb:  test ebx, ebx
 80739cd:  jne 8073b98
 80739d3:  mov DWORD PTR [esi], edx
 80739d5:  mov eax, DWORD PTR [ebp-0x28]
 80739d8:  cmp DWORD PTR [ebp-0x10], eax
 80739db:  je 80739e6
 80739dd:  mov ecx, DWORD PTR [ebp-0x10]
 80739e0:  mov ebx, eax
 80739e2:  mov eax, DWORD PTR [ecx]
 80739e4:  mov DWORD PTR [ebx], eax
 80739e6:  mov eax, DWORD PTR [ebp-0x10]
 80739e9:  test BYTE PTR [eax+0xc], 0x1
 80739ed:  jne 8073a9d
 80739f3:  mov ecx, DWORD PTR [ebp-0x20]
 80739f6:  test ecx, ecx
 80739f8:  je 8073b00
 80739fe:  test edx, edx
 8073a00:  je 8073a0e
 8073a02:  movzx eax, BYTE PTR [edx+0xc]
 8073a06:  test al, 0x1
 8073a08:  jne 8073b08
 8073a0e:  mov eax, DWORD PTR [ebp-0x20]
 8073a11:  mov ecx, DWORD PTR [ebp-0x1c]
 8073a14:  sub eax, 0x1
 8073a17:  mov edi, DWORD PTR [ecx+eax*4]
 8073a1a:  mov esi, DWORD PTR [edi]
 8073a1c:  mov ecx, DWORD PTR [esi+0x4]
 8073a1f:  cmp ecx, edx
 8073a21:  je 8073b10
 8073a27:  movzx eax, BYTE PTR [ecx+0xc]
 8073a2b:  test al, 0x1
 8073a2d:  je 8073a59
 8073a2f:  and eax, 0xfe
 8073a32:  mov BYTE PTR [ecx+0xc], al
 8073a35:  or BYTE PTR [esi+0xc], 0x1
 8073a39:  mov eax, DWORD PTR [ecx+0x8]
 8073a3c:  mov edx, DWORD PTR [ebp-0x20]
 8073a3f:  mov DWORD PTR [ecx+0x8], esi
 8073a42:  mov DWORD PTR [esi+0x4], eax
 8073a45:  mov DWORD PTR [edi], ecx
 8073a47:  lea edi, [ecx+0x8]
 8073a4a:  mov ecx, DWORD PTR [ebp-0x1c]
 8073a4d:  mov DWORD PTR [ecx+edx*4], edi
 8073a50:  mov ecx, DWORD PTR [esi+0x4]
 8073a53:  add edx, 0x1
 8073a56:  mov DWORD PTR [ebp-0x20], edx
 8073a59:  mov edx, DWORD PTR [ecx+0x8]
 8073a5c:  test edx, edx
 8073a5e:  je 8073ab0
 8073a60:  movzx ebx, BYTE PTR [edx+0xc]
 8073a64:  test bl, 0x1
 8073a67:  je 8073ab0
 8073a69:  mov eax, DWORD PTR [ecx+0x4]
 8073a6c:  test eax, eax
 8073a6e:  je 8073a76
 8073a70:  test BYTE PTR [eax+0xc], 0x1
 8073a74:  jne 8073ac2
 8073a76:  movzx eax, BYTE PTR [esi+0xc]
 8073a7a:  and ebx, 0xfe
 8073a7d:  and eax, 0x1
 8073a80:  or ebx, eax
 8073a82:  mov eax, DWORD PTR [edx+0x8]
 8073a85:  mov BYTE PTR [edx+0xc], bl
 8073a88:  mov DWORD PTR [esi+0x4], eax
 8073a8b:  mov eax, DWORD PTR [edx+0x4]
 8073a8e:  mov DWORD PTR [edx+0x4], ecx
 8073a91:  mov DWORD PTR [ecx+0x8], eax
 8073a94:  mov DWORD PTR [edx+0x8], esi
 8073a97:  mov DWORD PTR [edi], edx
 8073a99:  and BYTE PTR [esi+0xc], 0xfe
 8073a9d:  mov ebx, DWORD PTR [ebp-0x10]
 8073aa0:  mov DWORD PTR [esp], ebx
 8073aa3:  call 804b4a0
 8073aa8:  mov eax, DWORD PTR [ebp-0x2c]
 8073aab:  jmp 807385c
 8073ab0:  mov eax, DWORD PTR [ecx+0x4]
 8073ab3:  test eax, eax
 8073ab5:  je 8073af0
 8073ab7:  test BYTE PTR [eax+0xc], 0x1
 8073abb:  nop
 8073abc:  lea esi, [esi]
 8073ac0:  je 8073af0
 8073ac2:  movzx edx, BYTE PTR [esi+0xc]
 8073ac6:  movzx eax, BYTE PTR [ecx+0xc]
 8073aca:  and edx, 0x1
 8073acd:  and eax, 0xfe
 8073ad0:  or eax, edx
 8073ad2:  mov BYTE PTR [ecx+0xc], al
 8073ad5:  and BYTE PTR [esi+0xc], 0xfe
 8073ad9:  mov eax, DWORD PTR [ecx+0x4]
 8073adc:  and BYTE PTR [eax+0xc], 0xfe
 8073ae0:  mov eax, DWORD PTR [ecx+0x8]
 8073ae3:  mov DWORD PTR [ecx+0x8], esi
 8073ae6:  mov DWORD PTR [esi+0x4], eax
 8073ae9:  mov DWORD PTR [edi], ecx
 8073aeb:  jmp 8073a9d
 8073aed:  lea esi, [esi]
 8073af0:  or BYTE PTR [ecx+0xc], 0x1
 8073af4:  mov edx, esi
 8073af6:  sub DWORD PTR [ebp-0x20], 0x1
 8073afa:  jne 80739fe
 8073b00:  test edx, edx
 8073b02:  je 8073a9d
 8073b04:  movzx eax, BYTE PTR [edx+0xc]
 8073b08:  and eax, 0xfe
 8073b0b:  mov BYTE PTR [edx+0xc], al
 8073b0e:  jmp 8073a9d
 8073b10:  mov ecx, DWORD PTR [esi+0x8]
 8073b13:  movzx eax, BYTE PTR [ecx+0xc]
 8073b17:  test al, 0x1
 8073b19:  je 8073b45
 8073b1b:  and eax, 0xfe
 8073b1e:  mov BYTE PTR [ecx+0xc], al
 8073b21:  or BYTE PTR [esi+0xc], 0x1
 8073b25:  mov eax, DWORD PTR [ecx+0x4]
 8073b28:  mov ebx, DWORD PTR [ebp-0x20]
 8073b2b:  mov DWORD PTR [ecx+0x4], esi
 8073b2e:  mov DWORD PTR [esi+0x8], eax
 8073b31:  mov eax, DWORD PTR [ebp-0x1c]
 8073b34:  mov DWORD PTR [edi], ecx
 8073b36:  lea edi, [ecx+0x4]
 8073b39:  mov ecx, DWORD PTR [esi+0x8]
 8073b3c:  mov DWORD PTR [eax+ebx*4], edi
 8073b3f:  add ebx, 0x1
 8073b42:  mov DWORD PTR [ebp-0x20], ebx
 8073b45:  mov edx, DWORD PTR [ecx+0x4]
 8073b48:  test edx, edx
 8073b4a:  je 8073bb8
 8073b4c:  movzx ebx, BYTE PTR [edx+0xc]
 8073b50:  test bl, 0x1
 8073b53:  je 8073bb8
 8073b55:  mov eax, DWORD PTR [ecx+0x8]
 8073b58:  test eax, eax
 8073b5a:  je 8073b62
 8073b5c:  test BYTE PTR [eax+0xc], 0x1
 8073b60:  jne 8073bce
 8073b62:  movzx eax, BYTE PTR [esi+0xc]
 8073b66:  and ebx, 0xfe
 8073b69:  and eax, 0x1
 8073b6c:  or ebx, eax
 8073b6e:  mov eax, DWORD PTR [edx+0x4]
 8073b71:  mov BYTE PTR [edx+0xc], bl
 8073b74:  mov DWORD PTR [esi+0x8], eax
 8073b77:  mov eax, DWORD PTR [edx+0x8]
 8073b7a:  mov DWORD PTR [edx+0x8], ecx
 8073b7d:  mov DWORD PTR [ecx+0x4], eax
 8073b80:  mov DWORD PTR [edx+0x4], esi
 8073b83:  mov DWORD PTR [edi], edx
 8073b85:  and BYTE PTR [esi+0xc], 0xfe
 8073b89:  jmp 8073a9d
 8073b8e:  xchg ax, ax
 8073b90:  mov edx, DWORD PTR [edx+0x8]
 8073b93:  jmp 80739c8
 8073b98:  mov ebx, DWORD PTR [ebp-0x20]
 8073b9b:  mov ecx, DWORD PTR [ebp-0x1c]
 8073b9e:  mov eax, DWORD PTR [ecx+ebx*4-0x4]
 8073ba2:  mov ebx, DWORD PTR [ebp-0x10]
 8073ba5:  mov eax, DWORD PTR [eax]
 8073ba7:  cmp DWORD PTR [eax+0x8], ebx
 8073baa:  je 8073bfc
 8073bac:  mov DWORD PTR [eax+0x4], edx
 8073baf:  jmp 80739d5
 8073bb4:  lea esi, [esi]
 8073bb8:  mov eax, DWORD PTR [ecx+0x8]
 8073bbb:  test eax, eax
 8073bbd:  je 8073af0
 8073bc3:  test BYTE PTR [eax+0xc], 0x1
 8073bc7:  nop
 8073bc8:  je 8073af0
 8073bce:  movzx edx, BYTE PTR [esi+0xc]
 8073bd2:  movzx eax, BYTE PTR [ecx+0xc]
 8073bd6:  and edx, 0x1
 8073bd9:  and eax, 0xfe
 8073bdc:  or eax, edx
 8073bde:  mov BYTE PTR [ecx+0xc], al
 8073be1:  and BYTE PTR [esi+0xc], 0xfe
 8073be5:  mov eax, DWORD PTR [ecx+0x8]
 8073be8:  and BYTE PTR [eax+0xc], 0xfe
 8073bec:  mov eax, DWORD PTR [ecx+0x4]
 8073bef:  mov DWORD PTR [ecx+0x4], esi
 8073bf2:  mov DWORD PTR [esi+0x8], eax
 8073bf5:  mov DWORD PTR [edi], ecx
 8073bf7:  jmp 8073a9d
 8073bfc:  mov DWORD PTR [eax+0x8], edx
 8073bff:  jmp 80739d5
 8073c04:  lea esi, [esi]
 8073c0a:  lea edi, [edi]

08073c10 <__tsearch>:
 8073c10:  push ebp
 8073c11:  xor eax, eax
 8073c13:  mov ebp, esp
 8073c15:  push edi
 8073c16:  push esi
 8073c17:  push ebx
 8073c18:  sub esp, 0x2c
 8073c1b:  mov edx, DWORD PTR [ebp+0xc]
 8073c1e:  test edx, edx
 8073c20:  mov DWORD PTR [ebp-0x24], edx
 8073c23:  je 8073e0a
 8073c29:  mov esi, DWORD PTR [edx]
 8073c2b:  test esi, esi
 8073c2d:  je 8073c35
 8073c2f:  and BYTE PTR [esi+0xc], 0xfe
 8073c33:  mov esi, DWORD PTR [edx]
 8073c35:  xor edi, edi
 8073c37:  test esi, esi
 8073c39:  mov ebx, edx
 8073c3b:  mov DWORD PTR [ebp-0x2c], 0x0
 8073c42:  mov DWORD PTR [ebp-0x28], 0x0
 8073c49:  mov DWORD PTR [ebp-0x20], 0x0
 8073c50:  mov DWORD PTR [ebp-0x1c], 0x0
 8073c57:  je 8073d70
 8073c5d:  lea esi, [esi]
 8073c60:  mov eax, DWORD PTR [esi]
 8073c62:  mov DWORD PTR [esp+0x4], eax
 8073c66:  mov eax, DWORD PTR [ebp+0x8]
 8073c69:  mov DWORD PTR [esp], eax
 8073c6c:  call DWORD PTR [ebp+0x10]
 8073c6f:  test eax, eax
 8073c71:  mov edi, eax
 8073c73:  je 8073ec0
 8073c79:  mov edx, DWORD PTR [ebp-0x24]
 8073c7c:  mov ecx, DWORD PTR [edx]
 8073c7e:  mov eax, DWORD PTR [ecx+0x8]
 8073c81:  test eax, eax
 8073c83:  je 8073d38
 8073c89:  mov edx, DWORD PTR [ecx+0x4]
 8073c8c:  test edx, edx
 8073c8e:  je 8073d38
 8073c94:  test BYTE PTR [eax+0xc], 0x1
 8073c98:  je 8073d38
 8073c9e:  test BYTE PTR [edx+0xc], 0x1
 8073ca2:  lea esi, [esi]
 8073ca8:  je 8073d38
 8073cae:  or BYTE PTR [ecx+0xc], 0x1
 8073cb2:  and BYTE PTR [eax+0xc], 0xfe
 8073cb6:  mov eax, DWORD PTR [ecx+0x4]
 8073cb9:  test eax, eax
 8073cbb:  je 8073cc1
 8073cbd:  and BYTE PTR [eax+0xc], 0xfe
 8073cc1:  mov edx, DWORD PTR [ebp-0x2c]
 8073cc4:  test edx, edx
 8073cc6:  je 8073d38
 8073cc8:  mov eax, DWORD PTR [ebp-0x2c]
 8073ccb:  mov eax, DWORD PTR [eax]
 8073ccd:  mov DWORD PTR [ebp-0x14], eax
 8073cd0:  movzx ebx, BYTE PTR [eax+0xc]
 8073cd4:  test bl, 0x1
 8073cd7:  je 8073d38
 8073cd9:  mov eax, DWORD PTR [ebp-0x20]
 8073cdc:  mov edx, DWORD PTR [ebp-0x28]
 8073cdf:  test eax, eax
 8073ce1:  mov eax, DWORD PTR [ebp-0x1c]
 8073ce4:  mov edx, DWORD PTR [edx]
 8073ce6:  mov DWORD PTR [ebp-0x18], edx
 8073ce9:  setg dl
 8073cec:  test eax, eax
 8073cee:  setg al
 8073cf1:  cmp dl, al
 8073cf3:  je 8073e28
 8073cf9:  mov eax, DWORD PTR [ebp-0x14]
 8073cfc:  or ebx, 0x1
 8073cff:  mov BYTE PTR [eax+0xc], bl
 8073d02:  mov edx, DWORD PTR [ebp-0x18]
 8073d05:  or BYTE PTR [edx+0xc], 0x1
 8073d09:  and BYTE PTR [ecx+0xc], 0xfe
 8073d0d:  mov eax, DWORD PTR [ebp-0x20]
 8073d10:  test eax, eax
 8073d12:  js 8073e88
 8073d18:  mov eax, DWORD PTR [ecx+0x4]
 8073d1b:  mov edx, DWORD PTR [ebp-0x14]
 8073d1e:  mov DWORD PTR [edx+0x8], eax
 8073d21:  mov eax, DWORD PTR [ecx+0x8]
 8073d24:  mov DWORD PTR [ecx+0x4], edx
 8073d27:  mov edx, DWORD PTR [ebp-0x18]
 8073d2a:  mov DWORD PTR [edx+0x4], eax
 8073d2d:  mov DWORD PTR [ecx+0x8], edx
 8073d30:  mov eax, DWORD PTR [ebp-0x28]
 8073d33:  mov DWORD PTR [eax], ecx
 8073d35:  lea esi, [esi]
 8073d38:  test edi, edi
 8073d3a:  js 8073e18
 8073d40:  mov eax, DWORD PTR [esi+0x8]
 8073d43:  lea ebx, [esi+0x8]
 8073d46:  test eax, eax
 8073d48:  je 8073d70
 8073d4a:  mov edx, DWORD PTR [ebp-0x20]
 8073d4d:  mov esi, DWORD PTR [ebx]
 8073d4f:  mov eax, DWORD PTR [ebp-0x2c]
 8073d52:  mov DWORD PTR [ebp-0x20], edi
 8073d55:  mov DWORD PTR [ebp-0x1c], edx
 8073d58:  mov edx, DWORD PTR [ebp-0x24]
 8073d5b:  test esi, esi
 8073d5d:  mov DWORD PTR [ebp-0x28], eax
 8073d60:  mov DWORD PTR [ebp-0x24], ebx
 8073d63:  mov DWORD PTR [ebp-0x2c], edx
 8073d66:  jne 8073c60
 8073d6c:  lea esi, [esi]
 8073d70:  mov DWORD PTR [esp], 0x10
 8073d77:  call 804d6f0
 8073d7c:  test eax, eax
 8073d7e:  mov ecx, eax
 8073d80:  je 8073e08
 8073d86:  mov DWORD PTR [ebx], eax
 8073d88:  mov eax, DWORD PTR [ebp+0x8]
 8073d8b:  mov DWORD PTR [ecx+0x8], 0x0
 8073d92:  mov DWORD PTR [ecx+0x4], 0x0
 8073d99:  mov DWORD PTR [ecx], eax
 8073d9b:  movzx eax, BYTE PTR [ecx+0xc]
 8073d9f:  or eax, 0x1
 8073da2:  mov BYTE PTR [ecx+0xc], al
 8073da5:  cmp ebx, DWORD PTR [ebp-0x24]
 8073da8:  je 8073e08
 8073daa:  mov edx, DWORD PTR [ebp-0x24]
 8073dad:  mov esi, DWORD PTR [edx]
 8073daf:  movzx ebx, BYTE PTR [esi+0xc]
 8073db3:  test bl, 0x1
 8073db6:  je 8073e08
 8073db8:  mov eax, DWORD PTR [ebp-0x2c]
 8073dbb:  test edi, edi
 8073dbd:  setg dl
 8073dc0:  mov eax, DWORD PTR [eax]
 8073dc2:  mov DWORD PTR [ebp-0x10], eax
 8073dc5:  mov eax, DWORD PTR [ebp-0x20]
 8073dc8:  test eax, eax
 8073dca:  setg al
 8073dcd:  cmp dl, al
 8073dcf:  je 8073e60
 8073dd5:  or ebx, 0x1
 8073dd8:  mov BYTE PTR [esi+0xc], bl
 8073ddb:  mov edx, DWORD PTR [ebp-0x10]
 8073dde:  or BYTE PTR [edx+0xc], 0x1
 8073de2:  and BYTE PTR [ecx+0xc], 0xfe
 8073de6:  test edi, edi
 8073de8:  js 8073eca
 8073dee:  mov eax, DWORD PTR [ecx+0x4]
 8073df1:  mov edx, DWORD PTR [ebp-0x10]
 8073df4:  mov DWORD PTR [ecx+0x4], esi
 8073df7:  mov DWORD PTR [esi+0x8], eax
 8073dfa:  mov eax, DWORD PTR [ecx+0x8]
 8073dfd:  mov DWORD PTR [ecx+0x8], edx
 8073e00:  mov DWORD PTR [edx+0x4], eax
 8073e03:  mov eax, DWORD PTR [ebp-0x2c]
 8073e06:  mov DWORD PTR [eax], ecx
 8073e08:  mov eax, ecx
 8073e0a:  add esp, 0x2c
 8073e0d:  pop ebx
 8073e0e:  pop esi
 8073e0f:  pop edi
 8073e10:  pop ebp
 8073e11:  ret
 8073e12:  lea esi, [esi]
 8073e18:  lea ebx, [esi+0x4]
 8073e1b:  mov eax, DWORD PTR [esi+0x4]
 8073e1e:  jmp 8073d46
 8073e23:  nop
 8073e24:  lea esi, [esi]
 8073e28:  mov eax, DWORD PTR [ebp-0x14]
 8073e2b:  mov edx, DWORD PTR [ebp-0x28]
 8073e2e:  mov DWORD PTR [edx], eax
 8073e30:  and BYTE PTR [eax+0xc], 0xfe
 8073e34:  mov edx, DWORD PTR [ebp-0x18]
 8073e37:  or BYTE PTR [edx+0xc], 0x1
 8073e3b:  mov eax, DWORD PTR [ebp-0x20]
 8073e3e:  test eax, eax
 8073e40:  js 8073ea8
 8073e42:  mov edx, DWORD PTR [ebp-0x14]
 8073e45:  mov eax, DWORD PTR [edx+0x4]
 8073e48:  mov edx, DWORD PTR [ebp-0x18]
 8073e4b:  mov DWORD PTR [edx+0x8], eax
 8073e4e:  mov eax, DWORD PTR [ebp-0x14]
 8073e51:  mov DWORD PTR [eax+0x4], edx
 8073e54:  jmp 8073d38
 8073e59:  lea esi, [esi]
 8073e60:  mov edx, DWORD PTR [ebp-0x2c]
 8073e63:  mov DWORD PTR [edx], esi
 8073e65:  and BYTE PTR [esi+0xc], 0xfe
 8073e69:  mov eax, DWORD PTR [ebp-0x10]
 8073e6c:  or BYTE PTR [eax+0xc], 0x1
 8073e70:  test edi, edi
 8073e72:  js 8073ee1
 8073e74:  mov eax, DWORD PTR [esi+0x4]
 8073e77:  mov edx, DWORD PTR [ebp-0x10]
 8073e7a:  mov DWORD PTR [edx+0x8], eax
 8073e7d:  mov eax, ecx
 8073e7f:  mov DWORD PTR [esi+0x4], edx
 8073e82:  jmp 8073e0a
 8073e84:  lea esi, [esi]
 8073e88:  mov eax, DWORD PTR [ecx+0x8]
 8073e8b:  mov edx, DWORD PTR [ebp-0x14]
 8073e8e:  mov DWORD PTR [edx+0x4], eax
 8073e91:  mov eax, DWORD PTR [ecx+0x4]
 8073e94:  mov DWORD PTR [ecx+0x8], edx
 8073e97:  mov edx, DWORD PTR [ebp-0x18]
 8073e9a:  mov DWORD PTR [edx+0x8], eax
 8073e9d:  mov DWORD PTR [ecx+0x4], edx
 8073ea0:  jmp 8073d30
 8073ea5:  lea esi, [esi]
 8073ea8:  mov edx, DWORD PTR [ebp-0x14]
 8073eab:  mov eax, DWORD PTR [edx+0x8]
 8073eae:  mov edx, DWORD PTR [ebp-0x18]
 8073eb1:  mov DWORD PTR [edx+0x4], eax
 8073eb4:  mov eax, DWORD PTR [ebp-0x14]
 8073eb7:  mov DWORD PTR [eax+0x8], edx
 8073eba:  jmp 8073d38
 8073ebf:  nop
 8073ec0:  add esp, 0x2c
 8073ec3:  mov eax, esi
 8073ec5:  pop ebx
 8073ec6:  pop esi
 8073ec7:  pop edi
 8073ec8:  pop ebp
 8073ec9:  ret
 8073eca:  mov eax, DWORD PTR [ecx+0x8]
 8073ecd:  mov DWORD PTR [ecx+0x8], esi
 8073ed0:  mov DWORD PTR [esi+0x4], eax
 8073ed3:  mov eax, DWORD PTR [ecx+0x4]
 8073ed6:  mov DWORD PTR [ecx+0x4], edx
 8073ed9:  mov DWORD PTR [edx+0x8], eax
 8073edc:  jmp 8073e03
 8073ee1:  mov eax, DWORD PTR [esi+0x8]
 8073ee4:  mov edx, DWORD PTR [ebp-0x10]
 8073ee7:  mov DWORD PTR [edx+0x4], eax
 8073eea:  mov eax, ecx
 8073eec:  mov DWORD PTR [esi+0x8], edx
 8073eef:  jmp 8073e0a
 8073ef4:  lea esi, [esi]
 8073efa:  lea edi, [edi]

08073f00 <tdestroy_recurse>:
 8073f00:  push ebp
 8073f01:  mov ebp, esp
 8073f03:  push edi
 8073f04:  push esi
 8073f05:  mov esi, edx
 8073f07:  push ebx
 8073f08:  sub esp, 0xc
 8073f0b:  mov edi, DWORD PTR [eax+0x4]
 8073f0e:  mov DWORD PTR [ebp-0x14], eax
 8073f11:  test edi, edi
 8073f13:  je 8073f89
 8073f15:  mov ebx, DWORD PTR [edi+0x4]
 8073f18:  test ebx, ebx
 8073f1a:  je 8073f45
 8073f1c:  mov eax, DWORD PTR [ebx+0x4]
 8073f1f:  test eax, eax
 8073f21:  je 8073f28
 8073f23:  call 8073f00
 8073f28:  mov eax, DWORD PTR [ebx+0x8]
 8073f2b:  test eax, eax
 8073f2d:  je 8073f36
 8073f2f:  mov edx, esi
 8073f31:  call 8073f00
 8073f36:  mov eax, DWORD PTR [ebx]
 8073f38:  mov DWORD PTR [esp], eax
 8073f3b:  call esi
 8073f3d:  mov DWORD PTR [esp], ebx
 8073f40:  call 804b4a0
 8073f45:  mov ebx, DWORD PTR [edi+0x8]
 8073f48:  test ebx, ebx
 8073f4a:  je 8073f77
 8073f4c:  mov eax, DWORD PTR [ebx+0x4]
 8073f4f:  test eax, eax
 8073f51:  je 8073f5a
 8073f53:  mov edx, esi
 8073f55:  call 8073f00
 8073f5a:  mov eax, DWORD PTR [ebx+0x8]
 8073f5d:  test eax, eax
 8073f5f:  je 8073f68
 8073f61:  mov edx, esi
 8073f63:  call 8073f00
 8073f68:  mov eax, DWORD PTR [ebx]
 8073f6a:  mov DWORD PTR [esp], eax
 8073f6d:  call esi
 8073f6f:  mov DWORD PTR [esp], ebx
 8073f72:  call 804b4a0
 8073f77:  mov eax, DWORD PTR [edi]
 8073f79:  mov DWORD PTR [esp], eax
 8073f7c:  call esi
 8073f7e:  mov DWORD PTR [esp], edi
 8073f81:  call 804b4a0
 8073f86:  mov eax, DWORD PTR [ebp-0x14]
 8073f89:  mov eax, DWORD PTR [eax+0x8]
 8073f8c:  test eax, eax
 8073f8e:  mov DWORD PTR [ebp-0x10], eax
 8073f91:  je 807407f
 8073f97:  mov edi, DWORD PTR [eax+0x4]
 8073f9a:  test edi, edi
 8073f9c:  je 8073fed
 8073f9e:  mov eax, DWORD PTR [edi+0x4]
 8073fa1:  test eax, eax
 8073fa3:  je 8073fac
 8073fa5:  mov edx, esi
 8073fa7:  call 8073f00
 8073fac:  mov ebx, DWORD PTR [edi+0x8]
 8073faf:  test ebx, ebx
 8073fb1:  je 8073fde
 8073fb3:  mov eax, DWORD PTR [ebx+0x4]
 8073fb6:  test eax, eax
 8073fb8:  je 8073fc1
 8073fba:  mov edx, esi
 8073fbc:  call 8073f00
 8073fc1:  mov eax, DWORD PTR [ebx+0x8]
 8073fc4:  test eax, eax
 8073fc6:  je 8073fcf
 8073fc8:  mov edx, esi
 8073fca:  call 8073f00
 8073fcf:  mov eax, DWORD PTR [ebx]
 8073fd1:  mov DWORD PTR [esp], eax
 8073fd4:  call esi
 8073fd6:  mov DWORD PTR [esp], ebx
 8073fd9:  call 804b4a0
 8073fde:  mov eax, DWORD PTR [edi]
 8073fe0:  mov DWORD PTR [esp], eax
 8073fe3:  call esi
 8073fe5:  mov DWORD PTR [esp], edi
 8073fe8:  call 804b4a0
 8073fed:  mov edx, DWORD PTR [ebp-0x10]
 8073ff0:  mov edi, DWORD PTR [edx+0x8]
 8073ff3:  test edi, edi
 8073ff5:  je 807406d
 8073ff7:  mov ebx, DWORD PTR [edi+0x4]
 8073ffa:  test ebx, ebx
 8073ffc:  je 8074029
 8073ffe:  mov eax, DWORD PTR [ebx+0x4]
 8074001:  test eax, eax
 8074003:  je 807400c
 8074005:  mov edx, esi
 8074007:  call 8073f00
 807400c:  mov eax, DWORD PTR [ebx+0x8]
 807400f:  test eax, eax
 8074011:  je 807401a
 8074013:  mov edx, esi
 8074015:  call 8073f00
 807401a:  mov eax, DWORD PTR [ebx]
 807401c:  mov DWORD PTR [esp], eax
 807401f:  call esi
 8074021:  mov DWORD PTR [esp], ebx
 8074024:  call 804b4a0
 8074029:  mov ebx, DWORD PTR [edi+0x8]
 807402c:  test ebx, ebx
 807402e:  je 807405b
 8074030:  mov eax, DWORD PTR [ebx+0x4]
 8074033:  test eax, eax
 8074035:  je 807403e
 8074037:  mov edx, esi
 8074039:  call 8073f00
 807403e:  mov eax, DWORD PTR [ebx+0x8]
 8074041:  test eax, eax
 8074043:  je 807404c
 8074045:  mov edx, esi
 8074047:  call 8073f00
 807404c:  mov eax, DWORD PTR [ebx]
 807404e:  mov DWORD PTR [esp], eax
 8074051:  call esi
 8074053:  mov DWORD PTR [esp], ebx
 8074056:  call 804b4a0
 807405b:  mov eax, DWORD PTR [edi]
 807405d:  mov DWORD PTR [esp], eax
 8074060:  call esi
 8074062:  mov DWORD PTR [esp], edi
 8074065:  call 804b4a0
 807406a:  mov edx, DWORD PTR [ebp-0x10]
 807406d:  mov eax, DWORD PTR [edx]
 807406f:  mov DWORD PTR [esp], eax
 8074072:  call esi
 8074074:  mov eax, DWORD PTR [ebp-0x10]
 8074077:  mov DWORD PTR [esp], eax
 807407a:  call 804b4a0
 807407f:  mov edx, DWORD PTR [ebp-0x14]
 8074082:  mov eax, DWORD PTR [edx]
 8074084:  mov DWORD PTR [esp], eax
 8074087:  call esi
 8074089:  mov eax, DWORD PTR [ebp-0x14]
 807408c:  mov DWORD PTR [esp], eax
 807408f:  call 804b4a0
 8074094:  add esp, 0xc
 8074097:  pop ebx
 8074098:  pop esi
 8074099:  pop edi
 807409a:  pop ebp
 807409b:  ret
 807409c:  lea esi, [esi]

080740a0 <__tdestroy>:
 80740a0:  push ebp
 80740a1:  mov ebp, esp
 80740a3:  sub esp, 0x18
 80740a6:  mov DWORD PTR [ebp-0x8], ebx
 80740a9:  mov ebx, DWORD PTR [ebp+0x8]
 80740ac:  mov DWORD PTR [ebp-0x4], esi
 80740af:  mov esi, DWORD PTR [ebp+0xc]
 80740b2:  test ebx, ebx
 80740b4:  je 80740f0
 80740b6:  mov eax, DWORD PTR [ebx+0x4]
 80740b9:  test eax, eax
 80740bb:  je 80740c4
 80740bd:  mov edx, esi
 80740bf:  call 8073f00
 80740c4:  mov eax, DWORD PTR [ebx+0x8]
 80740c7:  test eax, eax
 80740c9:  je 80740d2
 80740cb:  mov edx, esi
 80740cd:  call 8073f00
 80740d2:  mov eax, DWORD PTR [ebx]
 80740d4:  mov DWORD PTR [esp], eax
 80740d7:  call esi
 80740d9:  mov esi, DWORD PTR [ebp-0x4]
 80740dc:  mov DWORD PTR [ebp+0x8], ebx
 80740df:  mov ebx, DWORD PTR [ebp-0x8]
 80740e2:  mov esp, ebp
 80740e4:  pop ebp
 80740e5:  jmp 804b4a0
 80740ea:  lea esi, [esi]
 80740f0:  mov ebx, DWORD PTR [ebp-0x8]
 80740f3:  mov esi, DWORD PTR [ebp-0x4]
 80740f6:  mov esp, ebp
 80740f8:  pop ebp
 80740f9:  ret
 80740fa:  nop
 80740fb:  nop
 80740fc:  nop
 80740fd:  nop
 80740fe:  nop
 80740ff:  nop

08074100 <phys_pages_info>:
 8074100:  push ebp
 8074101:  mov ebp, esp
 8074103:  push edi
 8074104:  mov edi, eax
 8074106:  push esi
 8074107:  push ebx
 8074108:  sub esp, 0x2010
 807410e:  mov DWORD PTR [esp+0x4], 0x80b0518
 8074116:  mov DWORD PTR [ebp-0x10], 0xffffffff
 807411d:  mov DWORD PTR [esp], 0x80b3b43
 8074124:  call 8062450
 8074129:  test eax, eax
 807412b:  mov ebx, eax
 807412d:  je 80741a0
 807412f:  or DWORD PTR [eax], 0x8000
 8074135:  lea esi, [ebp-0x2010]
 807413b:  mov DWORD PTR [ebp-0x10], 0x0
 8074142:  lea esi, [esi]
 8074148:  mov DWORD PTR [esp+0x8], ebx
 807414c:  mov DWORD PTR [esp+0x4], 0x2000
 8074154:  mov DWORD PTR [esp], esi
 8074157:  call 8065a10
 807415c:  test eax, eax
 807415e:  je 8074198
 8074160:  lea eax, [ebp-0x10]
 8074163:  mov DWORD PTR [esp+0x8], eax
 8074167:  mov DWORD PTR [esp+0x4], edi
 807416b:  mov DWORD PTR [esp], esi
 807416e:  call 80930f0
 8074173:  sub eax, 0x1
 8074176:  jne 8074148
 8074178:  call 804f4a0
 807417d:  mov edx, eax
 807417f:  sar edx, 0x1f
 8074182:  shr edx, 0x16
 8074185:  lea esi, [edx+eax]
 8074188:  mov eax, DWORD PTR [ebp-0x10]
 807418b:  sar esi, 0xa
 807418e:  mov edx, eax
 8074190:  sar edx, 0x1f
 8074193:  idiv esi
 8074195:  mov DWORD PTR [ebp-0x10], eax
 8074198:  mov DWORD PTR [esp], ebx
 807419b:  call 8062010
 80741a0:  mov ecx, DWORD PTR [ebp-0x10]
 80741a3:  cmp ecx, 0xff
 80741a6:  jne 80741bb
 80741a8:  mov edx, 0xffffffe8
 80741ae:  mov eax, gs:0x0
 80741b4:  mov DWORD PTR [eax+edx], 0x26
 80741bb:  add esp, 0x2010
 80741c1:  mov eax, ecx
 80741c3:  pop ebx
 80741c4:  pop esi
 80741c5:  pop edi
 80741c6:  pop ebp
 80741c7:  ret
 80741c8:  nop
 80741c9:  lea esi, [esi]

080741d0 <__get_avphys_pages>:
 80741d0:  push ebp
 80741d1:  mov eax, 0x80b3b51
 80741d6:  mov ebp, esp
 80741d8:  pop ebp
 80741d9:  jmp 8074100
 80741de:  xchg ax, ax

080741e0 <__get_phys_pages>:
 80741e0:  push ebp
 80741e1:  mov eax, 0x80b3b61
 80741e6:  mov ebp, esp
 80741e8:  pop ebp
 80741e9:  jmp 8074100
 80741ee:  xchg ax, ax

080741f0 <__get_nprocs>:
 80741f0:  push ebp
 80741f1:  mov ebp, esp
 80741f3:  push edi
 80741f4:  push esi
 80741f5:  push ebx
 80741f6:  sub esp, 0x2014
 80741fc:  mov DWORD PTR [esp+0x4], 0x80b0518
 8074204:  mov DWORD PTR [esp], 0x80b3b72
 807420b:  call 8062450
 8074210:  test eax, eax
 8074212:  mov ebx, eax
 8074214:  je 8074284
 8074216:  or DWORD PTR [eax], 0x8000
 807421c:  lea eax, [ebp-0x200c]
 8074222:  mov DWORD PTR [ebp-0x2010], 0x0
 807422c:  mov DWORD PTR [ebp-0x2014], eax
 8074232:  lea esi, [esi]
 8074238:  mov eax, DWORD PTR [ebp-0x2014]
 807423e:  mov DWORD PTR [esp+0x8], ebx
 8074242:  mov DWORD PTR [esp+0x4], 0x2000
 807424a:  mov DWORD PTR [esp], eax
 807424d:  call 8065a10
 8074252:  test eax, eax
 8074254:  je 8074310
 807425a:  mov esi, DWORD PTR [ebp-0x2014]
 8074260:  mov edi, 0x80b3ba9
 8074265:  mov ecx, 0x3
 807426a:  repz cmpsb
 807426c:  jne 8074238
 807426e:  movsx eax, BYTE PTR [ebp-0x2009]
 8074275:  sub eax, 0x30
 8074278:  cmp eax, 0xa
 807427b:  adc DWORD PTR [ebp-0x2010], 0x0
 8074282:  jmp 8074238
 8074284:  mov DWORD PTR [esp+0x4], 0x80b0518
 807428c:  mov DWORD PTR [esp], 0x80b3b7d
 8074293:  call 8062450
 8074298:  mov DWORD PTR [ebp-0x2010], 0x1
 80742a2:  test eax, eax
 80742a4:  mov ebx, eax
 80742a6:  je 8074318
 80742a8:  lea esi, [ebp-0x200c]
 80742ae:  or DWORD PTR [eax], 0x8000
 80742b4:  mov eax, esi
 80742b6:  mov DWORD PTR [ebp-0x2010], 0x0
 80742c0:  mov DWORD PTR [ebp-0x2014], esi
 80742c6:  jmp 80742f5
 80742c8:  mov esi, DWORD PTR [ebp-0x2014]
 80742ce:  mov edi, 0x80b3b8b
 80742d3:  mov ecx, 0x9
 80742d8:  repz cmpsb
 80742da:  seta al
 80742dd:  setb dl
 80742e0:  sub al, dl
 80742e2:  movsx eax, al
 80742e5:  cmp eax, 0x1
 80742e8:  mov eax, DWORD PTR [ebp-0x2014]
 80742ee:  adc DWORD PTR [ebp-0x2010], 0x0
 80742f5:  mov DWORD PTR [esp+0x8], ebx
 80742f9:  mov DWORD PTR [esp+0x4], 0x2000
 8074301:  mov DWORD PTR [esp], eax
 8074304:  call 8065a10
 8074309:  test eax, eax
 807430b:  jne 80742c8
 807430d:  lea esi, [esi]
 8074310:  mov DWORD PTR [esp], ebx
 8074313:  call 8062010
 8074318:  mov eax, DWORD PTR [ebp-0x2010]
 807431e:  add esp, 0x2014
 8074324:  pop ebx
 8074325:  pop esi
 8074326:  pop edi
 8074327:  pop ebp
 8074328:  ret
 8074329:  lea esi, [esi]

08074330 <__get_nprocs_conf>:
 8074330:  push ebp
 8074331:  mov ebp, esp
 8074333:  push edi
 8074334:  push esi
 8074335:  push ebx
 8074336:  sub esp, 0x18
 8074339:  mov DWORD PTR [esp], 0x80b3b95
 8074340:  call 8095930
 8074345:  test eax, eax
 8074347:  mov DWORD PTR [ebp-0x18], eax
 807434a:  je 80743c3
 807434c:  mov DWORD PTR [ebp-0x14], 0x0
 8074353:  nop
 8074354:  lea esi, [esi]
 8074358:  mov edi, DWORD PTR [ebp-0x18]
 807435b:  mov DWORD PTR [esp], edi
 807435e:  call 8095b30
 8074363:  test eax, eax
 8074365:  mov ebx, eax
 8074367:  je 80743b0
 8074369:  cmp BYTE PTR [ebx+0x12], 0x4
 807436d:  jne 8074358
 807436f:  lea esi, [ebx+0x13]
 8074372:  mov ecx, 0x3
 8074377:  mov edi, 0x80b3ba9
 807437c:  repz cmpsb
 807437e:  jne 8074358
 8074380:  add ebx, 0x16
 8074383:  lea eax, [ebp-0x10]
 8074386:  mov DWORD PTR [esp+0x8], 0xa
 807438e:  mov DWORD PTR [esp+0x4], eax
 8074392:  mov DWORD PTR [esp], ebx
 8074395:  call 8056a80
 807439a:  add eax, 0x1
 807439d:  je 8074358
 807439f:  mov eax, DWORD PTR [ebp-0x10]
 80743a2:  cmp ebx, eax
 80743a4:  je 8074358
 80743a6:  cmp BYTE PTR [eax], 0x1
 80743a9:  adc DWORD PTR [ebp-0x14], 0x0
 80743ad:  jmp 8074358
 80743af:  nop
 80743b0:  mov DWORD PTR [esp], edi
 80743b3:  call 8095ae0
 80743b8:  mov eax, DWORD PTR [ebp-0x14]
 80743bb:  add esp, 0x18
 80743be:  pop ebx
 80743bf:  pop esi
 80743c0:  pop edi
 80743c1:  pop ebp
 80743c2:  ret
 80743c3:  call 80741f0
 80743c8:  mov DWORD PTR [ebp-0x14], eax
 80743cb:  jmp 80743bb
 80743cd:  nop
 80743ce:  nop
 80743cf:  nop

080743d0 <__getclktck>:
 80743d0:  mov eax, ds:0x80d2e00
 80743d5:  push ebp
 80743d6:  mov ebp, esp
 80743d8:  test eax, eax
 80743da:  jne 80743de
 80743dc:  mov al, 0x64
 80743de:  pop ebp
 80743df:  ret

080743e0 <__libc_lseek64>:
 80743e0:  push ebp
 80743e1:  mov ebp, esp
 80743e3:  sub esp, 0x20
 80743e6:  mov edx, DWORD PTR [ebp+0x10]
 80743e9:  mov DWORD PTR [ebp-0xc], ebx
 80743ec:  mov ebx, DWORD PTR [ebp+0x8]
 80743ef:  mov DWORD PTR [ebp-0x8], esi
 80743f2:  mov DWORD PTR [ebp-0x4], edi
 80743f5:  mov edi, DWORD PTR [ebp+0x14]
 80743f8:  mov eax, edx
 80743fa:  lea edx, [ebp-0x14]
 80743fd:  mov ecx, eax
 80743ff:  mov DWORD PTR [ebp-0x20], edx
 8074402:  mov edx, DWORD PTR [ebp+0xc]
 8074405:  mov esi, DWORD PTR [ebp-0x20]
 8074408:  mov eax, 0x8c
 807440d:  int 0x80
 807440f:  cmp eax, 0xfffff000
 8074414:  mov ebx, eax
 8074416:  ja 8074437
 8074418:  test eax, eax
 807441a:  jne 8074430
 807441c:  mov eax, DWORD PTR [ebp-0x14]
 807441f:  mov edx, DWORD PTR [ebp-0x10]
 8074422:  mov ebx, DWORD PTR [ebp-0xc]
 8074425:  mov esi, DWORD PTR [ebp-0x8]
 8074428:  mov edi, DWORD PTR [ebp-0x4]
 807442b:  mov esp, ebp
 807442d:  pop ebp
 807442e:  ret
 807442f:  nop
 8074430:  mov edx, ebx
 8074432:  sar edx, 0x1f
 8074435:  jmp 8074422
 8074437:  mov edx, 0xffffffe8
 807443d:  neg ebx
 807443f:  mov eax, gs:0x0
 8074445:  mov DWORD PTR [eax+edx], ebx
 8074448:  mov eax, 0xffffffff
 807444d:  mov edx, 0xffffffff
 8074452:  jmp 8074422
 8074454:  nop
 8074455:  nop
 8074456:  nop
 8074457:  nop
 8074458:  nop
 8074459:  nop
 807445a:  nop
 807445b:  nop
 807445c:  nop
 807445d:  nop
 807445e:  nop
 807445f:  nop

08074460 <__wctrans>:
 8074460:  push ebp
 8074461:  mov edx, DWORD PTR gs:0x0
 8074468:  mov ebp, esp
 807446a:  push edi
 807446b:  push esi
 807446c:  push ebx
 807446d:  sub esp, 0x8
 8074470:  mov eax, 0xffffffd8
 8074475:  mov eax, DWORD PTR [edx+eax]
 8074478:  mov edi, DWORD PTR [eax]
 807447a:  mov ebx, DWORD PTR [edi+0x50]
 807447d:  cmp BYTE PTR [ebx], 0x0
 8074480:  je 80744c8
 8074482:  xor esi, esi
 8074484:  jmp 80744a4
 8074486:  xchg ax, ax
 8074488:  mov DWORD PTR [esp], ebx
 807448b:  mov DWORD PTR [esp+0x4], 0x0
 8074493:  call 806c400
 8074498:  cmp BYTE PTR [eax+0x1], 0x0
 807449c:  lea ebx, [eax+0x1]
 807449f:  je 80744c8
 80744a1:  add esi, 0x1
 80744a4:  mov DWORD PTR [esp+0x4], ebx
 80744a8:  mov eax, DWORD PTR [ebp+0x8]
 80744ab:  mov DWORD PTR [esp], eax
 80744ae:  call 806af90
 80744b3:  test eax, eax
 80744b5:  jne 8074488
 80744b7:  add esi, DWORD PTR [edi+0x6c]
 80744ba:  mov eax, DWORD PTR [edi+esi*4+0x24]
 80744be:  add esp, 0x8
 80744c1:  pop ebx
 80744c2:  pop esi
 80744c3:  pop edi
 80744c4:  pop ebp
 80744c5:  ret
 80744c6:  xchg ax, ax
 80744c8:  add esp, 0x8
 80744cb:  xor eax, eax
 80744cd:  pop ebx
 80744ce:  pop esi
 80744cf:  pop edi
 80744d0:  pop ebp
 80744d1:  ret
 80744d2:  nop
 80744d3:  nop
 80744d4:  nop
 80744d5:  nop
 80744d6:  nop
 80744d7:  nop
 80744d8:  nop
 80744d9:  nop
 80744da:  nop
 80744db:  nop
 80744dc:  nop
 80744dd:  nop
 80744de:  nop
 80744df:  nop

080744e0 <__towctrans>:
 80744e0:  push ebp
 80744e1:  mov ebp, esp
 80744e3:  sub esp, 0x8
 80744e6:  mov edx, DWORD PTR [ebp+0xc]
 80744e9:  mov DWORD PTR [esp], ebx
 80744ec:  mov ebx, DWORD PTR [ebp+0x8]
 80744ef:  mov DWORD PTR [esp+0x4], esi
 80744f3:  test edx, edx
 80744f5:  je 8074530
 80744f7:  mov ecx, DWORD PTR [edx]
 80744f9:  mov eax, ebx
 80744fb:  shr eax, cl
 80744fd:  cmp eax, DWORD PTR [edx+0x4]
 8074500:  jae 8074530
 8074502:  mov esi, DWORD PTR [edx+eax*4+0x14]
 8074506:  test esi, esi
 8074508:  je 8074530
 807450a:  mov ecx, DWORD PTR [edx+0x8]
 807450d:  mov eax, ebx
 807450f:  shr eax, cl
 8074511:  and eax, DWORD PTR [edx+0xc]
 8074514:  lea eax, [esi+eax*4]
 8074517:  mov ecx, DWORD PTR [eax+edx]
 807451a:  test ecx, ecx
 807451c:  je 8074530
 807451e:  mov eax, ebx
 8074520:  and eax, DWORD PTR [edx+0x10]
 8074523:  lea eax, [ecx+eax*4]
 8074526:  add ebx, DWORD PTR [edx+eax]
 8074529:  lea esi, [esi]
 8074530:  mov eax, ebx
 8074532:  mov esi, DWORD PTR [esp+0x4]
 8074536:  mov ebx, DWORD PTR [esp]
 8074539:  mov esp, ebp
 807453b:  pop ebp
 807453c:  ret
 807453d:  nop
 807453e:  nop
 807453f:  nop

08074540 <__libc_alloca_cutoff>:
 8074540:  push ebp
 8074541:  mov ebp, esp
 8074543:  mov eax, gs:0x254
 8074549:  shr eax, 0x2
 807454c:  mov edx, 0x10000
 8074551:  sub eax, 0x1
 8074554:  cmp eax, 0xffff
 8074559:  ja 8074569
 807455b:  mov edx, DWORD PTR gs:0x254
 8074562:  shr edx, 0x2
 8074565:  test edx, edx
 8074567:  je 8074578
 8074569:  xor eax, eax
 807456b:  cmp edx, DWORD PTR [ebp+0x8]
 807456e:  pop ebp
 807456f:  setae al
 8074572:  ret
 8074573:  nop
 8074574:  lea esi, [esi]
 8074578:  xor eax, eax
 807457a:  mov edx, 0x40000
 807457f:  cmp edx, DWORD PTR [ebp+0x8]
 8074582:  pop ebp
 8074583:  setae al
 8074586:  ret
 8074587:  nop
 8074588:  nop
 8074589:  nop
 807458a:  nop
 807458b:  nop
 807458c:  nop
 807458d:  nop
 807458e:  nop
 807458f:  nop

08074590 <__readonly_area>:
 8074590:  push ebp
 8074591:  mov ebp, esp
 8074593:  push edi
 8074594:  push esi
 8074595:  push ebx
 8074596:  sub esp, 0x24
 8074599:  mov eax, DWORD PTR [ebp+0x8]
 807459c:  add eax, DWORD PTR [ebp+0xc]
 807459f:  mov DWORD PTR [ebp-0x20], eax
 80745a2:  mov DWORD PTR [esp+0x4], 0x80b0518
 80745aa:  mov DWORD PTR [esp], 0x80afc9c
 80745b1:  call 8062450
 80745b6:  test eax, eax
 80745b8:  mov ebx, eax
 80745ba:  je 8074770
 80745c0:  or DWORD PTR [eax], 0x8000
 80745c6:  mov DWORD PTR [ebp-0x10], 0x0
 80745cd:  mov DWORD PTR [ebp-0x14], 0x0
 80745d4:  lea esi, [esi]
 80745d8:  test BYTE PTR [ebx], 0x10
 80745db:  jne 80746f8
 80745e1:  lea eax, [ebp-0x14]
 80745e4:  mov DWORD PTR [esp+0x4], eax
 80745e8:  lea eax, [ebp-0x10]
 80745eb:  mov DWORD PTR [esp+0xc], ebx
 80745ef:  mov DWORD PTR [esp+0x8], 0xa
 80745f7:  mov DWORD PTR [esp], eax
 80745fa:  call 8093940
 80745ff:  test eax, eax
 8074601:  jle 80746f8
 8074607:  lea eax, [ebp-0x18]
 807460a:  mov DWORD PTR [esp+0x8], 0x10
 8074612:  mov DWORD PTR [esp+0x4], eax
 8074616:  mov eax, DWORD PTR [ebp-0x10]
 8074619:  mov DWORD PTR [esp], eax
 807461c:  call 8056a80
 8074621:  mov edx, DWORD PTR [ebp-0x18]
 8074624:  cmp edx, DWORD PTR [ebp-0x10]
 8074627:  mov esi, eax
 8074629:  je 80746f8
 807462f:  movzx eax, BYTE PTR [edx]
 8074632:  add edx, 0x1
 8074635:  mov DWORD PTR [ebp-0x18], edx
 8074638:  cmp al, 0x2d
 807463a:  jne 80746f8
 8074640:  lea eax, [ebp-0x1c]
 8074643:  mov DWORD PTR [esp+0x8], 0x10
 807464b:  mov DWORD PTR [esp+0x4], eax
 807464f:  mov DWORD PTR [esp], edx
 8074652:  call 8056a80
 8074657:  mov ecx, DWORD PTR [ebp-0x1c]
 807465a:  cmp ecx, DWORD PTR [ebp-0x18]
 807465d:  mov edi, eax
 807465f:  je 80746f8
 8074665:  movzx edx, BYTE PTR [ecx]
 8074668:  lea eax, [ecx+0x1]
 807466b:  mov DWORD PTR [ebp-0x1c], eax
 807466e:  cmp dl, 0x20
 8074671:  jne 80746f8
 8074677:  cmp esi, DWORD PTR [ebp-0x20]
 807467a:  jae 80745d8
 8074680:  cmp edi, DWORD PTR [ebp+0x8]
 8074683:  jbe 80745d8
 8074689:  movzx edx, BYTE PTR [ecx+0x1]
 807468d:  lea eax, [ecx+0x2]
 8074690:  mov DWORD PTR [ebp-0x1c], eax
 8074693:  cmp dl, 0x72
 8074696:  jne 80746f8
 8074698:  movzx edx, BYTE PTR [ecx+0x2]
 807469c:  lea eax, [ecx+0x3]
 807469f:  mov DWORD PTR [ebp-0x1c], eax
 80746a2:  cmp dl, 0x2d
 80746a5:  jne 80746f8
 80746a7:  cmp esi, DWORD PTR [ebp+0x8]
 80746aa:  setbe al
 80746ad:  cmp edi, DWORD PTR [ebp-0x20]
 80746b0:  setae dl
 80746b3:  test al, al
 80746b5:  jne 8074720
 80746b7:  test dl, dl
 80746b9:  je 8074768
 80746bf:  add DWORD PTR [ebp+0xc], esi
 80746c2:  mov eax, DWORD PTR [ebp-0x20]
 80746c5:  sub DWORD PTR [ebp+0xc], eax
 80746c8:  mov edx, DWORD PTR [ebp+0xc]
 80746cb:  test edx, edx
 80746cd:  jne 80745d8
 80746d3:  mov DWORD PTR [esp], ebx
 80746d6:  call 8062010
 80746db:  mov eax, DWORD PTR [ebp-0x10]
 80746de:  mov DWORD PTR [esp], eax
 80746e1:  call 804b4a0
 80746e6:  add esp, 0x24
 80746e9:  mov eax, 0x1
 80746ee:  pop ebx
 80746ef:  pop esi
 80746f0:  pop edi
 80746f1:  pop ebp
 80746f2:  ret
 80746f3:  nop
 80746f4:  lea esi, [esi]
 80746f8:  mov DWORD PTR [esp], ebx
 80746fb:  call 8062010
 8074700:  mov eax, DWORD PTR [ebp-0x10]
 8074703:  mov DWORD PTR [esp], eax
 8074706:  call 804b4a0
 807470b:  mov eax, DWORD PTR [ebp+0xc]
 807470e:  test eax, eax
 8074710:  je 8074758
 8074712:  add esp, 0x24
 8074715:  mov eax, 0xffffffff
 807471a:  pop ebx
 807471b:  pop esi
 807471c:  pop edi
 807471d:  pop ebp
 807471e:  ret
 807471f:  nop
 8074720:  test dl, dl
 8074722:  jne 8074740
 8074724:  mov eax, DWORD PTR [ebp+0x8]
 8074727:  add DWORD PTR [ebp+0xc], eax
 807472a:  sub DWORD PTR [ebp+0xc], edi
 807472d:  mov edx, DWORD PTR [ebp+0xc]
 8074730:  test edx, edx
 8074732:  jne 80745d8
 8074738:  jmp 80746d3
 807473a:  lea esi, [esi]
 8074740:  mov DWORD PTR [esp], ebx
 8074743:  call 8062010
 8074748:  mov eax, DWORD PTR [ebp-0x10]
 807474b:  mov DWORD PTR [esp], eax
 807474e:  call 804b4a0
 8074753:  nop
 8074754:  lea esi, [esi]
 8074758:  add esp, 0x24
 807475b:  mov eax, 0x1
 8074760:  pop ebx
 8074761:  pop esi
 8074762:  pop edi
 8074763:  pop ebp
 8074764:  ret
 8074765:  lea esi, [esi]
 8074768:  add DWORD PTR [ebp+0xc], esi
 807476b:  sub DWORD PTR [ebp+0xc], edi
 807476e:  jmp 807472d
 8074770:  mov edx, 0xffffffe8
 8074776:  mov eax, gs:0x0
 807477c:  mov eax, DWORD PTR [eax+edx]
 807477f:  cmp eax, 0x2
 8074782:  je 8074758
 8074784:  cmp eax, 0xd
 8074787:  jne 8074712
 8074789:  jmp 8074758
 807478b:  nop
 807478c:  nop
 807478d:  nop
 807478e:  nop
 807478f:  nop

08074790 <is_dst>:
 8074790:  push ebp
 8074791:  mov ebp, esp
 8074793:  push edi
 8074794:  push esi
 8074795:  mov esi, ecx
 8074797:  push ebx
 8074798:  mov ebx, edx
 807479a:  sub esp, 0x8
 807479d:  mov DWORD PTR [ebp-0x14], eax
 80747a0:  movzx ecx, BYTE PTR [edx]
 80747a3:  mov BYTE PTR [ebp-0xd], 0x0
 80747a7:  cmp cl, 0x7b
 80747aa:  je 8074868
 80747b0:  movzx eax, BYTE PTR [esi]
 80747b3:  cmp al, cl
 80747b5:  jne 8074898
 80747bb:  xor edx, edx
 80747bd:  xor edi, edi
 80747bf:  test cl, cl
 80747c1:  jne 80747d2
 80747c3:  jmp 80747e4
 80747c5:  lea esi, [esi]
 80747c8:  test al, al
 80747ca:  lea esi, [esi]
 80747d0:  je 80747e2
 80747d2:  add edx, 0x1
 80747d5:  movzx eax, BYTE PTR [ebx+edx]
 80747d9:  cmp al, BYTE PTR [esi+edx]
 80747dc:  lea esi, [esi]
 80747e0:  je 80747c8
 80747e2:  mov edi, edx
 80747e4:  cmp BYTE PTR [ebp-0xd], 0x0
 80747e8:  je 8074800
 80747ea:  cmp al, 0x7d
 80747ec:  je 8074880
 80747f2:  xor edx, edx
 80747f4:  add esp, 0x8
 80747f7:  mov eax, edx
 80747f9:  pop ebx
 80747fa:  pop esi
 80747fb:  pop edi
 80747fc:  pop ebp
 80747fd:  ret
 80747fe:  xchg ax, ax
 8074800:  test al, al
 8074802:  jne 8074840
 8074804:  mov esi, DWORD PTR [ebp+0xc]
 8074807:  test esi, esi
 8074809:  je 80747f4
 807480b:  movzx eax, BYTE PTR [ebx+edx]
 807480f:  test al, al
 8074811:  je 807481e
 8074813:  mov ecx, DWORD PTR [ebp+0x8]
 8074816:  test ecx, ecx
 8074818:  je 80747f2
 807481a:  cmp al, 0x3a
 807481c:  jne 80747f2
 807481e:  mov eax, DWORD PTR [ebp-0x14]
 8074821:  add eax, 0x1
 8074824:  cmp ebx, eax
 8074826:  je 80747f4
 8074828:  mov eax, DWORD PTR [ebp+0x8]
 807482b:  test eax, eax
 807482d:  je 80747f2
 807482f:  cmp BYTE PTR [ebx-0x2], 0x3a
 8074833:  jne 80747f2
 8074835:  lea esi, [esi]
 8074838:  jmp 80747f4
 807483a:  lea esi, [esi]
 8074840:  cmp al, 0x2f
 8074842:  lea esi, [esi]
 8074848:  je 8074804
 807484a:  mov edi, DWORD PTR [ebp+0x8]
 807484d:  test edi, edi
 807484f:  nop
 8074850:  je 80747f2
 8074852:  cmp al, 0x3a
 8074854:  lea esi, [esi]
 8074858:  jne 80747f2
 807485a:  lea esi, [esi]
 8074860:  jmp 8074804
 8074862:  lea esi, [esi]
 8074868:  add ebx, 0x1
 807486b:  movzx ecx, BYTE PTR [ebx]
 807486e:  mov BYTE PTR [ebp-0xd], 0x1
 8074872:  lea esi, [esi]
 8074878:  jmp 80747b0
 807487d:  lea esi, [esi]
 8074880:  mov esi, DWORD PTR [ebp+0xc]
 8074883:  sub ebx, 0x1
 8074886:  lea edx, [edi+0x2]
 8074889:  test esi, esi
 807488b:  je 80747f4
 8074891:  jmp 807480b
 8074896:  xchg ax, ax
 8074898:  mov eax, ecx
 807489a:  xor edi, edi
 807489c:  xor edx, edx
 807489e:  jmp 80747e4
 80748a3:  lea esi, [esi]
 80748a9:  lea edi, [edi]

080748b0 <local_strdup>:
 80748b0:  push ebp
 80748b1:  mov ebp, esp
 80748b3:  sub esp, 0x14
 80748b6:  mov DWORD PTR [esp], eax
 80748b9:  mov DWORD PTR [ebp-0x8], ebx
 80748bc:  mov DWORD PTR [ebp-0x4], esi
 80748bf:  mov esi, eax
 80748c1:  call 804eea0
 80748c6:  lea ebx, [eax+0x1]
 80748c9:  mov DWORD PTR [esp], ebx
 80748cc:  call 804d6f0
 80748d1:  mov edx, eax
 80748d3:  xor eax, eax
 80748d5:  test edx, edx
 80748d7:  je 80748e9
 80748d9:  mov DWORD PTR [esp+0x8], ebx
 80748dd:  mov DWORD PTR [esp+0x4], esi
 80748e1:  mov DWORD PTR [esp], edx
 80748e4:  call 804efc0
 80748e9:  mov ebx, DWORD PTR [ebp-0x8]
 80748ec:  mov esi, DWORD PTR [ebp-0x4]
 80748ef:  mov esp, ebp
 80748f1:  pop ebp
 80748f2:  ret
 80748f3:  lea esi, [esi]
 80748f9:  lea edi, [edi]

08074900 <fillin_rpath>:
 8074900:  push ebp
 8074901:  mov ebp, esp
 8074903:  push edi
 8074904:  push esi
 8074905:  push ebx
 8074906:  sub esp, 0x2c
 8074909:  mov DWORD PTR [ebp-0x10], eax
 807490c:  mov DWORD PTR [ebp-0x1c], edx
 807490f:  mov DWORD PTR [ebp-0x20], ecx
 8074912:  mov DWORD PTR [ebp-0x18], 0x0
 8074919:  lea esi, [esi]
 8074920:  mov edx, DWORD PTR [ebp-0x20]
 8074923:  lea ecx, [ebp-0x10]
 8074926:  mov DWORD PTR [esp], ecx
 8074929:  mov DWORD PTR [esp+0x4], edx
 807492d:  call 8094250
 8074932:  test eax, eax
 8074934:  mov DWORD PTR [ebp-0x2c], eax
 8074937:  je 8074b89
 807493d:  mov DWORD PTR [esp], eax
 8074940:  call 804eea0
 8074945:  test eax, eax
 8074947:  mov ebx, eax
 8074949:  jne 8074ad8
 807494f:  mov DWORD PTR [ebp-0x2c], 0x80b1f2e
 8074956:  mov eax, DWORD PTR [ebp+0x8]
 8074959:  test eax, eax
 807495b:  jne 8074b34
 8074961:  mov eax, ds:0x80d2e20
 8074966:  test eax, eax
 8074968:  mov DWORD PTR [ebp-0x28], eax
 807496b:  jne 807497c
 807496d:  jmp 80749e8
 807496f:  nop
 8074970:  mov eax, DWORD PTR [ebp-0x28]
 8074973:  mov eax, DWORD PTR [eax]
 8074975:  test eax, eax
 8074977:  mov DWORD PTR [ebp-0x28], eax
 807497a:  je 80749e8
 807497c:  mov edx, DWORD PTR [ebp-0x28]
 807497f:  cmp DWORD PTR [edx+0x10], ebx
 8074982:  jne 8074970
 8074984:  mov edi, DWORD PTR [edx+0xc]
 8074987:  cmp ebx, ebx
 8074989:  mov ecx, ebx
 807498b:  mov esi, DWORD PTR [ebp-0x2c]
 807498e:  repz cmpsb
 8074990:  jne 8074970
 8074992:  mov eax, DWORD PTR [ebp-0x18]
 8074995:  test eax, eax
 8074997:  je 8074b9e
 807499d:  mov edx, DWORD PTR [ebp-0x1c]
 80749a0:  xor eax, eax
 80749a2:  mov ecx, DWORD PTR [ebp-0x28]
 80749a5:  cmp DWORD PTR [edx], ecx
 80749a7:  je 8074920
 80749ad:  lea esi, [esi]
 80749b0:  add eax, 0x1
 80749b3:  cmp DWORD PTR [ebp-0x18], eax
 80749b6:  jbe 80749c3
 80749b8:  mov esi, DWORD PTR [ebp-0x1c]
 80749bb:  mov edx, DWORD PTR [ebp-0x28]
 80749be:  cmp DWORD PTR [esi+eax*4], edx
 80749c1:  jne 80749b0
 80749c3:  cmp eax, DWORD PTR [ebp-0x18]
 80749c6:  jne 8074920
 80749cc:  mov eax, DWORD PTR [ebp-0x18]
 80749cf:  add DWORD PTR [ebp-0x18], 0x1
 80749d3:  shl eax, 0x2
 80749d6:  mov esi, DWORD PTR [ebp-0x28]
 80749d9:  mov ecx, DWORD PTR [ebp-0x1c]
 80749dc:  mov DWORD PTR [ecx+eax], esi
 80749df:  jmp 8074920
 80749e4:  lea esi, [esi]
 80749e8:  mov eax, DWORD PTR [ebp+0x10]
 80749eb:  mov DWORD PTR [ebp-0x14], 0x0
 80749f2:  test eax, eax
 80749f4:  je 8074a07
 80749f6:  mov eax, DWORD PTR [ebp+0x10]
 80749f9:  mov DWORD PTR [esp], eax
 80749fc:  call 804eea0
 8074a01:  add eax, 0x1
 8074a04:  mov DWORD PTR [ebp-0x14], eax
 8074a07:  mov eax, ds:0x80d0cec
 8074a0c:  lea eax, [ebx+eax*4+0x15]
 8074a10:  add eax, DWORD PTR [ebp-0x14]
 8074a13:  mov DWORD PTR [esp], eax
 8074a16:  call 804d6f0
 8074a1b:  test eax, eax
 8074a1d:  mov edi, eax
 8074a1f:  je 8074bb8
 8074a25:  mov eax, ds:0x80d0cec
 8074a2a:  mov edx, DWORD PTR [ebp-0x2c]
 8074a2d:  lea eax, [edi+eax*4+0x14]
 8074a31:  mov DWORD PTR [edi+0xc], eax
 8074a34:  mov DWORD PTR [esp+0x8], ebx
 8074a38:  mov DWORD PTR [esp+0x4], edx
 8074a3c:  mov DWORD PTR [esp], eax
 8074a3f:  call 806c310
 8074a44:  mov BYTE PTR [eax], 0x0
 8074a47:  cmp ebx, DWORD PTR ds:0x80d2a28
 8074a4d:  mov DWORD PTR [edi+0x10], ebx
 8074a50:  jbe 8074a58
 8074a52:  mov DWORD PTR ds:0x80d2a28, ebx
 8074a58:  mov ecx, DWORD PTR [ebp-0x2c]
 8074a5b:  xor eax, eax
 8074a5d:  cmp BYTE PTR [ecx], 0x2f
 8074a60:  mov ecx, DWORD PTR ds:0x80d0cec
 8074a66:  setne al
 8074a69:  add eax, eax
 8074a6b:  test ecx, ecx
 8074a6d:  je 8074a83
 8074a6f:  xor edx, edx
 8074a71:  lea esi, [esi]
 8074a78:  mov DWORD PTR [edi+edx*4+0x14], eax
 8074a7c:  add edx, 0x1
 8074a7f:  cmp ecx, edx
 8074a81:  ja 8074a78
 8074a83:  mov eax, DWORD PTR [ebp+0x10]
 8074a86:  mov esi, DWORD PTR [ebp+0xc]
 8074a89:  test eax, eax
 8074a8b:  mov DWORD PTR [edi+0x4], esi
 8074a8e:  je 8074bac
 8074a94:  lea eax, [ebx+ecx*4+0x15]
 8074a98:  mov edx, DWORD PTR [ebp-0x14]
 8074a9b:  mov ecx, DWORD PTR [ebp+0x10]
 8074a9e:  lea eax, [edi+eax]
 8074aa1:  mov DWORD PTR [esp], eax
 8074aa4:  mov DWORD PTR [esp+0x8], edx
 8074aa8:  mov DWORD PTR [esp+0x4], ecx
 8074aac:  call 804efc0
 8074ab1:  mov DWORD PTR [edi+0x8], eax
 8074ab4:  mov eax, ds:0x80d2e20
 8074ab9:  mov esi, DWORD PTR [ebp-0x18]
 8074abc:  mov DWORD PTR [edi], eax
 8074abe:  mov eax, DWORD PTR [ebp-0x1c]
 8074ac1:  mov DWORD PTR ds:0x80d2e20, edi
 8074ac7:  mov DWORD PTR [eax+esi*4], edi
 8074aca:  add esi, 0x1
 8074acd:  mov DWORD PTR [ebp-0x18], esi
 8074ad0:  jmp 8074920
 8074ad5:  lea esi, [esi]
 8074ad8:  cmp eax, 0x1
 8074adb:  jbe 8074beb
 8074ae1:  mov edx, DWORD PTR [ebp-0x2c]
 8074ae4:  cmp BYTE PTR [edx+eax-0x1], 0x2f
 8074ae9:  jne 8074b7a
 8074aef:  add edx, eax
 8074af1:  lea esi, [esi]
 8074af8:  jmp 8074b0d
 8074afa:  lea esi, [esi]
 8074b00:  movzx eax, BYTE PTR [edx-0x2]
 8074b04:  sub edx, 0x1
 8074b07:  cmp al, 0x2f
 8074b09:  jne 8074b78
 8074b0b:  mov ebx, ecx
 8074b0d:  lea ecx, [ebx-0x1]
 8074b10:  cmp ecx, 0x1
 8074b13:  ja 8074b00
 8074b15:  test ecx, ecx
 8074b17:  mov ebx, ecx
 8074b19:  je 8074956
 8074b1f:  mov ecx, DWORD PTR [ebp-0x2c]
 8074b22:  cmp BYTE PTR [ecx+ebx-0x1], 0x2f
 8074b27:  jne 8074b7a
 8074b29:  mov eax, DWORD PTR [ebp+0x8]
 8074b2c:  test eax, eax
 8074b2e:  je 8074961
 8074b34:  mov eax, DWORD PTR [ebp-0x2c]
 8074b37:  cmp BYTE PTR [eax], 0x2f
 8074b3a:  jne 8074920
 8074b40:  cmp ebx, 0x5
 8074b43:  je 8074bcd
 8074b49:  cmp ebx, 0x9
 8074b4c:  lea esi, [esi]
 8074b50:  jne 8074920
 8074b56:  mov edi, DWORD PTR [ebp-0x2c]
 8074b59:  mov eax, 0x80b432e
 8074b5e:  mov ecx, 0x9
 8074b63:  cmp ebx, ebx
 8074b65:  mov esi, eax
 8074b67:  repz cmpsb
 8074b69:  jne 8074920
 8074b6f:  jmp 8074961
 8074b74:  lea esi, [esi]
 8074b78:  mov ebx, ecx
 8074b7a:  mov esi, DWORD PTR [ebp-0x2c]
 8074b7d:  mov BYTE PTR [esi+ebx], 0x2f
 8074b81:  add ebx, 0x1
 8074b84:  jmp 8074956
 8074b89:  mov esi, DWORD PTR [ebp-0x18]
 8074b8c:  mov eax, DWORD PTR [ebp-0x1c]
 8074b8f:  mov DWORD PTR [eax+esi*4], 0x0
 8074b96:  lea esp, [ebp-0xc]
 8074b99:  pop ebx
 8074b9a:  pop esi
 8074b9b:  pop edi
 8074b9c:  pop ebp
 8074b9d:  ret
 8074b9e:  xor eax, eax
 8074ba0:  mov DWORD PTR [ebp-0x18], 0x1
 8074ba7:  jmp 80749d6
 8074bac:  mov DWORD PTR [edi+0x8], 0x0
 8074bb3:  jmp 8074ab4
 8074bb8:  xor ecx, ecx
 8074bba:  xor edx, edx
 8074bbc:  mov eax, 0xc
 8074bc1:  mov DWORD PTR [esp], 0x80b3bb0
 8074bc8:  call 807c080
 8074bcd:  mov edi, DWORD PTR [ebp-0x2c]
 8074bd0:  mov eax, 0x80b4328
 8074bd5:  mov ecx, 0x5
 8074bda:  cmp ebx, ebx
 8074bdc:  mov esi, eax
 8074bde:  repz cmpsb
 8074be0:  jne 8074b49
 8074be6:  jmp 8074961
 8074beb:  mov ebx, 0x1
 8074bf0:  jmp 8074b1f
 8074bf5:  lea esi, [esi]
 8074bf9:  lea edi, [edi]

08074c00 <add_name_to_object>:
 8074c00:  push ebp
 8074c01:  mov ebp, esp
 8074c03:  push edi
 8074c04:  xor edi, edi
 8074c06:  push esi
 8074c07:  mov esi, edx
 8074c09:  push ebx
 8074c0a:  sub esp, 0x14
 8074c0d:  mov ebx, DWORD PTR [eax+0x1c]
 8074c10:  test ebx, ebx
 8074c12:  jne 8074c21
 8074c14:  jmp 8074c42
 8074c16:  xchg ax, ax
 8074c18:  mov eax, DWORD PTR [ebx+0x4]
 8074c1b:  test eax, eax
 8074c1d:  je 8074c40
 8074c1f:  mov ebx, eax
 8074c21:  mov eax, DWORD PTR [ebx]
 8074c23:  mov DWORD PTR [esp], esi
 8074c26:  mov DWORD PTR [esp+0x4], eax
 8074c2a:  call 806af90
 8074c2f:  test eax, eax
 8074c31:  jne 8074c18
 8074c33:  lea esp, [ebp-0xc]
 8074c36:  pop ebx
 8074c37:  pop esi
 8074c38:  pop edi
 8074c39:  pop ebp
 8074c3a:  ret
 8074c3b:  nop
 8074c3c:  lea esi, [esi]
 8074c40:  mov edi, ebx
 8074c42:  mov DWORD PTR [esp], esi
 8074c45:  call 804eea0
 8074c4a:  lea edx, [eax+0x1]
 8074c4d:  add eax, 0xd
 8074c50:  mov DWORD PTR [ebp-0x10], edx
 8074c53:  mov DWORD PTR [esp], eax
 8074c56:  call 804d6f0
 8074c5b:  test eax, eax
 8074c5d:  mov ebx, eax
 8074c5f:  je 8074cba
 8074c61:  test edi, edi
 8074c63:  je 8074c96
 8074c65:  mov edx, DWORD PTR [ebp-0x10]
 8074c68:  lea eax, [eax+0xc]
 8074c6b:  mov DWORD PTR [esp+0x4], esi
 8074c6f:  mov DWORD PTR [esp], eax
 8074c72:  mov DWORD PTR [esp+0x8], edx
 8074c76:  call 804efc0
 8074c7b:  mov DWORD PTR [ebx+0x4], 0x0
 8074c82:  mov DWORD PTR [ebx+0x8], 0x0
 8074c89:  mov DWORD PTR [edi+0x4], ebx
 8074c8c:  mov DWORD PTR [ebx], eax
 8074c8e:  lea esp, [ebp-0xc]
 8074c91:  pop ebx
 8074c92:  pop esi
 8074c93:  pop edi
 8074c94:  pop ebp
 8074c95:  ret
 8074c96:  mov DWORD PTR [esp+0xc], 0x80b42da
 8074c9e:  mov DWORD PTR [esp+0x8], 0x178
 8074ca6:  mov DWORD PTR [esp+0x4], 0x80b40ab
 8074cae:  mov DWORD PTR [esp], 0x80b40b5
 8074cb5:  call 8051490
 8074cba:  mov DWORD PTR [esp], 0x80b408f
 8074cc1:  xor ecx, ecx
 8074cc3:  mov edx, esi
 8074cc5:  mov eax, 0xc
 8074cca:  call 807c080
 8074ccf:  nop

08074cd0 <print_search_path>:
 8074cd0:  push ebp
 8074cd1:  mov ebp, esp
 8074cd3:  push edi
 8074cd4:  mov edi, eax
 8074cd6:  push esi
 8074cd7:  push ebx
 8074cd8:  sub esp, 0x24
 8074cdb:  mov eax, ds:0x80d0cf0
 8074ce0:  add eax, DWORD PTR ds:0x80d2a28
 8074ce6:  mov DWORD PTR [ebp-0x1c], edx
 8074ce9:  mov DWORD PTR [ebp-0x20], ecx
 8074cec:  add eax, 0x12
 8074cef:  and eax, 0xfc
 8074cf2:  sub esp, eax
 8074cf4:  mov DWORD PTR [esp], 0x80b40ca
 8074cfb:  lea esi, [esp+0x1b]
 8074cff:  call 807c8d0
 8074d04:  mov edx, DWORD PTR [edi]
 8074d06:  and esi, 0xf0
 8074d09:  test edx, edx
 8074d0b:  je 8074ddf
 8074d11:  mov eax, DWORD PTR [edx+0x4]
 8074d14:  mov DWORD PTR [ebp-0x10], eax
 8074d17:  mov eax, DWORD PTR [ebp-0x1c]
 8074d1a:  cmp DWORD PTR [ebp-0x10], eax
 8074d1d:  jne 8074ddf
 8074d23:  lea eax, [esi+0x1]
 8074d26:  mov DWORD PTR [ebp-0x18], eax
 8074d29:  mov DWORD PTR [ebp-0x14], 0x1
 8074d30:  mov eax, DWORD PTR [edx+0x10]
 8074d33:  mov DWORD PTR [esp+0x8], eax
 8074d37:  mov eax, DWORD PTR [edx+0xc]
 8074d3a:  mov DWORD PTR [esp], esi
 8074d3d:  mov DWORD PTR [esp+0x4], eax
 8074d41:  call 806c310
 8074d46:  mov ecx, DWORD PTR ds:0x80d0cec
 8074d4c:  test ecx, ecx
 8074d4e:  mov DWORD PTR [ebp-0x24], eax
 8074d51:  je 8074dca
 8074d53:  xor ebx, ebx
 8074d55:  lea esi, [esi]
 8074d58:  mov eax, DWORD PTR [edi]
 8074d5a:  cmp DWORD PTR [eax+ebx*4+0x14], 0x1
 8074d5f:  je 8074dbf
 8074d61:  lea eax, [ebx*8]
 8074d68:  add eax, DWORD PTR ds:0x80d0ce8
 8074d6e:  mov edx, DWORD PTR [eax+0x4]
 8074d71:  mov DWORD PTR [esp+0x8], edx
 8074d75:  mov eax, DWORD PTR [eax]
 8074d77:  mov DWORD PTR [esp+0x4], eax
 8074d7b:  mov eax, DWORD PTR [ebp-0x24]
 8074d7e:  mov DWORD PTR [esp], eax
 8074d81:  call 806c310
 8074d86:  cmp esi, eax
 8074d88:  je 8074e21
 8074d8e:  cmp DWORD PTR [ebp-0x18], eax
 8074d91:  je 8074e18
 8074d97:  mov BYTE PTR [eax-0x1], 0x0
 8074d9b:  mov edx, DWORD PTR [ebp-0x14]
 8074d9e:  mov eax, 0x80c6acf
 8074da3:  test edx, edx
 8074da5:  jne 8074dac
 8074da7:  mov eax, 0x80b40d8
 8074dac:  mov DWORD PTR [esp+0x4], esi
 8074db0:  mov DWORD PTR [esp], eax
 8074db3:  call 807c8b0
 8074db8:  mov DWORD PTR [ebp-0x14], 0x0
 8074dbf:  add ebx, 0x1
 8074dc2:  cmp DWORD PTR ds:0x80d0cec, ebx
 8074dc8:  ja 8074d58
 8074dca:  add edi, 0x4
 8074dcd:  mov edx, DWORD PTR [edi]
 8074dcf:  test edx, edx
 8074dd1:  je 8074ddf
 8074dd3:  mov eax, DWORD PTR [ebp-0x10]
 8074dd6:  cmp DWORD PTR [edx+0x4], eax
 8074dd9:  je 8074d30
 8074ddf:  mov eax, DWORD PTR [ebp-0x20]
 8074de2:  test eax, eax
 8074de4:  je 8074e2d
 8074de6:  mov eax, DWORD PTR [ebp-0x20]
 8074de9:  cmp BYTE PTR [eax], 0x0
 8074dec:  jne 8074df8
 8074dee:  mov eax, ds:0x80d0cd0
 8074df3:  mov eax, DWORD PTR [eax]
 8074df5:  mov DWORD PTR [ebp-0x20], eax
 8074df8:  mov DWORD PTR [esp+0x8], eax
 8074dfc:  mov eax, DWORD PTR [ebp-0x1c]
 8074dff:  mov DWORD PTR [esp], 0x80b40dc
 8074e06:  mov DWORD PTR [esp+0x4], eax
 8074e0a:  call 807c8b0
 8074e0f:  lea esp, [ebp-0xc]
 8074e12:  pop ebx
 8074e13:  pop esi
 8074e14:  pop edi
 8074e15:  pop ebp
 8074e16:  ret
 8074e17:  nop
 8074e18:  cmp BYTE PTR [esi], 0x2f
 8074e1b:  jne 8074d97
 8074e21:  mov BYTE PTR [eax], 0x0
 8074e24:  lea esi, [esi]
 8074e28:  jmp 8074d9b
 8074e2d:  mov eax, DWORD PTR [ebp-0x1c]
 8074e30:  mov DWORD PTR [esp], 0x80b40f1
 8074e37:  mov DWORD PTR [esp+0x4], eax
 8074e3b:  call 807c8b0
 8074e40:  jmp 8074e0f
 8074e42:  lea esi, [esi]
 8074e49:  lea edi, [edi]

08074e50 <lose>:
 8074e50:  push ebp
 8074e51:  mov ebp, esp
 8074e53:  sub esp, 0x1c
 8074e56:  cmp edx, 0xff
 8074e59:  mov DWORD PTR [ebp-0xc], ebx
 8074e5c:  mov ebx, DWORD PTR [ebp+0xc]
 8074e5f:  mov DWORD PTR [ebp-0x8], esi
 8074e62:  mov esi, ecx
 8074e64:  mov DWORD PTR [ebp-0x4], edi
 8074e67:  mov edi, eax
 8074e69:  je 8074e73
 8074e6b:  mov DWORD PTR [esp], edx
 8074e6e:  call 8073140
 8074e73:  test ebx, ebx
 8074e75:  je 8074ea2
 8074e77:  mov eax, DWORD PTR [ebx+0xc]
 8074e7a:  test eax, eax
 8074e7c:  jne 8074eeb
 8074e7e:  mov eax, DWORD PTR [ebx+0x10]
 8074e81:  test eax, eax
 8074e83:  je 8074ed8
 8074e85:  mov edx, DWORD PTR [ebx+0x18]
 8074e88:  mov DWORD PTR [eax+0xc], 0x0
 8074e8f:  lea eax, [edx+edx*8]
 8074e92:  sub DWORD PTR [eax*4+0x80d2e44], 0x1
 8074e9a:  mov DWORD PTR [esp], ebx
 8074e9d:  call 804b4a0
 8074ea2:  mov eax, DWORD PTR [ebp+0x8]
 8074ea5:  mov DWORD PTR [esp], eax
 8074ea8:  call 804b4a0
 8074ead:  mov ebx, DWORD PTR [ebp+0x14]
 8074eb0:  test ebx, ebx
 8074eb2:  je 8074ec3
 8074eb4:  mov eax, DWORD PTR [ebp+0x14]
 8074eb7:  mov DWORD PTR [eax+0xc], 0x0
 8074ebe:  call 807c330
 8074ec3:  mov eax, DWORD PTR [ebp+0x10]
 8074ec6:  xor ecx, ecx
 8074ec8:  mov edx, esi
 8074eca:  mov DWORD PTR [esp], eax
 8074ecd:  mov eax, edi
 8074ecf:  call 807c080
 8074ed4:  lea esi, [esi]
 8074ed8:  mov edx, DWORD PTR [ebx+0x18]
 8074edb:  lea eax, [edx+edx*8]
 8074ede:  mov DWORD PTR [eax*4+0x80d2e40], 0x0
 8074ee9:  jmp 8074e8f
 8074eeb:  mov DWORD PTR [esp+0xc], 0x80b529a
 8074ef3:  mov DWORD PTR [esp+0x8], 0x32f
 8074efb:  mov DWORD PTR [esp+0x4], 0x80b40ab
 8074f03:  mov DWORD PTR [esp], 0x80b40f9
 8074f0a:  call 8051490
 8074f0f:  nop

08074f10 <open_verify>:
 8074f10:  push ebp
 8074f11:  mov ebp, esp
 8074f13:  push edi
 8074f14:  push esi
 8074f15:  push ebx
 8074f16:  sub esp, 0x40
 8074f19:  mov DWORD PTR [ebp-0x1c], eax
 8074f1c:  movzx eax, BYTE PTR [ebp+0x10]
 8074f20:  mov DWORD PTR [ebp-0x20], edx
 8074f23:  mov edx, DWORD PTR [ebp-0x1c]
 8074f26:  mov DWORD PTR [esp+0x4], 0x0
 8074f2e:  mov BYTE PTR [ebp-0x21], al
 8074f31:  mov DWORD PTR [esp], edx
 8074f34:  call 804f1f0
 8074f39:  cmp eax, 0xff
 8074f3c:  mov DWORD PTR [ebp-0x14], eax
 8074f3f:  je 80750c8
 8074f45:  mov ecx, DWORD PTR gs:0x0
 8074f4c:  mov esi, 0xffffffe8
 8074f52:  mov edi, DWORD PTR [ebp-0x20]
 8074f55:  mov DWORD PTR [ebp-0x30], ecx
 8074f58:  mov DWORD PTR [ecx+esi], 0x0
 8074f5f:  add edi, 0x4
 8074f62:  mov DWORD PTR [esp+0x8], 0x200
 8074f6a:  mov DWORD PTR [ebp-0x28], edi
 8074f6d:  mov DWORD PTR [esp+0x4], edi
 8074f71:  mov DWORD PTR [esp], eax
 8074f74:  call 804f250
 8074f79:  mov edx, DWORD PTR [ebp-0x20]
 8074f7c:  cmp eax, 0x33
 8074f7f:  mov DWORD PTR [ebp-0x38], eax
 8074f82:  mov DWORD PTR [edx], eax
 8074f84:  jle 8075280
 8074f8a:  mov esi, DWORD PTR [ebp-0x28]
 8074f8d:  mov edi, 0x80b4350
 8074f92:  mov ecx, 0x9
 8074f97:  repz cmpsb
 8074f99:  jne 80752a1
 8074f9f:  mov esi, DWORD PTR [ebp-0x28]
 8074fa2:  xor edi, edi
 8074fa4:  mov DWORD PTR [ebp-0x18], 0x80b3c34
 8074fab:  cmp DWORD PTR [esi+0x14], 0x1
 8074faf:  jne 8075195
 8074fb5:  cmp WORD PTR [esi+0x12], 0x3
 8074fba:  jne 8075259
 8074fc0:  movzx eax, WORD PTR [esi+0x10]
 8074fc4:  cmp eax, 0x3
 8074fc7:  jne 80752cb
 8074fcd:  mov eax, DWORD PTR [ebp-0x28]
 8074fd0:  xor edi, edi
 8074fd2:  mov DWORD PTR [ebp-0x18], 0x80b3c88
 8074fd9:  cmp WORD PTR [eax+0x2a], 0x20
 8074fde:  jne 8075195
 8074fe4:  movzx edx, WORD PTR [eax+0x2c]
 8074fe8:  mov esi, eax
 8074fea:  mov ecx, DWORD PTR [eax+0x1c]
 8074fed:  mov ebx, edx
 8074fef:  shl ebx, 0x5
 8074ff2:  lea eax, [ebx+ecx]
 8074ff5:  cmp eax, DWORD PTR [ebp-0x38]
 8074ff8:  ja 8075140
 8074ffe:  add ecx, esi
 8075000:  mov DWORD PTR [ebp-0x10], ecx
 8075003:  mov eax, ecx
 8075005:  add eax, ebx
 8075007:  cmp DWORD PTR [ebp-0x10], eax
 807500a:  jae 80750c8
 8075010:  mov ebx, DWORD PTR [ebp-0x10]
 8075013:  jmp 807502b
 8075015:  lea esi, [esi]
 8075018:  mov eax, edx
 807501a:  add ebx, 0x20
 807501d:  shl eax, 0x5
 8075020:  add eax, DWORD PTR [ebp-0x10]
 8075023:  cmp ebx, eax
 8075025:  jae 80750c8
 807502b:  cmp DWORD PTR [ebx], 0x4
 807502e:  jne 8075018
 8075030:  mov eax, DWORD PTR [ebx+0x10]
 8075033:  cmp eax, 0x1f
 8075036:  mov DWORD PTR [ebp-0x34], eax
 8075039:  jbe 8075018
 807503b:  cmp DWORD PTR [ebx+0x1c], 0x3
 807503f:  jbe 8075018
 8075041:  mov edx, DWORD PTR [ebx+0x4]
 8075044:  mov ecx, DWORD PTR [ebp-0x20]
 8075047:  lea eax, [edx+eax]
 807504a:  cmp eax, DWORD PTR [ecx]
 807504c:  ja 80750e8
 8075052:  add edx, DWORD PTR [ebp-0x28]
 8075055:  mov DWORD PTR [ebp-0x3c], 0x80b4340
 807505c:  mov DWORD PTR [ebp-0x38], edx
 807505f:  mov esi, edx
 8075061:  jmp 8075093
 8075063:  nop
 8075064:  lea esi, [esi]
 8075068:  mov edx, DWORD PTR [ebp-0x38]
 807506b:  mov eax, DWORD PTR [edx]
 807506d:  mov edx, DWORD PTR [edx+0x4]
 8075070:  add eax, 0x3
 8075073:  add edx, 0x3
 8075076:  and eax, 0xfc
 8075079:  and edx, 0xfc
 807507c:  lea edx, [eax+edx+0xc]
 8075080:  mov eax, DWORD PTR [ebp-0x34]
 8075083:  sub eax, 0x20
 8075086:  cmp edx, eax
 8075088:  ja 80750d8
 807508a:  add DWORD PTR [ebp-0x38], edx
 807508d:  sub DWORD PTR [ebp-0x34], edx
 8075090:  mov esi, DWORD PTR [ebp-0x38]
 8075093:  mov edi, DWORD PTR [ebp-0x3c]
 8075096:  mov ecx, 0x10
 807509b:  repz cmpsb
 807509d:  jne 8075068
 807509f:  mov esi, DWORD PTR [ebp-0x34]
 80750a2:  test esi, esi
 80750a4:  jne 8075216
 80750aa:  mov eax, DWORD PTR [ebp-0x28]
 80750ad:  add ebx, 0x20
 80750b0:  movzx edx, WORD PTR [eax+0x2c]
 80750b4:  mov eax, edx
 80750b6:  shl eax, 0x5
 80750b9:  add eax, DWORD PTR [ebp-0x10]
 80750bc:  cmp ebx, eax
 80750be:  jb 807502b
 80750c4:  lea esi, [esi]
 80750c8:  mov eax, DWORD PTR [ebp-0x14]
 80750cb:  lea esp, [ebp-0xc]
 80750ce:  pop ebx
 80750cf:  pop esi
 80750d0:  pop edi
 80750d1:  pop ebp
 80750d2:  ret
 80750d3:  nop
 80750d4:  lea esi, [esi]
 80750d8:  mov esi, DWORD PTR [ebp-0x28]
 80750db:  movzx edx, WORD PTR [esi+0x2c]
 80750df:  jmp 8075018
 80750e4:  lea esi, [esi]
 80750e8:  mov eax, DWORD PTR [ebp-0x34]
 80750eb:  mov edi, DWORD PTR [ebp-0x14]
 80750ee:  add eax, 0x12
 80750f1:  and eax, 0xfc
 80750f4:  sub esp, eax
 80750f6:  mov DWORD PTR [esp+0x8], 0x0
 80750fe:  mov eax, DWORD PTR [ebx+0x4]
 8075101:  lea esi, [esp+0x1f]
 8075105:  and esi, 0xf0
 8075108:  mov DWORD PTR [ebp-0x38], esi
 807510b:  mov DWORD PTR [esp], edi
 807510e:  mov DWORD PTR [esp+0x4], eax
 8075112:  call 8095c10
 8075117:  mov eax, DWORD PTR [ebp-0x34]
 807511a:  mov DWORD PTR [esp+0x4], esi
 807511e:  mov DWORD PTR [esp], edi
 8075121:  mov DWORD PTR [esp+0x8], eax
 8075125:  call 804f250
 807512a:  cmp DWORD PTR [ebp-0x34], eax
 807512d:  jne 8075182
 807512f:  mov DWORD PTR [ebp-0x3c], 0x80b4340
 8075136:  mov esi, DWORD PTR [ebp-0x38]
 8075139:  jmp 8075093
 807513e:  xchg ax, ax
 8075140:  lea eax, [ebx+0x12]
 8075143:  and eax, 0x3ffffc
 8075148:  sub esp, eax
 807514a:  mov eax, DWORD PTR [ebp-0x14]
 807514d:  lea edi, [esp+0x1f]
 8075151:  and edi, 0xf0
 8075154:  mov DWORD PTR [esp+0x4], ecx
 8075158:  mov DWORD PTR [ebp-0x10], edi
 807515b:  mov DWORD PTR [esp+0x8], 0x0
 8075163:  mov DWORD PTR [esp], eax
 8075166:  call 8095c10
 807516b:  mov edx, DWORD PTR [ebp-0x14]
 807516e:  mov DWORD PTR [esp+0x8], ebx
 8075172:  mov DWORD PTR [esp+0x4], edi
 8075176:  mov DWORD PTR [esp], edx
 8075179:  call 804f250
 807517e:  cmp eax, ebx
 8075180:  je 80751c6
 8075182:  mov esi, DWORD PTR [ebp-0x30]
 8075185:  mov ecx, 0xffffffe8
 807518b:  mov DWORD PTR [ebp-0x18], 0x80b4112
 8075192:  mov edi, DWORD PTR [esi+ecx]
 8075195:  cmp BYTE PTR [ebp-0x21], 0x0
 8075199:  jne 80751da
 807519b:  mov eax, DWORD PTR [ebp-0x18]
 807519e:  mov ecx, DWORD PTR [ebp-0x1c]
 80751a1:  mov edx, DWORD PTR [ebp-0x14]
 80751a4:  mov DWORD PTR [esp+0xc], 0x0
 80751ac:  mov DWORD PTR [esp+0x8], eax
 80751b0:  mov eax, edi
 80751b2:  mov DWORD PTR [esp+0x4], 0x0
 80751ba:  mov DWORD PTR [esp], 0x0
 80751c1:  call 8074e50
 80751c6:  mov edi, DWORD PTR [ebp-0x28]
 80751c9:  mov eax, DWORD PTR [ebp-0x10]
 80751cc:  movzx edx, WORD PTR [edi+0x2c]
 80751d0:  mov ebx, edx
 80751d2:  shl ebx, 0x5
 80751d5:  jmp 8075005
 80751da:  mov esi, DWORD PTR [ebp-0x1c]
 80751dd:  mov DWORD PTR [esp], esi
 80751e0:  call 804eea0
 80751e5:  lea edx, [eax+0x1]
 80751e8:  add eax, 0x13
 80751eb:  and eax, 0xfc
 80751ee:  sub esp, eax
 80751f0:  lea eax, [esp+0x1f]
 80751f4:  and eax, 0xf0
 80751f7:  mov DWORD PTR [esp+0x8], edx
 80751fb:  mov DWORD PTR [esp+0x4], esi
 80751ff:  mov DWORD PTR [esp], eax
 8075202:  call 804efc0
 8075207:  mov DWORD PTR [esp], esi
 807520a:  mov ebx, eax
 807520c:  call 804b4a0
 8075211:  mov DWORD PTR [ebp-0x1c], ebx
 8075214:  jmp 807519b
 8075216:  mov edx, DWORD PTR [ebp-0x38]
 8075219:  mov ecx, edx
 807521b:  mov eax, DWORD PTR [edx+0x14]
 807521e:  mov ebx, DWORD PTR [ecx+0x1c]
 8075221:  mov ecx, DWORD PTR [ecx+0x10]
 8075224:  mov edx, DWORD PTR [edx+0x18]
 8075227:  test ecx, ecx
 8075229:  jne 8075259
 807522b:  mov ecx, DWORD PTR ds:0x80d2e24
 8075231:  test ecx, ecx
 8075233:  je 80750c8
 8075239:  and eax, 0xff
 807523e:  and edx, 0xff
 8075244:  shl eax, 0x8
 8075247:  add eax, edx
 8075249:  movzx edx, bl
 807524c:  shl eax, 0x8
 807524f:  add eax, edx
 8075251:  cmp eax, ecx
 8075253:  jbe 80750c8
 8075259:  mov esi, DWORD PTR [ebp-0x14]
 807525c:  mov DWORD PTR [esp], esi
 807525f:  call 8073140
 8075264:  mov eax, DWORD PTR [ebp-0x30]
 8075267:  mov edi, 0xffffffe8
 807526d:  mov DWORD PTR [ebp-0x14], 0xffffffff
 8075274:  mov DWORD PTR [eax+edi], 0x2
 807527b:  jmp 80750c8
 8075280:  mov ecx, DWORD PTR [ebp-0x30]
 8075283:  mov DWORD PTR [ebp-0x18], 0x80b4128
 807528a:  mov edi, DWORD PTR [ecx+esi]
 807528d:  test edi, edi
 807528f:  je 8075195
 8075295:  mov DWORD PTR [ebp-0x18], 0x80b4112
 807529c:  jmp 8075195
 80752a1:  mov eax, DWORD PTR [ebp-0x20]
 80752a4:  xor edi, edi
 80752a6:  mov DWORD PTR [ebp-0x18], 0x80b4137
 80752ad:  cmp DWORD PTR [eax+0x4], 0x464c457f
 80752b4:  jne 8075195
 80752ba:  mov edx, DWORD PTR [ebp-0x28]
 80752bd:  cmp BYTE PTR [edx+0x4], 0x1
 80752c1:  je 80752e2
 80752c3:  mov ecx, DWORD PTR [ebp+0xc]
 80752c6:  mov BYTE PTR [ecx], 0x1
 80752c9:  jmp 8075259
 80752cb:  xor edi, edi
 80752cd:  cmp eax, 0x2
 80752d0:  mov DWORD PTR [ebp-0x18], 0x80b3c60
 80752d7:  je 8074fcd
 80752dd:  jmp 8075195
 80752e2:  mov esi, DWORD PTR [ebp-0x28]
 80752e5:  xor edi, edi
 80752e7:  mov DWORD PTR [ebp-0x18], 0x80b3bd4
 80752ee:  cmp BYTE PTR [esi+0x5], 0x1
 80752f2:  jne 8075195
 80752f8:  mov eax, DWORD PTR [ebp-0x28]
 80752fb:  xor edi, edi
 80752fd:  mov DWORD PTR [ebp-0x18], 0x80b3c00
 8075304:  cmp BYTE PTR [eax+0x6], 0x1
 8075308:  jne 8075195
 807530e:  mov edx, DWORD PTR [ebp-0x28]
 8075311:  xor edi, edi
 8075313:  mov DWORD PTR [ebp-0x18], 0x80b414a
 807531a:  cmp BYTE PTR [edx+0x7], 0x0
 807531e:  jne 8075195
 8075324:  mov ecx, DWORD PTR [ebp-0x28]
 8075327:  xor edi, edi
 8075329:  mov DWORD PTR [ebp-0x18], 0x80b4171
 8075330:  cmp BYTE PTR [ecx+0x8], 0x0
 8075334:  jne 8075195
 807533a:  mov DWORD PTR [ebp-0x18], 0x80b4162
 8075341:  jmp 8075195
 8075346:  lea esi, [esi]
 8075349:  lea edi, [edi]

08075350 <open_path>:
 8075350:  push ebp
 8075351:  mov ebp, esp
 8075353:  push edi
 8075354:  push esi
 8075355:  push ebx
 8075356:  sub esp, 0x98
 807535c:  mov DWORD PTR [ebp-0x84], eax
 8075362:  mov eax, DWORD PTR [ebp+0x8]
 8075365:  mov DWORD PTR [ebp-0x88], edx
 807536b:  mov DWORD PTR [ebp-0x8c], ecx
 8075371:  mov eax, DWORD PTR [eax]
 8075373:  test eax, eax
 8075375:  mov DWORD PTR [ebp-0x80], eax
 8075378:  je 807562b
 807537e:  mov eax, edx
 8075380:  add eax, DWORD PTR ds:0x80d0cf0
 8075386:  add eax, DWORD PTR ds:0x80d2a28
 807538c:  mov DWORD PTR [ebp-0x7c], 0x0
 8075393:  add eax, 0x12
 8075396:  and eax, 0xfc
 8075399:  sub esp, eax
 807539b:  mov eax, DWORD PTR [ebp-0x80]
 807539e:  lea edx, [esp+0x1b]
 80753a2:  and edx, 0xf0
 80753a5:  mov DWORD PTR [ebp-0x90], edx
 80753ab:  mov eax, DWORD PTR [eax]
 80753ad:  mov DWORD PTR [ebp-0x74], eax
 80753b0:  xor eax, eax
 80753b2:  lea esi, [esi]
 80753b8:  test BYTE PTR ds:0x80d2dd0, 0x1
 80753bf:  mov DWORD PTR [ebp-0x70], eax
 80753c2:  jne 80756cd
 80753c8:  mov edx, DWORD PTR [ebp-0x74]
 80753cb:  mov ebx, 0x1
 80753d0:  mov eax, DWORD PTR [edx+0x10]
 80753d3:  mov DWORD PTR [esp+0x8], eax
 80753d7:  mov eax, DWORD PTR [edx+0xc]
 80753da:  mov DWORD PTR [esp+0x4], eax
 80753de:  mov eax, DWORD PTR [ebp-0x90]
 80753e4:  mov DWORD PTR [esp], eax
 80753e7:  call 806c310
 80753ec:  mov DWORD PTR [ebp-0x78], 0x0
 80753f3:  mov DWORD PTR [ebp-0x94], eax
 80753f9:  mov eax, ds:0x80d0cec
 80753fe:  test eax, eax
 8075400:  je 8075537
 8075406:  mov edx, DWORD PTR [ebp-0x88]
 807540c:  not edx
 807540e:  mov DWORD PTR [ebp-0x98], edx
 8075414:  jmp 8075455
 8075416:  xchg ax, ax
 8075418:  cmp esi, 0xff
 807541b:  je 8075560
 8075421:  or DWORD PTR [ebp-0x78], 0x1
 8075425:  mov DWORD PTR [edx+ebx*4+0x10], 0x2
 807542d:  mov eax, DWORD PTR [ebp-0x8c]
 8075433:  test eax, eax
 8075435:  jne 8075678
 807543b:  cmp esi, 0xff
 807543e:  jne 80755e8
 8075444:  cmp DWORD PTR ds:0x80d0cec, ebx
 807544a:  lea eax, [ebx+0x1]
 807544d:  jbe 8075518
 8075453:  mov ebx, eax
 8075455:  mov eax, DWORD PTR [ebp-0x74]
 8075458:  cmp DWORD PTR [eax+ebx*4+0x10], 0x1
 807545d:  je 8075444
 807545f:  lea eax, [ebx*8-0x8]
 8075466:  add eax, DWORD PTR ds:0x80d0ce8
 807546c:  mov edx, DWORD PTR [eax+0x4]
 807546f:  mov DWORD PTR [esp+0x8], edx
 8075473:  mov eax, DWORD PTR [eax]
 8075475:  mov DWORD PTR [esp+0x4], eax
 8075479:  mov edx, DWORD PTR [ebp-0x94]
 807547f:  mov DWORD PTR [esp], edx
 8075482:  call 806c310
 8075487:  mov edx, DWORD PTR [ebp-0x88]
 807548d:  mov DWORD PTR [esp+0x8], edx
 8075491:  mov edx, DWORD PTR [ebp-0x84]
 8075497:  mov DWORD PTR [esp], eax
 807549a:  mov DWORD PTR [esp+0x4], edx
 807549e:  call 806c310
 80754a3:  mov edi, eax
 80754a5:  sub edi, DWORD PTR [ebp-0x90]
 80754ab:  test BYTE PTR ds:0x80d2dd0, 0x1
 80754b2:  jne 807565d
 80754b8:  mov DWORD PTR [esp+0x8], 0x0
 80754c0:  mov edx, DWORD PTR [ebp+0x1c]
 80754c3:  mov DWORD PTR [esp+0x4], edx
 80754c7:  mov eax, DWORD PTR [ebp+0x18]
 80754ca:  mov DWORD PTR [esp], eax
 80754cd:  mov edx, DWORD PTR [ebp+0x10]
 80754d0:  mov ecx, DWORD PTR [ebp+0x14]
 80754d3:  mov eax, DWORD PTR [ebp-0x90]
 80754d9:  call 8074f10
 80754de:  mov edx, DWORD PTR [ebp-0x74]
 80754e1:  mov esi, eax
 80754e3:  mov eax, DWORD PTR [edx+ebx*4+0x10]
 80754e7:  test eax, eax
 80754e9:  je 8075418
 80754ef:  sub eax, 0x1
 80754f2:  setne al
 80754f5:  movzx eax, al
 80754f8:  or DWORD PTR [ebp-0x78], eax
 80754fb:  cmp esi, 0xff
 80754fe:  jne 807542d
 8075504:  cmp DWORD PTR ds:0x80d0cec, ebx
 807550a:  lea eax, [ebx+0x1]
 807550d:  ja 8075453
 8075513:  nop
 8075514:  lea esi, [esi]
 8075518:  mov edi, DWORD PTR [ebp-0x78]
 807551b:  test edi, edi
 807551d:  je 8075537
 807551f:  mov edx, 0xffffffe8
 8075525:  mov eax, gs:0x0
 807552b:  mov eax, DWORD PTR [eax+edx]
 807552e:  cmp eax, 0x2
 8075531:  jne 807563a
 8075537:  add DWORD PTR [ebp-0x80], 0x4
 807553b:  mov eax, DWORD PTR [ebp-0x80]
 807553e:  mov edx, DWORD PTR [ebp-0x78]
 8075541:  or DWORD PTR [ebp-0x7c], edx
 8075544:  mov eax, DWORD PTR [eax]
 8075546:  test eax, eax
 8075548:  mov DWORD PTR [ebp-0x74], eax
 807554b:  je 8075620
 8075551:  mov eax, DWORD PTR [ebp-0x70]
 8075554:  jmp 80753b8
 8075559:  lea esi, [esi]
 8075560:  mov eax, DWORD PTR [ebp+0x14]
 8075563:  test eax, eax
 8075565:  je 8075582
 8075567:  mov edx, DWORD PTR [ebp+0x14]
 807556a:  mov eax, DWORD PTR [edx+0x18]
 807556d:  xor edx, edx
 807556f:  lea eax, [eax+eax*8]
 8075572:  mov eax, DWORD PTR [eax*4+0x80d2e40]
 8075579:  test BYTE PTR [eax+0x195], 0x10
 8075580:  jne 80755d8
 8075582:  mov eax, DWORD PTR [ebp-0x90]
 8075588:  mov edx, DWORD PTR [ebp-0x98]
 807558e:  add eax, edi
 8075590:  mov BYTE PTR [eax+edx], 0x0
 8075594:  lea eax, [ebp-0x6c]
 8075597:  mov DWORD PTR [esp+0x8], eax
 807559b:  mov edx, DWORD PTR [ebp-0x90]
 80755a1:  mov DWORD PTR [esp], 0x3
 80755a8:  mov DWORD PTR [esp+0x4], edx
 80755ac:  call 8073100
 80755b1:  test eax, eax
 80755b3:  jne 80755c8
 80755b5:  mov eax, DWORD PTR [ebp-0x5c]
 80755b8:  and eax, 0xf000
 80755bd:  cmp eax, 0x4000
 80755c2:  je 8075648
 80755c8:  mov eax, DWORD PTR [ebp-0x74]
 80755cb:  mov edx, 0x1
 80755d0:  mov DWORD PTR [eax+ebx*4+0x10], 0x1
 80755d8:  xor eax, eax
 80755da:  cmp edx, 0x1
 80755dd:  setne al
 80755e0:  or DWORD PTR [ebp-0x78], eax
 80755e3:  jmp 8075444
 80755e8:  mov DWORD PTR [esp], edi
 80755eb:  call 804d6f0
 80755f0:  mov edx, eax
 80755f2:  mov eax, DWORD PTR [ebp+0xc]
 80755f5:  test edx, edx
 80755f7:  mov DWORD PTR [eax], edx
 80755f9:  je 807571b
 80755ff:  mov DWORD PTR [esp+0x8], edi
 8075603:  mov eax, DWORD PTR [ebp-0x90]
 8075609:  mov DWORD PTR [esp], edx
 807560c:  mov DWORD PTR [esp+0x4], eax
 8075610:  call 804efc0
 8075615:  lea esp, [ebp-0xc]
 8075618:  mov eax, esi
 807561a:  pop ebx
 807561b:  pop esi
 807561c:  pop edi
 807561d:  pop ebp
 807561e:  ret
 807561f:  nop
 8075620:  mov eax, DWORD PTR [ebp-0x7c]
 8075623:  test eax, eax
 8075625:  je 80756f1
 807562b:  mov esi, 0xffffffff
 8075630:  lea esp, [ebp-0xc]
 8075633:  mov eax, esi
 8075635:  pop ebx
 8075636:  pop esi
 8075637:  pop edi
 8075638:  pop ebp
 8075639:  ret
 807563a:  cmp eax, 0xd
 807563d:  je 8075537
 8075643:  jmp 807562b
 8075645:  lea esi, [esi]
 8075648:  mov edx, DWORD PTR [ebp-0x74]
 807564b:  mov DWORD PTR [edx+ebx*4+0x10], 0x2
 8075653:  mov edx, 0x2
 8075658:  jmp 80755d8
 807565d:  mov eax, DWORD PTR [ebp-0x90]
 8075663:  mov DWORD PTR [esp], 0x80b418e
 807566a:  mov DWORD PTR [esp+0x4], eax
 807566e:  call 807c8d0
 8075673:  jmp 80754b8
 8075678:  mov eax, ds:0x80d0cd8
 807567d:  test eax, eax
 807567f:  je 807543b
 8075685:  lea eax, [ebp-0x6c]
 8075688:  mov DWORD PTR [esp+0x8], eax
 807568c:  mov DWORD PTR [esp+0x4], esi
 8075690:  mov DWORD PTR [esp], 0x3
 8075697:  call 804f1b0
 807569c:  test eax, eax
 807569e:  jne 80756aa
 80756a0:  test BYTE PTR [ebp-0x5b], 0x8
 80756a4:  jne 807543b
 80756aa:  mov DWORD PTR [esp], esi
 80756ad:  lea esi, [esi]
 80756b0:  call 8073140
 80756b5:  mov edx, 0xffffffe8
 80756bb:  mov eax, gs:0x0
 80756c1:  mov DWORD PTR [eax+edx], 0x2
 80756c8:  jmp 8075444
 80756cd:  mov edx, DWORD PTR [ebp-0x74]
 80756d0:  mov edx, DWORD PTR [edx+0x4]
 80756d3:  cmp edx, eax
 80756d5:  mov DWORD PTR [ebp-0x70], edx
 80756d8:  je 80753c8
 80756de:  mov eax, DWORD PTR [ebp-0x74]
 80756e1:  mov ecx, DWORD PTR [eax+0x8]
 80756e4:  mov eax, DWORD PTR [ebp-0x80]
 80756e7:  call 8074cd0
 80756ec:  jmp 80753c8
 80756f1:  mov edx, DWORD PTR [ebp+0x8]
 80756f4:  mov eax, DWORD PTR [edx+0x4]
 80756f7:  test eax, eax
 80756f9:  jne 807572d
 80756fb:  cmp DWORD PTR [ebp+0x8], 0x80d0cf4
 8075702:  je 807562b
 8075708:  mov eax, DWORD PTR [ebp+0x8]
 807570b:  mov esi, 0xffffffff
 8075710:  mov DWORD PTR [eax], 0xffffffff
 8075716:  jmp 8075615
 807571b:  mov DWORD PTR [esp], esi
 807571e:  mov esi, 0xffffffff
 8075723:  call 8073140
 8075728:  jmp 8075615
 807572d:  mov eax, DWORD PTR [edx]
 807572f:  mov DWORD PTR [esp], eax
 8075732:  call 804b4a0
 8075737:  nop
 8075738:  jmp 80756fb
 807573a:  lea esi, [esi]

08075740 <_dl_init_paths>:
 8075740:  push ebp
 8075741:  mov ecx, 0x80d0cec
 8075746:  mov ebp, esp
 8075748:  push edi
 8075749:  push esi
 807574a:  push ebx
 807574b:  sub esp, 0x1c
 807574e:  mov edx, DWORD PTR ds:0x80d2dcc
 8075754:  mov DWORD PTR [ebp-0x10], eax
 8075757:  mov eax, ds:0x80d2dec
 807575c:  mov DWORD PTR [esp], 0x80d0cf0
 8075763:  call 8050b70
 8075768:  sub esp, 0x4
 807576b:  mov ds:0x80d0ce8, eax
 8075770:  mov DWORD PTR [esp], 0xc
 8075777:  call 804d6f0
 807577c:  test eax, eax
 807577e:  mov esi, eax
 8075780:  mov ds:0x80d0cf4, eax
 8075785:  je 807594f
 807578b:  mov edx, DWORD PTR ds:0x80d0cec
 8075791:  mov eax, 0xcccccccd
 8075796:  lea edx, [edx*4+0x27]
 807579d:  mul edx
 807579f:  shr edx, 0x4
 80757a2:  lea ebx, [edx+edx*4]
 80757a5:  mov eax, ebx
 80757a7:  shl eax, 0x6
 80757aa:  mov DWORD PTR [esp], eax
 80757ad:  call 804d6f0
 80757b2:  mov DWORD PTR [esi], eax
 80757b4:  mov eax, ds:0x80d0cf4
 80757b9:  mov ecx, DWORD PTR [eax]
 80757bb:  mov eax, 0x80b3bb0
 80757c0:  test ecx, ecx
 80757c2:  je 8075958
 80757c8:  shl ebx, 0x2
 80757cb:  xor edi, edi
 80757cd:  mov DWORD PTR [ebp-0x14], ebx
 80757d0:  mov eax, DWORD PTR [ebp-0x14]
 80757d3:  mov ebx, 0x80b4328
 80757d8:  mov DWORD PTR ds:0x80d0cf8, 0x0
 80757e2:  mov DWORD PTR ds:0x80d2e20, ecx
 80757e8:  neg eax
 80757ea:  mov DWORD PTR [ebp-0x18], eax
 80757ed:  mov eax, DWORD PTR [edi*4+0x80b4338]
 80757f4:  mov edx, ebx
 80757f6:  mov DWORD PTR [ecx+0xc], ebx
 80757f9:  mov DWORD PTR [esi], ecx
 80757fb:  mov DWORD PTR [ecx+0x4], 0x80b41a0
 8075802:  mov DWORD PTR [ecx+0x8], 0x0
 8075809:  lea ebx, [ebx+eax+0x1]
 807580d:  mov DWORD PTR [ecx+0x10], eax
 8075810:  cmp BYTE PTR [edx], 0x2f
 8075813:  jne 8075969
 8075819:  mov edx, DWORD PTR ds:0x80d0cec
 807581f:  xor eax, eax
 8075821:  test edx, edx
 8075823:  je 8075837
 8075825:  lea esi, [esi]
 8075828:  mov DWORD PTR [ecx+eax*4+0x14], 0x0
 8075830:  add eax, 0x1
 8075833:  cmp edx, eax
 8075835:  ja 8075828
 8075837:  add esi, 0x4
 807583a:  sub edi, 0x1
 807583d:  je 8075850
 807583f:  mov edx, DWORD PTR [ebp-0x18]
 8075842:  mov edi, 0x1
 8075847:  add ecx, DWORD PTR [ebp-0x14]
 807584a:  mov DWORD PTR [ecx+edx], ecx
 807584d:  jmp 80757ed
 807584f:  nop
 8075850:  mov edx, DWORD PTR [ebp-0x10]
 8075853:  mov DWORD PTR [ecx], 0x0
 8075859:  mov DWORD PTR ds:0x80d2a28, 0x9
 8075863:  mov DWORD PTR [esi], 0x0
 8075869:  test edx, edx
 807586b:  je 8075875
 807586d:  mov eax, DWORD PTR [ebp-0x10]
 8075870:  cmp BYTE PTR [eax], 0x0
 8075873:  jne 8075898
 8075875:  mov DWORD PTR ds:0x80d0ce0, 0xffffffff
 807587f:  mov eax, ds:0x80d2e20
 8075884:  mov ds:0x80d2e0c, eax
 8075889:  lea esp, [ebp-0xc]
 807588c:  pop ebx
 807588d:  pop esi
 807588e:  pop edi
 807588f:  pop ebp
 8075890:  ret
 8075891:  lea esi, [esi]
 8075898:  mov DWORD PTR [esp], eax
 807589b:  mov ebx, 0x8
 80758a0:  call 804eea0
 80758a5:  lea edx, [eax+0x1]
 80758a8:  add eax, 0x13
 80758ab:  and eax, 0xfc
 80758ae:  sub esp, eax
 80758b0:  mov DWORD PTR [esp+0x8], edx
 80758b4:  mov edx, DWORD PTR [ebp-0x10]
 80758b7:  lea eax, [esp+0x1f]
 80758bb:  and eax, 0xf0
 80758be:  mov DWORD PTR [esp], eax
 80758c1:  mov DWORD PTR [esp+0x4], edx
 80758c5:  call 804efc0
 80758ca:  mov edx, DWORD PTR [ebp-0x10]
 80758cd:  mov ecx, 0x1
 80758d2:  mov esi, eax
 80758d4:  movzx eax, BYTE PTR [edx]
 80758d7:  test al, al
 80758d9:  je 80758f9
 80758db:  nop
 80758dc:  lea esi, [esi]
 80758e0:  sub eax, 0x3a
 80758e3:  cmp al, 0x2
 80758e5:  adc ecx, 0x0
 80758e8:  add edx, 0x1
 80758eb:  movzx eax, BYTE PTR [edx]
 80758ee:  test al, al
 80758f0:  jne 80758e0
 80758f2:  lea ebx, [ecx*4+0x4]
 80758f9:  mov DWORD PTR [esp], ebx
 80758fc:  call 804d6f0
 8075901:  mov edx, eax
 8075903:  test edx, edx
 8075905:  mov ds:0x80d0ce0, eax
 807590a:  mov eax, 0x80b3bb0
 807590f:  je 8075958
 8075911:  mov eax, ds:0x80d0cd8
 8075916:  mov ecx, 0x80b41cc
 807591b:  mov DWORD PTR [esp+0x8], 0x0
 8075923:  mov DWORD PTR [esp+0x4], 0x80b0332
 807592b:  mov DWORD PTR [esp], eax
 807592e:  mov eax, esi
 8075930:  call 8074900
 8075935:  mov eax, ds:0x80d0ce0
 807593a:  mov ecx, DWORD PTR [eax]
 807593c:  test ecx, ecx
 807593e:  je 807598d
 8075940:  mov DWORD PTR ds:0x80d0ce4, 0x0
 807594a:  jmp 807587f
 807594f:  mov eax, 0x80b3cb4
 8075954:  lea esi, [esi]
 8075958:  mov DWORD PTR [esp], eax
 807595b:  xor ecx, ecx
 807595d:  xor edx, edx
 807595f:  mov eax, 0xc
 8075964:  call 807c080
 8075969:  mov DWORD PTR [esp+0xc], 0x80b4319
 8075971:  mov DWORD PTR [esp+0x8], 0x2b2
 8075979:  mov DWORD PTR [esp+0x4], 0x80b40ab
 8075981:  mov DWORD PTR [esp], 0x80b41b3
 8075988:  call 8051490
 807598d:  mov DWORD PTR [esp], eax
 8075990:  call 804b4a0
 8075995:  mov DWORD PTR ds:0x80d0ce0, 0xffffffff
 807599f:  jmp 8075940
 80759a1:  jmp 80759b0
 80759a3:  nop
 80759a4:  nop
 80759a5:  nop
 80759a6:  nop
 80759a7:  nop
 80759a8:  nop
 80759a9:  nop
 80759aa:  nop
 80759ab:  nop
 80759ac:  nop
 80759ad:  nop
 80759ae:  nop
 80759af:  nop

080759b0 <_dl_dst_substitute>:
 80759b0:  push ebp
 80759b1:  mov ebp, esp
 80759b3:  push edi
 80759b4:  push esi
 80759b5:  push ebx
 80759b6:  sub esp, 0x10
 80759b9:  mov edx, DWORD PTR [ebp+0xc]
 80759bc:  mov edi, DWORD PTR [ebp+0x14]
 80759bf:  movzx eax, BYTE PTR [edx]
 80759c2:  mov ebx, edx
 80759c4:  mov edx, DWORD PTR [ebp+0x10]
 80759c7:  mov DWORD PTR [ebp-0x14], edx
 80759ca:  mov esi, edx
 80759cc:  lea esi, [esi]
 80759d0:  cmp al, 0x24
 80759d2:  je 8075a04
 80759d4:  mov BYTE PTR [esi], al
 80759d6:  add ebx, 0x1
 80759d9:  add esi, 0x1
 80759dc:  test edi, edi
 80759de:  jne 80759f8
 80759e0:  movzx eax, BYTE PTR [ebx]
 80759e3:  test al, al
 80759e5:  jne 80759d0
 80759e7:  mov BYTE PTR [esi], 0x0
 80759ea:  mov eax, DWORD PTR [ebp+0x10]
 80759ed:  add esp, 0x10
 80759f0:  pop ebx
 80759f1:  pop esi
 80759f2:  pop edi
 80759f3:  pop ebp
 80759f4:  ret
 80759f5:  lea esi, [esi]
 80759f8:  movzx eax, BYTE PTR [ebx]
 80759fb:  cmp al, 0x3a
 80759fd:  jne 80759e3
 80759ff:  mov DWORD PTR [ebp-0x14], esi
 8075a02:  jmp 80759d4
 8075a04:  mov eax, ds:0x80d0cd8
 8075a09:  add ebx, 0x1
 8075a0c:  mov ecx, 0x80b41cf
 8075a11:  mov edx, ebx
 8075a13:  mov DWORD PTR [esp], edi
 8075a16:  mov DWORD PTR [esp+0x4], eax
 8075a1a:  mov eax, DWORD PTR [ebp+0xc]
 8075a1d:  call 8074790
 8075a22:  test eax, eax
 8075a24:  mov DWORD PTR [ebp-0x10], eax
 8075a27:  je 8075a98
 8075a29:  mov eax, DWORD PTR [ebp+0x8]
 8075a2c:  test eax, eax
 8075a2e:  je 8075b16
 8075a34:  mov eax, DWORD PTR [ebp+0x8]
 8075a37:  mov edx, DWORD PTR [eax+0x1a8]
 8075a3d:  lea eax, [edx-0x1]
 8075a40:  cmp eax, 0xfd
 8075a43:  jbe 8075ac4
 8075a45:  cmp DWORD PTR [ebp-0x10], 0x1
 8075a49:  jbe 8075add
 8075a4f:  add ebx, DWORD PTR [ebp-0x10]
 8075a52:  movzx eax, BYTE PTR [ebx]
 8075a55:  test al, al
 8075a57:  je 8075a90
 8075a59:  test edi, edi
 8075a5b:  je 8075a88
 8075a5d:  lea esi, [esi]
 8075a60:  jmp 8075a72
 8075a62:  lea esi, [esi]
 8075a68:  add ebx, 0x1
 8075a6b:  movzx eax, BYTE PTR [ebx]
 8075a6e:  test al, al
 8075a70:  je 8075a90
 8075a72:  cmp al, 0x3a
 8075a74:  lea esi, [esi]
 8075a78:  jne 8075a68
 8075a7a:  mov eax, 0x3a
 8075a7f:  mov esi, DWORD PTR [ebp-0x14]
 8075a82:  jmp 80759d4
 8075a87:  nop
 8075a88:  add ebx, 0x1
 8075a8b:  cmp BYTE PTR [ebx], 0x0
 8075a8e:  jne 8075a88
 8075a90:  mov esi, DWORD PTR [ebp-0x14]
 8075a93:  jmp 80759e7
 8075a98:  mov eax, DWORD PTR [ebp+0xc]
 8075a9b:  mov ecx, 0x80b41d6
 8075aa0:  mov edx, ebx
 8075aa2:  mov DWORD PTR [esp+0x4], 0x0
 8075aaa:  mov DWORD PTR [esp], edi
 8075aad:  call 8074790
 8075ab2:  test eax, eax
 8075ab4:  mov DWORD PTR [ebp-0x10], eax
 8075ab7:  je 8075aeb
 8075ab9:  mov edx, DWORD PTR ds:0x80d2dec
 8075abf:  jmp 8075a3d
 8075ac4:  mov DWORD PTR [esp], esi
 8075ac7:  mov DWORD PTR [esp+0x4], edx
 8075acb:  call 806c360
 8075ad0:  add ebx, DWORD PTR [ebp-0x10]
 8075ad3:  mov esi, eax
 8075ad5:  movzx eax, BYTE PTR [ebx]
 8075ad8:  jmp 80759e3
 8075add:  mov BYTE PTR [esi], 0x24
 8075ae0:  add esi, 0x1
 8075ae3:  movzx eax, BYTE PTR [ebx]
 8075ae6:  jmp 80759e3
 8075aeb:  mov eax, DWORD PTR [ebp+0xc]
 8075aee:  mov ecx, 0x80b41df
 8075af3:  mov edx, ebx
 8075af5:  mov DWORD PTR [esp+0x4], 0x0
 8075afd:  mov DWORD PTR [esp], edi
 8075b00:  call 8074790
 8075b05:  test eax, eax
 8075b07:  mov DWORD PTR [ebp-0x10], eax
 8075b0a:  je 8075add
 8075b0c:  mov edx, 0x80b61e1
 8075b11:  jmp 8075a3d
 8075b16:  call 807d000
 8075b1b:  mov edx, eax
 8075b1d:  jmp 8075a3d
 8075b22:  lea esi, [esi]
 8075b29:  lea edi, [edi]

08075b30 <_dl_dst_count>:
 8075b30:  push ebp
 8075b31:  mov ebp, esp
 8075b33:  push edi
 8075b34:  push esi
 8075b35:  push ebx
 8075b36:  sub esp, 0x20
 8075b39:  mov eax, ds:0x80d0cd8
 8075b3e:  mov DWORD PTR [ebp-0x1c], 0x0
 8075b45:  mov DWORD PTR [ebp-0x18], eax
 8075b48:  mov eax, DWORD PTR [ebp+0x8]
 8075b4b:  lea edx, [eax+0x1]
 8075b4e:  mov DWORD PTR [ebp-0x20], edx
 8075b51:  lea esi, [esi]
 8075b58:  lea ebx, [eax+0x1]
 8075b5b:  mov DWORD PTR [ebp-0x10], ebx
 8075b5e:  movzx edi, BYTE PTR [eax+0x1]
 8075b62:  mov edx, edi
 8075b64:  cmp dl, 0x7b
 8075b67:  je 8075cc8
 8075b6d:  mov eax, edi
 8075b6f:  mov BYTE PTR [ebp-0x12], 0x0
 8075b73:  xor ecx, ecx
 8075b75:  xor esi, esi
 8075b77:  cmp al, 0x4f
 8075b79:  mov edx, 0x80b41d0
 8075b7e:  je 8075b8f
 8075b80:  jmp 8075b9c
 8075b82:  lea esi, [esi]
 8075b88:  add edx, 0x1
 8075b8b:  test al, al
 8075b8d:  je 8075b9a
 8075b8f:  add ecx, 0x1
 8075b92:  movzx eax, BYTE PTR [ebx+ecx]
 8075b96:  cmp al, BYTE PTR [edx]
 8075b98:  je 8075b88
 8075b9a:  mov esi, ecx
 8075b9c:  cmp BYTE PTR [ebp-0x12], 0x0
 8075ba0:  je 8075c58
 8075ba6:  cmp al, 0x7d
 8075ba8:  je 8075cd8
 8075bae:  mov ebx, edi
 8075bb0:  cmp bl, 0x7b
 8075bb3:  je 8075d18
 8075bb9:  mov ebx, DWORD PTR [ebp-0x10]
 8075bbc:  mov eax, edi
 8075bbe:  mov BYTE PTR [ebp-0x11], 0x0
 8075bc2:  xor ecx, ecx
 8075bc4:  xor esi, esi
 8075bc6:  cmp al, 0x50
 8075bc8:  mov edx, 0x80b41d7
 8075bcd:  je 8075bdf
 8075bcf:  jmp 8075bec
 8075bd1:  lea esi, [esi]
 8075bd8:  add edx, 0x1
 8075bdb:  test al, al
 8075bdd:  je 8075bea
 8075bdf:  add ecx, 0x1
 8075be2:  movzx eax, BYTE PTR [ebx+ecx]
 8075be6:  cmp al, BYTE PTR [edx]
 8075be8:  je 8075bd8
 8075bea:  mov esi, ecx
 8075bec:  cmp BYTE PTR [ebp-0x11], 0x0
 8075bf0:  je 8075ce0
 8075bf6:  cmp al, 0x7d
 8075bf8:  lea ecx, [esi+0x2]
 8075bfb:  je 8075d00
 8075c01:  mov ebx, edi
 8075c03:  xor esi, esi
 8075c05:  mov eax, DWORD PTR [ebp-0x10]
 8075c08:  cmp bl, 0x7b
 8075c0b:  je 8075d60
 8075c11:  mov ebx, edi
 8075c13:  xor ecx, ecx
 8075c15:  cmp bl, 0x4c
 8075c18:  mov edx, 0x80b41e0
 8075c1d:  mov DWORD PTR [ebp-0x24], 0x0
 8075c24:  je 8075c2f
 8075c26:  jmp 8075c3f
 8075c28:  add edx, 0x1
 8075c2b:  test bl, bl
 8075c2d:  je 8075c3c
 8075c2f:  add ecx, 0x1
 8075c32:  movzx edi, BYTE PTR [eax+ecx]
 8075c36:  mov ebx, edi
 8075c38:  cmp bl, BYTE PTR [edx]
 8075c3a:  je 8075c28
 8075c3c:  mov DWORD PTR [ebp-0x24], ecx
 8075c3f:  mov eax, esi
 8075c41:  test al, al
 8075c43:  je 8075d2e
 8075c49:  mov edx, edi
 8075c4b:  cmp dl, 0x7d
 8075c4e:  je 8075d73
 8075c54:  xor ecx, ecx
 8075c56:  jmp 8075c9a
 8075c58:  test al, al
 8075c5a:  lea esi, [esi]
 8075c60:  je 8075c80
 8075c62:  cmp al, 0x2f
 8075c64:  lea esi, [esi]
 8075c68:  je 8075c80
 8075c6a:  mov edx, DWORD PTR [ebp+0xc]
 8075c6d:  test edx, edx
 8075c6f:  nop
 8075c70:  je 8075bae
 8075c76:  cmp al, 0x3a
 8075c78:  jne 8075bae
 8075c7e:  xchg ax, ax
 8075c80:  mov esi, DWORD PTR [ebp-0x18]
 8075c83:  test esi, esi
 8075c85:  jne 8075d88
 8075c8b:  test ecx, ecx
 8075c8d:  lea esi, [esi]
 8075c90:  je 8075bae
 8075c96:  add DWORD PTR [ebp-0x1c], 0x1
 8075c9a:  mov eax, DWORD PTR [ebp-0x10]
 8075c9d:  mov DWORD PTR [esp+0x4], 0x24
 8075ca5:  add eax, ecx
 8075ca7:  mov DWORD PTR [esp], eax
 8075caa:  call 806ae20
 8075caf:  test eax, eax
 8075cb1:  jne 8075b58
 8075cb7:  mov eax, DWORD PTR [ebp-0x1c]
 8075cba:  add esp, 0x20
 8075cbd:  pop ebx
 8075cbe:  pop esi
 8075cbf:  pop edi
 8075cc0:  pop ebp
 8075cc1:  ret
 8075cc2:  lea esi, [esi]
 8075cc8:  lea ebx, [eax+0x2]
 8075ccb:  movzx eax, BYTE PTR [eax+0x2]
 8075ccf:  mov BYTE PTR [ebp-0x12], 0x1
 8075cd3:  jmp 8075b73
 8075cd8:  sub ebx, 0x1
 8075cdb:  lea ecx, [esi+0x2]
 8075cde:  jmp 8075c80
 8075ce0:  test al, al
 8075ce2:  je 8075d00
 8075ce4:  cmp al, 0x2f
 8075ce6:  xchg ax, ax
 8075ce8:  je 8075d00
 8075cea:  mov edx, DWORD PTR [ebp+0xc]
 8075ced:  test edx, edx
 8075cef:  nop
 8075cf0:  je 8075c01
 8075cf6:  cmp al, 0x3a
 8075cf8:  jne 8075c01
 8075cfe:  xchg ax, ax
 8075d00:  test ecx, ecx
 8075d02:  lea esi, [esi]
 8075d08:  jne 8075c96
 8075d0a:  lea esi, [esi]
 8075d10:  jmp 8075c01
 8075d15:  lea esi, [esi]
 8075d18:  mov ebx, DWORD PTR [ebp-0x10]
 8075d1b:  mov edx, DWORD PTR [ebp-0x10]
 8075d1e:  add ebx, 0x1
 8075d21:  movzx eax, BYTE PTR [edx+0x1]
 8075d25:  mov BYTE PTR [ebp-0x11], 0x1
 8075d29:  jmp 8075bc2
 8075d2e:  mov ebx, edi
 8075d30:  test bl, bl
 8075d32:  je 8075d4e
 8075d34:  cmp bl, 0x2f
 8075d37:  je 8075d4e
 8075d39:  mov eax, DWORD PTR [ebp+0xc]
 8075d3c:  test eax, eax
 8075d3e:  je 8075c54
 8075d44:  cmp bl, 0x3a
 8075d47:  nop
 8075d48:  jne 8075c54
 8075d4e:  test ecx, ecx
 8075d50:  jne 8075c96
 8075d56:  xchg ax, ax
 8075d58:  jmp 8075c9a
 8075d5d:  lea esi, [esi]
 8075d60:  mov edx, eax
 8075d62:  mov esi, 0x1
 8075d67:  add eax, 0x1
 8075d6a:  movzx edi, BYTE PTR [edx+0x1]
 8075d6e:  jmp 8075c11
 8075d73:  mov ecx, DWORD PTR [ebp-0x24]
 8075d76:  add ecx, 0x2
 8075d79:  test ecx, ecx
 8075d7b:  jne 8075c96
 8075d81:  jmp 8075c9a
 8075d86:  xchg ax, ax
 8075d88:  movzx eax, BYTE PTR [ebx+ecx]
 8075d8c:  test al, al
 8075d8e:  je 8075da6
 8075d90:  mov edx, DWORD PTR [ebp+0xc]
 8075d93:  test edx, edx
 8075d95:  lea esi, [esi]
 8075d98:  je 8075bae
 8075d9e:  cmp al, 0x3a
 8075da0:  jne 8075bae
 8075da6:  cmp ebx, DWORD PTR [ebp-0x20]
 8075da9:  lea esi, [esi]
 8075db0:  je 8075c8b
 8075db6:  mov esi, DWORD PTR [ebp+0xc]
 8075db9:  test esi, esi
 8075dbb:  nop
 8075dbc:  lea esi, [esi]
 8075dc0:  je 8075bae
 8075dc6:  cmp BYTE PTR [ebx-0x2], 0x3a
 8075dca:  lea esi, [esi]
 8075dd0:  jne 8075bae
 8075dd6:  xchg ax, ax
 8075dd8:  jmp 8075c8b
 8075ddd:  lea esi, [esi]

08075de0 <expand_dynamic_string_token>:
 8075de0:  push ebp
 8075de1:  mov ebp, esp
 8075de3:  sub esp, 0x20
 8075de6:  mov DWORD PTR [esp+0x4], 0x24
 8075dee:  mov DWORD PTR [ebp-0xc], ebx
 8075df1:  mov ebx, eax
 8075df3:  mov DWORD PTR [ebp-0x8], esi
 8075df6:  mov esi, edx
 8075df8:  mov DWORD PTR [ebp-0x4], edi
 8075dfb:  mov DWORD PTR [esp], edx
 8075dfe:  call 806ae20
 8075e03:  test eax, eax
 8075e05:  jne 8075e3f
 8075e07:  mov DWORD PTR [esp], esi
 8075e0a:  call 804eea0
 8075e0f:  lea ebx, [eax+0x1]
 8075e12:  mov DWORD PTR [esp], ebx
 8075e15:  call 804d6f0
 8075e1a:  mov edx, eax
 8075e1c:  xor eax, eax
 8075e1e:  test edx, edx
 8075e20:  je 8075e32
 8075e22:  mov DWORD PTR [esp+0x8], ebx
 8075e26:  mov DWORD PTR [esp+0x4], esi
 8075e2a:  mov DWORD PTR [esp], edx
 8075e2d:  call 804efc0
 8075e32:  mov ebx, DWORD PTR [ebp-0xc]
 8075e35:  mov esi, DWORD PTR [ebp-0x8]
 8075e38:  mov edi, DWORD PTR [ebp-0x4]
 8075e3b:  mov esp, ebp
 8075e3d:  pop ebp
 8075e3e:  ret
 8075e3f:  mov DWORD PTR [esp+0x4], 0x1
 8075e47:  mov DWORD PTR [esp], eax
 8075e4a:  call 8075b30
 8075e4f:  test eax, eax
 8075e51:  mov edi, eax
 8075e53:  je 8075e07
 8075e55:  mov DWORD PTR [esp], esi
 8075e58:  call 804eea0
 8075e5d:  test ebx, ebx
 8075e5f:  mov DWORD PTR [ebp-0x10], eax
 8075e62:  je 8075eff
 8075e68:  mov eax, DWORD PTR [ebx+0x1a8]
 8075e6e:  test eax, eax
 8075e70:  je 8075ecb
 8075e72:  cmp eax, 0xff
 8075e75:  je 8075ec7
 8075e77:  mov DWORD PTR [esp], eax
 8075e7a:  call 804eea0
 8075e7f:  mov ecx, DWORD PTR [ebp-0x10]
 8075e82:  mov edx, DWORD PTR ds:0x80d2dcc
 8075e88:  add ecx, 0x1
 8075e8b:  cmp eax, edx
 8075e8d:  jae 8075e91
 8075e8f:  mov eax, edx
 8075e91:  sub eax, 0x7
 8075e94:  imul eax, edi
 8075e97:  lea eax, [ecx+eax]
 8075e9a:  mov DWORD PTR [esp], eax
 8075e9d:  call 804d6f0
 8075ea2:  mov edx, eax
 8075ea4:  xor eax, eax
 8075ea6:  test edx, edx
 8075ea8:  je 8075e32
 8075eaa:  mov DWORD PTR [esp+0xc], 0x1
 8075eb2:  mov DWORD PTR [esp+0x8], edx
 8075eb6:  mov DWORD PTR [esp+0x4], esi
 8075eba:  mov DWORD PTR [esp], ebx
 8075ebd:  call 80759b0
 8075ec2:  jmp 8075e32
 8075ec7:  xor eax, eax
 8075ec9:  jmp 8075e7f
 8075ecb:  mov eax, DWORD PTR [ebx+0x4]
 8075ece:  cmp BYTE PTR [eax], 0x0
 8075ed1:  lea esi, [esi]
 8075ed8:  jne 8075f1f
 8075eda:  lea esi, [esi]
 8075ee0:  call 807d000
 8075ee5:  mov edx, eax
 8075ee7:  mov DWORD PTR [ebx+0x1a8], eax
 8075eed:  lea eax, [eax-0x1]
 8075ef0:  cmp eax, 0xfd
 8075ef3:  ja 8075ec7
 8075ef5:  mov DWORD PTR [esp], edx
 8075ef8:  call 804eea0
 8075efd:  jmp 8075e7f
 8075eff:  nop
 8075f00:  call 807d000
 8075f05:  mov edx, eax
 8075f07:  lea eax, [eax-0x1]
 8075f0a:  cmp eax, 0xfd
 8075f0d:  lea esi, [esi]
 8075f10:  ja 8075ec7
 8075f12:  mov DWORD PTR [esp], edx
 8075f15:  call 804eea0
 8075f1a:  jmp 8075e7f
 8075f1f:  mov DWORD PTR [esp+0xc], 0x80b42af
 8075f27:  mov DWORD PTR [esp+0x8], 0x153
 8075f2f:  mov DWORD PTR [esp+0x4], 0x80b40ab
 8075f37:  mov DWORD PTR [esp], 0x80b41e3
 8075f3e:  call 8051490
 8075f43:  lea esi, [esi]
 8075f49:  lea edi, [edi]

08075f50 <decompose_rpath>:
 8075f50:  push ebp
 8075f51:  mov ebp, esp
 8075f53:  push edi
 8075f54:  mov edi, eax
 8075f56:  push esi
 8075f57:  push ebx
 8075f58:  sub esp, 0x14
 8075f5b:  mov eax, DWORD PTR [ecx+0x4]
 8075f5e:  mov DWORD PTR [ebp-0x14], edx
 8075f61:  mov DWORD PTR [ebp-0x10], eax
 8075f64:  mov eax, ds:0x80d2e28
 8075f69:  test eax, eax
 8075f6b:  jne 807602e
 8075f71:  mov edx, DWORD PTR [ebp-0x14]
 8075f74:  mov eax, ecx
 8075f76:  call 8075de0
 8075f7b:  mov esi, eax
 8075f7d:  mov eax, 0x80b3cd4
 8075f82:  test esi, esi
 8075f84:  je 807601d
 8075f8a:  movzx eax, BYTE PTR [esi]
 8075f8d:  xor ecx, ecx
 8075f8f:  mov edx, esi
 8075f91:  mov ebx, 0x8
 8075f96:  test al, al
 8075f98:  je 8075fbb
 8075f9a:  lea esi, [esi]
 8075fa0:  cmp al, 0x3a
 8075fa2:  sete al
 8075fa5:  add edx, 0x1
 8075fa8:  movzx eax, al
 8075fab:  add ecx, eax
 8075fad:  movzx eax, BYTE PTR [edx]
 8075fb0:  test al, al
 8075fb2:  jne 8075fa0
 8075fb4:  lea ebx, [ecx*4+0x8]
 8075fbb:  mov DWORD PTR [esp], ebx
 8075fbe:  call 804d6f0
 8075fc3:  test eax, eax
 8075fc5:  mov ebx, eax
 8075fc7:  je 8076010
 8075fc9:  mov eax, DWORD PTR [ebp-0x10]
 8075fcc:  mov ecx, 0x80b41fa
 8075fd1:  mov edx, ebx
 8075fd3:  mov DWORD PTR [esp], 0x0
 8075fda:  mov DWORD PTR [esp+0x8], eax
 8075fde:  mov eax, DWORD PTR [ebp+0x8]
 8075fe1:  mov DWORD PTR [esp+0x4], eax
 8075fe5:  mov eax, esi
 8075fe7:  call 8074900
 8075fec:  mov DWORD PTR [esp], esi
 8075fef:  call 804b4a0
 8075ff4:  mov eax, 0x1
 8075ff9:  mov DWORD PTR [edi], ebx
 8075ffb:  mov DWORD PTR [edi+0x4], 0x1
 8076002:  lea esp, [ebp-0xc]
 8076005:  pop ebx
 8076006:  pop esi
 8076007:  pop edi
 8076008:  pop ebp
 8076009:  ret 0x4
 807600c:  lea esi, [esi]
 8076010:  mov DWORD PTR [esp], esi
 8076013:  call 804b4a0
 8076018:  mov eax, 0x80b3bb0
 807601d:  mov DWORD PTR [esp], eax
 8076020:  xor ecx, ecx
 8076022:  xor edx, edx
 8076024:  mov eax, 0xc
 8076029:  call 807c080
 807602e:  mov ebx, DWORD PTR ds:0x80d0cd8
 8076034:  test ebx, ebx
 8076036:  jne 8075f71
 807603c:  movzx ebx, BYTE PTR [eax]
 807603f:  mov esi, DWORD PTR [ebp-0x10]
 8076042:  jmp 8076055
 8076044:  lea esi, [esi]
 8076048:  test bl, bl
 807604a:  je 80760a2
 807604c:  add eax, 0x1
 807604f:  add esi, 0x1
 8076052:  movzx ebx, BYTE PTR [eax]
 8076055:  movzx edx, BYTE PTR [esi]
 8076058:  cmp bl, dl
 807605a:  je 8076048
 807605c:  test dl, dl
 807605e:  jne 807606b
 8076060:  jmp 8076092
 8076062:  lea esi, [esi]
 8076068:  movzx ebx, BYTE PTR [eax]
 807606b:  test bl, bl
 807606d:  lea esi, [esi]
 8076070:  je 8075f71
 8076076:  add eax, 0x1
 8076079:  cmp bl, 0x3a
 807607c:  lea esi, [esi]
 8076080:  jne 8076068
 8076082:  movzx ebx, BYTE PTR [eax]
 8076085:  test bl, bl
 8076087:  je 8075f71
 807608d:  mov esi, DWORD PTR [ebp-0x10]
 8076090:  jmp 8076055
 8076092:  test bl, bl
 8076094:  lea esi, [esi]
 8076098:  je 80760a2
 807609a:  cmp bl, 0x3a
 807609d:  lea esi, [esi]
 80760a0:  jne 807606b
 80760a2:  mov DWORD PTR [edi], 0xffffffff
 80760a8:  xor eax, eax
 80760aa:  lea esi, [esi]
 80760b0:  jmp 8076002
 80760b5:  lea esi, [esi]
 80760b9:  lea edi, [edi]

080760c0 <cache_rpath>:
 80760c0:  push ebp
 80760c1:  mov ebp, esp
 80760c3:  sub esp, 0xc
 80760c6:  mov DWORD PTR [ebp-0x8], ebx
 80760c9:  mov ebx, edx
 80760cb:  mov DWORD PTR [ebp-0x4], esi
 80760ce:  mov edx, DWORD PTR [edx]
 80760d0:  mov esi, eax
 80760d2:  xor eax, eax
 80760d4:  cmp edx, 0xff
 80760d7:  je 80760e2
 80760d9:  test edx, edx
 80760db:  mov eax, 0x1
 80760e0:  je 80760f0
 80760e2:  mov ebx, DWORD PTR [ebp-0x8]
 80760e5:  mov esi, DWORD PTR [ebp-0x4]
 80760e8:  mov esp, ebp
 80760ea:  pop ebp
 80760eb:  ret
 80760ec:  lea esi, [esi]
 80760f0:  mov edx, DWORD PTR [esi+ecx*4+0x20]
 80760f4:  test edx, edx
 80760f6:  je 8076120
 80760f8:  mov eax, DWORD PTR [esi+0x34]
 80760fb:  mov ecx, esi
 80760fd:  mov edx, DWORD PTR [edx+0x4]
 8076100:  add edx, DWORD PTR [eax+0x4]
 8076103:  mov eax, DWORD PTR [ebp+0x8]
 8076106:  mov DWORD PTR [esp], eax
 8076109:  mov eax, ebx
 807610b:  call 8075f50
 8076110:  mov ebx, DWORD PTR [ebp-0x8]
 8076113:  mov esi, DWORD PTR [ebp-0x4]
 8076116:  sub esp, 0x4
 8076119:  mov esp, ebp
 807611b:  pop ebp
 807611c:  ret
 807611d:  lea esi, [esi]
 8076120:  mov DWORD PTR [ebx], 0xffffffff
 8076126:  xor eax, eax
 8076128:  jmp 80760e2
 807612a:  lea esi, [esi]

08076130 <_dl_rtld_di_serinfo>:
 8076130:  push ebp
 8076131:  mov ebp, esp
 8076133:  push edi
 8076134:  mov edi, edx
 8076136:  push esi
 8076137:  push ebx
 8076138:  sub esp, 0x20
 807613b:  test cl, cl
 807613d:  mov DWORD PTR [ebp-0x1c], eax
 8076140:  mov BYTE PTR [ebp-0x1d], cl
 8076143:  je 8076152
 8076145:  mov DWORD PTR [edx+0x4], 0x0
 807614c:  mov DWORD PTR [edx], 0x0
 8076152:  mov eax, DWORD PTR [edi+0x4]
 8076155:  mov DWORD PTR [ebp-0x14], 0x0
 807615c:  lea eax, [edi+eax*8+0x8]
 8076160:  mov DWORD PTR [ebp-0x18], eax
 8076163:  mov eax, DWORD PTR [ebp-0x1c]
 8076166:  mov edx, DWORD PTR [eax+0x94]
 807616c:  test edx, edx
 807616e:  je 80763a8
 8076174:  mov ebx, DWORD PTR ds:0x80d0ce0
 807617a:  cmp ebx, 0xff
 807617d:  je 80761d2
 807617f:  cmp BYTE PTR [ebp-0x1d], 0x0
 8076183:  mov edx, DWORD PTR [ebx]
 8076185:  jne 8076260
 807618b:  mov eax, DWORD PTR [ebp-0x14]
 807618e:  lea esi, [edi+eax*8+0x8]
 8076192:  mov eax, DWORD PTR [edx+0x10]
 8076195:  add ebx, 0x4
 8076198:  mov ecx, DWORD PTR [ebp-0x18]
 807619b:  cmp eax, 0x1
 807619e:  mov DWORD PTR [esi], ecx
 80761a0:  ja 80762f8
 80761a6:  mov edx, DWORD PTR [ebp-0x18]
 80761a9:  sbb eax, eax
 80761ab:  add eax, 0x2f
 80761ae:  mov BYTE PTR [edx], al
 80761b0:  mov eax, edx
 80761b2:  add eax, 0x1
 80761b5:  add DWORD PTR [ebp-0x14], 0x1
 80761b9:  mov BYTE PTR [eax], 0x0
 80761bc:  mov edx, DWORD PTR [ebx]
 80761be:  add eax, 0x1
 80761c1:  mov DWORD PTR [esi+0x4], 0x0
 80761c8:  add esi, 0x8
 80761cb:  mov DWORD PTR [ebp-0x18], eax
 80761ce:  test edx, edx
 80761d0:  jne 8076192
 80761d2:  mov ecx, DWORD PTR [ebp-0x1c]
 80761d5:  mov ebx, DWORD PTR [ecx+0x1e8]
 80761db:  cmp ebx, 0xff
 80761de:  je 8076240
 80761e0:  test ebx, ebx
 80761e2:  je 8076590
 80761e8:  cmp BYTE PTR [ebp-0x1d], 0x0
 80761ec:  mov edx, DWORD PTR [ebx]
 80761ee:  jne 8076295
 80761f4:  mov ecx, DWORD PTR [ebp-0x14]
 80761f7:  mov eax, DWORD PTR [ebp-0x18]
 80761fa:  lea esi, [edi+ecx*8+0x8]
 80761fe:  mov DWORD PTR [esi], eax
 8076200:  mov eax, DWORD PTR [edx+0x10]
 8076203:  add ebx, 0x4
 8076206:  cmp eax, 0x1
 8076209:  ja 8076388
 807620f:  mov ecx, DWORD PTR [ebp-0x18]
 8076212:  sbb eax, eax
 8076214:  add eax, 0x2f
 8076217:  mov BYTE PTR [ecx], al
 8076219:  mov eax, ecx
 807621b:  add eax, 0x1
 807621e:  add DWORD PTR [ebp-0x14], 0x1
 8076222:  mov BYTE PTR [eax], 0x0
 8076225:  mov edx, DWORD PTR [ebx]
 8076227:  add eax, 0x1
 807622a:  mov DWORD PTR [esi+0x4], 0x0
 8076231:  add esi, 0x8
 8076234:  mov DWORD PTR [ebp-0x18], eax
 8076237:  test edx, edx
 8076239:  jne 80761fe
 807623b:  nop
 807623c:  lea esi, [esi]
 8076240:  mov eax, DWORD PTR [ebp-0x1c]
 8076243:  test BYTE PTR [eax+0x201], 0x8
 807624a:  je 80762b0
 807624c:  cmp BYTE PTR [ebp-0x1d], 0x0
 8076250:  jne 80762e4
 8076256:  lea esp, [ebp-0xc]
 8076259:  pop ebx
 807625a:  pop esi
 807625b:  pop edi
 807625c:  pop ebp
 807625d:  ret
 807625e:  xchg ax, ax
 8076260:  add DWORD PTR [edi+0x4], 0x1
 8076264:  add ebx, 0x4
 8076267:  mov eax, DWORD PTR [edx+0x10]
 807626a:  cmp eax, 0x2
 807626d:  jae 8076274
 807626f:  mov eax, 0x2
 8076274:  mov edx, DWORD PTR [ebx]
 8076276:  add DWORD PTR [edi], eax
 8076278:  test edx, edx
 807627a:  jne 8076260
 807627c:  jmp 80761d2
 8076281:  lea esi, [esi]
 8076288:  mov edx, DWORD PTR [ebx]
 807628a:  mov eax, 0x2
 807628f:  add DWORD PTR [edi], eax
 8076291:  test edx, edx
 8076293:  je 8076240
 8076295:  add DWORD PTR [edi+0x4], 0x1
 8076299:  add ebx, 0x4
 807629c:  mov eax, DWORD PTR [edx+0x10]
 807629f:  cmp eax, 0x2
 80762a2:  jb 8076288
 80762a4:  mov edx, DWORD PTR [ebx]
 80762a6:  add DWORD PTR [edi], eax
 80762a8:  test edx, edx
 80762aa:  jne 8076295
 80762ac:  jmp 8076240
 80762ae:  xchg ax, ax
 80762b0:  mov ebx, DWORD PTR ds:0x80d0cf4
 80762b6:  cmp ebx, 0xff
 80762b9:  je 807624c
 80762bb:  cmp BYTE PTR [ebp-0x1d], 0x0
 80762bf:  mov edx, DWORD PTR [ebx]
 80762c1:  je 8076318
 80762c3:  nop
 80762c4:  lea esi, [esi]
 80762c8:  add DWORD PTR [edi+0x4], 0x1
 80762cc:  add ebx, 0x4
 80762cf:  mov eax, DWORD PTR [edx+0x10]
 80762d2:  cmp eax, 0x2
 80762d5:  jae 80762dc
 80762d7:  mov eax, 0x2
 80762dc:  mov edx, DWORD PTR [ebx]
 80762de:  add DWORD PTR [edi], eax
 80762e0:  test edx, edx
 80762e2:  jne 80762c8
 80762e4:  mov eax, DWORD PTR [edi+0x4]
 80762e7:  lea eax, [eax*8+0x8]
 80762ee:  add DWORD PTR [edi], eax
 80762f0:  lea esp, [ebp-0xc]
 80762f3:  pop ebx
 80762f4:  pop esi
 80762f5:  pop edi
 80762f6:  pop ebp
 80762f7:  ret
 80762f8:  sub eax, 0x1
 80762fb:  mov DWORD PTR [esp+0x8], eax
 80762ff:  mov eax, DWORD PTR [edx+0xc]
 8076302:  mov DWORD PTR [esp+0x4], eax
 8076306:  mov eax, DWORD PTR [ebp-0x18]
 8076309:  mov DWORD PTR [esp], eax
 807630c:  call 806c310
 8076311:  jmp 80761b5
 8076316:  xchg ax, ax
 8076318:  mov ecx, DWORD PTR [ebp-0x14]
 807631b:  add ebx, 0x4
 807631e:  mov eax, DWORD PTR [ebp-0x18]
 8076321:  lea esi, [edi+ecx*8+0x8]
 8076325:  mov DWORD PTR [esi], eax
 8076327:  mov eax, DWORD PTR [edx+0x10]
 807632a:  cmp eax, 0x1
 807632d:  ja 8076368
 807632f:  mov ecx, DWORD PTR [ebp-0x18]
 8076332:  sbb eax, eax
 8076334:  add eax, 0x2f
 8076337:  mov BYTE PTR [ecx], al
 8076339:  mov eax, ecx
 807633b:  add eax, 0x1
 807633e:  mov BYTE PTR [eax], 0x0
 8076341:  mov edx, DWORD PTR [ebx]
 8076343:  add eax, 0x1
 8076346:  mov DWORD PTR [esi+0x4], 0x0
 807634d:  add esi, 0x8
 8076350:  mov DWORD PTR [ebp-0x18], eax
 8076353:  test edx, edx
 8076355:  je 8076256
 807635b:  mov DWORD PTR [esi], eax
 807635d:  mov eax, DWORD PTR [edx+0x10]
 8076360:  add ebx, 0x4
 8076363:  cmp eax, 0x1
 8076366:  jbe 807632f
 8076368:  sub eax, 0x1
 807636b:  mov DWORD PTR [esp+0x8], eax
 807636f:  mov eax, DWORD PTR [edx+0xc]
 8076372:  mov DWORD PTR [esp+0x4], eax
 8076376:  mov edx, DWORD PTR [ebp-0x18]
 8076379:  mov DWORD PTR [esp], edx
 807637c:  call 806c310
 8076381:  jmp 807633e
 8076383:  nop
 8076384:  lea esi, [esi]
 8076388:  sub eax, 0x1
 807638b:  mov DWORD PTR [esp+0x8], eax
 807638f:  mov eax, DWORD PTR [edx+0xc]
 8076392:  mov DWORD PTR [esp+0x4], eax
 8076396:  mov edx, DWORD PTR [ebp-0x18]
 8076399:  mov DWORD PTR [esp], edx
 807639c:  call 806c310
 80763a1:  jmp 807621e
 80763a6:  xchg ax, ax
 80763a8:  mov esi, eax
 80763aa:  mov DWORD PTR [ebp-0x14], 0x0
 80763b1:  lea esi, [esi]
 80763b8:  mov ebx, DWORD PTR [esi+0x198]
 80763be:  cmp ebx, 0xff
 80763c1:  je 8076430
 80763c3:  test ebx, ebx
 80763c5:  je 8076548
 80763cb:  cmp BYTE PTR [ebp-0x1d], 0x0
 80763cf:  mov edx, DWORD PTR [ebx]
 80763d1:  jne 8076500
 80763d7:  mov ecx, DWORD PTR [ebp-0x14]
 80763da:  lea ecx, [edi+ecx*8+0x8]
 80763de:  mov DWORD PTR [ebp-0x10], ecx
 80763e1:  mov eax, ecx
 80763e3:  mov ecx, DWORD PTR [ebp-0x18]
 80763e6:  add ebx, 0x4
 80763e9:  mov DWORD PTR [eax], ecx
 80763eb:  mov eax, DWORD PTR [edx+0x10]
 80763ee:  cmp eax, 0x1
 80763f1:  ja 8076528
 80763f7:  mov ecx, DWORD PTR [ebp-0x18]
 80763fa:  sbb eax, eax
 80763fc:  add eax, 0x2f
 80763ff:  mov BYTE PTR [ecx], al
 8076401:  mov eax, ecx
 8076403:  add eax, 0x1
 8076406:  add DWORD PTR [ebp-0x14], 0x1
 807640a:  mov BYTE PTR [eax], 0x0
 807640d:  add eax, 0x1
 8076410:  mov edx, DWORD PTR [ebx]
 8076412:  mov DWORD PTR [ebp-0x18], eax
 8076415:  mov eax, DWORD PTR [ebp-0x10]
 8076418:  mov DWORD PTR [eax+0x4], 0x0
 807641f:  add eax, 0x8
 8076422:  test edx, edx
 8076424:  mov DWORD PTR [ebp-0x10], eax
 8076427:  jne 80763e3
 8076429:  lea esi, [esi]
 8076430:  mov esi, DWORD PTR [esi+0x16c]
 8076436:  test esi, esi
 8076438:  jne 80763b8
 807643e:  mov eax, DWORD PTR [ebp-0x1c]
 8076441:  mov esi, DWORD PTR [eax+0x18]
 8076444:  test esi, esi
 8076446:  jne 8076174
 807644c:  mov ebx, DWORD PTR ds:0x80d2e40
 8076452:  test ebx, ebx
 8076454:  je 8076174
 807645a:  movzx eax, BYTE PTR [ebx+0x194]
 8076461:  and eax, 0x3
 8076464:  cmp al, 0x2
 8076466:  je 8076174
 807646c:  cmp ebx, DWORD PTR [ebp-0x1c]
 807646f:  je 8076174
 8076475:  lea edx, [ebx+0x198]
 807647b:  mov ecx, 0xf
 8076480:  mov DWORD PTR [esp], 0x80b41fc
 8076487:  mov eax, ebx
 8076489:  call 80760c0
 807648e:  test al, al
 8076490:  je 8076174
 8076496:  mov ebx, DWORD PTR [ebx+0x198]
 807649c:  cmp ebx, 0xff
 807649f:  je 8076174
 80764a5:  cmp BYTE PTR [ebp-0x1d], 0x0
 80764a9:  mov edx, DWORD PTR [ebx]
 80764ab:  jne 80765e0
 80764b1:  mov ecx, DWORD PTR [ebp-0x14]
 80764b4:  mov eax, DWORD PTR [ebp-0x18]
 80764b7:  lea esi, [edi+ecx*8+0x8]
 80764bb:  mov DWORD PTR [esi], eax
 80764bd:  mov eax, DWORD PTR [edx+0x10]
 80764c0:  add ebx, 0x4
 80764c3:  cmp eax, 0x1
 80764c6:  ja 8076627
 80764cc:  mov ecx, DWORD PTR [ebp-0x18]
 80764cf:  sbb eax, eax
 80764d1:  add eax, 0x2f
 80764d4:  mov BYTE PTR [ecx], al
 80764d6:  mov eax, ecx
 80764d8:  add eax, 0x1
 80764db:  add DWORD PTR [ebp-0x14], 0x1
 80764df:  mov BYTE PTR [eax], 0x0
 80764e2:  mov edx, DWORD PTR [ebx]
 80764e4:  add eax, 0x1
 80764e7:  mov DWORD PTR [esi+0x4], 0x0
 80764ee:  add esi, 0x8
 80764f1:  mov DWORD PTR [ebp-0x18], eax
 80764f4:  test edx, edx
 80764f6:  jne 80764bb
 80764f8:  jmp 8076174
 80764fd:  lea esi, [esi]
 8076500:  add DWORD PTR [edi+0x4], 0x1
 8076504:  add ebx, 0x4
 8076507:  mov eax, DWORD PTR [edx+0x10]
 807650a:  cmp eax, 0x2
 807650d:  jae 8076514
 807650f:  mov eax, 0x2
 8076514:  mov edx, DWORD PTR [ebx]
 8076516:  add DWORD PTR [edi], eax
 8076518:  test edx, edx
 807651a:  jne 8076500
 807651c:  jmp 8076430
 8076521:  lea esi, [esi]
 8076528:  sub eax, 0x1
 807652b:  mov DWORD PTR [esp+0x8], eax
 807652f:  mov eax, DWORD PTR [edx+0xc]
 8076532:  mov DWORD PTR [esp+0x4], eax
 8076536:  mov edx, DWORD PTR [ebp-0x18]
 8076539:  mov DWORD PTR [esp], edx
 807653c:  call 806c310
 8076541:  jmp 8076406
 8076546:  xchg ax, ax
 8076548:  mov edx, DWORD PTR [esi+0x5c]
 807654b:  test edx, edx
 807654d:  je 8076608
 8076553:  mov eax, DWORD PTR [esi+0x34]
 8076556:  mov ecx, esi
 8076558:  mov edx, DWORD PTR [edx+0x4]
 807655b:  add edx, DWORD PTR [eax+0x4]
 807655e:  lea eax, [esi+0x198]
 8076564:  mov DWORD PTR [esp], 0x80b41fc
 807656b:  call 8075f50
 8076570:  sub esp, 0x4
 8076573:  test al, al
 8076575:  je 8076430
 807657b:  mov ebx, DWORD PTR [esi+0x198]
 8076581:  cmp ebx, 0xff
 8076584:  je 8076430
 807658a:  jmp 80763cb
 807658f:  nop
 8076590:  mov edx, DWORD PTR [ecx+0x94]
 8076596:  test edx, edx
 8076598:  je 8076618
 807659a:  mov ecx, DWORD PTR [ebp-0x1c]
 807659d:  mov edx, DWORD PTR [edx+0x4]
 80765a0:  mov eax, DWORD PTR [ecx+0x34]
 80765a3:  add edx, DWORD PTR [eax+0x4]
 80765a6:  mov eax, ecx
 80765a8:  add eax, 0x1e8
 80765ad:  mov DWORD PTR [esp], 0x80b4202
 80765b4:  call 8075f50
 80765b9:  sub esp, 0x4
 80765bc:  test al, al
 80765be:  je 8076240
 80765c4:  mov eax, DWORD PTR [ebp-0x1c]
 80765c7:  mov ebx, DWORD PTR [eax+0x1e8]
 80765cd:  cmp ebx, 0xff
 80765d0:  je 8076240
 80765d6:  jmp 80761e8
 80765db:  nop
 80765dc:  lea esi, [esi]
 80765e0:  add DWORD PTR [edi+0x4], 0x1
 80765e4:  add ebx, 0x4
 80765e7:  mov eax, DWORD PTR [edx+0x10]
 80765ea:  cmp eax, 0x2
 80765ed:  jae 80765f4
 80765ef:  mov eax, 0x2
 80765f4:  mov edx, DWORD PTR [ebx]
 80765f6:  add DWORD PTR [edi], eax
 80765f8:  test edx, edx
 80765fa:  jne 80765e0
 80765fc:  jmp 8076174
 8076601:  lea esi, [esi]
 8076608:  mov DWORD PTR [esi+0x198], 0xffffffff
 8076612:  jmp 8076430
 8076617:  nop
 8076618:  mov DWORD PTR [ecx+0x1e8], 0xffffffff
 8076622:  jmp 8076240
 8076627:  sub eax, 0x1
 807662a:  mov DWORD PTR [esp+0x8], eax
 807662e:  mov eax, DWORD PTR [edx+0xc]
 8076631:  mov DWORD PTR [esp+0x4], eax
 8076635:  mov edx, DWORD PTR [ebp-0x18]
 8076638:  mov DWORD PTR [esp], edx
 807663b:  call 806c310
 8076640:  jmp 80764db
 8076645:  lea esi, [esi]
 8076649:  lea edi, [edi]

08076650 <_dl_map_object_from_fd>:
 8076650:  push ebp
 8076651:  mov ebp, esp
 8076653:  push edi
 8076654:  push esi
 8076655:  push ebx
 8076656:  sub esp, 0x124
 807665c:  mov DWORD PTR [ebp-0xd4], edx
 8076662:  mov edx, DWORD PTR [ebp+0x1c]
 8076665:  mov DWORD PTR [ebp-0xd0], eax
 807666b:  xor eax, eax
 807666d:  mov DWORD PTR [ebp-0xd8], ecx
 8076673:  call 807c2d0
 8076678:  mov DWORD PTR [ebp-0xb4], eax
 807667e:  lea eax, [ebp-0x7c]
 8076681:  mov DWORD PTR [esp+0x8], eax
 8076685:  mov eax, DWORD PTR [ebp-0xd4]
 807668b:  mov DWORD PTR [esp], 0x3
 8076692:  mov DWORD PTR [esp+0x4], eax
 8076696:  call 804f1b0
 807669b:  test eax, eax
 807669d:  js 807738e
 80766a3:  mov ecx, DWORD PTR [ebp+0x1c]
 80766a6:  lea eax, [ecx+ecx*8]
 80766a9:  mov edi, DWORD PTR [eax*4+0x80d2e40]
 80766b0:  test edi, edi
 80766b2:  je 80767c8
 80766b8:  mov eax, DWORD PTR [ebp-0x7c]
 80766bb:  mov ebx, DWORD PTR [ebp-0x24]
 80766be:  mov ecx, DWORD PTR [ebp-0x20]
 80766c1:  mov esi, DWORD PTR [ebp-0x78]
 80766c4:  mov DWORD PTR [ebp-0xe8], eax
 80766ca:  jmp 80766db
 80766cc:  lea esi, [esi]
 80766d0:  mov edi, DWORD PTR [edi+0xc]
 80766d3:  test edi, edi
 80766d5:  je 80767c8
 80766db:  test BYTE PTR [edi+0x195], 0x40
 80766e2:  jne 80766d0
 80766e4:  mov edx, ecx
 80766e6:  mov eax, ebx
 80766e8:  xor edx, DWORD PTR [edi+0x1e4]
 80766ee:  xor eax, DWORD PTR [edi+0x1e0]
 80766f4:  or edx, eax
 80766f6:  jne 80766d0
 80766f8:  mov eax, DWORD PTR [ebp-0xe8]
 80766fe:  mov edx, esi
 8076700:  xor eax, DWORD PTR [edi+0x1d8]
 8076706:  xor edx, DWORD PTR [edi+0x1dc]
 807670c:  or edx, eax
 807670e:  jne 80766d0
 8076710:  mov edx, DWORD PTR [ebp-0xd4]
 8076716:  mov DWORD PTR [esp], edx
 8076719:  call 8073140
 807671e:  mov ecx, DWORD PTR [ebp+0x8]
 8076721:  mov DWORD PTR [esp], ecx
 8076724:  call 804b4a0
 8076729:  mov ebx, DWORD PTR [edi+0x1c]
 807672c:  test ebx, ebx
 807672e:  jne 807673a
 8076730:  jmp 8076759
 8076732:  lea esi, [esi]
 8076738:  mov ebx, eax
 807673a:  mov eax, DWORD PTR [ebx]
 807673c:  mov DWORD PTR [esp+0x4], eax
 8076740:  mov eax, DWORD PTR [ebp-0xd0]
 8076746:  mov DWORD PTR [esp], eax
 8076749:  call 806af90
 807674e:  test eax, eax
 8076750:  je 80767d0
 8076752:  mov eax, DWORD PTR [ebx+0x4]
 8076755:  test eax, eax
 8076757:  jne 8076738
 8076759:  mov edx, DWORD PTR [ebp-0xd0]
 807675f:  mov DWORD PTR [esp], edx
 8076762:  call 804eea0
 8076767:  lea ecx, [eax+0x1]
 807676a:  add eax, 0xd
 807676d:  mov DWORD PTR [ebp-0x8c], ecx
 8076773:  mov DWORD PTR [esp], eax
 8076776:  call 804d6f0
 807677b:  test eax, eax
 807677d:  mov esi, eax
 807677f:  je 807765e
 8076785:  test ebx, ebx
 8076787:  je 8077677
 807678d:  mov edx, DWORD PTR [ebp-0x8c]
 8076793:  lea eax, [eax+0xc]
 8076796:  mov DWORD PTR [esp+0x8], edx
 807679a:  mov ecx, DWORD PTR [ebp-0xd0]
 80767a0:  mov DWORD PTR [esp], eax
 80767a3:  mov DWORD PTR [esp+0x4], ecx
 80767a7:  call 804efc0
 80767ac:  mov DWORD PTR [esi+0x4], 0x0
 80767b3:  mov DWORD PTR [esi+0x8], 0x0
 80767ba:  mov DWORD PTR [ebx+0x4], esi
 80767bd:  mov DWORD PTR [esi], eax
 80767bf:  jmp 80767d0
 80767c1:  lea esi, [esi]
 80767c8:  xor edi, edi
 80767ca:  test BYTE PTR [ebp+0x14], 0x4
 80767ce:  je 80767e0
 80767d0:  lea esp, [ebp-0xc]
 80767d3:  mov eax, edi
 80767d5:  pop ebx
 80767d6:  pop esi
 80767d7:  pop edi
 80767d8:  pop ebp
 80767d9:  ret
 80767da:  lea esi, [esi]
 80767e0:  test BYTE PTR ds:0x80d2dd0, 0x40
 80767e7:  jne 8077469
 80767ed:  mov edx, DWORD PTR [ebp-0xb4]
 80767f3:  mov eax, DWORD PTR [edx+0xc]
 80767f6:  test eax, eax
 80767f8:  je 8076e4e
 80767fe:  sub eax, 0x1
 8076801:  mov BYTE PTR [ebp-0xb0], 0x0
 8076808:  jne 8077500
 807680e:  mov ecx, DWORD PTR [ebp+0x1c]
 8076811:  mov DWORD PTR [esp+0x8], ecx
 8076815:  mov ebx, DWORD PTR [ebp+0x14]
 8076818:  mov DWORD PTR [esp+0x4], ebx
 807681c:  mov eax, DWORD PTR [ebp+0xc]
 807681f:  mov DWORD PTR [esp], eax
 8076822:  mov ecx, DWORD PTR [ebp+0x10]
 8076825:  mov edx, DWORD PTR [ebp-0xd0]
 807682b:  mov eax, DWORD PTR [ebp+0x8]
 807682e:  call 8079d30
 8076833:  mov ecx, 0x80b3d20
 8076838:  sub esp, 0xc
 807683b:  test eax, eax
 807683d:  mov edi, eax
 807683f:  je 8076ec9
 8076845:  mov edx, DWORD PTR [ebp-0xd8]
 807684b:  add edx, 0x4
 807684e:  mov eax, DWORD PTR [edx+0x18]
 8076851:  movzx ecx, WORD PTR [edx+0x10]
 8076855:  mov DWORD PTR [ebp-0xcc], edx
 807685b:  mov DWORD PTR [edi+0x154], eax
 8076861:  movzx eax, WORD PTR [edx+0x2c]
 8076865:  mov WORD PTR [ebp-0xc6], cx
 807686c:  mov ecx, DWORD PTR [ebp-0xd8]
 8076872:  mov WORD PTR [edi+0x158], ax
 8076879:  movzx ebx, WORD PTR [edx+0x2c]
 807687d:  mov edx, DWORD PTR [edx+0x1c]
 8076880:  shl ebx, 0x5
 8076883:  lea eax, [ebx+edx]
 8076886:  cmp eax, DWORD PTR [ecx]
 8076888:  ja 8076e66
 807688e:  add edx, DWORD PTR [ebp-0xcc]
 8076894:  mov DWORD PTR [ebp-0xbc], edx
 807689a:  movzx ecx, WORD PTR [edi+0x158]
 80768a1:  mov DWORD PTR [ebp-0xc0], esp
 80768a7:  lea eax, [ecx+ecx*2]
 80768aa:  lea eax, [eax*8+0x12]
 80768b1:  and eax, 0xfffffc
 80768b6:  sub esp, eax
 80768b8:  mov eax, ecx
 80768ba:  lea ebx, [esp+0x43]
 80768be:  and ebx, 0xf0
 80768c1:  shl eax, 0x5
 80768c4:  add eax, DWORD PTR [ebp-0xbc]
 80768ca:  cmp DWORD PTR [ebp-0xbc], eax
 80768d0:  mov DWORD PTR [ebp-0xec], ecx
 80768d6:  mov DWORD PTR [ebp-0xdc], ebx
 80768dc:  jae 807745d
 80768e2:  mov eax, DWORD PTR [ebp-0xbc]
 80768e8:  lea edx, [ebp-0x1c]
 80768eb:  mov DWORD PTR [ebp-0xa0], 0x7
 80768f5:  mov DWORD PTR [ebp-0x80], 0x0
 80768fc:  mov BYTE PTR [ebp-0x95], 0x0
 8076903:  mov DWORD PTR [ebp-0xf4], eax
 8076909:  mov ecx, eax
 807690b:  mov DWORD PTR [ebp-0xf0], edx
 8076911:  jmp 8076964
 8076913:  nop
 8076914:  lea esi, [esi]
 8076918:  cmp eax, 0x1
 807691b:  je 8076ac8
 8076921:  cmp eax, 0x2
 8076924:  je 8076a98
 807692a:  mov ebx, DWORD PTR [ebp-0x80]
 807692d:  mov eax, DWORD PTR [ebp-0xec]
 8076933:  mov DWORD PTR [ebp-0x9c], ebx
 8076939:  add DWORD PTR [ebp-0xf4], 0x20
 8076940:  shl eax, 0x5
 8076943:  add eax, DWORD PTR [ebp-0xbc]
 8076949:  cmp DWORD PTR [ebp-0xf4], eax
 807694f:  jae 8076bf0
 8076955:  mov eax, DWORD PTR [ebp-0x9c]
 807695b:  mov ecx, DWORD PTR [ebp-0xf4]
 8076961:  mov DWORD PTR [ebp-0x80], eax
 8076964:  mov eax, DWORD PTR [ecx]
 8076966:  cmp eax, 0x6
 8076969:  je 8076a20
 807696f:  jbe 8076918
 8076971:  cmp eax, 0x6474e551
 8076976:  je 8076a70
 807697c:  cmp eax, 0x6474e552
 8076981:  lea esi, [esi]
 8076988:  je 8076a40
 807698e:  cmp eax, 0x7
 8076991:  lea esi, [esi]
 8076998:  jne 807692a
 807699a:  mov ebx, DWORD PTR [ebp-0xf4]
 80769a0:  mov eax, DWORD PTR [ebx+0x14]
 80769a3:  test eax, eax
 80769a5:  je 807692a
 80769a7:  mov DWORD PTR [edi+0x230], eax
 80769ad:  mov eax, DWORD PTR [ebx+0x1c]
 80769b0:  mov DWORD PTR [edi+0x234], eax
 80769b6:  mov eax, DWORD PTR [ebx+0x1c]
 80769b9:  test eax, eax
 80769bb:  jne 8076bd0
 80769c1:  mov ecx, DWORD PTR [ebp-0xf4]
 80769c7:  mov DWORD PTR [edi+0x238], 0x0
 80769d1:  mov eax, DWORD PTR [ecx+0x10]
 80769d4:  mov DWORD PTR [edi+0x22c], eax
 80769da:  mov eax, DWORD PTR [ecx+0x8]
 80769dd:  mov DWORD PTR [edi+0x228], eax
 80769e3:  movzx eax, BYTE PTR [edi+0x194]
 80769ea:  and eax, 0x3
 80769ed:  sub al, 0x1
 80769ef:  jne 80773a1
 80769f5:  call 807ca40
 80769fa:  mov ebx, DWORD PTR [ebp-0x80]
 80769fd:  mov DWORD PTR [ebp-0x9c], ebx
 8076a03:  mov DWORD PTR [edi+0x240], eax
 8076a09:  movzx eax, WORD PTR [edi+0x158]
 8076a10:  mov DWORD PTR [ebp-0xec], eax
 8076a16:  jmp 8076939
 8076a1b:  nop
 8076a1c:  lea esi, [esi]
 8076a20:  mov eax, DWORD PTR [ecx+0x8]
 8076a23:  mov ecx, DWORD PTR [ebp-0x80]
 8076a26:  mov DWORD PTR [edi+0x150], eax
 8076a2c:  mov eax, DWORD PTR [ebp-0xec]
 8076a32:  mov DWORD PTR [ebp-0x9c], ecx
 8076a38:  jmp 8076939
 8076a3d:  lea esi, [esi]
 8076a40:  mov edx, DWORD PTR [ebp-0xf4]
 8076a46:  mov ecx, DWORD PTR [ebp-0x80]
 8076a49:  mov eax, DWORD PTR [edx+0x8]
 8076a4c:  mov DWORD PTR [ebp-0x9c], ecx
 8076a52:  mov DWORD PTR [edi+0x244], eax
 8076a58:  mov eax, DWORD PTR [edx+0x14]
 8076a5b:  mov DWORD PTR [edi+0x248], eax
 8076a61:  mov eax, DWORD PTR [ebp-0xec]
 8076a67:  jmp 8076939
 8076a6c:  lea esi, [esi]
 8076a70:  mov ecx, DWORD PTR [ebp-0xf4]
 8076a76:  mov ebx, DWORD PTR [ebp-0x80]
 8076a79:  mov eax, DWORD PTR [ebp-0xec]
 8076a7f:  mov ecx, DWORD PTR [ecx+0x18]
 8076a82:  mov DWORD PTR [ebp-0x9c], ebx
 8076a88:  mov DWORD PTR [ebp-0xa0], ecx
 8076a8e:  jmp 8076939
 8076a93:  nop
 8076a94:  lea esi, [esi]
 8076a98:  mov ebx, DWORD PTR [ebp-0xf4]
 8076a9e:  mov eax, DWORD PTR [ebx+0x8]
 8076aa1:  mov DWORD PTR [edi+0x8], eax
 8076aa4:  mov eax, DWORD PTR [ebx+0x14]
 8076aa7:  shr eax, 0x3
 8076aaa:  mov WORD PTR [edi+0x15a], ax
 8076ab1:  mov eax, DWORD PTR [ebp-0x80]
 8076ab4:  mov DWORD PTR [ebp-0x9c], eax
 8076aba:  mov eax, DWORD PTR [ebp-0xec]
 8076ac0:  jmp 8076939
 8076ac5:  lea esi, [esi]
 8076ac8:  mov ebx, DWORD PTR [ebp-0xf4]
 8076ace:  mov eax, ds:0x80d2e2c
 8076ad3:  mov edx, DWORD PTR [ebx+0x1c]
 8076ad6:  mov DWORD PTR [ebp-0xc4], eax
 8076adc:  sub eax, 0x1
 8076adf:  test eax, edx
 8076ae1:  jne 8077358
 8076ae7:  mov esi, DWORD PTR [ebx+0x8]
 8076aea:  sub edx, 0x1
 8076aed:  mov eax, esi
 8076aef:  sub eax, DWORD PTR [ebx+0x4]
 8076af2:  test edx, eax
 8076af4:  jne 807736a
 8076afa:  mov edx, DWORD PTR [ebp-0x80]
 8076afd:  mov ebx, DWORD PTR [ebp-0x80]
 8076b00:  mov ecx, DWORD PTR [ebp-0xc4]
 8076b06:  add edx, 0x1
 8076b09:  lea ebx, [ebx+ebx*2]
 8076b0c:  mov DWORD PTR [ebp-0x9c], edx
 8076b12:  mov edx, DWORD PTR [ebp-0xdc]
 8076b18:  neg ecx
 8076b1a:  mov DWORD PTR [ebp-0xe0], ebx
 8076b20:  mov eax, DWORD PTR [ebp-0xe0]
 8076b26:  shl ebx, 0x3
 8076b29:  and esi, ecx
 8076b2b:  mov DWORD PTR [ebp-0xe4], ebx
 8076b31:  mov DWORD PTR [edx+eax*8], esi
 8076b34:  add edx, ebx
 8076b36:  mov ebx, DWORD PTR [ebp-0xf4]
 8076b3c:  mov ebx, DWORD PTR [ebx+0x8]
 8076b3f:  add DWORD PTR [ebp-0xc4], ebx
 8076b45:  mov eax, DWORD PTR [ebp-0xc4]
 8076b4b:  mov ebx, DWORD PTR [ebp-0xf4]
 8076b51:  sub eax, 0x1
 8076b54:  add eax, DWORD PTR [ebx+0x10]
 8076b57:  and eax, ecx
 8076b59:  mov DWORD PTR [edx+0x4], eax
 8076b5c:  mov eax, DWORD PTR [ebx+0x10]
 8076b5f:  add eax, DWORD PTR [ebx+0x8]
 8076b62:  mov DWORD PTR [edx+0x8], eax
 8076b65:  mov eax, DWORD PTR [ebx+0x14]
 8076b68:  add eax, DWORD PTR [ebx+0x8]
 8076b6b:  mov DWORD PTR [edx+0xc], eax
 8076b6e:  and ecx, DWORD PTR [ebx+0x4]
 8076b71:  cmp DWORD PTR [ebp-0x9c], 0x1
 8076b78:  mov DWORD PTR [edx+0x10], ecx
 8076b7b:  jbe 8076b98
 8076b7d:  mov ecx, DWORD PTR [ebp-0xdc]
 8076b83:  mov edx, DWORD PTR [ebp-0xe4]
 8076b89:  mov eax, DWORD PTR [ecx+edx-0x14]
 8076b8d:  cmp eax, esi
 8076b8f:  je 8076b98
 8076b91:  mov BYTE PTR [ebp-0x95], 0x1
 8076b98:  mov ebx, DWORD PTR [ebp-0xf4]
 8076b9e:  mov eax, DWORD PTR [ebp-0x80]
 8076ba1:  mov ecx, DWORD PTR [ebx+0x18]
 8076ba4:  lea edx, [eax+eax*2]
 8076ba7:  mov eax, 0x73516240
 8076bac:  and ecx, 0x7
 8076baf:  shl ecx, 0x2
 8076bb2:  sar eax, cl
 8076bb4:  mov ecx, DWORD PTR [ebp-0xdc]
 8076bba:  and eax, 0xf
 8076bbd:  mov DWORD PTR [ecx+edx*8+0x14], eax
 8076bc1:  mov eax, DWORD PTR [ebp-0xec]
 8076bc7:  jmp 8076939
 8076bcc:  lea esi, [esi]
 8076bd0:  mov edx, DWORD PTR [ebp-0xf4]
 8076bd6:  sub eax, 0x1
 8076bd9:  and eax, DWORD PTR [edx+0x8]
 8076bdc:  mov ecx, edx
 8076bde:  mov DWORD PTR [edi+0x238], eax
 8076be4:  jmp 80769d1
 8076be9:  lea esi, [esi]
 8076bf0:  mov eax, DWORD PTR [ebp-0x9c]
 8076bf6:  test eax, eax
 8076bf8:  je 807745d
 8076bfe:  mov ecx, DWORD PTR [ebp-0x9c]
 8076c04:  movzx edx, WORD PTR [ebp-0xc6]
 8076c0b:  mov ebx, DWORD PTR [ebp-0xdc]
 8076c11:  lea esi, [ecx+ecx*2-0x3]
 8076c15:  mov DWORD PTR [ebp-0xb8], edx
 8076c1b:  mov eax, DWORD PTR [ebx+esi*8+0xc]
 8076c1f:  mov edx, DWORD PTR [ebx]
 8076c21:  sub eax, edx
 8076c23:  cmp DWORD PTR [ebp-0xb8], 0x3
 8076c2a:  mov DWORD PTR [ebp-0x88], eax
 8076c30:  jne 8077524
 8076c36:  mov eax, DWORD PTR [ebx+0x10]
 8076c39:  mov DWORD PTR [esp+0x14], eax
 8076c3d:  mov ecx, DWORD PTR [ebp-0xd4]
 8076c43:  mov DWORD PTR [esp+0xc], 0x802
 8076c4b:  mov DWORD PTR [esp+0x10], ecx
 8076c4f:  mov ecx, DWORD PTR [ebp-0xdc]
 8076c55:  mov eax, DWORD PTR [ecx+0x14]
 8076c58:  mov DWORD PTR [esp+0x8], eax
 8076c5c:  mov eax, DWORD PTR [ebp-0x88]
 8076c62:  mov DWORD PTR [esp+0x4], eax
 8076c66:  and edx, DWORD PTR ds:0x80d0d60
 8076c6c:  mov DWORD PTR [esp], edx
 8076c6f:  call 8050000
 8076c74:  cmp eax, 0xff
 8076c77:  mov edx, eax
 8076c79:  mov DWORD PTR [edi+0x1ac], eax
 8076c7f:  je 8076d85
 8076c85:  mov ecx, DWORD PTR [ebp-0x88]
 8076c8b:  lea eax, [eax+ecx]
 8076c8e:  mov ecx, edx
 8076c90:  mov DWORD PTR [edi+0x1b0], eax
 8076c96:  mov eax, DWORD PTR [ebp-0xdc]
 8076c9c:  sub ecx, DWORD PTR [eax]
 8076c9e:  cmp BYTE PTR [ebp-0x95], 0x0
 8076ca5:  mov DWORD PTR [edi], ecx
 8076ca7:  jne 8076dfb
 8076cad:  or BYTE PTR [edi+0x195], 0x80
 8076cb4:  test BYTE PTR [ebx+0x14], 0x4
 8076cb8:  je 8076cc5
 8076cba:  mov eax, DWORD PTR [ebx+0x4]
 8076cbd:  add eax, DWORD PTR [edi]
 8076cbf:  mov DWORD PTR [edi+0x1b4], eax
 8076cc5:  mov eax, DWORD PTR [edi+0x150]
 8076ccb:  test eax, eax
 8076ccd:  je 80771f1
 8076cd3:  mov ecx, DWORD PTR [ebx+0xc]
 8076cd6:  mov edx, DWORD PTR [ebx+0x8]
 8076cd9:  cmp ecx, edx
 8076cdb:  jbe 8076d26
 8076cdd:  mov eax, DWORD PTR [edi]
 8076cdf:  lea edx, [eax+edx]
 8076ce2:  lea ecx, [eax+ecx]
 8076ce5:  mov eax, ds:0x80d2e2c
 8076cea:  mov DWORD PTR [ebp-0x90], ecx
 8076cf0:  mov DWORD PTR [ebp-0x94], edx
 8076cf6:  mov ecx, eax
 8076cf8:  neg ecx
 8076cfa:  lea esi, [eax+edx-0x1]
 8076cfe:  and esi, ecx
 8076d00:  cmp esi, DWORD PTR [ebp-0x90]
 8076d06:  jbe 8076d0e
 8076d08:  mov esi, DWORD PTR [ebp-0x90]
 8076d0e:  cmp DWORD PTR [ebp-0x94], esi
 8076d14:  jb 8077290
 8076d1a:  cmp DWORD PTR [ebp-0x90], esi
 8076d20:  ja 8077246
 8076d26:  add ebx, 0x18
 8076d29:  mov edx, DWORD PTR [ebp-0x9c]
 8076d2f:  mov ecx, DWORD PTR [ebp-0xdc]
 8076d35:  lea eax, [edx+edx*2]
 8076d38:  lea eax, [ecx+eax*8]
 8076d3b:  cmp ebx, eax
 8076d3d:  jae 8076d95
 8076d3f:  mov ecx, DWORD PTR [ebx+0x4]
 8076d42:  mov edx, DWORD PTR [ebx]
 8076d44:  cmp ecx, edx
 8076d46:  jbe 8076cb4
 8076d4c:  mov eax, DWORD PTR [ebx+0x10]
 8076d4f:  sub ecx, edx
 8076d51:  mov DWORD PTR [esp+0x14], eax
 8076d55:  mov eax, DWORD PTR [ebp-0xd4]
 8076d5b:  mov DWORD PTR [esp+0xc], 0x812
 8076d63:  mov DWORD PTR [esp+0x10], eax
 8076d67:  mov eax, DWORD PTR [ebx+0x14]
 8076d6a:  mov DWORD PTR [esp+0x4], ecx
 8076d6e:  mov DWORD PTR [esp+0x8], eax
 8076d72:  add edx, DWORD PTR [edi]
 8076d74:  mov DWORD PTR [esp], edx
 8076d77:  call 8050000
 8076d7c:  add eax, 0x1
 8076d7f:  jne 8076cb4
 8076d85:  mov ecx, 0x80b3e54
 8076d8a:  mov esp, DWORD PTR [ebp-0xc0]
 8076d90:  jmp 8076ec9
 8076d95:  mov eax, DWORD PTR [edi+0x8]
 8076d98:  mov esp, DWORD PTR [ebp-0xc0]
 8076d9e:  test eax, eax
 8076da0:  je 80774e4
 8076da6:  mov ecx, eax
 8076da8:  add ecx, DWORD PTR [edi]
 8076daa:  test ecx, ecx
 8076dac:  mov DWORD PTR [edi+0x8], ecx
 8076daf:  je 807703c
 8076db5:  mov edx, DWORD PTR [ecx]
 8076db7:  test edx, edx
 8076db9:  je 8076f3c
 8076dbf:  mov ebx, 0x6fffffff
 8076dc4:  mov esi, 0x6ffffdff
 8076dc9:  jmp 8076de1
 8076dcb:  nop
 8076dcc:  lea esi, [esi]
 8076dd0:  mov DWORD PTR [edi+edx*4+0x20], ecx
 8076dd4:  add ecx, 0x8
 8076dd7:  mov edx, DWORD PTR [ecx]
 8076dd9:  test edx, edx
 8076ddb:  je 8076f3c
 8076de1:  cmp edx, 0x21
 8076de4:  jle 8076dd0
 8076de6:  mov eax, ebx
 8076de8:  sub eax, edx
 8076dea:  cmp eax, 0xf
 8076ded:  ja 8076e35
 8076def:  mov eax, 0x70000029
 8076df4:  sub eax, edx
 8076df6:  mov DWORD PTR [edi+eax*4], ecx
 8076df9:  jmp 8076dd4
 8076dfb:  mov edx, DWORD PTR [eax+0x4]
 8076dfe:  mov DWORD PTR [ebp-0xf8], edx
 8076e04:  mov DWORD PTR [esp+0x8], 0x0
 8076e0c:  mov edx, DWORD PTR [ebp-0xdc]
 8076e12:  mov eax, DWORD PTR [edx+esi*8]
 8076e15:  sub eax, DWORD PTR [ebp-0xf8]
 8076e1b:  mov DWORD PTR [esp+0x4], eax
 8076e1f:  mov eax, DWORD PTR [ebp-0xf8]
 8076e25:  lea edx, [ecx+eax]
 8076e28:  mov DWORD PTR [esp], edx
 8076e2b:  call 8050070
 8076e30:  jmp 8076cad
 8076e35:  lea eax, [edx+edx]
 8076e38:  sar eax, 1
 8076e3a:  cmp eax, 0xfc
 8076e3d:  jbe 8076f10
 8076e43:  not eax
 8076e45:  mov DWORD PTR [edi+eax*4+0xe8], ecx
 8076e4c:  jmp 8076dd4
 8076e4e:  mov DWORD PTR [edx+0xc], 0x1
 8076e55:  call 807c330
 8076e5a:  mov BYTE PTR [ebp-0xb0], 0x1
 8076e61:  jmp 807680e
 8076e66:  lea eax, [ebx+0x12]
 8076e69:  and eax, 0x3ffffc
 8076e6e:  sub esp, eax
 8076e70:  lea eax, [esp+0x43]
 8076e74:  and eax, 0xf0
 8076e77:  mov DWORD PTR [ebp-0xbc], eax
 8076e7d:  mov DWORD PTR [esp+0x8], 0x0
 8076e85:  mov edx, DWORD PTR [ebp-0xcc]
 8076e8b:  mov eax, DWORD PTR [edx+0x1c]
 8076e8e:  mov DWORD PTR [esp+0x4], eax
 8076e92:  mov ecx, DWORD PTR [ebp-0xd4]
 8076e98:  mov DWORD PTR [esp], ecx
 8076e9b:  call 8095c10
 8076ea0:  mov DWORD PTR [esp+0x8], ebx
 8076ea4:  mov eax, DWORD PTR [ebp-0xbc]
 8076eaa:  mov DWORD PTR [esp+0x4], eax
 8076eae:  mov edx, DWORD PTR [ebp-0xd4]
 8076eb4:  mov DWORD PTR [esp], edx
 8076eb7:  call 804f250
 8076ebc:  mov ecx, 0x80b4112
 8076ec1:  cmp eax, ebx
 8076ec3:  je 807689a
 8076ec9:  mov edx, 0xffffffe8
 8076ecf:  mov eax, gs:0x0
 8076ed5:  mov esi, DWORD PTR [eax+edx]
 8076ed8:  movzx eax, BYTE PTR [ebp-0xb0]
 8076edf:  shl eax, 0x1f
 8076ee2:  sar eax, 0x1f
 8076ee5:  and eax, DWORD PTR [ebp-0xb4]
 8076eeb:  mov DWORD PTR [esp+0x8], ecx
 8076eef:  mov DWORD PTR [esp+0x4], edi
 8076ef3:  mov DWORD PTR [esp+0xc], eax
 8076ef7:  mov edx, DWORD PTR [ebp+0x8]
 8076efa:  mov eax, esi
 8076efc:  mov DWORD PTR [esp], edx
 8076eff:  mov ecx, DWORD PTR [ebp-0xd0]
 8076f05:  mov edx, DWORD PTR [ebp-0xd4]
 8076f0b:  call 8074e50
 8076f10:  mov eax, esi
 8076f12:  sub eax, edx
 8076f14:  cmp eax, 0xb
 8076f17:  jbe 8077148
 8076f1d:  mov eax, 0x6ffffeff
 8076f22:  sub eax, edx
 8076f24:  cmp eax, 0xa
 8076f27:  ja 8076dd4
 8076f2d:  mov eax, 0x6fffff48
 8076f32:  sub eax, edx
 8076f34:  mov DWORD PTR [edi+eax*4], ecx
 8076f37:  jmp 8076dd4
 8076f3c:  mov edx, DWORD PTR [edi]
 8076f3e:  test edx, edx
 8076f40:  je 8076fa2
 8076f42:  mov eax, DWORD PTR [edi+0x30]
 8076f45:  test eax, eax
 8076f47:  je 8076f4c
 8076f49:  add DWORD PTR [eax+0x4], edx
 8076f4c:  mov eax, DWORD PTR [edi+0x2c]
 8076f4f:  test eax, eax
 8076f51:  je 8076f56
 8076f53:  add DWORD PTR [eax+0x4], edx
 8076f56:  mov eax, DWORD PTR [edi+0x34]
 8076f59:  test eax, eax
 8076f5b:  je 8076f60
 8076f5d:  add DWORD PTR [eax+0x4], edx
 8076f60:  mov eax, DWORD PTR [edi+0x38]
 8076f63:  test eax, eax
 8076f65:  je 8076f6a
 8076f67:  add DWORD PTR [eax+0x4], edx
 8076f6a:  mov eax, DWORD PTR [edi+0x3c]
 8076f6d:  test eax, eax
 8076f6f:  je 8076f74
 8076f71:  add DWORD PTR [eax+0x4], edx
 8076f74:  mov eax, DWORD PTR [edi+0x64]
 8076f77:  test eax, eax
 8076f79:  je 8076f7e
 8076f7b:  add DWORD PTR [eax+0x4], edx
 8076f7e:  mov eax, DWORD PTR [edi+0x7c]
 8076f81:  test eax, eax
 8076f83:  je 8076f88
 8076f85:  add DWORD PTR [eax+0x4], edx
 8076f88:  mov eax, DWORD PTR [edi+0xe4]
 8076f8e:  test eax, eax
 8076f90:  je 8076f95
 8076f92:  add DWORD PTR [eax+0x4], edx
 8076f95:  mov eax, DWORD PTR [edi+0x14c]
 8076f9b:  test eax, eax
 8076f9d:  je 8076fa2
 8076f9f:  add DWORD PTR [eax+0x4], edx
 8076fa2:  mov eax, DWORD PTR [edi+0x70]
 8076fa5:  test eax, eax
 8076fa7:  je 8076fb5
 8076fa9:  mov eax, DWORD PTR [eax+0x4]
 8076fac:  cmp eax, 0x11
 8076faf:  jne 8077157
 8076fb5:  mov eax, DWORD PTR [edi+0x3c]
 8076fb8:  test eax, eax
 8076fba:  je 8076fc9
 8076fbc:  mov eax, DWORD PTR [edi+0x44]
 8076fbf:  cmp DWORD PTR [eax+0x4], 0xc
 8076fc3:  jne 80776bf
 8076fc9:  mov eax, DWORD PTR [edi+0x64]
 8076fcc:  test eax, eax
 8076fce:  je 8076fdd
 8076fd0:  mov eax, DWORD PTR [edi+0x6c]
 8076fd3:  cmp DWORD PTR [eax+0x4], 0x8
 8076fd7:  jne 807769b
 8076fdd:  mov edx, DWORD PTR [edi+0x98]
 8076fe3:  test edx, edx
 8076fe5:  je 807700e
 8076fe7:  mov eax, DWORD PTR [edx+0x4]
 8076fea:  test al, 0x2
 8076fec:  mov DWORD PTR [edi+0x204], eax
 8076ff2:  je 8076ffd
 8076ff4:  mov eax, DWORD PTR [edi+0x204]
 8076ffa:  mov DWORD PTR [edi+0x60], edx
 8076ffd:  test al, 0x4
 8076fff:  je 8077004
 8077001:  mov DWORD PTR [edi+0x78], edx
 8077004:  test al, 0x8
 8077006:  je 807700e
 8077008:  mov DWORD PTR [edi+0x80], edx
 807700e:  mov edx, DWORD PTR [edi+0xb8]
 8077014:  test edx, edx
 8077016:  je 807702b
 8077018:  mov eax, DWORD PTR [edx+0x4]
 807701b:  test al, 0x1
 807701d:  mov DWORD PTR [edi+0x200], eax
 8077023:  je 807702b
 8077025:  mov DWORD PTR [edi+0x80], edx
 807702b:  mov eax, DWORD PTR [edi+0x94]
 8077031:  test eax, eax
 8077033:  je 807703c
 8077035:  mov DWORD PTR [edi+0x5c], 0x0
 807703c:  test BYTE PTR [edi+0x200], 0x40
 8077043:  jne 8077190
 8077049:  mov eax, DWORD PTR [edi+0x150]
 807704f:  test eax, eax
 8077051:  je 807748b
 8077057:  add eax, DWORD PTR [edi]
 8077059:  mov DWORD PTR [edi+0x150], eax
 807705f:  mov eax, ds:0x80d0d70
 8077064:  not eax
 8077066:  and DWORD PTR [ebp-0xa0], eax
 807706c:  test BYTE PTR [ebp-0xa0], 0x1
 8077073:  jne 8077577
 8077079:  mov eax, DWORD PTR [edi+0x228]
 807707f:  test eax, eax
 8077081:  je 807708b
 8077083:  add eax, DWORD PTR [edi]
 8077085:  mov DWORD PTR [edi+0x228], eax
 807708b:  mov eax, DWORD PTR [ebp-0xd4]
 8077091:  mov DWORD PTR [esp], eax
 8077094:  call 8073140
 8077099:  mov ecx, 0x80b4263
 807709e:  test eax, eax
 80770a0:  jne 8076ec9
 80770a6:  movzx edx, BYTE PTR [edi+0x194]
 80770ad:  mov eax, edx
 80770af:  and eax, 0x3
 80770b2:  sub al, 0x1
 80770b4:  je 8077373
 80770ba:  mov edx, DWORD PTR [edi]
 80770bc:  add edx, DWORD PTR [edi+0x154]
 80770c2:  test BYTE PTR ds:0x80d2dd0, 0x40
 80770c9:  mov DWORD PTR [edi+0x154], edx
 80770cf:  jne 80775ed
 80770d5:  mov eax, edi
 80770d7:  call 8078ba0
 80770dc:  test BYTE PTR [ebp+0x14], 0x8
 80770e0:  je 80772f0
 80770e6:  test BYTE PTR [edi+0x200], 0x20
 80770ed:  je 80770f5
 80770ef:  mov DWORD PTR ds:0x80d2e1c, edi
 80770f5:  mov eax, DWORD PTR [ebp-0x7c]
 80770f8:  mov edx, DWORD PTR [ebp-0x78]
 80770fb:  mov ecx, DWORD PTR ds:0x80d2de4
 8077101:  mov DWORD PTR [edi+0x1d8], eax
 8077107:  mov DWORD PTR [edi+0x1dc], edx
 807710d:  mov eax, DWORD PTR [ebp-0x24]
 8077110:  mov edx, DWORD PTR [ebp-0x20]
 8077113:  test ecx, ecx
 8077115:  mov DWORD PTR [edi+0x1e0], eax
 807711b:  mov DWORD PTR [edi+0x1e4], edx
 8077121:  je 80767d0
 8077127:  mov ecx, DWORD PTR [edi+0x58]
 807712a:  test ecx, ecx
 807712c:  je 80767d0
 8077132:  mov eax, DWORD PTR [edi+0x34]
 8077135:  mov edx, DWORD PTR [eax+0x4]
 8077138:  mov eax, edi
 807713a:  add edx, DWORD PTR [ecx+0x4]
 807713d:  call 8074c00
 8077142:  jmp 80767d0
 8077147:  nop
 8077148:  mov eax, 0x6ffffe3c
 807714d:  sub eax, edx
 807714f:  mov DWORD PTR [edi+eax*4], ecx
 8077152:  jmp 8076dd4
 8077157:  cmp eax, 0x7
 807715a:  lea esi, [esi]
 8077160:  je 8076fb5
 8077166:  mov DWORD PTR [esp+0xc], 0x80b4304
 807716e:  mov DWORD PTR [esp+0x8], 0xb9
 8077176:  mov DWORD PTR [esp+0x4], 0x80b4254
 807717e:  mov DWORD PTR [esp], 0x80b3ea4
 8077185:  call 8051490
 807718a:  lea esi, [esi]
 8077190:  mov eax, DWORD PTR [ebp+0x14]
 8077193:  test eax, eax
 8077195:  jns 8077049
 807719b:  mov edx, DWORD PTR [edi+0x1ac]
 80771a1:  mov eax, DWORD PTR [edi+0x1b0]
 80771a7:  mov DWORD PTR [esp], edx
 80771aa:  sub eax, edx
 80771ac:  mov DWORD PTR [esp+0x4], eax
 80771b0:  call 8050050
 80771b5:  mov eax, DWORD PTR [edi+0x1c]
 80771b8:  mov esi, DWORD PTR [eax+0x8]
 80771bb:  test esi, esi
 80771bd:  je 8077450
 80771c3:  xor esi, esi
 80771c5:  mov ecx, 0x80b3f34
 80771ca:  cmp BYTE PTR [edi+0x194], 0x0
 80771d1:  jns 8076ed8
 80771d7:  mov eax, DWORD PTR [edi+0x150]
 80771dd:  xor esi, esi
 80771df:  mov DWORD PTR [esp], eax
 80771e2:  call 804b4a0
 80771e7:  mov ecx, 0x80b3f34
 80771ec:  jmp 8076ed8
 80771f1:  mov edx, DWORD PTR [ebp-0xcc]
 80771f7:  mov esi, DWORD PTR [ebx+0x10]
 80771fa:  mov ecx, DWORD PTR [edx+0x1c]
 80771fd:  cmp esi, ecx
 80771ff:  ja 8076cd3
 8077205:  mov eax, DWORD PTR [ebx]
 8077207:  mov edx, esi
 8077209:  sub edx, eax
 807720b:  mov DWORD PTR [ebp-0x84], eax
 8077211:  mov eax, DWORD PTR [ebp-0xcc]
 8077217:  add edx, DWORD PTR [ebx+0x4]
 807721a:  movzx eax, WORD PTR [eax+0x2c]
 807721e:  shl eax, 0x5
 8077221:  mov DWORD PTR [ebp-0xfc], eax
 8077227:  add eax, ecx
 8077229:  cmp edx, eax
 807722b:  jb 8076cd3
 8077231:  mov eax, DWORD PTR [ebp-0x84]
 8077237:  add eax, ecx
 8077239:  sub eax, esi
 807723b:  mov DWORD PTR [edi+0x150], eax
 8077241:  jmp 8076cd3
 8077246:  mov DWORD PTR [esp+0x14], 0x0
 807724e:  mov DWORD PTR [esp+0x10], 0xffffffff
 8077256:  mov DWORD PTR [esp+0xc], 0x32
 807725e:  mov eax, DWORD PTR [ebx+0x14]
 8077261:  mov DWORD PTR [esp+0x8], eax
 8077265:  sub DWORD PTR [ebp-0x90], esi
 807726b:  mov ecx, DWORD PTR [ebp-0x90]
 8077271:  mov DWORD PTR [esp], esi
 8077274:  mov DWORD PTR [esp+0x4], ecx
 8077278:  call 8050000
 807727d:  mov ecx, 0x80b4239
 8077282:  add eax, 0x1
 8077285:  jne 8076d26
 807728b:  jmp 8076d8a
 8077290:  mov edx, DWORD PTR [ebx+0x14]
 8077293:  test dl, 0x2
 8077296:  je 80775c2
 807729c:  mov eax, esi
 807729e:  sub eax, DWORD PTR [ebp-0x94]
 80772a4:  mov DWORD PTR [esp+0x4], 0x0
 80772ac:  mov DWORD PTR [esp+0x8], eax
 80772b0:  mov edx, DWORD PTR [ebp-0x94]
 80772b6:  mov DWORD PTR [esp], edx
 80772b9:  call 804ef50
 80772be:  mov edx, DWORD PTR [ebx+0x14]
 80772c1:  test dl, 0x2
 80772c4:  jne 8076d1a
 80772ca:  mov eax, ds:0x80d2e2c
 80772cf:  mov DWORD PTR [esp+0x8], edx
 80772d3:  mov DWORD PTR [esp+0x4], eax
 80772d7:  neg eax
 80772d9:  and eax, DWORD PTR [ebp-0x94]
 80772df:  mov DWORD PTR [esp], eax
 80772e2:  call 8050070
 80772e7:  jmp 8076d1a
 80772ec:  lea esi, [esi]
 80772f0:  mov ebx, DWORD PTR [edi+0x60]
 80772f3:  test ebx, ebx
 80772f5:  je 80770e6
 80772fb:  mov edx, DWORD PTR [edi+0x1cc]
 8077301:  lea eax, [edi+0x15c]
 8077307:  cmp DWORD PTR [edx], eax
 8077309:  je 80770e6
 807730f:  mov eax, DWORD PTR [edi+0x164]
 8077315:  mov DWORD PTR [edi+0x168], 0x1
 807731f:  mov DWORD PTR [eax], edi
 8077321:  mov eax, DWORD PTR [edi+0x1c8]
 8077327:  mov DWORD PTR [esp+0x4], edx
 807732b:  lea eax, [eax*4-0x4]
 8077332:  mov DWORD PTR [esp+0x8], eax
 8077336:  lea eax, [edx+0x4]
 8077339:  mov DWORD PTR [esp], eax
 807733c:  call 806c260
 8077341:  mov edx, DWORD PTR [edi+0x1cc]
 8077347:  lea eax, [edi+0x164]
 807734d:  mov DWORD PTR [edx], eax
 807734f:  jmp 80770e6
 8077354:  lea esi, [esi]
 8077358:  mov ecx, 0x80b3dc8
 807735d:  xor esi, esi
 807735f:  mov esp, DWORD PTR [ebp-0xc0]
 8077365:  jmp 8076ed8
 807736a:  mov ecx, 0x80b3d48
 807736f:  xor esi, esi
 8077371:  jmp 807735f
 8077373:  cmp DWORD PTR [ebp-0xb8], 0x2
 807737a:  jne 80770ba
 8077380:  and edx, 0xfc
 8077383:  mov BYTE PTR [edi+0x194], dl
 8077389:  jmp 80770ba
 807738e:  xor edi, edi
 8077390:  mov ecx, 0x80b420a
 8077395:  mov BYTE PTR [ebp-0xb0], 0x0
 807739c:  jmp 8076ec9
 80773a1:  mov edx, DWORD PTR ds:0x80d2d98
 80773a7:  test edx, edx
 80773a9:  jne 80769f5
 80773af:  call 8048620
 80773b4:  test eax, eax
 80773b6:  jne 80775b3
 80773bc:  lea esi, [esi]
 80773c0:  call 807cf30
 80773c5:  test eax, eax
 80773c7:  mov ecx, eax
 80773c9:  lea esi, [esi]
 80773d0:  je 80775b3
 80773d6:  mov DWORD PTR [ecx], eax
 80773d8:  mov ebx, DWORD PTR [ebp-0xf0]
 80773de:  mov DWORD PTR [ecx+0x8], eax
 80773e1:  mov eax, ds:0x80d0d78
 80773e6:  mov DWORD PTR [ecx+0x10], eax
 80773e9:  mov eax, 0xf3
 80773ee:  mov DWORD PTR [ebp-0x1c], 0xffffffff
 80773f5:  mov DWORD PTR [ebp-0x18], ecx
 80773f8:  mov DWORD PTR [ebp-0x14], 0xfffff
 80773ff:  mov DWORD PTR [ebp-0x10], 0x51
 8077406:  int 0x80
 8077408:  test eax, eax
 807740a:  jne 807759b
 8077410:  mov eax, DWORD PTR [ebp-0x1c]
 8077413:  lea eax, [eax*8+0x3]
 807741a:  mov gs, eax
 807741c:  mov eax, ds:0x80d2d94
 8077421:  movzx edx, WORD PTR [edi+0x158]
 8077428:  add eax, 0x1
 807742b:  mov ds:0x80d2d94, eax
 8077430:  mov DWORD PTR [edi+0x240], eax
 8077436:  mov eax, DWORD PTR [ebp-0x80]
 8077439:  mov DWORD PTR [ebp-0xec], edx
 807743f:  mov DWORD PTR [ebp-0x9c], eax
 8077445:  mov eax, edx
 8077447:  jmp 8076939
 807744c:  lea esi, [esi]
 8077450:  mov DWORD PTR [esp], eax
 8077453:  call 804b4a0
 8077458:  jmp 80771c3
 807745d:  mov ecx, 0x80b3e2c
 8077462:  xor esi, esi
 8077464:  jmp 807735f
 8077469:  mov ebx, DWORD PTR [ebp+0x1c]
 807746c:  mov DWORD PTR [esp+0x8], ebx
 8077470:  mov eax, DWORD PTR [ebp-0xd0]
 8077476:  mov DWORD PTR [esp], 0x80b3cf8
 807747d:  mov DWORD PTR [esp+0x4], eax
 8077481:  call 807c8d0
 8077486:  jmp 80767ed
 807748b:  mov ebx, DWORD PTR [ebp-0xcc]
 8077491:  movzx eax, WORD PTR [ebx+0x2c]
 8077495:  shl eax, 0x5
 8077498:  mov DWORD PTR [esp], eax
 807749b:  call 804d6f0
 80774a0:  mov ecx, 0x80b3f58
 80774a5:  test eax, eax
 80774a7:  mov edx, eax
 80774a9:  je 8076ec9
 80774af:  mov ecx, DWORD PTR [ebp-0xcc]
 80774b5:  movzx eax, WORD PTR [ecx+0x2c]
 80774b9:  shl eax, 0x5
 80774bc:  mov DWORD PTR [esp+0x8], eax
 80774c0:  mov ebx, DWORD PTR [ebp-0xbc]
 80774c6:  mov DWORD PTR [esp], edx
 80774c9:  mov DWORD PTR [esp+0x4], ebx
 80774cd:  call 804efc0
 80774d2:  or BYTE PTR [edi+0x194], 0x80
 80774d9:  mov DWORD PTR [edi+0x150], eax
 80774df:  jmp 807705f
 80774e4:  xor esi, esi
 80774e6:  mov ecx, 0x80b3e80
 80774eb:  cmp DWORD PTR [ebp-0xb8], 0x3
 80774f2:  jne 807703c
 80774f8:  jmp 8076ed8
 80774fd:  lea esi, [esi]
 8077500:  mov DWORD PTR [esp+0xc], 0x80b42ed
 8077508:  mov DWORD PTR [esp+0x8], 0x3ca
 8077510:  mov DWORD PTR [esp+0x4], 0x80b40ab
 8077518:  mov DWORD PTR [esp], 0x80b4224
 807751f:  call 8051490
 8077524:  xor esi, esi
 8077526:  mov ecx, 0x80b3d80
 807752b:  test DWORD PTR [ebp+0x14], 0x20000000
 8077532:  je 807735f
 8077538:  mov eax, edx
 807753a:  add eax, DWORD PTR [edi]
 807753c:  xor BYTE PTR [ebp-0x95], 0x1
 8077543:  shl BYTE PTR [ebp-0x95], 0x7
 807754a:  mov DWORD PTR [edi+0x1ac], eax
 8077550:  add eax, DWORD PTR [ebp-0x88]
 8077556:  mov DWORD PTR [edi+0x1b0], eax
 807755c:  movzx eax, BYTE PTR [edi+0x195]
 8077563:  and eax, 0x7f
 8077566:  or al, BYTE PTR [ebp-0x95]
 807756c:  mov BYTE PTR [edi+0x195], al
 8077572:  jmp 8076d29
 8077577:  or DWORD PTR ds:0x80d0cdc, 0x7
 807757e:  mov eax, DWORD PTR [ebp+0x18]
 8077581:  call DWORD PTR ds:0x80d0d74
 8077587:  mov ecx, 0x80b3f84
 807758c:  test eax, eax
 807758e:  mov esi, eax
 8077590:  jne 8076ed8
 8077596:  jmp 8077079
 807759b:  mov eax, ecx
 807759d:  mov edx, 0x1
 80775a2:  call 807cc00
 80775a7:  xor esi, esi
 80775a9:  mov ecx, 0x80afbdc
 80775ae:  jmp 807735f
 80775b3:  mov ecx, 0x80b3df4
 80775b8:  mov esi, 0xc
 80775bd:  jmp 807735f
 80775c2:  or edx, 0x2
 80775c5:  mov DWORD PTR [esp+0x8], edx
 80775c9:  mov DWORD PTR [esp+0x4], eax
 80775cd:  and ecx, DWORD PTR [ebp-0x94]
 80775d3:  mov DWORD PTR [esp], ecx
 80775d6:  call 8050070
 80775db:  mov ecx, 0x80b3da4
 80775e0:  test eax, eax
 80775e2:  jns 807729c
 80775e8:  jmp 8076d8a
 80775ed:  movzx eax, WORD PTR [edi+0x158]
 80775f4:  mov DWORD PTR [esp+0x2c], 0x8
 80775fc:  mov DWORD PTR [esp+0x30], eax
 8077600:  mov eax, DWORD PTR [edi+0x150]
 8077606:  mov DWORD PTR [esp+0x24], 0x8
 807760e:  mov DWORD PTR [esp+0x20], edx
 8077612:  mov DWORD PTR [esp+0x1c], 0x8
 807761a:  mov DWORD PTR [esp+0x28], eax
 807761e:  mov edx, DWORD PTR [ebp-0x88]
 8077624:  mov DWORD PTR [esp+0x14], 0x8
 807762c:  mov DWORD PTR [esp+0x18], edx
 8077630:  mov eax, DWORD PTR [edi]
 8077632:  mov DWORD PTR [esp+0xc], 0x8
 807763a:  mov DWORD PTR [esp+0x10], eax
 807763e:  mov eax, DWORD PTR [edi+0x8]
 8077641:  mov DWORD PTR [esp+0x4], 0x8
 8077649:  mov DWORD PTR [esp], 0x80b3fc0
 8077650:  mov DWORD PTR [esp+0x8], eax
 8077654:  call 807c8d0
 8077659:  jmp 80770d5
 807765e:  mov DWORD PTR [esp], 0x80b408f
 8077665:  mov edx, DWORD PTR [ebp-0xd0]
 807766b:  xor ecx, ecx
 807766d:  mov eax, 0xc
 8077672:  call 807c080
 8077677:  mov DWORD PTR [esp+0xc], 0x80b42da
 807767f:  mov DWORD PTR [esp+0x8], 0x178
 8077687:  mov DWORD PTR [esp+0x4], 0x80b40ab
 807768f:  mov DWORD PTR [esp], 0x80b40b5
 8077696:  call 8051490
 807769b:  mov DWORD PTR [esp+0xc], 0x80b4304
 80776a3:  mov DWORD PTR [esp+0x8], 0xc2
 80776ab:  mov DWORD PTR [esp+0x4], 0x80b4254
 80776b3:  mov DWORD PTR [esp], 0x80b3f08
 80776ba:  call 8051490
 80776bf:  mov DWORD PTR [esp+0xc], 0x80b4304
 80776c7:  mov DWORD PTR [esp+0x8], 0xbe
 80776cf:  mov DWORD PTR [esp+0x4], 0x80b4254
 80776d7:  mov DWORD PTR [esp], 0x80b3edc
 80776de:  call 8051490
 80776e3:  lea esi, [esi]
 80776e9:  lea edi, [edi]

080776f0 <_dl_map_object>:
 80776f0:  push ebp
 80776f1:  mov ebp, esp
 80776f3:  push edi
 80776f4:  push esi
 80776f5:  push ebx
 80776f6:  sub esp, 0x254
 80776fc:  cmp DWORD PTR [ebp+0x14], 0x0
 8077700:  mov DWORD PTR [ebp-0x234], eax
 8077706:  mov DWORD PTR [ebp-0x248], edx
 807770c:  mov DWORD PTR [ebp-0x238], ecx
 8077712:  jl 8077ccc
 8077718:  jne 8077ca8
 807771e:  mov ebx, DWORD PTR ds:0x80d2e40
 8077724:  test ebx, ebx
 8077726:  jne 807774a
 8077728:  jmp 8077778
 807772a:  lea esi, [esi]
 8077730:  test BYTE PTR [ebx+0x195], 0x1
 8077737:  je 80778ea
 807773d:  mov ebx, DWORD PTR [ebx+0xc]
 8077740:  test ebx, ebx
 8077742:  lea esi, [esi]
 8077748:  je 8077778
 807774a:  movzx eax, BYTE PTR [ebx+0x195]
 8077751:  test al, 0x2
 8077753:  jne 807773d
 8077755:  test al, 0x40
 8077757:  jne 807773d
 8077759:  mov eax, DWORD PTR [ebp-0x248]
 807775f:  mov edx, ebx
 8077761:  call 807c340
 8077766:  test eax, eax
 8077768:  je 8077730
 807776a:  lea esp, [ebp-0xc]
 807776d:  mov eax, ebx
 807776f:  pop ebx
 8077770:  pop esi
 8077771:  pop edi
 8077772:  pop ebp
 8077773:  ret 0x10
 8077776:  xchg ax, ax
 8077778:  mov eax, DWORD PTR [ebp-0x234]
 807777e:  test eax, eax
 8077780:  setne BYTE PTR [ebp-0x22d]
 8077787:  test BYTE PTR ds:0x80d2dd0, 0x40
 807778e:  jne 8077898
 8077794:  mov BYTE PTR [ebp-0xd], 0x0
 8077798:  mov DWORD PTR [esp+0x4], 0x2f
 80777a0:  mov edi, DWORD PTR [ebp-0x248]
 80777a6:  mov DWORD PTR [esp], edi
 80777a9:  call 806ae20
 80777ae:  test eax, eax
 80777b0:  je 807794d
 80777b6:  cmp BYTE PTR [ebp-0x22d], 0x0
 80777bd:  je 8077930
 80777c3:  mov edx, DWORD PTR [ebp-0x248]
 80777c9:  mov eax, DWORD PTR [ebp-0x234]
 80777cf:  call 8075de0
 80777d4:  mov ebx, eax
 80777d6:  test ebx, ebx
 80777d8:  mov edi, 0xffffffff
 80777dd:  mov DWORD PTR [ebp-0x14], ebx
 80777e0:  je 8077823
 80777e2:  cmp BYTE PTR [ebp-0x22d], 0x0
 80777e9:  mov ecx, DWORD PTR [ebp-0x234]
 80777ef:  je 8077942
 80777f5:  lea eax, [ebp-0xd]
 80777f8:  mov DWORD PTR [esp+0x4], eax
 80777fc:  lea edx, [ebp-0x21c]
 8077802:  mov eax, ebx
 8077804:  mov DWORD PTR [esp+0x8], 0x1
 807780c:  mov DWORD PTR [esp], 0x0
 8077813:  call 8074f10
 8077818:  cmp eax, 0xff
 807781b:  mov edi, eax
 807781d:  je 8077df2
 8077823:  mov eax, DWORD PTR [ebp+0x10]
 8077826:  and eax, 0x10000000
 807782b:  cmp eax, 0x1
 807782e:  sbb eax, eax
 8077830:  and DWORD PTR [ebp-0x234], eax
 8077836:  cmp edi, 0xff
 8077839:  je 8077dc5
 807783f:  mov eax, ds:0x80d0cd4
 8077844:  lea ecx, [ebp-0x21c]
 807784a:  mov DWORD PTR [ebp-0x18], eax
 807784d:  lea eax, [ebp-0x18]
 8077850:  mov DWORD PTR [esp+0x14], 0x0
 8077858:  mov DWORD PTR [esp+0x10], eax
 807785c:  mov eax, DWORD PTR [ebp+0x10]
 807785f:  mov DWORD PTR [esp+0xc], eax
 8077863:  mov edx, DWORD PTR [ebp+0x8]
 8077866:  mov DWORD PTR [esp+0x8], edx
 807786a:  mov esi, DWORD PTR [ebp-0x234]
 8077870:  mov edx, edi
 8077872:  mov DWORD PTR [esp+0x4], esi
 8077876:  mov eax, DWORD PTR [ebp-0x14]
 8077879:  mov DWORD PTR [esp], eax
 807787c:  mov eax, DWORD PTR [ebp-0x248]
 8077882:  call 8076650
 8077887:  lea esp, [ebp-0xc]
 807788a:  mov ebx, eax
 807788c:  mov eax, ebx
 807788e:  pop ebx
 807788f:  pop esi
 8077890:  pop edi
 8077891:  pop ebp
 8077892:  ret 0x10
 8077895:  lea esi, [esi]
 8077898:  cmp BYTE PTR [ebp-0x22d], 0x0
 807789f:  je 8077794
 80778a5:  mov ecx, DWORD PTR [ebp-0x234]
 80778ab:  mov eax, DWORD PTR [ecx+0x4]
 80778ae:  mov edx, DWORD PTR [ecx+0x18]
 80778b1:  cmp BYTE PTR [eax], 0x0
 80778b4:  je 80778e1
 80778b6:  mov DWORD PTR [esp+0x10], edx
 80778ba:  mov DWORD PTR [esp+0xc], eax
 80778be:  mov DWORD PTR [esp+0x8], 0x0
 80778c6:  mov esi, DWORD PTR [ebp-0x248]
 80778cc:  mov DWORD PTR [esp], 0x80b4024
 80778d3:  mov DWORD PTR [esp+0x4], esi
 80778d7:  call 807c8d0
 80778dc:  jmp 8077794
 80778e1:  mov eax, ds:0x80d0cd0
 80778e6:  mov eax, DWORD PTR [eax]
 80778e8:  jmp 80778b6
 80778ea:  mov ecx, DWORD PTR [ebx+0x58]
 80778ed:  test ecx, ecx
 80778ef:  je 807773d
 80778f5:  mov eax, DWORD PTR [ebx+0x34]
 80778f8:  mov edi, DWORD PTR [eax+0x4]
 80778fb:  add edi, DWORD PTR [ecx+0x4]
 80778fe:  mov DWORD PTR [esp+0x4], edi
 8077902:  mov eax, DWORD PTR [ebp-0x248]
 8077908:  mov DWORD PTR [esp], eax
 807790b:  call 806af90
 8077910:  test eax, eax
 8077912:  jne 807773d
 8077918:  mov edx, edi
 807791a:  mov eax, ebx
 807791c:  call 8074c00
 8077921:  or BYTE PTR [ebx+0x195], 0x1
 8077928:  jmp 807776a
 807792d:  lea esi, [esi]
 8077930:  mov eax, DWORD PTR [ebp-0x248]
 8077936:  call 80748b0
 807793b:  mov ebx, eax
 807793d:  jmp 80777d6
 8077942:  mov ecx, DWORD PTR ds:0x80d2e40
 8077948:  jmp 80777f5
 807794d:  mov DWORD PTR [esp], edi
 8077950:  call 804eea0
 8077955:  add eax, 0x1
 8077958:  test BYTE PTR ds:0x80d2dd0, 0x1
 807795f:  mov DWORD PTR [ebp-0x22c], eax
 8077965:  jne 8077eee
 807796b:  mov eax, DWORD PTR [ebp-0x234]
 8077971:  test eax, eax
 8077973:  je 8077bc7
 8077979:  mov eax, DWORD PTR [ebp-0x234]
 807797f:  mov eax, DWORD PTR [eax+0x94]
 8077985:  test eax, eax
 8077987:  je 8077bc7
 807798d:  cmp DWORD PTR ds:0x80d0ce0, 0xff
 8077994:  mov edi, 0xffffffff
 8077999:  mov eax, 0x1
 807799e:  je 80779fd
 80779a0:  cmp BYTE PTR [ebp-0x22d], 0x0
 80779a7:  mov edx, DWORD PTR [ebp-0x234]
 80779ad:  je 8077e76
 80779b3:  lea eax, [ebp-0xd]
 80779b6:  mov DWORD PTR [esp+0x14], eax
 80779ba:  lea eax, [ebp-0x21c]
 80779c0:  mov DWORD PTR [esp+0x8], eax
 80779c4:  lea eax, [ebp-0x14]
 80779c7:  mov DWORD PTR [esp+0x10], 0x2
 80779cf:  mov DWORD PTR [esp+0xc], edx
 80779d3:  mov DWORD PTR [esp+0x4], eax
 80779d7:  mov DWORD PTR [esp], 0x80d0ce0
 80779de:  mov ecx, DWORD PTR [ebp-0x238]
 80779e4:  mov edx, DWORD PTR [ebp-0x22c]
 80779ea:  mov eax, DWORD PTR [ebp-0x248]
 80779f0:  call 8075350
 80779f5:  cmp eax, 0xff
 80779f8:  mov edi, eax
 80779fa:  sete al
 80779fd:  cmp BYTE PTR [ebp-0x22d], 0x0
 8077a04:  je 8077b36
 8077a0a:  test al, al
 8077a0c:  je 8077b36
 8077a12:  mov ebx, DWORD PTR [ebp-0x234]
 8077a18:  mov ecx, 0x1d
 8077a1d:  mov DWORD PTR [esp], 0x80b4202
 8077a24:  mov eax, DWORD PTR [ebp-0x234]
 8077a2a:  add ebx, 0x1e8
 8077a30:  mov edx, ebx
 8077a32:  call 80760c0
 8077a37:  test al, al
 8077a39:  jne 8077af0
 8077a3f:  mov esi, DWORD PTR [ebp-0x238]
 8077a45:  test esi, esi
 8077a47:  jne 8077eb9
 8077a4d:  mov eax, DWORD PTR [ebp-0x248]
 8077a53:  call 80780b0
 8077a58:  test eax, eax
 8077a5a:  mov DWORD PTR [ebp-0x220], eax
 8077a60:  je 8077b4d
 8077a66:  cmp BYTE PTR [ebp-0x22d], 0x0
 8077a6d:  je 8077f62
 8077a73:  mov esi, DWORD PTR [ebp-0x234]
 8077a79:  test BYTE PTR [esi+0x201], 0x8
 8077a80:  jne 8077f0b
 8077a86:  mov ecx, DWORD PTR [ebp-0x234]
 8077a8c:  lea eax, [ebp-0xd]
 8077a8f:  mov DWORD PTR [esp+0x8], 0x0
 8077a97:  lea edx, [ebp-0x21c]
 8077a9d:  mov DWORD PTR [esp+0x4], eax
 8077aa1:  mov DWORD PTR [esp], 0x8
 8077aa8:  mov eax, DWORD PTR [ebp-0x220]
 8077aae:  call 8074f10
 8077ab3:  cmp eax, 0xff
 8077ab6:  mov edi, eax
 8077ab8:  je 8077b4d
 8077abe:  mov eax, DWORD PTR [ebp-0x220]
 8077ac4:  call 80748b0
 8077ac9:  test eax, eax
 8077acb:  mov DWORD PTR [ebp-0x14], eax
 8077ace:  je 8077b40
 8077ad0:  test BYTE PTR ds:0x80d2dd0, 0x1
 8077ad7:  je 8077823
 8077add:  mov DWORD PTR [esp], 0x80b5234
 8077ae4:  call 807c8d0
 8077ae9:  jmp 8077823
 8077aee:  xchg ax, ax
 8077af0:  lea eax, [ebp-0xd]
 8077af3:  mov DWORD PTR [esp+0x14], eax
 8077af7:  lea eax, [ebp-0x21c]
 8077afd:  mov DWORD PTR [esp+0x10], 0x4
 8077b05:  mov ecx, DWORD PTR [ebp-0x234]
 8077b0b:  mov DWORD PTR [esp+0x8], eax
 8077b0f:  lea eax, [ebp-0x14]
 8077b12:  mov DWORD PTR [esp+0x4], eax
 8077b16:  mov DWORD PTR [esp], ebx
 8077b19:  mov DWORD PTR [esp+0xc], ecx
 8077b1d:  mov ecx, DWORD PTR [ebp-0x238]
 8077b23:  mov edx, DWORD PTR [ebp-0x22c]
 8077b29:  mov eax, DWORD PTR [ebp-0x248]
 8077b2f:  call 8075350
 8077b34:  mov edi, eax
 8077b36:  cmp edi, 0xff
 8077b39:  jne 8077ad0
 8077b3b:  jmp 8077a3f
 8077b40:  mov DWORD PTR [esp], edi
 8077b43:  nop
 8077b44:  lea esi, [esi]
 8077b48:  call 8073140
 8077b4d:  cmp BYTE PTR [ebp-0x22d], 0x0
 8077b54:  mov edx, DWORD PTR [ebp-0x234]
 8077b5a:  je 8077e81
 8077b60:  test edx, edx
 8077b62:  je 8077b71
 8077b64:  test BYTE PTR [edx+0x201], 0x8
 8077b6b:  jne 8077eaf
 8077b71:  cmp DWORD PTR ds:0x80d0cf4, 0xff
 8077b78:  je 8077eaf
 8077b7e:  lea eax, [ebp-0xd]
 8077b81:  mov DWORD PTR [esp+0x14], eax
 8077b85:  lea eax, [ebp-0x21c]
 8077b8b:  mov DWORD PTR [esp+0x8], eax
 8077b8f:  lea eax, [ebp-0x14]
 8077b92:  mov DWORD PTR [esp+0x10], 0x40
 8077b9a:  mov DWORD PTR [esp+0xc], edx
 8077b9e:  mov DWORD PTR [esp+0x4], eax
 8077ba2:  mov DWORD PTR [esp], 0x80d0cf4
 8077ba9:  mov ecx, DWORD PTR [ebp-0x238]
 8077baf:  mov edx, DWORD PTR [ebp-0x22c]
 8077bb5:  mov eax, DWORD PTR [ebp-0x248]
 8077bbb:  call 8075350
 8077bc0:  mov edi, eax
 8077bc2:  jmp 8077ad0
 8077bc7:  mov edx, DWORD PTR ds:0x80d2e40
 8077bcd:  cmp BYTE PTR [ebp-0x22d], 0x0
 8077bd4:  mov DWORD PTR [ebp-0x228], edx
 8077bda:  je 8077cfd
 8077be0:  mov ebx, DWORD PTR [ebp-0x234]
 8077be6:  mov BYTE PTR [ebp-0x221], 0x0
 8077bed:  jmp 8077c5b
 8077bef:  lea ecx, [ebp-0xd]
 8077bf2:  mov DWORD PTR [esp+0x14], ecx
 8077bf6:  lea eax, [ebp-0x21c]
 8077bfc:  mov DWORD PTR [esp+0x10], 0x4
 8077c04:  mov esi, DWORD PTR [ebp-0x234]
 8077c0a:  mov DWORD PTR [esp+0x8], eax
 8077c0e:  lea eax, [ebp-0x14]
 8077c11:  mov DWORD PTR [esp], edi
 8077c14:  mov DWORD PTR [esp+0x4], eax
 8077c18:  mov DWORD PTR [esp+0xc], esi
 8077c1c:  mov ecx, DWORD PTR [ebp-0x238]
 8077c22:  mov edx, DWORD PTR [ebp-0x22c]
 8077c28:  mov eax, DWORD PTR [ebp-0x248]
 8077c2e:  call 8075350
 8077c33:  cmp eax, 0xff
 8077c36:  mov edi, eax
 8077c38:  jne 8077ad0
 8077c3e:  cmp ebx, DWORD PTR [ebp-0x228]
 8077c44:  sete al
 8077c47:  or BYTE PTR [ebp-0x221], al
 8077c4d:  mov ebx, DWORD PTR [ebx+0x16c]
 8077c53:  test ebx, ebx
 8077c55:  je 8077cf0
 8077c5b:  mov eax, DWORD PTR [ebx+0x198]
 8077c61:  cmp eax, 0xff
 8077c64:  je 8077c4d
 8077c66:  test eax, eax
 8077c68:  lea edi, [ebx+0x198]
 8077c6e:  jne 8077bef
 8077c74:  mov edx, DWORD PTR [ebx+0x5c]
 8077c77:  test edx, edx
 8077c79:  je 8077db0
 8077c7f:  mov eax, DWORD PTR [ebx+0x34]
 8077c82:  mov ecx, ebx
 8077c84:  mov edx, DWORD PTR [edx+0x4]
 8077c87:  add edx, DWORD PTR [eax+0x4]
 8077c8a:  mov eax, edi
 8077c8c:  mov DWORD PTR [esp], 0x80b41fc
 8077c93:  call 8075f50
 8077c98:  sub esp, 0x4
 8077c9b:  test al, al
 8077c9d:  je 8077c4d
 8077c9f:  jmp 8077bef
 8077ca4:  lea esi, [esi]
 8077ca8:  mov DWORD PTR [esp+0xc], 0x80b42cb
 8077cb0:  mov DWORD PTR [esp+0x8], 0x7af
 8077cb8:  mov DWORD PTR [esp+0x4], 0x80b40ab
 8077cc0:  mov DWORD PTR [esp], 0x80b428a
 8077cc7:  call 8051490
 8077ccc:  mov DWORD PTR [esp+0xc], 0x80b42cb
 8077cd4:  mov DWORD PTR [esp+0x8], 0x7ae
 8077cdc:  mov DWORD PTR [esp+0x4], 0x80b40ab
 8077ce4:  mov DWORD PTR [esp], 0x80b4280
 8077ceb:  call 8051490
 8077cf0:  cmp BYTE PTR [ebp-0x221], 0x0
 8077cf7:  jne 807798d
 8077cfd:  mov edi, DWORD PTR [ebp-0x228]
 8077d03:  test edi, edi
 8077d05:  je 807798d
 8077d0b:  mov edx, DWORD PTR [ebp-0x228]
 8077d11:  movzx eax, BYTE PTR [edx+0x194]
 8077d18:  and eax, 0x3
 8077d1b:  cmp al, 0x2
 8077d1d:  je 807798d
 8077d23:  mov DWORD PTR [esp], 0x80b41fc
 8077d2a:  mov eax, DWORD PTR [ebp-0x228]
 8077d30:  mov ebx, edx
 8077d32:  add ebx, 0x198
 8077d38:  mov ecx, 0xf
 8077d3d:  mov edx, ebx
 8077d3f:  call 80760c0
 8077d44:  test al, al
 8077d46:  je 807798d
 8077d4c:  cmp BYTE PTR [ebp-0x22d], 0x0
 8077d53:  mov edx, DWORD PTR [ebp-0x228]
 8077d59:  je 8077d61
 8077d5b:  mov edx, DWORD PTR [ebp-0x234]
 8077d61:  lea eax, [ebp-0xd]
 8077d64:  mov DWORD PTR [esp+0x14], eax
 8077d68:  lea eax, [ebp-0x21c]
 8077d6e:  mov DWORD PTR [esp+0x8], eax
 8077d72:  lea eax, [ebp-0x14]
 8077d75:  mov DWORD PTR [esp+0x10], 0x4
 8077d7d:  mov DWORD PTR [esp+0xc], edx
 8077d81:  mov DWORD PTR [esp+0x4], eax
 8077d85:  mov DWORD PTR [esp], ebx
 8077d88:  mov ecx, DWORD PTR [ebp-0x238]
 8077d8e:  mov edx, DWORD PTR [ebp-0x22c]
 8077d94:  mov eax, DWORD PTR [ebp-0x248]
 8077d9a:  call 8075350
 8077d9f:  cmp eax, 0xff
 8077da2:  mov edi, eax
 8077da4:  jne 8077ad0
 8077daa:  jmp 807798d
 8077daf:  nop
 8077db0:  mov DWORD PTR [ebx+0x198], 0xffffffff
 8077dba:  lea esi, [esi]
 8077dc0:  jmp 8077c4d
 8077dc5:  mov ecx, DWORD PTR [ebp+0xc]
 8077dc8:  test ecx, ecx
 8077dca:  lea esi, [esi]
 8077dd0:  jne 8077e02
 8077dd2:  cmp BYTE PTR [ebp-0xd], 0x0
 8077dd6:  je 8077e8c
 8077ddc:  mov DWORD PTR [esp], 0x80b4293
 8077de3:  mov edx, DWORD PTR [ebp-0x248]
 8077de9:  xor ecx, ecx
 8077deb:  xor eax, eax
 8077ded:  call 807c080
 8077df2:  mov eax, DWORD PTR [ebp-0x14]
 8077df5:  mov DWORD PTR [esp], eax
 8077df8:  call 804b4a0
 8077dfd:  jmp 8077823
 8077e02:  test BYTE PTR ds:0x80d2dd1, 0x4
 8077e09:  jne 8077dd2
 8077e0b:  mov eax, DWORD PTR [ebp-0x248]
 8077e11:  call 80748b0
 8077e16:  test eax, eax
 8077e18:  mov edi, eax
 8077e1a:  je 8077ecd
 8077e20:  mov DWORD PTR [esp+0x8], 0x0
 8077e28:  mov ecx, DWORD PTR [ebp+0x10]
 8077e2b:  mov DWORD PTR [esp+0x4], ecx
 8077e2f:  mov esi, DWORD PTR [ebp-0x234]
 8077e35:  mov DWORD PTR [esp], esi
 8077e38:  mov ecx, DWORD PTR [ebp+0x8]
 8077e3b:  mov edx, DWORD PTR [ebp-0x248]
 8077e41:  call 8079d30
 8077e46:  sub esp, 0xc
 8077e49:  test eax, eax
 8077e4b:  mov ebx, eax
 8077e4d:  je 8077ecd
 8077e4f:  or BYTE PTR [eax+0x195], 0x2
 8077e56:  or BYTE PTR [eax+0x194], 0x4
 8077e5d:  mov DWORD PTR [eax+0x18c], 0x80b435c
 8077e67:  mov DWORD PTR [eax+0x178], 0x1
 8077e71:  jmp 807776a
 8077e76:  mov edx, DWORD PTR ds:0x80d2e40
 8077e7c:  jmp 80779b3
 8077e81:  mov edx, DWORD PTR ds:0x80d2e40
 8077e87:  jmp 8077b60
 8077e8c:  mov edx, DWORD PTR gs:0x0
 8077e93:  xor ecx, ecx
 8077e95:  mov eax, 0xffffffe8
 8077e9a:  mov eax, DWORD PTR [edx+eax]
 8077e9d:  mov DWORD PTR [esp], 0x80b4070
 8077ea4:  mov edx, DWORD PTR [ebp-0x248]
 8077eaa:  call 807c080
 8077eaf:  mov edi, 0xffffffff
 8077eb4:  jmp 8077ad0
 8077eb9:  mov ebx, DWORD PTR ds:0x80d0cd8
 8077ebf:  test ebx, ebx
 8077ec1:  jne 8077b4d
 8077ec7:  nop
 8077ec8:  jmp 8077a4d
 8077ecd:  mov DWORD PTR [esp], edi
 8077ed0:  call 804b4a0
 8077ed5:  xor ecx, ecx
 8077ed7:  mov eax, 0xc
 8077edc:  mov DWORD PTR [esp], 0x80b3d20
 8077ee3:  mov edx, DWORD PTR [ebp-0x248]
 8077ee9:  call 807c080
 8077eee:  mov DWORD PTR [esp+0x8], 0x0
 8077ef6:  mov DWORD PTR [esp+0x4], edi
 8077efa:  mov DWORD PTR [esp], 0x80b404c
 8077f01:  call 807c8d0
 8077f06:  jmp 807796b
 8077f0b:  mov DWORD PTR [ebp-0x240], 0x80b4328
 8077f15:  xor ebx, ebx
 8077f17:  mov edi, DWORD PTR [ebx*4+0x80b4338]
 8077f1e:  mov esi, DWORD PTR [ebp-0x220]
 8077f24:  mov DWORD PTR [ebp-0x244], edi
 8077f2a:  cmp edi, edi
 8077f2c:  mov ecx, DWORD PTR [ebp-0x244]
 8077f32:  mov edi, DWORD PTR [ebp-0x240]
 8077f38:  repz cmpsb
 8077f3a:  je 8077b4d
 8077f40:  test ebx, ebx
 8077f42:  jne 8077a86
 8077f48:  mov edx, DWORD PTR [ebp-0x240]
 8077f4e:  mov bl, 0x1
 8077f50:  mov eax, DWORD PTR [ebp-0x244]
 8077f56:  lea edx, [edx+eax+0x1]
 8077f5a:  mov DWORD PTR [ebp-0x240], edx
 8077f60:  jmp 8077f17
 8077f62:  mov ecx, DWORD PTR ds:0x80d2e40
 8077f68:  jmp 8077a8c
 8077f6d:  nop
 8077f6e:  nop
 8077f6f:  nop

08077f70 <_dl_cache_libcmp>:
 8077f70:  push ebp
 8077f71:  mov ebp, esp
 8077f73:  push edi
 8077f74:  mov edi, edx
 8077f76:  push esi
 8077f77:  push ebx
 8077f78:  sub esp, 0x4
 8077f7b:  mov DWORD PTR [ebp-0x10], eax
 8077f7e:  movzx ecx, BYTE PTR [eax]
 8077f81:  lea esi, [esi]
 8077f88:  test cl, cl
 8077f8a:  je 8078034
 8077f90:  lea eax, [ecx-0x30]
 8077f93:  cmp al, 0x9
 8077f95:  ja 8078011
 8077f97:  movzx edx, BYTE PTR [edi]
 8077f9a:  lea eax, [edx-0x30]
 8077f9d:  cmp al, 0x9
 8077f9f:  ja 8078043
 8077fa5:  movsx eax, cl
 8077fa8:  add edi, 0x1
 8077fab:  lea esi, [eax-0x30]
 8077fae:  movsx eax, dl
 8077fb1:  add DWORD PTR [ebp-0x10], 0x1
 8077fb5:  lea ebx, [eax-0x30]
 8077fb8:  jmp 8077fce
 8077fba:  lea esi, [esi]
 8077fc0:  add DWORD PTR [ebp-0x10], 0x1
 8077fc4:  movsx edx, cl
 8077fc7:  lea eax, [esi+esi*4]
 8077fca:  lea esi, [edx+eax*2-0x30]
 8077fce:  mov eax, DWORD PTR [ebp-0x10]
 8077fd1:  movzx ecx, BYTE PTR [eax]
 8077fd4:  lea eax, [ecx-0x30]
 8077fd7:  cmp al, 0x9
 8077fd9:  jbe 8077fc0
 8077fdb:  movzx edx, BYTE PTR [edi]
 8077fde:  lea eax, [edx-0x30]
 8077fe1:  cmp al, 0x9
 8077fe3:  ja 8077fff
 8077fe5:  lea esi, [esi]
 8077fe8:  lea eax, [ebx+ebx*4]
 8077feb:  movsx edx, dl
 8077fee:  add edi, 0x1
 8077ff1:  lea ebx, [edx+eax*2-0x30]
 8077ff5:  movzx edx, BYTE PTR [edi]
 8077ff8:  lea eax, [edx-0x30]
 8077ffb:  cmp al, 0x9
 8077ffd:  jbe 8077fe8
 8077fff:  cmp esi, ebx
 8078001:  je 8077f88
 8078003:  mov edx, esi
 8078005:  sub edx, ebx
 8078007:  add esp, 0x4
 807800a:  mov eax, edx
 807800c:  pop ebx
 807800d:  pop esi
 807800e:  pop edi
 807800f:  pop ebp
 8078010:  ret
 8078011:  movzx ebx, BYTE PTR [edi]
 8078014:  lea eax, [ebx-0x30]
 8078017:  cmp al, 0x9
 8078019:  jbe 807805c
 807801b:  cmp bl, cl
 807801d:  jne 8078052
 807801f:  add DWORD PTR [ebp-0x10], 0x1
 8078023:  add edi, 0x1
 8078026:  mov eax, DWORD PTR [ebp-0x10]
 8078029:  movzx ecx, BYTE PTR [eax]
 807802c:  test cl, cl
 807802e:  jne 8077f90
 8078034:  movsx edx, BYTE PTR [edi]
 8078037:  add esp, 0x4
 807803a:  pop ebx
 807803b:  pop esi
 807803c:  pop edi
 807803d:  neg edx
 807803f:  mov eax, edx
 8078041:  pop ebp
 8078042:  ret
 8078043:  mov edx, 0x1
 8078048:  add esp, 0x4
 807804b:  mov eax, edx
 807804d:  pop ebx
 807804e:  pop esi
 807804f:  pop edi
 8078050:  pop ebp
 8078051:  ret
 8078052:  movsx edx, cl
 8078055:  movsx eax, bl
 8078058:  sub edx, eax
 807805a:  jmp 8078007
 807805c:  mov edx, 0xffffffff
 8078061:  jmp 8078007
 8078063:  lea esi, [esi]
 8078069:  lea edi, [edi]

08078070 <_dl_unload_cache>:
 8078070:  push ebp
 8078071:  mov ebp, esp
 8078073:  sub esp, 0x8
 8078076:  mov edx, DWORD PTR ds:0x80d2a2c
 807807c:  lea eax, [edx-0x1]
 807807f:  cmp eax, 0xfd
 8078082:  jbe 8078088
 8078084:  leave
 8078085:  ret
 8078086:  xchg ax, ax
 8078088:  mov eax, ds:0x80d2a34
 807808d:  mov DWORD PTR [esp], edx
 8078090:  mov DWORD PTR [esp+0x4], eax
 8078094:  call 8050050
 8078099:  mov DWORD PTR ds:0x80d2a2c, 0x0
 80780a3:  leave
 80780a4:  ret
 80780a5:  lea esi, [esi]
 80780a9:  lea edi, [edi]

080780b0 <_dl_load_cache_lookup>:
 80780b0:  push ebp
 80780b1:  mov ebp, esp
 80780b3:  push edi
 80780b4:  push esi
 80780b5:  push ebx
 80780b6:  sub esp, 0x98
 80780bc:  test BYTE PTR ds:0x80d2dd0, 0x1
 80780c3:  mov DWORD PTR [ebp-0x80], eax
 80780c6:  jne 8078904
 80780cc:  mov eax, ds:0x80d2a2c
 80780d1:  test eax, eax
 80780d3:  jne 807816e
 80780d9:  mov ecx, 0x1
 80780de:  mov edx, 0x80d2a34
 80780e3:  mov eax, 0x80b4360
 80780e8:  call 807c8f0
 80780ed:  cmp eax, 0xff
 80780f0:  mov DWORD PTR [ebp-0x94], eax
 80780f6:  je 8078119
 80780f8:  mov ebx, DWORD PTR ds:0x80d2a34
 80780fe:  cmp ebx, 0x10
 8078101:  ja 80784b2
 8078107:  mov edx, DWORD PTR [ebp-0x94]
 807810d:  mov DWORD PTR [esp+0x4], ebx
 8078111:  mov DWORD PTR [esp], edx
 8078114:  call 8050050
 8078119:  mov DWORD PTR ds:0x80d2a2c, 0xffffffff
 8078123:  mov DWORD PTR [ebp-0x60], 0x0
 807812a:  mov eax, DWORD PTR [ebp-0x60]
 807812d:  add esp, 0x98
 8078133:  pop ebx
 8078134:  pop esi
 8078135:  pop edi
 8078136:  pop ebp
 8078137:  ret
 8078138:  cmp ebx, 0x30
 807813b:  jbe 8078107
 807813d:  mov esi, DWORD PTR [ebp-0x94]
 8078143:  mov edi, 0x80b438f
 8078148:  mov ecx, 0x14
 807814d:  repz cmpsb
 807814f:  jne 8078107
 8078151:  mov eax, DWORD PTR [ebp-0x94]
 8078157:  mov ds:0x80d2a30, eax
 807815c:  mov ds:0x80d2a2c, eax
 8078161:  mov eax, ds:0x80d2a2c
 8078166:  test eax, eax
 8078168:  je 807891d
 807816e:  mov ecx, DWORD PTR ds:0x80d2a2c
 8078174:  mov DWORD PTR [ebp-0x8c], ecx
 807817a:  add ecx, 0x1
 807817d:  je 8078341
 8078183:  mov esi, DWORD PTR ds:0x80d2a30
 8078189:  mov DWORD PTR [ebp-0x7c], esi
 807818c:  add esi, 0x1
 807818f:  je 8078528
 8078195:  mov ebx, DWORD PTR ds:0x80d2dec
 807819b:  mov esi, DWORD PTR ds:0x80d2a34
 80781a1:  test ebx, ebx
 80781a3:  je 8078211
 80781a5:  mov DWORD PTR [esp+0x4], 0x80b01e0
 80781ad:  mov DWORD PTR [esp], ebx
 80781b0:  call 806af90
 80781b5:  xor edx, edx
 80781b7:  test eax, eax
 80781b9:  je 8078509
 80781bf:  mov DWORD PTR [esp+0x4], 0x80b01e5
 80781c7:  mov DWORD PTR [esp], ebx
 80781ca:  call 806af90
 80781cf:  mov edx, 0x1
 80781d4:  test eax, eax
 80781d6:  je 8078509
 80781dc:  mov DWORD PTR [esp+0x4], 0x80b01ea
 80781e4:  mov DWORD PTR [esp], ebx
 80781e7:  call 806af90
 80781ec:  mov edx, 0x2
 80781f1:  test eax, eax
 80781f3:  je 8078509
 80781f9:  mov DWORD PTR [esp+0x4], 0x80b01ef
 8078201:  mov DWORD PTR [esp], ebx
 8078204:  call 806af90
 8078209:  test eax, eax
 807820b:  je 8078504
 8078211:  mov DWORD PTR [ebp-0x5c], 0xffffffff
 8078218:  mov DWORD PTR [ebp-0x58], 0xffffffff
 807821f:  mov edx, DWORD PTR [ebp-0x7c]
 8078222:  mov eax, DWORD PTR [edx+0x14]
 8078225:  sub eax, 0x1
 8078228:  mov DWORD PTR [ebp-0x1c], eax
 807822b:  js 8078341
 8078231:  sar eax, 1
 8078233:  mov DWORD PTR [ebp-0x20], eax
 8078236:  lea eax, [eax+eax*2]
 8078239:  add esi, DWORD PTR [ebp-0x8c]
 807823f:  mov eax, DWORD PTR [edx+eax*8+0x34]
 8078243:  sub esi, edx
 8078245:  mov DWORD PTR [ebp-0x64], esi
 8078248:  cmp esi, eax
 807824a:  jbe 8078341
 8078250:  mov ecx, DWORD PTR [ebp-0x80]
 8078253:  movzx ecx, BYTE PTR [ecx]
 8078256:  mov DWORD PTR [ebp-0x70], 0x0
 807825d:  mov BYTE PTR [ebp-0x15], cl
 8078260:  add eax, DWORD PTR [ebp-0x7c]
 8078263:  mov esi, DWORD PTR [ebp-0x80]
 8078266:  movzx ecx, BYTE PTR [ebp-0x15]
 807826a:  mov DWORD PTR [ebp-0x54], eax
 807826d:  lea esi, [esi]
 8078270:  test cl, cl
 8078272:  je 807837b
 8078278:  lea eax, [ecx-0x30]
 807827b:  cmp al, 0x9
 807827d:  ja 8078350
 8078283:  mov eax, DWORD PTR [ebp-0x54]
 8078286:  movzx edx, BYTE PTR [eax]
 8078289:  lea eax, [edx-0x30]
 807828c:  cmp al, 0x9
 807828e:  ja 807830e
 8078290:  add esi, 0x1
 8078293:  movsx eax, cl
 8078296:  add DWORD PTR [ebp-0x54], 0x1
 807829a:  movzx ecx, BYTE PTR [esi]
 807829d:  lea ebx, [eax-0x30]
 80782a0:  movsx eax, dl
 80782a3:  lea edi, [eax-0x30]
 80782a6:  lea eax, [ecx-0x30]
 80782a9:  cmp al, 0x9
 80782ab:  ja 80782e6
 80782ad:  lea esi, [esi]
 80782b0:  add esi, 0x1
 80782b3:  movsx edx, cl
 80782b6:  movzx ecx, BYTE PTR [esi]
 80782b9:  lea eax, [ebx+ebx*4]
 80782bc:  lea ebx, [edx+eax*2-0x30]
 80782c0:  lea eax, [ecx-0x30]
 80782c3:  cmp al, 0x9
 80782c5:  jbe 80782b0
 80782c7:  mov eax, DWORD PTR [ebp-0x54]
 80782ca:  movzx edx, BYTE PTR [eax]
 80782cd:  lea eax, [edx-0x30]
 80782d0:  cmp al, 0x9
 80782d2:  ja 80782f3
 80782d4:  lea esi, [esi]
 80782d8:  add DWORD PTR [ebp-0x54], 0x1
 80782dc:  movsx edx, dl
 80782df:  lea eax, [edi+edi*4]
 80782e2:  lea edi, [edx+eax*2-0x30]
 80782e6:  mov eax, DWORD PTR [ebp-0x54]
 80782e9:  movzx edx, BYTE PTR [eax]
 80782ec:  lea eax, [edx-0x30]
 80782ef:  cmp al, 0x9
 80782f1:  jbe 80782d8
 80782f3:  cmp ebx, edi
 80782f5:  je 8078270
 80782fb:  mov edx, ebx
 80782fd:  sub edx, edi
 80782ff:  cmp edx, 0x0
 8078302:  je 807838c
 8078308:  jl 80784a2
 807830e:  mov esi, DWORD PTR [ebp-0x20]
 8078311:  mov eax, DWORD PTR [ebp-0x70]
 8078314:  sub esi, 0x1
 8078317:  mov DWORD PTR [ebp-0x1c], esi
 807831a:  cmp DWORD PTR [ebp-0x1c], eax
 807831d:  jl 8078341
 807831f:  add eax, DWORD PTR [ebp-0x1c]
 8078322:  mov esi, DWORD PTR [ebp-0x7c]
 8078325:  mov edx, eax
 8078327:  shr edx, 0x1f
 807832a:  add edx, eax
 807832c:  sar edx, 1
 807832e:  lea eax, [edx+edx*2]
 8078331:  mov eax, DWORD PTR [esi+eax*8+0x34]
 8078335:  cmp DWORD PTR [ebp-0x64], eax
 8078338:  mov DWORD PTR [ebp-0x20], edx
 807833b:  ja 8078260
 8078341:  mov DWORD PTR [ebp-0x60], 0x0
 8078348:  jmp 807812a
 807834d:  lea esi, [esi]
 8078350:  mov edx, DWORD PTR [ebp-0x54]
 8078353:  movzx ebx, BYTE PTR [edx]
 8078356:  lea eax, [ebx-0x30]
 8078359:  cmp al, 0x9
 807835b:  jbe 80784a2
 8078361:  cmp bl, cl
 8078363:  jne 80786b1
 8078369:  add esi, 0x1
 807836c:  add DWORD PTR [ebp-0x54], 0x1
 8078370:  movzx ecx, BYTE PTR [esi]
 8078373:  test cl, cl
 8078375:  jne 8078278
 807837b:  mov ecx, DWORD PTR [ebp-0x54]
 807837e:  movsx edx, BYTE PTR [ecx]
 8078381:  neg edx
 8078383:  cmp edx, 0x0
 8078386:  jne 8078308
 807838c:  mov esi, DWORD PTR [ebp-0x20]
 807838f:  test esi, esi
 8078391:  mov DWORD PTR [ebp-0x14], esi
 8078394:  jle 80786f2
 807839a:  mov ecx, DWORD PTR [ebp-0x7c]
 807839d:  mov eax, esi
 807839f:  sub eax, 0x1
 80783a2:  mov DWORD PTR [ebp-0x28], eax
 80783a5:  lea eax, [eax+eax*2]
 80783a8:  mov edx, DWORD PTR [ecx+eax*8+0x34]
 80783ac:  lea eax, [esi+esi*2-0x6]
 80783b0:  cmp DWORD PTR [ebp-0x64], edx
 80783b3:  lea eax, [ecx+eax*8+0x34]
 80783b7:  mov DWORD PTR [ebp-0x3c], eax
 80783ba:  jbe 80786f2
 80783c0:  add edx, DWORD PTR [ebp-0x7c]
 80783c3:  mov edi, DWORD PTR [ebp-0x80]
 80783c6:  movzx ecx, BYTE PTR [ebp-0x15]
 80783ca:  mov DWORD PTR [ebp-0x50], edx
 80783cd:  lea esi, [esi]
 80783d0:  test cl, cl
 80783d2:  je 80786e5
 80783d8:  lea eax, [ecx-0x30]
 80783db:  cmp al, 0x9
 80783dd:  ja 80786be
 80783e3:  mov eax, DWORD PTR [ebp-0x50]
 80783e6:  movzx edx, BYTE PTR [eax]
 80783e9:  lea eax, [edx-0x30]
 80783ec:  cmp al, 0x9
 80783ee:  ja 80786f2
 80783f4:  add edi, 0x1
 80783f7:  movsx eax, cl
 80783fa:  add DWORD PTR [ebp-0x50], 0x1
 80783fe:  movzx ecx, BYTE PTR [edi]
 8078401:  lea esi, [eax-0x30]
 8078404:  movsx eax, dl
 8078407:  lea ebx, [eax-0x30]
 807840a:  lea eax, [ecx-0x30]
 807840d:  cmp al, 0x9
 807840f:  ja 807844e
 8078411:  lea esi, [esi]
 8078418:  add edi, 0x1
 807841b:  movsx edx, cl
 807841e:  movzx ecx, BYTE PTR [edi]
 8078421:  lea eax, [esi+esi*4]
 8078424:  lea esi, [edx+eax*2-0x30]
 8078428:  lea eax, [ecx-0x30]
 807842b:  cmp al, 0x9
 807842d:  jbe 8078418
 807842f:  mov eax, DWORD PTR [ebp-0x50]
 8078432:  movzx edx, BYTE PTR [eax]
 8078435:  lea eax, [edx-0x30]
 8078438:  cmp al, 0x9
 807843a:  ja 807845b
 807843c:  lea esi, [esi]
 8078440:  add DWORD PTR [ebp-0x50], 0x1
 8078444:  movsx edx, dl
 8078447:  lea eax, [ebx+ebx*4]
 807844a:  lea ebx, [edx+eax*2-0x30]
 807844e:  mov eax, DWORD PTR [ebp-0x50]
 8078451:  movzx edx, BYTE PTR [eax]
 8078454:  lea eax, [edx-0x30]
 8078457:  cmp al, 0x9
 8078459:  jbe 8078440
 807845b:  cmp esi, ebx
 807845d:  je 80783d0
 8078463:  mov edx, esi
 8078465:  sub edx, ebx
 8078467:  test edx, edx
 8078469:  jne 80786f2
 807846f:  mov eax, DWORD PTR [ebp-0x28]
 8078472:  test eax, eax
 8078474:  je 80786f8
 807847a:  mov ecx, DWORD PTR [ebp-0x3c]
 807847d:  mov eax, DWORD PTR [ebp-0x28]
 8078480:  mov edx, DWORD PTR [ecx]
 8078482:  sub ecx, 0x18
 8078485:  sub eax, 0x1
 8078488:  cmp DWORD PTR [ebp-0x64], edx
 807848b:  mov DWORD PTR [ebp-0x3c], ecx
 807848e:  jbe 80786f8
 8078494:  mov esi, DWORD PTR [ebp-0x28]
 8078497:  mov DWORD PTR [ebp-0x28], eax
 807849a:  mov DWORD PTR [ebp-0x20], esi
 807849d:  jmp 80783c0
 80784a2:  mov ecx, DWORD PTR [ebp-0x20]
 80784a5:  add ecx, 0x1
 80784a8:  mov DWORD PTR [ebp-0x70], ecx
 80784ab:  mov eax, ecx
 80784ad:  jmp 807831a
 80784b2:  mov edi, 0x80b4383
 80784b7:  mov ecx, 0xb
 80784bc:  mov esi, eax
 80784be:  repz cmpsb
 80784c0:  jne 8078138
 80784c6:  mov eax, DWORD PTR [ebp-0x94]
 80784cc:  mov edx, eax
 80784ce:  mov ds:0x80d2a2c, eax
 80784d3:  mov eax, DWORD PTR [eax+0xc]
 80784d6:  mov esi, edx
 80784d8:  lea eax, [eax+eax*2]
 80784db:  lea eax, [eax*4+0x10]
 80784e2:  add esi, eax
 80784e4:  add eax, 0x30
 80784e7:  cmp ebx, eax
 80784e9:  mov DWORD PTR ds:0x80d2a30, esi
 80784ef:  jae 8078b21
 80784f5:  mov DWORD PTR ds:0x80d2a30, 0xffffffff
 80784ff:  jmp 8078161
 8078504:  mov edx, 0x3
 8078509:  lea ecx, [edx+0x30]
 807850c:  xor eax, eax
 807850e:  xor edx, edx
 8078510:  test cl, 0x20
 8078513:  sete al
 8078516:  setne dl
 8078519:  shl edx, cl
 807851b:  shl eax, cl
 807851d:  mov DWORD PTR [ebp-0x5c], eax
 8078520:  mov DWORD PTR [ebp-0x58], edx
 8078523:  jmp 807821f
 8078528:  mov edx, DWORD PTR [ebp-0x8c]
 807852e:  mov eax, DWORD PTR [edx+0xc]
 8078531:  mov edx, DWORD PTR ds:0x80d2a34
 8078537:  mov ecx, eax
 8078539:  sub ecx, 0x1
 807853c:  mov DWORD PTR [ebp-0x6c], ecx
 807853f:  js 8078341
 8078545:  mov esi, DWORD PTR [ebp-0x8c]
 807854b:  lea eax, [eax+eax*2]
 807854e:  sar ecx, 1
 8078550:  mov DWORD PTR [ebp-0x68], ecx
 8078553:  lea eax, [esi+eax*4+0x10]
 8078557:  add edx, esi
 8078559:  sub edx, eax
 807855b:  mov DWORD PTR [ebp-0x30], eax
 807855e:  lea eax, [ecx+ecx*2]
 8078561:  mov eax, DWORD PTR [esi+eax*4+0x14]
 8078565:  mov DWORD PTR [ebp-0x2c], edx
 8078568:  cmp eax, edx
 807856a:  jae 8078341
 8078570:  mov edx, DWORD PTR [ebp-0x80]
 8078573:  movzx edx, BYTE PTR [edx]
 8078576:  mov DWORD PTR [ebp-0x24], 0x0
 807857d:  mov BYTE PTR [ebp-0x16], dl
 8078580:  add eax, DWORD PTR [ebp-0x30]
 8078583:  mov edi, DWORD PTR [ebp-0x80]
 8078586:  movzx ecx, BYTE PTR [ebp-0x16]
 807858a:  mov DWORD PTR [ebp-0x48], eax
 807858d:  lea esi, [esi]
 8078590:  test cl, cl
 8078592:  je 8078697
 8078598:  lea eax, [ecx-0x30]
 807859b:  cmp al, 0x9
 807859d:  ja 8078670
 80785a3:  mov esi, DWORD PTR [ebp-0x48]
 80785a6:  movzx edx, BYTE PTR [esi]
 80785a9:  lea eax, [edx-0x30]
 80785ac:  cmp al, 0x9
 80785ae:  ja 807862a
 80785b0:  add edi, 0x1
 80785b3:  movsx eax, cl
 80785b6:  add DWORD PTR [ebp-0x48], 0x1
 80785ba:  movzx ecx, BYTE PTR [edi]
 80785bd:  lea esi, [eax-0x30]
 80785c0:  movsx eax, dl
 80785c3:  lea ebx, [eax-0x30]
 80785c6:  lea eax, [ecx-0x30]
 80785c9:  cmp al, 0x9
 80785cb:  ja 8078606
 80785cd:  lea esi, [esi]
 80785d0:  add edi, 0x1
 80785d3:  movsx edx, cl
 80785d6:  movzx ecx, BYTE PTR [edi]
 80785d9:  lea eax, [esi+esi*4]
 80785dc:  lea esi, [edx+eax*2-0x30]
 80785e0:  lea eax, [ecx-0x30]
 80785e3:  cmp al, 0x9
 80785e5:  jbe 80785d0
 80785e7:  mov eax, DWORD PTR [ebp-0x48]
 80785ea:  movzx edx, BYTE PTR [eax]
 80785ed:  lea eax, [edx-0x30]
 80785f0:  cmp al, 0x9
 80785f2:  ja 8078613
 80785f4:  lea esi, [esi]
 80785f8:  add DWORD PTR [ebp-0x48], 0x1
 80785fc:  movsx edx, dl
 80785ff:  lea eax, [ebx+ebx*4]
 8078602:  lea ebx, [edx+eax*2-0x30]
 8078606:  mov eax, DWORD PTR [ebp-0x48]
 8078609:  movzx edx, BYTE PTR [eax]
 807860c:  lea eax, [edx-0x30]
 807860f:  cmp al, 0x9
 8078611:  jbe 80785f8
 8078613:  cmp esi, ebx
 8078615:  je 8078590
 807861b:  mov edx, esi
 807861d:  sub edx, ebx
 807861f:  cmp edx, 0x0
 8078622:  je 8078968
 8078628:  jl 80786a4
 807862a:  mov ecx, DWORD PTR [ebp-0x68]
 807862d:  mov esi, DWORD PTR [ebp-0x24]
 8078630:  sub ecx, 0x1
 8078633:  mov DWORD PTR [ebp-0x6c], ecx
 8078636:  cmp DWORD PTR [ebp-0x6c], esi
 8078639:  jl 8078341
 807863f:  mov eax, DWORD PTR [ebp-0x24]
 8078642:  add eax, DWORD PTR [ebp-0x6c]
 8078645:  mov ecx, DWORD PTR [ebp-0x8c]
 807864b:  mov edx, eax
 807864d:  shr edx, 0x1f
 8078650:  add edx, eax
 8078652:  sar edx, 1
 8078654:  lea eax, [edx+edx*2]
 8078657:  mov eax, DWORD PTR [ecx+eax*4+0x14]
 807865b:  cmp DWORD PTR [ebp-0x2c], eax
 807865e:  mov DWORD PTR [ebp-0x68], edx
 8078661:  ja 8078580
 8078667:  jmp 8078341
 807866c:  lea esi, [esi]
 8078670:  mov edx, DWORD PTR [ebp-0x48]
 8078673:  movzx ebx, BYTE PTR [edx]
 8078676:  lea eax, [ebx-0x30]
 8078679:  cmp al, 0x9
 807867b:  jbe 80786a4
 807867d:  cmp bl, cl
 807867f:  jne 807895b
 8078685:  add edi, 0x1
 8078688:  add DWORD PTR [ebp-0x48], 0x1
 807868c:  movzx ecx, BYTE PTR [edi]
 807868f:  test cl, cl
 8078691:  jne 8078598
 8078697:  mov ecx, DWORD PTR [ebp-0x48]
 807869a:  movsx edx, BYTE PTR [ecx]
 807869d:  neg edx
 807869f:  jmp 807861f
 80786a4:  mov edx, DWORD PTR [ebp-0x68]
 80786a7:  add edx, 0x1
 80786aa:  mov DWORD PTR [ebp-0x24], edx
 80786ad:  mov esi, edx
 80786af:  jmp 8078636
 80786b1:  movsx edx, cl
 80786b4:  movsx eax, bl
 80786b7:  sub edx, eax
 80786b9:  jmp 80782ff
 80786be:  mov edx, DWORD PTR [ebp-0x50]
 80786c1:  movzx ebx, BYTE PTR [edx]
 80786c4:  lea eax, [ebx-0x30]
 80786c7:  cmp al, 0x9
 80786c9:  jbe 80786f2
 80786cb:  cmp bl, cl
 80786cd:  jne 807894e
 80786d3:  add edi, 0x1
 80786d6:  add DWORD PTR [ebp-0x50], 0x1
 80786da:  movzx ecx, BYTE PTR [edi]
 80786dd:  test cl, cl
 80786df:  jne 80783d8
 80786e5:  mov ecx, DWORD PTR [ebp-0x50]
 80786e8:  movsx edx, BYTE PTR [ecx]
 80786eb:  neg edx
 80786ed:  jmp 8078467
 80786f2:  mov esi, DWORD PTR [ebp-0x20]
 80786f5:  mov DWORD PTR [ebp-0x28], esi
 80786f8:  mov edx, DWORD PTR ds:0x80d2e24
 80786fe:  mov ecx, DWORD PTR ds:0x80d2828
 8078704:  mov esi, DWORD PTR ds:0x80d282c
 807870a:  mov eax, ds:0x80d0d6c
 807870f:  mov DWORD PTR [ebp-0x74], edx
 8078712:  mov edx, DWORD PTR [ebp-0x28]
 8078715:  not ecx
 8078717:  or esi, 0x800f0000
 807871d:  not esi
 807871f:  mov DWORD PTR [ebp-0x84], ecx
 8078725:  mov ecx, DWORD PTR [ebp-0x7c]
 8078728:  mov DWORD PTR [ebp-0x88], esi
 807872e:  mov esi, DWORD PTR [ebp-0x5c]
 8078731:  mov DWORD PTR [ebp-0x78], eax
 8078734:  lea eax, [edx+edx*2]
 8078737:  mov DWORD PTR [ebp-0x60], 0x0
 807873e:  lea eax, [ecx+eax*8+0x30]
 8078742:  mov DWORD PTR [ebp-0x40], eax
 8078745:  mov DWORD PTR [ebp-0x90], esi
 807874b:  mov eax, DWORD PTR [ebp-0x14]
 807874e:  cmp DWORD PTR [ebp-0x28], eax
 8078751:  jle 807880b
 8078757:  mov edx, DWORD PTR [ebp-0x40]
 807875a:  mov eax, DWORD PTR [edx+0x4]
 807875d:  cmp DWORD PTR [ebp-0x64], eax
 8078760:  jbe 807882e
 8078766:  add eax, DWORD PTR [ebp-0x7c]
 8078769:  mov edi, DWORD PTR [ebp-0x80]
 807876c:  movzx ecx, BYTE PTR [ebp-0x15]
 8078770:  mov DWORD PTR [ebp-0x4c], eax
 8078773:  test cl, cl
 8078775:  je 80788f7
 807877b:  lea eax, [ecx-0x30]
 807877e:  cmp al, 0x9
 8078780:  ja 80788d0
 8078786:  mov esi, DWORD PTR [ebp-0x4c]
 8078789:  movzx edx, BYTE PTR [esi]
 807878c:  lea eax, [edx-0x30]
 807878f:  cmp al, 0x9
 8078791:  ja 807882e
 8078797:  add edi, 0x1
 807879a:  movsx eax, cl
 807879d:  add DWORD PTR [ebp-0x4c], 0x1
 80787a1:  movzx ecx, BYTE PTR [edi]
 80787a4:  lea esi, [eax-0x30]
 80787a7:  movsx eax, dl
 80787aa:  lea ebx, [eax-0x30]
 80787ad:  lea eax, [ecx-0x30]
 80787b0:  cmp al, 0x9
 80787b2:  ja 80787ee
 80787b4:  lea esi, [esi]
 80787b8:  add edi, 0x1
 80787bb:  movsx edx, cl
 80787be:  movzx ecx, BYTE PTR [edi]
 80787c1:  lea eax, [esi+esi*4]
 80787c4:  lea esi, [edx+eax*2-0x30]
 80787c8:  lea eax, [ecx-0x30]
 80787cb:  cmp al, 0x9
 80787cd:  jbe 80787b8
 80787cf:  mov eax, DWORD PTR [ebp-0x4c]
 80787d2:  movzx edx, BYTE PTR [eax]
 80787d5:  lea eax, [edx-0x30]
 80787d8:  cmp al, 0x9
 80787da:  ja 80787fb
 80787dc:  lea esi, [esi]
 80787e0:  add DWORD PTR [ebp-0x4c], 0x1
 80787e4:  movsx edx, dl
 80787e7:  lea eax, [ebx+ebx*4]
 80787ea:  lea ebx, [edx+eax*2-0x30]
 80787ee:  mov eax, DWORD PTR [ebp-0x4c]
 80787f1:  movzx edx, BYTE PTR [eax]
 80787f4:  lea eax, [edx-0x30]
 80787f7:  cmp al, 0x9
 80787f9:  jbe 80787e0
 80787fb:  cmp esi, ebx
 80787fd:  je 8078773
 8078803:  mov edx, esi
 8078805:  sub edx, ebx
 8078807:  test edx, edx
 8078809:  jne 807882e
 807880b:  mov esi, DWORD PTR [ebp-0x40]
 807880e:  mov ebx, DWORD PTR [esi]
 8078810:  cmp ebx, 0x1
 8078813:  je 807885e
 8078815:  cmp ebx, 0x3
 8078818:  je 807885e
 807881a:  add DWORD PTR [ebp-0x28], 0x1
 807881e:  mov edx, DWORD PTR [ebp-0x1c]
 8078821:  add DWORD PTR [ebp-0x40], 0x18
 8078825:  cmp DWORD PTR [ebp-0x28], edx
 8078828:  jle 807874b
 807882e:  test BYTE PTR ds:0x80d2dd0, 0x1
 8078835:  je 807812a
 807883b:  mov eax, DWORD PTR [ebp-0x60]
 807883e:  test eax, eax
 8078840:  je 807812a
 8078846:  mov eax, DWORD PTR [ebp-0x60]
 8078849:  mov DWORD PTR [esp], 0x80b418e
 8078850:  mov DWORD PTR [esp+0x4], eax
 8078854:  call 807c8d0
 8078859:  jmp 807812a
 807885e:  mov eax, DWORD PTR [ebp-0x40]
 8078861:  mov esi, DWORD PTR [eax+0x8]
 8078864:  cmp DWORD PTR [ebp-0x64], esi
 8078867:  jbe 807881a
 8078869:  mov eax, DWORD PTR [ebp-0x60]
 807886c:  test eax, eax
 807886e:  je 8078875
 8078870:  cmp ebx, DWORD PTR [ebp-0x78]
 8078873:  jne 807881a
 8078875:  mov edi, DWORD PTR [ebp-0x74]
 8078878:  test edi, edi
 807887a:  je 8078887
 807887c:  mov edx, DWORD PTR [ebp-0x40]
 807887f:  mov ecx, DWORD PTR [ebp-0x74]
 8078882:  cmp ecx, DWORD PTR [edx+0xc]
 8078885:  jb 807881a
 8078887:  mov eax, DWORD PTR [ebp-0x40]
 807888a:  mov edx, DWORD PTR [eax+0x14]
 807888d:  mov ecx, DWORD PTR [eax+0x10]
 8078890:  mov eax, edx
 8078892:  and eax, 0xf0000
 8078897:  je 80788a8
 8078899:  xor eax, DWORD PTR [ebp-0x58]
 807889c:  or eax, DWORD PTR [ebp-0x90]
 80788a2:  jne 807881a
 80788a8:  and ecx, DWORD PTR [ebp-0x84]
 80788ae:  and edx, DWORD PTR [ebp-0x88]
 80788b4:  or edx, ecx
 80788b6:  jne 807881a
 80788bc:  add esi, DWORD PTR [ebp-0x7c]
 80788bf:  cmp ebx, DWORD PTR [ebp-0x78]
 80788c2:  mov DWORD PTR [ebp-0x60], esi
 80788c5:  jne 807881a
 80788cb:  jmp 807882e
 80788d0:  mov edx, DWORD PTR [ebp-0x4c]
 80788d3:  movzx ebx, BYTE PTR [edx]
 80788d6:  lea eax, [ebx-0x30]
 80788d9:  cmp al, 0x9
 80788db:  jbe 807882e
 80788e1:  cmp bl, cl
 80788e3:  jne 8078941
 80788e5:  add edi, 0x1
 80788e8:  add DWORD PTR [ebp-0x4c], 0x1
 80788ec:  movzx ecx, BYTE PTR [edi]
 80788ef:  test cl, cl
 80788f1:  jne 807877b
 80788f7:  mov ecx, DWORD PTR [ebp-0x4c]
 80788fa:  movsx edx, BYTE PTR [ecx]
 80788fd:  neg edx
 80788ff:  jmp 8078807
 8078904:  mov DWORD PTR [esp+0x4], 0x80b4360
 807890c:  mov DWORD PTR [esp], 0x80b4371
 8078913:  call 807c8d0
 8078918:  jmp 80780cc
 807891d:  mov DWORD PTR [esp+0xc], 0x80b43c4
 8078925:  mov DWORD PTR [esp+0x8], 0xeb
 807892d:  mov DWORD PTR [esp+0x4], 0x80b43a4
 8078935:  mov DWORD PTR [esp], 0x80b43af
 807893c:  call 8051490
 8078941:  movsx edx, cl
 8078944:  movsx eax, bl
 8078947:  sub edx, eax
 8078949:  jmp 8078807
 807894e:  movsx edx, cl
 8078951:  movsx eax, bl
 8078954:  sub edx, eax
 8078956:  jmp 8078467
 807895b:  movsx edx, cl
 807895e:  movsx eax, bl
 8078961:  sub edx, eax
 8078963:  jmp 807861f
 8078968:  mov esi, DWORD PTR [ebp-0x68]
 807896b:  test esi, esi
 807896d:  mov DWORD PTR [ebp-0x10], esi
 8078970:  jle 8078aa6
 8078976:  mov ecx, DWORD PTR [ebp-0x8c]
 807897c:  mov eax, esi
 807897e:  sub eax, 0x1
 8078981:  mov DWORD PTR [ebp-0x34], eax
 8078984:  lea eax, [eax+eax*2]
 8078987:  mov edx, DWORD PTR [ecx+eax*4+0x14]
 807898b:  lea eax, [esi+esi*2-0x6]
 807898f:  cmp edx, DWORD PTR [ebp-0x2c]
 8078992:  lea eax, [ecx+eax*4+0x14]
 8078996:  mov DWORD PTR [ebp-0x38], eax
 8078999:  jae 8078aa6
 807899f:  add edx, DWORD PTR [ebp-0x30]
 80789a2:  mov edi, DWORD PTR [ebp-0x80]
 80789a5:  movzx ecx, BYTE PTR [ebp-0x16]
 80789a9:  mov DWORD PTR [ebp-0x44], edx
 80789ac:  test cl, cl
 80789ae:  je 8078a6f
 80789b4:  lea eax, [ecx-0x30]
 80789b7:  cmp al, 0x9
 80789b9:  ja 8078a48
 80789bf:  mov eax, DWORD PTR [ebp-0x44]
 80789c2:  movzx edx, BYTE PTR [eax]
 80789c5:  lea eax, [edx-0x30]
 80789c8:  cmp al, 0x9
 80789ca:  ja 8078aa6
 80789d0:  add edi, 0x1
 80789d3:  movsx eax, cl
 80789d6:  add DWORD PTR [ebp-0x44], 0x1
 80789da:  movzx ecx, BYTE PTR [edi]
 80789dd:  lea esi, [eax-0x30]
 80789e0:  movsx eax, dl
 80789e3:  lea ebx, [eax-0x30]
 80789e6:  lea eax, [ecx-0x30]
 80789e9:  cmp al, 0x9
 80789eb:  ja 8078a26
 80789ed:  lea esi, [esi]
 80789f0:  add edi, 0x1
 80789f3:  movsx edx, cl
 80789f6:  movzx ecx, BYTE PTR [edi]
 80789f9:  lea eax, [esi+esi*4]
 80789fc:  lea esi, [edx+eax*2-0x30]
 8078a00:  lea eax, [ecx-0x30]
 8078a03:  cmp al, 0x9
 8078a05:  jbe 80789f0
 8078a07:  mov eax, DWORD PTR [ebp-0x44]
 8078a0a:  movzx edx, BYTE PTR [eax]
 8078a0d:  lea eax, [edx-0x30]
 8078a10:  cmp al, 0x9
 8078a12:  ja 8078a33
 8078a14:  lea esi, [esi]
 8078a18:  add DWORD PTR [ebp-0x44], 0x1
 8078a1c:  movsx edx, dl
 8078a1f:  lea eax, [ebx+ebx*4]
 8078a22:  lea ebx, [edx+eax*2-0x30]
 8078a26:  mov eax, DWORD PTR [ebp-0x44]
 8078a29:  movzx edx, BYTE PTR [eax]
 8078a2c:  lea eax, [edx-0x30]
 8078a2f:  cmp al, 0x9
 8078a31:  jbe 8078a18
 8078a33:  cmp esi, ebx
 8078a35:  je 80789ac
 8078a3b:  mov edx, esi
 8078a3d:  sub edx, ebx
 8078a3f:  jmp 8078a77
 8078a41:  lea esi, [esi]
 8078a48:  mov edx, DWORD PTR [ebp-0x44]
 8078a4b:  movzx ebx, BYTE PTR [edx]
 8078a4e:  lea eax, [ebx-0x30]
 8078a51:  cmp al, 0x9
 8078a53:  jbe 8078aa6
 8078a55:  cmp bl, cl
 8078a57:  jne 8078b3d
 8078a5d:  add edi, 0x1
 8078a60:  add DWORD PTR [ebp-0x44], 0x1
 8078a64:  movzx ecx, BYTE PTR [edi]
 8078a67:  test cl, cl
 8078a69:  jne 80789b4
 8078a6f:  mov ecx, DWORD PTR [ebp-0x44]
 8078a72:  movsx edx, BYTE PTR [ecx]
 8078a75:  neg edx
 8078a77:  test edx, edx
 8078a79:  jne 8078aa6
 8078a7b:  mov ebx, DWORD PTR [ebp-0x34]
 8078a7e:  test ebx, ebx
 8078a80:  je 8078aac
 8078a82:  mov ecx, DWORD PTR [ebp-0x38]
 8078a85:  mov eax, DWORD PTR [ebp-0x34]
 8078a88:  mov edx, DWORD PTR [ecx]
 8078a8a:  sub ecx, 0xc
 8078a8d:  sub eax, 0x1
 8078a90:  cmp DWORD PTR [ebp-0x2c], edx
 8078a93:  mov DWORD PTR [ebp-0x38], ecx
 8078a96:  jbe 8078aac
 8078a98:  mov esi, DWORD PTR [ebp-0x34]
 8078a9b:  mov DWORD PTR [ebp-0x34], eax
 8078a9e:  mov DWORD PTR [ebp-0x68], esi
 8078aa1:  jmp 807899f
 8078aa6:  mov esi, DWORD PTR [ebp-0x68]
 8078aa9:  mov DWORD PTR [ebp-0x34], esi
 8078aac:  mov DWORD PTR [ebp-0x60], 0x0
 8078ab3:  jmp 8078aff
 8078ab5:  mov edx, DWORD PTR [ebp-0x30]
 8078ab8:  add edx, eax
 8078aba:  mov eax, DWORD PTR [ebp-0x80]
 8078abd:  call 8077f70
 8078ac2:  test eax, eax
 8078ac4:  jne 807882e
 8078aca:  mov esi, DWORD PTR [ebp-0x34]
 8078acd:  mov ecx, DWORD PTR [ebp-0x8c]
 8078ad3:  lea eax, [esi+esi*2]
 8078ad6:  mov edx, DWORD PTR [ecx+eax*4+0x10]
 8078ada:  cmp edx, 0x1
 8078add:  je 8078b4a
 8078adf:  cmp edx, 0x3
 8078ae2:  je 8078b4a
 8078ae4:  add DWORD PTR [ebp-0x34], 0x1
 8078ae8:  mov esi, DWORD PTR [ebp-0x6c]
 8078aeb:  cmp DWORD PTR [ebp-0x34], esi
 8078aee:  jg 807882e
 8078af4:  mov eax, ds:0x80d2a2c
 8078af9:  mov DWORD PTR [ebp-0x8c], eax
 8078aff:  mov eax, DWORD PTR [ebp-0x10]
 8078b02:  cmp DWORD PTR [ebp-0x34], eax
 8078b05:  jle 8078aca
 8078b07:  mov edx, DWORD PTR [ebp-0x34]
 8078b0a:  mov ecx, DWORD PTR [ebp-0x8c]
 8078b10:  lea eax, [edx+edx*2]
 8078b13:  mov eax, DWORD PTR [ecx+eax*4+0x14]
 8078b17:  cmp DWORD PTR [ebp-0x2c], eax
 8078b1a:  ja 8078ab5
 8078b1c:  jmp 807882e
 8078b21:  mov edi, 0x80b438f
 8078b26:  mov ecx, 0x14
 8078b2b:  repz cmpsb
 8078b2d:  je 8078161
 8078b33:  nop
 8078b34:  lea esi, [esi]
 8078b38:  jmp 80784f5
 8078b3d:  movsx edx, cl
 8078b40:  movsx eax, bl
 8078b43:  sub edx, eax
 8078b45:  jmp 8078a77
 8078b4a:  mov esi, DWORD PTR [ebp-0x34]
 8078b4d:  mov ecx, DWORD PTR [ebp-0x8c]
 8078b53:  lea eax, [esi+esi*2]
 8078b56:  mov eax, DWORD PTR [ecx+eax*4+0x18]
 8078b5a:  cmp DWORD PTR [ebp-0x2c], eax
 8078b5d:  jbe 8078ae4
 8078b5f:  mov ecx, DWORD PTR [ebp-0x60]
 8078b62:  test ecx, ecx
 8078b64:  je 8078b7d
 8078b66:  cmp edx, DWORD PTR ds:0x80d0d6c
 8078b6c:  jne 8078ae4
 8078b72:  add eax, DWORD PTR [ebp-0x30]
 8078b75:  mov DWORD PTR [ebp-0x60], eax
 8078b78:  jmp 807882e
 8078b7d:  add eax, DWORD PTR [ebp-0x30]
 8078b80:  cmp edx, DWORD PTR ds:0x80d0d6c
 8078b86:  mov DWORD PTR [ebp-0x60], eax
 8078b89:  jne 8078ae4
 8078b8f:  jmp 807882e
 8078b94:  nop
 8078b95:  nop
 8078b96:  nop
 8078b97:  nop
 8078b98:  nop
 8078b99:  nop
 8078b9a:  nop
 8078b9b:  nop
 8078b9c:  nop
 8078b9d:  nop
 8078b9e:  nop
 8078b9f:  nop

08078ba0 <_dl_setup_hash>:
 8078ba0:  push ebp
 8078ba1:  mov ebp, esp
 8078ba3:  sub esp, 0x1c
 8078ba6:  mov DWORD PTR [ebp-0xc], ebx
 8078ba9:  mov ebx, eax
 8078bab:  mov DWORD PTR [ebp-0x8], esi
 8078bae:  mov DWORD PTR [ebp-0x4], edi
 8078bb1:  mov eax, DWORD PTR [eax+0x14c]
 8078bb7:  test eax, eax
 8078bb9:  je 8078c13
 8078bbb:  mov ecx, DWORD PTR [eax+0x4]
 8078bbe:  mov esi, DWORD PTR [ecx]
 8078bc0:  mov DWORD PTR [ebx+0x178], esi
 8078bc6:  mov edx, DWORD PTR [ecx+0x8]
 8078bc9:  mov edi, DWORD PTR [ecx+0x4]
 8078bcc:  lea eax, [edx-0x1]
 8078bcf:  test eax, edx
 8078bd1:  jne 8078c39
 8078bd3:  mov DWORD PTR [ebx+0x17c], eax
 8078bd9:  mov eax, DWORD PTR [ecx+0xc]
 8078bdc:  mov DWORD PTR [ebx+0x180], eax
 8078be2:  lea eax, [ecx+0x10]
 8078be5:  mov DWORD PTR [ebx+0x184], eax
 8078beb:  lea eax, [eax+edx*4]
 8078bee:  mov DWORD PTR [ebx+0x188], eax
 8078bf4:  lea edx, [edi*4]
 8078bfb:  lea eax, [eax+esi*4]
 8078bfe:  sub eax, edx
 8078c00:  mov DWORD PTR [ebx+0x18c], eax
 8078c06:  mov ebx, DWORD PTR [ebp-0xc]
 8078c09:  mov esi, DWORD PTR [ebp-0x8]
 8078c0c:  mov edi, DWORD PTR [ebp-0x4]
 8078c0f:  mov esp, ebp
 8078c11:  pop ebp
 8078c12:  ret
 8078c13:  mov eax, DWORD PTR [ebx+0x30]
 8078c16:  test eax, eax
 8078c18:  je 8078c06
 8078c1a:  mov eax, DWORD PTR [eax+0x4]
 8078c1d:  mov edx, DWORD PTR [eax]
 8078c1f:  add eax, 0x8
 8078c22:  mov DWORD PTR [ebx+0x18c], eax
 8078c28:  mov DWORD PTR [ebx+0x178], edx
 8078c2e:  lea edx, [eax+edx*4]
 8078c31:  mov DWORD PTR [ebx+0x188], edx
 8078c37:  jmp 8078c06
 8078c39:  mov DWORD PTR [esp+0xc], 0x80b44ae
 8078c41:  mov DWORD PTR [esp+0x8], 0x1db
 8078c49:  mov DWORD PTR [esp+0x4], 0x80b43da
 8078c51:  mov DWORD PTR [esp], 0x80b44f0
 8078c58:  call 8051490
 8078c5d:  lea esi, [esi]

08078c60 <check_match.7975>:
 8078c60:  push ebp
 8078c61:  mov ebp, esp
 8078c63:  sub esp, 0x2c
 8078c66:  mov DWORD PTR [ebp-0xc], ebx
 8078c69:  mov ebx, eax
 8078c6b:  mov DWORD PTR [ebp-0x8], esi
 8078c6e:  mov esi, ecx
 8078c70:  mov DWORD PTR [ebp-0x4], edi
 8078c73:  mov edx, DWORD PTR [eax+0x4]
 8078c76:  test edx, edx
 8078c78:  je 8078d48
 8078c7e:  xor eax, eax
 8078c80:  cmp WORD PTR [ebx+0xe], 0x0
 8078c85:  sete al
 8078c88:  test DWORD PTR [esi+0x24], eax
 8078c8b:  jne 8078d18
 8078c91:  movzx eax, BYTE PTR [ebx+0xc]
 8078c95:  and eax, 0xf
 8078c98:  cmp eax, 0x2
 8078c9b:  jg 8078d29
 8078ca1:  cmp ebx, DWORD PTR [esi+0x20]
 8078ca4:  jne 8078db8
 8078caa:  mov edi, DWORD PTR [esi+0x10]
 8078cad:  mov ecx, DWORD PTR [esi+0x14]
 8078cb0:  test edi, edi
 8078cb2:  mov edx, DWORD PTR [ecx+0x1a4]
 8078cb8:  je 8078d68
 8078cbe:  test edx, edx
 8078cc0:  je 8078dd9
 8078cc6:  mov eax, DWORD PTR [esi+0xc]
 8078cc9:  movzx eax, WORD PTR [edx+eax*2]
 8078ccd:  mov WORD PTR [ebp-0x1c], ax
 8078cd1:  and eax, 0x7fff
 8078cd6:  shl eax, 0x4
 8078cd9:  add eax, DWORD PTR [ecx+0x170]
 8078cdf:  mov esi, DWORD PTR [eax+0x4]
 8078ce2:  cmp esi, DWORD PTR [edi+0x4]
 8078ce5:  jne 8078cfb
 8078ce7:  mov eax, DWORD PTR [eax]
 8078ce9:  mov edx, DWORD PTR [edi]
 8078ceb:  mov DWORD PTR [esp], eax
 8078cee:  mov DWORD PTR [esp+0x4], edx
 8078cf2:  call 806af90
 8078cf7:  test eax, eax
 8078cf9:  je 8078d1a
 8078cfb:  mov eax, DWORD PTR [edi+0x8]
 8078cfe:  test eax, eax
 8078d00:  jne 8078d18
 8078d02:  test esi, esi
 8078d04:  lea esi, [esi]
 8078d08:  jne 8078d18
 8078d0a:  cmp WORD PTR [ebp-0x1c], 0x0
 8078d0f:  nop
 8078d10:  jns 8078d1a
 8078d12:  lea esi, [esi]
 8078d18:  xor ebx, ebx
 8078d1a:  mov eax, ebx
 8078d1c:  mov esi, DWORD PTR [ebp-0x8]
 8078d1f:  mov ebx, DWORD PTR [ebp-0xc]
 8078d22:  mov edi, DWORD PTR [ebp-0x4]
 8078d25:  mov esp, ebp
 8078d27:  pop ebp
 8078d28:  ret
 8078d29:  cmp eax, 0x5
 8078d2c:  je 8078ca1
 8078d32:  cmp eax, 0x6
 8078d35:  je 8078ca1
 8078d3b:  nop
 8078d3c:  lea esi, [esi]
 8078d40:  jmp 8078d18
 8078d42:  lea esi, [esi]
 8078d48:  movzx eax, BYTE PTR [eax+0xc]
 8078d4c:  and eax, 0xf
 8078d4f:  cmp eax, 0x6
 8078d52:  lea esi, [esi]
 8078d58:  je 8078c7e
 8078d5e:  xchg ax, ax
 8078d60:  jmp 8078d18
 8078d62:  lea esi, [esi]
 8078d68:  test edx, edx
 8078d6a:  lea esi, [esi]
 8078d70:  je 8078d1a
 8078d72:  mov eax, DWORD PTR [esi+0xc]
 8078d75:  movzx ecx, WORD PTR [edx+eax*2]
 8078d79:  mov eax, DWORD PTR [esi+0x8]
 8078d7c:  mov edx, ecx
 8078d7e:  and eax, 0x2
 8078d81:  cmp eax, 0x1
 8078d84:  sbb eax, eax
 8078d86:  and edx, 0x7fff
 8078d8c:  not eax
 8078d8e:  add eax, 0x3
 8078d91:  cmp eax, edx
 8078d93:  jg 8078d1a
 8078d95:  test cx, cx
 8078d98:  js 8078d18
 8078d9e:  mov edx, DWORD PTR [esi+0x4]
 8078da1:  lea eax, [edx+0x1]
 8078da4:  test edx, edx
 8078da6:  mov DWORD PTR [esi+0x4], eax
 8078da9:  jne 8078d18
 8078daf:  mov DWORD PTR [esi], ebx
 8078db1:  xor ebx, ebx
 8078db3:  jmp 8078d1a
 8078db8:  mov eax, DWORD PTR [esi+0x1c]
 8078dbb:  mov edx, DWORD PTR [esi+0x18]
 8078dbe:  add eax, DWORD PTR [ebx]
 8078dc0:  mov DWORD PTR [esp+0x4], edx
 8078dc4:  mov DWORD PTR [esp], eax
 8078dc7:  call 806af90
 8078dcc:  test eax, eax
 8078dce:  je 8078caa
 8078dd4:  jmp 8078d18
 8078dd9:  mov eax, DWORD PTR [edi+0xc]
 8078ddc:  test eax, eax
 8078dde:  xchg ax, ax
 8078de0:  je 8078d1a
 8078de6:  mov edx, ecx
 8078de8:  call 807c340
 8078ded:  test eax, eax
 8078def:  je 8078d1a
 8078df5:  mov DWORD PTR [esp+0xc], 0x80b44e4
 8078dfd:  mov DWORD PTR [esp+0x8], 0x73
 8078e05:  mov DWORD PTR [esp+0x4], 0x80b43e6
 8078e0d:  mov DWORD PTR [esp], 0x80b4520
 8078e14:  call 8051490
 8078e19:  lea esi, [esi]

08078e20 <do_lookup_x>:
 8078e20:  push ebp
 8078e21:  mov ebp, esp
 8078e23:  push edi
 8078e24:  push esi
 8078e25:  push ebx
 8078e26:  sub esp, 0x60
 8078e29:  mov esi, DWORD PTR [ebp+0x14]
 8078e2c:  mov DWORD PTR [ebp-0x1c], eax
 8078e2f:  mov eax, DWORD PTR [ebp+0x8]
 8078e32:  mov DWORD PTR [ebp-0x50], edx
 8078e35:  mov edx, DWORD PTR [ebp+0x10]
 8078e38:  mov DWORD PTR [ebp-0x54], ecx
 8078e3b:  mov DWORD PTR [ebp-0x14], eax
 8078e3e:  mov eax, DWORD PTR [ebp+0x18]
 8078e41:  mov DWORD PTR [ebp-0x24], eax
 8078e44:  mov eax, DWORD PTR [ebp+0x1c]
 8078e47:  mov DWORD PTR [ebp-0x2c], eax
 8078e4a:  mov eax, DWORD PTR [ebp+0x24]
 8078e4d:  mov DWORD PTR [ebp-0x10], eax
 8078e50:  mov eax, DWORD PTR [edx+0x4]
 8078e53:  mov DWORD PTR [ebp-0x48], eax
 8078e56:  mov ecx, DWORD PTR [ebp-0x50]
 8078e59:  lea ebx, [esi*4]
 8078e60:  mov eax, DWORD PTR [ebp-0x50]
 8078e63:  add ebx, DWORD PTR [edx]
 8078e65:  shr ecx, 0x5
 8078e68:  and eax, 0x1f
 8078e6b:  mov DWORD PTR [ebp-0x4c], ecx
 8078e6e:  mov DWORD PTR [ebp-0x5c], eax
 8078e71:  jmp 8078e87
 8078e73:  nop
 8078e74:  lea esi, [esi]
 8078e78:  add esi, 0x1
 8078e7b:  add ebx, 0x4
 8078e7e:  cmp DWORD PTR [ebp-0x48], esi
 8078e81:  jbe 8078f78
 8078e87:  mov eax, DWORD PTR [ebx]
 8078e89:  mov DWORD PTR [ebp-0x30], 0x0
 8078e90:  mov DWORD PTR [ebp-0x34], 0x0
 8078e97:  mov eax, DWORD PTR [eax+0x14]
 8078e9a:  cmp eax, DWORD PTR [ebp+0x20]
 8078e9d:  mov DWORD PTR [ebp-0x20], eax
 8078ea0:  je 8078e78
 8078ea2:  test BYTE PTR [ebp-0x10], 0x2
 8078ea6:  je 8078eb1
 8078ea8:  test BYTE PTR [eax+0x194], 0x3
 8078eaf:  je 8078e78
 8078eb1:  test BYTE PTR [eax+0x195], 0x40
 8078eb8:  jne 8078e78
 8078eba:  test BYTE PTR ds:0x80d2dd0, 0x8
 8078ec1:  jne 8078fc6
 8078ec7:  mov edi, DWORD PTR [ebp-0x20]
 8078eca:  mov edx, DWORD PTR [edi+0x178]
 8078ed0:  test edx, edx
 8078ed2:  mov DWORD PTR [ebp-0x58], edx
 8078ed5:  je 8078e78
 8078ed7:  mov eax, DWORD PTR [edi+0x38]
 8078eda:  mov edx, DWORD PTR [edi+0x184]
 8078ee0:  mov eax, DWORD PTR [eax+0x4]
 8078ee3:  test edx, edx
 8078ee5:  mov DWORD PTR [ebp-0x44], eax
 8078ee8:  mov eax, DWORD PTR [edi+0x34]
 8078eeb:  mov eax, DWORD PTR [eax+0x4]
 8078eee:  mov DWORD PTR [ebp-0x18], eax
 8078ef1:  je 8078ff8
 8078ef7:  mov eax, DWORD PTR [ebp-0x4c]
 8078efa:  and eax, DWORD PTR [edi+0x17c]
 8078f00:  mov ecx, DWORD PTR [edi+0x180]
 8078f06:  mov edx, DWORD PTR [edx+eax*4]
 8078f09:  mov eax, DWORD PTR [ebp-0x50]
 8078f0c:  shr eax, cl
 8078f0e:  mov ecx, eax
 8078f10:  mov eax, edx
 8078f12:  and ecx, 0x1f
 8078f15:  shr eax, cl
 8078f17:  movzx ecx, BYTE PTR [ebp-0x5c]
 8078f1b:  shr edx, cl
 8078f1d:  and eax, edx
 8078f1f:  test al, 0x1
 8078f21:  jne 8079059
 8078f27:  mov DWORD PTR [ebp-0x28], 0x0
 8078f2e:  cmp DWORD PTR [ebp-0x30], 0x1
 8078f32:  je 8078f88
 8078f34:  mov ecx, DWORD PTR [ebp-0x28]
 8078f37:  test ecx, ecx
 8078f39:  jne 8078e78
 8078f3f:  mov eax, DWORD PTR [ebp-0x24]
 8078f42:  test eax, eax
 8078f44:  je 8078e78
 8078f4a:  mov eax, DWORD PTR [eax+0xc]
 8078f4d:  test eax, eax
 8078f4f:  je 8078e78
 8078f55:  mov edx, DWORD PTR [ebp-0x20]
 8078f58:  call 807c340
 8078f5d:  test eax, eax
 8078f5f:  je 8078e78
 8078f65:  mov eax, 0xffffffff
 8078f6a:  lea esi, [esi]
 8078f70:  jmp 8078f7a
 8078f72:  lea esi, [esi]
 8078f78:  xor eax, eax
 8078f7a:  add esp, 0x60
 8078f7d:  pop ebx
 8078f7e:  pop esi
 8078f7f:  pop edi
 8078f80:  pop ebp
 8078f81:  ret
 8078f82:  lea esi, [esi]
 8078f88:  mov eax, DWORD PTR [ebp-0x34]
 8078f8b:  test eax, eax
 8078f8d:  je 8078f34
 8078f8f:  movzx edx, BYTE PTR [eax+0xc]
 8078f93:  shr dl, 0x4
 8078f96:  cmp dl, 0x1
 8078f99:  je 8078fae
 8078f9b:  cmp dl, 0x2
 8078f9e:  jne 8078f34
 8078fa0:  mov edx, DWORD PTR ds:0x80d2e04
 8078fa6:  test edx, edx
 8078fa8:  jne 80790d4
 8078fae:  mov ecx, DWORD PTR [ebp+0xc]
 8078fb1:  mov DWORD PTR [ecx], eax
 8078fb3:  mov eax, DWORD PTR [ebp-0x20]
 8078fb6:  mov DWORD PTR [ecx+0x4], eax
 8078fb9:  add esp, 0x60
 8078fbc:  mov eax, 0x1
 8078fc1:  pop ebx
 8078fc2:  pop esi
 8078fc3:  pop edi
 8078fc4:  pop ebp
 8078fc5:  ret
 8078fc6:  mov edx, DWORD PTR [eax+0x18]
 8078fc9:  mov eax, DWORD PTR [eax+0x4]
 8078fcc:  cmp BYTE PTR [eax], 0x0
 8078fcf:  jne 8078fd8
 8078fd1:  mov eax, ds:0x80d0cd0
 8078fd6:  mov eax, DWORD PTR [eax]
 8078fd8:  mov DWORD PTR [esp+0xc], edx
 8078fdc:  mov DWORD PTR [esp+0x8], eax
 8078fe0:  mov eax, DWORD PTR [ebp-0x1c]
 8078fe3:  mov DWORD PTR [esp], 0x80b4570
 8078fea:  mov DWORD PTR [esp+0x4], eax
 8078fee:  call 807c8d0
 8078ff3:  jmp 8078ec7
 8078ff8:  mov edx, DWORD PTR [ebp-0x54]
 8078ffb:  mov ecx, DWORD PTR [edx]
 8078ffd:  cmp ecx, 0xff
 8079000:  je 80790f0
 8079006:  xor edx, edx
 8079008:  mov eax, ecx
 807900a:  div DWORD PTR [ebp-0x58]
 807900d:  mov eax, DWORD PTR [edi+0x18c]
 8079013:  mov eax, DWORD PTR [eax+edx*4]
 8079016:  test eax, eax
 8079018:  mov DWORD PTR [ebp-0x28], eax
 807901b:  jne 8079042
 807901d:  jmp 8078f2e
 8079022:  lea esi, [esi]
 8079028:  mov eax, DWORD PTR [ebp-0x20]
 807902b:  mov edx, DWORD PTR [eax+0x188]
 8079031:  mov eax, DWORD PTR [ebp-0x28]
 8079034:  mov eax, DWORD PTR [edx+eax*4]
 8079037:  test eax, eax
 8079039:  mov DWORD PTR [ebp-0x28], eax
 807903c:  je 8078f2e
 8079042:  shl eax, 0x4
 8079045:  add eax, DWORD PTR [ebp-0x44]
 8079048:  lea ecx, [ebp-0x34]
 807904b:  call 8078c60
 8079050:  test eax, eax
 8079052:  je 8079028
 8079054:  jmp 8078f8f
 8079059:  mov eax, DWORD PTR [ebp-0x50]
 807905c:  xor edx, edx
 807905e:  div DWORD PTR [ebp-0x58]
 8079061:  mov eax, DWORD PTR [edi+0x188]
 8079067:  mov eax, DWORD PTR [eax+edx*4]
 807906a:  test eax, eax
 807906c:  je 8078f27
 8079072:  mov edx, DWORD PTR [edi+0x18c]
 8079078:  lea eax, [edx+eax*4]
 807907b:  mov ecx, eax
 807907d:  mov DWORD PTR [ebp-0x40], eax
 8079080:  mov edx, DWORD PTR [ecx]
 8079082:  mov eax, DWORD PTR [ebp-0x50]
 8079085:  xor eax, edx
 8079087:  shr eax, 1
 8079089:  je 80790a6
 807908b:  and edx, 0x1
 807908e:  jne 8078f27
 8079094:  add DWORD PTR [ebp-0x40], 0x4
 8079098:  mov ecx, DWORD PTR [ebp-0x40]
 807909b:  mov eax, DWORD PTR [ebp-0x50]
 807909e:  mov edx, DWORD PTR [ecx]
 80790a0:  xor eax, edx
 80790a2:  shr eax, 1
 80790a4:  jne 807908b
 80790a6:  mov eax, DWORD PTR [ebp-0x20]
 80790a9:  sub ecx, DWORD PTR [eax+0x18c]
 80790af:  mov eax, ecx
 80790b1:  sar eax, 0x2
 80790b4:  mov DWORD PTR [ebp-0x28], eax
 80790b7:  shl eax, 0x4
 80790ba:  add eax, DWORD PTR [ebp-0x44]
 80790bd:  lea ecx, [ebp-0x34]
 80790c0:  call 8078c60
 80790c5:  test eax, eax
 80790c7:  jne 8078f8f
 80790cd:  mov eax, DWORD PTR [ebp-0x40]
 80790d0:  mov edx, DWORD PTR [eax]
 80790d2:  jmp 807908b
 80790d4:  mov edx, DWORD PTR [ebp+0xc]
 80790d7:  mov edi, DWORD PTR [edx]
 80790d9:  test edi, edi
 80790db:  jne 8078f34
 80790e1:  mov DWORD PTR [edx], eax
 80790e3:  mov eax, DWORD PTR [ebp-0x20]
 80790e6:  mov DWORD PTR [edx+0x4], eax
 80790e9:  jmp 8078f34
 80790ee:  xchg ax, ax
 80790f0:  mov ecx, DWORD PTR [ebp-0x1c]
 80790f3:  mov DWORD PTR [ebp-0x3c], ecx
 80790f6:  movzx eax, BYTE PTR [ecx]
 80790f9:  xor ecx, ecx
 80790fb:  test al, al
 80790fd:  je 807919c
 8079103:  mov edx, DWORD PTR [ebp-0x3c]
 8079106:  movzx ecx, al
 8079109:  movzx eax, BYTE PTR [edx+0x1]
 807910d:  test al, al
 807910f:  je 807919c
 8079115:  mov edx, ecx
 8079117:  movzx eax, al
 807911a:  shl edx, 0x4
 807911d:  lea ecx, [eax+edx]
 8079120:  mov edx, DWORD PTR [ebp-0x3c]
 8079123:  movzx eax, BYTE PTR [edx+0x2]
 8079127:  test al, al
 8079129:  je 807919c
 807912b:  mov edx, ecx
 807912d:  movzx eax, al
 8079130:  shl edx, 0x4
 8079133:  lea ecx, [edx+eax]
 8079136:  mov edx, DWORD PTR [ebp-0x3c]
 8079139:  movzx eax, BYTE PTR [edx+0x3]
 807913d:  test al, al
 807913f:  je 807919c
 8079141:  mov edx, ecx
 8079143:  movzx eax, al
 8079146:  shl edx, 0x4
 8079149:  lea ecx, [edx+eax]
 807914c:  mov edx, DWORD PTR [ebp-0x3c]
 807914f:  movzx eax, BYTE PTR [edx+0x4]
 8079153:  test al, al
 8079155:  je 807919c
 8079157:  mov edx, ecx
 8079159:  movzx eax, al
 807915c:  shl edx, 0x4
 807915f:  lea ecx, [edx+eax]
 8079162:  mov eax, DWORD PTR [ebp-0x3c]
 8079165:  mov edx, DWORD PTR [ebp-0x3c]
 8079168:  add eax, 0x5
 807916b:  mov DWORD PTR [ebp-0x38], eax
 807916e:  movzx eax, BYTE PTR [edx+0x5]
 8079172:  test al, al
 8079174:  je 807919c
 8079176:  shl ecx, 0x4
 8079179:  movzx edx, al
 807917c:  add edx, ecx
 807917e:  mov eax, edx
 8079180:  and eax, 0xf0000000
 8079185:  add DWORD PTR [ebp-0x38], 0x1
 8079189:  mov ecx, eax
 807918b:  xor ecx, edx
 807918d:  mov edx, DWORD PTR [ebp-0x38]
 8079190:  shr eax, 0x18
 8079193:  xor ecx, eax
 8079195:  movzx eax, BYTE PTR [edx]
 8079198:  test al, al
 807919a:  jne 8079176
 807919c:  mov eax, DWORD PTR [ebp-0x54]
 807919f:  mov DWORD PTR [eax], ecx
 80791a1:  jmp 8079006
 80791a6:  lea esi, [esi]
 80791a9:  lea edi, [edi]

080791b0 <_dl_lookup_symbol_x>:
 80791b0:  push ebp
 80791b1:  mov ebp, esp
 80791b3:  push edi
 80791b4:  push esi
 80791b5:  mov esi, 0x1505
 80791ba:  push ebx
 80791bb:  sub esp, 0xc0
 80791c1:  mov DWORD PTR [ebp-0x90], ecx
 80791c7:  mov ecx, eax
 80791c9:  mov DWORD PTR [ebp-0x88], eax
 80791cf:  mov DWORD PTR [ebp-0x8c], edx
 80791d5:  movzx edx, BYTE PTR [eax]
 80791d8:  test dl, dl
 80791da:  je 80791f7
 80791dc:  lea esi, [esi]
 80791e0:  mov eax, esi
 80791e2:  movzx edx, dl
 80791e5:  shl eax, 0x5
 80791e8:  add ecx, 0x1
 80791eb:  add eax, esi
 80791ed:  lea esi, [edx+eax]
 80791f0:  movzx edx, BYTE PTR [ecx]
 80791f3:  test dl, dl
 80791f5:  jne 80791e0
 80791f7:  mov ebx, DWORD PTR [ebp+0xc]
 80791fa:  mov DWORD PTR [ebp-0x10], 0xffffffff
 8079201:  mov DWORD PTR [ebp-0x18], 0x0
 8079208:  mov DWORD PTR [ebp-0x14], 0x0
 807920f:  test ebx, ebx
 8079211:  je 8079220
 8079213:  test DWORD PTR [ebp+0x14], 0xfffffffa
 807921a:  jne 8079621
 8079220:  mov ecx, DWORD PTR [ebp+0x18]
 8079223:  test ecx, ecx
 8079225:  jne 80795f7
 807922b:  mov edx, DWORD PTR [ebp+0x8]
 807922e:  mov DWORD PTR [ebp-0x74], 0x0
 8079235:  mov eax, DWORD PTR [edx]
 8079237:  test eax, eax
 8079239:  je 80796eb
 807923f:  mov ebx, DWORD PTR [ebp+0x8]
 8079242:  lea edi, [ebp-0x18]
 8079245:  mov edx, DWORD PTR [ebp-0x74]
 8079248:  jmp 807925f
 807924a:  lea esi, [esi]
 8079250:  add ebx, 0x4
 8079253:  xor edx, edx
 8079255:  mov eax, DWORD PTR [ebx]
 8079257:  test eax, eax
 8079259:  je 80794c0
 807925f:  mov ecx, DWORD PTR [ebp+0x10]
 8079262:  mov DWORD PTR [esp+0x1c], ecx
 8079266:  mov ecx, DWORD PTR [ebp+0x18]
 8079269:  mov DWORD PTR [esp+0x18], ecx
 807926d:  mov ecx, DWORD PTR [ebp+0x14]
 8079270:  mov DWORD PTR [esp+0x14], ecx
 8079274:  mov ecx, DWORD PTR [ebp+0xc]
 8079277:  mov DWORD PTR [esp+0xc], edx
 807927b:  mov DWORD PTR [esp+0x8], eax
 807927f:  mov DWORD PTR [esp+0x4], edi
 8079283:  mov DWORD PTR [esp+0x10], ecx
 8079287:  mov edx, DWORD PTR [ebp-0x90]
 807928d:  lea ecx, [ebp-0x10]
 8079290:  mov eax, DWORD PTR [edx]
 8079292:  mov edx, esi
 8079294:  mov DWORD PTR [esp], eax
 8079297:  mov eax, DWORD PTR [ebp-0x88]
 807929d:  call 8078e20
 80792a2:  cmp eax, 0x0
 80792a5:  jg 80794c0
 80792ab:  jge 8079250
 80792ad:  mov edx, DWORD PTR [ebp+0x18]
 80792b0:  test edx, edx
 80792b2:  lea esi, [esi]
 80792b8:  jne 8079250
 80792ba:  mov ecx, DWORD PTR [ebp+0xc]
 80792bd:  test ecx, ecx
 80792bf:  nop
 80792c0:  je 8079910
 80792c6:  mov edx, DWORD PTR [ebp-0x8c]
 80792cc:  mov DWORD PTR [ebp-0x6c], 0x0
 80792d3:  test edx, edx
 80792d5:  je 80792e3
 80792d7:  mov ecx, DWORD PTR [ebp-0x8c]
 80792dd:  mov ecx, DWORD PTR [ecx+0x4]
 80792e0:  mov DWORD PTR [ebp-0x6c], ecx
 80792e3:  mov ebx, DWORD PTR [ebp+0xc]
 80792e6:  cmp eax, 0xfe
 80792e9:  mov edx, DWORD PTR [ebp+0xc]
 80792ec:  mov DWORD PTR [ebp-0x7c], 0x80b4409
 80792f3:  mov ebx, DWORD PTR [ebx]
 80792f5:  mov edx, DWORD PTR [edx+0xc]
 80792f8:  mov DWORD PTR [ebp-0x84], ebx
 80792fe:  mov DWORD PTR [ebp-0x80], edx
 8079301:  je 8079310
 8079303:  mov ebx, DWORD PTR [ebp-0x84]
 8079309:  mov DWORD PTR [ebp-0x7c], 0x80c2c93
 8079310:  mov edx, DWORD PTR [ebp-0x7c]
 8079313:  mov ecx, DWORD PTR [ebp-0x88]
 8079319:  mov eax, DWORD PTR [ebp-0x80]
 807931c:  mov DWORD PTR [ebp-0x44], ebx
 807931f:  mov DWORD PTR [ebp-0x34], edx
 8079322:  mov DWORD PTR [ebp-0x4c], ecx
 8079325:  mov DWORD PTR [ebp-0x50], 0x80b441f
 807932c:  mov DWORD PTR [ebp-0x48], 0x80b4427
 8079333:  mov DWORD PTR [ebp-0x40], 0x80b4432
 807933a:  mov DWORD PTR [ebp-0x3c], eax
 807933d:  mov DWORD PTR [ebp-0x38], 0x80b4448
 8079344:  mov DWORD PTR [esp], 0x80b441f
 807934b:  call 804eea0
 8079350:  mov ecx, DWORD PTR [ebp-0x88]
 8079356:  mov DWORD PTR [ebp-0x94], eax
 807935c:  mov DWORD PTR [esp], ecx
 807935f:  call 804eea0
 8079364:  mov DWORD PTR [ebp-0x98], eax
 807936a:  mov DWORD PTR [esp], 0x80b4427
 8079371:  call 804eea0
 8079376:  mov DWORD PTR [ebp-0x9c], eax
 807937c:  mov DWORD PTR [esp], ebx
 807937f:  call 804eea0
 8079384:  mov DWORD PTR [esp], 0x80b4432
 807938b:  mov edi, eax
 807938d:  call 804eea0
 8079392:  mov ebx, DWORD PTR [ebp-0x80]
 8079395:  mov DWORD PTR [esp], ebx
 8079398:  mov esi, eax
 807939a:  call 804eea0
 807939f:  mov DWORD PTR [esp], 0x80b4448
 80793a6:  mov ebx, eax
 80793a8:  call 804eea0
 80793ad:  mov ecx, DWORD PTR [ebp-0x94]
 80793b3:  mov DWORD PTR [ebp-0xa8], eax
 80793b9:  mov eax, DWORD PTR [ebp-0x98]
 80793bf:  lea edx, [ecx+eax+0x1]
 80793c3:  mov eax, DWORD PTR [ebp-0xa8]
 80793c9:  add edx, DWORD PTR [ebp-0x9c]
 80793cf:  add edx, edi
 80793d1:  add edx, esi
 80793d3:  add edx, ebx
 80793d5:  lea ebx, [edx+eax]
 80793d8:  mov edx, DWORD PTR [ebp-0x7c]
 80793db:  mov DWORD PTR [esp], edx
 80793de:  call 804eea0
 80793e3:  lea eax, [ebx+eax+0x12]
 80793e7:  and eax, 0xfc
 80793ea:  sub esp, eax
 80793ec:  lea ebx, [esp+0x2f]
 80793f0:  and ebx, 0xf0
 80793f3:  mov DWORD PTR [esp+0x4], 0x80b441f
 80793fb:  mov DWORD PTR [esp], ebx
 80793fe:  call 806c360
 8079403:  mov ecx, DWORD PTR [ebp-0x88]
 8079409:  mov DWORD PTR [esp+0x4], ecx
 807940d:  mov DWORD PTR [esp], eax
 8079410:  call 806c360
 8079415:  mov DWORD PTR [esp+0x4], 0x80b4427
 807941d:  mov DWORD PTR [esp], eax
 8079420:  call 806c360
 8079425:  mov edx, DWORD PTR [ebp-0x84]
 807942b:  mov DWORD PTR [esp+0x4], edx
 807942f:  mov DWORD PTR [esp], eax
 8079432:  call 806c360
 8079437:  mov DWORD PTR [esp+0x4], 0x80b4432
 807943f:  mov DWORD PTR [esp], eax
 8079442:  call 806c360
 8079447:  mov ecx, DWORD PTR [ebp-0x80]
 807944a:  mov DWORD PTR [esp+0x4], ecx
 807944e:  mov DWORD PTR [esp], eax
 8079451:  call 806c360
 8079456:  mov DWORD PTR [esp+0x4], 0x80b4448
 807945e:  mov DWORD PTR [esp], eax
 8079461:  call 806c360
 8079466:  mov edx, DWORD PTR [ebp-0x7c]
 8079469:  mov DWORD PTR [esp+0x4], edx
 807946d:  mov DWORD PTR [esp], eax
 8079470:  call 806afe0
 8079475:  mov ecx, DWORD PTR [ebp-0x6c]
 8079478:  cmp BYTE PTR [ecx], 0x0
 807947b:  jne 8079492
 807947d:  mov eax, ds:0x80d0cd0
 8079482:  mov DWORD PTR [ebp-0x6c], 0x80b4462
 8079489:  mov edx, DWORD PTR [eax]
 807948b:  test edx, edx
 807948d:  je 8079492
 807948f:  mov DWORD PTR [ebp-0x6c], edx
 8079492:  mov DWORD PTR [esp], ebx
 8079495:  mov edx, DWORD PTR [ebp-0x6c]
 8079498:  xor eax, eax
 807949a:  mov ecx, 0x80b4471
 807949f:  call 807c240
 80794a4:  mov ebx, DWORD PTR [ebp-0x90]
 80794aa:  xor eax, eax
 80794ac:  mov DWORD PTR [ebx], 0x0
 80794b2:  sub esp, 0x4
 80794b5:  lea esp, [ebp-0xc]
 80794b8:  pop ebx
 80794b9:  pop esi
 80794ba:  pop edi
 80794bb:  pop ebp
 80794bc:  ret 0x14
 80794bf:  nop
 80794c0:  mov edi, DWORD PTR [ebp-0x18]
 80794c3:  test edi, edi
 80794c5:  je 80796eb
 80794cb:  mov eax, DWORD PTR [ebp-0x90]
 80794d1:  mov edx, DWORD PTR [eax]
 80794d3:  test edx, edx
 80794d5:  je 80794e3
 80794d7:  movzx eax, BYTE PTR [edx+0xd]
 80794db:  and eax, 0x3
 80794de:  cmp eax, 0x3
 80794e1:  je 8079530
 80794e3:  mov esi, DWORD PTR [ebp-0x14]
 80794e6:  mov DWORD PTR [ebp-0x70], 0x0
 80794ed:  movzx eax, BYTE PTR [esi+0x194]
 80794f4:  and eax, 0x3
 80794f7:  cmp al, 0x2
 80794f9:  je 8079720
 80794ff:  or BYTE PTR [esi+0x195], 0x8
 8079506:  mov eax, ds:0x80d2dd0
 807950b:  test eax, 0x404
 8079510:  jne 8079645
 8079516:  mov eax, DWORD PTR [ebp-0x18]
 8079519:  mov ecx, DWORD PTR [ebp-0x90]
 807951f:  mov DWORD PTR [ecx], eax
 8079521:  mov eax, DWORD PTR [ebp-0x14]
 8079524:  lea esp, [ebp-0xc]
 8079527:  pop ebx
 8079528:  pop esi
 8079529:  pop edi
 807952a:  pop ebp
 807952b:  ret 0x14
 807952e:  xchg ax, ax
 8079530:  cmp DWORD PTR [ebp+0x10], 0x1
 8079534:  je 8079934
 807953a:  mov ecx, DWORD PTR [ebp+0x8]
 807953d:  mov DWORD PTR [ebp-0x20], 0x0
 8079544:  mov DWORD PTR [ebp-0x1c], 0x0
 807954b:  mov eax, DWORD PTR [ecx]
 807954d:  test eax, eax
 807954f:  je 8079964
 8079555:  mov ebx, ecx
 8079557:  lea edi, [ebp-0x20]
 807955a:  jmp 8079578
 807955c:  lea esi, [esi]
 8079560:  add ebx, 0x4
 8079563:  mov eax, DWORD PTR [ebx]
 8079565:  mov DWORD PTR [ebp-0x74], 0x0
 807956c:  test eax, eax
 807956e:  je 80795bb
 8079570:  mov ecx, DWORD PTR [ebp-0x90]
 8079576:  mov edx, DWORD PTR [ecx]
 8079578:  mov DWORD PTR [esp+0x1c], 0x1
 8079580:  mov ecx, DWORD PTR [ebp+0x18]
 8079583:  mov DWORD PTR [esp+0x18], ecx
 8079587:  mov ecx, DWORD PTR [ebp+0x14]
 807958a:  mov DWORD PTR [esp+0x14], ecx
 807958e:  mov ecx, DWORD PTR [ebp+0xc]
 8079591:  mov DWORD PTR [esp+0x10], ecx
 8079595:  mov ecx, DWORD PTR [ebp-0x74]
 8079598:  mov DWORD PTR [esp], edx
 807959b:  mov edx, esi
 807959d:  mov DWORD PTR [esp+0x8], eax
 80795a1:  mov DWORD PTR [esp+0x4], edi
 80795a5:  mov DWORD PTR [esp+0xc], ecx
 80795a9:  mov eax, DWORD PTR [ebp-0x88]
 80795af:  lea ecx, [ebp-0x10]
 80795b2:  call 8078e20
 80795b7:  test eax, eax
 80795b9:  je 8079560
 80795bb:  mov eax, DWORD PTR [ebp-0x20]
 80795be:  test eax, eax
 80795c0:  je 8079964
 80795c6:  mov ebx, DWORD PTR [ebp-0x8c]
 80795cc:  cmp DWORD PTR [ebp-0x1c], ebx
 80795cf:  je 8079964
 80795d5:  mov edx, DWORD PTR [ebp-0x90]
 80795db:  mov ecx, DWORD PTR [ebp-0x8c]
 80795e1:  mov DWORD PTR [ebp-0x70], 0x1
 80795e8:  mov eax, DWORD PTR [edx]
 80795ea:  mov DWORD PTR [ebp-0x14], ecx
 80795ed:  mov esi, ecx
 80795ef:  mov DWORD PTR [ebp-0x18], eax
 80795f2:  jmp 80794ed
 80795f7:  mov ecx, DWORD PTR [ebp+0x8]
 80795fa:  mov ebx, DWORD PTR [ebp+0x18]
 80795fd:  mov DWORD PTR [ebp-0x74], 0x0
 8079604:  mov eax, DWORD PTR [ecx]
 8079606:  mov edx, DWORD PTR [eax]
 8079608:  cmp DWORD PTR [edx], ebx
 807960a:  je 8079237
 8079610:  add DWORD PTR [ebp-0x74], 0x1
 8079614:  mov ecx, DWORD PTR [ebp-0x74]
 8079617:  cmp DWORD PTR [edx+ecx*4], ebx
 807961a:  jne 8079610
 807961c:  jmp 8079237
 8079621:  mov DWORD PTR [esp+0xc], 0x80b44d0
 8079629:  mov DWORD PTR [esp+0x8], 0x147
 8079631:  mov DWORD PTR [esp+0x4], 0x80b43da
 8079639:  mov DWORD PTR [esp], 0x80b4598
 8079640:  call 8051490
 8079645:  mov ecx, DWORD PTR [ebp-0x8c]
 807964b:  test al, 0x4
 807964d:  mov ebx, DWORD PTR [ecx+0x4]
 8079650:  je 8079516
 8079656:  mov edi, DWORD PTR [ebp-0x70]
 8079659:  mov esi, 0x80b449d
 807965e:  test edi, edi
 8079660:  jne 8079667
 8079662:  mov esi, 0x80b4496
 8079667:  mov eax, DWORD PTR [ebp-0x14]
 807966a:  mov ecx, DWORD PTR [eax+0x4]
 807966d:  mov edi, DWORD PTR [eax+0x18]
 8079670:  cmp BYTE PTR [ecx], 0x0
 8079673:  jne 807967c
 8079675:  mov eax, ds:0x80d0cd0
 807967a:  mov ecx, DWORD PTR [eax]
 807967c:  mov eax, DWORD PTR [ebp-0x8c]
 8079682:  cmp BYTE PTR [ebx], 0x0
 8079685:  mov edx, DWORD PTR [eax+0x18]
 8079688:  jne 807969c
 807968a:  mov eax, ds:0x80d0cd0
 807968f:  mov ebx, 0x80b4462
 8079694:  mov eax, DWORD PTR [eax]
 8079696:  test eax, eax
 8079698:  je 807969c
 807969a:  mov ebx, eax
 807969c:  mov eax, DWORD PTR [ebp-0x88]
 80796a2:  mov DWORD PTR [esp+0xc], ecx
 80796a6:  mov DWORD PTR [esp+0x14], esi
 80796aa:  mov DWORD PTR [esp+0x10], edi
 80796ae:  mov DWORD PTR [esp+0x18], eax
 80796b2:  mov DWORD PTR [esp+0x8], edx
 80796b6:  mov DWORD PTR [esp+0x4], ebx
 80796ba:  mov DWORD PTR [esp], 0x80b4638
 80796c1:  call 807c8d0
 80796c6:  mov ecx, DWORD PTR [ebp+0xc]
 80796c9:  test ecx, ecx
 80796cb:  je 8079a79
 80796d1:  mov edx, DWORD PTR [ebp+0xc]
 80796d4:  mov eax, DWORD PTR [edx]
 80796d6:  mov DWORD PTR [esp], 0x80b44a7
 80796dd:  mov DWORD PTR [esp+0x4], eax
 80796e1:  call 807c8b0
 80796e6:  jmp 8079516
 80796eb:  mov edx, DWORD PTR [ebp-0x90]
 80796f1:  mov eax, DWORD PTR [edx]
 80796f3:  test eax, eax
 80796f5:  je 8079702
 80796f7:  movzx eax, BYTE PTR [eax+0xc]
 80796fb:  shr al, 0x4
 80796fe:  cmp al, 0x2
 8079700:  je 807970d
 8079702:  mov ebx, DWORD PTR [ebp+0x18]
 8079705:  test ebx, ebx
 8079707:  je 8079973
 807970d:  mov ebx, DWORD PTR [ebp-0x90]
 8079713:  xor eax, eax
 8079715:  mov DWORD PTR [ebx], 0x0
 807971b:  jmp 8079524
 8079720:  test BYTE PTR [ebp+0x14], 0x1
 8079724:  je 80794ff
 807972a:  cmp esi, DWORD PTR [ebp-0x8c]
 8079730:  je 8079a71
 8079736:  test BYTE PTR [esi+0x200], 0x8
 807973d:  jne 8079a71
 8079743:  mov ebx, DWORD PTR [ebp-0x8c]
 8079749:  mov ebx, DWORD PTR [ebx+0x1f8]
 807974f:  mov DWORD PTR [ebp-0x58], ebx
 8079752:  mov eax, DWORD PTR [ebp-0x8c]
 8079758:  mov edi, DWORD PTR [eax+0x1f0]
 807975e:  mov edx, edi
 8079760:  test edx, edx
 8079762:  mov DWORD PTR [ebp-0x5c], edx
 8079765:  je 807979a
 8079767:  mov ecx, edx
 8079769:  mov edx, DWORD PTR [edx]
 807976b:  test edx, edx
 807976d:  je 807979a
 807976f:  cmp esi, edx
 8079771:  mov eax, ecx
 8079773:  jne 807978e
 8079775:  jmp 8079a71
 807977a:  lea esi, [esi]
 8079780:  add eax, 0x4
 8079783:  cmp esi, edx
 8079785:  lea esi, [esi]
 8079788:  je 8079a71
 807978e:  mov edx, DWORD PTR [eax+0x4]
 8079791:  test edx, edx
 8079793:  nop
 8079794:  lea esi, [esi]
 8079798:  jne 8079780
 807979a:  mov eax, DWORD PTR [ebp-0x58]
 807979d:  mov DWORD PTR [ebp-0x54], 0x0
 80797a4:  test eax, eax
 80797a6:  je 80797e2
 80797a8:  mov ebx, DWORD PTR [ebp-0x58]
 80797ab:  mov ebx, DWORD PTR [ebx]
 80797ad:  test ebx, ebx
 80797af:  mov DWORD PTR [ebp-0x54], ebx
 80797b2:  je 80797e2
 80797b4:  mov edx, DWORD PTR [ebp-0x58]
 80797b7:  xor eax, eax
 80797b9:  cmp esi, DWORD PTR [edx+0x4]
 80797bc:  jne 80797d5
 80797be:  jmp 8079a71
 80797c3:  nop
 80797c4:  lea esi, [esi]
 80797c8:  mov ecx, DWORD PTR [ebp-0x58]
 80797cb:  cmp esi, DWORD PTR [ecx+eax*4+0x4]
 80797cf:  je 8079a71
 80797d5:  add eax, 0x1
 80797d8:  cmp DWORD PTR [ebp-0x54], eax
 80797db:  nop
 80797dc:  lea esi, [esi]
 80797e0:  ja 80797c8
 80797e2:  mov edx, DWORD PTR [ebp+0x14]
 80797e5:  mov ebx, DWORD PTR [esi+0x24c]
 80797eb:  mov eax, DWORD PTR [esi+0x250]
 80797f1:  and edx, 0x4
 80797f4:  mov DWORD PTR [ebp-0xa0], ebx
 80797fa:  mov DWORD PTR [ebp-0xa4], eax
 8079800:  mov DWORD PTR [ebp-0x78], edx
 8079803:  jne 8079a96
 8079809:  mov eax, 0x0
 807980e:  test eax, eax
 8079810:  je 8079b70
 8079816:  mov DWORD PTR [esp], 0x80d0d7c
 807981d:  call 0
 8079822:  mov edi, DWORD PTR [ebp-0x54]
 8079825:  mov ecx, DWORD PTR [ebp-0x8c]
 807982b:  mov eax, DWORD PTR [ecx+0x18]
 807982e:  lea eax, [eax+eax*8]
 8079831:  mov eax, DWORD PTR [eax*4+0x80d2e40]
 8079838:  test eax, eax
 807983a:  jne 8079847
 807983c:  jmp 8079884
 807983e:  xchg ax, ax
 8079840:  mov eax, DWORD PTR [eax+0xc]
 8079843:  test eax, eax
 8079845:  je 8079884
 8079847:  cmp eax, esi
 8079849:  lea esi, [esi]
 8079850:  jne 8079840
 8079852:  test eax, eax
 8079854:  lea esi, [esi]
 8079858:  je 8079884
 807985a:  mov ebx, DWORD PTR [esi+0x250]
 8079860:  xor DWORD PTR [ebp-0xa4], ebx
 8079866:  mov eax, DWORD PTR [esi+0x24c]
 807986c:  xor DWORD PTR [ebp-0xa0], eax
 8079872:  mov edx, DWORD PTR [ebp-0xa4]
 8079878:  or edx, DWORD PTR [ebp-0xa0]
 807987e:  je 8079b41
 8079884:  mov ebx, 0xffffffff
 8079889:  mov eax, 0x0
 807988e:  test eax, eax
 8079890:  je 807989e
 8079892:  mov DWORD PTR [esp], 0x80d0d7c
 8079899:  call 0
 807989e:  mov eax, DWORD PTR [ebp-0x78]
 80798a1:  test eax, eax
 80798a3:  je 80798b0
 80798a5:  mov DWORD PTR gs:0x1c, 0x1
 80798b0:  add ebx, 0x1
 80798b3:  jne 8079a71
 80798b9:  mov eax, DWORD PTR [ebp-0x78]
 80798bc:  test eax, eax
 80798be:  je 80798cf
 80798c0:  mov eax, DWORD PTR [ebp-0x8c]
 80798c6:  mov eax, DWORD PTR [eax+0x1cc]
 80798cc:  mov DWORD PTR [ebp+0x8], eax
 80798cf:  mov edx, DWORD PTR [ebp+0x18]
 80798d2:  mov DWORD PTR [esp+0x10], edx
 80798d6:  mov ecx, DWORD PTR [ebp+0x14]
 80798d9:  mov DWORD PTR [esp+0xc], ecx
 80798dd:  mov ebx, DWORD PTR [ebp+0x10]
 80798e0:  mov DWORD PTR [esp+0x8], ebx
 80798e4:  mov eax, DWORD PTR [ebp+0xc]
 80798e7:  mov DWORD PTR [esp+0x4], eax
 80798eb:  mov edx, DWORD PTR [ebp+0x8]
 80798ee:  mov DWORD PTR [esp], edx
 80798f1:  mov ecx, DWORD PTR [ebp-0x90]
 80798f7:  mov edx, DWORD PTR [ebp-0x8c]
 80798fd:  mov eax, DWORD PTR [ebp-0x88]
 8079903:  call 80791b0
 8079908:  sub esp, 0x14
 807990b:  jmp 8079524
 8079910:  mov DWORD PTR [esp+0xc], 0x80b44d0
 8079918:  mov DWORD PTR [esp+0x8], 0x15d
 8079920:  mov DWORD PTR [esp+0x4], 0x80b43da
 8079928:  mov DWORD PTR [esp], 0x80b43f2
 807992f:  call 8051490
 8079934:  mov esi, DWORD PTR [ebp-0x8c]
 807993a:  cmp DWORD PTR [ebp-0x14], esi
 807993d:  mov DWORD PTR [ebp-0x70], 0x1
 8079944:  je 80794ed
 807994a:  mov DWORD PTR [ebp-0x18], edx
 807994d:  mov edx, DWORD PTR [ebp-0x8c]
 8079953:  mov DWORD PTR [ebp-0x70], 0x1
 807995a:  mov DWORD PTR [ebp-0x14], edx
 807995d:  mov esi, edx
 807995f:  jmp 80794ed
 8079964:  mov esi, DWORD PTR [ebp-0x14]
 8079967:  mov DWORD PTR [ebp-0x70], 0x1
 807996e:  jmp 80794ed
 8079973:  mov ecx, DWORD PTR [ebp-0x8c]
 8079979:  mov DWORD PTR [ebp-0x68], 0x80c2c93
 8079980:  test ecx, ecx
 8079982:  je 8079990
 8079984:  mov ecx, DWORD PTR [ebp-0x8c]
 807998a:  mov ecx, DWORD PTR [ecx+0x4]
 807998d:  mov DWORD PTR [ebp-0x68], ecx
 8079990:  mov edx, DWORD PTR [ebp+0xc]
 8079993:  mov eax, 0x80c2c93
 8079998:  mov DWORD PTR [ebp-0x64], 0x80c2c93
 807999f:  test edx, edx
 80799a1:  je 80799b8
 80799a3:  mov ebx, DWORD PTR [ebp+0xc]
 80799a6:  mov eax, 0x80b4427
 80799ab:  mov ebx, DWORD PTR [ebx]
 80799ad:  test ebx, ebx
 80799af:  mov DWORD PTR [ebp-0x64], ebx
 80799b2:  je 8079a8a
 80799b8:  mov edx, DWORD PTR [ebp-0x88]
 80799be:  lea ebx, [ebp-0x30]
 80799c1:  mov esi, 0x1
 80799c6:  mov ecx, DWORD PTR [ebp-0x64]
 80799c9:  lea edi, [ebp-0x20]
 80799cc:  mov DWORD PTR [ebp-0x30], 0x80b44bd
 80799d3:  mov DWORD PTR [ebp-0x28], eax
 80799d6:  mov DWORD PTR [ebp-0x2c], edx
 80799d9:  mov DWORD PTR [ebp-0x24], ecx
 80799dc:  mov eax, DWORD PTR [ebx]
 80799de:  add ebx, 0x4
 80799e1:  mov DWORD PTR [esp], eax
 80799e4:  call 804eea0
 80799e9:  add esi, eax
 80799eb:  cmp ebx, edi
 80799ed:  jne 80799dc
 80799ef:  lea eax, [esi+0x12]
 80799f2:  and eax, 0xfc
 80799f5:  sub esp, eax
 80799f7:  mov eax, DWORD PTR [ebp-0x30]
 80799fa:  lea ebx, [esp+0x2f]
 80799fe:  and ebx, 0xf0
 8079a01:  mov DWORD PTR [esp], ebx
 8079a04:  mov DWORD PTR [esp+0x4], eax
 8079a08:  call 806c360
 8079a0d:  mov edx, DWORD PTR [ebp-0x2c]
 8079a10:  mov DWORD PTR [esp+0x4], edx
 8079a14:  mov DWORD PTR [esp], eax
 8079a17:  call 806c360
 8079a1c:  mov edx, DWORD PTR [ebp-0x28]
 8079a1f:  mov DWORD PTR [esp+0x4], edx
 8079a23:  mov DWORD PTR [esp], eax
 8079a26:  call 806c360
 8079a2b:  mov edx, DWORD PTR [ebp-0x64]
 8079a2e:  mov DWORD PTR [esp+0x4], edx
 8079a32:  mov DWORD PTR [esp], eax
 8079a35:  call 806afe0
 8079a3a:  mov ecx, DWORD PTR [ebp-0x68]
 8079a3d:  cmp BYTE PTR [ecx], 0x0
 8079a40:  jne 8079a57
 8079a42:  mov eax, ds:0x80d0cd0
 8079a47:  mov DWORD PTR [ebp-0x68], 0x80b4462
 8079a4e:  mov edx, DWORD PTR [eax]
 8079a50:  test edx, edx
 8079a52:  je 8079a57
 8079a54:  mov DWORD PTR [ebp-0x68], edx
 8079a57:  mov DWORD PTR [esp], ebx
 8079a5a:  mov edx, DWORD PTR [ebp-0x68]
 8079a5d:  mov ecx, 0x80b4482
 8079a62:  xor eax, eax
 8079a64:  call 807c240
 8079a69:  sub esp, 0x4
 8079a6c:  jmp 807970d
 8079a71:  mov esi, DWORD PTR [ebp-0x14]
 8079a74:  jmp 80794ff
 8079a79:  mov DWORD PTR [esp], 0x80b5234
 8079a80:  call 807c8b0
 8079a85:  jmp 8079516
 8079a8a:  mov DWORD PTR [ebp-0x64], 0x80c2c93
 8079a91:  jmp 80799b8
 8079a96:  xor eax, eax
 8079a98:  xchg DWORD PTR gs:0x1c, eax
 8079a9f:  cmp eax, 0x2
 8079aa2:  jne 8079ac1
 8079aa4:  mov edx, 0x1
 8079aa9:  mov ebx, DWORD PTR gs:0x8
 8079ab0:  mov ecx, DWORD PTR gs:0x20
 8079ab7:  add ebx, 0x1c
 8079aba:  or ecx, 0x1
 8079abd:  mov al, 0xf0
 8079abf:  int 0x80
 8079ac1:  mov eax, 0x0
 8079ac6:  test eax, eax
 8079ac8:  je 8079ae2
 8079aca:  mov DWORD PTR [esp], 0x80d0d7c
 8079ad1:  call 0
 8079ad6:  mov ecx, DWORD PTR [ebp-0x8c]
 8079adc:  mov edi, DWORD PTR [ecx+0x1f0]
 8079ae2:  cmp edi, DWORD PTR [ebp-0x5c]
 8079ae5:  je 8079cab
 8079aeb:  test edi, edi
 8079aed:  je 8079cab
 8079af3:  mov edx, DWORD PTR [edi]
 8079af5:  test edx, edx
 8079af7:  je 8079cab
 8079afd:  cmp esi, edx
 8079aff:  mov eax, edi
 8079b01:  je 8079b15
 8079b03:  mov edx, DWORD PTR [eax+0x4]
 8079b06:  test edx, edx
 8079b08:  je 8079cab
 8079b0e:  add eax, 0x4
 8079b11:  cmp esi, edx
 8079b13:  jne 8079b03
 8079b15:  mov edx, DWORD PTR [esi+0x250]
 8079b1b:  xor DWORD PTR [ebp-0xa4], edx
 8079b21:  mov ecx, DWORD PTR [esi+0x24c]
 8079b27:  xor DWORD PTR [ebp-0xa0], ecx
 8079b2d:  mov ebx, DWORD PTR [ebp-0xa4]
 8079b33:  or ebx, DWORD PTR [ebp-0xa0]
 8079b39:  jne 8079884
 8079b3f:  jmp 8079bb5
 8079b41:  mov edx, DWORD PTR [esi+0x200]
 8079b47:  test dl, 0x8
 8079b4a:  jne 8079bb5
 8079b4c:  mov ecx, DWORD PTR [ebp-0x8c]
 8079b52:  movzx eax, BYTE PTR [ecx+0x194]
 8079b59:  and eax, 0x3
 8079b5c:  cmp al, 0x2
 8079b5e:  je 8079b78
 8079b60:  or edx, 0x8
 8079b63:  xor ebx, ebx
 8079b65:  mov DWORD PTR [esi+0x200], edx
 8079b6b:  jmp 8079889
 8079b70:  mov edi, DWORD PTR [ebp-0x54]
 8079b73:  jmp 8079825
 8079b78:  test BYTE PTR [ecx+0x200], 0x8
 8079b7f:  jne 8079b60
 8079b81:  mov ebx, DWORD PTR [ebp-0x8c]
 8079b87:  mov eax, DWORD PTR [ebx+0x1f4]
 8079b8d:  cmp eax, edi
 8079b8f:  jbe 8079c09
 8079b91:  mov ebx, DWORD PTR [ebp-0x8c]
 8079b97:  mov eax, DWORD PTR [ebx+0x1f8]
 8079b9d:  mov DWORD PTR [eax+edi*4+0x4], esi
 8079ba1:  mov edx, DWORD PTR [ebx+0x1f8]
 8079ba7:  lea eax, [edi+0x1]
 8079baa:  mov DWORD PTR [edx], eax
 8079bac:  test BYTE PTR ds:0x80d2dd0, 0x40
 8079bb3:  jne 8079bbc
 8079bb5:  xor ebx, ebx
 8079bb7:  jmp 8079889
 8079bbc:  mov eax, DWORD PTR [ebp-0x8c]
 8079bc2:  mov edx, DWORD PTR [eax+0x4]
 8079bc5:  mov ebx, DWORD PTR [eax+0x18]
 8079bc8:  cmp BYTE PTR [edx], 0x0
 8079bcb:  jne 8079bd4
 8079bcd:  mov eax, ds:0x80d0cd0
 8079bd2:  mov edx, DWORD PTR [eax]
 8079bd4:  mov eax, DWORD PTR [esi+0x4]
 8079bd7:  mov ecx, DWORD PTR [esi+0x18]
 8079bda:  cmp BYTE PTR [eax], 0x0
 8079bdd:  jne 8079be6
 8079bdf:  mov eax, ds:0x80d0cd0
 8079be4:  mov eax, DWORD PTR [eax]
 8079be6:  mov DWORD PTR [esp+0x10], ebx
 8079bea:  xor ebx, ebx
 8079bec:  mov DWORD PTR [esp+0xc], edx
 8079bf0:  mov DWORD PTR [esp+0x8], ecx
 8079bf4:  mov DWORD PTR [esp+0x4], eax
 8079bf8:  mov DWORD PTR [esp], 0x80b45f8
 8079bff:  call 807c8d0
 8079c04:  jmp 8079889
 8079c09:  test eax, eax
 8079c0b:  mov edx, 0x2c
 8079c10:  mov DWORD PTR [ebp-0x60], 0xa
 8079c17:  je 8079c25
 8079c19:  add eax, eax
 8079c1b:  mov DWORD PTR [ebp-0x60], eax
 8079c1e:  lea edx, [eax*4+0x4]
 8079c25:  mov DWORD PTR [esp], edx
 8079c28:  call 804d6f0
 8079c2d:  test eax, eax
 8079c2f:  mov ebx, eax
 8079c31:  je 8079c9f
 8079c33:  test edi, edi
 8079c35:  je 8079c66
 8079c37:  lea ecx, [eax+0x4]
 8079c3a:  mov eax, DWORD PTR [ebp-0x8c]
 8079c40:  lea edx, [edi*4]
 8079c47:  mov eax, DWORD PTR [eax+0x1f8]
 8079c4d:  mov DWORD PTR [ebp-0xac], eax
 8079c53:  add eax, 0x4
 8079c56:  mov DWORD PTR [esp+0x8], edx
 8079c5a:  mov DWORD PTR [esp+0x4], eax
 8079c5e:  mov DWORD PTR [esp], ecx
 8079c61:  call 804efc0
 8079c66:  lea eax, [edi+0x1]
 8079c69:  mov DWORD PTR [ebx+edi*4+0x4], esi
 8079c6d:  mov DWORD PTR [ebx], eax
 8079c6f:  mov edx, DWORD PTR [ebp-0x8c]
 8079c75:  mov ecx, DWORD PTR [ebp-0x60]
 8079c78:  mov eax, DWORD PTR [edx+0x1f8]
 8079c7e:  mov DWORD PTR [edx+0x1f4], ecx
 8079c84:  mov DWORD PTR [edx+0x1f8], ebx
 8079c8a:  test eax, eax
 8079c8c:  je 8079bac
 8079c92:  mov DWORD PTR [esp], eax
 8079c95:  call 807d650
 8079c9a:  jmp 8079bac
 8079c9f:  or DWORD PTR [esi+0x200], 0x8
 8079ca6:  jmp 8079889
 8079cab:  mov ebx, DWORD PTR [ebp-0x8c]
 8079cb1:  mov edx, DWORD PTR [ebx+0x1f8]
 8079cb7:  test edx, edx
 8079cb9:  je 8079b70
 8079cbf:  cmp DWORD PTR [ebp-0x58], edx
 8079cc2:  je 8079cf5
 8079cc4:  mov edi, DWORD PTR [edx]
 8079cc6:  test edi, edi
 8079cc8:  je 8079825
 8079cce:  xor eax, eax
 8079cd0:  cmp esi, DWORD PTR [edx+0x4]
 8079cd3:  je 8079b15
 8079cd9:  add eax, 0x1
 8079cdc:  cmp edi, eax
 8079cde:  jbe 8079825
 8079ce4:  cmp esi, DWORD PTR [edx+eax*4+0x4]
 8079ce8:  jne 8079cd9
 8079cea:  lea esi, [esi]
 8079cf0:  jmp 8079b15
 8079cf5:  mov eax, DWORD PTR [ebp-0x58]
 8079cf8:  mov edi, DWORD PTR [eax]
 8079cfa:  cmp edi, DWORD PTR [ebp-0x54]
 8079cfd:  lea esi, [esi]
 8079d00:  jbe 8079b70
 8079d06:  mov edx, DWORD PTR [ebp-0x54]
 8079d09:  lea eax, [eax+edx*4+0x4]
 8079d0d:  cmp esi, DWORD PTR [eax]
 8079d0f:  je 8079b15
 8079d15:  add DWORD PTR [ebp-0x54], 0x1
 8079d19:  add eax, 0x4
 8079d1c:  cmp edi, DWORD PTR [ebp-0x54]
 8079d1f:  ja 8079d0d
 8079d21:  jmp 8079825
 8079d26:  nop
 8079d27:  nop
 8079d28:  nop
 8079d29:  nop
 8079d2a:  nop
 8079d2b:  nop
 8079d2c:  nop
 8079d2d:  nop
 8079d2e:  nop
 8079d2f:  nop

08079d30 <_dl_new_object>:
 8079d30:  push ebp
 8079d31:  mov ebp, esp
 8079d33:  push edi
 8079d34:  push esi
 8079d35:  push ebx
 8079d36:  sub esp, 0x2c
 8079d39:  mov esi, DWORD PTR [ebp+0x8]
 8079d3c:  mov DWORD PTR [ebp-0x24], edx
 8079d3f:  mov DWORD PTR [ebp-0x28], ecx
 8079d42:  mov DWORD PTR [ebp-0x20], eax
 8079d45:  mov DWORD PTR [esp], edx
 8079d48:  call 804eea0
 8079d4d:  lea edx, [eax+0x1]
 8079d50:  add eax, 0x265
 8079d55:  mov DWORD PTR [ebp-0x1c], edx
 8079d58:  mov DWORD PTR [esp+0x4], 0x1
 8079d60:  mov DWORD PTR [esp], eax
 8079d63:  call 804d3c0
 8079d68:  test eax, eax
 8079d6a:  mov edi, eax
 8079d6c:  je 8079ebd
 8079d72:  mov edx, DWORD PTR [ebp-0x1c]
 8079d75:  lea ebx, [edi+0x258]
 8079d7b:  mov DWORD PTR [edi+0x14], eax
 8079d7e:  lea eax, [eax+0x254]
 8079d84:  mov DWORD PTR [edi+0x164], eax
 8079d8a:  lea eax, [edi+0x264]
 8079d90:  mov DWORD PTR [edi+0x1c], ebx
 8079d93:  mov DWORD PTR [esp+0x8], edx
 8079d97:  mov edx, DWORD PTR [ebp-0x24]
 8079d9a:  mov DWORD PTR [esp], eax
 8079d9d:  mov DWORD PTR [esp+0x4], edx
 8079da1:  call 804efc0
 8079da6:  movzx edx, BYTE PTR [ebp-0x28]
 8079daa:  lea ecx, [edi+0x1b8]
 8079db0:  mov DWORD PTR [ebx+0x8], 0x1
 8079db7:  mov DWORD PTR [edi+0x16c], esi
 8079dbd:  mov DWORD PTR [edi+0x1cc], ecx
 8079dc3:  and edx, 0x3
 8079dc6:  mov DWORD PTR [edi+0x1c8], 0x4
 8079dd0:  mov DWORD PTR [edi+0x258], eax
 8079dd6:  mov eax, DWORD PTR [ebp-0x20]
 8079dd9:  mov DWORD PTR [edi+0x4], eax
 8079ddc:  movzx eax, BYTE PTR [edi+0x194]
 8079de3:  and eax, 0xfc
 8079de6:  or eax, edx
 8079de8:  mov BYTE PTR [edi+0x194], al
 8079dee:  mov edx, DWORD PTR [ebp+0x10]
 8079df1:  mov DWORD PTR [edi+0x18], edx
 8079df4:  lea edx, [edx+edx*8]
 8079df7:  mov eax, DWORD PTR [edx*4+0x80d2e40]
 8079dfe:  test eax, eax
 8079e00:  je 8079f70
 8079e06:  mov ecx, eax
 8079e08:  jmp 8079e12
 8079e0a:  lea esi, [esi]
 8079e10:  mov ecx, edx
 8079e12:  mov edx, DWORD PTR [ecx+0xc]
 8079e15:  test edx, edx
 8079e17:  jne 8079e10
 8079e19:  mov DWORD PTR [edi+0x10], ecx
 8079e1c:  add eax, 0x15c
 8079e21:  mov ebx, 0x1
 8079e26:  mov DWORD PTR [ecx+0xc], edi
 8079e29:  mov ecx, DWORD PTR [edi+0x1cc]
 8079e2f:  mov DWORD PTR [ecx], eax
 8079e31:  mov edx, DWORD PTR [ebp+0x10]
 8079e34:  lea eax, [edx+edx*8]
 8079e37:  mov edx, DWORD PTR ds:0x80d2ddc
 8079e3d:  add DWORD PTR [eax*4+0x80d2e44], 0x1
 8079e45:  mov eax, ds:0x80d2dd8
 8079e4a:  mov DWORD PTR [edi+0x250], edx
 8079e50:  mov DWORD PTR [edi+0x24c], eax
 8079e56:  add eax, 0x1
 8079e59:  adc edx, 0x0
 8079e5c:  test esi, esi
 8079e5e:  mov ds:0x80d2dd8, eax
 8079e63:  mov DWORD PTR ds:0x80d2ddc, edx
 8079e69:  jne 8079e72
 8079e6b:  jmp 8079f7e
 8079e70:  mov esi, eax
 8079e72:  mov eax, DWORD PTR [esi+0x16c]
 8079e78:  test eax, eax
 8079e7a:  jne 8079e70
 8079e7c:  xor eax, eax
 8079e7e:  test ebx, ebx
 8079e80:  lea edx, [esi+0x15c]
 8079e86:  je 8079ea4
 8079e88:  mov ebx, DWORD PTR [ecx]
 8079e8a:  lea edx, [esi+0x15c]
 8079e90:  cmp ebx, edx
 8079e92:  je 8079ea7
 8079e94:  test BYTE PTR [ebp+0xc], 0x8
 8079e98:  mov eax, 0x4
 8079e9d:  je 8079ea4
 8079e9f:  mov DWORD PTR [ecx+0x4], ebx
 8079ea2:  xor eax, eax
 8079ea4:  mov DWORD PTR [ecx+eax], edx
 8079ea7:  lea eax, [edi+0x15c]
 8079ead:  mov DWORD PTR [edi+0x1d0], eax
 8079eb3:  mov eax, DWORD PTR [ebp-0x20]
 8079eb6:  movzx ebx, BYTE PTR [eax]
 8079eb9:  test bl, bl
 8079ebb:  jne 8079ed0
 8079ebd:  add esp, 0x2c
 8079ec0:  mov eax, edi
 8079ec2:  pop ebx
 8079ec3:  pop esi
 8079ec4:  pop edi
 8079ec5:  pop ebp
 8079ec6:  ret 0xc
 8079ec9:  lea esi, [esi]
 8079ed0:  mov DWORD PTR [esp], eax
 8079ed3:  call 804eea0
 8079ed8:  add eax, 0x1
 8079edb:  cmp bl, 0x2f
 8079ede:  mov DWORD PTR [ebp-0x18], eax
 8079ee1:  je 8079f95
 8079ee7:  mov DWORD PTR [ebp-0x10], eax
 8079eea:  mov eax, gs:0x0
 8079ef0:  mov esi, 0x80
 8079ef5:  mov DWORD PTR [ebp-0x14], 0x0
 8079efc:  mov DWORD PTR [ebp-0x2c], eax
 8079eff:  nop
 8079f00:  sub DWORD PTR [ebp-0x10], 0x80
 8079f04:  mov edx, DWORD PTR [ebp-0x10]
 8079f07:  mov DWORD PTR [esp+0x4], edx
 8079f0b:  mov eax, DWORD PTR [ebp-0x14]
 8079f0e:  mov DWORD PTR [esp], eax
 8079f11:  call 804db10
 8079f16:  test eax, eax
 8079f18:  mov ebx, eax
 8079f1a:  je 8079f44
 8079f1c:  mov DWORD PTR [esp+0x4], esi
 8079f20:  mov DWORD PTR [esp], eax
 8079f23:  call 80731b0
 8079f28:  test eax, eax
 8079f2a:  jne 8079fe4
 8079f30:  mov eax, 0xffffffe8
 8079f35:  sub esi, 0x80
 8079f38:  mov edx, DWORD PTR [ebp-0x2c]
 8079f3b:  mov DWORD PTR [ebp-0x14], ebx
 8079f3e:  cmp DWORD PTR [edx+eax], 0x22
 8079f42:  je 8079f00
 8079f44:  mov eax, DWORD PTR [ebp-0x14]
 8079f47:  mov DWORD PTR [esp], eax
 8079f4a:  call 804b4a0
 8079f4f:  mov DWORD PTR [ebp-0x14], 0xffffffff
 8079f56:  xchg ax, ax
 8079f58:  mov eax, DWORD PTR [ebp-0x14]
 8079f5b:  mov DWORD PTR [edi+0x1a8], eax
 8079f61:  add esp, 0x2c
 8079f64:  mov eax, edi
 8079f66:  pop ebx
 8079f67:  pop esi
 8079f68:  pop edi
 8079f69:  pop ebp
 8079f6a:  ret 0xc
 8079f6d:  lea esi, [esi]
 8079f70:  mov DWORD PTR [edx*4+0x80d2e40], edi
 8079f77:  xor ebx, ebx
 8079f79:  jmp 8079e31
 8079f7e:  mov esi, edi
 8079f80:  xor eax, eax
 8079f82:  test ebx, ebx
 8079f84:  lea edx, [esi+0x15c]
 8079f8a:  je 8079ea4
 8079f90:  jmp 8079e88
 8079f95:  mov DWORD PTR [esp], eax
 8079f98:  call 804d6f0
 8079f9d:  test eax, eax
 8079f9f:  mov DWORD PTR [ebp-0x14], eax
 8079fa2:  lea esi, [esi]
 8079fa8:  je 8079f4f
 8079faa:  mov edx, DWORD PTR [ebp-0x18]
 8079fad:  mov DWORD PTR [esp+0x8], edx
 8079fb1:  mov edx, DWORD PTR [ebp-0x20]
 8079fb4:  mov DWORD PTR [esp], eax
 8079fb7:  mov DWORD PTR [esp+0x4], edx
 8079fbb:  call 806c310
 8079fc0:  jmp 8079fca
 8079fc2:  lea esi, [esi]
 8079fc8:  mov eax, edx
 8079fca:  cmp BYTE PTR [eax-0x1], 0x2f
 8079fce:  lea edx, [eax-0x1]
 8079fd1:  jne 8079fc8
 8079fd3:  cmp edx, DWORD PTR [ebp-0x14]
 8079fd6:  xchg ax, ax
 8079fd8:  je 8079fdc
 8079fda:  mov eax, edx
 8079fdc:  mov BYTE PTR [eax], 0x0
 8079fdf:  jmp 8079f58
 8079fe4:  mov DWORD PTR [ebp-0x14], ebx
 8079fe7:  mov DWORD PTR [esp+0x4], 0x0
 8079fef:  mov DWORD PTR [esp], ebx
 8079ff2:  call 806ae20
 8079ff7:  cmp BYTE PTR [eax-0x1], 0x2f
 8079ffb:  je 8079faa
 8079ffd:  mov BYTE PTR [eax], 0x2f
 807a000:  add eax, 0x1
 807a003:  jmp 8079faa
 807a005:  nop
 807a006:  nop
 807a007:  nop
 807a008:  nop
 807a009:  nop
 807a00a:  nop
 807a00b:  nop
 807a00c:  nop
 807a00d:  nop
 807a00e:  nop
 807a00f:  nop

0807a010 <_dl_try_allocate_static_tls>:
 807a010:  push ebp
 807a011:  mov ecx, eax
 807a013:  mov ebp, esp
 807a015:  sub esp, 0x18
 807a018:  mov DWORD PTR [ebp-0xc], ebx
 807a01b:  mov DWORD PTR [ebp-0x8], esi
 807a01e:  mov DWORD PTR [ebp-0x4], edi
 807a021:  cmp DWORD PTR [eax+0x23c], 0x1
 807a028:  jne 807a040
 807a02a:  mov eax, 0xffffffff
 807a02f:  mov ebx, DWORD PTR [ebp-0xc]
 807a032:  mov esi, DWORD PTR [ebp-0x8]
 807a035:  mov edi, DWORD PTR [ebp-0x4]
 807a038:  mov esp, ebp
 807a03a:  pop ebp
 807a03b:  ret
 807a03c:  lea esi, [esi]
 807a040:  mov ebx, DWORD PTR [eax+0x234]
 807a046:  cmp ebx, DWORD PTR ds:0x80d2d90
 807a04c:  ja 807a02a
 807a04e:  mov eax, ds:0x80d0d28
 807a053:  mov esi, DWORD PTR ds:0x80d2d8c
 807a059:  sub eax, 0x470
 807a05e:  sub eax, esi
 807a060:  mov DWORD PTR [ebp-0x14], eax
 807a063:  mov eax, DWORD PTR [ecx+0x238]
 807a069:  mov edi, eax
 807a06b:  add edi, DWORD PTR [ecx+0x230]
 807a071:  cmp DWORD PTR [ebp-0x14], edi
 807a074:  jb 807a02a
 807a076:  sub esi, eax
 807a078:  xor edx, edx
 807a07a:  add esi, DWORD PTR [ebp-0x14]
 807a07d:  sub DWORD PTR [ebp-0x14], edi
 807a080:  mov eax, DWORD PTR [ebp-0x14]
 807a083:  mov DWORD PTR [ebp-0x10], esi
 807a086:  div ebx
 807a088:  mov edi, eax
 807a08a:  imul edi, ebx
 807a08d:  sub DWORD PTR [ebp-0x10], edi
 807a090:  mov eax, DWORD PTR [ebp-0x10]
 807a093:  mov ds:0x80d2d8c, eax
 807a098:  mov DWORD PTR [ecx+0x23c], eax
 807a09e:  mov eax, DWORD PTR [ecx+0x14]
 807a0a1:  test BYTE PTR [eax+0x194], 0x4
 807a0a8:  jne 807a0b8
 807a0aa:  or BYTE PTR [ecx+0x195], 0x4
 807a0b1:  xor eax, eax
 807a0b3:  jmp 807a02f
 807a0b8:  mov DWORD PTR [esp], ecx
 807a0bb:  call DWORD PTR ds:0x80d0d64
 807a0c1:  xor eax, eax
 807a0c3:  jmp 807a02f
 807a0c8:  nop
 807a0c9:  lea esi, [esi]

0807a0d0 <_dl_reloc_bad_type>:
 807a0d0:  push ebp
 807a0d1:  mov ebp, esp
 807a0d3:  sub esp, 0x34
 807a0d6:  shl ecx, 0x5
 807a0d9:  add ecx, 0x80b4c80
 807a0df:  mov DWORD PTR [ebp-0xc], ebx
 807a0e2:  mov ebx, edx
 807a0e4:  mov DWORD PTR [ebp-0x8], esi
 807a0e7:  lea esi, [ebp-0x2c]
 807a0ea:  mov DWORD PTR [ebp-0x4], edi
 807a0ed:  mov edi, eax
 807a0ef:  mov DWORD PTR [esp+0x4], ecx
 807a0f3:  mov DWORD PTR [esp], esi
 807a0f6:  call 806c360
 807a0fb:  mov edx, ebx
 807a0fd:  and ebx, 0xf
 807a100:  shr edx, 0x4
 807a103:  xor ecx, ecx
 807a105:  and edx, 0xf
 807a108:  movzx edx, BYTE PTR [edx+0x80b0d40]
 807a10f:  mov BYTE PTR [eax+0x2], 0x0
 807a113:  mov BYTE PTR [eax], dl
 807a115:  movzx edx, BYTE PTR [ebx+0x80b0d40]
 807a11c:  mov BYTE PTR [eax+0x1], dl
 807a11f:  mov edx, DWORD PTR [edi+0x4]
 807a122:  xor eax, eax
 807a124:  mov DWORD PTR [esp], esi
 807a127:  call 807c080
 807a12c:  lea esi, [esi]

0807a130 <_dl_protect_relro>:
 807a130:  push ebp
 807a131:  mov ebp, esp
 807a133:  push ebx
 807a134:  mov ebx, eax
 807a136:  sub esp, 0xc
 807a139:  mov edx, DWORD PTR [eax+0x244]
 807a13f:  add edx, DWORD PTR [eax]
 807a141:  mov eax, ds:0x80d2e2c
 807a146:  neg eax
 807a148:  mov ecx, eax
 807a14a:  and ecx, edx
 807a14c:  add edx, DWORD PTR [ebx+0x248]
 807a152:  and edx, eax
 807a154:  cmp ecx, edx
 807a156:  je 807a172
 807a158:  sub edx, ecx
 807a15a:  mov DWORD PTR [esp+0x8], 0x1
 807a162:  mov DWORD PTR [esp+0x4], edx
 807a166:  mov DWORD PTR [esp], ecx
 807a169:  call 8050070
 807a16e:  test eax, eax
 807a170:  js 807a177
 807a172:  mov ebx, DWORD PTR [ebp-0x4]
 807a175:  leave
 807a176:  ret
 807a177:  mov ecx, 0xffffffe8
 807a17d:  mov eax, gs:0x0
 807a183:  mov edx, DWORD PTR [ebx+0x4]
 807a186:  mov eax, DWORD PTR [eax+ecx]
 807a189:  xor ecx, ecx
 807a18b:  mov DWORD PTR [esp], 0x80b4cc0
 807a192:  call 807c080
 807a197:  mov esi, esi
 807a199:  lea edi, [edi]

0807a1a0 <_dl_nothread_init_static_tls>:
 807a1a0:  push ebp
 807a1a1:  mov ebp, esp
 807a1a3:  push esi
 807a1a4:  push ebx
 807a1a5:  sub esp, 0x10
 807a1a8:  mov esi, DWORD PTR [ebp+0x8]
 807a1ab:  mov edx, DWORD PTR gs:0x8
 807a1b2:  mov ebx, DWORD PTR [esi+0x23c]
 807a1b8:  mov ecx, DWORD PTR gs:0x4
 807a1bf:  mov eax, DWORD PTR [esi+0x240]
 807a1c5:  cmp eax, DWORD PTR [ecx-0x8]
 807a1c8:  ja 807a214
 807a1ca:  sub edx, ebx
 807a1cc:  lea eax, [ecx+eax*8]
 807a1cf:  mov DWORD PTR [eax], edx
 807a1d1:  mov BYTE PTR [eax+0x4], 0x1
 807a1d5:  mov eax, DWORD PTR [esi+0x22c]
 807a1db:  mov ebx, DWORD PTR [esi+0x230]
 807a1e1:  mov DWORD PTR [esp+0x8], eax
 807a1e5:  sub ebx, eax
 807a1e7:  mov eax, DWORD PTR [esi+0x228]
 807a1ed:  mov DWORD PTR [esp], edx
 807a1f0:  mov DWORD PTR [esp+0x4], eax
 807a1f4:  call 806c310
 807a1f9:  mov DWORD PTR [esp+0x8], ebx
 807a1fd:  mov DWORD PTR [esp+0x4], 0x0
 807a205:  mov DWORD PTR [esp], eax
 807a208:  call 804ef50
 807a20d:  add esp, 0x10
 807a210:  pop ebx
 807a211:  pop esi
 807a212:  pop ebp
 807a213:  ret
 807a214:  mov DWORD PTR [esp+0xc], 0x80b4706
 807a21c:  mov DWORD PTR [esp+0x8], 0x8e
 807a224:  mov DWORD PTR [esp+0x4], 0x80b466a
 807a22c:  mov DWORD PTR [esp], 0x80b4724
 807a233:  call 8051490
 807a238:  nop
 807a239:  lea esi, [esi]

0807a240 <_dl_allocate_static_tls>:
 807a240:  push ebp
 807a241:  mov ecx, eax
 807a243:  mov ebp, esp
 807a245:  sub esp, 0x18
 807a248:  mov DWORD PTR [ebp-0xc], ebx
 807a24b:  mov DWORD PTR [ebp-0x8], esi
 807a24e:  mov DWORD PTR [ebp-0x4], edi
 807a251:  cmp DWORD PTR [eax+0x23c], 0x1
 807a258:  je 807a268
 807a25a:  mov ebx, DWORD PTR [eax+0x234]
 807a260:  cmp ebx, DWORD PTR ds:0x80d2d90
 807a266:  jbe 807a280
 807a268:  mov edx, DWORD PTR [ecx+0x4]
 807a26b:  xor eax, eax
 807a26d:  xor ecx, ecx
 807a26f:  mov DWORD PTR [esp], 0x80b4748
 807a276:  call 807c080
 807a27b:  nop
 807a27c:  lea esi, [esi]
 807a280:  mov eax, ds:0x80d0d28
 807a285:  mov esi, DWORD PTR ds:0x80d2d8c
 807a28b:  sub eax, 0x470
 807a290:  sub eax, esi
 807a292:  mov DWORD PTR [ebp-0x14], eax
 807a295:  mov eax, DWORD PTR [ecx+0x238]
 807a29b:  mov edi, eax
 807a29d:  add edi, DWORD PTR [ecx+0x230]
 807a2a3:  cmp DWORD PTR [ebp-0x14], edi
 807a2a6:  jb 807a268
 807a2a8:  sub esi, eax
 807a2aa:  xor edx, edx
 807a2ac:  add esi, DWORD PTR [ebp-0x14]
 807a2af:  sub DWORD PTR [ebp-0x14], edi
 807a2b2:  mov eax, DWORD PTR [ebp-0x14]
 807a2b5:  mov DWORD PTR [ebp-0x10], esi
 807a2b8:  div ebx
 807a2ba:  mov edi, eax
 807a2bc:  imul edi, ebx
 807a2bf:  sub DWORD PTR [ebp-0x10], edi
 807a2c2:  mov eax, DWORD PTR [ebp-0x10]
 807a2c5:  mov ds:0x80d2d8c, eax
 807a2ca:  mov DWORD PTR [ecx+0x23c], eax
 807a2d0:  mov eax, DWORD PTR [ecx+0x14]
 807a2d3:  test BYTE PTR [eax+0x194], 0x4
 807a2da:  jne 807a2f0
 807a2dc:  or BYTE PTR [ecx+0x195], 0x4
 807a2e3:  mov ebx, DWORD PTR [ebp-0xc]
 807a2e6:  mov esi, DWORD PTR [ebp-0x8]
 807a2e9:  mov edi, DWORD PTR [ebp-0x4]
 807a2ec:  mov esp, ebp
 807a2ee:  pop ebp
 807a2ef:  ret
 807a2f0:  mov DWORD PTR [esp], ecx
 807a2f3:  call DWORD PTR ds:0x80d0d64
 807a2f9:  jmp 807a2e3
 807a2fb:  nop
 807a2fc:  lea esi, [esi]

0807a300 <_dl_relocate_object>:
 807a300:  push ebp
 807a301:  mov ebp, esp
 807a303:  push edi
 807a304:  push esi
 807a305:  push ebx
 807a306:  sub esp, 0xe8
 807a30c:  mov eax, DWORD PTR [ebp+0x8]
 807a30f:  test BYTE PTR [eax+0x194], 0x4
 807a316:  jne 807a5d8
 807a31c:  mov edx, DWORD PTR [ebp+0x14]
 807a31f:  test edx, edx
 807a321:  je 807ac78
 807a327:  test BYTE PTR ds:0x80d2dd0, 0x20
 807a32e:  jne 807bc8d
 807a334:  mov ebx, DWORD PTR [ebp+0x8]
 807a337:  mov eax, DWORD PTR [ebx+0x78]
 807a33a:  test eax, eax
 807a33c:  jne 807bcc9
 807a342:  mov DWORD PTR [ebp-0xd8], 0x0
 807a34c:  mov ebx, DWORD PTR [ebp+0x8]
 807a34f:  mov edi, DWORD PTR [ebp+0x10]
 807a352:  mov eax, DWORD PTR [ebx+0x34]
 807a355:  mov esi, DWORD PTR [ebx+0x7c]
 807a358:  test edi, edi
 807a35a:  mov eax, DWORD PTR [eax+0x4]
 807a35d:  setne BYTE PTR [ebp-0xd1]
 807a364:  test esi, esi
 807a366:  mov DWORD PTR [ebp-0xdc], eax
 807a36c:  jne 807a7b8
 807a372:  mov edx, DWORD PTR [ebp+0x8]
 807a375:  mov DWORD PTR [ebp-0x20], 0x0
 807a37c:  mov DWORD PTR [ebp-0x18], 0x0
 807a383:  mov DWORD PTR [ebp-0x24], 0x0
 807a38a:  mov eax, DWORD PTR [edx+0x64]
 807a38d:  mov DWORD PTR [ebp-0x28], 0x0
 807a394:  test eax, eax
 807a396:  je 807a3a7
 807a398:  mov eax, DWORD PTR [eax+0x4]
 807a39b:  mov DWORD PTR [ebp-0x28], eax
 807a39e:  mov eax, DWORD PTR [edx+0x68]
 807a3a1:  mov eax, DWORD PTR [eax+0x4]
 807a3a4:  mov DWORD PTR [ebp-0x24], eax
 807a3a7:  mov ecx, DWORD PTR [ebp+0x8]
 807a3aa:  mov eax, DWORD PTR [ecx+0x70]
 807a3ad:  test eax, eax
 807a3af:  je 807a3bb
 807a3b1:  cmp DWORD PTR [eax+0x4], 0x11
 807a3b5:  je 807ad08
 807a3bb:  mov edx, DWORD PTR [ebp+0x8]
 807a3be:  lea eax, [ebp-0x20]
 807a3c1:  mov DWORD PTR [ebp-0x58], eax
 807a3c4:  mov edx, DWORD PTR [edx]
 807a3c6:  mov DWORD PTR [ebp-0xe0], edx
 807a3cc:  mov ebx, DWORD PTR [ebp-0x58]
 807a3cf:  mov esi, ebx
 807a3d1:  mov ecx, DWORD PTR [ebx-0x4]
 807a3d4:  mov edx, DWORD PTR [esi]
 807a3d6:  mov ebx, DWORD PTR [ebx-0x8]
 807a3d9:  test edx, edx
 807a3db:  lea eax, [ebx+ecx]
 807a3de:  mov DWORD PTR [ebp-0xac], eax
 807a3e4:  je 807a5e0
 807a3ea:  cmp ebx, eax
 807a3ec:  jb 807a40d
 807a3ee:  jmp 807a8bc
 807a3f3:  nop
 807a3f4:  lea esi, [esi]
 807a3f8:  mov DWORD PTR [edi], 0x807f7e0
 807a3fe:  add ebx, 0x8
 807a401:  cmp DWORD PTR [ebp-0xac], ebx
 807a407:  jbe 807aa78
 807a40d:  mov eax, DWORD PTR [ebx+0x4]
 807a410:  mov edi, DWORD PTR [ebp-0xe0]
 807a416:  add edi, DWORD PTR [ebx]
 807a418:  movzx edx, al
 807a41b:  cmp edx, 0x7
 807a41e:  je 807aa50
 807a424:  cmp edx, 0x29
 807a427:  jne 807b4ae
 807a42d:  mov edx, eax
 807a42f:  shr edx, 0x8
 807a432:  test edx, edx
 807a434:  je 807a3f8
 807a436:  mov eax, DWORD PTR [edi+0x4]
 807a439:  test eax, eax
 807a43b:  je 807aab8
 807a441:  mov esi, DWORD PTR [ebp+0x8]
 807a444:  mov eax, DWORD PTR [esi+0x38]
 807a447:  mov ecx, DWORD PTR [eax+0x4]
 807a44a:  mov eax, DWORD PTR [esi+0xe4]
 807a450:  test eax, eax
 807a452:  je 807aac8
 807a458:  mov eax, DWORD PTR [eax+0x4]
 807a45b:  movzx eax, WORD PTR [eax+edx*2]
 807a45f:  shl edx, 0x4
 807a462:  lea edx, [ecx+edx]
 807a465:  mov DWORD PTR [ebp-0xbc], edx
 807a46b:  mov DWORD PTR [ebp-0x10], edx
 807a46e:  mov WORD PTR [ebp-0xd0], ax
 807a475:  mov eax, DWORD PTR [esi+0x170]
 807a47b:  mov DWORD PTR [ebp-0xc0], eax
 807a481:  movzx eax, BYTE PTR [edx+0xc]
 807a485:  shr al, 0x4
 807a488:  test al, al
 807a48a:  je 807a52c
 807a490:  mov ecx, edx
 807a492:  mov edx, DWORD PTR [ebp+0x8]
 807a495:  cmp ecx, DWORD PTR [edx+0x218]
 807a49b:  je 807bc0e
 807a4a1:  mov esi, DWORD PTR [ebp+0x8]
 807a4a4:  movzx eax, WORD PTR [ebp-0xd0]
 807a4ab:  mov ecx, DWORD PTR [ebp-0xc0]
 807a4b1:  mov edx, DWORD PTR [ebp+0x8]
 807a4b4:  mov DWORD PTR [esi+0x21c], 0x1
 807a4be:  mov esi, DWORD PTR [ebp-0x10]
 807a4c1:  and eax, 0x7fff
 807a4c6:  shl eax, 0x4
 807a4c9:  add ecx, eax
 807a4cb:  mov DWORD PTR [edx+0x218], esi
 807a4d1:  je 807b3c6
 807a4d7:  mov eax, DWORD PTR [ecx+0x4]
 807a4da:  xor edx, edx
 807a4dc:  test eax, eax
 807a4de:  je 807ad78
 807a4e4:  mov eax, DWORD PTR [ebp-0xdc]
 807a4ea:  add eax, DWORD PTR [esi]
 807a4ec:  mov DWORD PTR [esp+0x4], ecx
 807a4f0:  mov ecx, DWORD PTR [ebp+0xc]
 807a4f3:  mov DWORD PTR [esp+0xc], edx
 807a4f7:  mov edx, DWORD PTR [ebp+0x8]
 807a4fa:  mov DWORD PTR [esp+0x10], 0x0
 807a502:  mov DWORD PTR [esp+0x8], 0x1
 807a50a:  mov DWORD PTR [esp], ecx
 807a50d:  lea ecx, [ebp-0x10]
 807a510:  call 80791b0
 807a515:  mov edx, DWORD PTR [ebp+0x8]
 807a518:  mov esi, eax
 807a51a:  mov eax, DWORD PTR [ebp-0x10]
 807a51d:  sub esp, 0x14
 807a520:  mov DWORD PTR [edx+0x220], esi
 807a526:  mov DWORD PTR [edx+0x224], eax
 807a52c:  test esi, esi
 807a52e:  mov DWORD PTR [ebp-0xb8], 0x0
 807a538:  je 807a54a
 807a53a:  mov eax, DWORD PTR [ebp-0x10]
 807a53d:  mov ecx, DWORD PTR [esi]
 807a53f:  mov eax, DWORD PTR [eax+0x4]
 807a542:  add eax, ecx
 807a544:  mov DWORD PTR [ebp-0xb8], eax
 807a54a:  jmp DWORD PTR ds:0x80b4924
 807a550:  test edx, edx
 807a552:  je 807bdc5
 807a558:  cmp DWORD PTR [edi+0x23c], 0x1
 807a55f:  jbe 807bdb0
 807a565:  mov ecx, DWORD PTR [ebp-0x7c]
 807a568:  mov ebx, DWORD PTR [ebp-0x48]
 807a56b:  mov eax, DWORD PTR [ecx+0x8]
 807a56e:  add eax, DWORD PTR [edx+0x4]
 807a571:  sub eax, DWORD PTR [edi+0x23c]
 807a577:  mov DWORD PTR [ebx+0x4], eax
 807a57a:  mov DWORD PTR [ebx], 0x807f7c0
 807a580:  add DWORD PTR [ebp-0x7c], 0xc
 807a584:  mov ebx, DWORD PTR [ebp-0x7c]
 807a587:  cmp DWORD PTR [ebp-0x80], ebx
 807a58a:  ja 807b4c8
 807a590:  add DWORD PTR [ebp-0x5c], 0xc
 807a594:  lea eax, [ebp-0x24]
 807a597:  cmp DWORD PTR [ebp-0x5c], eax
 807a59a:  jne 807bacd
 807a5a0:  mov ecx, DWORD PTR [ebp+0x14]
 807a5a3:  test ecx, ecx
 807a5a5:  jne 807be78
 807a5ab:  mov esi, DWORD PTR [ebp+0x8]
 807a5ae:  or BYTE PTR [esi+0x194], 0x4
 807a5b5:  mov edx, DWORD PTR [ebp-0xd8]
 807a5bb:  test edx, edx
 807a5bd:  jne 807be32
 807a5c3:  mov ebx, DWORD PTR [ebp+0x8]
 807a5c6:  mov eax, DWORD PTR [ebx+0x248]
 807a5cc:  test eax, eax
 807a5ce:  je 807a5d8
 807a5d0:  mov eax, ebx
 807a5d2:  call 807a130
 807a5d7:  nop
 807a5d8:  lea esp, [ebp-0xc]
 807a5db:  pop ebx
 807a5dc:  pop esi
 807a5dd:  pop edi
 807a5de:  pop ebp
 807a5df:  ret
 807a5e0:  mov edx, DWORD PTR [ebp+0x8]
 807a5e3:  mov eax, DWORD PTR [edx+0x38]
 807a5e6:  mov edx, DWORD PTR [edx+0xbc]
 807a5ec:  mov eax, DWORD PTR [eax+0x4]
 807a5ef:  mov DWORD PTR [ebp-0x8c], eax
 807a5f5:  xor eax, eax
 807a5f7:  test edx, edx
 807a5f9:  je 807a60e
 807a5fb:  mov edx, DWORD PTR [edx+0x4]
 807a5fe:  mov eax, ecx
 807a600:  shr eax, 0x3
 807a603:  cmp eax, edx
 807a605:  ja 807ad88
 807a60b:  shl eax, 0x3
 807a60e:  cmp DWORD PTR [ebp+0x8], 0x0
 807a615:  lea eax, [ebx+eax]
 807a618:  mov DWORD PTR [ebp-0xa8], eax
 807a61e:  je 807a62e
 807a620:  mov edx, DWORD PTR [ebp-0xe0]
 807a626:  test edx, edx
 807a628:  jne 807ad98
 807a62e:  mov ecx, DWORD PTR [ebp+0x8]
 807a631:  mov eax, DWORD PTR [ecx+0xe4]
 807a637:  test eax, eax
 807a639:  je 807b76f
 807a63f:  mov eax, DWORD PTR [eax+0x4]
 807a642:  mov DWORD PTR [ebp-0xb0], eax
 807a648:  mov eax, DWORD PTR [ebp-0xa8]
 807a64e:  cmp DWORD PTR [ebp-0xac], eax
 807a654:  jbe 807bc39
 807a65a:  lea esi, [esi]
 807a660:  mov ecx, DWORD PTR [ebp-0xa8]
 807a666:  mov ebx, DWORD PTR [ebp-0xb0]
 807a66c:  mov esi, DWORD PTR [ebp-0xe0]
 807a672:  mov edx, DWORD PTR [ecx+0x4]
 807a675:  add esi, DWORD PTR [ecx]
 807a677:  mov ecx, DWORD PTR [ebp+0x8]
 807a67a:  mov eax, edx
 807a67c:  shr eax, 0x8
 807a67f:  movzx ebx, WORD PTR [ebx+eax*2]
 807a683:  shl eax, 0x4
 807a686:  add eax, DWORD PTR [ebp-0x8c]
 807a68c:  mov DWORD PTR [ebp-0xa0], esi
 807a692:  mov edi, DWORD PTR [ecx+0x170]
 807a698:  mov WORD PTR [ebp-0x9c], bx
 807a69f:  movzx ebx, dl
 807a6a2:  cmp ebx, 0x8
 807a6a5:  mov DWORD PTR [ebp-0xa4], eax
 807a6ab:  mov DWORD PTR [ebp-0x10], eax
 807a6ae:  je 807aaa0
 807a6b4:  test ebx, ebx
 807a6b6:  je 807a898
 807a6bc:  mov esi, DWORD PTR [ebp-0xa4]
 807a6c2:  movzx eax, BYTE PTR [esi+0xc]
 807a6c6:  mov esi, DWORD PTR [ebp+0x8]
 807a6c9:  shr al, 0x4
 807a6cc:  test al, al
 807a6ce:  je 807a791
 807a6d4:  mov edx, DWORD PTR [ebp-0xa4]
 807a6da:  cmp edx, DWORD PTR [esi+0x218]
 807a6e0:  je 807b2f4
 807a6e6:  cmp ebx, 0x7
 807a6e9:  sete cl
 807a6ec:  cmp ebx, 0x23
 807a6ef:  sete al
 807a6f2:  mov esi, eax
 807a6f4:  test cl, cl
 807a6f6:  jne 807a702
 807a6f8:  mov edx, esi
 807a6fa:  test dl, dl
 807a6fc:  je 807a828
 807a702:  mov edx, 0x1
 807a707:  xor eax, eax
 807a709:  cmp ebx, 0x5
 807a70c:  mov ecx, DWORD PTR [ebp+0x8]
 807a70f:  sete al
 807a712:  lea esi, [eax+eax]
 807a715:  movzx eax, WORD PTR [ebp-0x9c]
 807a71c:  or esi, edx
 807a71e:  mov edx, DWORD PTR [ebp+0x8]
 807a721:  mov DWORD PTR [ecx+0x21c], esi
 807a727:  mov ecx, DWORD PTR [ebp-0x10]
 807a72a:  and eax, 0x7fff
 807a72f:  shl eax, 0x4
 807a732:  add edi, eax
 807a734:  mov DWORD PTR [edx+0x218], ecx
 807a73a:  je 807ac6a
 807a740:  mov eax, DWORD PTR [edi+0x4]
 807a743:  xor edx, edx
 807a745:  test eax, eax
 807a747:  je 807ac68
 807a74d:  mov eax, DWORD PTR [ebp-0xdc]
 807a753:  add eax, DWORD PTR [ecx]
 807a755:  mov ecx, DWORD PTR [ebp+0xc]
 807a758:  mov DWORD PTR [esp+0xc], edx
 807a75c:  mov edx, DWORD PTR [ebp+0x8]
 807a75f:  mov DWORD PTR [esp+0x8], esi
 807a763:  mov DWORD PTR [esp+0x10], 0x0
 807a76b:  mov DWORD PTR [esp], ecx
 807a76e:  lea ecx, [ebp-0x10]
 807a771:  mov DWORD PTR [esp+0x4], edi
 807a775:  call 80791b0
 807a77a:  mov edx, DWORD PTR [ebp+0x8]
 807a77d:  mov esi, eax
 807a77f:  mov eax, DWORD PTR [ebp-0x10]
 807a782:  sub esp, 0x14
 807a785:  mov DWORD PTR [edx+0x220], esi
 807a78b:  mov DWORD PTR [edx+0x224], eax
 807a791:  xor edi, edi
 807a793:  test esi, esi
 807a795:  je 807a79f
 807a797:  mov eax, DWORD PTR [ebp-0x10]
 807a79a:  mov edi, DWORD PTR [eax+0x4]
 807a79d:  add edi, DWORD PTR [esi]
 807a79f:  cmp ebx, 0x29
 807a7a2:  jbe 807aab0
 807a7a8:  mov eax, DWORD PTR [ebp+0x8]
 807a7ab:  xor ecx, ecx
 807a7ad:  mov edx, ebx
 807a7af:  call 807a0d0
 807a7b4:  lea esi, [esi]
 807a7b8:  cmp BYTE PTR [ebp-0xd1], 0x0
 807a7bf:  je 807a372
 807a7c5:  mov eax, DWORD PTR [ebx+0x2c]
 807a7c8:  mov edx, DWORD PTR [eax+0x4]
 807a7cb:  mov eax, DWORD PTR [edx+0x4]
 807a7ce:  test eax, eax
 807a7d0:  je 807a7e3
 807a7d2:  add eax, DWORD PTR [ebx]
 807a7d4:  mov DWORD PTR [ebx+0x20c], eax
 807a7da:  lea eax, [edx+0xc]
 807a7dd:  mov DWORD PTR [ebx+0x210], eax
 807a7e3:  mov esi, DWORD PTR [ebp+0x8]
 807a7e6:  mov DWORD PTR [edx+0x4], esi
 807a7e9:  mov ecx, DWORD PTR [ebp+0x14]
 807a7ec:  test ecx, ecx
 807a7ee:  je 807ad48
 807a7f4:  mov eax, ds:0x80d2de4
 807a7f9:  mov DWORD PTR [edx+0x8], 0x807f290
 807a800:  test eax, eax
 807a802:  je 807a372
 807a808:  mov edx, esi
 807a80a:  call 807c340
 807a80f:  test eax, eax
 807a811:  je 807a372
 807a817:  mov DWORD PTR ds:0x80d2e18, esi
 807a81d:  jmp 807a372
 807a822:  lea esi, [esi]
 807a828:  cmp ebx, 0x24
 807a82b:  nop
 807a82c:  lea esi, [esi]
 807a830:  je 807a702
 807a836:  cmp ebx, 0x25
 807a839:  lea esi, [esi]
 807a840:  je 807a702
 807a846:  cmp ebx, 0xe
 807a849:  sete al
 807a84c:  cmp ebx, 0x29
 807a84f:  sete dl
 807a852:  or eax, edx
 807a854:  movzx edx, al
 807a857:  jmp 807a707
 807a85c:  mov edi, DWORD PTR [ebp-0x10]
 807a85f:  test edi, edi
 807a861:  je 807bae0
 807a867:  cmp DWORD PTR [esi+0x23c], 0x1
 807a86e:  jbe 807bb6e
 807a874:  mov edx, DWORD PTR [ebp-0xa0]
 807a87a:  mov ecx, DWORD PTR [ebp-0xa0]
 807a880:  mov eax, DWORD PTR [edx+0x4]
 807a883:  mov edx, DWORD PTR [ebp-0x10]
 807a886:  add eax, DWORD PTR [edx+0x4]
 807a889:  sub eax, DWORD PTR [esi+0x23c]
 807a88f:  mov DWORD PTR [ecx+0x4], eax
 807a892:  mov DWORD PTR [ecx], 0x807f7c0
 807a898:  add DWORD PTR [ebp-0xa8], 0x8
 807a89f:  mov ebx, DWORD PTR [ebp-0xa8]
 807a8a5:  cmp DWORD PTR [ebp-0xac], ebx
 807a8ab:  ja 807a660
 807a8b1:  mov esi, DWORD PTR [ebp+0x8]
 807a8b4:  mov esi, DWORD PTR [esi]
 807a8b6:  mov DWORD PTR [ebp-0xe0], esi
 807a8bc:  add DWORD PTR [ebp-0x58], 0xc
 807a8c0:  lea eax, [ebp-0x8]
 807a8c3:  cmp DWORD PTR [ebp-0x58], eax
 807a8c6:  jne 807a3cc
 807a8cc:  mov esi, DWORD PTR [ebp+0x8]
 807a8cf:  mov DWORD PTR [ebp-0x38], 0x0
 807a8d6:  mov DWORD PTR [ebp-0x30], 0x0
 807a8dd:  mov DWORD PTR [ebp-0x3c], 0x0
 807a8e4:  mov eax, DWORD PTR [esi+0x3c]
 807a8e7:  mov DWORD PTR [ebp-0x40], 0x0
 807a8ee:  test eax, eax
 807a8f0:  je 807a901
 807a8f2:  mov eax, DWORD PTR [eax+0x4]
 807a8f5:  mov DWORD PTR [ebp-0x40], eax
 807a8f8:  mov eax, DWORD PTR [esi+0x40]
 807a8fb:  mov eax, DWORD PTR [eax+0x4]
 807a8fe:  mov DWORD PTR [ebp-0x3c], eax
 807a901:  mov edx, DWORD PTR [ebp+0x8]
 807a904:  mov eax, DWORD PTR [edx+0x70]
 807a907:  test eax, eax
 807a909:  je 807a915
 807a90b:  cmp DWORD PTR [eax+0x4], 0x7
 807a90f:  je 807add8
 807a915:  lea esi, [ebp-0x3c]
 807a918:  mov DWORD PTR [ebp-0x5c], esi
 807a91b:  mov ebx, esi
 807a91d:  mov edx, DWORD PTR [ebx]
 807a91f:  mov ecx, DWORD PTR [ebx-0x4]
 807a922:  mov ebx, DWORD PTR [ebp+0x8]
 807a925:  lea esi, [ecx+edx]
 807a928:  mov eax, DWORD PTR [ebx+0x38]
 807a92b:  mov DWORD PTR [ebp-0x80], esi
 807a92e:  mov ebx, DWORD PTR [ebx+0xc0]
 807a934:  mov eax, DWORD PTR [eax+0x4]
 807a937:  mov DWORD PTR [ebp-0x84], eax
 807a93d:  xor eax, eax
 807a93f:  test ebx, ebx
 807a941:  je 807a95e
 807a943:  mov eax, 0xaaaaaaab
 807a948:  mul edx
 807a94a:  mov eax, DWORD PTR [ebx+0x4]
 807a94d:  shr edx, 0x3
 807a950:  cmp edx, eax
 807a952:  ja 807ad58
 807a958:  lea eax, [edx+edx*2]
 807a95b:  shl eax, 0x2
 807a95e:  cmp DWORD PTR [ebp+0x8], 0x0
 807a965:  lea eax, [ecx+eax]
 807a968:  mov DWORD PTR [ebp-0x7c], eax
 807a96b:  je 807a99c
 807a96d:  mov eax, DWORD PTR [ebp-0xe0]
 807a973:  test eax, eax
 807a975:  je 807ad60
 807a97b:  cmp ecx, DWORD PTR [ebp-0x7c]
 807a97e:  jae 807a99c
 807a980:  mov edx, DWORD PTR [ecx]
 807a982:  mov eax, DWORD PTR [ebp-0xe0]
 807a988:  mov ebx, DWORD PTR [ebp-0xe0]
 807a98e:  add eax, DWORD PTR [ecx+0x8]
 807a991:  add ecx, 0xc
 807a994:  cmp DWORD PTR [ebp-0x7c], ecx
 807a997:  mov DWORD PTR [edx+ebx], eax
 807a99a:  ja 807a980
 807a99c:  mov esi, DWORD PTR [ebp+0x8]
 807a99f:  mov eax, DWORD PTR [esi+0xe4]
 807a9a5:  test eax, eax
 807a9a7:  je 807b4bb
 807a9ad:  mov eax, DWORD PTR [eax+0x4]
 807a9b0:  mov edx, DWORD PTR [ebp-0x7c]
 807a9b3:  cmp DWORD PTR [ebp-0x80], edx
 807a9b6:  mov DWORD PTR [ebp-0x88], eax
 807a9bc:  jbe 807a590
 807a9c2:  lea esi, [esi]
 807a9c8:  mov ebx, DWORD PTR [ebp-0x7c]
 807a9cb:  mov edx, DWORD PTR [ebp-0xe0]
 807a9d1:  mov esi, DWORD PTR [ebp-0x88]
 807a9d7:  mov ecx, DWORD PTR [ebx+0x4]
 807a9da:  add edx, DWORD PTR [ebx]
 807a9dc:  mov ebx, DWORD PTR [ebp+0x8]
 807a9df:  mov eax, ecx
 807a9e1:  shr eax, 0x8
 807a9e4:  mov ebx, DWORD PTR [ebx+0x170]
 807a9ea:  movzx esi, WORD PTR [esi+eax*2]
 807a9ee:  shl eax, 0x4
 807a9f1:  add eax, DWORD PTR [ebp-0x84]
 807a9f7:  mov DWORD PTR [ebp-0x70], edx
 807a9fa:  mov DWORD PTR [ebp-0x74], ebx
 807a9fd:  movzx ebx, cl
 807aa00:  cmp ebx, 0x8
 807aa03:  mov WORD PTR [ebp-0x6c], si
 807aa07:  mov DWORD PTR [ebp-0x78], eax
 807aa0a:  mov DWORD PTR [ebp-0x10], eax
 807aa0d:  je 807ab48
 807aa13:  test ebx, ebx
 807aa15:  je 807ab30
 807aa1b:  mov esi, DWORD PTR [ebp-0x78]
 807aa1e:  movzx eax, BYTE PTR [esi+0xc]
 807aa22:  shr al, 0x4
 807aa25:  test al, al
 807aa27:  jne 807ab70
 807aa2d:  mov edi, DWORD PTR [ebp+0x8]
 807aa30:  mov ecx, ebx
 807aa32:  mov edx, esi
 807aa34:  xor esi, esi
 807aa36:  test edx, edx
 807aa38:  je 807aa3f
 807aa3a:  mov esi, DWORD PTR [edx+0x4]
 807aa3d:  add esi, DWORD PTR [edi]
 807aa3f:  cmp ecx, 0x29
 807aa42:  ja 807a7a8
 807aa48:  jmp DWORD PTR [ecx*4+0x80b4928]
 807aa4f:  nop
 807aa50:  mov ecx, DWORD PTR [ebp+0x8]
 807aa53:  mov edx, DWORD PTR [ecx+0x20c]
 807aa59:  test edx, edx
 807aa5b:  jne 807aa88
 807aa5d:  mov esi, DWORD PTR [ebp-0xe0]
 807aa63:  add ebx, 0x8
 807aa66:  add DWORD PTR [edi], esi
 807aa68:  cmp DWORD PTR [ebp-0xac], ebx
 807aa6e:  ja 807a40d
 807aa74:  lea esi, [esi]
 807aa78:  mov eax, DWORD PTR [ebp+0x8]
 807aa7b:  mov eax, DWORD PTR [eax]
 807aa7d:  mov DWORD PTR [ebp-0xe0], eax
 807aa83:  jmp 807a8bc
 807aa88:  mov eax, edi
 807aa8a:  sub eax, DWORD PTR [ecx+0x210]
 807aa90:  lea eax, [edx+eax*4]
 807aa93:  mov DWORD PTR [edi], eax
 807aa95:  jmp 807a3fe
 807aa9a:  lea esi, [esi]
 807aaa0:  mov eax, DWORD PTR [ecx]
 807aaa2:  add DWORD PTR [esi], eax
 807aaa4:  jmp 807a898
 807aaa9:  lea esi, [esi]
 807aab0:  jmp DWORD PTR [ebx*4+0x80b49d0]
 807aab7:  nop
 807aab8:  mov DWORD PTR [edi+0x4], ebx
 807aabb:  mov DWORD PTR [edi], 0x807f800
 807aac1:  jmp 807a3fe
 807aac6:  xchg ax, ax
 807aac8:  shl edx, 0x4
 807aacb:  lea edx, [ecx+edx]
 807aace:  mov DWORD PTR [ebp-0x54], edx
 807aad1:  mov DWORD PTR [ebp-0x10], edx
 807aad4:  movzx eax, BYTE PTR [edx+0xc]
 807aad8:  shr al, 0x4
 807aadb:  test al, al
 807aadd:  jne 807ac90
 807aae3:  test esi, esi
 807aae5:  mov DWORD PTR [ebp-0xb4], 0x0
 807aaef:  je 807ab01
 807aaf1:  mov eax, DWORD PTR [ebp-0x10]
 807aaf4:  mov ecx, DWORD PTR [esi]
 807aaf6:  mov eax, DWORD PTR [eax+0x4]
 807aaf9:  add eax, ecx
 807aafb:  mov DWORD PTR [ebp-0xb4], eax
 807ab01:  jmp DWORD PTR ds:0x80b4b1c
 807ab07:  test edx, edx
 807ab09:  je 807ab30
 807ab0b:  cmp DWORD PTR [edi+0x23c], 0x1
 807ab12:  jbe 807baac
 807ab18:  mov ecx, DWORD PTR [ebp-0x7c]
 807ab1b:  mov ebx, DWORD PTR [ebp-0x70]
 807ab1e:  mov eax, DWORD PTR [ecx+0x8]
 807ab21:  add eax, DWORD PTR [edx+0x4]
 807ab24:  sub eax, DWORD PTR [edi+0x23c]
 807ab2a:  mov DWORD PTR [ebx], eax
 807ab2c:  lea esi, [esi]
 807ab30:  add DWORD PTR [ebp-0x7c], 0xc
 807ab34:  mov ebx, DWORD PTR [ebp-0x7c]
 807ab37:  cmp DWORD PTR [ebp-0x80], ebx
 807ab3a:  ja 807a9c8
 807ab40:  jmp 807a590
 807ab45:  lea esi, [esi]
 807ab48:  mov esi, DWORD PTR [ebp-0x7c]
 807ab4b:  mov ecx, edx
 807ab4d:  mov edx, DWORD PTR [ebp+0x8]
 807ab50:  add DWORD PTR [ebp-0x7c], 0xc
 807ab54:  mov ebx, DWORD PTR [ebp-0x7c]
 807ab57:  mov eax, DWORD PTR [esi+0x8]
 807ab5a:  add eax, DWORD PTR [edx]
 807ab5c:  cmp DWORD PTR [ebp-0x80], ebx
 807ab5f:  mov DWORD PTR [ecx], eax
 807ab61:  ja 807a9c8
 807ab67:  jmp 807a590
 807ab6c:  lea esi, [esi]
 807ab70:  mov eax, DWORD PTR [ebp+0x8]
 807ab73:  cmp esi, DWORD PTR [eax+0x218]
 807ab79:  je 807b280
 807ab7f:  cmp ebx, 0x7
 807ab82:  sete cl
 807ab85:  cmp ebx, 0x23
 807ab88:  sete al
 807ab8b:  mov esi, ecx
 807ab8d:  mov edi, eax
 807ab8f:  mov edx, esi
 807ab91:  test dl, dl
 807ab93:  jne 807ab9f
 807ab95:  mov ecx, edi
 807ab97:  test cl, cl
 807ab99:  je 807ac40
 807ab9f:  mov edx, 0x1
 807aba4:  xor eax, eax
 807aba6:  cmp ebx, 0x5
 807aba9:  mov edi, DWORD PTR [ebp-0x74]
 807abac:  sete al
 807abaf:  mov ecx, DWORD PTR [ebp+0x8]
 807abb2:  lea esi, [eax+eax]
 807abb5:  movzx eax, WORD PTR [ebp-0x6c]
 807abb9:  or esi, edx
 807abbb:  mov edx, DWORD PTR [ebp+0x8]
 807abbe:  and eax, 0x7fff
 807abc3:  mov DWORD PTR [edx+0x21c], esi
 807abc9:  mov edx, DWORD PTR [ebp-0x10]
 807abcc:  shl eax, 0x4
 807abcf:  add edi, eax
 807abd1:  mov DWORD PTR [ecx+0x218], edx
 807abd7:  je 807abe4
 807abd9:  mov eax, DWORD PTR [edi+0x4]
 807abdc:  xor ecx, ecx
 807abde:  test eax, eax
 807abe0:  jne 807abe9
 807abe2:  xor edi, edi
 807abe4:  mov ecx, 0x1
 807abe9:  mov eax, DWORD PTR [ebp-0xdc]
 807abef:  add eax, DWORD PTR [edx]
 807abf1:  mov DWORD PTR [esp+0x8], esi
 807abf5:  mov edx, DWORD PTR [ebp+0x8]
 807abf8:  mov esi, DWORD PTR [ebp+0xc]
 807abfb:  mov DWORD PTR [esp+0xc], ecx
 807abff:  lea ecx, [ebp-0x10]
 807ac02:  mov DWORD PTR [esp+0x4], edi
 807ac06:  mov DWORD PTR [esp+0x10], 0x0
 807ac0e:  mov DWORD PTR [esp], esi
 807ac11:  call 80791b0
 807ac16:  mov edx, DWORD PTR [ebp-0x10]
 807ac19:  mov esi, DWORD PTR [ebp-0x7c]
 807ac1c:  movzx ecx, BYTE PTR [esi+0x4]
 807ac20:  mov edi, eax
 807ac22:  mov eax, DWORD PTR [ebp+0x8]
 807ac25:  sub esp, 0x14
 807ac28:  mov DWORD PTR [eax+0x224], edx
 807ac2e:  mov DWORD PTR [eax+0x220], edi
 807ac34:  jmp 807aa34
 807ac39:  lea esi, [esi]
 807ac40:  cmp ebx, 0x24
 807ac43:  je 807ab9f
 807ac49:  cmp ebx, 0x25
 807ac4c:  je 807ab9f
 807ac52:  cmp ebx, 0xe
 807ac55:  sete al
 807ac58:  cmp ebx, 0x29
 807ac5b:  sete dl
 807ac5e:  or eax, edx
 807ac60:  movzx edx, al
 807ac63:  jmp 807aba4
 807ac68:  xor edi, edi
 807ac6a:  mov edx, 0x1
 807ac6f:  jmp 807a74d
 807ac74:  lea esi, [esi]
 807ac78:  cmp DWORD PTR [eax+0x80], 0x1
 807ac7f:  sbb eax, eax
 807ac81:  and DWORD PTR [ebp+0x10], eax
 807ac84:  jmp 807a327
 807ac89:  lea esi, [esi]
 807ac90:  cmp edx, DWORD PTR [esi+0x218]
 807ac96:  je 807b3d0
 807ac9c:  mov ecx, DWORD PTR [ebp+0x8]
 807ac9f:  mov eax, DWORD PTR [ebp-0x10]
 807aca2:  mov esi, DWORD PTR [ebp+0xc]
 807aca5:  mov edx, DWORD PTR [ebp+0x8]
 807aca8:  mov DWORD PTR [ecx+0x21c], 0x1
 807acb2:  mov DWORD PTR [ecx+0x218], eax
 807acb8:  mov eax, DWORD PTR [eax]
 807acba:  lea ecx, [ebp-0x10]
 807acbd:  add eax, DWORD PTR [ebp-0xdc]
 807acc3:  mov DWORD PTR [esp], esi
 807acc6:  mov DWORD PTR [esp+0x10], 0x0
 807acce:  mov DWORD PTR [esp+0xc], 0x1
 807acd6:  mov DWORD PTR [esp+0x8], 0x1
 807acde:  mov DWORD PTR [esp+0x4], 0x0
 807ace6:  call 80791b0
 807aceb:  mov edx, DWORD PTR [ebp+0x8]
 807acee:  mov esi, eax
 807acf0:  mov eax, DWORD PTR [ebp-0x10]
 807acf3:  sub esp, 0x14
 807acf6:  mov DWORD PTR [edx+0x220], esi
 807acfc:  mov DWORD PTR [edx+0x224], eax
 807ad02:  jmp 807aae3
 807ad07:  nop
 807ad08:  mov eax, DWORD PTR [ecx+0x7c]
 807ad0b:  cmp BYTE PTR [ebp-0xd1], 0x0
 807ad12:  mov ecx, DWORD PTR [eax+0x4]
 807ad15:  jne 807ad27
 807ad17:  mov edx, DWORD PTR [ebp-0x24]
 807ad1a:  mov eax, edx
 807ad1c:  add eax, DWORD PTR [ebp-0x28]
 807ad1f:  cmp eax, ecx
 807ad21:  je 807b3b5
 807ad27:  mov ebx, DWORD PTR [ebp+0x8]
 807ad2a:  mov DWORD PTR [ebp-0x1c], ecx
 807ad2d:  mov esi, DWORD PTR [ebp+0x10]
 807ad30:  mov eax, DWORD PTR [ebx+0x28]
 807ad33:  mov eax, DWORD PTR [eax+0x4]
 807ad36:  mov DWORD PTR [ebp-0x14], esi
 807ad39:  mov DWORD PTR [ebp-0x18], eax
 807ad3c:  jmp 807a3bb
 807ad41:  lea esi, [esi]
 807ad48:  mov DWORD PTR [edx+0x8], 0x807f270
 807ad4f:  jmp 807a372
 807ad54:  lea esi, [esi]
 807ad58:  mov edx, eax
 807ad5a:  jmp 807a958
 807ad5f:  nop
 807ad60:  mov eax, DWORD PTR [ebp+0x8]
 807ad63:  mov eax, DWORD PTR [eax+0x11c]
 807ad69:  test eax, eax
 807ad6b:  jne 807a99c
 807ad71:  jmp 807a97b
 807ad76:  xchg ax, ax
 807ad78:  mov edx, 0x1
 807ad7d:  xor ecx, ecx
 807ad7f:  jmp 807a4e4
 807ad84:  lea esi, [esi]
 807ad88:  mov eax, edx
 807ad8a:  lea esi, [esi]
 807ad90:  jmp 807a60b
 807ad95:  lea esi, [esi]
 807ad98:  cmp ebx, eax
 807ad9a:  lea esi, [esi]
 807ada0:  jae 807a62e
 807ada6:  xchg ax, ax
 807ada8:  cmp BYTE PTR [ebx+0x4], 0x8
 807adac:  mov eax, DWORD PTR [ebx]
 807adae:  xchg ax, ax
 807adb0:  jne 807ba62
 807adb6:  add eax, DWORD PTR [ebp-0xe0]
 807adbc:  add ebx, 0x8
 807adbf:  mov edx, DWORD PTR [ebp-0xe0]
 807adc5:  add DWORD PTR [eax], edx
 807adc7:  cmp DWORD PTR [ebp-0xa8], ebx
 807adcd:  ja 807ada8
 807adcf:  jmp 807a62e
 807add4:  lea esi, [esi]
 807add8:  mov eax, DWORD PTR [edx+0x7c]
 807addb:  cmp BYTE PTR [ebp-0xd1], 0x0
 807ade2:  mov ecx, DWORD PTR [eax+0x4]
 807ade5:  jne 807b0e4
 807adeb:  mov edx, DWORD PTR [ebp-0x3c]
 807adee:  mov eax, edx
 807adf0:  add eax, DWORD PTR [ebp-0x40]
 807adf3:  cmp eax, ecx
 807adf5:  jne 807b0e4
 807adfb:  mov ecx, DWORD PTR [ebp+0x8]
 807adfe:  mov eax, DWORD PTR [ecx+0x28]
 807ae01:  add edx, DWORD PTR [eax+0x4]
 807ae04:  mov DWORD PTR [ebp-0x3c], edx
 807ae07:  jmp 807a915
 807ae0c:  mov ecx, DWORD PTR [ebp-0x7c]
 807ae0f:  mov ebx, DWORD PTR [ebp-0x70]
 807ae12:  sub esi, DWORD PTR [ebp-0x70]
 807ae15:  add DWORD PTR [ebp-0x7c], 0xc
 807ae19:  add esi, DWORD PTR [ecx+0x8]
 807ae1c:  mov DWORD PTR [ebx], esi
 807ae1e:  mov ebx, DWORD PTR [ebp-0x7c]
 807ae21:  cmp DWORD PTR [ebp-0x80], ebx
 807ae24:  ja 807a9c8
 807ae2a:  jmp 807a590
 807ae2f:  nop
 807ae30:  test edx, edx
 807ae32:  je 807ba86
 807ae38:  cmp DWORD PTR [edi+0x23c], 0x1
 807ae3f:  nop
 807ae40:  jbe 807ba9d
 807ae46:  mov ecx, DWORD PTR [ebp-0x7c]
 807ae49:  mov ebx, DWORD PTR [ebp-0x70]
 807ae4c:  mov eax, DWORD PTR [ecx+0x8]
 807ae4f:  add eax, DWORD PTR [edx+0x4]
 807ae52:  sub eax, DWORD PTR [edi+0x23c]
 807ae58:  mov DWORD PTR [ebx+0x4], eax
 807ae5b:  mov DWORD PTR [ebx], 0x807f7c0
 807ae61:  jmp 807ab30
 807ae66:  test edx, edx
 807ae68:  je 807ab30
 807ae6e:  cmp DWORD PTR [edi+0x23c], 0x1
 807ae75:  jbe 807babd
 807ae7b:  mov esi, DWORD PTR [ebp-0x7c]
 807ae7e:  mov eax, DWORD PTR [esi+0x8]
 807ae81:  add eax, DWORD PTR [edi+0x23c]
 807ae87:  sub eax, DWORD PTR [edx+0x4]
 807ae8a:  mov edx, DWORD PTR [ebp-0x70]
 807ae8d:  mov DWORD PTR [edx], eax
 807ae8f:  jmp 807ab30
 807ae94:  xor eax, eax
 807ae96:  test edx, edx
 807ae98:  je 807ae9d
 807ae9a:  mov eax, DWORD PTR [edx+0x4]
 807ae9d:  mov edx, DWORD PTR [ebp-0x7c]
 807aea0:  add DWORD PTR [ebp-0x7c], 0xc
 807aea4:  mov ecx, DWORD PTR [ebp-0x70]
 807aea7:  mov ebx, DWORD PTR [ebp-0x7c]
 807aeaa:  add eax, DWORD PTR [edx+0x8]
 807aead:  cmp DWORD PTR [ebp-0x80], ebx
 807aeb0:  mov DWORD PTR [ecx], eax
 807aeb2:  ja 807a9c8
 807aeb8:  jmp 807a590
 807aebd:  lea esi, [esi]
 807aec0:  test edi, edi
 807aec2:  je 807ab30
 807aec8:  mov eax, DWORD PTR [edi+0x240]
 807aece:  mov esi, DWORD PTR [ebp-0x70]
 807aed1:  mov DWORD PTR [esi], eax
 807aed3:  jmp 807ab30
 807aed8:  test edx, edx
 807aeda:  je 807ab30
 807aee0:  mov eax, DWORD PTR [ebp-0x78]
 807aee3:  mov ecx, DWORD PTR [eax+0x8]
 807aee6:  cmp DWORD PTR [edx+0x8], ecx
 807aee9:  jbe 807b36b
 807aeef:  mov edx, DWORD PTR [ebp+0x8]
 807aef2:  mov eax, DWORD PTR [edx+0x34]
 807aef5:  mov edx, 0x80b469b
 807aefa:  mov ebx, DWORD PTR [eax+0x4]
 807aefd:  mov eax, DWORD PTR [ebp-0x78]
 807af00:  mov ecx, DWORD PTR [eax]
 807af02:  mov eax, ds:0x80d0cd0
 807af07:  mov eax, DWORD PTR [eax]
 807af09:  test eax, eax
 807af0b:  je 807af0f
 807af0d:  mov edx, eax
 807af0f:  lea eax, [ebx+ecx]
 807af12:  mov DWORD PTR [esp+0x8], edx
 807af16:  mov DWORD PTR [esp+0xc], eax
 807af1a:  mov DWORD PTR [esp+0x4], 0x80b47a0
 807af22:  mov DWORD PTR [esp], 0x2
 807af29:  call 807c890
 807af2e:  mov edx, DWORD PTR [ebp-0x78]
 807af31:  mov ecx, DWORD PTR [edx+0x8]
 807af34:  mov edx, DWORD PTR [ebp-0x10]
 807af37:  mov eax, DWORD PTR [edx+0x8]
 807af3a:  mov edx, ecx
 807af3c:  cmp ecx, eax
 807af3e:  ja 807b364
 807af44:  mov ecx, DWORD PTR [ebp-0x70]
 807af47:  mov DWORD PTR [esp+0x8], edx
 807af4b:  mov DWORD PTR [esp+0x4], esi
 807af4f:  mov DWORD PTR [esp], ecx
 807af52:  call 804efc0
 807af57:  jmp 807ab30
 807af5c:  mov eax, DWORD PTR [ebp-0x7c]
 807af5f:  add DWORD PTR [ebp-0x7c], 0xc
 807af63:  mov edx, DWORD PTR [ebp-0x70]
 807af66:  mov ebx, DWORD PTR [ebp-0x7c]
 807af69:  add esi, DWORD PTR [eax+0x8]
 807af6c:  cmp DWORD PTR [ebp-0x80], ebx
 807af6f:  mov DWORD PTR [edx], esi
 807af71:  ja 807a9c8
 807af77:  jmp 807a590
 807af7c:  lea esi, [esi]
 807af80:  mov ebx, DWORD PTR [ebp-0x10]
 807af83:  test ebx, ebx
 807af85:  je 807a898
 807af8b:  cmp DWORD PTR [esi+0x23c], 0x1
 807af92:  lea esi, [esi]
 807af98:  jbe 807bb8d
 807af9e:  mov edx, DWORD PTR [ebp-0x10]
 807afa1:  mov ebx, DWORD PTR [ebp-0xa0]
 807afa7:  mov eax, DWORD PTR [esi+0x23c]
 807afad:  sub eax, DWORD PTR [edx+0x4]
 807afb0:  add DWORD PTR [ebx], eax
 807afb2:  jmp 807a898
 807afb7:  mov eax, DWORD PTR [ebp-0x10]
 807afba:  test eax, eax
 807afbc:  je 807a898
 807afc2:  mov eax, DWORD PTR [eax+0x4]
 807afc5:  mov esi, DWORD PTR [ebp-0xa0]
 807afcb:  mov DWORD PTR [esi], eax
 807afcd:  jmp 807a898
 807afd2:  test esi, esi
 807afd4:  je 807a898
 807afda:  mov eax, DWORD PTR [esi+0x240]
 807afe0:  mov ebx, DWORD PTR [ebp-0xa0]
 807afe6:  mov DWORD PTR [ebx], eax
 807afe8:  jmp 807a898
 807afed:  mov ecx, DWORD PTR [ebp-0x10]
 807aff0:  test ecx, ecx
 807aff2:  je 807a898
 807aff8:  cmp DWORD PTR [esi+0x23c], 0x1
 807afff:  jbe 807bb7a
 807b005:  mov eax, DWORD PTR [ebp-0x10]
 807b008:  mov eax, DWORD PTR [eax+0x4]
 807b00b:  sub eax, DWORD PTR [esi+0x23c]
 807b011:  mov esi, DWORD PTR [ebp-0xa0]
 807b017:  add DWORD PTR [esi], eax
 807b019:  jmp 807a898
 807b01e:  mov ecx, DWORD PTR [ebp-0xa0]
 807b024:  mov DWORD PTR [ecx], edi
 807b026:  jmp 807a898
 807b02b:  mov eax, DWORD PTR [ebp-0xa0]
 807b031:  add DWORD PTR [eax], edi
 807b033:  jmp 807a898
 807b038:  mov ecx, DWORD PTR [ebp-0x10]
 807b03b:  test ecx, ecx
 807b03d:  je 807a898
 807b043:  mov ebx, DWORD PTR [ebp-0xa4]
 807b049:  mov eax, DWORD PTR [ebx+0x8]
 807b04c:  cmp DWORD PTR [ecx+0x8], eax
 807b04f:  ja 807b05d
 807b051:  jae 807b0ab
 807b053:  mov edx, DWORD PTR ds:0x80d2e10
 807b059:  test edx, edx
 807b05b:  je 807b0ab
 807b05d:  mov esi, DWORD PTR [ebp+0x8]
 807b060:  mov edx, 0x80b469b
 807b065:  mov eax, DWORD PTR [esi+0x34]
 807b068:  mov ebx, DWORD PTR [eax+0x4]
 807b06b:  mov eax, DWORD PTR [ebp-0xa4]
 807b071:  mov ecx, DWORD PTR [eax]
 807b073:  mov eax, ds:0x80d0cd0
 807b078:  mov eax, DWORD PTR [eax]
 807b07a:  test eax, eax
 807b07c:  je 807b080
 807b07e:  mov edx, eax
 807b080:  lea eax, [ebx+ecx]
 807b083:  mov DWORD PTR [esp+0xc], eax
 807b087:  mov DWORD PTR [esp+0x8], edx
 807b08b:  mov DWORD PTR [esp+0x4], 0x80b47a0
 807b093:  mov DWORD PTR [esp], 0x2
 807b09a:  call 807c890
 807b09f:  mov edx, DWORD PTR [ebp-0xa4]
 807b0a5:  mov ecx, DWORD PTR [ebp-0x10]
 807b0a8:  mov eax, DWORD PTR [edx+0x8]
 807b0ab:  mov edx, DWORD PTR [ecx+0x8]
 807b0ae:  cmp eax, edx
 807b0b0:  ja 807b38d
 807b0b6:  mov ecx, DWORD PTR [ebp-0xa0]
 807b0bc:  mov DWORD PTR [esp+0x8], eax
 807b0c0:  mov DWORD PTR [esp+0x4], edi
 807b0c4:  mov DWORD PTR [esp], ecx
 807b0c7:  call 804efc0
 807b0cc:  jmp 807a898
 807b0d1:  mov edx, DWORD PTR [ebp-0xa0]
 807b0d7:  sub edi, DWORD PTR [ebp-0xa0]
 807b0dd:  add DWORD PTR [edx], edi
 807b0df:  jmp 807a898
 807b0e4:  mov DWORD PTR [ebp-0x34], ecx
 807b0e7:  mov ecx, DWORD PTR [ebp+0x8]
 807b0ea:  mov ebx, DWORD PTR [ebp+0x10]
 807b0ed:  mov eax, DWORD PTR [ecx+0x28]
 807b0f0:  mov eax, DWORD PTR [eax+0x4]
 807b0f3:  mov DWORD PTR [ebp-0x2c], ebx
 807b0f6:  mov DWORD PTR [ebp-0x30], eax
 807b0f9:  jmp 807a915
 807b0fe:  mov eax, DWORD PTR [ebp+0x8]
 807b101:  xor ecx, ecx
 807b103:  mov edx, 0x29
 807b108:  call 807a0d0
 807b10d:  mov eax, DWORD PTR [ebp-0x10]
 807b110:  test eax, eax
 807b112:  je 807bc49
 807b118:  cmp DWORD PTR [esi+0x23c], 0x1
 807b11f:  jbe 807bc54
 807b125:  mov edx, DWORD PTR [ebp-0x10]
 807b128:  mov eax, DWORD PTR [edi+0x4]
 807b12b:  add eax, DWORD PTR [edx+0x4]
 807b12e:  sub eax, DWORD PTR [esi+0x23c]
 807b134:  mov DWORD PTR [edi+0x4], eax
 807b137:  mov DWORD PTR [edi], 0x807f7c0
 807b13d:  jmp 807a3fe
 807b142:  mov eax, DWORD PTR [ebp-0x10]
 807b145:  test eax, eax
 807b147:  je 807a3fe
 807b14d:  cmp DWORD PTR [esi+0x23c], 0x1
 807b154:  jbe 807bc6d
 807b15a:  mov edx, DWORD PTR [ebp-0x10]
 807b15d:  mov eax, DWORD PTR [esi+0x23c]
 807b163:  sub eax, DWORD PTR [edx+0x4]
 807b166:  add DWORD PTR [edi], eax
 807b168:  jmp 807a3fe
 807b16d:  mov eax, DWORD PTR [ebp-0x10]
 807b170:  test eax, eax
 807b172:  je 807a3fe
 807b178:  mov eax, DWORD PTR [eax+0x4]
 807b17b:  mov DWORD PTR [edi], eax
 807b17d:  jmp 807a3fe
 807b182:  test esi, esi
 807b184:  je 807a3fe
 807b18a:  mov eax, DWORD PTR [esi+0x240]
 807b190:  mov DWORD PTR [edi], eax
 807b192:  jmp 807a3fe
 807b197:  mov eax, DWORD PTR [ebp-0x10]
 807b19a:  test eax, eax
 807b19c:  je 807a3fe
 807b1a2:  cmp DWORD PTR [esi+0x23c], 0x1
 807b1a9:  jbe 807bc60
 807b1af:  mov eax, DWORD PTR [ebp-0x10]
 807b1b2:  mov eax, DWORD PTR [eax+0x4]
 807b1b5:  sub eax, DWORD PTR [esi+0x23c]
 807b1bb:  add DWORD PTR [edi], eax
 807b1bd:  jmp 807a3fe
 807b1c2:  mov esi, DWORD PTR [ebp-0xb8]
 807b1c8:  mov DWORD PTR [edi], esi
 807b1ca:  jmp 807a3fe
 807b1cf:  mov esi, DWORD PTR [ebp-0x10]
 807b1d2:  test esi, esi
 807b1d4:  je 807a3fe
 807b1da:  mov ecx, DWORD PTR [ebp-0xbc]
 807b1e0:  mov eax, DWORD PTR [ecx+0x8]
 807b1e3:  cmp DWORD PTR [esi+0x8], eax
 807b1e6:  jbe 807b395
 807b1ec:  mov esi, DWORD PTR [ebp+0x8]
 807b1ef:  mov edx, 0x80b469b
 807b1f4:  mov eax, DWORD PTR [esi+0x34]
 807b1f7:  mov esi, DWORD PTR [eax+0x4]
 807b1fa:  mov eax, DWORD PTR [ebp-0xbc]
 807b200:  mov ecx, DWORD PTR [eax]
 807b202:  mov eax, ds:0x80d0cd0
 807b207:  mov eax, DWORD PTR [eax]
 807b209:  test eax, eax
 807b20b:  je 807b20f
 807b20d:  mov edx, eax
 807b20f:  lea eax, [esi+ecx]
 807b212:  mov DWORD PTR [esp+0xc], eax
 807b216:  mov DWORD PTR [esp+0x8], edx
 807b21a:  mov DWORD PTR [esp+0x4], 0x80b47a0
 807b222:  mov DWORD PTR [esp], 0x2
 807b229:  call 807c890
 807b22e:  mov edx, DWORD PTR [ebp-0xbc]
 807b234:  mov esi, DWORD PTR [ebp-0x10]
 807b237:  mov eax, DWORD PTR [edx+0x8]
 807b23a:  mov edx, DWORD PTR [esi+0x8]
 807b23d:  cmp eax, edx
 807b23f:  jbe 807b243
 807b241:  mov eax, edx
 807b243:  mov ecx, DWORD PTR [ebp-0xb8]
 807b249:  mov DWORD PTR [esp+0x8], eax
 807b24d:  mov DWORD PTR [esp], edi
 807b250:  mov DWORD PTR [esp+0x4], ecx
 807b254:  call 804efc0
 807b259:  jmp 807a3fe
 807b25e:  sub DWORD PTR [ebp-0xb8], edi
 807b264:  mov edx, DWORD PTR [ebp-0xb8]
 807b26a:  add DWORD PTR [edi], edx
 807b26c:  jmp 807a3fe
 807b271:  mov eax, DWORD PTR [ebp-0xb8]
 807b277:  add DWORD PTR [edi], eax
 807b279:  jmp 807a3fe
 807b27e:  xchg ax, ax
 807b280:  cmp ebx, 0x7
 807b283:  sete al
 807b286:  cmp ebx, 0x23
 807b289:  sete dl
 807b28c:  test al, al
 807b28e:  mov esi, eax
 807b290:  mov edi, edx
 807b292:  jne 807b2b8
 807b294:  test dl, dl
 807b296:  jne 807b2b8
 807b298:  cmp ebx, 0x24
 807b29b:  je 807b2b8
 807b29d:  cmp ebx, 0x25
 807b2a0:  je 807b2b8
 807b2a2:  cmp ebx, 0xe
 807b2a5:  sete al
 807b2a8:  cmp ebx, 0x29
 807b2ab:  sete dl
 807b2ae:  or eax, edx
 807b2b0:  movzx edx, al
 807b2b3:  jmp 807b2bd
 807b2b5:  lea esi, [esi]
 807b2b8:  mov edx, 0x1
 807b2bd:  xor eax, eax
 807b2bf:  cmp ebx, 0x5
 807b2c2:  sete al
 807b2c5:  add eax, eax
 807b2c7:  or eax, edx
 807b2c9:  mov edx, DWORD PTR [ebp+0x8]
 807b2cc:  cmp eax, DWORD PTR [edx+0x21c]
 807b2d2:  jne 807ab8f
 807b2d8:  mov eax, DWORD PTR [edx+0x224]
 807b2de:  and ecx, 0xff
 807b2e4:  mov edi, DWORD PTR [edx+0x220]
 807b2ea:  mov DWORD PTR [ebp-0x10], eax
 807b2ed:  mov edx, eax
 807b2ef:  jmp 807aa34
 807b2f4:  cmp ebx, 0x7
 807b2f7:  sete cl
 807b2fa:  cmp ebx, 0x23
 807b2fd:  sete al
 807b300:  test cl, cl
 807b302:  mov esi, eax
 807b304:  jne 807b330
 807b306:  test al, al
 807b308:  jne 807b330
 807b30a:  cmp ebx, 0x24
 807b30d:  je 807b330
 807b30f:  cmp ebx, 0x25
 807b312:  lea esi, [esi]
 807b318:  je 807b330
 807b31a:  cmp ebx, 0xe
 807b31d:  sete al
 807b320:  cmp ebx, 0x29
 807b323:  sete dl
 807b326:  or eax, edx
 807b328:  movzx edx, al
 807b32b:  jmp 807b335
 807b32d:  lea esi, [esi]
 807b330:  mov edx, 0x1
 807b335:  xor eax, eax
 807b337:  cmp ebx, 0x5
 807b33a:  sete al
 807b33d:  add eax, eax
 807b33f:  or eax, edx
 807b341:  mov edx, DWORD PTR [ebp+0x8]
 807b344:  cmp eax, DWORD PTR [edx+0x21c]
 807b34a:  jne 807a6f4
 807b350:  mov eax, DWORD PTR [edx+0x224]
 807b356:  mov esi, DWORD PTR [edx+0x220]
 807b35c:  mov DWORD PTR [ebp-0x10], eax
 807b35f:  jmp 807a791
 807b364:  mov edx, eax
 807b366:  jmp 807af44
 807b36b:  jae 807af37
 807b371:  mov edi, DWORD PTR ds:0x80d2e10
 807b377:  test edi, edi
 807b379:  lea esi, [esi]
 807b380:  je 807af37
 807b386:  xchg ax, ax
 807b388:  jmp 807aeef
 807b38d:  mov eax, edx
 807b38f:  nop
 807b390:  jmp 807b0b6
 807b395:  lea esi, [esi]
 807b398:  jae 807b23a
 807b39e:  mov edx, DWORD PTR ds:0x80d2e10
 807b3a4:  test edx, edx
 807b3a6:  xchg ax, ax
 807b3a8:  je 807b23a
 807b3ae:  xchg ax, ax
 807b3b0:  jmp 807b1ec
 807b3b5:  mov ecx, DWORD PTR [ebp+0x8]
 807b3b8:  mov eax, DWORD PTR [ecx+0x28]
 807b3bb:  add edx, DWORD PTR [eax+0x4]
 807b3be:  mov DWORD PTR [ebp-0x24], edx
 807b3c1:  jmp 807a3bb
 807b3c6:  mov edx, 0x1
 807b3cb:  jmp 807a4e4
 807b3d0:  cmp DWORD PTR [esi+0x21c], 0x1
 807b3d7:  jne 807ac9c
 807b3dd:  mov eax, DWORD PTR [esi+0x224]
 807b3e3:  mov esi, DWORD PTR [esi+0x220]
 807b3e9:  mov DWORD PTR [ebp-0x10], eax
 807b3ec:  jmp 807aae3
 807b3f1:  mov esi, DWORD PTR [ebp-0xb4]
 807b3f7:  mov DWORD PTR [edi], esi
 807b3f9:  jmp 807a3fe
 807b3fe:  mov eax, DWORD PTR [ebp-0x10]
 807b401:  test eax, eax
 807b403:  je 807a3fe
 807b409:  mov ecx, DWORD PTR [ebp-0x54]
 807b40c:  mov edx, DWORD PTR [ecx+0x8]
 807b40f:  cmp DWORD PTR [eax+0x8], edx
 807b412:  ja 807b420
 807b414:  jae 807b468
 807b416:  mov ecx, DWORD PTR ds:0x80d2e10
 807b41c:  test ecx, ecx
 807b41e:  je 807b468
 807b420:  mov esi, DWORD PTR [ebp+0x8]
 807b423:  mov edx, 0x80b469b
 807b428:  mov eax, DWORD PTR [esi+0x34]
 807b42b:  mov ecx, DWORD PTR [eax+0x4]
 807b42e:  mov eax, DWORD PTR [ebp-0x54]
 807b431:  mov esi, DWORD PTR [eax]
 807b433:  mov eax, ds:0x80d0cd0
 807b438:  mov eax, DWORD PTR [eax]
 807b43a:  test eax, eax
 807b43c:  je 807b440
 807b43e:  mov edx, eax
 807b440:  lea eax, [ecx+esi]
 807b443:  mov DWORD PTR [esp+0xc], eax
 807b447:  mov DWORD PTR [esp+0x8], edx
 807b44b:  mov DWORD PTR [esp+0x4], 0x80b47a0
 807b453:  mov DWORD PTR [esp], 0x2
 807b45a:  call 807c890
 807b45f:  mov ecx, DWORD PTR [ebp-0x54]
 807b462:  mov eax, DWORD PTR [ebp-0x10]
 807b465:  mov edx, DWORD PTR [ecx+0x8]
 807b468:  mov ecx, DWORD PTR [eax+0x8]
 807b46b:  mov eax, edx
 807b46d:  cmp edx, ecx
 807b46f:  jbe 807b473
 807b471:  mov eax, ecx
 807b473:  mov esi, DWORD PTR [ebp-0xb4]
 807b479:  mov DWORD PTR [esp+0x8], eax
 807b47d:  mov DWORD PTR [esp], edi
 807b480:  mov DWORD PTR [esp+0x4], esi
 807b484:  call 804efc0
 807b489:  jmp 807a3fe
 807b48e:  sub DWORD PTR [ebp-0xb4], edi
 807b494:  mov edx, DWORD PTR [ebp-0xb4]
 807b49a:  add DWORD PTR [edi], edx
 807b49c:  jmp 807a3fe
 807b4a1:  mov eax, DWORD PTR [ebp-0xb4]
 807b4a7:  add DWORD PTR [edi], eax
 807b4a9:  jmp 807a3fe
 807b4ae:  mov eax, DWORD PTR [ebp+0x8]
 807b4b1:  mov ecx, 0x1
 807b4b6:  call 807a0d0
 807b4bb:  mov eax, DWORD PTR [ebp-0x7c]
 807b4be:  cmp DWORD PTR [ebp-0x80], eax
 807b4c1:  jbe 807a590
 807b4c7:  nop
 807b4c8:  mov esi, DWORD PTR [ebp-0x7c]
 807b4cb:  mov eax, DWORD PTR [ebp-0xe0]
 807b4d1:  mov ecx, DWORD PTR [esi+0x4]
 807b4d4:  add eax, DWORD PTR [esi]
 807b4d6:  mov DWORD PTR [ebp-0x48], eax
 807b4d9:  mov eax, ecx
 807b4db:  movzx ebx, cl
 807b4de:  shr eax, 0x8
 807b4e1:  shl eax, 0x4
 807b4e4:  add eax, DWORD PTR [ebp-0x84]
 807b4ea:  cmp ebx, 0x8
 807b4ed:  mov DWORD PTR [ebp-0x44], eax
 807b4f0:  mov DWORD PTR [ebp-0x10], eax
 807b4f3:  je 807b680
 807b4f9:  test ebx, ebx
 807b4fb:  je 807a580
 807b501:  mov esi, DWORD PTR [ebp-0x44]
 807b504:  movzx eax, BYTE PTR [esi+0xc]
 807b508:  shr al, 0x4
 807b50b:  test al, al
 807b50d:  jne 807b698
 807b513:  mov edi, DWORD PTR [ebp+0x8]
 807b516:  mov ecx, ebx
 807b518:  mov edx, esi
 807b51a:  xor esi, esi
 807b51c:  test edx, edx
 807b51e:  je 807b525
 807b520:  mov esi, DWORD PTR [edx+0x4]
 807b523:  add esi, DWORD PTR [edi]
 807b525:  cmp ecx, 0x29
 807b528:  ja 807a7a8
 807b52e:  jmp DWORD PTR [ecx*4+0x80b4b20]
 807b535:  test edx, edx
 807b537:  nop
 807b538:  je 807a580
 807b53e:  cmp DWORD PTR [edi+0x23c], 0x1
 807b545:  lea esi, [esi]
 807b548:  jbe 807bddc
 807b54e:  mov ecx, DWORD PTR [ebp-0x7c]
 807b551:  mov ebx, DWORD PTR [ebp-0x48]
 807b554:  mov eax, DWORD PTR [ecx+0x8]
 807b557:  add eax, DWORD PTR [edx+0x4]
 807b55a:  sub eax, DWORD PTR [edi+0x23c]
 807b560:  mov DWORD PTR [ebx], eax
 807b562:  jmp 807a580
 807b567:  test edx, edx
 807b569:  je 807a580
 807b56f:  mov eax, DWORD PTR [ebp-0x44]
 807b572:  mov ecx, DWORD PTR [eax+0x8]
 807b575:  cmp DWORD PTR [edx+0x8], ecx
 807b578:  ja 807b58c
 807b57a:  lea esi, [esi]
 807b580:  jae 807b5d4
 807b582:  mov ebx, DWORD PTR ds:0x80d2e10
 807b588:  test ebx, ebx
 807b58a:  je 807b5d4
 807b58c:  mov edx, DWORD PTR [ebp+0x8]
 807b58f:  mov eax, DWORD PTR [edx+0x34]
 807b592:  mov edx, 0x80b469b
 807b597:  mov ebx, DWORD PTR [eax+0x4]
 807b59a:  mov eax, DWORD PTR [ebp-0x44]
 807b59d:  mov ecx, DWORD PTR [eax]
 807b59f:  mov eax, ds:0x80d0cd0
 807b5a4:  mov eax, DWORD PTR [eax]
 807b5a6:  test eax, eax
 807b5a8:  je 807b5ac
 807b5aa:  mov edx, eax
 807b5ac:  lea eax, [ebx+ecx]
 807b5af:  mov DWORD PTR [esp+0x8], edx
 807b5b3:  mov DWORD PTR [esp+0xc], eax
 807b5b7:  mov DWORD PTR [esp+0x4], 0x80b47a0
 807b5bf:  mov DWORD PTR [esp], 0x2
 807b5c6:  call 807c890
 807b5cb:  mov edx, DWORD PTR [ebp-0x44]
 807b5ce:  mov ecx, DWORD PTR [edx+0x8]
 807b5d1:  mov edx, DWORD PTR [ebp-0x10]
 807b5d4:  mov eax, DWORD PTR [edx+0x8]
 807b5d7:  mov edx, ecx
 807b5d9:  cmp ecx, eax
 807b5db:  jbe 807b5df
 807b5dd:  mov edx, eax
 807b5df:  mov ecx, DWORD PTR [ebp-0x48]
 807b5e2:  mov DWORD PTR [esp+0x8], edx
 807b5e6:  mov DWORD PTR [esp+0x4], esi
 807b5ea:  mov DWORD PTR [esp], ecx
 807b5ed:  call 804efc0
 807b5f2:  jmp 807a580
 807b5f7:  xor eax, eax
 807b5f9:  test edx, edx
 807b5fb:  je 807b600
 807b5fd:  mov eax, DWORD PTR [edx+0x4]
 807b600:  mov edx, DWORD PTR [ebp-0x7c]
 807b603:  mov ecx, DWORD PTR [ebp-0x48]
 807b606:  add eax, DWORD PTR [edx+0x8]
 807b609:  mov DWORD PTR [ecx], eax
 807b60b:  jmp 807a580
 807b610:  test edi, edi
 807b612:  je 807a580
 807b618:  mov eax, DWORD PTR [edi+0x240]
 807b61e:  mov esi, DWORD PTR [ebp-0x48]
 807b621:  mov DWORD PTR [esi], eax
 807b623:  jmp 807a580
 807b628:  mov ecx, DWORD PTR [ebp-0x7c]
 807b62b:  mov ebx, DWORD PTR [ebp-0x48]
 807b62e:  sub esi, DWORD PTR [ebp-0x48]
 807b631:  add esi, DWORD PTR [ecx+0x8]
 807b634:  mov DWORD PTR [ebx], esi
 807b636:  jmp 807a580
 807b63b:  mov eax, DWORD PTR [ebp-0x7c]
 807b63e:  mov edx, DWORD PTR [ebp-0x48]
 807b641:  add esi, DWORD PTR [eax+0x8]
 807b644:  mov DWORD PTR [edx], esi
 807b646:  jmp 807a580
 807b64b:  test edx, edx
 807b64d:  je 807a580
 807b653:  cmp DWORD PTR [edi+0x23c], 0x1
 807b65a:  jbe 807bda1
 807b660:  mov esi, DWORD PTR [ebp-0x7c]
 807b663:  mov eax, DWORD PTR [edi+0x23c]
 807b669:  sub eax, DWORD PTR [edx+0x4]
 807b66c:  mov edx, DWORD PTR [ebp-0x48]
 807b66f:  add eax, DWORD PTR [esi+0x8]
 807b672:  mov DWORD PTR [edx], eax
 807b674:  jmp 807a580
 807b679:  lea esi, [esi]
 807b680:  mov edx, DWORD PTR [ebp+0x8]
 807b683:  mov eax, DWORD PTR [esi+0x8]
 807b686:  mov ecx, DWORD PTR [ebp-0x48]
 807b689:  add eax, DWORD PTR [edx]
 807b68b:  mov DWORD PTR [ecx], eax
 807b68d:  jmp 807a580
 807b692:  lea esi, [esi]
 807b698:  mov eax, DWORD PTR [ebp+0x8]
 807b69b:  cmp esi, DWORD PTR [eax+0x218]
 807b6a1:  je 807baf1
 807b6a7:  cmp ebx, 0x7
 807b6aa:  sete cl
 807b6ad:  cmp ebx, 0x23
 807b6b0:  sete al
 807b6b3:  mov edi, ecx
 807b6b5:  mov esi, eax
 807b6b7:  mov edx, esi
 807b6b9:  test dl, dl
 807b6bb:  jne 807b768
 807b6c1:  mov ecx, edi
 807b6c3:  test cl, cl
 807b6c5:  jne 807b768
 807b6cb:  cmp ebx, 0x24
 807b6ce:  je 807b768
 807b6d4:  cmp ebx, 0x25
 807b6d7:  nop
 807b6d8:  je 807b768
 807b6de:  cmp ebx, 0xe
 807b6e1:  sete al
 807b6e4:  cmp ebx, 0x29
 807b6e7:  sete dl
 807b6ea:  or eax, edx
 807b6ec:  movzx eax, al
 807b6ef:  xor edx, edx
 807b6f1:  cmp ebx, 0x5
 807b6f4:  mov esi, DWORD PTR [ebp+0x8]
 807b6f7:  sete dl
 807b6fa:  add edx, edx
 807b6fc:  or edx, eax
 807b6fe:  mov eax, DWORD PTR [ebp-0x10]
 807b701:  mov DWORD PTR [esi+0x21c], edx
 807b707:  lea ecx, [ebp-0x10]
 807b70a:  mov DWORD PTR [esi+0x218], eax
 807b710:  mov eax, DWORD PTR [eax]
 807b712:  mov DWORD PTR [esp+0x8], edx
 807b716:  mov edx, DWORD PTR [ebp+0xc]
 807b719:  add eax, DWORD PTR [ebp-0xdc]
 807b71f:  mov DWORD PTR [esp+0x10], 0x0
 807b727:  mov DWORD PTR [esp+0xc], 0x1
 807b72f:  mov DWORD PTR [esp], edx
 807b732:  mov edx, esi
 807b734:  mov DWORD PTR [esp+0x4], 0x0
 807b73c:  call 80791b0
 807b741:  mov edx, DWORD PTR [ebp-0x10]
 807b744:  mov DWORD PTR [esi+0x224], edx
 807b74a:  mov DWORD PTR [esi+0x220], eax
 807b750:  mov esi, DWORD PTR [ebp-0x7c]
 807b753:  sub esp, 0x14
 807b756:  mov edi, eax
 807b758:  movzx ecx, BYTE PTR [esi+0x4]
 807b75c:  jmp 807b51a
 807b761:  lea esi, [esi]
 807b768:  mov eax, 0x1
 807b76d:  jmp 807b6ef
 807b76f:  mov ebx, DWORD PTR [ebp-0xa8]
 807b775:  cmp DWORD PTR [ebp-0xac], ebx
 807b77b:  jbe 807be25
 807b781:  lea esi, [esi]
 807b788:  mov eax, DWORD PTR [ebp-0xa8]
 807b78e:  mov edx, DWORD PTR [ebp-0xe0]
 807b794:  add edx, DWORD PTR [eax]
 807b796:  mov DWORD PTR [ebp-0x50], edx
 807b799:  mov edx, DWORD PTR [eax+0x4]
 807b79c:  mov eax, edx
 807b79e:  movzx ebx, dl
 807b7a1:  shr eax, 0x8
 807b7a4:  shl eax, 0x4
 807b7a7:  add eax, DWORD PTR [ebp-0x8c]
 807b7ad:  cmp ebx, 0x8
 807b7b0:  mov DWORD PTR [ebp-0x4c], eax
 807b7b3:  mov DWORD PTR [ebp-0x10], eax
 807b7b6:  je 807ba48
 807b7bc:  test ebx, ebx
 807b7be:  je 807b8f8
 807b7c4:  mov esi, DWORD PTR [ebp-0x4c]
 807b7c7:  movzx eax, BYTE PTR [esi+0xc]
 807b7cb:  mov esi, DWORD PTR [ebp+0x8]
 807b7ce:  shr al, 0x4
 807b7d1:  test al, al
 807b7d3:  je 807b899
 807b7d9:  mov edx, DWORD PTR [ebp-0x4c]
 807b7dc:  cmp edx, DWORD PTR [esi+0x218]
 807b7e2:  je 807bb9d
 807b7e8:  cmp ebx, 0x7
 807b7eb:  sete cl
 807b7ee:  cmp ebx, 0x23
 807b7f1:  sete al
 807b7f4:  mov esi, eax
 807b7f6:  test cl, cl
 807b7f8:  jne 807ba58
 807b7fe:  mov edx, esi
 807b800:  test dl, dl
 807b802:  jne 807ba58
 807b808:  cmp ebx, 0x24
 807b80b:  je 807ba58
 807b811:  cmp ebx, 0x25
 807b814:  lea esi, [esi]
 807b818:  je 807ba58
 807b81e:  cmp ebx, 0xe
 807b821:  sete al
 807b824:  cmp ebx, 0x29
 807b827:  sete dl
 807b82a:  or eax, edx
 807b82c:  movzx eax, al
 807b82f:  xor edx, edx
 807b831:  cmp ebx, 0x5
 807b834:  mov ecx, DWORD PTR [ebp+0x8]
 807b837:  sete dl
 807b83a:  mov esi, DWORD PTR [ebp+0xc]
 807b83d:  add edx, edx
 807b83f:  or edx, eax
 807b841:  mov eax, DWORD PTR [ebp-0x10]
 807b844:  mov DWORD PTR [ecx+0x21c], edx
 807b84a:  mov DWORD PTR [ecx+0x218], eax
 807b850:  mov eax, DWORD PTR [eax]
 807b852:  lea ecx, [ebp-0x10]
 807b855:  mov DWORD PTR [esp+0x8], edx
 807b859:  mov edx, DWORD PTR [ebp+0x8]
 807b85c:  add eax, DWORD PTR [ebp-0xdc]
 807b862:  mov DWORD PTR [esp], esi
 807b865:  mov DWORD PTR [esp+0x10], 0x0
 807b86d:  mov DWORD PTR [esp+0xc], 0x1
 807b875:  mov DWORD PTR [esp+0x4], 0x0
 807b87d:  call 80791b0
 807b882:  mov edx, DWORD PTR [ebp+0x8]
 807b885:  mov esi, eax
 807b887:  mov eax, DWORD PTR [ebp-0x10]
 807b88a:  sub esp, 0x14
 807b88d:  mov DWORD PTR [edx+0x220], esi
 807b893:  mov DWORD PTR [edx+0x224], eax
 807b899:  xor edi, edi
 807b89b:  test esi, esi
 807b89d:  je 807b8a7
 807b89f:  mov eax, DWORD PTR [ebp-0x10]
 807b8a2:  mov edi, DWORD PTR [eax+0x4]
 807b8a5:  add edi, DWORD PTR [esi]
 807b8a7:  cmp ebx, 0x29
 807b8aa:  ja 807a7a8
 807b8b0:  jmp DWORD PTR [ebx*4+0x80b4bc8]
 807b8b7:  mov eax, DWORD PTR [ebp-0x10]
 807b8ba:  test eax, eax
 807b8bc:  je 807bdfd
 807b8c2:  cmp DWORD PTR [esi+0x23c], 0x1
 807b8c9:  lea esi, [esi]
 807b8d0:  jbe 807be0b
 807b8d6:  mov edx, DWORD PTR [ebp-0x50]
 807b8d9:  mov ecx, DWORD PTR [ebp-0x50]
 807b8dc:  mov eax, DWORD PTR [edx+0x4]
 807b8df:  mov edx, DWORD PTR [ebp-0x10]
 807b8e2:  add eax, DWORD PTR [edx+0x4]
 807b8e5:  sub eax, DWORD PTR [esi+0x23c]
 807b8eb:  mov DWORD PTR [ecx+0x4], eax
 807b8ee:  mov DWORD PTR [ecx], 0x807f7c0
 807b8f4:  lea esi, [esi]
 807b8f8:  add DWORD PTR [ebp-0xa8], 0x8
 807b8ff:  mov ecx, DWORD PTR [ebp-0xa8]
 807b905:  cmp DWORD PTR [ebp-0xac], ecx
 807b90b:  ja 807b788
 807b911:  mov ebx, DWORD PTR [ebp+0x8]
 807b914:  mov ebx, DWORD PTR [ebx]
 807b916:  mov DWORD PTR [ebp-0xe0], ebx
 807b91c:  jmp 807a8bc
 807b921:  mov edi, DWORD PTR [ebp-0x10]
 807b924:  test edi, edi
 807b926:  je 807b8f8
 807b928:  cmp DWORD PTR [esi+0x23c], 0x1
 807b92f:  jbe 807be17
 807b935:  mov edx, DWORD PTR [ebp-0x10]
 807b938:  mov ebx, DWORD PTR [ebp-0x50]
 807b93b:  mov eax, DWORD PTR [esi+0x23c]
 807b941:  sub eax, DWORD PTR [edx+0x4]
 807b944:  add DWORD PTR [ebx], eax
 807b946:  jmp 807b8f8
 807b948:  mov eax, DWORD PTR [ebp-0x10]
 807b94b:  test eax, eax
 807b94d:  je 807b8f8
 807b94f:  mov eax, DWORD PTR [eax+0x4]
 807b952:  mov esi, DWORD PTR [ebp-0x50]
 807b955:  mov DWORD PTR [esi], eax
 807b957:  jmp 807b8f8
 807b959:  test esi, esi
 807b95b:  je 807b8f8
 807b95d:  mov eax, DWORD PTR [esi+0x240]
 807b963:  mov ebx, DWORD PTR [ebp-0x50]
 807b966:  mov DWORD PTR [ebx], eax
 807b968:  jmp 807b8f8
 807b96a:  mov ebx, DWORD PTR [ebp-0x10]
 807b96d:  test ebx, ebx
 807b96f:  je 807b8f8
 807b971:  cmp DWORD PTR [esi+0x23c], 0x1
 807b978:  jbe 807bdeb
 807b97e:  mov eax, DWORD PTR [ebp-0x10]
 807b981:  mov eax, DWORD PTR [eax+0x4]
 807b984:  sub eax, DWORD PTR [esi+0x23c]
 807b98a:  mov esi, DWORD PTR [ebp-0x50]
 807b98d:  add DWORD PTR [esi], eax
 807b98f:  jmp 807b8f8
 807b994:  mov ecx, DWORD PTR [ebp-0x50]
 807b997:  mov DWORD PTR [ecx], edi
 807b999:  jmp 807b8f8
 807b99e:  mov eax, DWORD PTR [ebp-0x10]
 807b9a1:  test eax, eax
 807b9a3:  je 807b8f8
 807b9a9:  mov ecx, DWORD PTR [ebp-0x4c]
 807b9ac:  mov edx, DWORD PTR [ecx+0x8]
 807b9af:  cmp DWORD PTR [eax+0x8], edx
 807b9b2:  ja 807b9c0
 807b9b4:  jae 807ba08
 807b9b6:  mov ecx, DWORD PTR ds:0x80d2e10
 807b9bc:  test ecx, ecx
 807b9be:  je 807ba08
 807b9c0:  mov ebx, DWORD PTR [ebp+0x8]
 807b9c3:  mov edx, 0x80b469b
 807b9c8:  mov esi, DWORD PTR [ebp-0x4c]
 807b9cb:  mov eax, DWORD PTR [ebx+0x34]
 807b9ce:  mov ecx, DWORD PTR [esi]
 807b9d0:  mov ebx, DWORD PTR [eax+0x4]
 807b9d3:  mov eax, ds:0x80d0cd0
 807b9d8:  mov eax, DWORD PTR [eax]
 807b9da:  test eax, eax
 807b9dc:  je 807b9e0
 807b9de:  mov edx, eax
 807b9e0:  lea eax, [ebx+ecx]
 807b9e3:  mov DWORD PTR [esp+0xc], eax
 807b9e7:  mov DWORD PTR [esp+0x8], edx
 807b9eb:  mov DWORD PTR [esp+0x4], 0x80b47a0
 807b9f3:  mov DWORD PTR [esp], 0x2
 807b9fa:  call 807c890
 807b9ff:  mov eax, DWORD PTR [ebp-0x4c]
 807ba02:  mov edx, DWORD PTR [eax+0x8]
 807ba05:  mov eax, DWORD PTR [ebp-0x10]
 807ba08:  mov ecx, DWORD PTR [eax+0x8]
 807ba0b:  mov eax, edx
 807ba0d:  cmp edx, ecx
 807ba0f:  jbe 807ba13
 807ba11:  mov eax, ecx
 807ba13:  mov edx, DWORD PTR [ebp-0x50]
 807ba16:  mov DWORD PTR [esp+0x8], eax
 807ba1a:  mov DWORD PTR [esp+0x4], edi
 807ba1e:  mov DWORD PTR [esp], edx
 807ba21:  call 804efc0
 807ba26:  jmp 807b8f8
 807ba2b:  mov edx, DWORD PTR [ebp-0x50]
 807ba2e:  sub edi, DWORD PTR [ebp-0x50]
 807ba31:  add DWORD PTR [edx], edi
 807ba33:  jmp 807b8f8
 807ba38:  mov eax, DWORD PTR [ebp-0x50]
 807ba3b:  add DWORD PTR [eax], edi
 807ba3d:  jmp 807b8f8
 807ba42:  lea esi, [esi]
 807ba48:  mov ecx, DWORD PTR [ebp+0x8]
 807ba4b:  mov ebx, DWORD PTR [ebp-0x50]
 807ba4e:  mov eax, DWORD PTR [ecx]
 807ba50:  add DWORD PTR [ebx], eax
 807ba52:  jmp 807b8f8
 807ba57:  nop
 807ba58:  mov eax, 0x1
 807ba5d:  jmp 807b82f
 807ba62:  mov DWORD PTR [esp+0xc], 0x80b46ed
 807ba6a:  mov DWORD PTR [esp+0x8], 0x26a
 807ba72:  mov DWORD PTR [esp+0x4], 0x80b46b2
 807ba7a:  mov DWORD PTR [esp], 0x80b46cf
 807ba81:  call 8051490
 807ba86:  mov ebx, DWORD PTR [ebp-0x7c]
 807ba89:  mov esi, DWORD PTR [ebp-0x70]
 807ba8c:  mov eax, DWORD PTR [ebx+0x8]
 807ba8f:  mov DWORD PTR [esi+0x4], eax
 807ba92:  mov DWORD PTR [esi], 0x807f7d0
 807ba98:  jmp 807ab30
 807ba9d:  mov eax, edi
 807ba9f:  call 807a240
 807baa4:  mov edx, DWORD PTR [ebp-0x10]
 807baa7:  jmp 807ae46
 807baac:  mov eax, edi
 807baae:  call 807a240
 807bab3:  mov edx, DWORD PTR [ebp-0x10]
 807bab6:  xchg ax, ax
 807bab8:  jmp 807ab18
 807babd:  mov eax, edi
 807babf:  call 807a240
 807bac4:  mov edx, DWORD PTR [ebp-0x10]
 807bac7:  nop
 807bac8:  jmp 807ae7b
 807bacd:  mov esi, DWORD PTR [ebp+0x8]
 807bad0:  mov ebx, DWORD PTR [ebp-0x5c]
 807bad3:  mov esi, DWORD PTR [esi]
 807bad5:  mov DWORD PTR [ebp-0xe0], esi
 807badb:  jmp 807a91d
 807bae0:  mov eax, DWORD PTR [ebp-0xa0]
 807bae6:  mov DWORD PTR [eax], 0x807f7d0
 807baec:  jmp 807a898
 807baf1:  cmp ebx, 0x7
 807baf4:  sete al
 807baf7:  cmp ebx, 0x23
 807bafa:  sete dl
 807bafd:  test al, al
 807baff:  mov edi, eax
 807bb01:  mov esi, edx
 807bb03:  jne 807bc2f
 807bb09:  test dl, dl
 807bb0b:  jne 807bc2f
 807bb11:  cmp ebx, 0x24
 807bb14:  je 807bc2f
 807bb1a:  cmp ebx, 0x25
 807bb1d:  lea esi, [esi]
 807bb20:  je 807bc2f
 807bb26:  cmp ebx, 0xe
 807bb29:  sete al
 807bb2c:  cmp ebx, 0x29
 807bb2f:  sete dl
 807bb32:  or eax, edx
 807bb34:  movzx edx, al
 807bb37:  xor eax, eax
 807bb39:  cmp ebx, 0x5
 807bb3c:  sete al
 807bb3f:  add eax, eax
 807bb41:  or eax, edx
 807bb43:  mov edx, DWORD PTR [ebp+0x8]
 807bb46:  cmp eax, DWORD PTR [edx+0x21c]
 807bb4c:  jne 807b6b7
 807bb52:  mov eax, DWORD PTR [edx+0x224]
 807bb58:  and ecx, 0xff
 807bb5e:  mov edi, DWORD PTR [edx+0x220]
 807bb64:  mov DWORD PTR [ebp-0x10], eax
 807bb67:  mov edx, eax
 807bb69:  jmp 807b51a
 807bb6e:  mov eax, esi
 807bb70:  call 807a240
 807bb75:  jmp 807a874
 807bb7a:  mov eax, esi
 807bb7c:  call 807a240
 807bb81:  lea esi, [esi]
 807bb88:  jmp 807b005
 807bb8d:  mov eax, esi
 807bb8f:  call 807a240
 807bb94:  lea esi, [esi]
 807bb98:  jmp 807af9e
 807bb9d:  cmp ebx, 0x7
 807bba0:  sete cl
 807bba3:  cmp ebx, 0x23
 807bba6:  sete al
 807bba9:  test cl, cl
 807bbab:  mov esi, eax
 807bbad:  jne 807bc7d
 807bbb3:  test al, al
 807bbb5:  jne 807bc7d
 807bbbb:  cmp ebx, 0x24
 807bbbe:  je 807bc7d
 807bbc4:  cmp ebx, 0x25
 807bbc7:  nop
 807bbc8:  je 807bc7d
 807bbce:  cmp ebx, 0xe
 807bbd1:  sete al
 807bbd4:  cmp ebx, 0x29
 807bbd7:  sete dl
 807bbda:  or eax, edx
 807bbdc:  movzx edx, al
 807bbdf:  xor eax, eax
 807bbe1:  cmp ebx, 0x5
 807bbe4:  sete al
 807bbe7:  add eax, eax
 807bbe9:  or eax, edx
 807bbeb:  mov edx, DWORD PTR [ebp+0x8]
 807bbee:  cmp eax, DWORD PTR [edx+0x21c]
 807bbf4:  jne 807b7f6
 807bbfa:  mov eax, DWORD PTR [edx+0x224]
 807bc00:  mov esi, DWORD PTR [edx+0x220]
 807bc06:  mov DWORD PTR [ebp-0x10], eax
 807bc09:  jmp 807b899
 807bc0e:  cmp DWORD PTR [edx+0x21c], 0x1
 807bc15:  jne 807a4a1
 807bc1b:  mov eax, DWORD PTR [edx+0x224]
 807bc21:  mov esi, DWORD PTR [edx+0x220]
 807bc27:  mov DWORD PTR [ebp-0x10], eax
 807bc2a:  jmp 807a52c
 807bc2f:  mov edx, 0x1
 807bc34:  jmp 807bb37
 807bc39:  mov edx, DWORD PTR [ebp+0x8]
 807bc3c:  mov edx, DWORD PTR [edx]
 807bc3e:  mov DWORD PTR [ebp-0xe0], edx
 807bc44:  jmp 807a8bc
 807bc49:  mov DWORD PTR [edi], 0x807f7d0
 807bc4f:  jmp 807a3fe
 807bc54:  mov eax, esi
 807bc56:  call 807a240
 807bc5b:  jmp 807b125
 807bc60:  mov eax, esi
 807bc62:  call 807a240
 807bc67:  nop
 807bc68:  jmp 807b1af
 807bc6d:  mov eax, esi
 807bc6f:  call 807a240
 807bc74:  lea esi, [esi]
 807bc78:  jmp 807b15a
 807bc7d:  mov edx, 0x1
 807bc82:  lea esi, [esi]
 807bc88:  jmp 807bbdf
 807bc8d:  mov eax, DWORD PTR [ebp+0x10]
 807bc90:  mov edx, 0x80b4675
 807bc95:  test eax, eax
 807bc97:  jne 807bc9e
 807bc99:  mov edx, 0x80c2c93
 807bc9e:  mov ecx, DWORD PTR [ebp+0x8]
 807bca1:  mov eax, DWORD PTR [ecx+0x4]
 807bca4:  cmp BYTE PTR [eax], 0x0
 807bca7:  jne 807bcb0
 807bca9:  mov eax, ds:0x80d0cd0
 807bcae:  mov eax, DWORD PTR [eax]
 807bcb0:  mov DWORD PTR [esp+0x8], edx
 807bcb4:  mov DWORD PTR [esp+0x4], eax
 807bcb8:  mov DWORD PTR [esp], 0x80b467d
 807bcbf:  call 807c8d0
 807bcc4:  jmp 807a334
 807bcc9:  movzx edx, WORD PTR [ebx+0x158]
 807bcd0:  mov esi, DWORD PTR [ebx+0x150]
 807bcd6:  mov eax, edx
 807bcd8:  shl eax, 0x5
 807bcdb:  lea eax, [esi+eax]
 807bcde:  cmp esi, eax
 807bce0:  jae 807a342
 807bce6:  mov DWORD PTR [ebp-0xd8], 0x0
 807bcf0:  jmp 807bd11
 807bcf2:  lea esi, [esi]
 807bcf8:  mov ecx, DWORD PTR [ebp+0x8]
 807bcfb:  mov eax, edx
 807bcfd:  add esi, 0x20
 807bd00:  shl eax, 0x5
 807bd03:  add eax, DWORD PTR [ecx+0x150]
 807bd09:  cmp esi, eax
 807bd0b:  jae 807a34c
 807bd11:  cmp DWORD PTR [esi], 0x1
 807bd14:  jne 807bcf8
 807bd16:  test BYTE PTR [esi+0x18], 0x2
 807bd1a:  jne 807bcf8
 807bd1c:  mov ebx, DWORD PTR [esi+0x8]
 807bd1f:  sub esp, 0x20
 807bd22:  mov eax, ds:0x80d2e2c
 807bd27:  lea edi, [esp+0x23]
 807bd2b:  and edi, 0xf0
 807bd2e:  mov ecx, ebx
 807bd30:  add ecx, DWORD PTR [esi+0x14]
 807bd33:  mov edx, eax
 807bd35:  neg edx
 807bd37:  and ebx, edx
 807bd39:  lea eax, [eax+ecx-0x1]
 807bd3d:  and eax, edx
 807bd3f:  sub eax, ebx
 807bd41:  mov DWORD PTR [edi+0x4], eax
 807bd44:  mov eax, DWORD PTR [ebp+0x8]
 807bd47:  and edx, DWORD PTR [esi+0x8]
 807bd4a:  add edx, DWORD PTR [eax]
 807bd4c:  mov DWORD PTR [edi], edx
 807bd4e:  mov DWORD PTR [esp+0x8], 0x3
 807bd56:  mov eax, DWORD PTR [edi+0x4]
 807bd59:  mov DWORD PTR [esp], edx
 807bd5c:  mov DWORD PTR [esp+0x4], eax
 807bd60:  call 8050070
 807bd65:  test eax, eax
 807bd67:  js 807bef0
 807bd6d:  mov ecx, DWORD PTR [esi+0x18]
 807bd70:  mov eax, 0x73516240
 807bd75:  mov ebx, DWORD PTR [ebp-0xd8]
 807bd7b:  mov DWORD PTR [ebp-0xd8], edi
 807bd81:  and ecx, 0x7
 807bd84:  shl ecx, 0x2
 807bd87:  sar eax, cl
 807bd89:  and eax, 0xf
 807bd8c:  mov DWORD PTR [edi+0x8], eax
 807bd8f:  mov eax, DWORD PTR [ebp+0x8]
 807bd92:  mov DWORD PTR [edi+0xc], ebx
 807bd95:  movzx edx, WORD PTR [eax+0x158]
 807bd9c:  jmp 807bcf8
 807bda1:  mov eax, edi
 807bda3:  call 807a240
 807bda8:  mov edx, DWORD PTR [ebp-0x10]
 807bdab:  jmp 807b660
 807bdb0:  mov eax, edi
 807bdb2:  call 807a240
 807bdb7:  mov edx, DWORD PTR [ebp-0x10]
 807bdba:  lea esi, [esi]
 807bdc0:  jmp 807a565
 807bdc5:  mov ebx, DWORD PTR [ebp-0x7c]
 807bdc8:  mov esi, DWORD PTR [ebp-0x48]
 807bdcb:  mov eax, DWORD PTR [ebx+0x8]
 807bdce:  mov DWORD PTR [esi+0x4], eax
 807bdd1:  mov DWORD PTR [esi], 0x807f7d0
 807bdd7:  jmp 807a580
 807bddc:  mov eax, edi
 807bdde:  call 807a240
 807bde3:  mov edx, DWORD PTR [ebp-0x10]
 807bde6:  jmp 807b54e
 807bdeb:  mov eax, esi
 807bded:  call 807a240
 807bdf2:  lea esi, [esi]
 807bdf8:  jmp 807b97e
 807bdfd:  mov eax, DWORD PTR [ebp-0x50]
 807be00:  mov DWORD PTR [eax], 0x807f7d0
 807be06:  jmp 807b8f8
 807be0b:  mov eax, esi
 807be0d:  call 807a240
 807be12:  jmp 807b8d6
 807be17:  mov eax, esi
 807be19:  call 807a240
 807be1e:  xchg ax, ax
 807be20:  jmp 807b935
 807be25:  mov esi, DWORD PTR [ecx]
 807be27:  mov DWORD PTR [ebp-0xe0], esi
 807be2d:  jmp 807a8bc
 807be32:  mov edx, DWORD PTR [ebp-0xd8]
 807be38:  mov eax, DWORD PTR [edx+0x8]
 807be3b:  mov DWORD PTR [esp+0x8], eax
 807be3f:  mov eax, DWORD PTR [edx+0x4]
 807be42:  mov DWORD PTR [esp+0x4], eax
 807be46:  mov eax, DWORD PTR [edx]
 807be48:  mov DWORD PTR [esp], eax
 807be4b:  call 8050070
 807be50:  test eax, eax
 807be52:  js 807bf1b
 807be58:  mov ecx, DWORD PTR [ebp-0xd8]
 807be5e:  mov ecx, DWORD PTR [ecx+0xc]
 807be61:  test ecx, ecx
 807be63:  mov DWORD PTR [ebp-0xd8], ecx
 807be69:  je 807a5c3
 807be6f:  jmp 807be32
 807be71:  lea esi, [esi]
 807be78:  mov edx, DWORD PTR [ebp+0x8]
 807be7b:  mov eax, DWORD PTR [edx+0x28]
 807be7e:  test eax, eax
 807be80:  je 807bf14
 807be86:  mov eax, DWORD PTR [eax+0x4]
 807be89:  mov DWORD PTR [esp], 0x14
 807be90:  mov DWORD PTR [esp+0x4], eax
 807be94:  call 804d3c0
 807be99:  mov ebx, DWORD PTR [ebp+0x8]
 807be9c:  test eax, eax
 807be9e:  mov DWORD PTR [ebx+0x1a0], eax
 807bea4:  mov ebx, 0x80b4810
 807bea9:  jne 807a5ab
 807beaf:  mov eax, ds:0x80d0cd0
 807beb4:  mov ecx, DWORD PTR [ebp+0x8]
 807beb7:  mov eax, DWORD PTR [eax]
 807beb9:  mov edx, DWORD PTR [ecx+0x4]
 807bebc:  mov ecx, 0x80b469b
 807bec1:  test eax, eax
 807bec3:  je 807bec7
 807bec5:  mov ecx, eax
 807bec7:  mov DWORD PTR [esp+0xc], edx
 807becb:  mov DWORD PTR [esp+0x8], ecx
 807becf:  mov DWORD PTR [esp+0x4], ebx
 807bed3:  mov DWORD PTR [esp], 0x2
 807beda:  call 807c890
 807bedf:  mov DWORD PTR [esp], 0x7f
 807bee6:  call 804f170
 807beeb:  nop
 807beec:  lea esi, [esi]
 807bef0:  mov ebx, 0x80b4774
 807bef5:  mov ecx, DWORD PTR [ebp+0x8]
 807bef8:  mov eax, gs:0x0
 807befe:  mov edx, DWORD PTR [ecx+0x4]
 807bf01:  mov ecx, 0xffffffe8
 807bf07:  mov eax, DWORD PTR [eax+ecx]
 807bf0a:  xor ecx, ecx
 807bf0c:  mov DWORD PTR [esp], ebx
 807bf0f:  call 807c080
 807bf14:  mov ebx, 0x80b47ec
 807bf19:  jmp 807beaf
 807bf1b:  mov ebx, 0x80b4848
 807bf20:  jmp 807bef5
 807bf22:  nop
 807bf23:  nop
 807bf24:  nop
 807bf25:  nop
 807bf26:  nop
 807bf27:  nop
 807bf28:  nop
 807bf29:  nop
 807bf2a:  nop
 807bf2b:  nop
 807bf2c:  nop
 807bf2d:  nop
 807bf2e:  nop
 807bf2f:  nop

0807bf30 <_dl_receive_error>:
 807bf30:  push ebp
 807bf31:  mov ebp, esp
 807bf33:  sub esp, 0x28
 807bf36:  mov DWORD PTR [ebp-0xc], ebx
 807bf39:  mov DWORD PTR [ebp-0x8], esi
 807bf3c:  mov DWORD PTR [ebp-0x4], edi
 807bf3f:  mov DWORD PTR [ebp-0x14], edx
 807bf42:  mov DWORD PTR [ebp-0x18], ecx
 807bf45:  mov DWORD PTR [ebp-0x10], eax
 807bf48:  call DWORD PTR ds:0x80d11f0
 807bf4e:  mov edi, DWORD PTR ds:0x80d2a38
 807bf54:  mov esi, DWORD PTR [eax]
 807bf56:  mov ebx, eax
 807bf58:  mov DWORD PTR [eax], 0x0
 807bf5e:  mov eax, DWORD PTR [ebp-0x10]
 807bf61:  mov ds:0x80d2a38, eax
 807bf66:  mov eax, DWORD PTR [ebp-0x18]
 807bf69:  mov DWORD PTR [esp], eax
 807bf6c:  call DWORD PTR [ebp-0x14]
 807bf6f:  mov DWORD PTR [ebx], esi
 807bf71:  mov ebx, DWORD PTR [ebp-0xc]
 807bf74:  mov DWORD PTR ds:0x80d2a38, edi
 807bf7a:  mov esi, DWORD PTR [ebp-0x8]
 807bf7d:  mov edi, DWORD PTR [ebp-0x4]
 807bf80:  mov esp, ebp
 807bf82:  pop ebp
 807bf83:  ret
 807bf84:  lea esi, [esi]
 807bf8a:  lea edi, [edi]

0807bf90 <_dl_catch_error>:
 807bf90:  push ebp
 807bf91:  mov ebp, esp
 807bf93:  push ebx
 807bf94:  sub esp, 0xd4
 807bf9a:  mov DWORD PTR [ebp-0xbc], eax
 807bfa0:  mov DWORD PTR [ebp-0xc0], edx
 807bfa6:  mov DWORD PTR [ebp-0xc4], ecx
 807bfac:  mov DWORD PTR [ebp-0xac], 0x0
 807bfb6:  call DWORD PTR ds:0x80d11f0
 807bfbc:  mov DWORD PTR [ebp-0xb8], eax
 807bfc2:  mov eax, DWORD PTR [eax]
 807bfc4:  mov DWORD PTR [esp+0x4], 0x0
 807bfcc:  mov DWORD PTR [ebp-0x8], eax
 807bfcf:  lea eax, [ebp-0xa4]
 807bfd5:  mov DWORD PTR [esp], eax
 807bfd8:  call 808af90
 807bfdd:  test eax, eax
 807bfdf:  mov ebx, eax
 807bfe1:  jne 807c033
 807bfe3:  mov edx, DWORD PTR [ebp-0xb8]
 807bfe9:  lea eax, [ebp-0xb0]
 807bfef:  mov DWORD PTR [edx], eax
 807bff1:  mov eax, DWORD PTR [ebp+0xc]
 807bff4:  mov DWORD PTR [esp], eax
 807bff7:  call DWORD PTR [ebp+0x8]
 807bffa:  mov eax, DWORD PTR [ebp-0x8]
 807bffd:  mov edx, DWORD PTR [ebp-0xb8]
 807c003:  mov DWORD PTR [edx], eax
 807c005:  mov eax, DWORD PTR [ebp-0xbc]
 807c00b:  mov edx, DWORD PTR [ebp-0xc0]
 807c011:  mov DWORD PTR [eax], 0x0
 807c017:  mov eax, DWORD PTR [ebp-0xc4]
 807c01d:  mov DWORD PTR [edx], 0x0
 807c023:  mov BYTE PTR [eax], 0x0
 807c026:  mov eax, ebx
 807c028:  add esp, 0xd4
 807c02e:  pop ebx
 807c02f:  pop ebp
 807c030:  ret 0x8
 807c033:  mov eax, DWORD PTR [ebp-0x8]
 807c036:  mov edx, DWORD PTR [ebp-0xb8]
 807c03c:  mov DWORD PTR [edx], eax
 807c03e:  mov eax, DWORD PTR [ebp-0xb0]
 807c044:  mov edx, DWORD PTR [ebp-0xbc]
 807c04a:  mov DWORD PTR [edx], eax
 807c04c:  mov edx, DWORD PTR [ebp-0xc0]
 807c052:  mov eax, DWORD PTR [ebp-0xac]
 807c058:  mov DWORD PTR [edx], eax
 807c05a:  movzx eax, BYTE PTR [ebp-0xa8]
 807c061:  mov edx, DWORD PTR [ebp-0xc4]
 807c067:  mov BYTE PTR [edx], al
 807c069:  xor eax, eax
 807c06b:  cmp ebx, 0xff
 807c06e:  sete al
 807c071:  sub eax, 0x1
 807c074:  and ebx, eax
 807c076:  jmp 807c026
 807c078:  nop
 807c079:  lea esi, [esi]

0807c080 <_dl_signal_error>:
 807c080:  push ebp
 807c081:  mov ebp, esp
 807c083:  push edi
 807c084:  push esi
 807c085:  mov esi, ecx
 807c087:  push ebx
 807c088:  sub esp, 0x42c
 807c08e:  mov ecx, DWORD PTR [ebp+0x8]
 807c091:  mov DWORD PTR [ebp-0x410], eax
 807c097:  mov DWORD PTR [ebp-0x414], edx
 807c09d:  test ecx, ecx
 807c09f:  je 807c170
 807c0a5:  call DWORD PTR ds:0x80d11f0
 807c0ab:  mov edx, DWORD PTR [ebp-0x414]
 807c0b1:  test edx, edx
 807c0b3:  mov ebx, DWORD PTR [eax]
 807c0b5:  je 807c160
 807c0bb:  test ebx, ebx
 807c0bd:  je 807c17c
 807c0c3:  mov eax, DWORD PTR [ebp-0x414]
 807c0c9:  mov DWORD PTR [esp], eax
 807c0cc:  call 804eea0
 807c0d1:  mov edx, DWORD PTR [ebp+0x8]
 807c0d4:  mov DWORD PTR [esp], edx
 807c0d7:  lea edi, [eax+0x1]
 807c0da:  call 804eea0
 807c0df:  lea esi, [eax+0x1]
 807c0e2:  lea eax, [esi+edi]
 807c0e5:  mov DWORD PTR [esp], eax
 807c0e8:  call 804d6f0
 807c0ed:  test eax, eax
 807c0ef:  mov DWORD PTR [ebx+0x4], eax
 807c0f2:  je 807c148
 807c0f4:  mov edx, DWORD PTR [ebp+0x8]
 807c0f7:  mov DWORD PTR [esp+0x8], esi
 807c0fb:  mov DWORD PTR [esp], eax
 807c0fe:  mov DWORD PTR [esp+0x4], edx
 807c102:  call 806c310
 807c107:  mov edx, DWORD PTR [ebp-0x414]
 807c10d:  mov DWORD PTR [esp+0x8], edi
 807c111:  mov DWORD PTR [esp+0x4], edx
 807c115:  mov DWORD PTR [esp], eax
 807c118:  call 804efc0
 807c11d:  mov BYTE PTR [ebx+0x8], 0x1
 807c121:  mov DWORD PTR [ebx], eax
 807c123:  cmp DWORD PTR [ebp-0x410], 0x1
 807c12a:  sbb eax, eax
 807c12c:  or eax, DWORD PTR [ebp-0x410]
 807c132:  mov DWORD PTR [esp+0x4], eax
 807c136:  lea eax, [ebx+0xc]
 807c139:  mov DWORD PTR [esp], eax
 807c13c:  call 808b020
 807c141:  lea esi, [esi]
 807c148:  mov DWORD PTR [ebx], 0x80c2c93
 807c14e:  mov DWORD PTR [ebx+0x4], 0x80b4d4d
 807c155:  mov BYTE PTR [ebx+0x8], 0x0
 807c159:  jmp 807c123
 807c15b:  nop
 807c15c:  lea esi, [esi]
 807c160:  mov DWORD PTR [ebp-0x414], 0x80c2c93
 807c16a:  jmp 807c0bb
 807c16f:  nop
 807c170:  mov DWORD PTR [ebp+0x8], 0x80b4cfb
 807c177:  jmp 807c0a5
 807c17c:  mov eax, DWORD PTR [ebp-0x410]
 807c182:  mov edi, 0x80c2c93
 807c187:  mov ebx, edi
 807c189:  test eax, eax
 807c18b:  jne 807c201
 807c18d:  mov edx, DWORD PTR [ebp-0x414]
 807c193:  mov ecx, 0x80b44cd
 807c198:  cmp BYTE PTR [edx], 0x0
 807c19b:  jne 807c1a2
 807c19d:  mov ecx, 0x80c2c93
 807c1a2:  test esi, esi
 807c1a4:  je 807c22d
 807c1aa:  mov eax, ds:0x80d0cd0
 807c1af:  mov edx, 0x80b469b
 807c1b4:  mov eax, DWORD PTR [eax]
 807c1b6:  test eax, eax
 807c1b8:  je 807c1bc
 807c1ba:  mov edx, eax
 807c1bc:  mov eax, DWORD PTR [ebp+0x8]
 807c1bf:  mov DWORD PTR [esp+0x20], ebx
 807c1c3:  mov DWORD PTR [esp+0x1c], edi
 807c1c7:  mov DWORD PTR [esp+0x14], ecx
 807c1cb:  mov DWORD PTR [esp+0x18], eax
 807c1cf:  mov eax, DWORD PTR [ebp-0x414]
 807c1d5:  mov DWORD PTR [esp+0xc], esi
 807c1d9:  mov DWORD PTR [esp+0x8], edx
 807c1dd:  mov DWORD PTR [esp+0x4], 0x80b4d11
 807c1e5:  mov DWORD PTR [esp+0x10], eax
 807c1e9:  mov DWORD PTR [esp], 0x2
 807c1f0:  call 807c890
 807c1f5:  mov DWORD PTR [esp], 0x7f
 807c1fc:  call 804f170
 807c201:  lea eax, [ebp-0x40c]
 807c207:  mov edi, 0x80b44cd
 807c20c:  mov DWORD PTR [esp+0x4], eax
 807c210:  mov eax, DWORD PTR [ebp-0x410]
 807c216:  mov DWORD PTR [esp+0x8], 0x400
 807c21e:  mov DWORD PTR [esp], eax
 807c221:  call 806b060
 807c226:  mov ebx, eax
 807c228:  jmp 807c18d
 807c22d:  mov esi, 0x80b4d5c
 807c232:  jmp 807c1aa
 807c237:  mov esi, esi
 807c239:  lea edi, [edi]

0807c240 <_dl_signal_cerror>:
 807c240:  push ebp
 807c241:  mov ebp, esp
 807c243:  sub esp, 0x28
 807c246:  test DWORD PTR ds:0x80d2dd0, 0xfffffb7f
 807c250:  mov DWORD PTR [ebp-0xc], ebx
 807c253:  mov ebx, edx
 807c255:  mov DWORD PTR [ebp-0x8], esi
 807c258:  mov esi, DWORD PTR [ebp+0x8]
 807c25b:  mov DWORD PTR [ebp-0x4], edi
 807c25e:  mov edi, eax
 807c260:  mov DWORD PTR [ebp-0x10], ecx
 807c263:  jne 807c299
 807c265:  mov eax, ds:0x80d2a38
 807c26a:  test eax, eax
 807c26c:  je 807c28a
 807c26e:  mov DWORD PTR [esp+0x8], esi
 807c272:  mov DWORD PTR [esp+0x4], ebx
 807c276:  mov DWORD PTR [esp], edi
 807c279:  call eax
 807c27b:  mov ebx, DWORD PTR [ebp-0xc]
 807c27e:  mov esi, DWORD PTR [ebp-0x8]
 807c281:  mov edi, DWORD PTR [ebp-0x4]
 807c284:  mov esp, ebp
 807c286:  pop ebp
 807c287:  ret 0x4
 807c28a:  mov ecx, DWORD PTR [ebp-0x10]
 807c28d:  mov edx, ebx
 807c28f:  mov eax, edi
 807c291:  mov DWORD PTR [esp], esi
 807c294:  call 807c080
 807c299:  mov edx, DWORD PTR ds:0x80d2a38
 807c29f:  mov eax, 0x80b4d2b
 807c2a4:  test edx, edx
 807c2a6:  je 807c2c9
 807c2a8:  mov DWORD PTR [esp+0x10], eax
 807c2ac:  mov eax, DWORD PTR [ebp-0x10]
 807c2af:  mov DWORD PTR [esp+0xc], esi
 807c2b3:  mov DWORD PTR [esp+0x4], ebx
 807c2b7:  mov DWORD PTR [esp], 0x80b4d35
 807c2be:  mov DWORD PTR [esp+0x8], eax
 807c2c2:  call 807c8d0
 807c2c7:  jmp 807c265
 807c2c9:  mov eax, 0x80b4d25
 807c2ce:  jmp 807c2a8

0807c2d0 <_dl_debug_initialize>:
 807c2d0:  push ebp
 807c2d1:  test edx, edx
 807c2d3:  mov ebp, esp
 807c2d5:  mov ecx, 0x80d2ebc
 807c2da:  push ebx
 807c2db:  mov ebx, eax
 807c2dd:  je 807c2e9
 807c2df:  lea eax, [edx+edx*8]
 807c2e2:  lea ecx, [eax*4+0x80d2e50]
 807c2e9:  test ebx, ebx
 807c2eb:  setne al
 807c2ee:  cmp DWORD PTR [ecx+0x4], 0x0
 807c2f2:  je 807c300
 807c2f4:  test al, al
 807c2f6:  jne 807c300
 807c2f8:  mov eax, ecx
 807c2fa:  pop ebx
 807c2fb:  pop ebp
 807c2fc:  ret
 807c2fd:  lea esi, [esi]
 807c300:  test al, al
 807c302:  mov DWORD PTR [ecx], 0x1
 807c308:  je 807c328
 807c30a:  lea eax, [edx+edx*8]
 807c30d:  mov eax, DWORD PTR [eax*4+0x80d2e40]
 807c314:  mov DWORD PTR [ecx+0x10], ebx
 807c317:  mov DWORD PTR [ecx+0x8], 0x807c330
 807c31e:  mov DWORD PTR [ecx+0x4], eax
 807c321:  mov eax, ecx
 807c323:  pop ebx
 807c324:  pop ebp
 807c325:  ret
 807c326:  xchg ax, ax
 807c328:  mov ebx, DWORD PTR ds:0x80d2ecc
 807c32e:  jmp 807c30a

0807c330 <_dl_debug_state>:
 807c330:  push ebp
 807c331:  mov ebp, esp
 807c333:  pop ebp
 807c334:  ret
 807c335:  nop
 807c336:  nop
 807c337:  nop
 807c338:  nop
 807c339:  nop
 807c33a:  nop
 807c33b:  nop
 807c33c:  nop
 807c33d:  nop
 807c33e:  nop
 807c33f:  nop

0807c340 <_dl_name_match_p>:
 807c340:  push ebp
 807c341:  mov ebp, esp
 807c343:  push esi
 807c344:  mov esi, eax
 807c346:  push ebx
 807c347:  mov ebx, edx
 807c349:  sub esp, 0x8
 807c34c:  mov eax, DWORD PTR [edx+0x4]
 807c34f:  mov DWORD PTR [esp], esi
 807c352:  mov DWORD PTR [esp+0x4], eax
 807c356:  call 806af90
 807c35b:  test eax, eax
 807c35d:  je 807c38c
 807c35f:  mov ebx, DWORD PTR [ebx+0x1c]
 807c362:  test ebx, ebx
 807c364:  jne 807c37a
 807c366:  xchg ax, ax
 807c368:  jmp 807c398
 807c36a:  lea esi, [esi]
 807c370:  mov ebx, DWORD PTR [ebx+0x4]
 807c373:  test ebx, ebx
 807c375:  lea esi, [esi]
 807c378:  je 807c398
 807c37a:  mov eax, DWORD PTR [ebx]
 807c37c:  mov DWORD PTR [esp], esi
 807c37f:  mov DWORD PTR [esp+0x4], eax
 807c383:  call 806af90
 807c388:  test eax, eax
 807c38a:  jne 807c370
 807c38c:  add esp, 0x8
 807c38f:  mov eax, 0x1
 807c394:  pop ebx
 807c395:  pop esi
 807c396:  pop ebp
 807c397:  ret
 807c398:  add esp, 0x8
 807c39b:  xor eax, eax
 807c39d:  pop ebx
 807c39e:  pop esi
 807c39f:  pop ebp
 807c3a0:  ret
 807c3a1:  jmp 807c3b0
 807c3a3:  nop
 807c3a4:  nop
 807c3a5:  nop
 807c3a6:  nop
 807c3a7:  nop
 807c3a8:  nop
 807c3a9:  nop
 807c3aa:  nop
 807c3ab:  nop
 807c3ac:  nop
 807c3ad:  nop
 807c3ae:  nop
 807c3af:  nop

0807c3b0 <_dl_debug_vdprintf>:
 807c3b0:  push ebp
 807c3b1:  mov ebp, esp
 807c3b3:  push edi
 807c3b4:  push esi
 807c3b5:  mov esi, ecx
 807c3b7:  push ebx
 807c3b8:  sub esp, 0x240
 807c3be:  mov DWORD PTR [ebp-0x22c], edx
 807c3c4:  lea edx, [ebp-0x18]
 807c3c7:  mov DWORD PTR [ebp-0x228], eax
 807c3cd:  movzx eax, BYTE PTR [ecx]
 807c3d0:  mov DWORD PTR [ebp-0x238], 0x0
 807c3da:  mov DWORD PTR [ebp-0x224], 0x0
 807c3e4:  mov DWORD PTR [ebp-0x234], edx
 807c3ea:  test al, al
 807c3ec:  je 807c4a2
 807c3f2:  mov edi, DWORD PTR [ebp-0x22c]
 807c3f8:  test edi, edi
 807c3fa:  jle 807c448
 807c3fc:  mov ebx, DWORD PTR [ebp-0x224]
 807c402:  test ebx, ebx
 807c404:  je 807c628
 807c40a:  cmp DWORD PTR [ebp-0x238], 0x3f
 807c411:  jg 807c840
 807c417:  mov edx, DWORD PTR [ebp-0x238]
 807c41d:  lea ebx, [ebp-0x18]
 807c420:  mov DWORD PTR [ebp+edx*8-0x214], 0xc
 807c42b:  mov DWORD PTR [ebp+edx*8-0x218], ebx
 807c432:  add edx, 0x1
 807c435:  mov DWORD PTR [ebp-0x238], edx
 807c43b:  movzx eax, BYTE PTR [esi]
 807c43e:  mov DWORD PTR [ebp-0x22c], 0xffffffff
 807c448:  test al, al
 807c44a:  jne 807c4c8
 807c44c:  cmp DWORD PTR [ebp-0x238], 0x3f
 807c453:  mov edx, esi
 807c455:  mov ecx, esi
 807c457:  jg 807c4f5
 807c45d:  lea esi, [esi]
 807c460:  mov ebx, DWORD PTR [ebp-0x238]
 807c466:  mov eax, edx
 807c468:  sub eax, esi
 807c46a:  test eax, eax
 807c46c:  mov DWORD PTR [ebp+ebx*8-0x214], eax
 807c473:  je 807c485
 807c475:  mov DWORD PTR [ebp+ebx*8-0x218], esi
 807c47c:  add ebx, 0x1
 807c47f:  mov DWORD PTR [ebp-0x238], ebx
 807c485:  movzx eax, BYTE PTR [edx]
 807c488:  cmp al, 0x25
 807c48a:  je 807c540
 807c490:  cmp al, 0xa
 807c492:  je 807c690
 807c498:  test al, al
 807c49a:  mov esi, ecx
 807c49c:  jne 807c3f2
 807c4a2:  lea ecx, [ebp-0x218]
 807c4a8:  mov ebx, DWORD PTR [ebp-0x228]
 807c4ae:  mov edx, DWORD PTR [ebp-0x238]
 807c4b4:  mov eax, 0x92
 807c4b9:  int 0x80
 807c4bb:  lea esp, [ebp-0xc]
 807c4be:  pop ebx
 807c4bf:  pop esi
 807c4c0:  pop edi
 807c4c1:  pop ebp
 807c4c2:  ret
 807c4c3:  nop
 807c4c4:  lea esi, [esi]
 807c4c8:  cmp al, 0x25
 807c4ca:  je 807c44c
 807c4cc:  mov ecx, DWORD PTR [ebp-0x22c]
 807c4d2:  mov edx, esi
 807c4d4:  test ecx, ecx
 807c4d6:  je 807c528
 807c4d8:  cmp al, 0xa
 807c4da:  je 807c4e6
 807c4dc:  add edx, 0x1
 807c4df:  movzx eax, BYTE PTR [edx]
 807c4e2:  test al, al
 807c4e4:  jne 807c520
 807c4e6:  mov ecx, edx
 807c4e8:  cmp DWORD PTR [ebp-0x238], 0x3f
 807c4ef:  jle 807c460
 807c4f5:  mov DWORD PTR [esp+0xc], 0x80b4db2
 807c4fd:  mov DWORD PTR [esp+0x8], 0x83
 807c505:  mov DWORD PTR [esp+0x4], 0x80b4d81
 807c50d:  mov DWORD PTR [esp], 0x80b4d8b
 807c514:  call 8051490
 807c519:  lea esi, [esi]
 807c520:  cmp al, 0x25
 807c522:  jne 807c4d8
 807c524:  mov ecx, edx
 807c526:  jmp 807c4e8
 807c528:  add edx, 0x1
 807c52b:  movzx eax, BYTE PTR [edx]
 807c52e:  test al, al
 807c530:  je 807c4e6
 807c532:  cmp al, 0x25
 807c534:  jne 807c528
 807c536:  xchg ax, ax
 807c538:  jmp 807c4e6
 807c53a:  lea esi, [esi]
 807c540:  movzx eax, BYTE PTR [edx+0x1]
 807c544:  lea edi, [edx+0x1]
 807c547:  mov BYTE PTR [ebp-0x21d], 0x20
 807c54e:  cmp al, 0x30
 807c550:  je 807c7c8
 807c556:  cmp al, 0x2a
 807c558:  mov edx, DWORD PTR [ebp+0x8]
 807c55b:  mov DWORD PTR [ebp-0x21c], 0xffffffff
 807c565:  je 807c788
 807c56b:  cmp al, 0x2e
 807c56d:  mov esi, 0xffffffff
 807c572:  mov DWORD PTR [ebp+0x8], edx
 807c575:  je 807c7ab
 807c57b:  cmp al, 0x6c
 807c57d:  je 807c6c0
 807c583:  cmp al, 0x5a
 807c585:  je 807c6c0
 807c58b:  cmp al, 0x75
 807c58d:  lea esi, [esi]
 807c590:  je 807c6ce
 807c596:  xchg ax, ax
 807c598:  jg 807c7e0
 807c59e:  cmp al, 0x25
 807c5a0:  je 807c7ed
 807c5a6:  cmp al, 0x73
 807c5a8:  je 807c5ce
 807c5aa:  mov DWORD PTR [esp+0xc], 0x80b4db2
 807c5b2:  mov DWORD PTR [esp+0x8], 0xe3
 807c5ba:  mov DWORD PTR [esp+0x4], 0x80b4d81
 807c5c2:  mov DWORD PTR [esp], 0x80b4d95
 807c5c9:  call 8051490
 807c5ce:  mov ebx, DWORD PTR [ebp+0x8]
 807c5d1:  mov edx, DWORD PTR [ebp-0x238]
 807c5d7:  mov eax, DWORD PTR [ebx]
 807c5d9:  mov DWORD PTR [ebp+edx*8-0x218], eax
 807c5e0:  mov DWORD PTR [esp], eax
 807c5e3:  call 804eea0
 807c5e8:  mov ebx, DWORD PTR [ebp-0x238]
 807c5ee:  cmp esi, 0xff
 807c5f1:  mov edx, eax
 807c5f3:  mov DWORD PTR [ebp+ebx*8-0x214], eax
 807c5fa:  je 807c611
 807c5fc:  cmp esi, edx
 807c5fe:  mov eax, esi
 807c600:  jbe 807c604
 807c602:  mov eax, edx
 807c604:  mov edx, DWORD PTR [ebp-0x238]
 807c60a:  mov DWORD PTR [ebp+edx*8-0x214], eax
 807c611:  add DWORD PTR [ebp+0x8], 0x4
 807c615:  add DWORD PTR [ebp-0x238], 0x1
 807c61c:  lea esi, [edi+0x1]
 807c61f:  movzx eax, BYTE PTR [edi+0x1]
 807c623:  jmp 807c3ea
 807c628:  call 8072590
 807c62d:  test eax, eax
 807c62f:  mov DWORD PTR [ebp-0x224], eax
 807c635:  js 807c864
 807c63b:  mov edx, eax
 807c63d:  sar edx, 0x1f
 807c640:  lea ebx, [ebp-0xe]
 807c643:  mov DWORD PTR [esp+0x10], 0x0
 807c64b:  mov DWORD PTR [esp+0xc], 0xa
 807c653:  mov DWORD PTR [esp+0x8], ebx
 807c657:  mov DWORD PTR [esp], eax
 807c65a:  mov DWORD PTR [esp+0x4], edx
 807c65e:  call 80577b0
 807c663:  cmp eax, DWORD PTR [ebp-0x234]
 807c669:  jbe 807c67e
 807c66b:  nop
 807c66c:  lea esi, [esi]
 807c670:  sub eax, 0x1
 807c673:  mov BYTE PTR [eax], 0x20
 807c676:  cmp eax, DWORD PTR [ebp-0x234]
 807c67c:  ja 807c670
 807c67e:  mov BYTE PTR [ebp-0xe], 0x3a
 807c682:  mov BYTE PTR [ebp-0xd], 0x9
 807c686:  jmp 807c40a
 807c68b:  nop
 807c68c:  lea esi, [esi]
 807c690:  cmp edx, esi
 807c692:  je 807c81a
 807c698:  mov ebx, DWORD PTR [ebp-0x238]
 807c69e:  add DWORD PTR [ebp+ebx*8-0x21c], 0x1
 807c6a6:  movzx eax, BYTE PTR [edx+0x1]
 807c6aa:  lea esi, [edx+0x1]
 807c6ad:  mov DWORD PTR [ebp-0x22c], 0x1
 807c6b7:  jmp 807c3ea
 807c6bc:  lea esi, [esi]
 807c6c0:  add edi, 0x1
 807c6c3:  movzx eax, BYTE PTR [edi]
 807c6c6:  cmp al, 0x75
 807c6c8:  jne 807c596
 807c6ce:  sub esp, 0x1c
 807c6d1:  mov eax, DWORD PTR [ebp+0x8]
 807c6d4:  lea ebx, [esp+0x23]
 807c6d8:  and ebx, 0xf0
 807c6db:  mov esi, ebx
 807c6dd:  mov edx, DWORD PTR [eax]
 807c6df:  add esi, 0xc
 807c6e2:  xor eax, eax
 807c6e4:  mov DWORD PTR [ebp-0x230], ebx
 807c6ea:  cmp BYTE PTR [edi], 0x78
 807c6ed:  mov DWORD PTR [esp+0x10], 0x0
 807c6f5:  mov DWORD PTR [esp+0x8], esi
 807c6f9:  sete al
 807c6fc:  sub eax, 0x1
 807c6ff:  and eax, 0xfa
 807c702:  add eax, 0x10
 807c705:  mov DWORD PTR [esp+0xc], eax
 807c709:  mov DWORD PTR [esp], edx
 807c70c:  mov DWORD PTR [esp+0x4], 0x0
 807c714:  call 80577b0
 807c719:  cmp DWORD PTR [ebp-0x21c], 0xff
 807c720:  mov ecx, eax
 807c722:  je 807c813
 807c728:  sub esi, eax
 807c72a:  cmp esi, DWORD PTR [ebp-0x21c]
 807c730:  jge 807c75c
 807c732:  mov edx, DWORD PTR [ebp-0x230]
 807c738:  add edx, 0xd
 807c73b:  sub edx, eax
 807c73d:  lea esi, [esi]
 807c740:  movzx eax, BYTE PTR [ebp-0x21d]
 807c747:  sub ecx, 0x1
 807c74a:  mov esi, edx
 807c74c:  add edx, 0x1
 807c74f:  mov BYTE PTR [ecx], al
 807c751:  lea eax, [edx-0x1]
 807c754:  cmp DWORD PTR [ebp-0x21c], eax
 807c75a:  jg 807c740
 807c75c:  mov edx, DWORD PTR [ebp-0x238]
 807c762:  add DWORD PTR [ebp+0x8], 0x4
 807c766:  mov DWORD PTR [ebp+edx*8-0x218], ecx
 807c76d:  mov DWORD PTR [ebp+edx*8-0x214], esi
 807c774:  add edx, 0x1
 807c777:  mov DWORD PTR [ebp-0x238], edx
 807c77d:  jmp 807c61c
 807c782:  lea esi, [esi]
 807c788:  mov eax, edx
 807c78a:  add edi, 0x1
 807c78d:  mov eax, DWORD PTR [eax]
 807c78f:  add edx, 0x4
 807c792:  mov esi, 0xffffffff
 807c797:  mov DWORD PTR [ebp-0x21c], eax
 807c79d:  movzx eax, BYTE PTR [edi]
 807c7a0:  mov DWORD PTR [ebp+0x8], edx
 807c7a3:  cmp al, 0x2e
 807c7a5:  jne 807c57b
 807c7ab:  cmp BYTE PTR [edi+0x1], 0x2a
 807c7af:  jne 807c5aa
 807c7b5:  lea ebx, [edx+0x4]
 807c7b8:  add edi, 0x2
 807c7bb:  mov esi, DWORD PTR [edx]
 807c7bd:  mov DWORD PTR [ebp+0x8], ebx
 807c7c0:  movzx eax, BYTE PTR [edi]
 807c7c3:  jmp 807c57b
 807c7c8:  movzx eax, BYTE PTR [edx+0x2]
 807c7cc:  lea edi, [edx+0x2]
 807c7cf:  mov BYTE PTR [ebp-0x21d], 0x30
 807c7d6:  jmp 807c556
 807c7db:  nop
 807c7dc:  lea esi, [esi]
 807c7e0:  cmp al, 0x78
 807c7e2:  jne 807c5aa
 807c7e8:  jmp 807c6ce
 807c7ed:  mov ebx, DWORD PTR [ebp-0x238]
 807c7f3:  mov DWORD PTR [ebp+ebx*8-0x218], edi
 807c7fa:  mov DWORD PTR [ebp+ebx*8-0x214], 0x1
 807c805:  add ebx, 0x1
 807c808:  mov DWORD PTR [ebp-0x238], ebx
 807c80e:  jmp 807c61c
 807c813:  sub esi, eax
 807c815:  jmp 807c75c
 807c81a:  mov eax, DWORD PTR [ebp-0x238]
 807c820:  mov DWORD PTR [ebp+eax*8-0x218], edx
 807c827:  mov DWORD PTR [ebp+eax*8-0x214], 0x1
 807c832:  add eax, 0x1
 807c835:  mov DWORD PTR [ebp-0x238], eax
 807c83b:  jmp 807c6a6
 807c840:  mov DWORD PTR [esp+0xc], 0x80b4db2
 807c848:  mov DWORD PTR [esp+0x8], 0x76
 807c850:  mov DWORD PTR [esp+0x4], 0x80b4d81
 807c858:  mov DWORD PTR [esp], 0x80b4d8b
 807c85f:  call 8051490
 807c864:  mov DWORD PTR [esp+0xc], 0x80b4db2
 807c86c:  mov DWORD PTR [esp+0x8], 0x6d
 807c874:  mov DWORD PTR [esp+0x4], 0x80b4d81
 807c87c:  mov DWORD PTR [esp], 0x80b4dc8
 807c883:  call 8051490
 807c888:  nop
 807c889:  lea esi, [esi]

0807c890 <_dl_dprintf>:
 807c890:  push ebp
 807c891:  xor edx, edx
 807c893:  mov ebp, esp
 807c895:  sub esp, 0x4
 807c898:  lea eax, [ebp+0x10]
 807c89b:  mov ecx, DWORD PTR [ebp+0xc]
 807c89e:  mov DWORD PTR [esp], eax
 807c8a1:  mov eax, DWORD PTR [ebp+0x8]
 807c8a4:  call 807c3b0
 807c8a9:  leave
 807c8aa:  ret
 807c8ab:  nop
 807c8ac:  lea esi, [esi]

0807c8b0 <_dl_debug_printf_c>:
 807c8b0:  push ebp
 807c8b1:  mov edx, 0xffffffff
 807c8b6:  mov ebp, esp
 807c8b8:  sub esp, 0x4
 807c8bb:  lea eax, [ebp+0xc]
 807c8be:  mov ecx, DWORD PTR [ebp+0x8]
 807c8c1:  mov DWORD PTR [esp], eax
 807c8c4:  mov eax, ds:0x80d0d68
 807c8c9:  call 807c3b0
 807c8ce:  leave
 807c8cf:  ret

0807c8d0 <_dl_debug_printf>:
 807c8d0:  push ebp
 807c8d1:  mov edx, 0x1
 807c8d6:  mov ebp, esp
 807c8d8:  sub esp, 0x4
 807c8db:  lea eax, [ebp+0xc]
 807c8de:  mov ecx, DWORD PTR [ebp+0x8]
 807c8e1:  mov DWORD PTR [esp], eax
 807c8e4:  mov eax, ds:0x80d0d68
 807c8e9:  call 807c3b0
 807c8ee:  leave
 807c8ef:  ret

0807c8f0 <_dl_sysdep_read_whole_file>:
 807c8f0:  push ebp
 807c8f1:  mov ebp, esp
 807c8f3:  sub esp, 0x88
 807c8f9:  mov DWORD PTR [esp+0x4], 0x0
 807c901:  mov DWORD PTR [ebp-0xc], ebx
 807c904:  mov ebx, 0xffffffff
 807c909:  mov DWORD PTR [ebp-0x8], esi
 807c90c:  mov DWORD PTR [ebp-0x4], edi
 807c90f:  mov edi, edx
 807c911:  mov DWORD PTR [ebp-0x70], ecx
 807c914:  mov DWORD PTR [esp], eax
 807c917:  call 804f1f0
 807c91c:  test eax, eax
 807c91e:  mov esi, eax
 807c920:  js 807c953
 807c922:  lea eax, [ebp-0x6c]
 807c925:  mov DWORD PTR [esp+0x8], eax
 807c929:  mov DWORD PTR [esp+0x4], esi
 807c92d:  mov DWORD PTR [esp], 0x3
 807c934:  call 804f1b0
 807c939:  test eax, eax
 807c93b:  js 807c946
 807c93d:  mov eax, DWORD PTR [ebp-0x40]
 807c940:  test eax, eax
 807c942:  mov DWORD PTR [edi], eax
 807c944:  jne 807c968
 807c946:  mov ebx, 0xffffffff
 807c94b:  mov DWORD PTR [esp], esi
 807c94e:  call 8073140
 807c953:  mov eax, ebx
 807c955:  mov esi, DWORD PTR [ebp-0x8]
 807c958:  mov ebx, DWORD PTR [ebp-0xc]
 807c95b:  mov edi, DWORD PTR [ebp-0x4]
 807c95e:  mov esp, ebp
 807c960:  pop ebp
 807c961:  ret
 807c962:  lea esi, [esi]
 807c968:  mov edx, DWORD PTR [ebp-0x70]
 807c96b:  mov DWORD PTR [esp+0x14], 0x0
 807c973:  mov DWORD PTR [esp+0x10], esi
 807c977:  mov DWORD PTR [esp+0xc], 0x2
 807c97f:  mov DWORD PTR [esp+0x8], edx
 807c983:  mov DWORD PTR [esp+0x4], eax
 807c987:  mov DWORD PTR [esp], 0x0
 807c98e:  call 8050000
 807c993:  mov ebx, eax
 807c995:  jmp 807c94b
 807c997:  nop
 807c998:  nop
 807c999:  nop
 807c99a:  nop
 807c99b:  nop
 807c99c:  nop
 807c99d:  nop
 807c99e:  nop
 807c99f:  nop

0807c9a0 <_dl_get_tls_static_info>:
 807c9a0:  mov ecx, DWORD PTR ds:0x80d0d28
 807c9a6:  push ebp
 807c9a7:  mov ebp, esp
 807c9a9:  mov DWORD PTR [eax], ecx
 807c9ab:  mov eax, ds:0x80d2d90
 807c9b0:  pop ebp
 807c9b1:  mov DWORD PTR [edx], eax
 807c9b3:  ret
 807c9b4:  lea esi, [esi]
 807c9ba:  lea edi, [edi]

0807c9c0 <_dl_tls_get_addr_soft>:
 807c9c0:  push ebp
 807c9c1:  mov ebp, esp
 807c9c3:  sub esp, 0xc
 807c9c6:  mov eax, DWORD PTR [ebp+0x8]
 807c9c9:  mov DWORD PTR [esp], ebx
 807c9cc:  mov DWORD PTR [esp+0x4], esi
 807c9d0:  mov DWORD PTR [esp+0x8], edi
 807c9d4:  mov edx, DWORD PTR [eax+0x240]
 807c9da:  test edx, edx
 807c9dc:  je 807ca30
 807c9de:  mov eax, gs:0x4
 807c9e4:  mov ecx, DWORD PTR [eax]
 807c9e6:  cmp ecx, DWORD PTR ds:0x80d2da0
 807c9ec:  jne 807ca05
 807c9ee:  mov eax, DWORD PTR [eax+edx*8]
 807c9f1:  cmp eax, 0xff
 807c9f4:  je 807ca30
 807c9f6:  mov ebx, DWORD PTR [esp]
 807c9f9:  mov esi, DWORD PTR [esp+0x4]
 807c9fd:  mov edi, DWORD PTR [esp+0x8]
 807ca01:  mov esp, ebp
 807ca03:  pop ebp
 807ca04:  ret
 807ca05:  cmp edx, DWORD PTR [eax-0x8]
 807ca08:  jae 807ca30
 807ca0a:  mov edi, DWORD PTR ds:0x80d2d98
 807ca10:  mov esi, edx
 807ca12:  mov ebx, DWORD PTR [edi]
 807ca14:  cmp edx, ebx
 807ca16:  jb 807ca23
 807ca18:  mov edi, DWORD PTR [edi+0x4]
 807ca1b:  sub esi, ebx
 807ca1d:  mov ebx, DWORD PTR [edi]
 807ca1f:  cmp ebx, esi
 807ca21:  jbe 807ca18
 807ca23:  cmp ecx, DWORD PTR [edi+esi*8+0x8]
 807ca27:  jae 807c9ee
 807ca29:  lea esi, [esi]
 807ca30:  xor eax, eax
 807ca32:  jmp 807c9f6
 807ca34:  lea esi, [esi]
 807ca3a:  lea edi, [edi]

0807ca40 <_dl_next_tls_modid>:
 807ca40:  push ebp
 807ca41:  mov ebp, esp
 807ca43:  sub esp, 0x20
 807ca46:  cmp BYTE PTR ds:0x80d2d9c, 0x0
 807ca4d:  mov DWORD PTR [ebp-0xc], ebx
 807ca50:  mov DWORD PTR [ebp-0x8], esi
 807ca53:  mov DWORD PTR [ebp-0x4], edi
 807ca56:  jne 807ca76
 807ca58:  mov ecx, DWORD PTR ds:0x80d2d94
 807ca5e:  lea edx, [ecx+0x1]
 807ca61:  mov DWORD PTR ds:0x80d2d94, edx
 807ca67:  mov ebx, DWORD PTR [ebp-0xc]
 807ca6a:  mov eax, edx
 807ca6c:  mov esi, DWORD PTR [ebp-0x8]
 807ca6f:  mov edi, DWORD PTR [ebp-0x4]
 807ca72:  mov esp, ebp
 807ca74:  pop ebp
 807ca75:  ret
 807ca76:  mov eax, ds:0x80d2da4
 807ca7b:  mov ecx, DWORD PTR ds:0x80d2d94
 807ca81:  mov edi, DWORD PTR ds:0x80d2d98
 807ca87:  lea edx, [eax+0x1]
 807ca8a:  cmp edx, ecx
 807ca8c:  ja 807caf0
 807ca8e:  mov ebx, DWORD PTR [edi]
 807ca90:  lea eax, [ecx+0x1]
 807ca93:  xor esi, esi
 807ca95:  mov DWORD PTR [ebp-0x10], eax
 807ca98:  mov eax, edx
 807ca9a:  sub eax, esi
 807ca9c:  cmp eax, ebx
 807ca9e:  jae 807cad8
 807caa0:  mov eax, DWORD PTR [edi+eax*8+0xc]
 807caa4:  test eax, eax
 807caa6:  je 807cae8
 807caa8:  add edx, 0x1
 807caab:  cmp edx, DWORD PTR [ebp-0x10]
 807caae:  jbe 807ca98
 807cab0:  mov DWORD PTR [esp+0xc], 0x80b4e58
 807cab8:  mov DWORD PTR [esp+0x8], 0x4f
 807cac0:  mov DWORD PTR [esp+0x4], 0x80b4de8
 807cac8:  mov DWORD PTR [esp], 0x80b4e6c
 807cacf:  call 8051490
 807cad4:  lea esi, [esi]
 807cad8:  mov edi, DWORD PTR [edi+0x4]
 807cadb:  test edi, edi
 807cadd:  je 807cae8
 807cadf:  add esi, ebx
 807cae1:  mov ebx, DWORD PTR [edi]
 807cae3:  jmp 807ca98
 807cae5:  lea esi, [esi]
 807cae8:  cmp edx, ecx
 807caea:  jbe 807ca67
 807caf0:  lea eax, [ecx+0x1]
 807caf3:  cmp eax, edx
 807caf5:  jne 807cb03
 807caf7:  mov BYTE PTR ds:0x80d2d9c, 0x0
 807cafe:  jmp 807ca5e
 807cb03:  mov DWORD PTR [esp+0xc], 0x80b4e58
 807cb0b:  mov DWORD PTR [esp+0x8], 0x5d
 807cb13:  mov DWORD PTR [esp+0x4], 0x80b4de8
 807cb1b:  mov DWORD PTR [esp], 0x80b4e90
 807cb22:  call 8051490
 807cb27:  mov esi, esi
 807cb29:  lea edi, [edi]

0807cb30 <_dl_add_to_slotinfo>:
 807cb30:  push ebp
 807cb31:  mov ebp, esp
 807cb33:  push edi
 807cb34:  push esi
 807cb35:  push ebx
 807cb36:  sub esp, 0x14
 807cb39:  mov esi, DWORD PTR [ebp+0x8]
 807cb3c:  mov edi, DWORD PTR ds:0x80d2d98
 807cb42:  mov ebx, DWORD PTR [esi+0x240]
 807cb48:  jmp 807cb52
 807cb4a:  lea esi, [esi]
 807cb50:  mov edi, eax
 807cb52:  mov eax, DWORD PTR [edi]
 807cb54:  cmp ebx, eax
 807cb56:  jb 807cb98
 807cb58:  sub ebx, eax
 807cb5a:  mov eax, DWORD PTR [edi+0x4]
 807cb5d:  test eax, eax
 807cb5f:  jne 807cb50
 807cb61:  test ebx, ebx
 807cb63:  jne 807cbd1
 807cb65:  mov DWORD PTR [esp], 0x1f8
 807cb6c:  call 804d6f0
 807cb71:  test eax, eax
 807cb73:  mov edx, eax
 807cb75:  mov DWORD PTR [edi+0x4], eax
 807cb78:  je 807cbb2
 807cb7a:  mov DWORD PTR [eax], 0x3e
 807cb80:  lea edi, [eax+0x8]
 807cb83:  mov ecx, 0x7c
 807cb88:  mov DWORD PTR [eax+0x4], 0x0
 807cb8f:  mov eax, ebx
 807cb91:  rep stosd
 807cb93:  jmp 807cb9a
 807cb95:  lea esi, [esi]
 807cb98:  mov edx, edi
 807cb9a:  mov eax, ds:0x80d2da0
 807cb9f:  mov DWORD PTR [edx+ebx*8+0xc], esi
 807cba3:  add eax, 0x1
 807cba6:  mov DWORD PTR [edx+ebx*8+0x8], eax
 807cbaa:  lea esp, [ebp-0xc]
 807cbad:  pop ebx
 807cbae:  pop esi
 807cbaf:  pop edi
 807cbb0:  pop ebp
 807cbb1:  ret
 807cbb2:  xor ecx, ecx
 807cbb4:  mov edx, 0x80b4dfa
 807cbb9:  mov eax, 0xc
 807cbbe:  add DWORD PTR ds:0x80d2da0, 0x1
 807cbc5:  mov DWORD PTR [esp], 0x80b4eb4
 807cbcc:  call 807c080
 807cbd1:  mov DWORD PTR [esp+0xc], 0x80b4e2e
 807cbd9:  mov DWORD PTR [esp+0x8], 0x34f
 807cbe1:  mov DWORD PTR [esp+0x4], 0x80b4de8
 807cbe9:  mov DWORD PTR [esp], 0x80b4df1
 807cbf0:  call 8051490
 807cbf5:  lea esi, [esi]
 807cbf9:  lea edi, [edi]

0807cc00 <_dl_deallocate_tls>:
 807cc00:  push ebp
 807cc01:  mov ebp, esp
 807cc03:  push edi
 807cc04:  push esi
 807cc05:  push ebx
 807cc06:  sub esp, 0xc
 807cc09:  mov esi, DWORD PTR [eax+0x4]
 807cc0c:  mov DWORD PTR [ebp-0x10], eax
 807cc0f:  mov BYTE PTR [ebp-0x11], dl
 807cc12:  mov edx, DWORD PTR [esi-0x8]
 807cc15:  lea edi, [esi-0x8]
 807cc18:  test edx, edx
 807cc1a:  je 807cc3e
 807cc1c:  xor ebx, ebx
 807cc1e:  xchg ax, ax
 807cc20:  add ebx, 0x1
 807cc23:  cmp BYTE PTR [esi+ebx*8+0x4], 0x0
 807cc28:  jne 807cc3a
 807cc2a:  mov eax, DWORD PTR [esi+ebx*8]
 807cc2d:  cmp eax, 0xff
 807cc30:  je 807cc3a
 807cc32:  mov DWORD PTR [esp], eax
 807cc35:  call 804b4a0
 807cc3a:  cmp DWORD PTR [edi], ebx
 807cc3c:  ja 807cc20
 807cc3e:  mov DWORD PTR [esp], edi
 807cc41:  call 804b4a0
 807cc46:  cmp BYTE PTR [ebp-0x11], 0x0
 807cc4a:  lea esi, [esi]
 807cc50:  je 807cc6b
 807cc52:  mov eax, ds:0x80d0d28
 807cc57:  sub DWORD PTR [ebp-0x10], eax
 807cc5a:  mov edx, DWORD PTR [ebp-0x10]
 807cc5d:  lea eax, [edx+0x470]
 807cc63:  mov DWORD PTR [esp], eax
 807cc66:  call 804b4a0
 807cc6b:  add esp, 0xc
 807cc6e:  pop ebx
 807cc6f:  pop esi
 807cc70:  pop edi
 807cc71:  pop ebp
 807cc72:  ret
 807cc73:  lea esi, [esi]
 807cc79:  lea edi, [edi]

0807cc80 <_dl_allocate_tls_init>:
 807cc80:  push ebp
 807cc81:  mov ebp, esp
 807cc83:  push edi
 807cc84:  push esi
 807cc85:  push ebx
 807cc86:  sub esp, 0x30
 807cc89:  test eax, eax
 807cc8b:  mov DWORD PTR [ebp-0x28], eax
 807cc8e:  je 807ce83
 807cc94:  mov eax, DWORD PTR [eax+0x4]
 807cc97:  mov edx, DWORD PTR ds:0x80d2d98
 807cc9d:  mov DWORD PTR [ebp-0x1c], 0x0
 807cca4:  mov DWORD PTR [ebp-0x18], 0x0
 807ccab:  mov DWORD PTR [ebp-0x24], eax
 807ccae:  mov DWORD PTR [ebp-0x20], edx
 807ccb1:  mov ecx, DWORD PTR [ebp-0x1c]
 807ccb4:  test ecx, ecx
 807ccb6:  mov ecx, DWORD PTR [ebp-0x20]
 807ccb9:  sete al
 807ccbc:  movzx edi, al
 807ccbf:  mov edx, DWORD PTR [ecx]
 807ccc1:  cmp edi, edx
 807ccc3:  jae 807cdbd
 807ccc9:  mov ebx, DWORD PTR [ebp-0x1c]
 807cccc:  lea eax, [edi+ebx]
 807cccf:  cmp DWORD PTR ds:0x80d2d94, eax
 807ccd5:  jb 807ce78
 807ccdb:  lea eax, [ecx+edi*8+0xc]
 807ccdf:  lea ecx, [edi+ebx+0x1]
 807cce3:  mov DWORD PTR [ebp-0x14], eax
 807cce6:  mov DWORD PTR [ebp-0x10], ecx
 807cce9:  jmp 807cd80
 807ccee:  xchg ax, ax
 807ccf0:  cmp DWORD PTR [ecx+0x240], edi
 807ccf6:  jne 807ce2c
 807ccfc:  mov ebx, DWORD PTR [ecx+0x230]
 807cd02:  mov esi, DWORD PTR [ecx+0x22c]
 807cd08:  cmp ebx, esi
 807cd0a:  jb 807ce08
 807cd10:  cmp eax, ebx
 807cd12:  jb 807ce50
 807cd18:  mov edx, DWORD PTR [ebp-0x28]
 807cd1b:  sub ebx, esi
 807cd1d:  sub edx, eax
 807cd1f:  mov eax, DWORD PTR [ebp-0x24]
 807cd22:  lea eax, [eax+edi*8]
 807cd25:  mov DWORD PTR [eax], edx
 807cd27:  mov BYTE PTR [eax+0x4], 0x1
 807cd2b:  mov DWORD PTR [esp+0x8], esi
 807cd2f:  mov eax, DWORD PTR [ecx+0x228]
 807cd35:  mov DWORD PTR [esp], edx
 807cd38:  mov DWORD PTR [esp+0x4], eax
 807cd3c:  call 806c310
 807cd41:  mov DWORD PTR [esp+0x8], ebx
 807cd45:  mov DWORD PTR [esp+0x4], 0x0
 807cd4d:  mov DWORD PTR [esp], eax
 807cd50:  call 804ef50
 807cd55:  mov ecx, DWORD PTR [ebp-0x20]
 807cd58:  mov edx, DWORD PTR [ecx]
 807cd5a:  add edi, 0x1
 807cd5d:  cmp edx, edi
 807cd5f:  jbe 807cdbd
 807cd61:  mov eax, DWORD PTR [ebp-0x10]
 807cd64:  mov ebx, DWORD PTR [ebp-0x10]
 807cd67:  add DWORD PTR [ebp-0x14], 0x8
 807cd6b:  add eax, 0x1
 807cd6e:  cmp DWORD PTR ds:0x80d2d94, ebx
 807cd74:  jb 807ce78
 807cd7a:  mov DWORD PTR [ebp-0x10], eax
 807cd7d:  mov eax, DWORD PTR [ebp-0x14]
 807cd80:  mov ecx, DWORD PTR [eax]
 807cd82:  test ecx, ecx
 807cd84:  je 807cd5a
 807cd86:  mov eax, DWORD PTR [eax-0x4]
 807cd89:  cmp DWORD PTR [ebp-0x18], eax
 807cd8c:  jae 807cd91
 807cd8e:  mov DWORD PTR [ebp-0x18], eax
 807cd91:  mov eax, DWORD PTR [ecx+0x23c]
 807cd97:  cmp eax, 0x1
 807cd9a:  ja 807ccf0
 807cda0:  mov eax, DWORD PTR [ecx+0x240]
 807cda6:  add edi, 0x1
 807cda9:  mov ecx, DWORD PTR [ebp-0x24]
 807cdac:  cmp edx, edi
 807cdae:  lea eax, [ecx+eax*8]
 807cdb1:  mov DWORD PTR [eax], 0xffffffff
 807cdb7:  mov BYTE PTR [eax+0x4], 0x0
 807cdbb:  ja 807cd61
 807cdbd:  add DWORD PTR [ebp-0x1c], edi
 807cdc0:  mov ebx, DWORD PTR [ebp-0x1c]
 807cdc3:  cmp ebx, DWORD PTR ds:0x80d2d94
 807cdc9:  jae 807ce78
 807cdcf:  mov eax, DWORD PTR [ebp-0x20]
 807cdd2:  mov eax, DWORD PTR [eax+0x4]
 807cdd5:  test eax, eax
 807cdd7:  mov DWORD PTR [ebp-0x20], eax
 807cdda:  jne 807ccb1
 807cde0:  mov DWORD PTR [esp+0xc], 0x80b4e42
 807cde8:  mov DWORD PTR [esp+0x8], 0x1c2
 807cdf0:  mov DWORD PTR [esp+0x4], 0x80b4de8
 807cdf8:  mov DWORD PTR [esp], 0x80b4e19
 807cdff:  call 8051490
 807ce04:  lea esi, [esi]
 807ce08:  mov DWORD PTR [esp+0xc], 0x80b4e42
 807ce10:  mov DWORD PTR [esp+0x8], 0x1ab
 807ce18:  mov DWORD PTR [esp+0x4], 0x80b4de8
 807ce20:  mov DWORD PTR [esp], 0x80b4ed8
 807ce27:  call 8051490
 807ce2c:  mov DWORD PTR [esp+0xc], 0x80b4e42
 807ce34:  mov DWORD PTR [esp+0x8], 0x1aa
 807ce3c:  mov DWORD PTR [esp+0x4], 0x80b4de8
 807ce44:  mov DWORD PTR [esp], 0x80b4e01
 807ce4b:  call 8051490
 807ce50:  mov DWORD PTR [esp+0xc], 0x80b4e42
 807ce58:  mov DWORD PTR [esp+0x8], 0x1ad
 807ce60:  mov DWORD PTR [esp+0x4], 0x80b4de8
 807ce68:  mov DWORD PTR [esp], 0x80b4f0c
 807ce6f:  call 8051490
 807ce74:  lea esi, [esi]
 807ce78:  mov ecx, DWORD PTR [ebp-0x18]
 807ce7b:  mov edx, DWORD PTR [ebp-0x24]
 807ce7e:  mov DWORD PTR [edx], ecx
 807ce80:  mov eax, DWORD PTR [ebp-0x28]
 807ce83:  add esp, 0x30
 807ce86:  pop ebx
 807ce87:  pop esi
 807ce88:  pop edi
 807ce89:  pop ebp
 807ce8a:  ret
 807ce8b:  nop
 807ce8c:  lea esi, [esi]

0807ce90 <_dl_allocate_tls_storage>:
 807ce90:  push ebp
 807ce91:  mov ebp, esp
 807ce93:  sub esp, 0x18
 807ce96:  mov eax, ds:0x80d2d90
 807ce9b:  mov DWORD PTR [ebp-0x8], esi
 807ce9e:  mov esi, DWORD PTR ds:0x80d0d28
 807cea4:  mov DWORD PTR [ebp-0xc], ebx
 807cea7:  mov DWORD PTR [ebp-0x4], edi
 807ceaa:  mov DWORD PTR [esp], eax
 807cead:  mov DWORD PTR [esp+0x4], esi
 807ceb1:  call 804d880
 807ceb6:  mov DWORD PTR [ebp-0x10], 0x0
 807cebd:  test eax, eax
 807cebf:  mov ebx, eax
 807cec1:  je 807cf02
 807cec3:  lea esi, [eax+esi-0x470]
 807ceca:  mov ecx, 0x11c
 807cecf:  xor eax, eax
 807ced1:  mov edi, esi
 807ced3:  mov DWORD PTR [ebp-0x10], esi
 807ced6:  rep stosd
 807ced8:  mov DWORD PTR [esp+0x4], 0x8
 807cee0:  mov eax, ds:0x80d2d94
 807cee5:  lea esi, [eax+0xe]
 807cee8:  add eax, 0x10
 807ceeb:  mov DWORD PTR [esp], eax
 807ceee:  call 804d3c0
 807cef3:  test eax, eax
 807cef5:  je 807cf18
 807cef7:  mov DWORD PTR [eax], esi
 807cef9:  mov edx, DWORD PTR [ebp-0x10]
 807cefc:  add eax, 0x8
 807ceff:  mov DWORD PTR [edx+0x4], eax
 807cf02:  mov eax, DWORD PTR [ebp-0x10]
 807cf05:  mov ebx, DWORD PTR [ebp-0xc]
 807cf08:  mov esi, DWORD PTR [ebp-0x8]
 807cf0b:  mov edi, DWORD PTR [ebp-0x4]
 807cf0e:  mov esp, ebp
 807cf10:  pop ebp
 807cf11:  ret
 807cf12:  lea esi, [esi]
 807cf18:  mov DWORD PTR [esp], ebx
 807cf1b:  call 804b4a0
 807cf20:  mov DWORD PTR [ebp-0x10], 0x0
 807cf27:  jmp 807cf02
 807cf29:  lea esi, [esi]

0807cf30 <_dl_allocate_tls>:
 807cf30:  push ebp
 807cf31:  mov ebp, esp
 807cf33:  sub esp, 0x18
 807cf36:  test eax, eax
 807cf38:  mov DWORD PTR [ebp-0x8], esi
 807cf3b:  mov esi, eax
 807cf3d:  mov DWORD PTR [ebp-0xc], ebx
 807cf40:  mov DWORD PTR [ebp-0x4], edi
 807cf43:  je 807cf88
 807cf45:  mov eax, ds:0x80d2d94
 807cf4a:  xor ebx, ebx
 807cf4c:  mov DWORD PTR [esp+0x4], 0x8
 807cf54:  lea edi, [eax+0xe]
 807cf57:  add eax, 0x10
 807cf5a:  mov DWORD PTR [esp], eax
 807cf5d:  call 804d3c0
 807cf62:  test eax, eax
 807cf64:  je 807cf70
 807cf66:  mov DWORD PTR [eax], edi
 807cf68:  add eax, 0x8
 807cf6b:  mov ebx, esi
 807cf6d:  mov DWORD PTR [esi+0x4], eax
 807cf70:  mov esi, DWORD PTR [ebp-0x8]
 807cf73:  mov eax, ebx
 807cf75:  mov edi, DWORD PTR [ebp-0x4]
 807cf78:  mov ebx, DWORD PTR [ebp-0xc]
 807cf7b:  mov esp, ebp
 807cf7d:  pop ebp
 807cf7e:  jmp 807cc80
 807cf83:  nop
 807cf84:  lea esi, [esi]
 807cf88:  mov edi, DWORD PTR ds:0x80d0d28
 807cf8e:  mov DWORD PTR [esp+0x4], edi
 807cf92:  mov eax, ds:0x80d2d90
 807cf97:  mov DWORD PTR [esp], eax
 807cf9a:  call 804d880
 807cf9f:  test eax, eax
 807cfa1:  mov ebx, eax
 807cfa3:  je 807cf70
 807cfa5:  lea edi, [eax+edi-0x470]
 807cfac:  mov ecx, 0x11c
 807cfb1:  mov eax, esi
 807cfb3:  mov DWORD PTR [ebp-0x10], edi
 807cfb6:  rep stosd
 807cfb8:  mov eax, ds:0x80d2d94
 807cfbd:  mov DWORD PTR [esp+0x4], 0x8
 807cfc5:  lea esi, [eax+0xe]
 807cfc8:  add eax, 0x10
 807cfcb:  mov DWORD PTR [esp], eax
 807cfce:  call 804d3c0
 807cfd3:  test eax, eax
 807cfd5:  je 807cfe8
 807cfd7:  mov DWORD PTR [eax], esi
 807cfd9:  mov edx, DWORD PTR [ebp-0x10]
 807cfdc:  add eax, 0x8
 807cfdf:  mov DWORD PTR [edx+0x4], eax
 807cfe2:  mov ebx, edx
 807cfe4:  jmp 807cf70
 807cfe6:  xchg ax, ax
 807cfe8:  mov DWORD PTR [esp], ebx
 807cfeb:  xor ebx, ebx
 807cfed:  call 804b4a0
 807cff2:  jmp 807cf70
 807cff7:  nop
 807cff8:  nop
 807cff9:  nop
 807cffa:  nop
 807cffb:  nop
 807cffc:  nop
 807cffd:  nop
 807cffe:  nop
 807cfff:  nop

0807d000 <_dl_get_origin>:
 807d000:  push ebp
 807d001:  mov edx, 0x1000
 807d006:  mov ebp, esp
 807d008:  push edi
 807d009:  push esi
 807d00a:  push ebx
 807d00b:  mov ebx, 0x80b4f3f
 807d010:  lea eax, [ebp-0x100c]
 807d016:  sub esp, 0x1014
 807d01c:  mov ecx, eax
 807d01e:  mov DWORD PTR [ebp-0x1010], eax
 807d024:  mov eax, 0x55
 807d029:  int 0x80
 807d02b:  cmp eax, 0xfffff000
 807d030:  mov esi, eax
 807d032:  ja 807d0d8
 807d038:  test eax, eax
 807d03a:  jle 807d0d8
 807d040:  movzx eax, BYTE PTR [ebp-0x100c]
 807d047:  cmp al, 0x5b
 807d049:  je 807d0d8
 807d04f:  cmp al, 0x2f
 807d051:  jne 807d15f
 807d057:  cmp esi, 0x1
 807d05a:  je 807d090
 807d05c:  lea ebx, [esi-0x1]
 807d05f:  cmp BYTE PTR [ebp+ebx-0x100c], 0x2f
 807d067:  je 807d150
 807d06d:  lea edx, [ebp+esi-0x100e]
 807d074:  mov esi, ebx
 807d076:  jmp 807d08b
 807d078:  movzx eax, BYTE PTR [edx]
 807d07b:  sub ebx, 0x1
 807d07e:  sub edx, 0x1
 807d081:  cmp al, 0x2f
 807d083:  je 807d150
 807d089:  mov esi, ebx
 807d08b:  cmp ebx, 0x1
 807d08e:  jne 807d078
 807d090:  mov eax, 0x2
 807d095:  xor ebx, ebx
 807d097:  mov DWORD PTR [esp], eax
 807d09a:  call 804d6f0
 807d09f:  test eax, eax
 807d0a1:  mov edi, eax
 807d0a3:  je 807d138
 807d0a9:  sub esi, 0x1
 807d0ac:  je 807d158
 807d0b2:  lea eax, [ebp-0x100c]
 807d0b8:  mov DWORD PTR [esp+0x8], ebx
 807d0bc:  mov DWORD PTR [esp], edi
 807d0bf:  mov DWORD PTR [esp+0x4], eax
 807d0c3:  call 806c310
 807d0c8:  mov BYTE PTR [eax], 0x0
 807d0cb:  add esp, 0x1014
 807d0d1:  mov eax, edi
 807d0d3:  pop ebx
 807d0d4:  pop esi
 807d0d5:  pop edi
 807d0d6:  pop ebp
 807d0d7:  ret
 807d0d8:  mov eax, ds:0x80d2dfc
 807d0dd:  test eax, eax
 807d0df:  je 807d138
 807d0e1:  mov DWORD PTR [esp], eax
 807d0e4:  call 804eea0
 807d0e9:  mov ebx, eax
 807d0eb:  lea eax, [eax+0x1]
 807d0ee:  mov DWORD PTR [esp], eax
 807d0f1:  call 804d6f0
 807d0f6:  test eax, eax
 807d0f8:  mov edi, eax
 807d0fa:  je 807d138
 807d0fc:  mov eax, ds:0x80d2dfc
 807d101:  mov DWORD PTR [esp+0x8], ebx
 807d105:  mov DWORD PTR [esp], edi
 807d108:  mov DWORD PTR [esp+0x4], eax
 807d10c:  call 806c310
 807d111:  lea ecx, [edi+0x1]
 807d114:  jmp 807d123
 807d116:  xchg ax, ax
 807d118:  cmp BYTE PTR [eax-0x1], 0x2f
 807d11c:  lea edx, [eax-0x1]
 807d11f:  jne 807d127
 807d121:  mov eax, edx
 807d123:  cmp eax, ecx
 807d125:  ja 807d118
 807d127:  mov BYTE PTR [eax], 0x0
 807d12a:  add esp, 0x1014
 807d130:  mov eax, edi
 807d132:  pop ebx
 807d133:  pop esi
 807d134:  pop edi
 807d135:  pop ebp
 807d136:  ret
 807d137:  nop
 807d138:  mov edi, 0xffffffff
 807d13d:  add esp, 0x1014
 807d143:  mov eax, edi
 807d145:  pop ebx
 807d146:  pop esi
 807d147:  pop edi
 807d148:  pop ebp
 807d149:  ret
 807d14a:  lea esi, [esi]
 807d150:  lea eax, [esi+0x1]
 807d153:  jmp 807d097
 807d158:  mov WORD PTR [eax], 0x2f
 807d15d:  jmp 807d12a
 807d15f:  mov DWORD PTR [esp+0xc], 0x80b4f60
 807d167:  mov DWORD PTR [esp+0x8], 0x30
 807d16f:  mov DWORD PTR [esp+0x4], 0x80b4f70
 807d177:  mov DWORD PTR [esp], 0x80b4f4e
 807d17e:  call 8051490
 807d183:  nop
 807d184:  nop
 807d185:  nop
 807d186:  nop
 807d187:  nop
 807d188:  nop
 807d189:  nop
 807d18a:  nop
 807d18b:  nop
 807d18c:  nop
 807d18d:  nop
 807d18e:  nop
 807d18f:  nop

0807d190 <_dl_make_stack_executable>:
 807d190:  push ebp
 807d191:  mov ebp, esp
 807d193:  push ebx
 807d194:  mov ebx, eax
 807d196:  sub esp, 0xc
 807d199:  mov ecx, DWORD PTR [eax]
 807d19b:  mov eax, 0x1
 807d1a0:  cmp ecx, DWORD PTR ds:0x80d0cd4
 807d1a6:  mov edx, DWORD PTR ds:0x80d2e2c
 807d1ac:  jne 807d1da
 807d1ae:  mov eax, ds:0x80d0cdc
 807d1b3:  mov DWORD PTR [esp+0x4], edx
 807d1b7:  neg edx
 807d1b9:  and ecx, edx
 807d1bb:  mov DWORD PTR [esp], ecx
 807d1be:  mov DWORD PTR [esp+0x8], eax
 807d1c2:  call 8050070
 807d1c7:  test eax, eax
 807d1c9:  jne 807d1e0
 807d1cb:  or DWORD PTR ds:0x80d0d70, 0x1
 807d1d2:  xor eax, eax
 807d1d4:  mov DWORD PTR [ebx], 0x0
 807d1da:  add esp, 0xc
 807d1dd:  pop ebx
 807d1de:  pop ebp
 807d1df:  ret
 807d1e0:  mov edx, 0xffffffe8
 807d1e6:  mov eax, gs:0x0
 807d1ec:  mov eax, DWORD PTR [eax+edx]
 807d1ef:  jmp 807d1da
 807d1f1:  nop
 807d1f2:  nop
 807d1f3:  nop
 807d1f4:  nop
 807d1f5:  nop
 807d1f6:  nop
 807d1f7:  nop
 807d1f8:  nop
 807d1f9:  nop
 807d1fa:  nop
 807d1fb:  nop
 807d1fc:  nop
 807d1fd:  nop
 807d1fe:  nop
 807d1ff:  nop

0807d200 <_dl_open>:
 807d200:  push ebp
 807d201:  mov ebp, esp
 807d203:  push edi
 807d204:  push esi
 807d205:  push ebx
 807d206:  sub esp, 0x4c
 807d209:  mov esi, DWORD PTR [ebp+0xc]
 807d20c:  mov ebx, DWORD PTR [ebp+0x14]
 807d20f:  test esi, 0x3
 807d215:  je 807d319
 807d21b:  mov eax, 0x0
 807d220:  test eax, eax
 807d222:  je 807d230
 807d224:  mov DWORD PTR [esp], 0x80d0d7c
 807d22b:  call 0
 807d230:  cmp ebx, 0xff
 807d233:  je 807d32f
 807d239:  test ebx, ebx
 807d23b:  jne 807d2d8
 807d241:  mov eax, DWORD PTR [ebp+0x8]
 807d244:  lea ecx, [ebp-0xd]
 807d247:  mov DWORD PTR [ebp-0x28], ebx
 807d24a:  lea edx, [ebp-0x18]
 807d24d:  lea ebx, [ebp-0x3c]
 807d250:  mov DWORD PTR [esp+0x4], ebx
 807d254:  mov DWORD PTR [ebp-0x3c], eax
 807d257:  mov eax, DWORD PTR [ebp+0x10]
 807d25a:  mov DWORD PTR [ebp-0x38], esi
 807d25d:  mov DWORD PTR [ebp-0x2c], 0x0
 807d264:  mov DWORD PTR [esp], 0x807d710
 807d26b:  mov DWORD PTR [ebp-0x34], eax
 807d26e:  mov eax, DWORD PTR [ebp+0x4]
 807d271:  mov DWORD PTR [ebp-0x30], eax
 807d274:  mov eax, DWORD PTR [ebp+0x18]
 807d277:  mov DWORD PTR [ebp-0x24], eax
 807d27a:  mov eax, DWORD PTR [ebp+0x1c]
 807d27d:  mov DWORD PTR [ebp-0x20], eax
 807d280:  mov eax, DWORD PTR [ebp+0x20]
 807d283:  mov DWORD PTR [ebp-0x1c], eax
 807d286:  lea eax, [ebp-0x14]
 807d289:  call 807bf90
 807d28e:  sub esp, 0x8
 807d291:  mov ebx, eax
 807d293:  call 8078070
 807d298:  mov ecx, DWORD PTR [ebp-0x18]
 807d29b:  test ecx, ecx
 807d29d:  jne 807d37e
 807d2a3:  mov edx, DWORD PTR [ebp-0x28]
 807d2a6:  xor eax, eax
 807d2a8:  call 807c2d0
 807d2ad:  mov eax, DWORD PTR [eax+0xc]
 807d2b0:  test eax, eax
 807d2b2:  jne 807d35a
 807d2b8:  mov eax, 0x0
 807d2bd:  test eax, eax
 807d2bf:  je 807d2cd
 807d2c1:  mov DWORD PTR [esp], 0x80d0d7c
 807d2c8:  call 0
 807d2cd:  mov eax, DWORD PTR [ebp-0x2c]
 807d2d0:  lea esp, [ebp-0xc]
 807d2d3:  pop ebx
 807d2d4:  pop esi
 807d2d5:  pop edi
 807d2d6:  pop ebp
 807d2d7:  ret
 807d2d8:  cmp ebx, 0xfe
 807d2db:  je 807d241
 807d2e1:  lea eax, [ebx+ebx*8]
 807d2e4:  mov edi, DWORD PTR [eax*4+0x80d2e44]
 807d2eb:  test edi, edi
 807d2ed:  je 807d303
 807d2ef:  mov eax, DWORD PTR [eax*4+0x80d2e40]
 807d2f6:  test BYTE PTR [eax+0x195], 0x10
 807d2fd:  je 807d241
 807d303:  mov edx, DWORD PTR [ebp+0x8]
 807d306:  xor ecx, ecx
 807d308:  mov eax, 0x16
 807d30d:  mov DWORD PTR [esp], 0x80b508c
 807d314:  call 807c080
 807d319:  mov edx, DWORD PTR [ebp+0x8]
 807d31c:  xor ecx, ecx
 807d31e:  mov eax, 0x16
 807d323:  mov DWORD PTR [esp], 0x80b4f97
 807d32a:  call 807c080
 807d32f:  mov eax, 0x0
 807d334:  test eax, eax
 807d336:  je 807d344
 807d338:  mov DWORD PTR [esp], 0x80d0d7c
 807d33f:  call 0
 807d344:  mov edx, DWORD PTR [ebp+0x8]
 807d347:  xor ecx, ecx
 807d349:  mov eax, 0x16
 807d34e:  mov DWORD PTR [esp], 0x80b5060
 807d355:  call 807c080
 807d35a:  mov DWORD PTR [esp+0xc], 0x80b5045
 807d362:  mov DWORD PTR [esp+0x8], 0x28c
 807d36a:  mov DWORD PTR [esp+0x4], 0x80b4fb1
 807d372:  mov DWORD PTR [esp], 0x80b50b4
 807d379:  call 8051490
 807d37e:  mov eax, DWORD PTR [ebp-0x2c]
 807d381:  test eax, eax
 807d383:  je 807d39c
 807d385:  and esi, 0x8000000
 807d38b:  jne 807d394
 807d38d:  mov BYTE PTR ds:0x80d2d9c, 0x1
 807d394:  mov DWORD PTR [esp], eax
 807d397:  call 807e670
 807d39c:  mov edx, DWORD PTR [ebp-0x28]
 807d39f:  xor eax, eax
 807d3a1:  call 807c2d0
 807d3a6:  mov edx, DWORD PTR [eax+0xc]
 807d3a9:  test edx, edx
 807d3ab:  je 807d3d1
 807d3ad:  mov DWORD PTR [esp+0xc], 0x80b5045
 807d3b5:  mov DWORD PTR [esp+0x8], 0x26f
 807d3bd:  mov DWORD PTR [esp+0x4], 0x80b4fb1
 807d3c5:  mov DWORD PTR [esp], 0x80b50b4
 807d3cc:  call 8051490
 807d3d1:  mov eax, 0x0
 807d3d6:  test eax, eax
 807d3d8:  je 807d3e6
 807d3da:  mov DWORD PTR [esp], 0x80d0d7c
 807d3e1:  call 0
 807d3e6:  mov eax, DWORD PTR [ebp-0x18]
 807d3e9:  mov DWORD PTR [ebp-0x40], eax
 807d3ec:  mov DWORD PTR [esp], eax
 807d3ef:  call 804eea0
 807d3f4:  mov edx, DWORD PTR [ebp-0x40]
 807d3f7:  lea edi, [eax+0x1]
 807d3fa:  add edx, edi
 807d3fc:  cmp edx, DWORD PTR [ebp-0x14]
 807d3ff:  je 807d438
 807d401:  add eax, 0x1f
 807d404:  and eax, 0xf0
 807d407:  sub esp, eax
 807d409:  mov eax, DWORD PTR [ebp-0x40]
 807d40c:  lea esi, [esp+0x1f]
 807d410:  and esi, 0xf0
 807d413:  mov DWORD PTR [esp+0x8], edi
 807d417:  mov DWORD PTR [esp+0x4], eax
 807d41b:  mov DWORD PTR [esp], esi
 807d41e:  call 804efc0
 807d423:  cmp BYTE PTR [ebp-0xd], 0x0
 807d427:  jne 807d46e
 807d429:  mov edx, DWORD PTR [ebp-0x14]
 807d42c:  xor ecx, ecx
 807d42e:  mov eax, ebx
 807d430:  mov DWORD PTR [esp], esi
 807d433:  call 807c080
 807d438:  mov DWORD PTR [esp], edx
 807d43b:  call 804eea0
 807d440:  lea edx, [edi+eax+0x1]
 807d444:  lea eax, [edx+0x1e]
 807d447:  and eax, 0xf0
 807d44a:  sub esp, eax
 807d44c:  mov eax, DWORD PTR [ebp-0x40]
 807d44f:  lea esi, [esp+0x1f]
 807d453:  and esi, 0xf0
 807d456:  mov DWORD PTR [esp+0x8], edx
 807d45a:  mov DWORD PTR [esp+0x4], eax
 807d45e:  mov DWORD PTR [esp], esi
 807d461:  call 804efc0
 807d466:  lea eax, [esi+edi]
 807d469:  mov DWORD PTR [ebp-0x14], eax
 807d46c:  jmp 807d423
 807d46e:  mov eax, DWORD PTR [ebp-0x18]
 807d471:  mov DWORD PTR [esp], eax
 807d474:  call 804b4a0
 807d479:  jmp 807d429
 807d47b:  nop
 807d47c:  lea esi, [esi]

0807d480 <add_to_global>:
 807d480:  push ebp
 807d481:  mov ebp, esp
 807d483:  push edi
 807d484:  xor edi, edi
 807d486:  push esi
 807d487:  push ebx
 807d488:  sub esp, 0x1c
 807d48b:  mov ebx, DWORD PTR [eax+0x160]
 807d491:  mov DWORD PTR [ebp-0x18], eax
 807d494:  test ebx, ebx
 807d496:  je 807d4c0
 807d498:  mov esi, DWORD PTR [eax+0x15c]
 807d49e:  xor edi, edi
 807d4a0:  xor edx, edx
 807d4a2:  lea esi, [esi]
 807d4a8:  mov eax, DWORD PTR [esi+edx*4]
 807d4ab:  lea ecx, [edi+0x1]
 807d4ae:  test BYTE PTR [eax+0x194], 0x10
 807d4b5:  jne 807d4b9
 807d4b7:  mov edi, ecx
 807d4b9:  add edx, 0x1
 807d4bc:  cmp edx, ebx
 807d4be:  jb 807d4a8
 807d4c0:  mov edx, DWORD PTR [ebp-0x18]
 807d4c3:  mov eax, DWORD PTR [edx+0x18]
 807d4c6:  lea ecx, [eax+eax*8]
 807d4c9:  lea esi, [ecx*4+0x80d2e40]
 807d4d0:  mov edx, DWORD PTR [esi+0xc]
 807d4d3:  mov DWORD PTR [ebp-0x14], esi
 807d4d6:  test edx, edx
 807d4d8:  je 807d5d0
 807d4de:  mov eax, DWORD PTR [esi+0x8]
 807d4e1:  mov esi, DWORD PTR [eax+0x4]
 807d4e4:  lea eax, [edi+esi]
 807d4e7:  cmp edx, eax
 807d4e9:  jb 807d550
 807d4eb:  test ebx, ebx
 807d4ed:  je 807d536
 807d4ef:  xor ecx, ecx
 807d4f1:  lea esi, [esi]
 807d4f8:  mov edx, DWORD PTR [ebp-0x18]
 807d4fb:  mov eax, DWORD PTR [edx+0x15c]
 807d501:  mov edx, DWORD PTR [eax+ecx*4]
 807d504:  movzx eax, BYTE PTR [edx+0x194]
 807d50b:  test al, 0x10
 807d50d:  jne 807d52f
 807d50f:  or eax, 0x10
 807d512:  mov BYTE PTR [edx+0x194], al
 807d518:  mov ebx, DWORD PTR [ebp-0x14]
 807d51b:  mov eax, DWORD PTR [ebx+0x8]
 807d51e:  mov eax, DWORD PTR [eax]
 807d520:  mov DWORD PTR [eax+esi*4], edx
 807d523:  mov eax, DWORD PTR [ebp-0x18]
 807d526:  add esi, 0x1
 807d529:  mov ebx, DWORD PTR [eax+0x160]
 807d52f:  add ecx, 0x1
 807d532:  cmp ebx, ecx
 807d534:  ja 807d4f8
 807d536:  mov edx, DWORD PTR [ebp-0x14]
 807d539:  mov eax, DWORD PTR [edx+0x8]
 807d53c:  mov DWORD PTR [eax+0x4], esi
 807d53f:  lea esp, [ebp-0xc]
 807d542:  xor eax, eax
 807d544:  pop ebx
 807d545:  pop esi
 807d546:  pop edi
 807d547:  pop ebp
 807d548:  ret
 807d549:  lea esi, [esi]
 807d550:  mov eax, DWORD PTR [ecx*4+0x80d2e48]
 807d557:  mov eax, DWORD PTR [eax]
 807d559:  mov DWORD PTR [ebp-0x10], eax
 807d55c:  lea eax, [edi+edx]
 807d55f:  lea esi, [eax+eax]
 807d562:  shl eax, 0x3
 807d565:  mov DWORD PTR [esp], eax
 807d568:  call 804d6f0
 807d56d:  test eax, eax
 807d56f:  mov ebx, eax
 807d571:  je 807d629
 807d577:  mov edx, DWORD PTR [ebp-0x14]
 807d57a:  mov eax, DWORD PTR [edx+0xc]
 807d57d:  mov DWORD PTR [esp], ebx
 807d580:  shl eax, 0x2
 807d583:  mov DWORD PTR [esp+0x8], eax
 807d587:  mov eax, DWORD PTR [ebp-0x10]
 807d58a:  mov DWORD PTR [esp+0x4], eax
 807d58e:  call 804efc0
 807d593:  mov edx, DWORD PTR [ebp-0x14]
 807d596:  mov eax, DWORD PTR [edx+0x8]
 807d599:  mov DWORD PTR [edx+0xc], esi
 807d59c:  mov DWORD PTR [eax], ebx
 807d59e:  mov eax, gs:0xc
 807d5a4:  test eax, eax
 807d5a6:  jne 807d644
 807d5ac:  mov ebx, DWORD PTR [ebp-0x10]
 807d5af:  mov DWORD PTR [esp], ebx
 807d5b2:  call 804b4a0
 807d5b7:  mov esi, DWORD PTR [ebp-0x14]
 807d5ba:  mov eax, DWORD PTR [esi+0x8]
 807d5bd:  mov esi, DWORD PTR [eax+0x4]
 807d5c0:  mov eax, DWORD PTR [ebp-0x18]
 807d5c3:  mov ebx, DWORD PTR [eax+0x160]
 807d5c9:  jmp 807d4eb
 807d5ce:  xchg ax, ax
 807d5d0:  mov eax, DWORD PTR [esi+0x8]
 807d5d3:  mov eax, DWORD PTR [eax+0x4]
 807d5d6:  lea eax, [edi+eax+0x8]
 807d5da:  mov DWORD PTR [esi+0xc], eax
 807d5dd:  shl eax, 0x2
 807d5e0:  mov DWORD PTR [esp], eax
 807d5e3:  call 804d6f0
 807d5e8:  test eax, eax
 807d5ea:  mov ecx, eax
 807d5ec:  je 807d622
 807d5ee:  mov esi, DWORD PTR [ebp-0x14]
 807d5f1:  mov ebx, DWORD PTR [esi+0x8]
 807d5f4:  mov eax, DWORD PTR [ebx+0x4]
 807d5f7:  mov edx, DWORD PTR [ebx]
 807d5f9:  mov DWORD PTR [esp], ecx
 807d5fc:  shl eax, 0x2
 807d5ff:  mov DWORD PTR [esp+0x8], eax
 807d603:  mov DWORD PTR [esp+0x4], edx
 807d607:  call 804efc0
 807d60c:  mov DWORD PTR [ebx], eax
 807d60e:  mov eax, DWORD PTR [esi+0x8]
 807d611:  mov esi, DWORD PTR [eax+0x4]
 807d614:  mov eax, DWORD PTR [ebp-0x18]
 807d617:  mov ebx, DWORD PTR [eax+0x160]
 807d61d:  jmp 807d4eb
 807d622:  mov DWORD PTR [esi+0xc], 0x0
 807d629:  mov edx, DWORD PTR [ebp-0x18]
 807d62c:  xor ecx, ecx
 807d62e:  mov eax, DWORD PTR [edx+0x1c]
 807d631:  mov DWORD PTR [esp], 0x80b4fbb
 807d638:  mov edx, DWORD PTR [eax]
 807d63a:  mov eax, 0xc
 807d63f:  call 807c080
 807d644:  call DWORD PTR ds:0x80d2de0
 807d64a:  jmp 807d5ac
 807d64f:  nop

0807d650 <_dl_scope_free>:
 807d650:  push ebp
 807d651:  mov ebp, esp
 807d653:  push ebx
 807d654:  sub esp, 0x4
 807d657:  mov eax, gs:0xc
 807d65d:  test eax, eax
 807d65f:  jne 807d674
 807d661:  mov eax, DWORD PTR [ebp+0x8]
 807d664:  mov DWORD PTR [esp], eax
 807d667:  call 804b4a0
 807d66c:  xor eax, eax
 807d66e:  add esp, 0x4
 807d671:  pop ebx
 807d672:  pop ebp
 807d673:  ret
 807d674:  mov ebx, DWORD PTR ds:0x80d2df8
 807d67a:  test ebx, ebx
 807d67c:  je 807d6c6
 807d67e:  mov eax, DWORD PTR [ebx]
 807d680:  cmp eax, 0x31
 807d683:  ja 807d695
 807d685:  mov edx, DWORD PTR [ebp+0x8]
 807d688:  mov DWORD PTR [ebx+eax*4+0x4], edx
 807d68c:  add eax, 0x1
 807d68f:  mov DWORD PTR [ebx], eax
 807d691:  xor eax, eax
 807d693:  jmp 807d66e
 807d695:  call DWORD PTR ds:0x80d2de0
 807d69b:  mov eax, DWORD PTR [ebx]
 807d69d:  test eax, eax
 807d69f:  je 807d6bf
 807d6a1:  lea esi, [esi]
 807d6a8:  sub eax, 0x1
 807d6ab:  mov DWORD PTR [ebx], eax
 807d6ad:  mov eax, DWORD PTR [ebx+eax*4+0x4]
 807d6b1:  mov DWORD PTR [esp], eax
 807d6b4:  call 804b4a0
 807d6b9:  mov eax, DWORD PTR [ebx]
 807d6bb:  test eax, eax
 807d6bd:  jne 807d6a8
 807d6bf:  mov eax, 0x1
 807d6c4:  jmp 807d66e
 807d6c6:  mov DWORD PTR [esp], 0xcc
 807d6cd:  call 804d6f0
 807d6d2:  test eax, eax
 807d6d4:  mov ds:0x80d2df8, eax
 807d6d9:  je 807d6eb
 807d6db:  mov edx, DWORD PTR [ebp+0x8]
 807d6de:  mov DWORD PTR [eax], 0x1
 807d6e4:  mov DWORD PTR [eax+0x4], edx
 807d6e7:  xor eax, eax
 807d6e9:  jmp 807d66e
 807d6eb:  call DWORD PTR ds:0x80d2de0
 807d6f1:  mov edx, DWORD PTR [ebp+0x8]
 807d6f4:  mov DWORD PTR [esp], edx
 807d6f7:  call 804b4a0
 807d6fc:  mov eax, 0x1
 807d701:  jmp 807d66e
 807d706:  lea esi, [esi]
 807d709:  lea edi, [edi]

0807d710 <dl_open_worker>:
 807d710:  push ebp
 807d711:  mov ebp, esp
 807d713:  push edi
 807d714:  push esi
 807d715:  push ebx
 807d716:  sub esp, 0x3c
 807d719:  mov eax, DWORD PTR [ebp+0x8]
 807d71c:  mov edx, DWORD PTR [ebp+0x8]
 807d71f:  mov eax, DWORD PTR [eax]
 807d721:  mov edx, DWORD PTR [edx+0x4]
 807d724:  mov DWORD PTR [ebp-0x2c], eax
 807d727:  mov DWORD PTR [ebp-0x28], edx
 807d72a:  mov DWORD PTR [esp+0x4], 0x24
 807d732:  mov DWORD PTR [esp], eax
 807d735:  call 806ae20
 807d73a:  test eax, eax
 807d73c:  mov DWORD PTR [ebp-0x34], eax
 807d73f:  je 807db78
 807d745:  mov edi, DWORD PTR ds:0x80d2e40
 807d74b:  mov edx, DWORD PTR [ebp+0x8]
 807d74e:  test edi, edi
 807d750:  mov esi, DWORD PTR [edx+0x8]
 807d753:  je 807d78d
 807d755:  mov ebx, edi
 807d757:  nop
 807d758:  cmp esi, DWORD PTR [ebx+0x1ac]
 807d75e:  jb 807d786
 807d760:  cmp esi, DWORD PTR [ebx+0x1b0]
 807d766:  jae 807d786
 807d768:  cmp BYTE PTR [ebx+0x195], 0x0
 807d76f:  js 807db40
 807d775:  mov edx, esi
 807d777:  mov eax, ebx
 807d779:  call 8050ee0
 807d77e:  test eax, eax
 807d780:  jne 807db40
 807d786:  mov ebx, DWORD PTR [ebx+0xc]
 807d789:  test ebx, ebx
 807d78b:  jne 807d758
 807d78d:  mov ecx, DWORD PTR [ebp+0x8]
 807d790:  mov ebx, DWORD PTR [ecx+0x14]
 807d793:  cmp ebx, 0xfe
 807d796:  je 807daf7
 807d79c:  xor eax, eax
 807d79e:  mov edx, ebx
 807d7a0:  call 807c2d0
 807d7a5:  mov eax, DWORD PTR [eax+0xc]
 807d7a8:  test eax, eax
 807d7aa:  jne 807dc14
 807d7b0:  mov eax, DWORD PTR [ebp-0x34]
 807d7b3:  test eax, eax
 807d7b5:  jne 807dcc0
 807d7bb:  mov edx, DWORD PTR [ebp+0x8]
 807d7be:  xor ecx, ecx
 807d7c0:  mov eax, DWORD PTR [edx+0x14]
 807d7c3:  mov DWORD PTR [esp+0xc], eax
 807d7c7:  mov eax, DWORD PTR [ebp-0x28]
 807d7ca:  mov DWORD PTR [esp+0x4], 0x0
 807d7d2:  mov DWORD PTR [esp], 0x2
 807d7d9:  or eax, 0x10000000
 807d7de:  mov DWORD PTR [esp+0x8], eax
 807d7e2:  mov edx, DWORD PTR [ebp-0x2c]
 807d7e5:  mov eax, edi
 807d7e7:  call 80776f0
 807d7ec:  mov ecx, DWORD PTR [ebp+0x8]
 807d7ef:  sub esp, 0x10
 807d7f2:  test eax, eax
 807d7f4:  mov DWORD PTR [ebp-0x24], eax
 807d7f7:  mov DWORD PTR [ecx+0x10], eax
 807d7fa:  je 807db0d
 807d800:  test DWORD PTR [ebp-0x28], 0x40000000
 807d807:  jne 807da42
 807d80d:  mov ebx, DWORD PTR [ebp-0x24]
 807d810:  mov eax, DWORD PTR [ebx+0x190]
 807d816:  mov esi, DWORD PTR [ebx+0x15c]
 807d81c:  add eax, 0x1
 807d81f:  test esi, esi
 807d821:  mov DWORD PTR [ebx+0x190], eax
 807d827:  jne 807dd74
 807d82d:  mov eax, DWORD PTR [ebp-0x28]
 807d830:  xor edx, edx
 807d832:  xor ecx, ecx
 807d834:  mov DWORD PTR [esp], 0x0
 807d83b:  and eax, 0x88000008
 807d840:  mov DWORD PTR [esp+0x4], eax
 807d844:  mov eax, DWORD PTR [ebp-0x24]
 807d847:  call 80961d0
 807d84c:  mov ebx, DWORD PTR [ebp-0x24]
 807d84f:  mov edx, DWORD PTR [ebx+0x160]
 807d855:  sub esp, 0x8
 807d858:  test edx, edx
 807d85a:  je 807d884
 807d85c:  xor ebx, ebx
 807d85e:  xchg ax, ax
 807d860:  mov ecx, DWORD PTR [ebp-0x24]
 807d863:  mov eax, DWORD PTR [ecx+0x15c]
 807d869:  mov eax, DWORD PTR [eax+ebx*4]
 807d86c:  mov eax, DWORD PTR [eax+0x14]
 807d86f:  mov ecx, DWORD PTR [eax+0x170]
 807d875:  test ecx, ecx
 807d877:  je 807daa8
 807d87d:  add ebx, 0x1
 807d880:  cmp ebx, edx
 807d882:  jb 807d860
 807d884:  mov ecx, DWORD PTR [ebp+0x8]
 807d887:  xor eax, eax
 807d889:  xor esi, esi
 807d88b:  mov edx, DWORD PTR [ecx+0x14]
 807d88e:  call 807c2d0
 807d893:  mov DWORD PTR [eax+0xc], 0x0
 807d89a:  call 807c330
 807d89f:  mov eax, DWORD PTR [ebp-0x28]
 807d8a2:  and eax, 0x3
 807d8a5:  sub eax, 0x1
 807d8a8:  je 807dad7
 807d8ae:  mov ebx, DWORD PTR [ebp-0x24]
 807d8b1:  jmp 807d8ba
 807d8b3:  nop
 807d8b4:  lea esi, [esi]
 807d8b8:  mov ebx, eax
 807d8ba:  mov eax, DWORD PTR [ebx+0xc]
 807d8bd:  test eax, eax
 807d8bf:  jne 807d8b8
 807d8c1:  mov eax, DWORD PTR [ebx+0x14]
 807d8c4:  test BYTE PTR [eax+0x194], 0x4
 807d8cb:  je 807d8e4
 807d8cd:  lea esi, [esi]
 807d8d0:  cmp ebx, DWORD PTR [ebp-0x24]
 807d8d3:  je 807d907
 807d8d5:  mov ebx, DWORD PTR [ebx+0x10]
 807d8d8:  mov eax, DWORD PTR [ebx+0x14]
 807d8db:  test BYTE PTR [eax+0x194], 0x4
 807d8e2:  jne 807d8d0
 807d8e4:  mov DWORD PTR [esp+0xc], 0x0
 807d8ec:  mov DWORD PTR [esp+0x8], esi
 807d8f0:  mov eax, DWORD PTR [ebx+0x1cc]
 807d8f6:  mov DWORD PTR [esp], ebx
 807d8f9:  mov DWORD PTR [esp+0x4], eax
 807d8fd:  call 807a300
 807d902:  cmp ebx, DWORD PTR [ebp-0x24]
 807d905:  jne 807d8d5
 807d907:  mov ebx, DWORD PTR [ebp-0x24]
 807d90a:  mov ecx, DWORD PTR [ebx+0x160]
 807d910:  test ecx, ecx
 807d912:  je 807d9f7
 807d918:  mov eax, ebx
 807d91a:  xor edi, edi
 807d91c:  add eax, 0x15c
 807d921:  mov DWORD PTR [ebp-0x30], eax
 807d924:  mov BYTE PTR [ebp-0x1d], 0x0
 807d928:  jmp 807d944
 807d92a:  lea esi, [esi]
 807d930:  and edx, 0x8
 807d933:  je 807da50
 807d939:  add edi, 0x1
 807d93c:  cmp ecx, edi
 807d93e:  jbe 807d9dc
 807d944:  mov edx, DWORD PTR [ebp-0x24]
 807d947:  mov eax, DWORD PTR [edx+0x15c]
 807d94d:  mov esi, DWORD PTR [eax+edi*4]
 807d950:  movzx edx, BYTE PTR [esi+0x194]
 807d957:  mov eax, edx
 807d959:  and eax, 0xb
 807d95c:  cmp al, 0xa
 807d95e:  jne 807d930
 807d960:  mov eax, DWORD PTR [esi+0x1cc]
 807d966:  mov edx, DWORD PTR [eax]
 807d968:  test edx, edx
 807d96a:  je 807dae9
 807d970:  xor ebx, ebx
 807d972:  cmp edx, DWORD PTR [ebp-0x30]
 807d975:  jne 807d98e
 807d977:  jmp 807da87
 807d97c:  lea esi, [esi]
 807d980:  cmp edx, DWORD PTR [ebp-0x30]
 807d983:  nop
 807d984:  lea esi, [esi]
 807d988:  je 807da90
 807d98e:  add ebx, 0x1
 807d991:  mov edx, DWORD PTR [eax+ebx*4]
 807d994:  test edx, edx
 807d996:  xchg ax, ax
 807d998:  jne 807d980
 807d99a:  lea ecx, [ebx+0x1]
 807d99d:  mov DWORD PTR [ebp-0x14], ecx
 807d9a0:  mov edx, DWORD PTR [esi+0x1c8]
 807d9a6:  cmp edx, DWORD PTR [ebp-0x14]
 807d9a9:  jbe 807dc38
 807d9af:  shl ebx, 0x2
 807d9b2:  mov edx, DWORD PTR [ebp-0x14]
 807d9b5:  mov DWORD PTR [eax+edx*4], 0x0
 807d9bc:  mov ecx, DWORD PTR [ebp-0x30]
 807d9bf:  add edi, 0x1
 807d9c2:  mov eax, DWORD PTR [esi+0x1cc]
 807d9c8:  mov DWORD PTR [eax+ebx], ecx
 807d9cb:  mov ebx, DWORD PTR [ebp-0x24]
 807d9ce:  mov ecx, DWORD PTR [ebx+0x160]
 807d9d4:  cmp ecx, edi
 807d9d6:  ja 807d944
 807d9dc:  cmp BYTE PTR [ebp-0x1d], 0x0
 807d9e0:  je 807d9f7
 807d9e2:  mov eax, ds:0x80d2da0
 807d9e7:  add eax, 0x1
 807d9ea:  test eax, eax
 807d9ec:  mov ds:0x80d2da0, eax
 807d9f1:  je 807dea2
 807d9f7:  mov ebx, DWORD PTR [ebp+0x8]
 807d9fa:  mov eax, DWORD PTR [ebx+0x20]
 807d9fd:  mov ecx, DWORD PTR [ebx+0x1c]
 807da00:  mov edx, DWORD PTR [ebx+0x18]
 807da03:  mov DWORD PTR [esp], eax
 807da06:  mov eax, DWORD PTR [ebp-0x24]
 807da09:  call 80974b0
 807da0e:  sub esp, 0x4
 807da11:  test DWORD PTR [ebp-0x28], 0x100
 807da18:  jne 807dabf
 807da1e:  test DWORD PTR [ebp-0x28], 0x1000
 807da25:  jne 807ddd8
 807da2b:  test BYTE PTR ds:0x80d2dd0, 0x40
 807da32:  mov DWORD PTR ds:0x80d0d94, 0x1
 807da3c:  jne 807dbda
 807da42:  lea esp, [ebp-0xc]
 807da45:  pop ebx
 807da46:  pop esi
 807da47:  pop edi
 807da48:  pop ebp
 807da49:  ret
 807da4a:  lea esi, [esi]
 807da50:  mov eax, DWORD PTR [esi+0x230]
 807da56:  test eax, eax
 807da58:  je 807d939
 807da5e:  mov DWORD PTR [esp], esi
 807da61:  call 807cb30
 807da66:  movzx eax, BYTE PTR [esi+0x195]
 807da6d:  test al, 0x4
 807da6f:  jne 807dba9
 807da75:  mov eax, DWORD PTR [ebp-0x24]
 807da78:  mov BYTE PTR [ebp-0x1d], 0x1
 807da7c:  mov ecx, DWORD PTR [eax+0x160]
 807da82:  jmp 807d939
 807da87:  xor ebx, ebx
 807da89:  lea esi, [esi]
 807da90:  test edx, edx
 807da92:  jne 807d939
 807da98:  lea edx, [ebx+0x1]
 807da9b:  mov DWORD PTR [ebp-0x14], edx
 807da9e:  jmp 807d9a0
 807daa3:  nop
 807daa4:  lea esi, [esi]
 807daa8:  xor edx, edx
 807daaa:  xor ecx, ecx
 807daac:  call 8098000
 807dab1:  mov eax, DWORD PTR [ebp-0x24]
 807dab4:  mov edx, DWORD PTR [eax+0x160]
 807daba:  jmp 807d87d
 807dabf:  mov eax, DWORD PTR [ebp-0x24]
 807dac2:  call 807d480
 807dac7:  test eax, eax
 807dac9:  je 807da1e
 807dacf:  lea esp, [ebp-0xc]
 807dad2:  pop ebx
 807dad3:  pop esi
 807dad4:  pop edi
 807dad5:  pop ebp
 807dad6:  ret
 807dad7:  mov eax, ds:0x80d2df0
 807dadc:  test eax, eax
 807dade:  setne al
 807dae1:  movzx esi, al
 807dae4:  jmp 807d8ae
 807dae9:  xor ebx, ebx
 807daeb:  mov DWORD PTR [ebp-0x14], 0x1
 807daf2:  jmp 807d9a0
 807daf7:  test edi, edi
 807daf9:  je 807dc06
 807daff:  mov ebx, DWORD PTR [edi+0x18]
 807db02:  mov eax, DWORD PTR [ebp+0x8]
 807db05:  mov DWORD PTR [eax+0x14], ebx
 807db08:  jmp 807d79c
 807db0d:  test BYTE PTR [ebp-0x28], 0x4
 807db11:  jne 807da42
 807db17:  mov DWORD PTR [esp+0xc], 0x80b504e
 807db1f:  mov DWORD PTR [esp+0x8], 0x12c
 807db27:  mov DWORD PTR [esp+0x4], 0x80b4fb1
 807db2f:  mov DWORD PTR [esp], 0x80b5002
 807db36:  call 8051490
 807db3b:  nop
 807db3c:  lea esi, [esi]
 807db40:  mov eax, DWORD PTR [ebx+0x18]
 807db43:  mov edi, ebx
 807db45:  test eax, eax
 807db47:  je 807d78d
 807db4d:  mov DWORD PTR [esp+0xc], 0x80b504e
 807db55:  mov DWORD PTR [esp+0x8], 0xf2
 807db5d:  mov DWORD PTR [esp+0x4], 0x80b4fb1
 807db65:  mov DWORD PTR [esp], 0x80b4fd6
 807db6c:  call 8051490
 807db71:  lea esi, [esi]
 807db78:  mov ecx, DWORD PTR [ebp+0x8]
 807db7b:  mov ebx, DWORD PTR [ecx+0x14]
 807db7e:  cmp ebx, 0xfe
 807db81:  je 807d745
 807db87:  mov DWORD PTR [esp+0x4], 0x2f
 807db8f:  mov eax, DWORD PTR [ebp-0x2c]
 807db92:  xor edi, edi
 807db94:  mov DWORD PTR [esp], eax
 807db97:  call 806ae20
 807db9c:  test eax, eax
 807db9e:  jne 807d79c
 807dba4:  jmp 807d745
 807dba9:  and eax, 0xfb
 807dbac:  mov BYTE PTR [esi+0x195], al
 807dbb2:  mov DWORD PTR [esp], esi
 807dbb5:  call DWORD PTR ds:0x80d0d64
 807dbbb:  test BYTE PTR [esi+0x195], 0x4
 807dbc2:  jne 807dec2
 807dbc8:  mov edx, DWORD PTR [ebp-0x24]
 807dbcb:  mov BYTE PTR [ebp-0x1d], 0x1
 807dbcf:  mov ecx, DWORD PTR [edx+0x160]
 807dbd5:  jmp 807d939
 807dbda:  mov edx, DWORD PTR [ebp-0x24]
 807dbdd:  mov eax, DWORD PTR [edx+0x190]
 807dbe3:  mov DWORD PTR [esp+0xc], eax
 807dbe7:  mov eax, DWORD PTR [edx+0x18]
 807dbea:  mov DWORD PTR [esp+0x8], eax
 807dbee:  mov eax, DWORD PTR [edx+0x4]
 807dbf1:  mov DWORD PTR [esp], 0x80b515c
 807dbf8:  mov DWORD PTR [esp+0x4], eax
 807dbfc:  call 807c8d0
 807dc01:  jmp 807da42
 807dc06:  mov DWORD PTR [ecx+0x14], 0x0
 807dc0d:  xor ebx, ebx
 807dc0f:  jmp 807d79c
 807dc14:  mov DWORD PTR [esp+0xc], 0x80b504e
 807dc1c:  mov DWORD PTR [esp+0x8], 0x104
 807dc24:  mov DWORD PTR [esp+0x4], 0x80b4fb1
 807dc2c:  mov DWORD PTR [esp], 0x80b50f4
 807dc33:  call 8051490
 807dc38:  lea ecx, [esi+0x1b8]
 807dc3e:  cmp eax, ecx
 807dc40:  mov DWORD PTR [ebp-0x10], ecx
 807dc43:  je 807dc54
 807dc45:  cmp edx, 0x3
 807dc48:  mov DWORD PTR [ebp-0x18], ecx
 807dc4b:  mov DWORD PTR [ebp-0x1c], 0x4
 807dc52:  jbe 807dc7a
 807dc54:  lea eax, [edx+edx]
 807dc57:  mov DWORD PTR [ebp-0x1c], eax
 807dc5a:  lea eax, [edx*8]
 807dc61:  mov DWORD PTR [esp], eax
 807dc64:  call 804d6f0
 807dc69:  test eax, eax
 807dc6b:  mov DWORD PTR [ebp-0x18], eax
 807dc6e:  je 807de66
 807dc74:  mov eax, DWORD PTR [esi+0x1cc]
 807dc7a:  shl ebx, 0x2
 807dc7d:  mov DWORD PTR [esp+0x8], ebx
 807dc81:  mov DWORD PTR [esp+0x4], eax
 807dc85:  mov edx, DWORD PTR [ebp-0x18]
 807dc88:  mov DWORD PTR [esp], edx
 807dc8b:  call 804efc0
 807dc90:  mov edx, DWORD PTR [esi+0x1cc]
 807dc96:  mov eax, DWORD PTR [ebp-0x18]
 807dc99:  cmp DWORD PTR [ebp-0x10], edx
 807dc9c:  mov DWORD PTR [esi+0x1cc], eax
 807dca2:  je 807dcb2
 807dca4:  mov DWORD PTR [esp], edx
 807dca7:  call 807d650
 807dcac:  mov eax, DWORD PTR [esi+0x1cc]
 807dcb2:  mov ecx, DWORD PTR [ebp-0x1c]
 807dcb5:  mov DWORD PTR [esi+0x1c8], ecx
 807dcbb:  jmp 807d9b2
 807dcc0:  mov edx, DWORD PTR [ebp-0x2c]
 807dcc3:  mov DWORD PTR [esp], edx
 807dcc6:  call 804eea0
 807dccb:  mov DWORD PTR [esp+0x4], 0x0
 807dcd3:  mov ecx, DWORD PTR [ebp-0x34]
 807dcd6:  mov DWORD PTR [esp], ecx
 807dcd9:  mov esi, eax
 807dcdb:  call 8075b30
 807dce0:  mov ebx, eax
 807dce2:  mov eax, esi
 807dce4:  test ebx, ebx
 807dce6:  je 807dd1f
 807dce8:  test edi, edi
 807dcea:  je 807de0a
 807dcf0:  mov eax, DWORD PTR [edi+0x1a8]
 807dcf6:  test eax, eax
 807dcf8:  je 807de2b
 807dcfe:  cmp eax, 0xff
 807dd01:  je 807dd70
 807dd03:  mov DWORD PTR [esp], eax
 807dd06:  call 804eea0
 807dd0b:  mov edx, DWORD PTR ds:0x80d2dcc
 807dd11:  cmp eax, edx
 807dd13:  jae 807dd17
 807dd15:  mov eax, edx
 807dd17:  sub eax, 0x7
 807dd1a:  imul eax, ebx
 807dd1d:  add eax, esi
 807dd1f:  add eax, 0x1f
 807dd22:  and eax, 0xf0
 807dd25:  sub esp, eax
 807dd27:  lea ebx, [esp+0x1f]
 807dd2b:  and ebx, 0xf0
 807dd2e:  mov DWORD PTR [esp+0xc], 0x0
 807dd36:  mov DWORD PTR [esp+0x8], ebx
 807dd3a:  mov eax, DWORD PTR [ebp-0x2c]
 807dd3d:  mov DWORD PTR [esp], edi
 807dd40:  mov DWORD PTR [esp+0x4], eax
 807dd44:  call 80759b0
 807dd49:  mov DWORD PTR [ebp-0x2c], ebx
 807dd4c:  cmp BYTE PTR [ebx], 0x0
 807dd4f:  jne 807d7bb
 807dd55:  mov DWORD PTR [esp], 0x80b5134
 807dd5c:  xor ecx, ecx
 807dd5e:  mov edx, 0x80b4dfa
 807dd63:  xor eax, eax
 807dd65:  call 807c080
 807dd6a:  lea esi, [esi]
 807dd70:  xor eax, eax
 807dd72:  jmp 807dd0b
 807dd74:  test BYTE PTR ds:0x80d2dd0, 0x40
 807dd7b:  jne 807dde7
 807dd7d:  test DWORD PTR [ebp-0x28], 0x100
 807dd84:  lea esi, [esi]
 807dd88:  je 807dd9b
 807dd8a:  mov eax, DWORD PTR [ebp-0x24]
 807dd8d:  test BYTE PTR [eax+0x194], 0x10
 807dd94:  jne 807dd9b
 807dd96:  call 807d480
 807dd9b:  mov ecx, DWORD PTR [ebp+0x8]
 807dd9e:  xor eax, eax
 807dda0:  mov edx, DWORD PTR [ecx+0x14]
 807dda3:  call 807c2d0
 807dda8:  mov ebx, DWORD PTR [eax+0xc]
 807ddab:  test ebx, ebx
 807ddad:  je 807da42
 807ddb3:  mov DWORD PTR [esp+0xc], 0x80b504e
 807ddbb:  mov DWORD PTR [esp+0x8], 0x144
 807ddc3:  mov DWORD PTR [esp+0x4], 0x80b4fb1
 807ddcb:  mov DWORD PTR [esp], 0x80b50f4
 807ddd2:  call 8051490
 807ddd7:  nop
 807ddd8:  mov eax, DWORD PTR [ebp-0x24]
 807dddb:  or DWORD PTR [eax+0x200], 0x8
 807dde2:  jmp 807da2b
 807dde7:  mov DWORD PTR [esp+0xc], eax
 807ddeb:  mov eax, DWORD PTR [ebx+0x18]
 807ddee:  mov DWORD PTR [esp+0x8], eax
 807ddf2:  mov eax, DWORD PTR [ebx+0x4]
 807ddf5:  mov DWORD PTR [esp], 0x80b515c
 807ddfc:  mov DWORD PTR [esp+0x4], eax
 807de00:  call 807c8d0
 807de05:  jmp 807dd7d
 807de0a:  call 807d000
 807de0f:  mov edx, eax
 807de11:  lea eax, [eax-0x1]
 807de14:  cmp eax, 0xfd
 807de17:  nop
 807de18:  ja 807dd70
 807de1e:  mov DWORD PTR [esp], edx
 807de21:  call 804eea0
 807de26:  jmp 807dd0b
 807de2b:  mov eax, DWORD PTR [edi+0x4]
 807de2e:  cmp BYTE PTR [eax], 0x0
 807de31:  lea esi, [esi]
 807de38:  jne 807de7e
 807de3a:  lea esi, [esi]
 807de40:  call 807d000
 807de45:  mov edx, eax
 807de47:  mov DWORD PTR [edi+0x1a8], eax
 807de4d:  lea eax, [eax-0x1]
 807de50:  cmp eax, 0xfd
 807de53:  ja 807dd70
 807de59:  mov DWORD PTR [esp], edx
 807de5c:  call 804eea0
 807de61:  jmp 807dd0b
 807de66:  mov DWORD PTR [esp], 0x80b5011
 807de6d:  xor ecx, ecx
 807de6f:  mov edx, 0x80b4dfa
 807de74:  mov eax, 0xc
 807de79:  call 807c080
 807de7e:  mov DWORD PTR [esp+0xc], 0x80b504e
 807de86:  mov DWORD PTR [esp+0x8], 0x10f
 807de8e:  mov DWORD PTR [esp+0x4], 0x80b4fb1
 807de96:  mov DWORD PTR [esp], 0x80b4fe4
 807de9d:  call 8051490
 807dea2:  mov DWORD PTR [esp+0x4], 0x80b518c
 807deaa:  mov DWORD PTR [esp], 0x2
 807deb1:  call 807c890
 807deb6:  mov DWORD PTR [esp], 0x7f
 807debd:  call 804f170
 807dec2:  mov DWORD PTR [esp+0xc], 0x80b504e
 807deca:  mov DWORD PTR [esp+0x8], 0x1f6
 807ded2:  mov DWORD PTR [esp+0x4], 0x80b4fb1
 807deda:  mov DWORD PTR [esp], 0x80b502a
 807dee1:  call 8051490
 807dee6:  nop
 807dee7:  nop
 807dee8:  nop
 807dee9:  nop
 807deea:  nop
 807deeb:  nop
 807deec:  nop
 807deed:  nop
 807deee:  nop
 807deef:  nop

0807def0 <remove_slotinfo>:
 807def0:  push ebp
 807def1:  mov ebp, esp
 807def3:  push edi
 807def4:  mov edi, edx
 807def6:  push esi
 807def7:  mov edx, eax
 807def9:  push ebx
 807defa:  mov ebx, eax
 807defc:  sub esp, 0x4c
 807deff:  mov eax, DWORD PTR [edi]
 807df01:  sub edx, ecx
 807df03:  mov DWORD PTR [ebp-0x40], ecx
 807df06:  movzx esi, BYTE PTR [ebp+0x8]
 807df0a:  cmp edx, eax
 807df0c:  jb 807e090
 807df12:  mov edx, DWORD PTR [edi+0x4]
 807df15:  test edx, edx
 807df17:  mov DWORD PTR [ebp-0x3c], edx
 807df1a:  je 807e0c8
 807df20:  add eax, DWORD PTR [ebp-0x40]
 807df23:  mov ecx, edx
 807df25:  mov edx, ebx
 807df27:  sub edx, eax
 807df29:  mov DWORD PTR [ebp-0x38], eax
 807df2c:  mov eax, DWORD PTR [ecx]
 807df2e:  cmp edx, eax
 807df30:  jb 807e208
 807df36:  mov edx, DWORD PTR [ecx+0x4]
 807df39:  test edx, edx
 807df3b:  mov DWORD PTR [ebp-0x34], edx
 807df3e:  je 807e2e0
 807df44:  add eax, DWORD PTR [ebp-0x38]
 807df47:  mov ecx, edx
 807df49:  mov edx, ebx
 807df4b:  sub edx, eax
 807df4d:  mov DWORD PTR [ebp-0x30], eax
 807df50:  mov eax, DWORD PTR [ecx]
 807df52:  cmp edx, eax
 807df54:  jb 807e158
 807df5a:  mov edx, DWORD PTR [ecx+0x4]
 807df5d:  test edx, edx
 807df5f:  mov DWORD PTR [ebp-0x2c], edx
 807df62:  je 807e3f0
 807df68:  add eax, DWORD PTR [ebp-0x30]
 807df6b:  mov ecx, edx
 807df6d:  mov edx, ebx
 807df6f:  sub edx, eax
 807df71:  mov DWORD PTR [ebp-0x28], eax
 807df74:  mov eax, DWORD PTR [ecx]
 807df76:  cmp edx, eax
 807df78:  jb 807e408
 807df7e:  mov edx, DWORD PTR [ecx+0x4]
 807df81:  test edx, edx
 807df83:  mov DWORD PTR [ebp-0x24], edx
 807df86:  je 807e4c0
 807df8c:  add eax, DWORD PTR [ebp-0x28]
 807df8f:  mov ecx, edx
 807df91:  mov edx, ebx
 807df93:  sub edx, eax
 807df95:  mov DWORD PTR [ebp-0x20], eax
 807df98:  mov eax, DWORD PTR [ecx]
 807df9a:  cmp edx, eax
 807df9c:  jb 807e340
 807dfa2:  mov edx, DWORD PTR [ecx+0x4]
 807dfa5:  test edx, edx
 807dfa7:  mov DWORD PTR [ebp-0x1c], edx
 807dfaa:  je 807e4e2
 807dfb0:  add eax, DWORD PTR [ebp-0x20]
 807dfb3:  mov ecx, edx
 807dfb5:  mov edx, ebx
 807dfb7:  sub edx, eax
 807dfb9:  mov DWORD PTR [ebp-0x18], eax
 807dfbc:  mov eax, DWORD PTR [ecx]
 807dfbe:  cmp edx, eax
 807dfc0:  jb 807e4f8
 807dfc6:  mov edx, DWORD PTR [ecx+0x4]
 807dfc9:  test edx, edx
 807dfcb:  mov DWORD PTR [ebp-0x14], edx
 807dfce:  je 807e5da
 807dfd4:  add eax, DWORD PTR [ebp-0x18]
 807dfd7:  mov ecx, edx
 807dfd9:  mov edx, ebx
 807dfdb:  sub edx, eax
 807dfdd:  mov DWORD PTR [ebp-0x10], eax
 807dfe0:  mov eax, DWORD PTR [ecx]
 807dfe2:  cmp edx, eax
 807dfe4:  jb 807e5f0
 807dfea:  mov edx, DWORD PTR [ecx+0x4]
 807dfed:  test edx, edx
 807dfef:  je 807e63a
 807dff5:  mov ecx, DWORD PTR [ebp-0x10]
 807dff8:  and esi, 0xff
 807dffe:  mov DWORD PTR [esp], esi
 807e001:  add ecx, eax
 807e003:  mov eax, ebx
 807e005:  call 807def0
 807e00a:  test al, al
 807e00c:  jne 807e0c0
 807e012:  mov edx, DWORD PTR [ebp-0x14]
 807e015:  mov ebx, DWORD PTR [ebp-0x10]
 807e018:  add ebx, DWORD PTR [edx]
 807e01a:  mov eax, ds:0x80d2da4
 807e01f:  mov ecx, DWORD PTR [ebp-0x14]
 807e022:  mov esi, eax
 807e024:  mov DWORD PTR [ebp-0x44], eax
 807e027:  mov eax, DWORD PTR [ebp-0x10]
 807e02a:  add esi, 0x1
 807e02d:  lea edx, [ecx+ebx*8+0x4]
 807e031:  mov ecx, ebx
 807e033:  test eax, eax
 807e035:  je 807e320
 807e03b:  mov esi, ebx
 807e03d:  mov ecx, DWORD PTR [ebp-0x14]
 807e040:  sub esi, DWORD PTR [ebp-0x10]
 807e043:  not DWORD PTR [ebp-0x10]
 807e046:  mov eax, DWORD PTR [ebp-0x10]
 807e049:  add eax, ebx
 807e04b:  lea edx, [ecx+eax*8+0xc]
 807e04f:  jmp 807e05a
 807e051:  lea esi, [esi]
 807e058:  mov ebx, ecx
 807e05a:  test esi, esi
 807e05c:  je 807e650
 807e062:  mov eax, DWORD PTR [edx]
 807e064:  sub esi, 0x1
 807e067:  sub edx, 0x8
 807e06a:  lea ecx, [ebx-0x1]
 807e06d:  test eax, eax
 807e06f:  je 807e058
 807e071:  lea esi, [esi]
 807e078:  mov DWORD PTR ds:0x80d2d94, ecx
 807e07e:  mov eax, 0x1
 807e083:  add esp, 0x4c
 807e086:  pop ebx
 807e087:  pop esi
 807e088:  pop edi
 807e089:  pop ebp
 807e08a:  ret
 807e08b:  nop
 807e08c:  lea esi, [esi]
 807e090:  mov eax, DWORD PTR [edi+edx*8+0xc]
 807e094:  test eax, eax
 807e096:  je 807e0b8
 807e098:  cmp DWORD PTR [eax+0x240], ebx
 807e09e:  jne 807e5b6
 807e0a4:  mov eax, ds:0x80d2da0
 807e0a9:  mov DWORD PTR [edi+edx*8+0xc], 0x0
 807e0b1:  add eax, 0x1
 807e0b4:  mov DWORD PTR [edi+edx*8+0x8], eax
 807e0b8:  cmp ebx, DWORD PTR ds:0x80d2d94
 807e0be:  je 807e0d2
 807e0c0:  mov eax, 0x1
 807e0c5:  jmp 807e083
 807e0c7:  nop
 807e0c8:  mov ecx, esi
 807e0ca:  test cl, cl
 807e0cc:  jne 807e2ea
 807e0d2:  mov eax, ds:0x80d2da4
 807e0d7:  mov DWORD PTR [ebp-0x44], eax
 807e0da:  mov esi, eax
 807e0dc:  mov eax, DWORD PTR [ebp-0x40]
 807e0df:  add esi, 0x1
 807e0e2:  mov edx, ebx
 807e0e4:  lea ecx, [edi+ebx*8+0x4]
 807e0e8:  test eax, eax
 807e0ea:  je 807e130
 807e0ec:  mov ecx, ebx
 807e0ee:  sub ecx, DWORD PTR [ebp-0x40]
 807e0f1:  not DWORD PTR [ebp-0x40]
 807e0f4:  mov eax, DWORD PTR [ebp-0x40]
 807e0f7:  add eax, ebx
 807e0f9:  lea edx, [edi+eax*8+0xc]
 807e0fd:  lea esi, [esi]
 807e100:  test ecx, ecx
 807e102:  je 807e2d0
 807e108:  mov eax, DWORD PTR [edx]
 807e10a:  sub ebx, 0x1
 807e10d:  sub ecx, 0x1
 807e110:  sub edx, 0x8
 807e113:  test eax, eax
 807e115:  je 807e100
 807e117:  mov DWORD PTR ds:0x80d2d94, ebx
 807e11d:  mov eax, 0x1
 807e122:  add esp, 0x4c
 807e125:  pop ebx
 807e126:  pop esi
 807e127:  pop edi
 807e128:  pop ebp
 807e129:  ret
 807e12a:  lea esi, [esi]
 807e130:  cmp esi, edx
 807e132:  jae 807e2d0
 807e138:  mov eax, DWORD PTR [ecx]
 807e13a:  sub ebx, 0x1
 807e13d:  sub edx, 0x1
 807e140:  sub ecx, 0x8
 807e143:  test eax, eax
 807e145:  je 807e130
 807e147:  mov DWORD PTR ds:0x80d2d94, ebx
 807e14d:  mov eax, 0x1
 807e152:  jmp 807e122
 807e154:  lea esi, [esi]
 807e158:  mov eax, DWORD PTR [ecx+edx*8+0xc]
 807e15c:  test eax, eax
 807e15e:  je 807e183
 807e160:  cmp ebx, DWORD PTR [eax+0x240]
 807e166:  jne 807e5b6
 807e16c:  mov eax, ds:0x80d2da0
 807e171:  mov ecx, DWORD PTR [ebp-0x34]
 807e174:  add eax, 0x1
 807e177:  mov DWORD PTR [ecx+edx*8+0x8], eax
 807e17b:  mov DWORD PTR [ecx+edx*8+0xc], 0x0
 807e183:  cmp ebx, DWORD PTR ds:0x80d2d94
 807e189:  jne 807e0c0
 807e18f:  mov eax, ds:0x80d2da4
 807e194:  mov ecx, DWORD PTR [ebp-0x34]
 807e197:  mov DWORD PTR [ebp-0x44], eax
 807e19a:  mov esi, eax
 807e19c:  mov eax, DWORD PTR [ebp-0x30]
 807e19f:  add esi, 0x1
 807e1a2:  lea edx, [ecx+ebx*8+0x4]
 807e1a6:  mov ecx, ebx
 807e1a8:  test eax, eax
 807e1aa:  je 807e1e8
 807e1ac:  mov esi, ebx
 807e1ae:  mov ecx, DWORD PTR [ebp-0x34]
 807e1b1:  sub esi, DWORD PTR [ebp-0x30]
 807e1b4:  not DWORD PTR [ebp-0x30]
 807e1b7:  mov eax, DWORD PTR [ebp-0x30]
 807e1ba:  add eax, ebx
 807e1bc:  lea edx, [ecx+eax*8+0xc]
 807e1c0:  jmp 807e1ca
 807e1c2:  lea esi, [esi]
 807e1c8:  mov ebx, ecx
 807e1ca:  test esi, esi
 807e1cc:  je 807e4b0
 807e1d2:  mov eax, DWORD PTR [edx]
 807e1d4:  sub esi, 0x1
 807e1d7:  sub edx, 0x8
 807e1da:  lea ecx, [ebx-0x1]
 807e1dd:  test eax, eax
 807e1df:  je 807e1c8
 807e1e1:  jmp 807e078
 807e1e6:  xchg ax, ax
 807e1e8:  cmp ebx, esi
 807e1ea:  jbe 807e4b0
 807e1f0:  mov eax, DWORD PTR [edx]
 807e1f2:  sub ecx, 0x1
 807e1f5:  sub ebx, 0x1
 807e1f8:  sub edx, 0x8
 807e1fb:  test eax, eax
 807e1fd:  je 807e1e8
 807e1ff:  jmp 807e078
 807e204:  lea esi, [esi]
 807e208:  mov eax, DWORD PTR [ecx+edx*8+0xc]
 807e20c:  test eax, eax
 807e20e:  je 807e233
 807e210:  cmp ebx, DWORD PTR [eax+0x240]
 807e216:  jne 807e5b6
 807e21c:  mov eax, ds:0x80d2da0
 807e221:  mov ecx, DWORD PTR [ebp-0x3c]
 807e224:  add eax, 0x1
 807e227:  mov DWORD PTR [ecx+edx*8+0x8], eax
 807e22b:  mov DWORD PTR [ecx+edx*8+0xc], 0x0
 807e233:  cmp ebx, DWORD PTR ds:0x80d2d94
 807e239:  jne 807e0c0
 807e23f:  mov eax, ds:0x80d2da4
 807e244:  mov ecx, DWORD PTR [ebp-0x3c]
 807e247:  mov DWORD PTR [ebp-0x44], eax
 807e24a:  mov esi, eax
 807e24c:  mov eax, DWORD PTR [ebp-0x38]
 807e24f:  add esi, 0x1
 807e252:  lea edx, [ecx+ebx*8+0x4]
 807e256:  mov ecx, ebx
 807e258:  test eax, eax
 807e25a:  je 807e2a8
 807e25c:  mov esi, ebx
 807e25e:  mov ecx, DWORD PTR [ebp-0x3c]
 807e261:  sub esi, DWORD PTR [ebp-0x38]
 807e264:  not DWORD PTR [ebp-0x38]
 807e267:  mov eax, DWORD PTR [ebp-0x38]
 807e26a:  add eax, ebx
 807e26c:  lea edx, [ecx+eax*8+0xc]
 807e270:  jmp 807e27a
 807e272:  lea esi, [esi]
 807e278:  mov ebx, ecx
 807e27a:  test esi, esi
 807e27c:  je 807e310
 807e282:  mov eax, DWORD PTR [edx]
 807e284:  sub esi, 0x1
 807e287:  sub edx, 0x8
 807e28a:  lea ecx, [ebx-0x1]
 807e28d:  test eax, eax
 807e28f:  je 807e278
 807e291:  mov DWORD PTR ds:0x80d2d94, ecx
 807e297:  mov eax, 0x1
 807e29c:  jmp 807e083
 807e2a1:  lea esi, [esi]
 807e2a8:  cmp ebx, esi
 807e2aa:  jbe 807e310
 807e2ac:  mov eax, DWORD PTR [edx]
 807e2ae:  sub ecx, 0x1
 807e2b1:  sub ebx, 0x1
 807e2b4:  sub edx, 0x8
 807e2b7:  test eax, eax
 807e2b9:  je 807e2a8
 807e2bb:  mov DWORD PTR ds:0x80d2d94, ecx
 807e2c1:  mov eax, 0x1
 807e2c6:  jmp 807e083
 807e2cb:  nop
 807e2cc:  lea esi, [esi]
 807e2d0:  add esp, 0x4c
 807e2d3:  xor eax, eax
 807e2d5:  pop ebx
 807e2d6:  pop esi
 807e2d7:  pop edi
 807e2d8:  pop ebp
 807e2d9:  ret
 807e2da:  lea esi, [esi]
 807e2e0:  mov ecx, esi
 807e2e2:  test cl, cl
 807e2e4:  je 807e23f
 807e2ea:  mov DWORD PTR [esp+0xc], 0x80b52b0
 807e2f2:  mov DWORD PTR [esp+0x8], 0x39
 807e2fa:  mov DWORD PTR [esp+0x4], 0x80b51c1
 807e302:  mov DWORD PTR [esp], 0x80b51cc
 807e309:  call 8051490
 807e30e:  xchg ax, ax
 807e310:  mov ebx, DWORD PTR [ebp-0x40]
 807e313:  add ebx, DWORD PTR [edi]
 807e315:  mov esi, DWORD PTR [ebp-0x44]
 807e318:  jmp 807e0dc
 807e31d:  lea esi, [esi]
 807e320:  cmp ebx, esi
 807e322:  jbe 807e650
 807e328:  mov eax, DWORD PTR [edx]
 807e32a:  sub ecx, 0x1
 807e32d:  sub ebx, 0x1
 807e330:  sub edx, 0x8
 807e333:  test eax, eax
 807e335:  je 807e320
 807e337:  jmp 807e078
 807e33c:  lea esi, [esi]
 807e340:  mov eax, DWORD PTR [ecx+edx*8+0xc]
 807e344:  test eax, eax
 807e346:  je 807e36b
 807e348:  cmp ebx, DWORD PTR [eax+0x240]
 807e34e:  jne 807e5b6
 807e354:  mov eax, ds:0x80d2da0
 807e359:  mov ecx, DWORD PTR [ebp-0x24]
 807e35c:  add eax, 0x1
 807e35f:  mov DWORD PTR [ecx+edx*8+0x8], eax
 807e363:  mov DWORD PTR [ecx+edx*8+0xc], 0x0
 807e36b:  cmp ebx, DWORD PTR ds:0x80d2d94
 807e371:  jne 807e0c0
 807e377:  mov eax, ds:0x80d2da4
 807e37c:  mov ecx, DWORD PTR [ebp-0x24]
 807e37f:  mov DWORD PTR [ebp-0x44], eax
 807e382:  mov esi, eax
 807e384:  mov eax, DWORD PTR [ebp-0x20]
 807e387:  add esi, 0x1
 807e38a:  lea edx, [ecx+ebx*8+0x4]
 807e38e:  mov ecx, ebx
 807e390:  test eax, eax
 807e392:  je 807e3d0
 807e394:  mov esi, ebx
 807e396:  mov ecx, DWORD PTR [ebp-0x24]
 807e399:  sub esi, DWORD PTR [ebp-0x20]
 807e39c:  not DWORD PTR [ebp-0x20]
 807e39f:  mov eax, DWORD PTR [ebp-0x20]
 807e3a2:  add eax, ebx
 807e3a4:  lea edx, [ecx+eax*8+0xc]
 807e3a8:  jmp 807e3b2
 807e3aa:  lea esi, [esi]
 807e3b0:  mov ebx, ecx
 807e3b2:  test esi, esi
 807e3b4:  je 807e5a4
 807e3ba:  mov eax, DWORD PTR [edx]
 807e3bc:  sub esi, 0x1
 807e3bf:  sub edx, 0x8
 807e3c2:  lea ecx, [ebx-0x1]
 807e3c5:  test eax, eax
 807e3c7:  je 807e3b0
 807e3c9:  jmp 807e078
 807e3ce:  xchg ax, ax
 807e3d0:  cmp ebx, esi
 807e3d2:  jbe 807e5a4
 807e3d8:  mov eax, DWORD PTR [edx]
 807e3da:  sub ecx, 0x1
 807e3dd:  sub ebx, 0x1
 807e3e0:  sub edx, 0x8
 807e3e3:  test eax, eax
 807e3e5:  je 807e3d0
 807e3e7:  jmp 807e078
 807e3ec:  lea esi, [esi]
 807e3f0:  mov ecx, esi
 807e3f2:  test cl, cl
 807e3f4:  je 807e18f
 807e3fa:  lea esi, [esi]
 807e400:  jmp 807e2ea
 807e405:  lea esi, [esi]
 807e408:  mov eax, DWORD PTR [ecx+edx*8+0xc]
 807e40c:  test eax, eax
 807e40e:  xchg ax, ax
 807e410:  je 807e435
 807e412:  cmp ebx, DWORD PTR [eax+0x240]
 807e418:  jne 807e5b6
 807e41e:  mov eax, ds:0x80d2da0
 807e423:  mov ecx, DWORD PTR [ebp-0x2c]
 807e426:  add eax, 0x1
 807e429:  mov DWORD PTR [ecx+edx*8+0x8], eax
 807e42d:  mov DWORD PTR [ecx+edx*8+0xc], 0x0
 807e435:  cmp ebx, DWORD PTR ds:0x80d2d94
 807e43b:  jne 807e0c0
 807e441:  mov eax, ds:0x80d2da4
 807e446:  mov ecx, DWORD PTR [ebp-0x2c]
 807e449:  mov DWORD PTR [ebp-0x44], eax
 807e44c:  mov esi, eax
 807e44e:  mov eax, DWORD PTR [ebp-0x28]
 807e451:  add esi, 0x1
 807e454:  lea edx, [ecx+ebx*8+0x4]
 807e458:  mov ecx, ebx
 807e45a:  test eax, eax
 807e45c:  je 807e498
 807e45e:  mov esi, ebx
 807e460:  mov ecx, DWORD PTR [ebp-0x2c]
 807e463:  sub esi, DWORD PTR [ebp-0x28]
 807e466:  not DWORD PTR [ebp-0x28]
 807e469:  mov eax, DWORD PTR [ebp-0x28]
 807e46c:  add eax, ebx
 807e46e:  lea edx, [ecx+eax*8+0xc]
 807e472:  jmp 807e47a
 807e474:  lea esi, [esi]
 807e478:  mov ebx, ecx
 807e47a:  test esi, esi
 807e47c:  je 807e4d0
 807e47e:  mov eax, DWORD PTR [edx]
 807e480:  sub esi, 0x1
 807e483:  sub edx, 0x8
 807e486:  lea ecx, [ebx-0x1]
 807e489:  test eax, eax
 807e48b:  je 807e478
 807e48d:  jmp 807e078
 807e492:  lea esi, [esi]
 807e498:  cmp ebx, esi
 807e49a:  jbe 807e4d0
 807e49c:  mov eax, DWORD PTR [edx]
 807e49e:  sub ecx, 0x1
 807e4a1:  sub ebx, 0x1
 807e4a4:  sub edx, 0x8
 807e4a7:  test eax, eax
 807e4a9:  je 807e498
 807e4ab:  jmp 807e078
 807e4b0:  mov ecx, DWORD PTR [ebp-0x3c]
 807e4b3:  mov ebx, DWORD PTR [ebp-0x38]
 807e4b6:  mov esi, DWORD PTR [ebp-0x44]
 807e4b9:  add ebx, DWORD PTR [ecx]
 807e4bb:  jmp 807e24c
 807e4c0:  mov ecx, esi
 807e4c2:  test cl, cl
 807e4c4:  je 807e441
 807e4ca:  jmp 807e2ea
 807e4cf:  nop
 807e4d0:  mov edx, DWORD PTR [ebp-0x34]
 807e4d3:  mov ebx, DWORD PTR [ebp-0x30]
 807e4d6:  mov esi, DWORD PTR [ebp-0x44]
 807e4d9:  add ebx, DWORD PTR [edx]
 807e4db:  mov ecx, edx
 807e4dd:  jmp 807e19c
 807e4e2:  mov ecx, esi
 807e4e4:  test cl, cl
 807e4e6:  je 807e377
 807e4ec:  jmp 807e2ea
 807e4f1:  lea esi, [esi]
 807e4f8:  mov eax, DWORD PTR [ecx+edx*8+0xc]
 807e4fc:  test eax, eax
 807e4fe:  xchg ax, ax
 807e500:  je 807e525
 807e502:  cmp ebx, DWORD PTR [eax+0x240]
 807e508:  jne 807e5b6
 807e50e:  mov eax, ds:0x80d2da0
 807e513:  mov ecx, DWORD PTR [ebp-0x1c]
 807e516:  add eax, 0x1
 807e519:  mov DWORD PTR [ecx+edx*8+0x8], eax
 807e51d:  mov DWORD PTR [ecx+edx*8+0xc], 0x0
 807e525:  cmp ebx, DWORD PTR ds:0x80d2d94
 807e52b:  jne 807e0c0
 807e531:  mov eax, ds:0x80d2da4
 807e536:  mov ecx, DWORD PTR [ebp-0x1c]
 807e539:  mov DWORD PTR [ebp-0x44], eax
 807e53c:  mov esi, eax
 807e53e:  mov eax, DWORD PTR [ebp-0x18]
 807e541:  add esi, 0x1
 807e544:  lea edx, [ecx+ebx*8+0x4]
 807e548:  mov ecx, ebx
 807e54a:  test eax, eax
 807e54c:  je 807e588
 807e54e:  mov esi, ebx
 807e550:  mov ecx, DWORD PTR [ebp-0x1c]
 807e553:  sub esi, DWORD PTR [ebp-0x18]
 807e556:  not DWORD PTR [ebp-0x18]
 807e559:  mov eax, DWORD PTR [ebp-0x18]
 807e55c:  add eax, ebx
 807e55e:  lea edx, [ecx+eax*8+0xc]
 807e562:  jmp 807e56a
 807e564:  lea esi, [esi]
 807e568:  mov ebx, ecx
 807e56a:  test esi, esi
 807e56c:  je 807e62a
 807e572:  mov eax, DWORD PTR [edx]
 807e574:  sub esi, 0x1
 807e577:  sub edx, 0x8
 807e57a:  lea ecx, [ebx-0x1]
 807e57d:  test eax, eax
 807e57f:  je 807e568
 807e581:  jmp 807e078
 807e586:  xchg ax, ax
 807e588:  cmp ebx, esi
 807e58a:  jbe 807e62a
 807e590:  mov eax, DWORD PTR [edx]
 807e592:  sub ecx, 0x1
 807e595:  sub ebx, 0x1
 807e598:  sub edx, 0x8
 807e59b:  test eax, eax
 807e59d:  je 807e588
 807e59f:  jmp 807e078
 807e5a4:  mov eax, DWORD PTR [ebp-0x2c]
 807e5a7:  mov ebx, DWORD PTR [ebp-0x28]
 807e5aa:  mov esi, DWORD PTR [ebp-0x44]
 807e5ad:  add ebx, DWORD PTR [eax]
 807e5af:  mov ecx, eax
 807e5b1:  jmp 807e44e
 807e5b6:  mov DWORD PTR [esp+0xc], 0x80b52b0
 807e5be:  mov DWORD PTR [esp+0x8], 0x4e
 807e5c6:  mov DWORD PTR [esp+0x4], 0x80b51c1
 807e5ce:  mov DWORD PTR [esp], 0x80b51de
 807e5d5:  call 8051490
 807e5da:  mov ecx, esi
 807e5dc:  test cl, cl
 807e5de:  je 807e531
 807e5e4:  jmp 807e2ea
 807e5e9:  lea esi, [esi]
 807e5f0:  mov eax, DWORD PTR [ecx+edx*8+0xc]
 807e5f4:  test eax, eax
 807e5f6:  xchg ax, ax
 807e5f8:  je 807e619
 807e5fa:  cmp ebx, DWORD PTR [eax+0x240]
 807e600:  jne 807e5b6
 807e602:  mov eax, ds:0x80d2da0
 807e607:  mov ecx, DWORD PTR [ebp-0x14]
 807e60a:  add eax, 0x1
 807e60d:  mov DWORD PTR [ecx+edx*8+0x8], eax
 807e611:  mov DWORD PTR [ecx+edx*8+0xc], 0x0
 807e619:  cmp ebx, DWORD PTR ds:0x80d2d94
 807e61f:  jne 807e0c0
 807e625:  jmp 807e01a
 807e62a:  mov ecx, DWORD PTR [ebp-0x24]
 807e62d:  mov ebx, DWORD PTR [ebp-0x20]
 807e630:  mov esi, DWORD PTR [ebp-0x44]
 807e633:  add ebx, DWORD PTR [ecx]
 807e635:  jmp 807e384
 807e63a:  mov eax, esi
 807e63c:  test al, al
 807e63e:  je 807e01a
 807e644:  jmp 807e2ea
 807e649:  lea esi, [esi]
 807e650:  mov edx, DWORD PTR [ebp-0x1c]
 807e653:  mov ebx, DWORD PTR [ebp-0x18]
 807e656:  mov esi, DWORD PTR [ebp-0x44]
 807e659:  add ebx, DWORD PTR [edx]
 807e65b:  mov ecx, edx
 807e65d:  jmp 807e53e
 807e662:  lea esi, [esi]
 807e669:  lea edi, [edi]

0807e670 <_dl_close_worker>:
 807e670:  push ebp
 807e671:  mov ebp, esp
 807e673:  push edi
 807e674:  push esi
 807e675:  push ebx
 807e676:  sub esp, 0x8c
 807e67c:  mov ecx, DWORD PTR [ebp+0x8]
 807e67f:  mov eax, DWORD PTR [ecx+0x190]
 807e685:  lea edx, [eax-0x1]
 807e688:  test edx, edx
 807e68a:  mov DWORD PTR [ecx+0x190], edx
 807e690:  jne 807e6a0
 807e692:  movzx eax, BYTE PTR [ecx+0x194]
 807e699:  and eax, 0x3
 807e69c:  cmp al, 0x2
 807e69e:  je 807e6b8
 807e6a0:  test BYTE PTR ds:0x80d2dd0, 0x40
 807e6a7:  jne 807e94c
 807e6ad:  lea esp, [ebp-0xc]
 807e6b0:  pop ebx
 807e6b1:  pop esi
 807e6b2:  pop edi
 807e6b3:  pop ebp
 807e6b4:  ret
 807e6b5:  lea esi, [esi]
 807e6b8:  mov eax, ds:0x80d2a3c
 807e6bd:  test eax, eax
 807e6bf:  je 807e6d0
 807e6c1:  mov DWORD PTR ds:0x80d2a3c, 0x2
 807e6cb:  jmp 807e6a0
 807e6cd:  lea esi, [esi]
 807e6d0:  mov ecx, DWORD PTR [ecx+0x18]
 807e6d3:  lea eax, [ecx+ecx*8]
 807e6d6:  lea eax, [eax*4+0x80d2e40]
 807e6dd:  mov DWORD PTR [ebp-0x58], ecx
 807e6e0:  mov edi, eax
 807e6e2:  mov DWORD PTR [ebp-0x54], eax
 807e6e5:  mov eax, DWORD PTR [eax+0x4]
 807e6e8:  mov DWORD PTR [ebp-0x5c], esp
 807e6eb:  mov DWORD PTR ds:0x80d2a3c, 0x1
 807e6f5:  mov DWORD PTR [ebp-0x20], 0x0
 807e6fc:  mov DWORD PTR [ebp-0x4c], eax
 807e6ff:  mov ebx, DWORD PTR [ebp-0x4c]
 807e702:  add eax, 0x1e
 807e705:  and eax, 0xf0
 807e708:  sub esp, eax
 807e70a:  lea edx, [esp+0x1f]
 807e70e:  sub esp, eax
 807e710:  lea eax, [ebx*4+0x1e]
 807e717:  and edx, 0xf0
 807e71a:  and eax, 0xf0
 807e71d:  lea ecx, [esp+0x1f]
 807e721:  sub esp, eax
 807e723:  mov eax, DWORD PTR [edi]
 807e725:  lea esi, [esp+0x1f]
 807e729:  and ecx, 0xf0
 807e72c:  and esi, 0xf0
 807e72f:  mov DWORD PTR [ebp-0x68], edx
 807e732:  xor edx, edx
 807e734:  test eax, eax
 807e736:  mov DWORD PTR [ebp-0x6c], ecx
 807e739:  mov DWORD PTR [ebp-0x70], esi
 807e73c:  je 807e759
 807e73e:  xchg ax, ax
 807e740:  mov ecx, DWORD PTR [ebp-0x70]
 807e743:  mov DWORD PTR [eax+0x208], edx
 807e749:  mov DWORD PTR [ecx+edx*4], eax
 807e74c:  mov eax, DWORD PTR [eax+0xc]
 807e74f:  add edx, 0x1
 807e752:  test eax, eax
 807e754:  jne 807e740
 807e756:  mov DWORD PTR [ebp-0x20], edx
 807e759:  mov ebx, DWORD PTR [ebp-0x20]
 807e75c:  cmp DWORD PTR [ebp-0x4c], ebx
 807e75f:  jne 807ef69
 807e765:  mov esi, DWORD PTR [ebp-0x4c]
 807e768:  mov DWORD PTR [esp+0x4], 0x0
 807e770:  mov DWORD PTR [esp+0x8], esi
 807e774:  mov edi, DWORD PTR [ebp-0x68]
 807e777:  mov DWORD PTR [esp], edi
 807e77a:  call 804ef50
 807e77f:  mov DWORD PTR [esp+0x8], esi
 807e783:  mov esi, 0xffffffff
 807e788:  mov DWORD PTR [esp+0x4], 0x0
 807e790:  mov eax, DWORD PTR [ebp-0x6c]
 807e793:  mov DWORD PTR [esp], eax
 807e796:  call 804ef50
 807e79b:  add esi, 0x1
 807e79e:  cmp DWORD PTR [ebp-0x4c], esi
 807e7a1:  jbe 807e968
 807e7a7:  mov edx, DWORD PTR [ebp-0x70]
 807e7aa:  mov ecx, DWORD PTR [ebp-0x6c]
 807e7ad:  mov edx, DWORD PTR [edx+esi*4]
 807e7b0:  mov DWORD PTR [ebp-0x7c], edx
 807e7b3:  cmp BYTE PTR [ecx+esi], 0x0
 807e7b7:  jne 807e79b
 807e7b9:  movzx eax, BYTE PTR [edx+0x194]
 807e7c0:  and eax, 0x3
 807e7c3:  cmp al, 0x2
 807e7c5:  je 807e8f8
 807e7cb:  mov edi, DWORD PTR [ebp-0x6c]
 807e7ce:  mov BYTE PTR [edi+esi], 0x1
 807e7d2:  mov eax, DWORD PTR [ebp-0x68]
 807e7d5:  mov BYTE PTR [eax+esi], 0x1
 807e7d9:  mov edx, DWORD PTR [ebp-0x7c]
 807e7dc:  mov eax, DWORD PTR [edx+0x1f0]
 807e7e2:  mov DWORD PTR [edx+0x208], 0xffffffff
 807e7ec:  test eax, eax
 807e7ee:  je 807e849
 807e7f0:  mov edx, DWORD PTR [eax+0x4]
 807e7f3:  lea ecx, [eax+0x4]
 807e7f6:  test edx, edx
 807e7f8:  je 807e849
 807e7fa:  lea esi, [esi]
 807e800:  mov eax, DWORD PTR [edx+0x208]
 807e806:  cmp eax, 0xff
 807e809:  je 807e840
 807e80b:  test eax, eax
 807e80d:  js 807e8d0
 807e813:  cmp DWORD PTR [ebp-0x4c], eax
 807e816:  jbe 807e8d0
 807e81c:  mov ebx, DWORD PTR [ebp-0x68]
 807e81f:  cmp BYTE PTR [ebx+eax], 0x0
 807e823:  nop
 807e824:  lea esi, [esi]
 807e828:  jne 807e840
 807e82a:  mov BYTE PTR [ebx+eax], 0x1
 807e82e:  mov eax, DWORD PTR [edx+0x208]
 807e834:  cmp esi, eax
 807e836:  jl 807e840
 807e838:  lea esi, [eax-0x1]
 807e83b:  nop
 807e83c:  lea esi, [esi]
 807e840:  add ecx, 0x4
 807e843:  mov edx, DWORD PTR [ecx]
 807e845:  test edx, edx
 807e847:  jne 807e800
 807e849:  mov edi, DWORD PTR [ebp-0x7c]
 807e84c:  mov ecx, DWORD PTR [edi+0x1f8]
 807e852:  test ecx, ecx
 807e854:  je 807e79b
 807e85a:  mov eax, DWORD PTR [ecx]
 807e85c:  test eax, eax
 807e85e:  je 807e79b
 807e864:  xor edx, edx
 807e866:  jmp 807e883
 807e868:  mov eax, DWORD PTR [ebp-0x7c]
 807e86b:  mov ecx, DWORD PTR [eax+0x1f8]
 807e871:  lea esi, [esi]
 807e878:  add edx, 0x1
 807e87b:  cmp DWORD PTR [ecx], edx
 807e87d:  jbe 807e79b
 807e883:  mov ebx, DWORD PTR [ecx+edx*4+0x4]
 807e887:  mov eax, DWORD PTR [ebx+0x208]
 807e88d:  cmp eax, 0xff
 807e890:  je 807e878
 807e892:  test eax, eax
 807e894:  js 807e928
 807e89a:  cmp DWORD PTR [ebp-0x4c], eax
 807e89d:  jbe 807e928
 807e8a3:  mov edi, DWORD PTR [ebp-0x68]
 807e8a6:  cmp BYTE PTR [edi+eax], 0x0
 807e8aa:  lea esi, [esi]
 807e8b0:  jne 807e878
 807e8b2:  mov BYTE PTR [edi+eax], 0x1
 807e8b6:  mov eax, DWORD PTR [ebx+0x208]
 807e8bc:  cmp eax, esi
 807e8be:  jg 807e868
 807e8c0:  mov ebx, DWORD PTR [ebp-0x7c]
 807e8c3:  lea esi, [eax-0x1]
 807e8c6:  mov ecx, DWORD PTR [ebx+0x1f8]
 807e8cc:  jmp 807e878
 807e8ce:  xchg ax, ax
 807e8d0:  mov DWORD PTR [esp+0xc], 0x80b529f
 807e8d8:  mov DWORD PTR [esp+0x8], 0xbf
 807e8e0:  mov DWORD PTR [esp+0x4], 0x80b51c1
 807e8e8:  mov DWORD PTR [esp], 0x80b52e8
 807e8ef:  call 8051490
 807e8f4:  lea esi, [esi]
 807e8f8:  mov eax, DWORD PTR [edx+0x190]
 807e8fe:  test eax, eax
 807e900:  jne 807e7cb
 807e906:  test BYTE PTR [edx+0x200], 0x8
 807e90d:  jne 807e7cb
 807e913:  mov ebx, DWORD PTR [ebp-0x68]
 807e916:  cmp BYTE PTR [ebx+esi], 0x0
 807e91a:  je 807e79b
 807e920:  jmp 807e7cb
 807e925:  lea esi, [esi]
 807e928:  mov DWORD PTR [esp+0xc], 0x80b529f
 807e930:  mov DWORD PTR [esp+0x8], 0xd4
 807e938:  mov DWORD PTR [esp+0x4], 0x80b51c1
 807e940:  mov DWORD PTR [esp], 0x80b5314
 807e947:  call 8051490
 807e94c:  mov DWORD PTR [esp+0x8], edx
 807e950:  mov eax, DWORD PTR [ecx+0x4]
 807e953:  mov DWORD PTR [esp], 0x80b52c0
 807e95a:  mov DWORD PTR [esp+0x4], eax
 807e95e:  call 807c8d0
 807e963:  jmp 807e6ad
 807e968:  mov esi, DWORD PTR [ebp-0x58]
 807e96b:  mov DWORD PTR [esp+0x4], esi
 807e96f:  mov edi, DWORD PTR [ebp-0x68]
 807e972:  mov DWORD PTR [esp], edi
 807e975:  mov ebx, DWORD PTR [ebp-0x54]
 807e978:  mov ecx, DWORD PTR [ebp-0x20]
 807e97b:  mov edx, DWORD PTR [ebp-0x70]
 807e97e:  mov eax, DWORD PTR [ebx]
 807e980:  call 80977b0
 807e985:  mov edi, DWORD PTR [ebp-0x20]
 807e988:  sub esp, 0x8
 807e98b:  test edi, edi
 807e98d:  je 807eced
 807e993:  mov esi, DWORD PTR [ebp-0x70]
 807e996:  mov edx, DWORD PTR [ebp-0x58]
 807e999:  mov edi, DWORD PTR [esi]
 807e99b:  mov eax, DWORD PTR [edi+0x18]
 807e99e:  cmp eax, edx
 807e9a0:  mov DWORD PTR [ebp-0x10], eax
 807e9a3:  jne 807ef9c
 807e9a9:  mov DWORD PTR [ebp-0x14], edx
 807e9ac:  mov BYTE PTR [ebp-0x46], 0x0
 807e9b0:  mov BYTE PTR [ebp-0x45], 0x0
 807e9b4:  mov DWORD PTR [ebp-0x44], 0x0
 807e9bb:  mov DWORD PTR [ebp-0x40], 0xffffffff
 807e9c2:  mov DWORD PTR [ebp-0x30], 0x0
 807e9c9:  jmp 807ea42
 807e9cb:  nop
 807e9cc:  lea esi, [esi]
 807e9d0:  movzx edx, BYTE PTR [edi+0x194]
 807e9d7:  mov eax, edx
 807e9d9:  and eax, 0x3
 807e9dc:  cmp al, 0x2
 807e9de:  jne 807ef45
 807e9e4:  test BYTE PTR [edi+0x200], 0x8
 807e9eb:  jne 807ef45
 807e9f1:  test dl, 0x8
 807e9f4:  jne 807ead6
 807e9fa:  or BYTE PTR [edi+0x195], 0x40
 807ea01:  and edx, 0x10
 807ea04:  mov esi, DWORD PTR [ebp-0x40]
 807ea07:  cmp dl, 0x1
 807ea0a:  sbb DWORD PTR [ebp-0x44], 0xff
 807ea0e:  cmp DWORD PTR [ebp-0x30], esi
 807ea11:  mov BYTE PTR [ebp-0x46], 0x1
 807ea15:  jae 807ea1d
 807ea17:  mov edi, DWORD PTR [ebp-0x30]
 807ea1a:  mov DWORD PTR [ebp-0x40], edi
 807ea1d:  add DWORD PTR [ebp-0x30], 0x1
 807ea21:  mov edi, DWORD PTR [ebp-0x30]
 807ea24:  cmp DWORD PTR [ebp-0x4c], edi
 807ea27:  jbe 807ed08
 807ea2d:  mov ebx, DWORD PTR [ebp-0x70]
 807ea30:  mov esi, DWORD PTR [ebp-0x10]
 807ea33:  mov edi, DWORD PTR [ebx+edi*4]
 807ea36:  cmp DWORD PTR [edi+0x18], esi
 807ea39:  jne 807ef9c
 807ea3f:  mov DWORD PTR [ebp-0x14], esi
 807ea42:  mov ecx, DWORD PTR [ebp-0x68]
 807ea45:  mov edx, DWORD PTR [ebp-0x30]
 807ea48:  cmp BYTE PTR [ecx+edx], 0x0
 807ea4c:  je 807e9d0
 807ea4e:  movzx eax, BYTE PTR [edi+0x194]
 807ea55:  and eax, 0x3
 807ea58:  cmp al, 0x2
 807ea5a:  jne 807ea1d
 807ea5c:  mov esi, DWORD PTR [edi+0x15c]
 807ea62:  test esi, esi
 807ea64:  je 807ec5a
 807ea6a:  mov ecx, 0x1
 807ea6f:  mov DWORD PTR [ebp-0x2c], 0x0
 807ea76:  mov edx, DWORD PTR [edi+0x1cc]
 807ea7c:  mov ebx, DWORD PTR [edx]
 807ea7e:  mov DWORD PTR [ebp-0x74], edx
 807ea81:  test ebx, ebx
 807ea83:  je 807eb61
 807ea89:  lea esi, [edi+0x164]
 807ea8f:  mov eax, ebx
 807ea91:  mov DWORD PTR [ebp-0x64], esi
 807ea94:  mov BYTE PTR [ebp-0x78], 0x0
 807ea98:  jmp 807eab2
 807ea9a:  lea esi, [esi]
 807eaa0:  mov BYTE PTR [ebp-0x78], 0x1
 807eaa4:  mov eax, DWORD PTR [edx+0x4]
 807eaa7:  add edx, 0x4
 807eaaa:  test eax, eax
 807eaac:  je 807eb95
 807eab2:  cmp eax, DWORD PTR [ebp-0x64]
 807eab5:  je 807ead1
 807eab7:  sub eax, 0x15c
 807eabc:  mov esi, DWORD PTR [ebp-0x14]
 807eabf:  cmp esi, DWORD PTR [eax+0x18]
 807eac2:  jne 807ec36
 807eac8:  cmp DWORD PTR [eax+0x208], 0xff
 807eacf:  jne 807eaa0
 807ead1:  add ecx, 0x1
 807ead4:  jmp 807eaa4
 807ead6:  test BYTE PTR ds:0x80d2dd0, 0x2
 807eadd:  jne 807efc0
 807eae3:  mov eax, DWORD PTR [edi+0x88]
 807eae9:  test eax, eax
 807eaeb:  je 807eb12
 807eaed:  mov edx, DWORD PTR [eax+0x4]
 807eaf0:  mov eax, DWORD PTR [edi+0x90]
 807eaf6:  add edx, DWORD PTR [edi]
 807eaf8:  mov esi, DWORD PTR [eax+0x4]
 807eafb:  shr esi, 0x2
 807eafe:  test esi, esi
 807eb00:  je 807eb12
 807eb02:  lea ebx, [edx+esi*4-0x4]
 807eb06:  xchg ax, ax
 807eb08:  call DWORD PTR [ebx]
 807eb0a:  sub ebx, 0x4
 807eb0d:  sub esi, 0x1
 807eb10:  jne 807eb08
 807eb12:  mov edx, DWORD PTR [edi+0x54]
 807eb15:  test edx, edx
 807eb17:  je 807eb20
 807eb19:  mov eax, DWORD PTR [edi]
 807eb1b:  add eax, DWORD PTR [edx+0x4]
 807eb1e:  call eax
 807eb20:  movzx edx, BYTE PTR [edi+0x194]
 807eb27:  jmp 807e9fa
 807eb2c:  shl edx, 0x2
 807eb2f:  mov DWORD PTR [eax+edx], 0x0
 807eb36:  mov DWORD PTR [edi+0x1cc], eax
 807eb3c:  mov eax, DWORD PTR [ebp-0x74]
 807eb3f:  cmp DWORD PTR [ebp-0x78], eax
 807eb42:  je 807ecab
 807eb48:  mov DWORD PTR [esp], eax
 807eb4b:  call 807d650
 807eb50:  cmp eax, 0x1
 807eb53:  sbb eax, eax
 807eb55:  and BYTE PTR [ebp-0x45], al
 807eb58:  mov ecx, DWORD PTR [ebp-0x28]
 807eb5b:  mov DWORD PTR [edi+0x1c8], ecx
 807eb61:  mov eax, DWORD PTR [edi+0x16c]
 807eb67:  test eax, eax
 807eb69:  je 807eb7e
 807eb6b:  cmp DWORD PTR [eax+0x208], 0xff
 807eb72:  je 807eb7e
 807eb74:  mov DWORD PTR [edi+0x16c], 0x0
 807eb7e:  mov ebx, DWORD PTR [ebp-0x40]
 807eb81:  cmp DWORD PTR [ebp-0x30], ebx
 807eb84:  jae 807ea1d
 807eb8a:  mov esi, DWORD PTR [ebp-0x30]
 807eb8d:  mov DWORD PTR [ebp-0x40], esi
 807eb90:  jmp 807ea1d
 807eb95:  cmp BYTE PTR [ebp-0x78], 0x0
 807eb99:  je 807eb61
 807eb9b:  mov edx, DWORD PTR [ebp-0x74]
 807eb9e:  lea eax, [edi+0x1b8]
 807eba4:  mov DWORD PTR [ebp-0x78], eax
 807eba7:  cmp eax, edx
 807eba9:  je 807ebb7
 807ebab:  cmp ecx, 0x3
 807ebae:  mov DWORD PTR [ebp-0x28], 0x4
 807ebb5:  jbe 807ebea
 807ebb7:  mov ecx, DWORD PTR [edi+0x1c8]
 807ebbd:  mov eax, ecx
 807ebbf:  shl eax, 0x2
 807ebc2:  mov DWORD PTR [ebp-0x28], ecx
 807ebc5:  mov DWORD PTR [esp], eax
 807ebc8:  call 804d6f0
 807ebcd:  test eax, eax
 807ebcf:  je 807efdf
 807ebd5:  mov ebx, DWORD PTR [edi+0x1cc]
 807ebdb:  xor edx, edx
 807ebdd:  mov DWORD PTR [ebp-0x74], ebx
 807ebe0:  mov ebx, DWORD PTR [ebx]
 807ebe2:  test ebx, ebx
 807ebe4:  je 807eb2f
 807ebea:  xor edx, edx
 807ebec:  mov ecx, 0x4
 807ebf1:  jmp 807ec20
 807ebf3:  nop
 807ebf4:  lea esi, [esi]
 807ebf8:  mov ebx, DWORD PTR [ebp-0x2c]
 807ebfb:  test ebx, ebx
 807ebfd:  je 807ec0f
 807ebff:  mov ebx, DWORD PTR [ebp-0x2c]
 807ec02:  mov DWORD PTR [ebp-0x2c], 0x0
 807ec09:  mov DWORD PTR [eax+edx*4], ebx
 807ec0c:  add edx, 0x1
 807ec0f:  mov esi, DWORD PTR [ebp-0x74]
 807ec12:  mov ebx, DWORD PTR [esi+ecx]
 807ec15:  add ecx, 0x4
 807ec18:  test ebx, ebx
 807ec1a:  je 807eb2c
 807ec20:  cmp DWORD PTR [ebp-0x64], ebx
 807ec23:  je 807ec2e
 807ec25:  cmp DWORD PTR [ebx+0xac], 0xff
 807ec2c:  jne 807ebf8
 807ec2e:  mov DWORD PTR [eax+edx*4], ebx
 807ec31:  add edx, 0x1
 807ec34:  jmp 807ec0f
 807ec36:  mov DWORD PTR [esp+0xc], 0x80b529f
 807ec3e:  mov DWORD PTR [esp+0x8], 0x158
 807ec46:  mov DWORD PTR [esp+0x4], 0x80b51c1
 807ec4e:  mov DWORD PTR [esp], 0x80b5236
 807ec55:  call 8051490
 807ec5a:  mov eax, DWORD PTR [edi+0x1f0]
 807ec60:  test eax, eax
 807ec62:  je 807ea6a
 807ec68:  mov ebx, DWORD PTR [eax+0x4]
 807ec6b:  mov edx, 0x1
 807ec70:  mov ecx, 0x8
 807ec75:  test ebx, ebx
 807ec77:  je 807ec8a
 807ec79:  add edx, 0x1
 807ec7c:  mov esi, DWORD PTR [eax+edx*4]
 807ec7f:  test esi, esi
 807ec81:  jne 807ec79
 807ec83:  lea ecx, [edx*4+0x4]
 807ec8a:  add eax, ecx
 807ec8c:  mov ecx, 0x2
 807ec91:  mov DWORD PTR [edi+0x15c], eax
 807ec97:  lea eax, [edi+0x15c]
 807ec9d:  mov DWORD PTR [edi+0x160], edx
 807eca3:  mov DWORD PTR [ebp-0x2c], eax
 807eca6:  jmp 807ea76
 807ecab:  mov BYTE PTR [ebp-0x45], 0x1
 807ecaf:  jmp 807eb58
 807ecb4:  cmp BYTE PTR [ebp-0x4d], 0x0
 807ecb8:  je 807ecde
 807ecba:  mov eax, ds:0x80d2da0
 807ecbf:  add eax, 0x1
 807ecc2:  test eax, eax
 807ecc4:  mov ds:0x80d2da0, eax
 807ecc9:  je 807f16d
 807eccf:  mov esi, DWORD PTR [ebp-0x34]
 807ecd2:  cmp esi, DWORD PTR ds:0x80d2d8c
 807ecd8:  je 807f15d
 807ecde:  mov eax, DWORD PTR [ebp-0x3c]
 807ece1:  mov DWORD PTR [eax+0xc], 0x0
 807ece8:  call 807c330
 807eced:  cmp DWORD PTR ds:0x80d2a3c, 0x2
 807ecf4:  jne 807eff7
 807ecfa:  mov esp, DWORD PTR [ebp-0x5c]
 807ecfd:  mov eax, DWORD PTR [ebp-0x54]
 807ed00:  mov edi, DWORD PTR [ebp-0x54]
 807ed03:  jmp 807e6e5
 807ed08:  cmp BYTE PTR [ebp-0x46], 0x0
 807ed0c:  je 807eced
 807ed0e:  mov edx, DWORD PTR [ebp-0x10]
 807ed11:  xor eax, eax
 807ed13:  call 807c2d0
 807ed18:  mov DWORD PTR [eax+0xc], 0x2
 807ed1f:  mov DWORD PTR [ebp-0x3c], eax
 807ed22:  call 807c330
 807ed27:  mov edi, DWORD PTR [ebp-0x44]
 807ed2a:  test edi, edi
 807ed2c:  je 807eda3
 807ed2e:  mov eax, DWORD PTR [ebp-0x54]
 807ed31:  mov edi, DWORD PTR [eax+0x8]
 807ed34:  mov ebx, DWORD PTR [edi+0x4]
 807ed37:  test ebx, ebx
 807ed39:  je 807f153
 807ed3f:  mov esi, DWORD PTR [edi]
 807ed41:  mov ecx, ebx
 807ed43:  mov eax, DWORD PTR [esi+ebx*4-0x4]
 807ed47:  test BYTE PTR [eax+0x195], 0x40
 807ed4e:  je 807ed6b
 807ed50:  lea edx, [esi+ebx*4-0x8]
 807ed54:  mov ecx, ebx
 807ed56:  jmp 807ed66
 807ed58:  mov eax, DWORD PTR [edx]
 807ed5a:  sub edx, 0x4
 807ed5d:  test BYTE PTR [eax+0x195], 0x40
 807ed64:  je 807ed6b
 807ed66:  sub ecx, 0x1
 807ed69:  jne 807ed58
 807ed6b:  mov edx, DWORD PTR [ebp-0x44]
 807ed6e:  lea eax, [ecx+edx]
 807ed71:  mov edx, ecx
 807ed73:  cmp ebx, eax
 807ed75:  je 807eda0
 807ed77:  test ecx, ecx
 807ed79:  je 807f153
 807ed7f:  xor eax, eax
 807ed81:  xor edx, edx
 807ed83:  mov ebx, DWORD PTR [esi+eax*4]
 807ed86:  test BYTE PTR [ebx+0x195], 0x40
 807ed8d:  jne 807ed99
 807ed8f:  cmp eax, edx
 807ed91:  je 807ed96
 807ed93:  mov DWORD PTR [esi+edx*4], ebx
 807ed96:  add edx, 0x1
 807ed99:  add eax, 0x1
 807ed9c:  cmp ecx, eax
 807ed9e:  ja 807ed83
 807eda0:  mov DWORD PTR [edi+0x4], edx
 807eda3:  mov eax, gs:0xc
 807eda9:  test eax, eax
 807edab:  jne 807f0f1
 807edb1:  mov ecx, DWORD PTR [ebp-0x40]
 807edb4:  cmp DWORD PTR [ebp-0x4c], ecx
 807edb7:  jbe 807ecde
 807edbd:  mov esi, DWORD PTR [ebp-0x70]
 807edc0:  mov ebx, DWORD PTR [ebp-0x40]
 807edc3:  mov edi, DWORD PTR [ebp-0x40]
 807edc6:  mov BYTE PTR [ebp-0x4d], 0x0
 807edca:  lea ebx, [esi+ebx*4]
 807edcd:  mov esi, DWORD PTR [ebp-0x68]
 807edd0:  add esi, DWORD PTR [ebp-0x40]
 807edd3:  mov DWORD PTR [ebp-0x1c], ebx
 807edd6:  xor ebx, ebx
 807edd8:  mov DWORD PTR [ebp-0x24], edi
 807eddb:  xor edi, edi
 807eddd:  mov DWORD PTR [ebp-0x18], esi
 807ede0:  mov edx, esi
 807ede2:  mov eax, DWORD PTR [ebp-0x1c]
 807ede5:  mov DWORD PTR [ebp-0x38], ebx
 807ede8:  mov DWORD PTR [ebp-0x34], edi
 807edeb:  cmp BYTE PTR [edx], 0x0
 807edee:  mov esi, DWORD PTR [eax]
 807edf0:  jne 807ef0f
 807edf6:  movzx edx, BYTE PTR [esi+0x194]
 807edfd:  mov eax, edx
 807edff:  and eax, 0x3
 807ee02:  cmp al, 0x2
 807ee04:  jne 807f0b0
 807ee0a:  mov ecx, DWORD PTR [esi+0x230]
 807ee10:  mov DWORD PTR [ebp-0x38], ebx
 807ee13:  mov DWORD PTR [ebp-0x34], edi
 807ee16:  test ecx, ecx
 807ee18:  jne 807f028
 807ee1e:  mov eax, esi
 807ee20:  call 807f3c0
 807ee25:  mov edx, DWORD PTR [esi+0x10]
 807ee28:  test edx, edx
 807ee2a:  je 807ef8d
 807ee30:  mov eax, DWORD PTR [esi+0xc]
 807ee33:  mov ecx, DWORD PTR [ebp-0x54]
 807ee36:  mov DWORD PTR [edx+0xc], eax
 807ee39:  mov edx, DWORD PTR [esi+0xc]
 807ee3c:  sub DWORD PTR [ecx+0x4], 0x1
 807ee40:  test edx, edx
 807ee42:  je 807ee4a
 807ee44:  mov eax, DWORD PTR [esi+0x10]
 807ee47:  mov DWORD PTR [edx+0x10], eax
 807ee4a:  mov eax, DWORD PTR [esi+0x170]
 807ee50:  mov DWORD PTR [esp], eax
 807ee53:  call 804b4a0
 807ee58:  mov eax, DWORD PTR [esi+0x1a8]
 807ee5e:  cmp eax, 0xff
 807ee61:  je 807ee6b
 807ee63:  mov DWORD PTR [esp], eax
 807ee66:  call 804b4a0
 807ee6b:  mov eax, DWORD PTR [esi+0x1f8]
 807ee71:  mov DWORD PTR [esp], eax
 807ee74:  call 804b4a0
 807ee79:  test BYTE PTR ds:0x80d2dd0, 0x40
 807ee80:  jne 807f009
 807ee86:  mov eax, DWORD PTR [esi+0x4]
 807ee89:  mov DWORD PTR [esp], eax
 807ee8c:  call 804b4a0
 807ee91:  mov eax, DWORD PTR [esi+0x1c]
 807ee94:  jmp 807ee9e
 807ee96:  xchg ax, ax
 807ee98:  test ebx, ebx
 807ee9a:  je 807eeb2
 807ee9c:  mov eax, ebx
 807ee9e:  mov edx, DWORD PTR [eax+0x8]
 807eea1:  mov ebx, DWORD PTR [eax+0x4]
 807eea4:  test edx, edx
 807eea6:  jne 807ee98
 807eea8:  mov DWORD PTR [esp], eax
 807eeab:  call 804b4a0
 807eeb0:  jmp 807ee98
 807eeb2:  mov eax, DWORD PTR [esi+0x1f0]
 807eeb8:  mov DWORD PTR [esp], eax
 807eebb:  call 804b4a0
 807eec0:  mov edx, DWORD PTR [esi+0x1cc]
 807eec6:  lea eax, [esi+0x1b8]
 807eecc:  cmp edx, eax
 807eece:  je 807eed8
 807eed0:  mov DWORD PTR [esp], edx
 807eed3:  call 804b4a0
 807eed8:  cmp BYTE PTR [esi+0x194], 0x0
 807eedf:  js 807ef35
 807eee1:  mov eax, DWORD PTR [esi+0x198]
 807eee7:  cmp eax, 0xff
 807eeea:  je 807eef4
 807eeec:  mov DWORD PTR [esp], eax
 807eeef:  call 804b4a0
 807eef4:  mov eax, DWORD PTR [esi+0x1e8]
 807eefa:  cmp eax, 0xff
 807eefd:  je 807ef07
 807eeff:  mov DWORD PTR [esp], eax
 807ef02:  call 804b4a0
 807ef07:  mov DWORD PTR [esp], esi
 807ef0a:  call 804b4a0
 807ef0f:  add DWORD PTR [ebp-0x24], 0x1
 807ef13:  mov ebx, DWORD PTR [ebp-0x24]
 807ef16:  add DWORD PTR [ebp-0x1c], 0x4
 807ef1a:  add DWORD PTR [ebp-0x18], 0x1
 807ef1e:  cmp DWORD PTR [ebp-0x4c], ebx
 807ef21:  jbe 807ecb4
 807ef27:  mov ebx, DWORD PTR [ebp-0x38]
 807ef2a:  mov edi, DWORD PTR [ebp-0x34]
 807ef2d:  mov edx, DWORD PTR [ebp-0x18]
 807ef30:  jmp 807ede2
 807ef35:  mov eax, DWORD PTR [esi+0x150]
 807ef3b:  mov DWORD PTR [esp], eax
 807ef3e:  call 804b4a0
 807ef43:  jmp 807eee1
 807ef45:  mov DWORD PTR [esp+0xc], 0x80b529f
 807ef4d:  mov DWORD PTR [esp+0x8], 0xf5
 807ef55:  mov DWORD PTR [esp+0x4], 0x80b51c1
 807ef5d:  mov DWORD PTR [esp], 0x80b5340
 807ef64:  call 8051490
 807ef69:  mov DWORD PTR [esp+0xc], 0x80b529f
 807ef71:  mov DWORD PTR [esp+0x8], 0x9a
 807ef79:  mov DWORD PTR [esp+0x4], 0x80b51c1
 807ef81:  mov DWORD PTR [esp], 0x80b51fa
 807ef88:  call 8051490
 807ef8d:  mov edx, DWORD PTR [ebp-0x54]
 807ef90:  mov eax, DWORD PTR [esi+0xc]
 807ef93:  mov ecx, edx
 807ef95:  mov DWORD PTR [edx], eax
 807ef97:  jmp 807ee39
 807ef9c:  mov DWORD PTR [esp+0xc], 0x80b529f
 807efa4:  mov DWORD PTR [esp+0x8], 0xf0
 807efac:  mov DWORD PTR [esp+0x4], 0x80b51c1
 807efb4:  mov DWORD PTR [esp], 0x80b5209
 807efbb:  call 8051490
 807efc0:  mov ebx, DWORD PTR [ebp-0x58]
 807efc3:  mov DWORD PTR [esp+0x8], ebx
 807efc7:  mov eax, DWORD PTR [edi+0x4]
 807efca:  mov DWORD PTR [esp], 0x80b521c
 807efd1:  mov DWORD PTR [esp+0x4], eax
 807efd5:  call 807c8d0
 807efda:  jmp 807eae3
 807efdf:  mov DWORD PTR [esp], 0x80b5011
 807efe6:  xor ecx, ecx
 807efe8:  mov edx, 0x80b5249
 807efed:  mov eax, 0xc
 807eff2:  call 807c080
 807eff7:  mov DWORD PTR ds:0x80d2a3c, 0x0
 807f001:  mov esp, DWORD PTR [ebp-0x5c]
 807f004:  jmp 807e6ad
 807f009:  mov eax, DWORD PTR [esi+0x18]
 807f00c:  mov DWORD PTR [esp+0x8], eax
 807f010:  mov eax, DWORD PTR [esi+0x4]
 807f013:  mov DWORD PTR [esp], 0x80b5384
 807f01a:  mov DWORD PTR [esp+0x4], eax
 807f01e:  call 807c8d0
 807f023:  jmp 807ee86
 807f028:  mov ecx, DWORD PTR ds:0x80d2d98
 807f02e:  test ecx, ecx
 807f030:  mov DWORD PTR [ebp-0x60], ecx
 807f033:  je 807f05c
 807f035:  shr dl, 0x3
 807f038:  mov eax, DWORD PTR [esi+0x240]
 807f03e:  xor ecx, ecx
 807f040:  and edx, 0x1
 807f043:  mov DWORD PTR [esp], edx
 807f046:  mov edx, DWORD PTR [ebp-0x60]
 807f049:  call 807def0
 807f04e:  test al, al
 807f050:  jne 807f05c
 807f052:  mov eax, ds:0x80d2da4
 807f057:  mov ds:0x80d2d94, eax
 807f05c:  mov eax, DWORD PTR [esi+0x23c]
 807f062:  cmp eax, 0x1
 807f065:  mov DWORD PTR [ebp-0x34], eax
 807f068:  jbe 807f0a1
 807f06a:  test ebx, ebx
 807f06c:  je 807f0d4
 807f06e:  cmp ebx, eax
 807f070:  je 807f0d4
 807f072:  mov ecx, DWORD PTR [ebp-0x34]
 807f075:  sub ecx, DWORD PTR [esi+0x230]
 807f07b:  cmp ecx, edi
 807f07d:  mov DWORD PTR [ebp-0x38], ecx
 807f080:  je 807f1b3
 807f086:  mov eax, ds:0x80d2d8c
 807f08b:  cmp edi, eax
 807f08d:  je 807f1a4
 807f093:  cmp DWORD PTR [ebp-0x34], eax
 807f096:  je 807f18d
 807f09c:  cmp DWORD PTR [ebp-0x34], edi
 807f09f:  ja 807f0e8
 807f0a1:  mov DWORD PTR [ebp-0x38], ebx
 807f0a4:  mov DWORD PTR [ebp-0x34], edi
 807f0a7:  mov BYTE PTR [ebp-0x4d], 0x1
 807f0ab:  jmp 807ee1e
 807f0b0:  mov DWORD PTR [esp+0xc], 0x80b529f
 807f0b8:  mov DWORD PTR [esp+0x8], 0x205
 807f0c0:  mov DWORD PTR [esp+0x4], 0x80b51c1
 807f0c8:  mov DWORD PTR [esp], 0x80b5251
 807f0cf:  call 8051490
 807f0d4:  mov edx, DWORD PTR [ebp-0x34]
 807f0d7:  sub edx, DWORD PTR [esi+0x230]
 807f0dd:  test edi, edi
 807f0df:  mov DWORD PTR [ebp-0x38], edx
 807f0e2:  jne 807f198
 807f0e8:  mov BYTE PTR [ebp-0x4d], 0x1
 807f0ec:  jmp 807ee1e
 807f0f1:  mov esi, DWORD PTR [ebp-0x44]
 807f0f4:  test esi, esi
 807f0f6:  jne 807f119
 807f0f8:  cmp BYTE PTR [ebp-0x45], 0x0
 807f0fc:  lea esi, [esi]
 807f100:  jne 807f119
 807f102:  mov eax, ds:0x80d2df8
 807f107:  test eax, eax
 807f109:  je 807edb1
 807f10f:  mov ebx, DWORD PTR [eax]
 807f111:  test ebx, ebx
 807f113:  je 807edb1
 807f119:  call DWORD PTR ds:0x80d2de0
 807f11f:  mov ebx, DWORD PTR ds:0x80d2df8
 807f125:  test ebx, ebx
 807f127:  je 807edb1
 807f12d:  mov eax, DWORD PTR [ebx]
 807f12f:  test eax, eax
 807f131:  je 807edb1
 807f137:  sub eax, 0x1
 807f13a:  mov DWORD PTR [ebx], eax
 807f13c:  mov eax, DWORD PTR [ebx+eax*4+0x4]
 807f140:  mov DWORD PTR [esp], eax
 807f143:  call 804b4a0
 807f148:  mov eax, DWORD PTR [ebx]
 807f14a:  test eax, eax
 807f14c:  jne 807f137
 807f14e:  jmp 807edb1
 807f153:  xor edx, edx
 807f155:  lea esi, [esi]
 807f158:  jmp 807eda0
 807f15d:  mov edi, DWORD PTR [ebp-0x38]
 807f160:  mov DWORD PTR ds:0x80d2d8c, edi
 807f166:  xchg ax, ax
 807f168:  jmp 807ecde
 807f16d:  mov DWORD PTR [esp+0x4], 0x80b53ac
 807f175:  mov DWORD PTR [esp], 0x2
 807f17c:  call 807c890
 807f181:  mov DWORD PTR [esp], 0x7f
 807f188:  call 804f170
 807f18d:  mov eax, DWORD PTR [ebp-0x38]
 807f190:  mov DWORD PTR [ebp-0x38], ebx
 807f193:  mov ds:0x80d2d8c, eax
 807f198:  mov DWORD PTR [ebp-0x34], edi
 807f19b:  mov BYTE PTR [ebp-0x4d], 0x1
 807f19f:  jmp 807ee1e
 807f1a4:  mov DWORD PTR ds:0x80d2d8c, ebx
 807f1aa:  mov BYTE PTR [ebp-0x4d], 0x1
 807f1ae:  jmp 807ee1e
 807f1b3:  mov DWORD PTR [ebp-0x38], ebx
 807f1b6:  mov BYTE PTR [ebp-0x4d], 0x1
 807f1ba:  jmp 807ee1e
 807f1bf:  nop

0807f1c0 <_dl_close>:
 807f1c0:  push ebp
 807f1c1:  mov ebp, esp
 807f1c3:  push ebx
 807f1c4:  sub esp, 0x14
 807f1c7:  mov ebx, DWORD PTR [ebp+0x8]
 807f1ca:  test BYTE PTR [ebx+0x200], 0x8
 807f1d1:  jne 807f21d
 807f1d3:  mov eax, DWORD PTR [ebx+0x190]
 807f1d9:  test eax, eax
 807f1db:  je 807f250
 807f1dd:  mov eax, 0x0
 807f1e2:  test eax, eax
 807f1e4:  je 807f1f2
 807f1e6:  mov DWORD PTR [esp], 0x80d0d7c
 807f1ed:  call 0
 807f1f2:  mov DWORD PTR [esp], ebx
 807f1f5:  call 807e670
 807f1fa:  mov eax, 0x0
 807f1ff:  test eax, eax
 807f201:  je 807f218
 807f203:  mov DWORD PTR [ebp+0x8], 0x80d0d7c
 807f20a:  mov ebx, DWORD PTR [ebp-0x4]
 807f20d:  leave
 807f20e:  jmp 0
 807f213:  nop
 807f214:  lea esi, [esi]
 807f218:  mov ebx, DWORD PTR [ebp-0x4]
 807f21b:  leave
 807f21c:  ret
 807f21d:  test BYTE PTR [ebx+0x194], 0x8
 807f224:  jne 807f218
 807f226:  mov DWORD PTR [esp+0xc], 0x80b5295
 807f22e:  mov DWORD PTR [esp+0x8], 0x2cf
 807f236:  mov DWORD PTR [esp+0x4], 0x80b51c1
 807f23e:  mov DWORD PTR [esp], 0x80b526b
 807f245:  call 8051490
 807f24a:  lea esi, [esi]
 807f250:  mov edx, DWORD PTR [ebx+0x4]
 807f253:  xor ecx, ecx
 807f255:  xor eax, eax
 807f257:  mov DWORD PTR [esp], 0x80b527e
 807f25e:  call 807c080
 807f263:  nop
 807f264:  nop
 807f265:  nop
 807f266:  nop
 807f267:  nop
 807f268:  nop
 807f269:  nop
 807f26a:  nop
 807f26b:  nop
 807f26c:  nop
 807f26d:  nop
 807f26e:  nop
 807f26f:  nop

0807f270 <_dl_runtime_resolve>:
 807f270:  push eax
 807f271:  push ecx
 807f272:  push edx
 807f273:  mov edx, DWORD PTR [esp+0x10]
 807f277:  mov eax, DWORD PTR [esp+0xc]
 807f27b:  call 8097330
 807f280:  pop edx
 807f281:  mov ecx, DWORD PTR [esp]
 807f284:  mov DWORD PTR [esp], eax
 807f287:  mov eax, DWORD PTR [esp+0x4]
 807f28b:  ret 0xc
 807f28e:  xchg ax, ax

0807f290 <_dl_runtime_profile>:
 807f290:  push esp
 807f291:  add DWORD PTR [esp], 0x8
 807f295:  push ebp
 807f296:  push eax
 807f297:  push ecx
 807f298:  push edx
 807f299:  mov ecx, esp
 807f29b:  sub esp, 0x8
 807f29e:  mov DWORD PTR [esp+0x4], 0xffffffff
 807f2a6:  lea edx, [esp+0x4]
 807f2aa:  mov DWORD PTR [esp], edx
 807f2ad:  push ecx
 807f2ae:  mov ecx, DWORD PTR [esp+0x28]
 807f2b2:  mov edx, DWORD PTR [esp+0x24]
 807f2b6:  mov eax, DWORD PTR [esp+0x20]
 807f2ba:  call 8097170
 807f2bf:  mov edx, DWORD PTR [esp]
 807f2c2:  test edx, edx
 807f2c4:  jns 807f2d5
 807f2c6:  pop edx
 807f2c7:  pop edx
 807f2c8:  mov ecx, DWORD PTR [esp]
 807f2cb:  mov DWORD PTR [esp], eax
 807f2ce:  mov eax, DWORD PTR [esp+0x4]
 807f2d2:  ret 0x14
 807f2d5:  mov DWORD PTR [esp], ebx
 807f2d8:  mov ebx, edx
 807f2da:  push edi
 807f2db:  push esi
 807f2dc:  lea esi, [esp+0x2c]
 807f2e0:  mov ecx, ebx
 807f2e2:  or ebx, 0x4
 807f2e5:  and ebx, 0xfc
 807f2e8:  mov edi, esp
 807f2ea:  sub edi, ebx
 807f2ec:  mov ebx, esp
 807f2ee:  mov esp, edi
 807f2f0:  shr ecx, 0x2
 807f2f3:  rep movsd
 807f2f5:  mov esi, DWORD PTR [ebx]
 807f2f7:  mov edi, DWORD PTR [ebx+0x4]
 807f2fa:  mov DWORD PTR [ebx], eax
 807f2fc:  mov edx, DWORD PTR [ebx+0xc]
 807f2ff:  mov ecx, DWORD PTR [ebx+0x10]
 807f302:  mov eax, DWORD PTR [ebx+0x14]
 807f305:  call DWORD PTR [ebx]
 807f307:  mov esp, ebx
 807f309:  mov ebx, DWORD PTR [esp+0x8]
 807f30d:  sub esp, 0x14
 807f310:  mov DWORD PTR [esp], eax
 807f313:  mov DWORD PTR [esp+0x4], edx
 807f317:  fstp TBYTE PTR [esp+0x8]
 807f31b:  fstp TBYTE PTR [esp+0x14]
 807f31f:  push esp
 807f320:  lea ecx, [esp+0x24]
 807f324:  mov eax, DWORD PTR [esp+0x38]
 807f328:  mov edx, DWORD PTR [esp+0x3c]
 807f32c:  call 8097160
 807f331:  mov eax, DWORD PTR [esp]
 807f334:  mov edx, DWORD PTR [esp+0x4]
 807f338:  fld TBYTE PTR [esp+0x14]
 807f33c:  fld TBYTE PTR [esp+0x8]
 807f340:  add esp, 0x3c
 807f343:  ret
 807f344:  nop
 807f345:  nop
 807f346:  nop
 807f347:  nop
 807f348:  nop
 807f349:  nop
 807f34a:  nop
 807f34b:  nop
 807f34c:  nop
 807f34d:  nop
 807f34e:  nop
 807f34f:  nop

0807f350 <_dl_mcount_wrapper_check>:
 807f350:  push ebp
 807f351:  mov ebp, esp
 807f353:  sub esp, 0x8
 807f356:  mov eax, ds:0x80d2e18
 807f35b:  test eax, eax
 807f35d:  je 807f371
 807f35f:  mov eax, DWORD PTR [ebp+0x8]
 807f362:  mov DWORD PTR [esp+0x4], eax
 807f366:  mov eax, DWORD PTR [ebp+0x4]
 807f369:  mov DWORD PTR [esp], eax
 807f36c:  call 8098490
 807f371:  leave
 807f372:  ret
 807f373:  lea esi, [esi]
 807f379:  lea edi, [edi]

0807f380 <_dl_mcount_wrapper>:
 807f380:  push ebp
 807f381:  mov ebp, esp
 807f383:  sub esp, 0x8
 807f386:  mov eax, DWORD PTR [ebp+0x8]
 807f389:  mov DWORD PTR [esp+0x4], eax
 807f38d:  mov eax, DWORD PTR [ebp+0x4]
 807f390:  mov DWORD PTR [esp], eax
 807f393:  call 8098490
 807f398:  leave
 807f399:  ret
 807f39a:  nop
 807f39b:  nop
 807f39c:  nop
 807f39d:  nop
 807f39e:  nop
 807f39f:  nop

0807f3a0 <_dl_initial_error_catch_tsd>:
 807f3a0:  mov eax, gs:0x0
 807f3a6:  push ebp
 807f3a7:  mov ebp, esp
 807f3a9:  pop ebp
 807f3aa:  lea eax, [eax-0x10]
 807f3b0:  ret
 807f3b1:  nop
 807f3b2:  nop
 807f3b3:  nop
 807f3b4:  nop
 807f3b5:  nop
 807f3b6:  nop
 807f3b7:  nop
 807f3b8:  nop
 807f3b9:  nop
 807f3ba:  nop
 807f3bb:  nop
 807f3bc:  nop
 807f3bd:  nop
 807f3be:  nop
 807f3bf:  nop

0807f3c0 <_dl_unmap>:
 807f3c0:  push ebp
 807f3c1:  mov ebp, esp
 807f3c3:  sub esp, 0x8
 807f3c6:  mov edx, DWORD PTR [eax+0x1ac]
 807f3cc:  mov eax, DWORD PTR [eax+0x1b0]
 807f3d2:  mov DWORD PTR [esp], edx
 807f3d5:  sub eax, edx
 807f3d7:  mov DWORD PTR [esp+0x4], eax
 807f3db:  call 8050050
 807f3e0:  leave
 807f3e1:  ret
 807f3e2:  lea esi, [esi]
 807f3e9:  lea edi, [edi]

0807f3f0 <_dl_tlsdesc_resolve_hold_fixup>:
 807f3f0:  push ebp
 807f3f1:  neg ecx
 807f3f3:  mov ebp, esp
 807f3f5:  sub esp, 0x4
 807f3f8:  mov eax, DWORD PTR [eax]
 807f3fa:  add ecx, DWORD PTR [ebp+0x4]
 807f3fd:  cmp eax, ecx
 807f3ff:  je 807f408
 807f401:  leave
 807f402:  ret
 807f403:  nop
 807f404:  lea esi, [esi]
 807f408:  mov eax, 0x0
 807f40d:  test eax, eax
 807f40f:  je 807f41d
 807f411:  mov DWORD PTR [esp], 0x80d0d7c
 807f418:  call 0
 807f41d:  mov eax, 0x0
 807f422:  test eax, eax
 807f424:  je 807f401
 807f426:  mov DWORD PTR [esp], 0x80d0d7c
 807f42d:  call 0
 807f432:  leave
 807f433:  ret
 807f434:  lea esi, [esi]
 807f43a:  lea edi, [edi]

0807f440 <_dl_tlsdesc_resolve_rel_fixup>:
 807f440:  push ebp
 807f441:  neg ecx
 807f443:  mov ebp, esp
 807f445:  sub esp, 0x28
 807f448:  mov DWORD PTR [ebp-0x8], esi
 807f44b:  mov esi, eax
 807f44d:  mov DWORD PTR [ebp-0xc], ebx
 807f450:  mov DWORD PTR [ebp-0x4], edi
 807f453:  mov eax, DWORD PTR [eax+0x4]
 807f456:  mov edi, edx
 807f458:  mov ebx, DWORD PTR [esi]
 807f45a:  add ecx, DWORD PTR [ebp+0x4]
 807f45d:  mov DWORD PTR [ebp-0x14], eax
 807f460:  cmp ebx, ecx
 807f462:  je 807f478
 807f464:  mov ebx, DWORD PTR [ebp-0xc]
 807f467:  mov esi, DWORD PTR [ebp-0x8]
 807f46a:  mov edi, DWORD PTR [ebp-0x4]
 807f46d:  mov esp, ebp
 807f46f:  pop ebp
 807f470:  ret
 807f471:  lea esi, [esi]
 807f478:  mov eax, 0x0
 807f47d:  test eax, eax
 807f47f:  je 807f48d
 807f481:  mov DWORD PTR [esp], 0x80d0d7c
 807f488:  call 0
 807f48d:  mov eax, DWORD PTR [esi]
 807f48f:  cmp ebx, eax
 807f491:  je 807f4b0
 807f493:  mov eax, 0x0
 807f498:  test eax, eax
 807f49a:  je 807f464
 807f49c:  mov DWORD PTR [esp], 0x80d0d7c
 807f4a3:  call 0
 807f4a8:  jmp 807f464
 807f4aa:  lea esi, [esi]
 807f4b0:  mov eax, DWORD PTR [edi+0x34]
 807f4b3:  mov DWORD PTR [esi], 0x807f840
 807f4b9:  mov ebx, DWORD PTR [eax+0x4]
 807f4bc:  mov eax, DWORD PTR [ebp-0x14]
 807f4bf:  mov ecx, DWORD PTR [eax+0x4]
 807f4c2:  mov eax, DWORD PTR [edi+0x38]
 807f4c5:  shr ecx, 0x8
 807f4c8:  mov edx, ecx
 807f4ca:  shl edx, 0x4
 807f4cd:  add edx, DWORD PTR [eax+0x4]
 807f4d0:  mov DWORD PTR [ebp-0x10], edx
 807f4d3:  movzx eax, BYTE PTR [edx+0xc]
 807f4d7:  shr al, 0x4
 807f4da:  test al, al
 807f4dc:  jne 807f50d
 807f4de:  mov eax, DWORD PTR [ebp-0x10]
 807f4e1:  mov ebx, edi
 807f4e3:  test eax, eax
 807f4e5:  je 807f57e
 807f4eb:  mov edx, DWORD PTR [ebx+0x23c]
 807f4f1:  cmp edx, 0x1
 807f4f4:  jbe 807f590
 807f4fa:  mov eax, DWORD PTR [ebp-0x10]
 807f4fd:  mov eax, DWORD PTR [eax+0x4]
 807f500:  sub eax, edx
 807f502:  mov DWORD PTR [esi+0x4], eax
 807f505:  mov DWORD PTR [esi], 0x807f7c0
 807f50b:  jmp 807f493
 807f50d:  test BYTE PTR [edx+0xd], 0x3
 807f511:  jne 807f4de
 807f513:  mov eax, DWORD PTR [edi+0xe4]
 807f519:  test eax, eax
 807f51b:  je 807f539
 807f51d:  mov eax, DWORD PTR [eax+0x4]
 807f520:  movzx eax, WORD PTR [eax+ecx*2]
 807f524:  and eax, 0x7fff
 807f529:  shl eax, 0x4
 807f52c:  add eax, DWORD PTR [edi+0x170]
 807f532:  mov ecx, DWORD PTR [eax+0x4]
 807f535:  test ecx, ecx
 807f537:  jne 807f53b
 807f539:  xor eax, eax
 807f53b:  add ebx, DWORD PTR [edx]
 807f53d:  mov edx, edi
 807f53f:  mov DWORD PTR [esp+0x4], eax
 807f543:  mov eax, DWORD PTR [edi+0x1cc]
 807f549:  lea ecx, [ebp-0x10]
 807f54c:  mov DWORD PTR [esp+0x10], 0x0
 807f554:  mov DWORD PTR [esp+0xc], 0x1
 807f55c:  mov DWORD PTR [esp+0x8], 0x1
 807f564:  mov DWORD PTR [esp], eax
 807f567:  mov eax, ebx
 807f569:  call 80791b0
 807f56e:  mov ebx, eax
 807f570:  mov eax, DWORD PTR [ebp-0x10]
 807f573:  sub esp, 0x14
 807f576:  test eax, eax
 807f578:  jne 807f4eb
 807f57e:  mov DWORD PTR [esi+0x4], 0x0
 807f585:  mov DWORD PTR [esi], 0x807f7d0
 807f58b:  jmp 807f493
 807f590:  mov eax, ebx
 807f592:  call 807a240
 807f597:  mov edx, DWORD PTR [ebx+0x23c]
 807f59d:  jmp 807f4fa
 807f5a2:  lea esi, [esi]
 807f5a9:  lea edi, [edi]

0807f5b0 <_dl_tlsdesc_resolve_abs_plus_addend_fixup>:
 807f5b0:  push ebp
 807f5b1:  neg ecx
 807f5b3:  mov ebp, esp
 807f5b5:  sub esp, 0x14
 807f5b8:  mov DWORD PTR [ebp-0xc], ebx
 807f5bb:  mov ebx, eax
 807f5bd:  mov DWORD PTR [ebp-0x8], esi
 807f5c0:  mov DWORD PTR [ebp-0x4], edi
 807f5c3:  mov edi, DWORD PTR [eax+0x4]
 807f5c6:  mov esi, DWORD PTR [eax]
 807f5c8:  add ecx, DWORD PTR [ebp+0x4]
 807f5cb:  mov DWORD PTR [ebp-0x10], edx
 807f5ce:  cmp esi, ecx
 807f5d0:  je 807f5e0
 807f5d2:  mov ebx, DWORD PTR [ebp-0xc]
 807f5d5:  mov esi, DWORD PTR [ebp-0x8]
 807f5d8:  mov edi, DWORD PTR [ebp-0x4]
 807f5db:  mov esp, ebp
 807f5dd:  pop ebp
 807f5de:  ret
 807f5df:  nop
 807f5e0:  mov eax, 0x0
 807f5e5:  test eax, eax
 807f5e7:  je 807f5f5
 807f5e9:  mov DWORD PTR [esp], 0x80d0d7c
 807f5f0:  call 0
 807f5f5:  mov eax, DWORD PTR [ebx]
 807f5f7:  cmp esi, eax
 807f5f9:  je 807f618
 807f5fb:  mov eax, 0x0
 807f600:  test eax, eax
 807f602:  je 807f5d2
 807f604:  mov DWORD PTR [esp], 0x80d0d7c
 807f60b:  call 0
 807f610:  jmp 807f5d2
 807f612:  lea esi, [esi]
 807f618:  mov edx, DWORD PTR [ebp-0x10]
 807f61b:  mov DWORD PTR [ebx], 0x807f840
 807f621:  mov eax, DWORD PTR [edx+0x23c]
 807f627:  cmp eax, 0x1
 807f62a:  jbe 807f639
 807f62c:  sub edi, eax
 807f62e:  mov DWORD PTR [ebx+0x4], edi
 807f631:  mov DWORD PTR [ebx], 0x807f7c0
 807f637:  jmp 807f5fb
 807f639:  mov eax, edx
 807f63b:  call 807a240
 807f640:  mov edx, DWORD PTR [ebp-0x10]
 807f643:  mov eax, DWORD PTR [edx+0x23c]
 807f649:  jmp 807f62c
 807f64b:  nop
 807f64c:  lea esi, [esi]

0807f650 <_dl_tlsdesc_resolve_rela_fixup>:
 807f650:  push ebp
 807f651:  neg ecx
 807f653:  mov ebp, esp
 807f655:  sub esp, 0x28
 807f658:  mov DWORD PTR [ebp-0x8], esi
 807f65b:  mov esi, eax
 807f65d:  mov DWORD PTR [ebp-0xc], ebx
 807f660:  mov DWORD PTR [ebp-0x4], edi
 807f663:  mov eax, DWORD PTR [eax+0x4]
 807f666:  mov edi, edx
 807f668:  mov ebx, DWORD PTR [esi]
 807f66a:  add ecx, DWORD PTR [ebp+0x4]
 807f66d:  mov DWORD PTR [ebp-0x14], eax
 807f670:  cmp ebx, ecx
 807f672:  je 807f688
 807f674:  mov ebx, DWORD PTR [ebp-0xc]
 807f677:  mov esi, DWORD PTR [ebp-0x8]
 807f67a:  mov edi, DWORD PTR [ebp-0x4]
 807f67d:  mov esp, ebp
 807f67f:  pop ebp
 807f680:  ret
 807f681:  lea esi, [esi]
 807f688:  mov eax, 0x0
 807f68d:  test eax, eax
 807f68f:  je 807f69d
 807f691:  mov DWORD PTR [esp], 0x80d0d7c
 807f698:  call 0
 807f69d:  mov eax, DWORD PTR [esi]
 807f69f:  cmp ebx, eax
 807f6a1:  je 807f6c0
 807f6a3:  mov eax, 0x0
 807f6a8:  test eax, eax
 807f6aa:  je 807f674
 807f6ac:  mov DWORD PTR [esp], 0x80d0d7c
 807f6b3:  call 0
 807f6b8:  jmp 807f674
 807f6ba:  lea esi, [esi]
 807f6c0:  mov edx, DWORD PTR [ebp-0x14]
 807f6c3:  mov eax, DWORD PTR [edi+0x34]
 807f6c6:  mov DWORD PTR [esi], 0x807f840
 807f6cc:  mov ecx, DWORD PTR [edx+0x4]
 807f6cf:  mov ebx, DWORD PTR [eax+0x4]
 807f6d2:  mov eax, DWORD PTR [edi+0x38]
 807f6d5:  shr ecx, 0x8
 807f6d8:  mov edx, ecx
 807f6da:  shl edx, 0x4
 807f6dd:  add edx, DWORD PTR [eax+0x4]
 807f6e0:  mov DWORD PTR [ebp-0x10], edx
 807f6e3:  movzx eax, BYTE PTR [edx+0xc]
 807f6e7:  shr al, 0x4
 807f6ea:  test al, al
 807f6ec:  jne 807f723
 807f6ee:  mov ebx, edi
 807f6f0:  mov edi, DWORD PTR [ebp-0x10]
 807f6f3:  test edi, edi
 807f6f5:  je 807f794
 807f6fb:  mov ecx, DWORD PTR [ebx+0x23c]
 807f701:  cmp ecx, 0x1
 807f704:  jbe 807f7a8
 807f70a:  mov edx, DWORD PTR [ebp-0x14]
 807f70d:  mov eax, DWORD PTR [edx+0x8]
 807f710:  mov edx, DWORD PTR [ebp-0x10]
 807f713:  add eax, DWORD PTR [edx+0x4]
 807f716:  sub eax, ecx
 807f718:  mov DWORD PTR [esi+0x4], eax
 807f71b:  mov DWORD PTR [esi], 0x807f7c0
 807f721:  jmp 807f6a3
 807f723:  test BYTE PTR [edx+0xd], 0x3
 807f727:  jne 807f6ee
 807f729:  mov eax, DWORD PTR [edi+0xe4]
 807f72f:  test eax, eax
 807f731:  je 807f74f
 807f733:  mov eax, DWORD PTR [eax+0x4]
 807f736:  movzx eax, WORD PTR [eax+ecx*2]
 807f73a:  and eax, 0x7fff
 807f73f:  shl eax, 0x4
 807f742:  add eax, DWORD PTR [edi+0x170]
 807f748:  mov ecx, DWORD PTR [eax+0x4]
 807f74b:  test ecx, ecx
 807f74d:  jne 807f751
 807f74f:  xor eax, eax
 807f751:  add ebx, DWORD PTR [edx]
 807f753:  mov edx, edi
 807f755:  mov DWORD PTR [esp+0x10], 0x0
 807f75d:  lea ecx, [ebp-0x10]
 807f760:  mov DWORD PTR [esp+0xc], 0x1
 807f768:  mov DWORD PTR [esp+0x8], 0x1
 807f770:  mov DWORD PTR [esp+0x4], eax
 807f774:  mov eax, DWORD PTR [edi+0x1cc]
 807f77a:  mov DWORD PTR [esp], eax
 807f77d:  mov eax, ebx
 807f77f:  call 80791b0
 807f784:  mov edi, DWORD PTR [ebp-0x10]
 807f787:  sub esp, 0x14
 807f78a:  test edi, edi
 807f78c:  mov ebx, eax
 807f78e:  jne 807f6fb
 807f794:  mov edx, DWORD PTR [ebp-0x14]
 807f797:  mov eax, DWORD PTR [edx+0x8]
 807f79a:  mov DWORD PTR [esi+0x4], eax
 807f79d:  mov DWORD PTR [esi], 0x807f7d0
 807f7a3:  jmp 807f6a3
 807f7a8:  mov eax, ebx
 807f7aa:  call 807a240
 807f7af:  mov ecx, DWORD PTR [ebx+0x23c]
 807f7b5:  jmp 807f70a
 807f7ba:  nop
 807f7bb:  nop
 807f7bc:  nop
 807f7bd:  nop
 807f7be:  nop
 807f7bf:  nop

0807f7c0 <_dl_tlsdesc_return>:
 807f7c0:  mov eax, DWORD PTR [eax+0x4]
 807f7c3:  ret
 807f7c4:  lea esi, [esi]
 807f7ca:  lea edi, [edi]

0807f7d0 <_dl_tlsdesc_undefweak>:
 807f7d0:  mov eax, DWORD PTR [eax+0x4]
 807f7d3:  sub eax, DWORD PTR gs:0x0
 807f7da:  ret
 807f7db:  nop
 807f7dc:  lea esi, [esi]

0807f7e0 <_dl_tlsdesc_resolve_abs_plus_addend>:
 807f7e0:  push eax
 807f7e1:  push ecx
 807f7e2:  push edx
 807f7e3:  mov ecx, 0x10
 807f7e8:  mov edx, DWORD PTR [ebx+0x4]
 807f7eb:  call 807f5b0
 807f7f0:  pop edx
 807f7f1:  pop ecx
 807f7f2:  pop eax
 807f7f3:  jmp DWORD PTR [eax]
 807f7f5:  lea esi, [esi]
 807f7f9:  lea edi, [edi]

0807f800 <_dl_tlsdesc_resolve_rel>:
 807f800:  push eax
 807f801:  push ecx
 807f802:  push edx
 807f803:  mov ecx, 0x10
 807f808:  mov edx, DWORD PTR [ebx+0x4]
 807f80b:  call 807f440
 807f810:  pop edx
 807f811:  pop ecx
 807f812:  pop eax
 807f813:  jmp DWORD PTR [eax]
 807f815:  lea esi, [esi]
 807f819:  lea edi, [edi]

0807f820 <_dl_tlsdesc_resolve_rela>:
 807f820:  push eax
 807f821:  push ecx
 807f822:  push edx
 807f823:  mov ecx, 0x10
 807f828:  mov edx, DWORD PTR [ebx+0x4]
 807f82b:  call 807f650
 807f830:  pop edx
 807f831:  pop ecx
 807f832:  pop eax
 807f833:  jmp DWORD PTR [eax]
 807f835:  lea esi, [esi]
 807f839:  lea edi, [edi]

0807f840 <_dl_tlsdesc_resolve_hold>:
 807f840:  push eax
 807f841:  push ecx
 807f842:  push edx
 807f843:  mov ecx, 0x10
 807f848:  mov edx, DWORD PTR [ebx+0x4]
 807f84b:  call 807f3f0
 807f850:  pop edx
 807f851:  pop ecx
 807f852:  pop eax
 807f853:  jmp DWORD PTR [eax]
 807f855:  nop
 807f856:  nop
 807f857:  nop
 807f858:  nop
 807f859:  nop
 807f85a:  nop
 807f85b:  nop
 807f85c:  nop
 807f85d:  nop
 807f85e:  nop
 807f85f:  nop

0807f860 <__gconv_open>:
 807f860:  push ebp
 807f861:  mov ebp, esp
 807f863:  push edi
 807f864:  push esi
 807f865:  push ebx
 807f866:  sub esp, 0x54
 807f869:  mov DWORD PTR [esp+0x4], 0x2f
 807f871:  mov DWORD PTR [ebp-0x40], eax
 807f874:  mov DWORD PTR [ebp-0x44], edx
 807f877:  mov DWORD PTR [ebp-0x48], ecx
 807f87a:  mov DWORD PTR [esp], eax
 807f87d:  call 806ae20
 807f882:  test eax, eax
 807f884:  je 807f8aa
 807f886:  add eax, 0x1
 807f889:  mov DWORD PTR [esp+0x4], 0x2f
 807f891:  mov DWORD PTR [esp], eax
 807f894:  call 806ae20
 807f899:  test eax, eax
 807f89b:  je 807f8aa
 807f89d:  cmp BYTE PTR [eax+0x1], 0x0
 807f8a1:  lea ebx, [eax+0x1]
 807f8a4:  jne 807fc1d
 807f8aa:  mov DWORD PTR [ebp-0x30], 0x0
 807f8b1:  mov DWORD PTR [ebp-0x2c], 0x0
 807f8b8:  mov ecx, DWORD PTR [ebp-0x44]
 807f8bb:  mov DWORD PTR [esp+0x4], 0x2f
 807f8c3:  mov DWORD PTR [esp], ecx
 807f8c6:  call 806ae20
 807f8cb:  test eax, eax
 807f8cd:  je 807f8f3
 807f8cf:  add eax, 0x1
 807f8d2:  mov DWORD PTR [esp+0x4], 0x2f
 807f8da:  mov DWORD PTR [esp], eax
 807f8dd:  call 806ae20
 807f8e2:  test eax, eax
 807f8e4:  je 807f8f3
 807f8e6:  cmp BYTE PTR [eax+0x1], 0x0
 807f8ea:  lea edx, [eax+0x1]
 807f8ed:  jne 807fbea
 807f8f3:  mov ecx, DWORD PTR [ebp-0x40]
 807f8f6:  movzx eax, BYTE PTR ds:0x80b5670
 807f8fd:  movzx edx, BYTE PTR [ecx]
 807f900:  cmp dl, al
 807f902:  je 807fb83
 807f908:  mov edx, eax
 807f90a:  mov ecx, DWORD PTR [ebp-0x44]
 807f90d:  cmp dl, BYTE PTR [ecx]
 807f90f:  jne 807f964
 807f911:  cmp BYTE PTR [ecx+0x1], 0x2f
 807f915:  jne 807f964
 807f917:  cmp BYTE PTR [ecx+0x2], 0x0
 807f91b:  jne 807f964
 807f91d:  mov edx, 0xffffffd8
 807f923:  mov eax, gs:0x0
 807f929:  mov eax, DWORD PTR [eax+edx]
 807f92c:  mov eax, DWORD PTR [eax]
 807f92e:  mov esi, DWORD PTR [eax+0x5c]
 807f931:  mov DWORD PTR [esp], esi
 807f934:  call 804eea0
 807f939:  lea edx, [eax+0x15]
 807f93c:  and edx, 0xfc
 807f93f:  sub esp, edx
 807f941:  lea ebx, [esp+0x1b]
 807f945:  and ebx, 0xf0
 807f948:  mov DWORD PTR [esp+0x8], eax
 807f94c:  mov DWORD PTR [esp+0x4], esi
 807f950:  mov DWORD PTR [esp], ebx
 807f953:  call 806c310
 807f958:  mov WORD PTR [eax], 0x2f2f
 807f95d:  mov BYTE PTR [eax+0x2], 0x0
 807f961:  mov DWORD PTR [ebp-0x44], ebx
 807f964:  mov eax, DWORD PTR [ebp+0x8]
 807f967:  lea ecx, [ebp-0x10]
 807f96a:  mov edx, DWORD PTR [ebp-0x44]
 807f96d:  mov DWORD PTR [esp+0x4], eax
 807f971:  lea eax, [ebp-0x14]
 807f974:  mov DWORD PTR [esp], eax
 807f977:  mov eax, DWORD PTR [ebp-0x40]
 807f97a:  call 8080fa0
 807f97f:  mov DWORD PTR [ebp-0x3c], 0x0
 807f986:  sub esp, 0x8
 807f989:  test eax, eax
 807f98b:  mov DWORD PTR [ebp-0x34], eax
 807f98e:  jne 807fb6e
 807f994:  mov eax, DWORD PTR [ebp-0x2c]
 807f997:  test eax, eax
 807f999:  je 807f9c0
 807f99b:  mov ebx, DWORD PTR [ebp-0x2c]
 807f99e:  xor esi, esi
 807f9a0:  mov edi, DWORD PTR [ebx]
 807f9a2:  test edi, edi
 807f9a4:  je 807f9b5
 807f9a6:  mov eax, ebx
 807f9a8:  call 8087950
 807f9ad:  test eax, eax
 807f9af:  jne 807ff67
 807f9b5:  mov eax, DWORD PTR [ebx+0x4]
 807f9b8:  mov esi, ebx
 807f9ba:  test eax, eax
 807f9bc:  mov ebx, eax
 807f9be:  jne 807f9a0
 807f9c0:  mov eax, DWORD PTR [ebp-0x14]
 807f9c3:  lea eax, [eax+eax*8]
 807f9c6:  lea eax, [eax*4+0x8]
 807f9cd:  mov DWORD PTR [esp], eax
 807f9d0:  call 804d6f0
 807f9d5:  test eax, eax
 807f9d7:  mov DWORD PTR [ebp-0x4c], eax
 807f9da:  mov DWORD PTR [ebp-0x3c], eax
 807f9dd:  je 807fe52
 807f9e3:  mov edx, eax
 807f9e5:  mov eax, DWORD PTR [ebp-0x10]
 807f9e8:  mov DWORD PTR [edx+0x4], eax
 807f9eb:  mov eax, DWORD PTR [ebp-0x14]
 807f9ee:  mov DWORD PTR [edx], eax
 807f9f0:  lea eax, [eax+eax*8]
 807f9f3:  add edx, 0x8
 807f9f6:  shl eax, 0x2
 807f9f9:  mov DWORD PTR [esp+0x8], eax
 807f9fd:  mov DWORD PTR [esp+0x4], 0x0
 807fa05:  mov DWORD PTR [esp], edx
 807fa08:  call 804ef50
 807fa0d:  mov ebx, DWORD PTR [ebp-0x14]
 807fa10:  test ebx, ebx
 807fa12:  je 807fb6e
 807fa18:  mov ecx, DWORD PTR [ebp-0x4c]
 807fa1b:  xor edi, edi
 807fa1d:  mov DWORD PTR [ebp-0x1c], 0x0
 807fa24:  mov DWORD PTR [ebp-0x20], ecx
 807fa27:  mov edx, DWORD PTR [ebp-0x1c]
 807fa2a:  mov ecx, DWORD PTR [ebp-0x4c]
 807fa2d:  mov esi, DWORD PTR [ebp-0x2c]
 807fa30:  lea eax, [edx+edx*8]
 807fa33:  shl eax, 0x2
 807fa36:  lea edx, [ecx+eax+0x20]
 807fa3a:  mov ecx, DWORD PTR [ebp-0x20]
 807fa3d:  test esi, esi
 807fa3f:  mov DWORD PTR [ecx+0x1c], edx
 807fa42:  mov edx, DWORD PTR [ebp-0x4c]
 807fa45:  lea eax, [edx+eax+0x28]
 807fa49:  mov DWORD PTR [ebp-0x28], eax
 807fa4c:  je 807fb17
 807fa52:  lea esi, [esi]
 807fa58:  mov ecx, DWORD PTR [esi+0xc]
 807fa5b:  xor ebx, ebx
 807fa5d:  test ecx, ecx
 807fa5f:  jne 807fa74
 807fa61:  jmp 807fb0c
 807fa66:  xchg ax, ax
 807fa68:  add ebx, 0x1
 807fa6b:  cmp DWORD PTR [esi+0xc], ebx
 807fa6e:  jbe 807fb0c
 807fa74:  mov DWORD PTR [esp+0x8], 0x80b03e0
 807fa7c:  mov eax, DWORD PTR [esi+0x8]
 807fa7f:  mov eax, DWORD PTR [eax+ebx*4]
 807fa82:  mov DWORD PTR [esp+0x4], eax
 807fa86:  mov eax, DWORD PTR [ebp-0x10]
 807fa89:  mov eax, DWORD PTR [eax+edi+0xc]
 807fa8d:  mov DWORD PTR [esp], eax
 807fa90:  call 8094210
 807fa95:  test eax, eax
 807fa97:  jne 807fa68
 807fa99:  mov edx, DWORD PTR [esi+0x18]
 807fa9c:  mov DWORD PTR [ebp-0x18], 0x0
 807faa3:  test edx, edx
 807faa5:  je 807fabe
 807faa7:  mov eax, DWORD PTR [ebp-0x10]
 807faaa:  lea ecx, [ebp-0x18]
 807faad:  mov eax, DWORD PTR [eax+edi+0x10]
 807fab1:  mov DWORD PTR [esp], ecx
 807fab4:  mov DWORD PTR [esp+0x4], eax
 807fab8:  call edx
 807faba:  test eax, eax
 807fabc:  jne 807fb0c
 807fabe:  mov DWORD PTR [esp], 0x14
 807fac5:  call 804d6f0
 807faca:  test eax, eax
 807facc:  mov ecx, eax
 807face:  je 807fda0
 807fad4:  mov eax, DWORD PTR [esi+0x10]
 807fad7:  mov edx, DWORD PTR [ebp-0x20]
 807fada:  mov DWORD PTR [ecx+0x10], 0x0
 807fae1:  mov DWORD PTR [ecx], eax
 807fae3:  mov eax, DWORD PTR [esi+0x14]
 807fae6:  mov DWORD PTR [ecx+0x4], eax
 807fae9:  mov eax, DWORD PTR [esi+0x1c]
 807faec:  mov DWORD PTR [ecx+0x8], eax
 807faef:  mov eax, DWORD PTR [ebp-0x18]
 807faf2:  mov DWORD PTR [ecx+0xc], eax
 807faf5:  mov eax, DWORD PTR [edx+0x28]
 807faf8:  mov edx, DWORD PTR [ebp-0x28]
 807fafb:  test eax, eax
 807fafd:  je 807fb0a
 807faff:  nop
 807fb00:  lea edx, [eax+0x10]
 807fb03:  mov eax, DWORD PTR [eax+0x10]
 807fb06:  test eax, eax
 807fb08:  jne 807fb00
 807fb0a:  mov DWORD PTR [edx], ecx
 807fb0c:  mov esi, DWORD PTR [esi+0x4]
 807fb0f:  test esi, esi
 807fb11:  jne 807fa58
 807fb17:  mov eax, DWORD PTR [ebp-0x14]
 807fb1a:  sub eax, 0x1
 807fb1d:  cmp eax, DWORD PTR [ebp-0x1c]
 807fb20:  jbe 807ff4e
 807fb26:  mov eax, DWORD PTR [ebp-0x30]
 807fb29:  mov ecx, DWORD PTR [ebp-0x20]
 807fb2c:  mov DWORD PTR [ecx+0x10], eax
 807fb2f:  mov eax, DWORD PTR [ebp-0x10]
 807fb32:  imul ebx, DWORD PTR [eax+edi+0x30], 0x1fe0
 807fb3a:  mov DWORD PTR [esp], ebx
 807fb3d:  call 804d6f0
 807fb42:  mov edx, DWORD PTR [ebp-0x20]
 807fb45:  test eax, eax
 807fb47:  mov DWORD PTR [edx+0x8], eax
 807fb4a:  je 807fda0
 807fb50:  add DWORD PTR [ebp-0x1c], 0x1
 807fb54:  add eax, ebx
 807fb56:  mov ecx, DWORD PTR [ebp-0x1c]
 807fb59:  add edi, 0x3c
 807fb5c:  mov DWORD PTR [edx+0xc], eax
 807fb5f:  add edx, 0x24
 807fb62:  cmp DWORD PTR [ebp-0x14], ecx
 807fb65:  mov DWORD PTR [ebp-0x20], edx
 807fb68:  ja 807fa27
 807fb6e:  mov eax, DWORD PTR [ebp-0x48]
 807fb71:  mov edx, DWORD PTR [ebp-0x3c]
 807fb74:  mov DWORD PTR [eax], edx
 807fb76:  mov eax, DWORD PTR [ebp-0x34]
 807fb79:  lea esp, [ebp-0xc]
 807fb7c:  pop ebx
 807fb7d:  pop esi
 807fb7e:  pop edi
 807fb7f:  pop ebp
 807fb80:  ret 0x4
 807fb83:  cmp BYTE PTR [ecx+0x1], 0x2f
 807fb87:  jne 807f90a
 807fb8d:  cmp BYTE PTR [ecx+0x2], 0x0
 807fb91:  jne 807f90a
 807fb97:  mov edx, 0xffffffd8
 807fb9d:  mov eax, gs:0x0
 807fba3:  mov eax, DWORD PTR [eax+edx]
 807fba6:  mov eax, DWORD PTR [eax]
 807fba8:  mov esi, DWORD PTR [eax+0x5c]
 807fbab:  mov DWORD PTR [esp], esi
 807fbae:  call 804eea0
 807fbb3:  lea edx, [eax+0x15]
 807fbb6:  and edx, 0xfc
 807fbb9:  sub esp, edx
 807fbbb:  lea ebx, [esp+0x1b]
 807fbbf:  and ebx, 0xf0
 807fbc2:  mov DWORD PTR [esp+0x8], eax
 807fbc6:  mov DWORD PTR [esp+0x4], esi
 807fbca:  mov DWORD PTR [esp], ebx
 807fbcd:  call 806c310
 807fbd2:  mov WORD PTR [eax], 0x2f2f
 807fbd7:  mov BYTE PTR [eax+0x2], 0x0
 807fbdb:  movzx edx, BYTE PTR ds:0x80b5670
 807fbe2:  mov DWORD PTR [ebp-0x40], ebx
 807fbe5:  jmp 807f90a
 807fbea:  mov eax, edx
 807fbec:  sub eax, DWORD PTR [ebp-0x44]
 807fbef:  lea edx, [eax+0x13]
 807fbf2:  and edx, 0xfc
 807fbf5:  sub esp, edx
 807fbf7:  lea edx, [esp+0x1b]
 807fbfb:  and edx, 0xf0
 807fbfe:  mov BYTE PTR [edx+eax], 0x0
 807fc02:  mov DWORD PTR [esp+0x8], eax
 807fc06:  mov eax, DWORD PTR [ebp-0x44]
 807fc09:  mov DWORD PTR [esp], edx
 807fc0c:  mov DWORD PTR [esp+0x4], eax
 807fc10:  call 804efc0
 807fc15:  mov DWORD PTR [ebp-0x44], eax
 807fc18:  jmp 807f8f3
 807fc1d:  mov edx, ebx
 807fc1f:  sub edx, DWORD PTR [ebp-0x40]
 807fc22:  lea eax, [edx+0x13]
 807fc25:  and eax, 0xfc
 807fc28:  sub esp, eax
 807fc2a:  lea eax, [esp+0x1b]
 807fc2e:  and eax, 0xf0
 807fc31:  mov BYTE PTR [eax+edx], 0x0
 807fc35:  mov DWORD PTR [esp+0x8], edx
 807fc39:  mov edx, DWORD PTR [ebp-0x40]
 807fc3c:  mov DWORD PTR [esp], eax
 807fc3f:  mov DWORD PTR [esp+0x4], edx
 807fc43:  call 804efc0
 807fc48:  mov DWORD PTR [esp], ebx
 807fc4b:  mov DWORD PTR [ebp-0x40], eax
 807fc4e:  call 804eea0
 807fc53:  lea edx, [eax+0x1]
 807fc56:  add eax, 0x13
 807fc59:  and eax, 0xfc
 807fc5c:  sub esp, eax
 807fc5e:  lea eax, [esp+0x1b]
 807fc62:  and eax, 0xf0
 807fc65:  mov DWORD PTR [esp+0x8], edx
 807fc69:  mov DWORD PTR [esp+0x4], ebx
 807fc6d:  mov DWORD PTR [esp], eax
 807fc70:  call 804efc0
 807fc75:  movzx edx, BYTE PTR [eax]
 807fc78:  cmp dl, 0x2c
 807fc7b:  jne 807fc8b
 807fc7d:  lea esi, [esi]
 807fc80:  add eax, 0x1
 807fc83:  movzx edx, BYTE PTR [eax]
 807fc86:  cmp dl, 0x2c
 807fc89:  je 807fc80
 807fc8b:  test dl, dl
 807fc8d:  mov esi, eax
 807fc8f:  lea ecx, [eax+0x1]
 807fc92:  jne 807fc9b
 807fc94:  jmp 807f8aa
 807fc99:  mov ecx, ebx
 807fc9b:  movzx edx, BYTE PTR [ecx]
 807fc9e:  test dl, dl
 807fca0:  je 807fcaf
 807fca2:  cmp dl, 0x2c
 807fca5:  lea ebx, [ecx+0x1]
 807fca8:  jne 807fc99
 807fcaa:  mov BYTE PTR [ecx], 0x0
 807fcad:  mov ecx, ebx
 807fcaf:  test eax, eax
 807fcb1:  je 807f8aa
 807fcb7:  mov edi, ecx
 807fcb9:  mov DWORD PTR [ebp-0x30], 0x0
 807fcc0:  mov DWORD PTR [ebp-0x2c], 0x0
 807fcc7:  mov DWORD PTR [esp+0x8], 0x80b03e0
 807fccf:  mov DWORD PTR [esp+0x4], 0x80b1e09
 807fcd7:  mov DWORD PTR [esp], esi
 807fcda:  call 8094210
 807fcdf:  test eax, eax
 807fce1:  jne 807fe6c
 807fce7:  mov eax, DWORD PTR [ebp-0x2c]
 807fcea:  test eax, eax
 807fcec:  je 807fef1
 807fcf2:  mov edx, DWORD PTR [ebp-0x2c]
 807fcf5:  cmp DWORD PTR [edx+0x10], 0x8087c40
 807fcfc:  jne 807fd0b
 807fcfe:  jmp 807fd45
 807fd00:  cmp DWORD PTR [eax+0x10], 0x8087c40
 807fd07:  je 807fd45
 807fd09:  mov edx, eax
 807fd0b:  mov eax, DWORD PTR [edx+0x4]
 807fd0e:  test eax, eax
 807fd10:  jne 807fd00
 807fd12:  sub esp, 0x30
 807fd15:  xor ecx, ecx
 807fd17:  lea eax, [esp+0x1b]
 807fd1b:  and eax, 0xf0
 807fd1e:  mov DWORD PTR [eax+ecx], 0x0
 807fd25:  add ecx, 0x4
 807fd28:  cmp ecx, 0x20
 807fd2b:  jb 807fd1e
 807fd2d:  mov DWORD PTR [eax+0x8], 0x80b5424
 807fd34:  mov DWORD PTR [eax+0xc], 0x1
 807fd3b:  mov DWORD PTR [eax+0x10], 0x8087c40
 807fd42:  mov DWORD PTR [edx+0x4], eax
 807fd45:  movzx edx, BYTE PTR [edi]
 807fd48:  mov eax, edi
 807fd4a:  mov esi, edi
 807fd4c:  cmp dl, 0x2c
 807fd4f:  jne 807fd65
 807fd51:  lea esi, [esi]
 807fd58:  add eax, 0x1
 807fd5b:  movzx edx, BYTE PTR [eax]
 807fd5e:  cmp dl, 0x2c
 807fd61:  je 807fd58
 807fd63:  mov esi, eax
 807fd65:  test dl, dl
 807fd67:  je 807f8b8
 807fd6d:  lea edx, [eax+0x1]
 807fd70:  jmp 807fd7a
 807fd72:  lea esi, [esi]
 807fd78:  mov edx, ecx
 807fd7a:  movzx eax, BYTE PTR [edx]
 807fd7d:  test al, al
 807fd7f:  je 807fd8d
 807fd81:  cmp al, 0x2c
 807fd83:  lea ecx, [edx+0x1]
 807fd86:  jne 807fd78
 807fd88:  mov BYTE PTR [edx], 0x0
 807fd8b:  mov edx, ecx
 807fd8d:  test esi, esi
 807fd8f:  mov edi, edx
 807fd91:  jne 807fcc7
 807fd97:  jmp 807f8b8
 807fd9c:  lea esi, [esi]
 807fda0:  mov ecx, DWORD PTR gs:0x0
 807fda7:  mov eax, 0xffffffe8
 807fdac:  mov DWORD PTR [ebp-0x50], ecx
 807fdaf:  mov edx, DWORD PTR [ecx+eax]
 807fdb2:  mov DWORD PTR [ebp-0x54], eax
 807fdb5:  mov DWORD PTR [ebp-0x24], edx
 807fdb8:  mov edx, DWORD PTR [ebp-0x1c]
 807fdbb:  test edx, edx
 807fdbd:  je 807fe13
 807fdbf:  mov ecx, DWORD PTR [ebp-0x1c]
 807fdc2:  mov edx, DWORD PTR [ebp-0x4c]
 807fdc5:  sub ecx, 0x1
 807fdc8:  lea eax, [ecx+ecx*8]
 807fdcb:  mov DWORD PTR [ebp-0x38], ecx
 807fdce:  lea edi, [edx+eax*4+0x28]
 807fdd2:  lea esi, [esi]
 807fdd8:  mov ebx, DWORD PTR [edi]
 807fdda:  test ebx, ebx
 807fddc:  jne 807fde2
 807fdde:  jmp 807fdf8
 807fde0:  mov ebx, esi
 807fde2:  mov edx, DWORD PTR [ebx+0x8]
 807fde5:  mov esi, DWORD PTR [ebx+0x10]
 807fde8:  test edx, edx
 807fdea:  jne 807fe48
 807fdec:  mov DWORD PTR [esp], ebx
 807fdef:  call 804b4a0
 807fdf4:  test esi, esi
 807fdf6:  jne 807fde0
 807fdf8:  mov eax, DWORD PTR [edi-0x20]
 807fdfb:  sub edi, 0x24
 807fdfe:  mov DWORD PTR [esp], eax
 807fe01:  call 804b4a0
 807fe06:  mov eax, DWORD PTR [ebp-0x38]
 807fe09:  test eax, eax
 807fe0b:  je 807fe13
 807fe0d:  sub DWORD PTR [ebp-0x38], 0x1
 807fe11:  jmp 807fdd8
 807fe13:  mov ecx, DWORD PTR [ebp-0x4c]
 807fe16:  mov DWORD PTR [esp], ecx
 807fe19:  call 804b4a0
 807fe1e:  mov edx, DWORD PTR [ebp-0x14]
 807fe21:  mov eax, DWORD PTR [ebp-0x10]
 807fe24:  call 8080460
 807fe29:  mov ecx, DWORD PTR [ebp-0x24]
 807fe2c:  mov edx, DWORD PTR [ebp-0x50]
 807fe2f:  mov eax, DWORD PTR [ebp-0x54]
 807fe32:  mov DWORD PTR [ebp-0x3c], 0x0
 807fe39:  mov DWORD PTR [ebp-0x34], 0x3
 807fe40:  mov DWORD PTR [edx+eax], ecx
 807fe43:  jmp 807fb6e
 807fe48:  mov eax, DWORD PTR [ebx+0xc]
 807fe4b:  mov DWORD PTR [esp], eax
 807fe4e:  call edx
 807fe50:  jmp 807fdec
 807fe52:  mov ecx, DWORD PTR gs:0x0
 807fe59:  mov eax, 0xffffffe8
 807fe5e:  mov DWORD PTR [ebp-0x50], ecx
 807fe61:  mov edx, DWORD PTR [ecx+eax]
 807fe64:  mov DWORD PTR [ebp-0x54], eax
 807fe67:  mov DWORD PTR [ebp-0x24], edx
 807fe6a:  jmp 807fe1e
 807fe6c:  mov DWORD PTR [esp+0x8], 0x80b03e0
 807fe74:  mov DWORD PTR [esp+0x4], 0x80b541a
 807fe7c:  mov DWORD PTR [esp], esi
 807fe7f:  call 8094210
 807fe84:  test eax, eax
 807fe86:  je 807fee8
 807fe88:  mov ebx, DWORD PTR [ebp-0x2c]
 807fe8b:  test ebx, ebx
 807fe8d:  jne 807fe9a
 807fe8f:  nop
 807fe90:  jmp 807ff29
 807fe95:  lea esi, [esi]
 807fe98:  mov ebx, eax
 807fe9a:  mov eax, DWORD PTR [ebx]
 807fe9c:  test eax, eax
 807fe9e:  je 807febc
 807fea0:  mov DWORD PTR [esp+0x8], 0x80b03e0
 807fea8:  mov DWORD PTR [esp+0x4], eax
 807feac:  mov DWORD PTR [esp], esi
 807feaf:  call 8094210
 807feb4:  test eax, eax
 807feb6:  je 807fd45
 807febc:  mov eax, DWORD PTR [ebx+0x4]
 807febf:  test eax, eax
 807fec1:  jne 807fe98
 807fec3:  sub esp, 0x30
 807fec6:  xor eax, eax
 807fec8:  lea edx, [esp+0x1b]
 807fecc:  and edx, 0xf0
 807fecf:  mov DWORD PTR [edx+eax], 0x0
 807fed6:  add eax, 0x4
 807fed9:  cmp eax, 0x20
 807fedc:  jb 807fecf
 807fede:  mov DWORD PTR [edx], esi
 807fee0:  mov DWORD PTR [ebx+0x4], edx
 807fee3:  jmp 807fd45
 807fee8:  or DWORD PTR [ebp-0x30], 0x2
 807feec:  jmp 807fd45
 807fef1:  sub esp, 0x30
 807fef4:  xor edx, edx
 807fef6:  lea eax, [esp+0x1b]
 807fefa:  and eax, 0xf0
 807fefd:  mov DWORD PTR [eax+edx], 0x0
 807ff04:  add edx, 0x4
 807ff07:  cmp edx, 0x20
 807ff0a:  jb 807fefd
 807ff0c:  mov DWORD PTR [eax+0x8], 0x80b5424
 807ff13:  mov DWORD PTR [eax+0xc], 0x1
 807ff1a:  mov DWORD PTR [eax+0x10], 0x8087c40
 807ff21:  mov DWORD PTR [ebp-0x2c], eax
 807ff24:  jmp 807fd45
 807ff29:  sub esp, 0x30
 807ff2c:  xor eax, eax
 807ff2e:  lea edx, [esp+0x1b]
 807ff32:  and edx, 0xf0
 807ff35:  mov DWORD PTR [edx+eax], 0x0
 807ff3c:  add eax, 0x4
 807ff3f:  cmp eax, 0x20
 807ff42:  jb 807ff35
 807ff44:  mov DWORD PTR [edx], esi
 807ff46:  mov DWORD PTR [ebp-0x2c], edx
 807ff49:  jmp 807fd45
 807ff4e:  mov edx, DWORD PTR [ebp-0x1c]
 807ff51:  or DWORD PTR [ebp-0x30], 0x1
 807ff55:  mov ecx, DWORD PTR [ebp-0x4c]
 807ff58:  lea eax, [edx+edx*8]
 807ff5b:  mov edx, DWORD PTR [ebp-0x30]
 807ff5e:  mov DWORD PTR [ecx+eax*4+0x10], edx
 807ff62:  jmp 807fb6e
 807ff67:  test esi, esi
 807ff69:  je 807ff79
 807ff6b:  mov eax, DWORD PTR [ebx+0x4]
 807ff6e:  mov DWORD PTR [esi+0x4], eax
 807ff71:  mov eax, DWORD PTR [ebx+0x4]
 807ff74:  jmp 807f9ba
 807ff79:  mov ebx, DWORD PTR [ebx+0x4]
 807ff7c:  mov DWORD PTR [ebp-0x2c], ebx
 807ff7f:  mov eax, ebx
 807ff81:  jmp 807f9ba
 807ff86:  nop
 807ff87:  nop
 807ff88:  nop
 807ff89:  nop
 807ff8a:  nop
 807ff8b:  nop
 807ff8c:  nop
 807ff8d:  nop
 807ff8e:  nop
 807ff8f:  nop

0807ff90 <__gconv>:
 807ff90:  push ebp
 807ff91:  mov ebp, esp
 807ff93:  push edi
 807ff94:  push esi
 807ff95:  mov esi, eax
 807ff97:  push ebx
 807ff98:  sub esp, 0x30
 807ff9b:  cmp eax, 0xff
 807ff9e:  mov DWORD PTR [ebp-0x1c], ecx
 807ffa1:  mov ecx, 0x8
 807ffa6:  mov DWORD PTR [ebp-0x18], edx
 807ffa9:  je 80800b3
 807ffaf:  mov ebx, DWORD PTR [ebp+0x10]
 807ffb2:  mov eax, DWORD PTR [eax]
 807ffb4:  test ebx, ebx
 807ffb6:  je 808016c
 807ffbc:  mov edx, DWORD PTR [ebp+0x10]
 807ffbf:  mov ecx, DWORD PTR [ebp+0x8]
 807ffc2:  mov DWORD PTR [edx], 0x0
 807ffc8:  xor edx, edx
 807ffca:  test ecx, ecx
 807ffcc:  je 807ffd3
 807ffce:  mov ecx, DWORD PTR [ebp+0x8]
 807ffd1:  mov edx, DWORD PTR [ecx]
 807ffd3:  mov ebx, DWORD PTR [ebp+0xc]
 807ffd6:  sub eax, 0x1
 807ffd9:  mov DWORD PTR [ebp-0x10], eax
 807ffdc:  lea eax, [eax+eax*8]
 807ffdf:  lea eax, [esi+eax*4]
 807ffe2:  mov DWORD PTR [eax+0x8], edx
 807ffe5:  mov DWORD PTR [eax+0xc], ebx
 807ffe8:  mov eax, DWORD PTR [esi+0x4]
 807ffeb:  mov edi, DWORD PTR [eax+0x14]
 807ffee:  mov eax, DWORD PTR [eax]
 807fff0:  test eax, eax
 807fff2:  je 807fffe
 807fff4:  ror edi, 0x9
 807fff7:  xor edi, DWORD PTR gs:0x18
 807fffe:  mov eax, DWORD PTR [ebp-0x18]
 8080001:  test eax, eax
 8080003:  je 80800c0
 8080009:  mov eax, DWORD PTR [ebp-0x18]
 808000c:  mov ebx, DWORD PTR [eax]
 808000e:  test ebx, ebx
 8080010:  je 80800c0
 8080016:  mov eax, DWORD PTR [ebp+0x8]
 8080019:  test eax, eax
 808001b:  je 8080148
 8080021:  mov eax, DWORD PTR [ebp+0x8]
 8080024:  mov eax, DWORD PTR [eax]
 8080026:  test eax, eax
 8080028:  je 8080148
 808002e:  lea edx, [esi+0x8]
 8080031:  mov DWORD PTR [ebp-0x14], edx
 8080034:  jmp 808003a
 8080036:  xchg ax, ax
 8080038:  mov ebx, edx
 808003a:  mov DWORD PTR [esp], edi
 808003d:  call 807f350
 8080042:  mov ecx, DWORD PTR [ebp+0x10]
 8080045:  mov eax, DWORD PTR [ebp-0x1c]
 8080048:  mov edx, DWORD PTR [ebp-0x18]
 808004b:  mov DWORD PTR [esp+0x1c], 0x0
 8080053:  mov DWORD PTR [esp+0x14], ecx
 8080057:  mov ecx, DWORD PTR [ebp-0x14]
 808005a:  mov DWORD PTR [esp+0xc], eax
 808005e:  mov eax, DWORD PTR [esi+0x4]
 8080061:  mov DWORD PTR [esp+0x18], 0x0
 8080069:  mov DWORD PTR [esp+0x10], 0x0
 8080071:  mov DWORD PTR [esp+0x4], ecx
 8080075:  mov DWORD PTR [esp+0x8], edx
 8080079:  mov DWORD PTR [esp], eax
 808007c:  call edi
 808007e:  cmp eax, 0x4
 8080081:  mov ecx, eax
 8080083:  jne 808009c
 8080085:  mov eax, DWORD PTR [ebp-0x18]
 8080088:  mov edx, DWORD PTR [eax]
 808008a:  cmp ebx, edx
 808008c:  je 808009c
 808008e:  mov eax, DWORD PTR [esi+0x4]
 8080091:  mov ebx, DWORD PTR [eax+0x24]
 8080094:  lea eax, [edx+ebx]
 8080097:  cmp DWORD PTR [ebp-0x1c], eax
 808009a:  jae 8080038
 808009c:  mov eax, DWORD PTR [ebp+0x8]
 808009f:  mov edx, DWORD PTR [eax]
 80800a1:  test edx, edx
 80800a3:  je 80800b3
 80800a5:  mov edx, DWORD PTR [ebp-0x10]
 80800a8:  mov ebx, eax
 80800aa:  lea eax, [edx+edx*8]
 80800ad:  mov eax, DWORD PTR [esi+eax*4+0x8]
 80800b1:  mov DWORD PTR [ebx], eax
 80800b3:  add esp, 0x30
 80800b6:  mov eax, ecx
 80800b8:  pop ebx
 80800b9:  pop esi
 80800ba:  pop edi
 80800bb:  pop ebp
 80800bc:  ret 0xc
 80800bf:  nop
 80800c0:  mov DWORD PTR [esp], edi
 80800c3:  call 807f350
 80800c8:  mov edx, DWORD PTR [ebp-0x10]
 80800cb:  mov ecx, DWORD PTR [ebp+0x10]
 80800ce:  lea eax, [edx+edx*8]
 80800d1:  lea eax, [esi+eax*4]
 80800d4:  cmp DWORD PTR [eax+0x8], 0x1
 80800d8:  mov DWORD PTR [esp+0x14], ecx
 80800dc:  mov DWORD PTR [esp+0x1c], 0x0
 80800e4:  sbb eax, eax
 80800e6:  not eax
 80800e8:  add eax, 0x2
 80800eb:  mov DWORD PTR [esp+0x18], eax
 80800ef:  lea eax, [esi+0x8]
 80800f2:  mov DWORD PTR [esp+0x4], eax
 80800f6:  mov eax, DWORD PTR [esi+0x4]
 80800f9:  mov DWORD PTR [esp+0x10], 0x0
 8080101:  mov DWORD PTR [esp+0xc], 0x0
 8080109:  mov DWORD PTR [esp+0x8], 0x0
 8080111:  mov DWORD PTR [esp], eax
 8080114:  call edi
 8080116:  test eax, eax
 8080118:  mov ecx, eax
 808011a:  jne 8080133
 808011c:  xor edx, edx
 808011e:  xor eax, eax
 8080120:  mov DWORD PTR [esi+eax+0x14], 0x0
 8080128:  add edx, 0x1
 808012b:  add eax, 0x24
 808012e:  cmp DWORD PTR [ebp-0x10], edx
 8080131:  jae 8080120
 8080133:  mov ebx, DWORD PTR [ebp+0x8]
 8080136:  test ebx, ebx
 8080138:  je 80800b3
 808013e:  jmp 808009c
 8080143:  nop
 8080144:  lea esi, [esi]
 8080148:  mov DWORD PTR [esp+0xc], 0x80b544c
 8080150:  mov DWORD PTR [esp+0x8], 0x4b
 8080158:  mov DWORD PTR [esp+0x4], 0x80b5428
 8080160:  mov DWORD PTR [esp], 0x80b5454
 8080167:  call 8051490
 808016c:  mov DWORD PTR [esp+0xc], 0x80b544c
 8080174:  mov DWORD PTR [esp+0x8], 0x2d
 808017c:  mov DWORD PTR [esp+0x4], 0x80b5428
 8080184:  mov DWORD PTR [esp], 0x80b5430
 808018b:  call 8051490

08080190 <__gconv_close>:
 8080190:  push ebp
 8080191:  mov ebp, esp
 8080193:  push edi
 8080194:  push esi
 8080195:  push ebx
 8080196:  sub esp, 0x10
 8080199:  mov DWORD PTR [ebp-0x18], eax
 808019c:  mov eax, DWORD PTR [eax+0x4]
 808019f:  mov edi, DWORD PTR [ebp-0x18]
 80801a2:  mov DWORD PTR [ebp-0x14], eax
 80801a5:  mov eax, DWORD PTR [ebp-0x18]
 80801a8:  add edi, 0x2c
 80801ab:  mov eax, DWORD PTR [eax]
 80801ad:  mov DWORD PTR [ebp-0x10], eax
 80801b0:  mov ebx, DWORD PTR [edi-0x4]
 80801b3:  test ebx, ebx
 80801b5:  jne 80801c2
 80801b7:  jmp 80801d8
 80801b9:  lea esi, [esi]
 80801c0:  mov ebx, esi
 80801c2:  mov edx, DWORD PTR [ebx+0x8]
 80801c5:  mov esi, DWORD PTR [ebx+0x10]
 80801c8:  test edx, edx
 80801ca:  jne 808021a
 80801cc:  mov DWORD PTR [esp], ebx
 80801cf:  call 804b4a0
 80801d4:  test esi, esi
 80801d6:  jne 80801c0
 80801d8:  test BYTE PTR [edi-0x1c], 0x1
 80801dc:  lea esi, [esi]
 80801e0:  je 8080200
 80801e2:  mov eax, DWORD PTR [ebp-0x18]
 80801e5:  mov DWORD PTR [esp], eax
 80801e8:  call 804b4a0
 80801ed:  mov edx, DWORD PTR [ebp-0x10]
 80801f0:  mov eax, DWORD PTR [ebp-0x14]
 80801f3:  add esp, 0x10
 80801f6:  pop ebx
 80801f7:  pop esi
 80801f8:  pop edi
 80801f9:  pop ebp
 80801fa:  jmp 8080460
 80801ff:  nop
 8080200:  mov eax, DWORD PTR [edi-0x24]
 8080203:  test eax, eax
 8080205:  je 8080215
 8080207:  mov DWORD PTR [esp], eax
 808020a:  call 804b4a0
 808020f:  test BYTE PTR [edi-0x1c], 0x1
 8080213:  jne 80801e2
 8080215:  add edi, 0x24
 8080218:  jmp 80801b0
 808021a:  mov eax, DWORD PTR [ebx+0xc]
 808021d:  mov DWORD PTR [esp], eax
 8080220:  call edx
 8080222:  lea esi, [esi]
 8080228:  jmp 80801cc
 808022a:  nop
 808022b:  nop
 808022c:  nop
 808022d:  nop
 808022e:  nop
 808022f:  nop

08080230 <__gconv_get_modules_db>:
 8080230:  push ebp
 8080231:  mov eax, ds:0x80d2ed0
 8080236:  mov ebp, esp
 8080238:  pop ebp
 8080239:  ret
 808023a:  lea esi, [esi]

08080240 <__gconv_get_alias_db>:
 8080240:  push ebp
 8080241:  mov eax, ds:0x80d2ed8
 8080246:  mov ebp, esp
 8080248:  pop ebp
 8080249:  ret
 808024a:  lea esi, [esi]

08080250 <derivation_compare>:
 8080250:  push ebp
 8080251:  mov ebp, esp
 8080253:  sub esp, 0x10
 8080256:  mov DWORD PTR [ebp-0x8], ebx
 8080259:  mov ebx, DWORD PTR [ebp+0xc]
 808025c:  mov DWORD PTR [ebp-0x4], esi
 808025f:  mov esi, DWORD PTR [ebp+0x8]
 8080262:  mov eax, DWORD PTR [ebx]
 8080264:  mov DWORD PTR [esp+0x4], eax
 8080268:  mov eax, DWORD PTR [esi]
 808026a:  mov DWORD PTR [esp], eax
 808026d:  call 806af90
 8080272:  test eax, eax
 8080274:  je 8080280
 8080276:  mov ebx, DWORD PTR [ebp-0x8]
 8080279:  mov esi, DWORD PTR [ebp-0x4]
 808027c:  mov esp, ebp
 808027e:  pop ebp
 808027f:  ret
 8080280:  mov eax, DWORD PTR [ebx+0x4]
 8080283:  mov ebx, DWORD PTR [ebp-0x8]
 8080286:  mov DWORD PTR [ebp+0xc], eax
 8080289:  mov eax, DWORD PTR [esi+0x4]
 808028c:  mov esi, DWORD PTR [ebp-0x4]
 808028f:  mov DWORD PTR [ebp+0x8], eax
 8080292:  mov esp, ebp
 8080294:  pop ebp
 8080295:  jmp 806af90
 808029a:  lea esi, [esi]

080802a0 <__gconv_alias_compare>:
 80802a0:  push ebp
 80802a1:  mov ebp, esp
 80802a3:  mov eax, DWORD PTR [ebp+0xc]
 80802a6:  mov eax, DWORD PTR [eax]
 80802a8:  mov DWORD PTR [ebp+0xc], eax
 80802ab:  mov eax, DWORD PTR [ebp+0x8]
 80802ae:  mov eax, DWORD PTR [eax]
 80802b0:  mov DWORD PTR [ebp+0x8], eax
 80802b3:  pop ebp
 80802b4:  jmp 806af90
 80802b9:  lea esi, [esi]

080802c0 <__gconv_compare_alias>:
 80802c0:  push ebp
 80802c1:  mov ebp, esp
 80802c3:  sub esp, 0x24
 80802c6:  mov DWORD PTR [ebp-0x8], esi
 80802c9:  mov esi, eax
 80802cb:  mov eax, 0x0
 80802d0:  test eax, eax
 80802d2:  mov DWORD PTR [ebp-0xc], ebx
 80802d5:  mov ebx, edx
 80802d7:  mov DWORD PTR [ebp-0x4], edi
 80802da:  je 8080380
 80802e0:  mov DWORD PTR [esp+0x4], 0x8081960
 80802e8:  mov DWORD PTR [esp], 0x80d2a44
 80802ef:  call 0
 80802f4:  lea ecx, [ebp-0x10]
 80802f7:  mov edx, ebx
 80802f9:  mov eax, esi
 80802fb:  call 8088830
 8080300:  test eax, eax
 8080302:  jne 8080318
 8080304:  mov eax, DWORD PTR [ebp-0x10]
 8080307:  mov ebx, DWORD PTR [ebp-0xc]
 808030a:  mov esi, DWORD PTR [ebp-0x8]
 808030d:  mov edi, DWORD PTR [ebp-0x4]
 8080310:  mov esp, ebp
 8080312:  pop ebp
 8080313:  ret
 8080314:  lea esi, [esi]
 8080318:  lea edi, [ebp-0x18]
 808031b:  mov DWORD PTR [ebp-0x18], ebx
 808031e:  mov DWORD PTR [esp+0x8], 0x80802a0
 8080326:  mov DWORD PTR [esp+0x4], 0x80d2ed8
 808032e:  mov DWORD PTR [esp], edi
 8080331:  call 80736f0
 8080336:  test eax, eax
 8080338:  je 8080345
 808033a:  mov eax, DWORD PTR [eax]
 808033c:  mov edx, DWORD PTR [eax+0x4]
 808033f:  test edx, edx
 8080341:  je 8080345
 8080343:  mov ebx, edx
 8080345:  mov DWORD PTR [ebp-0x18], esi
 8080348:  mov DWORD PTR [esp+0x8], 0x80802a0
 8080350:  mov DWORD PTR [esp+0x4], 0x80d2ed8
 8080358:  mov DWORD PTR [esp], edi
 808035b:  call 80736f0
 8080360:  test eax, eax
 8080362:  je 808036f
 8080364:  mov eax, DWORD PTR [eax]
 8080366:  mov eax, DWORD PTR [eax+0x4]
 8080369:  test eax, eax
 808036b:  je 808036f
 808036d:  mov esi, eax
 808036f:  mov DWORD PTR [esp+0x4], ebx
 8080373:  mov DWORD PTR [esp], esi
 8080376:  call 806af90
 808037b:  mov DWORD PTR [ebp-0x10], eax
 808037e:  jmp 8080304
 8080380:  mov ecx, DWORD PTR ds:0x80d2a44
 8080386:  test ecx, ecx
 8080388:  jne 80802f4
 808038e:  call 8081960
 8080393:  or DWORD PTR ds:0x80d2a44, 0x2
 808039a:  jmp 80802f4
 808039f:  nop

080803a0 <__gconv_release_step>:
 80803a0:  push ebp
 80803a1:  mov ebp, esp
 80803a3:  sub esp, 0x18
 80803a6:  mov DWORD PTR [ebp-0x4], esi
 80803a9:  mov esi, eax
 80803ab:  mov DWORD PTR [ebp-0x8], ebx
 80803ae:  mov ecx, DWORD PTR [eax]
 80803b0:  test ecx, ecx
 80803b2:  je 8080408
 80803b4:  mov eax, DWORD PTR [eax+0x8]
 80803b7:  sub eax, 0x1
 80803ba:  test eax, eax
 80803bc:  mov DWORD PTR [esi+0x8], eax
 80803bf:  jne 8080400
 80803c1:  mov eax, DWORD PTR [esi+0x20]
 80803c4:  test eax, eax
 80803c6:  je 80803e7
 80803c8:  mov edx, DWORD PTR [esi]
 80803ca:  test edx, edx
 80803cc:  je 8080433
 80803ce:  mov ebx, eax
 80803d0:  ror ebx, 0x9
 80803d3:  xor ebx, DWORD PTR gs:0x18
 80803da:  mov DWORD PTR [esp], ebx
 80803dd:  call 807f350
 80803e2:  mov DWORD PTR [esp], esi
 80803e5:  call ebx
 80803e7:  mov eax, DWORD PTR [esi]
 80803e9:  call 8088a10
 80803ee:  mov DWORD PTR [esi], 0x0
 80803f4:  mov ebx, DWORD PTR [ebp-0x8]
 80803f7:  mov esi, DWORD PTR [ebp-0x4]
 80803fa:  mov esp, ebp
 80803fc:  pop ebp
 80803fd:  ret
 80803fe:  xchg ax, ax
 8080400:  mov eax, DWORD PTR [esi]
 8080402:  test eax, eax
 8080404:  jne 80803f4
 8080406:  xchg ax, ax
 8080408:  mov ebx, DWORD PTR [esi+0x20]
 808040b:  test ebx, ebx
 808040d:  je 80803f4
 808040f:  mov DWORD PTR [esp+0xc], 0x80b54ab
 8080417:  mov DWORD PTR [esp+0x8], 0xe9
 808041f:  mov DWORD PTR [esp+0x4], 0x80b5484
 8080427:  mov DWORD PTR [esp], 0x80b5514
 808042e:  call 8051490
 8080433:  mov DWORD PTR [esp+0xc], 0x80b54ab
 808043b:  mov DWORD PTR [esp+0x8], 0xd8
 8080443:  mov DWORD PTR [esp+0x4], 0x80b5484
 808044b:  mov DWORD PTR [esp], 0x80b54f0
 8080452:  call 8051490
 8080457:  mov esi, esi
 8080459:  lea edi, [edi]

08080460 <__gconv_close_transform>:
 8080460:  push ebp
 8080461:  mov ecx, 0x1
 8080466:  mov ebp, esp
 8080468:  push edi
 8080469:  push esi
 808046a:  push ebx
 808046b:  sub esp, 0x18
 808046e:  mov DWORD PTR [ebp-0x10], eax
 8080471:  xor eax, eax
 8080473:  mov DWORD PTR [ebp-0x14], edx
 8080476:  cmp DWORD PTR gs:0xc, 0x0
 808047e:  je 8080481
 8080480:  cmpxchg DWORD PTR ds:0x80d2ed4, ecx
 8080488:  jne 80811d3
 808048e:  imul eax, edx, 0x3c
 8080491:  mov edx, DWORD PTR [ebp-0x10]
 8080494:  mov edi, DWORD PTR [ebp-0x14]
 8080497:  lea esi, [edx+eax-0x3c]
 808049b:  jmp 80804da
 808049d:  lea esi, [esi]
 80804a0:  mov eax, DWORD PTR [esi+0x20]
 80804a3:  test eax, eax
 80804a5:  je 80804ca
 80804a7:  mov edx, DWORD PTR [esi]
 80804a9:  test edx, edx
 80804ab:  je 808055d
 80804b1:  mov ebx, eax
 80804b3:  ror ebx, 0x9
 80804b6:  xor ebx, DWORD PTR gs:0x18
 80804bd:  mov DWORD PTR [esp], ebx
 80804c0:  call 807f350
 80804c5:  mov DWORD PTR [esp], esi
 80804c8:  call ebx
 80804ca:  mov eax, DWORD PTR [esi]
 80804cc:  call 8088a10
 80804d1:  mov DWORD PTR [esi], 0x0
 80804d7:  sub esi, 0x3c
 80804da:  test edi, edi
 80804dc:  je 8080530
 80804de:  mov ecx, DWORD PTR [esi]
 80804e0:  sub edi, 0x1
 80804e3:  test ecx, ecx
 80804e5:  je 8080500
 80804e7:  mov eax, DWORD PTR [esi+0x8]
 80804ea:  sub eax, 0x1
 80804ed:  test eax, eax
 80804ef:  mov DWORD PTR [esi+0x8], eax
 80804f2:  je 80804a0
 80804f4:  mov eax, DWORD PTR [esi]
 80804f6:  test eax, eax
 80804f8:  jne 80804d7
 80804fa:  lea esi, [esi]
 8080500:  mov ebx, DWORD PTR [esi+0x20]
 8080503:  test ebx, ebx
 8080505:  je 80804d7
 8080507:  mov DWORD PTR [esp+0xc], 0x80b54ab
 808050f:  mov DWORD PTR [esp+0x8], 0xe9
 8080517:  mov DWORD PTR [esp+0x4], 0x80b5484
 808051f:  mov DWORD PTR [esp], 0x80b5514
 8080526:  call 8051490
 808052b:  nop
 808052c:  lea esi, [esi]
 8080530:  mov edx, DWORD PTR [ebp-0x14]
 8080533:  mov eax, DWORD PTR [ebp-0x10]
 8080536:  call 8088050
 808053b:  cmp DWORD PTR gs:0xc, 0x0
 8080543:  je 8080546
 8080545:  sub DWORD PTR ds:0x80d2ed4, 0x1
 808054d:  jne 80811e3
 8080553:  xor eax, eax
 8080555:  add esp, 0x18
 8080558:  pop ebx
 8080559:  pop esi
 808055a:  pop edi
 808055b:  pop ebp
 808055c:  ret
 808055d:  mov DWORD PTR [esp+0xc], 0x80b54ab
 8080565:  mov DWORD PTR [esp+0x8], 0xd8
 808056d:  mov DWORD PTR [esp+0x4], 0x80b5484
 8080575:  mov DWORD PTR [esp], 0x80b54f0
 808057c:  call 8051490
 8080581:  jmp 8080590
 8080583:  nop
 8080584:  nop
 8080585:  nop
 8080586:  nop
 8080587:  nop
 8080588:  nop
 8080589:  nop
 808058a:  nop
 808058b:  nop
 808058c:  nop
 808058d:  nop
 808058e:  nop
 808058f:  nop

08080590 <find_derivation>:
 8080590:  push ebp
 8080591:  mov ebp, esp
 8080593:  push edi
 8080594:  push esi
 8080595:  push ebx
 8080596:  sub esp, 0x78
 8080599:  test edx, edx
 808059b:  mov DWORD PTR [ebp-0x60], eax
 808059e:  mov DWORD PTR [ebp-0x64], edx
 80805a1:  mov DWORD PTR [ebp-0x68], ecx
 80805a4:  je 8080d35
 80805aa:  mov eax, DWORD PTR [ebp+0x8]
 80805ad:  test eax, eax
 80805af:  je 8080d42
 80805b5:  mov DWORD PTR [ebp-0x1c], eax
 80805b8:  lea eax, [ebp-0x1c]
 80805bb:  mov DWORD PTR [ebp-0x18], edx
 80805be:  mov DWORD PTR [ebp-0x14], 0x0
 80805c5:  mov DWORD PTR [ebp-0x10], 0x0
 80805cc:  mov DWORD PTR [esp+0x8], 0x8080250
 80805d4:  mov DWORD PTR [esp+0x4], 0x80d2a40
 80805dc:  mov DWORD PTR [esp], eax
 80805df:  call 80736f0
 80805e4:  test eax, eax
 80805e6:  je 80806b5
 80805ec:  mov eax, DWORD PTR [eax]
 80805ee:  mov ecx, DWORD PTR [ebp+0xc]
 80805f1:  mov edx, DWORD PTR [eax+0x8]
 80805f4:  mov eax, DWORD PTR [eax+0xc]
 80805f7:  mov DWORD PTR [ebp-0x6c], edx
 80805fa:  mov DWORD PTR [ecx], edx
 80805fc:  mov edx, DWORD PTR [ebp+0x10]
 80805ff:  mov DWORD PTR [ebp-0x38], eax
 8080602:  mov ecx, DWORD PTR [ebp-0x6c]
 8080605:  mov edi, DWORD PTR [ebp-0x38]
 8080608:  mov DWORD PTR [edx], eax
 808060a:  imul eax, eax, 0x3c
 808060d:  lea ebx, [ecx+eax-0x34]
 8080611:  jmp 8080699
 8080616:  xchg ax, ax
 8080618:  mov edx, DWORD PTR [ebx]
 808061a:  lea eax, [ebx-0x8]
 808061d:  sub edi, 0x1
 8080620:  mov DWORD PTR [ebp-0x20], eax
 8080623:  test edx, edx
 8080625:  lea eax, [edx+0x1]
 8080628:  mov DWORD PTR [ebx], eax
 808062a:  jne 8080696
 808062c:  mov eax, DWORD PTR [ebx-0x4]
 808062f:  test eax, eax
 8080631:  je 808065e
 8080633:  call 8088ae0
 8080638:  test eax, eax
 808063a:  mov edx, eax
 808063c:  mov DWORD PTR [ebx-0x8], eax
 808063f:  je 8080d4d
 8080645:  mov eax, DWORD PTR [eax+0xc]
 8080648:  mov DWORD PTR [ebx+0x10], 0x0
 808064f:  mov DWORD PTR [ebx+0xc], eax
 8080652:  mov eax, DWORD PTR [edx+0x10]
 8080655:  mov DWORD PTR [ebx+0x14], eax
 8080658:  mov eax, DWORD PTR [edx+0x14]
 808065b:  mov DWORD PTR [ebx+0x18], eax
 808065e:  mov esi, DWORD PTR [ebx+0x14]
 8080661:  test esi, esi
 8080663:  je 8080696
 8080665:  ror esi, 0x9
 8080668:  xor esi, DWORD PTR gs:0x18
 808066f:  mov DWORD PTR [esp], esi
 8080672:  call 807f350
 8080677:  mov ecx, DWORD PTR [ebp-0x20]
 808067a:  mov DWORD PTR [esp], ecx
 808067d:  call esi
 808067f:  mov eax, DWORD PTR [ebx+0x10]
 8080682:  test eax, eax
 8080684:  je 8080696
 8080686:  mov edx, DWORD PTR [ebp-0x20]
 8080689:  xor eax, DWORD PTR gs:0x18
 8080690:  rol eax, 0x9
 8080693:  mov DWORD PTR [edx+0x18], eax
 8080696:  sub ebx, 0x3c
 8080699:  test edi, edi
 808069b:  jne 8080618
 80806a1:  mov DWORD PTR [ebp-0x44], 0x0
 80806a8:  mov eax, DWORD PTR [ebp-0x44]
 80806ab:  lea esp, [ebp-0xc]
 80806ae:  pop ebx
 80806af:  pop esi
 80806b0:  pop edi
 80806b1:  pop ebp
 80806b2:  ret 0xc
 80806b5:  mov ebx, DWORD PTR [ebp+0x8]
 80806b8:  test ebx, ebx
 80806ba:  je 8080e1a
 80806c0:  mov ecx, DWORD PTR [ebp+0x8]
 80806c3:  sub esp, 0x2c
 80806c6:  lea esi, [esp+0x1f]
 80806ca:  and esi, 0xf0
 80806cd:  mov DWORD PTR [esi], ecx
 80806cf:  mov DWORD PTR [esp], ecx
 80806d2:  call 804eea0
 80806d7:  sub esp, 0x2c
 80806da:  lea ebx, [esp+0x1f]
 80806de:  and ebx, 0xf0
 80806e1:  mov DWORD PTR [esi+0xc], 0x0
 80806e8:  mov DWORD PTR [esi+0x8], 0x0
 80806ef:  mov DWORD PTR [esi+0x10], 0x0
 80806f6:  mov DWORD PTR [esi+0x4], eax
 80806f9:  mov eax, DWORD PTR [ebp-0x68]
 80806fc:  mov DWORD PTR [esi+0x14], 0x0
 8080703:  mov DWORD PTR [esi+0x18], 0x0
 808070a:  mov DWORD PTR [ebx], eax
 808070c:  mov DWORD PTR [esp], eax
 808070f:  call 804eea0
 8080714:  mov DWORD PTR [ebx+0x18], 0x0
 808071b:  mov DWORD PTR [ebx+0xc], 0x0
 8080722:  mov DWORD PTR [ebx+0x8], 0x0
 8080729:  mov DWORD PTR [ebx+0x10], 0x0
 8080730:  mov DWORD PTR [ebx+0x14], 0x0
 8080737:  mov DWORD PTR [ebx+0x4], eax
 808073a:  mov eax, esi
 808073c:  mov DWORD PTR [esi+0x18], ebx
 808073f:  add ebx, 0x18
 8080742:  mov DWORD PTR [ebp-0x54], ebx
 8080745:  mov DWORD PTR [ebp-0x5c], esi
 8080748:  mov DWORD PTR [ebp-0x58], eax
 808074b:  mov edx, eax
 808074d:  mov DWORD PTR [ebp-0x50], 0x0
 8080754:  mov DWORD PTR [ebp-0x4c], 0x7fffffff
 808075b:  mov DWORD PTR [ebp-0x48], 0x7fffffff
 8080762:  lea esi, [esi]
 8080768:  mov edi, DWORD PTR [edx+0xc]
 808076b:  cmp edi, DWORD PTR [ebp-0x4c]
 808076e:  jg 80807c0
 8080770:  cmp DWORD PTR [ebp-0x4c], edi
 8080773:  je 8080a9b
 8080779:  mov ebx, DWORD PTR ds:0x80d2ed0
 808077f:  test ebx, ebx
 8080781:  je 80807c0
 8080783:  mov eax, DWORD PTR [ebp-0x58]
 8080786:  mov esi, DWORD PTR [eax]
 8080788:  jmp 8080797
 808078a:  lea esi, [esi]
 8080790:  mov ebx, DWORD PTR [ebx+0x1c]
 8080793:  test ebx, ebx
 8080795:  je 80807c0
 8080797:  mov eax, DWORD PTR [ebx]
 8080799:  mov DWORD PTR [esp], esi
 808079c:  mov DWORD PTR [esp+0x4], eax
 80807a0:  call 806af90
 80807a5:  cmp eax, 0x0
 80807a8:  je 80807e8
 80807aa:  jge 8080790
 80807ac:  mov ebx, DWORD PTR [ebx+0x14]
 80807af:  test ebx, ebx
 80807b1:  lea esi, [esi]
 80807b8:  jne 8080797
 80807ba:  lea esi, [esi]
 80807c0:  mov edx, DWORD PTR [ebp-0x4c]
 80807c3:  mov eax, DWORD PTR [ebp-0x48]
 80807c6:  mov ecx, DWORD PTR [ebp-0x58]
 80807c9:  mov ecx, DWORD PTR [ecx+0x18]
 80807cc:  test ecx, ecx
 80807ce:  mov DWORD PTR [ebp-0x58], ecx
 80807d1:  je 8080ab5
 80807d7:  mov DWORD PTR [ebp-0x4c], edx
 80807da:  mov edx, DWORD PTR [ebp-0x58]
 80807dd:  mov DWORD PTR [ebp-0x48], eax
 80807e0:  jmp 8080768
 80807e2:  lea esi, [esi]
 80807e8:  mov DWORD PTR [ebp-0x40], ebx
 80807eb:  mov edx, ebx
 80807ed:  jmp 8080848
 80807ef:  nop
 80807f0:  mov eax, DWORD PTR [ebp-0x64]
 80807f3:  test eax, eax
 80807f5:  je 808080e
 80807f7:  mov eax, DWORD PTR [ebp-0x64]
 80807fa:  mov DWORD PTR [esp], esi
 80807fd:  mov DWORD PTR [esp+0x4], eax
 8080801:  call 806af90
 8080806:  test eax, eax
 8080808:  je 8080892
 808080e:  cmp DWORD PTR [ebp-0x4c], edi
 8080811:  jg 8080970
 8080817:  cmp edi, DWORD PTR [ebp-0x4c]
 808081a:  lea esi, [esi]
 8080820:  je 8080962
 8080826:  mov edx, DWORD PTR [ebp-0x4c]
 8080829:  mov eax, DWORD PTR [ebp-0x48]
 808082c:  mov ecx, DWORD PTR [ebp-0x40]
 808082f:  mov ecx, DWORD PTR [ecx+0x18]
 8080832:  test ecx, ecx
 8080834:  mov DWORD PTR [ebp-0x40], ecx
 8080837:  je 80807c6
 8080839:  mov ecx, DWORD PTR [ebp-0x58]
 808083c:  mov DWORD PTR [ebp-0x4c], edx
 808083f:  mov edx, DWORD PTR [ebp-0x40]
 8080842:  mov DWORD PTR [ebp-0x48], eax
 8080845:  mov edi, DWORD PTR [ecx+0xc]
 8080848:  mov esi, DWORD PTR [edx+0x4]
 808084b:  movzx eax, BYTE PTR [esi]
 808084e:  cmp al, BYTE PTR ds:0x80b548f
 8080854:  jne 8080867
 8080856:  cmp BYTE PTR [esi+0x1], 0x0
 808085a:  jne 8080867
 808085c:  mov esi, DWORD PTR [ebp-0x64]
 808085f:  test esi, esi
 8080861:  je 8080aac
 8080867:  mov ecx, DWORD PTR [ebp-0x40]
 808086a:  mov eax, DWORD PTR [ebp-0x58]
 808086d:  mov edx, DWORD PTR [ecx+0xc]
 8080870:  mov eax, DWORD PTR [eax+0x8]
 8080873:  add edi, DWORD PTR [ecx+0x8]
 8080876:  mov ecx, DWORD PTR [ebp-0x60]
 8080879:  add eax, edx
 808087b:  mov DWORD PTR [ebp-0x3c], eax
 808087e:  mov DWORD PTR [esp+0x4], ecx
 8080882:  mov DWORD PTR [esp], esi
 8080885:  call 806af90
 808088a:  test eax, eax
 808088c:  jne 80807f0
 8080892:  mov eax, DWORD PTR [ebp-0x50]
 8080895:  test eax, eax
 8080897:  je 8080928
 808089d:  mov ebx, DWORD PTR [ebp-0x50]
 80808a0:  jmp 80808af
 80808a2:  lea esi, [esi]
 80808a8:  mov ebx, DWORD PTR [ebx+0x18]
 80808ab:  test ebx, ebx
 80808ad:  je 8080928
 80808af:  mov eax, DWORD PTR [ebx]
 80808b1:  mov DWORD PTR [esp], esi
 80808b4:  mov DWORD PTR [esp+0x4], eax
 80808b8:  call 806af90
 80808bd:  test eax, eax
 80808bf:  jne 80808a8
 80808c1:  cmp edi, DWORD PTR [ebx+0xc]
 80808c4:  jl 808090d
 80808c6:  xchg ax, ax
 80808c8:  je 8080905
 80808ca:  cmp DWORD PTR [ebp-0x4c], edi
 80808cd:  mov edx, edi
 80808cf:  mov eax, DWORD PTR [ebp-0x3c]
 80808d2:  lea esi, [esi]
 80808d8:  jg 808082c
 80808de:  cmp edi, DWORD PTR [ebp-0x4c]
 80808e1:  lea esi, [esi]
 80808e8:  jne 8080826
 80808ee:  mov eax, DWORD PTR [ebp-0x3c]
 80808f1:  mov edx, edi
 80808f3:  cmp eax, DWORD PTR [ebp-0x48]
 80808f6:  jl 808082c
 80808fc:  lea esi, [esi]
 8080900:  jmp 8080826
 8080905:  mov edx, DWORD PTR [ebp-0x3c]
 8080908:  cmp edx, DWORD PTR [ebx+0x8]
 808090b:  jge 80808ca
 808090d:  mov ecx, DWORD PTR [ebp-0x40]
 8080910:  mov eax, DWORD PTR [ebp-0x58]
 8080913:  mov edx, DWORD PTR [ebp-0x3c]
 8080916:  mov DWORD PTR [ebx+0xc], edi
 8080919:  mov DWORD PTR [ebx+0x10], ecx
 808091c:  mov DWORD PTR [ebx+0x14], eax
 808091f:  mov DWORD PTR [ebx+0x8], edx
 8080922:  jmp 80808ca
 8080924:  lea esi, [esi]
 8080928:  sub esp, 0x2c
 808092b:  lea ebx, [esp+0x1f]
 808092f:  and ebx, 0xf0
 8080932:  mov DWORD PTR [ebx], esi
 8080934:  mov DWORD PTR [esp], esi
 8080937:  call 804eea0
 808093c:  mov edx, DWORD PTR [ebp-0x3c]
 808093f:  mov ecx, DWORD PTR [ebp-0x40]
 8080942:  mov DWORD PTR [ebx+0xc], edi
 8080945:  mov DWORD PTR [ebx+0x8], edx
 8080948:  mov edx, DWORD PTR [ebp-0x50]
 808094b:  mov DWORD PTR [ebx+0x10], ecx
 808094e:  mov DWORD PTR [ebx+0x4], eax
 8080951:  mov eax, DWORD PTR [ebp-0x58]
 8080954:  mov DWORD PTR [ebp-0x50], ebx
 8080957:  mov DWORD PTR [ebx+0x18], edx
 808095a:  mov DWORD PTR [ebx+0x14], eax
 808095d:  jmp 80808ca
 8080962:  mov ecx, DWORD PTR [ebp-0x48]
 8080965:  cmp DWORD PTR [ebp-0x3c], ecx
 8080968:  jge 8080826
 808096e:  xchg ax, ax
 8080970:  mov ebx, DWORD PTR [ebp-0x5c]
 8080973:  jmp 8080983
 8080975:  lea esi, [esi]
 8080978:  mov ebx, DWORD PTR [ebx+0x18]
 808097b:  test ebx, ebx
 808097d:  je 8080a52
 8080983:  mov eax, DWORD PTR [ebx]
 8080985:  mov DWORD PTR [esp], esi
 8080988:  mov DWORD PTR [esp+0x4], eax
 808098c:  call 806af90
 8080991:  test eax, eax
 8080993:  jne 8080978
 8080995:  cmp edi, DWORD PTR [ebx+0xc]
 8080998:  jl 80809b6
 808099a:  lea esi, [esi]
 80809a0:  jne 8080826
 80809a6:  mov eax, DWORD PTR [ebp-0x3c]
 80809a9:  cmp eax, DWORD PTR [ebx+0x8]
 80809ac:  lea esi, [esi]
 80809b0:  jge 8080826
 80809b6:  mov edx, DWORD PTR [ebp-0x40]
 80809b9:  mov ecx, DWORD PTR [ebp-0x58]
 80809bc:  mov esi, DWORD PTR [ebp-0x5c]
 80809bf:  mov DWORD PTR [ebx+0x10], edx
 80809c2:  mov DWORD PTR [ebx+0x14], ecx
 80809c5:  lea esi, [esi]
 80809c8:  mov eax, DWORD PTR [esi+0x10]
 80809cb:  test eax, eax
 80809cd:  je 80809f6
 80809cf:  mov edx, DWORD PTR [esi+0x14]
 80809d2:  mov ebx, DWORD PTR [eax+0x8]
 80809d5:  mov ecx, DWORD PTR [eax+0xc]
 80809d8:  mov eax, DWORD PTR [edx+0x10]
 80809db:  test eax, eax
 80809dd:  je 80809f0
 80809df:  nop
 80809e0:  mov edx, DWORD PTR [edx+0x14]
 80809e3:  add ebx, DWORD PTR [eax+0x8]
 80809e6:  add ecx, DWORD PTR [eax+0xc]
 80809e9:  mov eax, DWORD PTR [edx+0x10]
 80809ec:  test eax, eax
 80809ee:  jne 80809e0
 80809f0:  mov DWORD PTR [esi+0xc], ebx
 80809f3:  mov DWORD PTR [esi+0x8], ecx
 80809f6:  mov esi, DWORD PTR [esi+0x18]
 80809f9:  test esi, esi
 80809fb:  jne 80809c8
 80809fd:  mov eax, DWORD PTR [ebp-0x50]
 8080a00:  test eax, eax
 8080a02:  je 8080826
 8080a08:  mov ebx, DWORD PTR [ebp-0x50]
 8080a0b:  jmp 8080a27
 8080a0d:  lea esi, [esi]
 8080a10:  mov edx, DWORD PTR [ebp-0x4c]
 8080a13:  mov eax, DWORD PTR [ebp-0x48]
 8080a16:  mov ebx, DWORD PTR [ebx+0x18]
 8080a19:  test ebx, ebx
 8080a1b:  je 808082c
 8080a21:  mov DWORD PTR [ebp-0x4c], edx
 8080a24:  mov DWORD PTR [ebp-0x48], eax
 8080a27:  mov eax, DWORD PTR [ebx+0x14]
 8080a2a:  mov ecx, DWORD PTR [ebx+0x10]
 8080a2d:  mov edx, DWORD PTR [eax+0xc]
 8080a30:  add edx, DWORD PTR [ecx+0x8]
 8080a33:  mov eax, DWORD PTR [eax+0x8]
 8080a36:  mov DWORD PTR [ebx+0xc], edx
 8080a39:  add eax, DWORD PTR [ecx+0xc]
 8080a3c:  cmp edx, DWORD PTR [ebp-0x4c]
 8080a3f:  mov DWORD PTR [ebx+0x8], eax
 8080a42:  jl 8080a16
 8080a44:  cmp DWORD PTR [ebp-0x4c], edx
 8080a47:  jne 8080a10
 8080a49:  cmp eax, DWORD PTR [ebp-0x48]
 8080a4c:  jl 8080a16
 8080a4e:  xchg ax, ax
 8080a50:  jmp 8080a10
 8080a52:  sub esp, 0x2c
 8080a55:  lea ebx, [esp+0x1f]
 8080a59:  and ebx, 0xf0
 8080a5c:  mov DWORD PTR [ebx], esi
 8080a5e:  mov DWORD PTR [esp], esi
 8080a61:  call 804eea0
 8080a66:  mov ecx, DWORD PTR [ebp-0x3c]
 8080a69:  mov edx, DWORD PTR [ebp-0x58]
 8080a6c:  mov DWORD PTR [ebx+0x18], 0x0
 8080a73:  mov DWORD PTR [ebx+0xc], edi
 8080a76:  mov DWORD PTR [ebx+0x8], ecx
 8080a79:  mov ecx, DWORD PTR [ebp-0x54]
 8080a7c:  mov DWORD PTR [ebx+0x14], edx
 8080a7f:  mov edx, DWORD PTR [ebp-0x4c]
 8080a82:  mov DWORD PTR [ebx+0x4], eax
 8080a85:  mov eax, DWORD PTR [ebp-0x40]
 8080a88:  mov DWORD PTR [ecx], ebx
 8080a8a:  mov DWORD PTR [ebx+0x10], eax
 8080a8d:  add ebx, 0x18
 8080a90:  mov eax, DWORD PTR [ebp-0x48]
 8080a93:  mov DWORD PTR [ebp-0x54], ebx
 8080a96:  jmp 808082c
 8080a9b:  mov ecx, DWORD PTR [ebp-0x48]
 8080a9e:  cmp DWORD PTR [edx+0x8], ecx
 8080aa1:  jge 80807c0
 8080aa7:  jmp 8080779
 8080aac:  mov esi, DWORD PTR [ebp-0x60]
 8080aaf:  nop
 8080ab0:  jmp 8080867
 8080ab5:  mov eax, DWORD PTR [ebp-0x50]
 8080ab8:  test eax, eax
 8080aba:  lea esi, [esi]
 8080ac0:  je 8080e7d
 8080ac6:  mov eax, DWORD PTR [ebp-0x50]
 8080ac9:  mov eax, DWORD PTR [eax+0x18]
 8080acc:  test eax, eax
 8080ace:  mov DWORD PTR [ebp-0x24], eax
 8080ad1:  je 8080ae6
 8080ad3:  mov edx, DWORD PTR [ebp-0x50]
 8080ad6:  mov ecx, eax
 8080ad8:  mov eax, DWORD PTR [edx+0xc]
 8080adb:  cmp DWORD PTR [ecx+0xc], eax
 8080ade:  jl 8080aec
 8080ae0:  je 8080f23
 8080ae6:  mov eax, DWORD PTR [ebp-0x50]
 8080ae9:  mov DWORD PTR [ebp-0x24], eax
 8080aec:  mov edx, DWORD PTR [ebp+0x8]
 8080aef:  test edx, edx
 8080af1:  mov DWORD PTR [ebp-0x28], edx
 8080af4:  je 8080f18
 8080afa:  mov edx, DWORD PTR [ebp-0x24]
 8080afd:  xor esi, esi
 8080aff:  xor ebx, ebx
 8080b01:  mov eax, DWORD PTR [edx+0x14]
 8080b04:  test eax, eax
 8080b06:  je 8080b14
 8080b08:  mov eax, DWORD PTR [eax+0x14]
 8080b0b:  add esi, 0x1
 8080b0e:  test eax, eax
 8080b10:  jne 8080b08
 8080b12:  mov ebx, esi
 8080b14:  imul eax, esi, 0x3c
 8080b17:  mov DWORD PTR [esp], eax
 8080b1a:  call 804d6f0
 8080b1f:  test eax, eax
 8080b21:  mov DWORD PTR [ebp-0x34], eax
 8080b24:  mov DWORD PTR [ebp-0x70], eax
 8080b27:  je 8080dfc
 8080b2d:  mov ecx, DWORD PTR [ebp+0x10]
 8080b30:  test ebx, ebx
 8080b32:  mov DWORD PTR [ecx], esi
 8080b34:  je 8080c6e
 8080b3a:  imul eax, ebx, 0x3c
 8080b3d:  mov esi, DWORD PTR [ebp-0x34]
 8080b40:  lea edi, [ebx-0x1]
 8080b43:  add esi, eax
 8080b45:  lea eax, [esi+0xc]
 8080b48:  mov DWORD PTR [ebp-0x2c], eax
 8080b4b:  jmp 8080bab
 8080b4d:  lea esi, [esi]
 8080b50:  mov edx, DWORD PTR [ebp-0x24]
 8080b53:  mov ecx, DWORD PTR [ebp+0x10]
 8080b56:  mov eax, DWORD PTR [edx+0x14]
 8080b59:  cmp DWORD PTR [ecx], ebx
 8080b5b:  mov eax, DWORD PTR [eax]
 8080b5d:  mov DWORD PTR [esi-0x30], eax
 8080b60:  je 8080bca
 8080b62:  mov ecx, DWORD PTR [ebp-0x2c]
 8080b65:  mov eax, DWORD PTR [ecx]
 8080b67:  mov edx, DWORD PTR [ebp-0x24]
 8080b6a:  mov DWORD PTR [esi-0x2c], eax
 8080b6d:  mov DWORD PTR [esi-0x34], 0x1
 8080b74:  mov DWORD PTR [esi-0x4], 0x0
 8080b7b:  mov eax, DWORD PTR [edx+0x10]
 8080b7e:  mov eax, DWORD PTR [eax+0x10]
 8080b81:  cmp BYTE PTR [eax], 0x2f
 8080b84:  je 8080be0
 8080b86:  mov edx, DWORD PTR [ebp-0x74]
 8080b89:  call 8081fa0
 8080b8e:  mov eax, DWORD PTR [ebp-0x24]
 8080b91:  sub DWORD PTR [ebp-0x2c], 0x3c
 8080b95:  test edi, edi
 8080b97:  mov esi, DWORD PTR [ebp-0x74]
 8080b9a:  mov eax, DWORD PTR [eax+0x14]
 8080b9d:  mov DWORD PTR [ebp-0x24], eax
 8080ba0:  je 8080c6e
 8080ba6:  mov ebx, edi
 8080ba8:  sub edi, 0x1
 8080bab:  lea edx, [esi-0x3c]
 8080bae:  test edi, edi
 8080bb0:  mov DWORD PTR [ebp-0x74], edx
 8080bb3:  jne 8080b50
 8080bb5:  mov ecx, DWORD PTR [ebp-0x28]
 8080bb8:  mov DWORD PTR [esp], ecx
 8080bbb:  call 806b010
 8080bc0:  mov ecx, DWORD PTR [ebp+0x10]
 8080bc3:  cmp DWORD PTR [ecx], ebx
 8080bc5:  mov DWORD PTR [esi-0x30], eax
 8080bc8:  jne 8080b62
 8080bca:  mov edx, DWORD PTR [ebp-0x24]
 8080bcd:  mov eax, DWORD PTR [edx]
 8080bcf:  mov DWORD PTR [esp], eax
 8080bd2:  call 806b010
 8080bd7:  jmp 8080b67
 8080bd9:  lea esi, [esi]
 8080be0:  call 8088ae0
 8080be5:  test eax, eax
 8080be7:  mov edx, eax
 8080be9:  lea esi, [esi]
 8080bf0:  je 8080ea9
 8080bf6:  mov DWORD PTR [esi-0x3c], eax
 8080bf9:  mov eax, DWORD PTR [eax]
 8080bfb:  mov ecx, DWORD PTR [edx+0x10]
 8080bfe:  mov DWORD PTR [esi-0x24], 0x0
 8080c05:  mov DWORD PTR [esi-0x38], eax
 8080c08:  mov eax, DWORD PTR [edx+0xc]
 8080c0b:  test ecx, ecx
 8080c0d:  mov DWORD PTR [esi-0x20], ecx
 8080c10:  mov DWORD PTR [esi-0x28], eax
 8080c13:  mov eax, DWORD PTR [edx+0x14]
 8080c16:  mov DWORD PTR [esi-0x1c], eax
 8080c19:  je 8080b8e
 8080c1f:  test edx, edx
 8080c21:  je 8080f35
 8080c27:  mov ebx, ecx
 8080c29:  ror ebx, 0x9
 8080c2c:  xor ebx, DWORD PTR gs:0x18
 8080c33:  mov DWORD PTR [esp], ebx
 8080c36:  call 807f350
 8080c3b:  mov ecx, DWORD PTR [ebp-0x74]
 8080c3e:  mov DWORD PTR [esp], ecx
 8080c41:  call ebx
 8080c43:  test eax, eax
 8080c45:  mov DWORD PTR [ebp-0x44], eax
 8080c48:  jne 8080f59
 8080c4e:  mov eax, DWORD PTR [esi-0x24]
 8080c51:  test eax, eax
 8080c53:  je 8080b8e
 8080c59:  mov ecx, DWORD PTR [ebp-0x74]
 8080c5c:  xor eax, DWORD PTR gs:0x18
 8080c63:  rol eax, 0x9
 8080c66:  mov DWORD PTR [ecx+0x18], eax
 8080c69:  jmp 8080b8e
 8080c6e:  mov eax, DWORD PTR [ebp-0x70]
 8080c71:  mov ecx, DWORD PTR [ebp+0xc]
 8080c74:  mov DWORD PTR [ebp-0x44], 0x0
 8080c7b:  mov DWORD PTR [ecx], eax
 8080c7d:  mov ecx, DWORD PTR [ebp+0x10]
 8080c80:  mov ecx, DWORD PTR [ecx]
 8080c82:  mov DWORD PTR [ebp-0x30], ecx
 8080c85:  mov esi, DWORD PTR [ebp-0x64]
 8080c88:  test esi, esi
 8080c8a:  je 8080e72
 8080c90:  mov ebx, DWORD PTR [ebp+0x8]
 8080c93:  test ebx, ebx
 8080c95:  je 8080e67
 8080c9b:  mov edx, DWORD PTR [ebp+0x8]
 8080c9e:  mov DWORD PTR [esp], edx
 8080ca1:  call 804eea0
 8080ca6:  mov ecx, DWORD PTR [ebp-0x64]
 8080ca9:  mov DWORD PTR [esp], ecx
 8080cac:  lea esi, [eax+0x1]
 8080caf:  call 804eea0
 8080cb4:  lea edi, [eax+0x1]
 8080cb7:  lea eax, [esi+edi+0x10]
 8080cbb:  mov DWORD PTR [esp], eax
 8080cbe:  call 804d6f0
 8080cc3:  test eax, eax
 8080cc5:  mov ebx, eax
 8080cc7:  je 80806a8
 8080ccd:  lea eax, [eax+0x10]
 8080cd0:  mov DWORD PTR [ebx], eax
 8080cd2:  mov DWORD PTR [esp+0x8], esi
 8080cd6:  mov edx, DWORD PTR [ebp+0x8]
 8080cd9:  mov DWORD PTR [esp], eax
 8080cdc:  mov DWORD PTR [esp+0x4], edx
 8080ce0:  call 806c310
 8080ce5:  mov DWORD PTR [esp+0x8], edi
 8080ce9:  mov ecx, DWORD PTR [ebp-0x64]
 8080cec:  mov DWORD PTR [esp+0x4], ecx
 8080cf0:  mov DWORD PTR [esp], eax
 8080cf3:  call 804efc0
 8080cf8:  mov edx, DWORD PTR [ebp-0x30]
 8080cfb:  mov DWORD PTR [ebx+0xc], edx
 8080cfe:  mov DWORD PTR [ebx+0x4], eax
 8080d01:  mov eax, DWORD PTR [ebp-0x34]
 8080d04:  mov DWORD PTR [ebx+0x8], eax
 8080d07:  mov DWORD PTR [esp+0x8], 0x8080250
 8080d0f:  mov DWORD PTR [esp+0x4], 0x80d2a40
 8080d17:  mov DWORD PTR [esp], ebx
 8080d1a:  call 8073c10
 8080d1f:  test eax, eax
 8080d21:  jne 80806a8
 8080d27:  mov DWORD PTR [esp], ebx
 8080d2a:  call 804b4a0
 8080d2f:  nop
 8080d30:  jmp 80806a8
 8080d35:  mov edx, eax
 8080d37:  mov eax, DWORD PTR [ebp+0x8]
 8080d3a:  test eax, eax
 8080d3c:  jne 80805b5
 8080d42:  mov eax, DWORD PTR [ebp-0x68]
 8080d45:  lea esi, [esi]
 8080d48:  jmp 80805b5
 8080d4d:  add edi, 0x1
 8080d50:  mov edx, DWORD PTR [ebp-0x20]
 8080d53:  imul eax, edi, 0x3c
 8080d56:  mov esi, DWORD PTR [ebp-0x6c]
 8080d59:  sub DWORD PTR [edx+0x8], 0x1
 8080d5d:  add esi, eax
 8080d5f:  jmp 8080d9e
 8080d61:  mov eax, DWORD PTR [esi+0x20]
 8080d64:  test eax, eax
 8080d66:  je 8080d8b
 8080d68:  mov edx, DWORD PTR [esi]
 8080d6a:  test edx, edx
 8080d6c:  je 8080f6f
 8080d72:  mov ebx, eax
 8080d74:  ror ebx, 0x9
 8080d77:  xor ebx, DWORD PTR gs:0x18
 8080d7e:  mov DWORD PTR [esp], ebx
 8080d81:  call 807f350
 8080d86:  mov DWORD PTR [esp], esi
 8080d89:  call ebx
 8080d8b:  mov eax, DWORD PTR [esi]
 8080d8d:  call 8088a10
 8080d92:  mov DWORD PTR [esi], 0x0
 8080d98:  add esi, 0x3c
 8080d9b:  add edi, 0x1
 8080d9e:  cmp DWORD PTR [ebp-0x38], edi
 8080da1:  jbe 8080de8
 8080da3:  mov ecx, DWORD PTR [esi]
 8080da5:  test ecx, ecx
 8080da7:  je 8080dbc
 8080da9:  mov eax, DWORD PTR [esi+0x8]
 8080dac:  sub eax, 0x1
 8080daf:  test eax, eax
 8080db1:  mov DWORD PTR [esi+0x8], eax
 8080db4:  je 8080d61
 8080db6:  mov eax, DWORD PTR [esi]
 8080db8:  test eax, eax
 8080dba:  jne 8080d98
 8080dbc:  mov eax, DWORD PTR [esi+0x20]
 8080dbf:  test eax, eax
 8080dc1:  je 8080d98
 8080dc3:  mov DWORD PTR [esp+0xc], 0x80b54ab
 8080dcb:  mov DWORD PTR [esp+0x8], 0xe9
 8080dd3:  mov DWORD PTR [esp+0x4], 0x80b5484
 8080ddb:  mov DWORD PTR [esp], 0x80b5514
 8080de2:  call 8051490
 8080de7:  nop
 8080de8:  mov DWORD PTR [ebp-0x44], 0x1
 8080def:  mov eax, DWORD PTR [ebp-0x44]
 8080df2:  lea esp, [ebp-0xc]
 8080df5:  pop ebx
 8080df6:  pop esi
 8080df7:  pop edi
 8080df8:  pop ebp
 8080df9:  ret 0xc
 8080dfc:  mov eax, DWORD PTR [ebp+0x10]
 8080dff:  mov edx, DWORD PTR [ebp+0xc]
 8080e02:  mov DWORD PTR [ebp-0x44], 0x3
 8080e09:  mov DWORD PTR [eax], 0x0
 8080e0f:  mov DWORD PTR [edx], 0x0
 8080e15:  jmp 8080c7d
 8080e1a:  mov edx, DWORD PTR [ebp-0x68]
 8080e1d:  sub esp, 0x2c
 8080e20:  lea ebx, [esp+0x1f]
 8080e24:  and ebx, 0xf0
 8080e27:  mov DWORD PTR [ebx], edx
 8080e29:  mov DWORD PTR [esp], edx
 8080e2c:  call 804eea0
 8080e31:  lea ecx, [ebx+0x18]
 8080e34:  mov DWORD PTR [ebx+0xc], 0x0
 8080e3b:  mov DWORD PTR [ebx+0x8], 0x0
 8080e42:  mov DWORD PTR [ebx+0x10], 0x0
 8080e49:  mov DWORD PTR [ebx+0x14], 0x0
 8080e50:  mov DWORD PTR [ebx+0x18], 0x0
 8080e57:  mov DWORD PTR [ebx+0x4], eax
 8080e5a:  mov eax, ebx
 8080e5c:  mov DWORD PTR [ebp-0x54], ecx
 8080e5f:  mov DWORD PTR [ebp-0x5c], ebx
 8080e62:  jmp 8080748
 8080e67:  mov eax, DWORD PTR [ebp-0x68]
 8080e6a:  mov DWORD PTR [ebp+0x8], eax
 8080e6d:  jmp 8080c9b
 8080e72:  mov ecx, DWORD PTR [ebp-0x60]
 8080e75:  mov DWORD PTR [ebp-0x64], ecx
 8080e78:  jmp 8080c90
 8080e7d:  mov eax, DWORD PTR [ebp+0xc]
 8080e80:  mov edx, DWORD PTR [ebp+0x10]
 8080e83:  mov DWORD PTR [ebp-0x34], 0x0
 8080e8a:  mov DWORD PTR [ebp-0x44], 0x1
 8080e91:  mov DWORD PTR [eax], 0x0
 8080e97:  mov DWORD PTR [edx], 0x0
 8080e9d:  mov DWORD PTR [ebp-0x30], 0x0
 8080ea4:  jmp 8080c85
 8080ea9:  mov DWORD PTR [ebp-0x44], 0x0
 8080eb0:  mov edx, DWORD PTR [ebp+0x10]
 8080eb3:  lea ebx, [edi+0x1]
 8080eb6:  cmp DWORD PTR [edx], ebx
 8080eb8:  jbe 8080ed6
 8080eba:  imul eax, ebx, 0x3c
 8080ebd:  mov esi, DWORD PTR [ebp-0x70]
 8080ec0:  add esi, eax
 8080ec2:  mov eax, esi
 8080ec4:  add ebx, 0x1
 8080ec7:  call 80803a0
 8080ecc:  mov ecx, DWORD PTR [ebp+0x10]
 8080ecf:  add esi, 0x3c
 8080ed2:  cmp ebx, DWORD PTR [ecx]
 8080ed4:  jb 8080ec2
 8080ed6:  mov eax, DWORD PTR [ebp-0x70]
 8080ed9:  mov DWORD PTR [esp], eax
 8080edc:  call 804b4a0
 8080ee1:  mov edi, DWORD PTR [ebp-0x44]
 8080ee4:  mov edx, DWORD PTR [ebp+0x10]
 8080ee7:  mov ecx, DWORD PTR [ebp+0xc]
 8080eea:  mov DWORD PTR [ebp-0x34], 0x0
 8080ef1:  test edi, edi
 8080ef3:  mov DWORD PTR [edx], 0x0
 8080ef9:  mov DWORD PTR [ecx], 0x0
 8080eff:  jne 8080c7d
 8080f05:  mov DWORD PTR [ebp-0x44], 0x1
 8080f0c:  jmp 8080c7d
 8080f11:  lea esi, [esi]
 8080f18:  mov ecx, DWORD PTR [ebp-0x68]
 8080f1b:  mov DWORD PTR [ebp-0x28], ecx
 8080f1e:  jmp 8080afa
 8080f23:  mov eax, DWORD PTR [ecx+0x8]
 8080f26:  cmp eax, DWORD PTR [edx+0x8]
 8080f29:  jl 8080aec
 8080f2f:  nop
 8080f30:  jmp 8080ae6
 8080f35:  mov DWORD PTR [esp+0xc], 0x80b54a1
 8080f3d:  mov DWORD PTR [esp+0x8], 0x129
 8080f45:  mov DWORD PTR [esp+0x4], 0x80b5484
 8080f4d:  mov DWORD PTR [esp], 0x80b5534
 8080f54:  call 8051490
 8080f59:  sub edi, 0x1
 8080f5c:  mov edx, DWORD PTR [ebp-0x70]
 8080f5f:  imul eax, edi, 0x3c
 8080f62:  mov DWORD PTR [edx+eax+0x20], 0x0
 8080f6a:  jmp 8080eb0
 8080f6f:  mov DWORD PTR [esp+0xc], 0x80b54ab
 8080f77:  mov DWORD PTR [esp+0x8], 0xd8
 8080f7f:  mov DWORD PTR [esp+0x4], 0x80b5484
 8080f87:  mov DWORD PTR [esp], 0x80b54f0
 8080f8e:  call 8051490
 8080f93:  lea esi, [esi]
 8080f99:  lea edi, [edi]

08080fa0 <__gconv_find_transform>:
 8080fa0:  push ebp
 8080fa1:  mov ebp, esp
 8080fa3:  sub esp, 0x28
 8080fa6:  mov DWORD PTR [ebp-0x8], esi
 8080fa9:  mov esi, eax
 8080fab:  mov eax, 0x0
 8080fb0:  test eax, eax
 8080fb2:  mov DWORD PTR [ebp-0xc], ebx
 8080fb5:  mov ebx, edx
 8080fb7:  mov DWORD PTR [ebp-0x4], edi
 8080fba:  mov edi, ecx
 8080fbc:  je 808112a
 8080fc2:  mov DWORD PTR [esp+0x4], 0x8081960
 8080fca:  mov DWORD PTR [esp], 0x80d2a44
 8080fd1:  call 0
 8080fd6:  xor eax, eax
 8080fd8:  mov ecx, 0x1
 8080fdd:  cmp DWORD PTR gs:0xc, 0x0
 8080fe5:  je 8080fe8
 8080fe7:  cmpxchg DWORD PTR ds:0x80d2ed4, ecx
 8080fef:  jne 80811f3
 8080ff5:  mov eax, DWORD PTR [ebp+0xc]
 8080ff8:  mov ecx, edi
 8080ffa:  mov edx, ebx
 8080ffc:  mov DWORD PTR [esp+0x4], eax
 8081000:  mov eax, DWORD PTR [ebp+0x8]
 8081003:  mov DWORD PTR [esp], eax
 8081006:  mov eax, esi
 8081008:  call 8088330
 808100d:  sub esp, 0x8
 8081010:  cmp eax, 0x2
 8081013:  mov ecx, eax
 8081015:  je 8081040
 8081017:  cmp DWORD PTR gs:0xc, 0x0
 808101f:  je 8081022
 8081021:  sub DWORD PTR ds:0x80d2ed4, 0x1
 8081029:  jne 8081203
 808102f:  mov ebx, DWORD PTR [ebp-0xc]
 8081032:  mov eax, ecx
 8081034:  mov esi, DWORD PTR [ebp-0x8]
 8081037:  mov edi, DWORD PTR [ebp-0x4]
 808103a:  mov esp, ebp
 808103c:  pop ebp
 808103d:  ret 0x8
 8081040:  mov eax, ds:0x80d2ed0
 8081045:  test eax, eax
 8081047:  je 8081108
 808104d:  lea eax, [ebp-0x14]
 8081050:  mov DWORD PTR [ebp-0x14], ebx
 8081053:  mov DWORD PTR [esp+0x8], 0x80802a0
 808105b:  mov DWORD PTR [esp+0x4], 0x80d2ed8
 8081063:  mov DWORD PTR [esp], eax
 8081066:  call 80736f0
 808106b:  mov DWORD PTR [ebp-0x1c], 0x0
 8081072:  test eax, eax
 8081074:  je 808107e
 8081076:  mov eax, DWORD PTR [eax]
 8081078:  mov eax, DWORD PTR [eax+0x4]
 808107b:  mov DWORD PTR [ebp-0x1c], eax
 808107e:  lea eax, [ebp-0x14]
 8081081:  mov DWORD PTR [ebp-0x14], esi
 8081084:  mov DWORD PTR [esp+0x8], 0x80802a0
 808108c:  mov DWORD PTR [esp+0x4], 0x80d2ed8
 8081094:  mov DWORD PTR [esp], eax
 8081097:  call 80736f0
 808109c:  mov DWORD PTR [ebp-0x18], 0x0
 80810a3:  test eax, eax
 80810a5:  je 80810af
 80810a7:  mov eax, DWORD PTR [eax]
 80810a9:  mov eax, DWORD PTR [eax+0x4]
 80810ac:  mov DWORD PTR [ebp-0x18], eax
 80810af:  test BYTE PTR [ebp+0xc], 0x1
 80810b3:  jne 8081148
 80810b9:  mov eax, DWORD PTR [ebp+0x8]
 80810bc:  mov ecx, ebx
 80810be:  mov edx, DWORD PTR [ebp-0x18]
 80810c1:  mov DWORD PTR [esp+0x4], edi
 80810c5:  mov DWORD PTR [esp+0x8], eax
 80810c9:  mov eax, DWORD PTR [ebp-0x1c]
 80810cc:  mov DWORD PTR [esp], eax
 80810cf:  mov eax, esi
 80810d1:  call 8080590
 80810d6:  sub esp, 0xc
 80810d9:  mov ecx, eax
 80810db:  cmp DWORD PTR gs:0xc, 0x0
 80810e3:  je 80810e6
 80810e5:  sub DWORD PTR ds:0x80d2ed4, 0x1
 80810ed:  jne 8081213
 80810f3:  test ecx, ecx
 80810f5:  jne 808102f
 80810fb:  xor ecx, ecx
 80810fd:  cmp DWORD PTR [edi], 0x0
 8081100:  sete cl
 8081103:  jmp 808102f
 8081108:  cmp DWORD PTR gs:0xc, 0x0
 8081110:  je 8081113
 8081112:  sub DWORD PTR ds:0x80d2ed4, 0x1
 808111a:  jne 8081223
 8081120:  mov ecx, 0x1
 8081125:  jmp 808102f
 808112a:  mov eax, ds:0x80d2a44
 808112f:  test eax, eax
 8081131:  jne 8080fd6
 8081137:  call 8081960
 808113c:  or DWORD PTR ds:0x80d2a44, 0x2
 8081143:  jmp 8080fd6
 8081148:  mov DWORD PTR [esp+0x4], ebx
 808114c:  mov DWORD PTR [esp], esi
 808114f:  call 806af90
 8081154:  test eax, eax
 8081156:  je 80811b5
 8081158:  mov eax, DWORD PTR [ebp-0x18]
 808115b:  test eax, eax
 808115d:  je 8081172
 808115f:  mov eax, DWORD PTR [ebp-0x18]
 8081162:  mov DWORD PTR [esp+0x4], ebx
 8081166:  mov DWORD PTR [esp], eax
 8081169:  call 806af90
 808116e:  test eax, eax
 8081170:  je 80811b5
 8081172:  mov eax, DWORD PTR [ebp-0x1c]
 8081175:  test eax, eax
 8081177:  je 80810b9
 808117d:  mov eax, DWORD PTR [ebp-0x1c]
 8081180:  mov DWORD PTR [esp], esi
 8081183:  mov DWORD PTR [esp+0x4], eax
 8081187:  call 806af90
 808118c:  test eax, eax
 808118e:  je 80811b5
 8081190:  mov eax, DWORD PTR [ebp-0x18]
 8081193:  test eax, eax
 8081195:  je 80810b9
 808119b:  mov eax, DWORD PTR [ebp-0x1c]
 808119e:  mov DWORD PTR [esp+0x4], eax
 80811a2:  mov eax, DWORD PTR [ebp-0x18]
 80811a5:  mov DWORD PTR [esp], eax
 80811a8:  call 806af90
 80811ad:  test eax, eax
 80811af:  jne 80810b9
 80811b5:  cmp DWORD PTR gs:0xc, 0x0
 80811bd:  je 80811c0
 80811bf:  sub DWORD PTR ds:0x80d2ed4, 0x1
 80811c7:  jne 8081233
 80811c9:  mov ecx, 0xffffffff
 80811ce:  jmp 808102f

080811d3 <_L_lock_1300>:
 80811d3:  lea ecx, ds:0x80d2ed4
 80811d9:  call 8050230
 80811de:  jmp 808048e

080811e3 <_L_unlock_1394>:
 80811e3:  lea eax, ds:0x80d2ed4
 80811e9:  call 8050260
 80811ee:  jmp 8080553

080811f3 <_L_lock_3106>:
 80811f3:  lea ecx, ds:0x80d2ed4
 80811f9:  call 8050230
 80811fe:  jmp 8080ff5

08081203 <_L_unlock_3129>:
 8081203:  lea eax, ds:0x80d2ed4
 8081209:  call 8050260
 808120e:  jmp 808102f

08081213 <_L_unlock_3232>:
 8081213:  lea eax, ds:0x80d2ed4
 8081219:  call 8050260
 808121e:  jmp 80810f3

08081223 <_L_unlock_3249>:
 8081223:  lea eax, ds:0x80d2ed4
 8081229:  call 8050260
 808122e:  jmp 8081120

08081233 <_L_unlock_3328>:
 8081233:  lea eax, ds:0x80d2ed4
 8081239:  call 8050260
 808123e:  jmp 80811c9

08081240 <add_module>:
 8081240:  push ebp
 8081241:  mov ebp, esp
 8081243:  push edi
 8081244:  push esi
 8081245:  push ebx
 8081246:  mov ebx, eax
 8081248:  sub esp, 0x40
 808124b:  mov DWORD PTR [ebp-0x3c], edx
 808124e:  mov edx, DWORD PTR ds:0x80b0414
 8081254:  mov DWORD PTR [ebp-0x40], ecx
 8081257:  movzx ecx, BYTE PTR [eax]
 808125a:  movsx eax, cl
 808125d:  test BYTE PTR [edx+eax*2+0x1], 0x20
 8081262:  je 8081278
 8081264:  lea esi, [esi]
 8081268:  add ebx, 0x1
 808126b:  movzx ecx, BYTE PTR [ebx]
 808126e:  movsx eax, cl
 8081271:  test BYTE PTR [edx+eax*2+0x1], 0x20
 8081276:  jne 8081268
 8081278:  test cl, cl
 808127a:  mov edx, ebx
 808127c:  je 80812a7
 808127e:  mov esi, DWORD PTR ds:0x80b0414
 8081284:  jmp 8081292
 8081286:  xchg ax, ax
 8081288:  movsx eax, al
 808128b:  test BYTE PTR [esi+eax*2+0x1], 0x20
 8081290:  jne 80812b8
 8081292:  mov ecx, DWORD PTR ds:0x80b041c
 8081298:  mov eax, DWORD PTR [ecx+eax*4]
 808129b:  mov BYTE PTR [edx], al
 808129d:  add edx, 0x1
 80812a0:  movzx eax, BYTE PTR [edx]
 80812a3:  test al, al
 80812a5:  jne 8081288
 80812a7:  lea esp, [ebp-0xc]
 80812aa:  pop ebx
 80812ab:  pop esi
 80812ac:  pop edi
 80812ad:  pop ebp
 80812ae:  ret 0xc
 80812b1:  lea esi, [esi]
 80812b8:  lea eax, [edx+0x1]
 80812bb:  mov ecx, DWORD PTR ds:0x80b0414
 80812c1:  mov BYTE PTR [edx], 0x0
 80812c4:  mov DWORD PTR [ebp-0x20], eax
 80812c7:  movzx edx, BYTE PTR [edx+0x1]
 80812cb:  mov edi, DWORD PTR [ebp-0x20]
 80812ce:  movsx eax, dl
 80812d1:  test BYTE PTR [ecx+eax*2+0x1], 0x20
 80812d6:  je 80812e8
 80812d8:  add edi, 0x1
 80812db:  movzx edx, BYTE PTR [edi]
 80812de:  movsx eax, dl
 80812e1:  test BYTE PTR [ecx+eax*2+0x1], 0x20
 80812e6:  jne 80812d8
 80812e8:  test dl, dl
 80812ea:  je 80812a7
 80812ec:  mov edx, DWORD PTR [ebp-0x20]
 80812ef:  jmp 8081305
 80812f1:  lea esi, [esi]
 80812f8:  movsx eax, al
 80812fb:  add edx, 0x1
 80812fe:  test BYTE PTR [esi+eax*2+0x1], 0x20
 8081303:  jne 8081320
 8081305:  mov ecx, DWORD PTR ds:0x80b041c
 808130b:  add edi, 0x1
 808130e:  mov eax, DWORD PTR [ecx+eax*4]
 8081311:  mov BYTE PTR [edx], al
 8081313:  movzx eax, BYTE PTR [edi]
 8081316:  test al, al
 8081318:  jne 80812f8
 808131a:  jmp 80812a7
 808131c:  lea esi, [esi]
 8081320:  mov ecx, DWORD PTR ds:0x80b0414
 8081326:  mov BYTE PTR [edx], 0x0
 8081329:  add edx, 0x1
 808132c:  mov DWORD PTR [ebp-0x1c], edx
 808132f:  nop
 8081330:  add edi, 0x1
 8081333:  movzx edx, BYTE PTR [edi]
 8081336:  movsx eax, dl
 8081339:  test BYTE PTR [ecx+eax*2+0x1], 0x20
 808133e:  jne 8081330
 8081340:  test dl, dl
 8081342:  je 80815d3
 8081348:  mov ecx, DWORD PTR [ebp-0x1c]
 808134b:  jmp 808135e
 808134d:  lea esi, [esi]
 8081350:  movsx eax, dl
 8081353:  test BYTE PTR [esi+eax*2+0x1], 0x20
 8081358:  jne 8081500
 808135e:  add edi, 0x1
 8081361:  mov BYTE PTR [ecx], dl
 8081363:  movzx edx, BYTE PTR [edi]
 8081366:  add ecx, 0x1
 8081369:  test dl, dl
 808136b:  jne 8081350
 808136d:  mov BYTE PTR [ecx], 0x0
 8081370:  add ecx, 0x1
 8081373:  mov DWORD PTR [ebp-0x24], ecx
 8081376:  mov DWORD PTR [ebp-0x30], 0x1
 808137d:  mov edx, DWORD PTR [ebp-0x1c]
 8081380:  movzx eax, BYTE PTR [edx]
 8081383:  test al, al
 8081385:  je 80812a7
 808138b:  mov ecx, DWORD PTR [ebp-0x24]
 808138e:  cmp al, 0x2f
 8081390:  sete al
 8081393:  movzx eax, al
 8081396:  sub eax, 0x1
 8081399:  sub ecx, edx
 808139b:  and DWORD PTR [ebp-0x40], eax
 808139e:  cmp ecx, 0x3
 80813a1:  mov DWORD PTR [ebp-0x38], ecx
 80813a4:  jg 8081598
 80813aa:  mov DWORD PTR [ebp-0x34], 0x3
 80813b1:  mov edi, 0x3
 80813b6:  mov esi, DWORD PTR [ebp-0x20]
 80813b9:  mov DWORD PTR [esp], ebx
 80813bc:  sub esi, ebx
 80813be:  mov DWORD PTR [esp+0x4], esi
 80813c2:  call 806b180
 80813c7:  lea edx, [eax+0x13]
 80813ca:  and edx, 0xfc
 80813cd:  sub esp, edx
 80813cf:  lea edx, [esp+0x1b]
 80813d3:  and edx, 0xf0
 80813d6:  mov BYTE PTR [edx+eax], 0x0
 80813da:  mov DWORD PTR [esp], edx
 80813dd:  mov DWORD PTR [esp+0x8], eax
 80813e1:  mov DWORD PTR [esp+0x4], ebx
 80813e5:  call 804efc0
 80813ea:  mov DWORD PTR [esp+0x8], 0x80802a0
 80813f2:  mov DWORD PTR [esp+0x4], 0x80d2ed8
 80813fa:  mov DWORD PTR [ebp-0x18], eax
 80813fd:  lea eax, [ebp-0x18]
 8081400:  mov DWORD PTR [esp], eax
 8081403:  call 80736f0
 8081408:  test eax, eax
 808140a:  jne 80812a7
 8081410:  sub DWORD PTR [ebp-0x24], ebx
 8081413:  mov ecx, DWORD PTR [ebp-0x24]
 8081416:  mov edx, DWORD PTR [ebp-0x40]
 8081419:  mov DWORD PTR [esp], 0x1
 8081420:  lea eax, [ecx+edx+0x20]
 8081424:  add eax, edi
 8081426:  mov DWORD PTR [esp+0x4], eax
 808142a:  call 804d3c0
 808142f:  test eax, eax
 8081431:  mov edi, eax
 8081433:  je 80812a7
 8081439:  lea eax, [eax+0x20]
 808143c:  mov DWORD PTR [edi], eax
 808143e:  mov DWORD PTR [esp+0x8], esi
 8081442:  mov DWORD PTR [esp+0x4], ebx
 8081446:  mov DWORD PTR [esp], eax
 8081449:  call 806c310
 808144e:  mov edx, DWORD PTR [ebp-0x1c]
 8081451:  sub edx, DWORD PTR [ebp-0x20]
 8081454:  mov DWORD PTR [edi+0x4], eax
 8081457:  mov DWORD PTR [esp+0x8], edx
 808145b:  mov edx, DWORD PTR [ebp-0x20]
 808145e:  mov DWORD PTR [esp], eax
 8081461:  mov DWORD PTR [esp+0x4], edx
 8081465:  call 806c310
 808146a:  mov ecx, DWORD PTR [ebp-0x30]
 808146d:  mov edx, DWORD PTR [ebp+0x10]
 8081470:  mov DWORD PTR [edi+0x8], ecx
 8081473:  mov ecx, DWORD PTR [ebp-0x40]
 8081476:  mov DWORD PTR [edi+0xc], edx
 8081479:  mov DWORD PTR [edi+0x10], eax
 808147c:  test ecx, ecx
 808147e:  je 8081496
 8081480:  mov ecx, DWORD PTR [ebp-0x40]
 8081483:  mov edx, DWORD PTR [ebp-0x3c]
 8081486:  mov DWORD PTR [esp], eax
 8081489:  mov DWORD PTR [esp+0x8], ecx
 808148d:  mov DWORD PTR [esp+0x4], edx
 8081491:  call 806c310
 8081496:  mov edx, DWORD PTR [ebp-0x1c]
 8081499:  mov ecx, DWORD PTR [ebp-0x38]
 808149c:  mov DWORD PTR [esp], eax
 808149f:  mov DWORD PTR [esp+0x4], edx
 80814a3:  mov DWORD PTR [esp+0x8], ecx
 80814a7:  call 806c310
 80814ac:  mov edx, DWORD PTR [ebp-0x34]
 80814af:  test edx, edx
 80814b1:  je 80814ba
 80814b3:  mov DWORD PTR [eax-0x1], 0x6f732e
 80814ba:  mov DWORD PTR [ebp-0x2c], 0x80d2ed0
 80814c1:  mov eax, DWORD PTR [ebp-0x2c]
 80814c4:  mov ebx, DWORD PTR [eax]
 80814c6:  test ebx, ebx
 80814c8:  je 80814f6
 80814ca:  mov ecx, DWORD PTR [edi]
 80814cc:  mov esi, DWORD PTR [ebx]
 80814ce:  mov DWORD PTR [ebp-0x28], ecx
 80814d1:  mov DWORD PTR [esp+0x4], esi
 80814d5:  mov DWORD PTR [esp], ecx
 80814d8:  call 806af90
 80814dd:  cmp eax, 0x0
 80814e0:  je 808154c
 80814e2:  jl 80815c6
 80814e8:  add ebx, 0x1c
 80814eb:  mov eax, ebx
 80814ed:  mov DWORD PTR [ebp-0x2c], ebx
 80814f0:  mov ebx, DWORD PTR [eax]
 80814f2:  test ebx, ebx
 80814f4:  jne 80814ca
 80814f6:  mov edx, DWORD PTR [ebp-0x2c]
 80814f9:  mov DWORD PTR [edx], edi
 80814fb:  jmp 80812a7
 8081500:  mov BYTE PTR [ecx], 0x0
 8081503:  lea eax, [ebp-0x10]
 8081506:  add ecx, 0x1
 8081509:  mov DWORD PTR [ebp-0x24], ecx
 808150c:  mov DWORD PTR [esp+0x8], 0xa
 8081514:  mov DWORD PTR [esp+0x4], eax
 8081518:  mov DWORD PTR [esp], edi
 808151b:  call 8056a00
 8081520:  cmp DWORD PTR [ebp-0x10], edi
 8081523:  mov DWORD PTR [ebp-0x30], eax
 8081526:  je 8081376
 808152c:  test eax, eax
 808152e:  jg 808137d
 8081534:  lea esi, [esi]
 8081538:  jmp 8081376
 808153d:  lea eax, [ebx+0x18]
 8081540:  mov ebx, DWORD PTR [ebx+0x18]
 8081543:  mov DWORD PTR [ebp-0x2c], eax
 8081546:  test ebx, ebx
 8081548:  je 80814f6
 808154a:  mov esi, DWORD PTR [ebx]
 808154c:  mov edx, DWORD PTR [ebp-0x28]
 808154f:  mov DWORD PTR [esp+0x4], esi
 8081553:  mov DWORD PTR [esp], edx
 8081556:  call 806af90
 808155b:  test eax, eax
 808155d:  jne 808153d
 808155f:  mov eax, DWORD PTR [edi+0x4]
 8081562:  mov edx, DWORD PTR [ebx+0x4]
 8081565:  mov DWORD PTR [esp], eax
 8081568:  mov DWORD PTR [esp+0x4], edx
 808156c:  call 806af90
 8081571:  test eax, eax
 8081573:  jne 808153d
 8081575:  mov eax, DWORD PTR [ebx+0x8]
 8081578:  cmp DWORD PTR [edi+0x8], eax
 808157b:  jl 80815e5
 808157d:  lea esi, [esi]
 8081580:  je 80815dd
 8081582:  mov DWORD PTR [esp], edi
 8081585:  lea esi, [esi]
 8081588:  call 804b4a0
 808158d:  lea esi, [esi]
 8081590:  jmp 80812a7
 8081595:  lea esi, [esi]
 8081598:  mov esi, DWORD PTR [ebp-0x24]
 808159b:  mov edi, 0x80b56d0
 80815a0:  mov ecx, 0x4
 80815a5:  sub esi, 0x4
 80815a8:  repz cmpsb
 80815aa:  mov DWORD PTR [ebp-0x34], 0x0
 80815b1:  seta dl
 80815b4:  setb al
 80815b7:  xor edi, edi
 80815b9:  cmp dl, al
 80815bb:  je 80813b6
 80815c1:  jmp 80813aa
 80815c6:  add ebx, 0x14
 80815c9:  mov DWORD PTR [ebp-0x2c], ebx
 80815cc:  mov eax, ebx
 80815ce:  jmp 80814c4
 80815d3:  mov ecx, DWORD PTR [ebp-0x1c]
 80815d6:  xchg ax, ax
 80815d8:  jmp 808136d
 80815dd:  mov eax, DWORD PTR [edi+0xc]
 80815e0:  cmp eax, DWORD PTR [ebx+0xc]
 80815e3:  jge 8081582
 80815e5:  mov eax, DWORD PTR [ebx+0x14]
 80815e8:  mov ecx, DWORD PTR [ebp-0x2c]
 80815eb:  mov DWORD PTR [edi+0x14], eax
 80815ee:  mov eax, DWORD PTR [ebx+0x1c]
 80815f1:  mov DWORD PTR [edi+0x1c], eax
 80815f4:  mov eax, DWORD PTR [ebx+0x18]
 80815f7:  mov DWORD PTR [edi+0x18], eax
 80815fa:  mov DWORD PTR [ecx], edi
 80815fc:  mov DWORD PTR [esp], ebx
 80815ff:  call 804b4a0
 8081604:  jmp 80812a7
 8081609:  lea esi, [esi]

08081610 <__gconv_get_path>:
 8081610:  push ebp
 8081611:  xor eax, eax
 8081613:  mov ebp, esp
 8081615:  mov ecx, 0x1
 808161a:  push edi
 808161b:  push esi
 808161c:  push ebx
 808161d:  sub esp, 0x28
 8081620:  cmp DWORD PTR gs:0xc, 0x0
 8081628:  je 808162b
 808162a:  cmpxchg DWORD PTR ds:0x80d2a4c, ecx
 8081632:  jne 8081f72
 8081638:  mov esi, DWORD PTR ds:0x80d2ee4
 808163e:  test esi, esi
 8081640:  je 8081668
 8081642:  cmp DWORD PTR gs:0xc, 0x0
 808164a:  je 808164d
 808164c:  sub DWORD PTR ds:0x80d2a4c, 0x1
 8081654:  jne 8081f82
 808165a:  lea esp, [ebp-0xc]
 808165d:  pop ebx
 808165e:  pop esi
 808165f:  pop edi
 8081660:  pop ebp
 8081661:  ret
 8081662:  lea esi, [esi]
 8081668:  mov ebx, DWORD PTR ds:0x80d2edc
 808166e:  test ebx, ebx
 8081670:  je 80818d9
 8081676:  mov DWORD PTR [esp], ebx
 8081679:  call 804eea0
 808167e:  lea edx, [eax+0x10]
 8081681:  mov DWORD PTR [ebp-0x1c], edx
 8081684:  lea edx, [eax+0x22]
 8081687:  and edx, 0xfc
 808168a:  sub esp, edx
 808168c:  lea edi, [esp+0x1f]
 8081690:  and edi, 0xf0
 8081693:  mov DWORD PTR [esp+0x8], eax
 8081697:  mov DWORD PTR [esp+0x4], ebx
 808169b:  mov DWORD PTR [esp], edi
 808169e:  call 806c310
 80816a3:  lea edx, [eax+0x1]
 80816a6:  mov BYTE PTR [eax], 0x3a
 80816a9:  mov DWORD PTR [eax+0x1], 0x7273752f
 80816b0:  mov DWORD PTR [edx+0x4], 0x62696c2f
 80816b7:  mov DWORD PTR [edx+0x8], 0x6f63672f
 80816be:  mov WORD PTR [edx+0xc], 0x766e
 80816c4:  mov BYTE PTR [edx+0xe], 0x0
 80816c8:  mov DWORD PTR [esp+0x4], 0x0
 80816d0:  mov DWORD PTR [esp], 0x0
 80816d7:  call 80731b0
 80816dc:  mov DWORD PTR [ebp-0x18], eax
 80816df:  mov DWORD PTR [esp], eax
 80816e2:  call 804eea0
 80816e7:  mov DWORD PTR [ebp-0x14], eax
 80816ea:  mov DWORD PTR [esp+0x4], 0x3a
 80816f2:  mov esi, 0x1
 80816f7:  mov DWORD PTR [esp], edi
 80816fa:  call 806ae20
 80816ff:  xor edx, edx
 8081701:  test eax, eax
 8081703:  mov ebx, eax
 8081705:  jne 8081712
 8081707:  jmp 8081929
 808170c:  lea esi, [esi]
 8081710:  mov ebx, eax
 8081712:  lea eax, [edx+0x1]
 8081715:  cmp ebx, eax
 8081717:  setne al
 808171a:  movzx eax, al
 808171d:  add esi, eax
 808171f:  lea eax, [ebx+0x1]
 8081722:  mov DWORD PTR [esp+0x4], 0x3a
 808172a:  mov DWORD PTR [esp], eax
 808172d:  call 806ae20
 8081732:  mov edx, ebx
 8081734:  test eax, eax
 8081736:  jne 8081710
 8081738:  mov eax, DWORD PTR [ebp-0x14]
 808173b:  lea edx, [esi-0x1]
 808173e:  mov ebx, esi
 8081740:  lea ecx, [esi*8+0x8]
 8081747:  add eax, 0x1
 808174a:  imul edx, eax
 808174d:  lea eax, [ebx+edx]
 8081750:  add eax, DWORD PTR [ebp-0x1c]
 8081753:  add eax, ecx
 8081755:  mov DWORD PTR [esp], eax
 8081758:  call 804d6f0
 808175d:  test eax, eax
 808175f:  mov DWORD PTR [ebp-0x20], eax
 8081762:  mov DWORD PTR [ebp-0x24], eax
 8081765:  je 808191d
 808176b:  mov DWORD PTR ds:0x80d2ee0, 0x0
 8081775:  movzx edx, BYTE PTR [edi]
 8081778:  mov eax, edi
 808177a:  mov esi, edi
 808177c:  cmp dl, 0x3a
 808177f:  jne 8081795
 8081781:  lea esi, [esi]
 8081788:  add eax, 0x1
 808178b:  movzx edx, BYTE PTR [eax]
 808178e:  cmp dl, 0x3a
 8081791:  je 8081788
 8081793:  mov esi, eax
 8081795:  test dl, dl
 8081797:  jne 80817c0
 8081799:  mov DWORD PTR [esp+0xc], 0x80b56d4
 80817a1:  mov DWORD PTR [esp+0x8], 0x1f7
 80817a9:  mov DWORD PTR [esp+0x4], 0x80b5563
 80817b1:  mov DWORD PTR [esp], 0x80b5570
 80817b8:  call 8051490
 80817bd:  lea esi, [esi]
 80817c0:  add eax, 0x1
 80817c3:  jmp 80817ca
 80817c5:  lea esi, [esi]
 80817c8:  mov eax, ecx
 80817ca:  movzx edx, BYTE PTR [eax]
 80817cd:  test dl, dl
 80817cf:  je 80817de
 80817d1:  cmp dl, 0x3a
 80817d4:  lea ecx, [eax+0x1]
 80817d7:  jne 80817c8
 80817d9:  mov BYTE PTR [eax], 0x0
 80817dc:  mov eax, ecx
 80817de:  test esi, esi
 80817e0:  je 8081799
 80817e2:  mov ecx, DWORD PTR [ebp-0x24]
 80817e5:  xor edi, edi
 80817e7:  mov DWORD PTR [ebp-0x10], eax
 80817ea:  lea edx, [ecx+ebx*8+0x8]
 80817ee:  mov eax, ecx
 80817f0:  mov DWORD PTR [eax+edi*8], edx
 80817f3:  cmp BYTE PTR [esi], 0x2f
 80817f6:  je 808181f
 80817f8:  mov ebx, DWORD PTR [ebp-0x18]
 80817fb:  test ebx, ebx
 80817fd:  je 8081935
 8081803:  mov ecx, DWORD PTR [ebp-0x14]
 8081806:  mov eax, DWORD PTR [ebp-0x18]
 8081809:  mov DWORD PTR [esp], edx
 808180c:  mov DWORD PTR [esp+0x8], ecx
 8081810:  mov DWORD PTR [esp+0x4], eax
 8081814:  call 806c310
 8081819:  mov BYTE PTR [eax], 0x2f
 808181c:  lea edx, [eax+0x1]
 808181f:  mov DWORD PTR [esp+0x4], esi
 8081823:  mov DWORD PTR [esp], edx
 8081826:  call 806c360
 808182b:  cmp BYTE PTR [eax-0x1], 0x2f
 808182f:  mov ebx, eax
 8081831:  je 8081839
 8081833:  mov BYTE PTR [eax], 0x2f
 8081836:  add ebx, 0x1
 8081839:  mov ecx, DWORD PTR [ebp-0x24]
 808183c:  mov edx, ebx
 808183e:  sub edx, DWORD PTR [ecx+edi*8]
 8081841:  cmp edx, DWORD PTR ds:0x80d2ee0
 8081847:  mov DWORD PTR [ecx+edi*8+0x4], edx
 808184b:  jbe 8081853
 808184d:  mov DWORD PTR ds:0x80d2ee0, edx
 8081853:  mov BYTE PTR [ebx], 0x0
 8081856:  mov eax, DWORD PTR [ebp-0x10]
 8081859:  add edi, 0x1
 808185c:  movzx edx, BYTE PTR [eax]
 808185f:  mov esi, eax
 8081861:  cmp dl, 0x3a
 8081864:  jne 8081875
 8081866:  xchg ax, ax
 8081868:  add eax, 0x1
 808186b:  movzx edx, BYTE PTR [eax]
 808186e:  cmp dl, 0x3a
 8081871:  je 8081868
 8081873:  mov esi, eax
 8081875:  test dl, dl
 8081877:  jne 80818a8
 8081879:  mov edx, DWORD PTR [ebp-0x24]
 808187c:  lea eax, [edx+edi*8]
 808187f:  mov DWORD PTR [eax], 0x0
 8081885:  mov DWORD PTR [eax+0x4], 0x0
 808188c:  mov ecx, DWORD PTR [ebp-0x20]
 808188f:  mov eax, DWORD PTR [ebp-0x18]
 8081892:  mov DWORD PTR ds:0x80d2ee4, ecx
 8081898:  mov DWORD PTR [esp], eax
 808189b:  call 804b4a0
 80818a0:  jmp 8081642
 80818a5:  lea esi, [esi]
 80818a8:  add eax, 0x1
 80818ab:  jmp 80818b2
 80818ad:  lea esi, [esi]
 80818b0:  mov eax, ecx
 80818b2:  movzx edx, BYTE PTR [eax]
 80818b5:  test dl, dl
 80818b7:  nop
 80818b8:  je 80818c7
 80818ba:  cmp dl, 0x3a
 80818bd:  lea ecx, [eax+0x1]
 80818c0:  jne 80818b0
 80818c2:  mov BYTE PTR [eax], 0x0
 80818c5:  mov eax, ecx
 80818c7:  test esi, esi
 80818c9:  je 8081879
 80818cb:  mov DWORD PTR [ebp-0x10], eax
 80818ce:  lea edx, [ebx+0x1]
 80818d1:  mov eax, DWORD PTR [ebp-0x24]
 80818d4:  jmp 80817f0
 80818d9:  sub esp, 0x20
 80818dc:  lea eax, [esp+0x1f]
 80818e0:  and eax, 0xf0
 80818e3:  mov DWORD PTR [eax], 0x7273752f
 80818e9:  mov edi, eax
 80818eb:  mov DWORD PTR [eax+0x4], 0x62696c2f
 80818f2:  mov DWORD PTR [eax+0x8], 0x6f63672f
 80818f9:  mov WORD PTR [eax+0xc], 0x766e
 80818ff:  mov BYTE PTR [eax+0xe], 0x0
 8081903:  mov DWORD PTR [ebp-0x1c], 0xf
 808190a:  mov DWORD PTR [ebp-0x18], 0x0
 8081911:  mov DWORD PTR [ebp-0x14], 0x0
 8081918:  jmp 80816ea
 808191d:  mov DWORD PTR [ebp-0x20], 0x80b5700
 8081924:  jmp 808188c
 8081929:  mov ecx, 0x10
 808192e:  mov bl, 0x1
 8081930:  jmp 808174d
 8081935:  mov DWORD PTR [esp+0xc], 0x80b56d4
 808193d:  mov DWORD PTR [esp+0x8], 0x1fd
 8081945:  mov DWORD PTR [esp+0x4], 0x80b5563
 808194d:  mov DWORD PTR [esp], 0x80b5584
 8081954:  call 8051490
 8081959:  lea esi, [esi]

08081960 <__gconv_read_conf>:
 8081960:  push ebp
 8081961:  mov eax, gs:0x0
 8081967:  mov ebp, esp
 8081969:  push edi
 808196a:  push esi
 808196b:  push ebx
 808196c:  sub esp, 0x60
 808196f:  mov edx, 0xffffffe8
 8081975:  mov DWORD PTR [ebp-0x10], 0x0
 808197c:  mov DWORD PTR [ebp-0x14], 0x0
 8081983:  mov DWORD PTR [ebp-0x58], eax
 8081986:  mov edx, DWORD PTR [eax+edx]
 8081989:  mov DWORD PTR [ebp-0x4c], edx
 808198c:  call 8088150
 8081991:  test eax, eax
 8081993:  je 8081efa
 8081999:  mov edi, DWORD PTR ds:0x80d2ee4
 808199f:  test edi, edi
 80819a1:  je 8081f1b
 80819a7:  mov eax, ds:0x80d2ee4
 80819ac:  mov edx, DWORD PTR [eax]
 80819ae:  test edx, edx
 80819b0:  mov DWORD PTR [ebp-0x54], edx
 80819b3:  je 8081ae9
 80819b9:  mov edi, DWORD PTR [ebp-0x54]
 80819bc:  mov DWORD PTR [ebp-0x34], 0x8
 80819c3:  mov eax, DWORD PTR [eax+0x4]
 80819c6:  mov DWORD PTR [ebp-0x48], eax
 80819c9:  add eax, 0x20
 80819cc:  mov ecx, DWORD PTR [ebp-0x48]
 80819cf:  and eax, 0xfc
 80819d2:  sub esp, eax
 80819d4:  lea ebx, [esp+0x1f]
 80819d8:  and ebx, 0xf0
 80819db:  mov DWORD PTR [esp+0x8], ecx
 80819df:  mov DWORD PTR [esp+0x4], edi
 80819e3:  mov DWORD PTR [esp], ebx
 80819e6:  call 806c310
 80819eb:  mov DWORD PTR [eax], 0x6e6f6367
 80819f1:  mov DWORD PTR [eax+0x4], 0x6f6d2d76
 80819f8:  mov DWORD PTR [eax+0x8], 0x656c7564
 80819ff:  mov WORD PTR [eax+0xc], 0x73
 8081a05:  mov DWORD PTR [esp+0x4], 0x80b0518
 8081a0d:  mov DWORD PTR [esp], ebx
 8081a10:  call 8062450
 8081a15:  mov DWORD PTR [ebp-0x18], 0x0
 8081a1c:  mov DWORD PTR [ebp-0x1c], 0x0
 8081a23:  test eax, eax
 8081a25:  mov DWORD PTR [ebp-0x40], eax
 8081a28:  je 8081acf
 8081a2e:  mov edx, eax
 8081a30:  mov eax, DWORD PTR [eax]
 8081a32:  or ah, 0x80
 8081a35:  mov DWORD PTR [edx], eax
 8081a37:  test al, 0x10
 8081a39:  jne 8081ab9
 8081a3b:  nop
 8081a3c:  lea esi, [esi]
 8081a40:  mov ecx, DWORD PTR [ebp-0x40]
 8081a43:  lea eax, [ebp-0x1c]
 8081a46:  mov DWORD PTR [esp+0x4], eax
 8081a4a:  lea eax, [ebp-0x18]
 8081a4d:  mov DWORD PTR [esp+0x8], 0xa
 8081a55:  mov DWORD PTR [esp], eax
 8081a58:  mov DWORD PTR [esp+0xc], ecx
 8081a5c:  call 8093940
 8081a61:  test eax, eax
 8081a63:  mov ebx, eax
 8081a65:  js 8081ab9
 8081a67:  mov esi, DWORD PTR [ebp-0x18]
 8081a6a:  mov DWORD PTR [esp+0x4], 0x23
 8081a72:  mov DWORD PTR [esp], esi
 8081a75:  call 806ae20
 8081a7a:  test eax, eax
 8081a7c:  mov edx, eax
 8081a7e:  je 8081cc0
 8081a84:  mov BYTE PTR [eax], 0x0
 8081a87:  mov ebx, DWORD PTR ds:0x80b0414
 8081a8d:  movsx eax, BYTE PTR [esi]
 8081a90:  test BYTE PTR [ebx+eax*2+0x1], 0x20
 8081a95:  je 8081aa5
 8081a97:  nop
 8081a98:  add esi, 0x1
 8081a9b:  movsx eax, BYTE PTR [esi]
 8081a9e:  test BYTE PTR [ebx+eax*2+0x1], 0x20
 8081aa3:  jne 8081a98
 8081aa5:  cmp edx, esi
 8081aa7:  mov DWORD PTR [ebp-0x5c], esi
 8081aaa:  jne 8081cd8
 8081ab0:  mov ebx, DWORD PTR [ebp-0x40]
 8081ab3:  mov eax, DWORD PTR [ebx]
 8081ab5:  test al, 0x10
 8081ab7:  je 8081a40
 8081ab9:  mov eax, DWORD PTR [ebp-0x18]
 8081abc:  mov DWORD PTR [esp], eax
 8081abf:  call 804b4a0
 8081ac4:  mov ebx, DWORD PTR [ebp-0x40]
 8081ac7:  mov DWORD PTR [esp], ebx
 8081aca:  call 8062010
 8081acf:  mov eax, DWORD PTR [ebp-0x34]
 8081ad2:  add eax, DWORD PTR ds:0x80d2ee4
 8081ad8:  add DWORD PTR [ebp-0x34], 0x8
 8081adc:  mov edi, DWORD PTR [eax]
 8081ade:  test edi, edi
 8081ae0:  mov DWORD PTR [ebp-0x54], edi
 8081ae3:  jne 80819c3
 8081ae9:  mov edi, 0x80d1200
 8081aee:  jmp 8081afb
 8081af0:  add edi, 0x20
 8081af3:  cmp edi, 0x80d1380
 8081af9:  je 8081b70
 8081afb:  mov eax, DWORD PTR [edi]
 8081afd:  mov DWORD PTR [ebp-0x24], eax
 8081b00:  lea eax, [ebp-0x24]
 8081b03:  mov DWORD PTR [esp+0x8], 0x80802a0
 8081b0b:  mov DWORD PTR [esp+0x4], 0x80d2ed8
 8081b13:  mov DWORD PTR [esp], eax
 8081b16:  call 80736f0
 8081b1b:  mov DWORD PTR [ebp-0x3c], 0x80d2ed0
 8081b22:  test eax, eax
 8081b24:  jne 8081af0
 8081b26:  mov ecx, DWORD PTR [ebp-0x3c]
 8081b29:  mov ebx, DWORD PTR [ecx]
 8081b2b:  test ebx, ebx
 8081b2d:  je 8081b60
 8081b2f:  mov edx, DWORD PTR [edi]
 8081b31:  mov esi, DWORD PTR [ebx]
 8081b33:  mov DWORD PTR [ebp-0x38], edx
 8081b36:  mov DWORD PTR [esp+0x4], esi
 8081b3a:  mov DWORD PTR [esp], edx
 8081b3d:  call 806af90
 8081b42:  cmp eax, 0x0
 8081b45:  je 8081c73
 8081b4b:  jl 8081c88
 8081b51:  add ebx, 0x1c
 8081b54:  mov DWORD PTR [ebp-0x3c], ebx
 8081b57:  mov ecx, DWORD PTR [ebp-0x3c]
 8081b5a:  mov ebx, DWORD PTR [ecx]
 8081b5c:  test ebx, ebx
 8081b5e:  jne 8081b2f
 8081b60:  mov ebx, DWORD PTR [ebp-0x3c]
 8081b63:  mov DWORD PTR [ebx], edi
 8081b65:  add edi, 0x20
 8081b68:  cmp edi, 0x80d1380
 8081b6e:  jne 8081afb
 8081b70:  mov esi, 0x80b5720
 8081b75:  mov DWORD PTR [esp+0x4], 0x0
 8081b7d:  mov DWORD PTR [esp], esi
 8081b80:  call 806c400
 8081b85:  add eax, 0x1
 8081b88:  mov DWORD PTR [ebp-0x44], eax
 8081b8b:  mov DWORD PTR [esp+0x4], 0x0
 8081b93:  mov DWORD PTR [esp], eax
 8081b96:  call 806c400
 8081b9b:  mov ebx, DWORD PTR ds:0x80d2ed0
 8081ba1:  mov DWORD PTR [ebp-0x50], eax
 8081ba4:  add eax, 0x1
 8081ba7:  mov DWORD PTR [ebp-0x30], eax
 8081baa:  test ebx, ebx
 8081bac:  je 8081bd2
 8081bae:  mov eax, DWORD PTR [ebx]
 8081bb0:  mov DWORD PTR [esp], esi
 8081bb3:  mov DWORD PTR [esp+0x4], eax
 8081bb7:  call 806af90
 8081bbc:  cmp eax, 0x0
 8081bbf:  je 8081c35
 8081bc1:  jl 8081c98
 8081bc7:  mov ebx, DWORD PTR [ebx+0x1c]
 8081bca:  test ebx, ebx
 8081bcc:  lea esi, [esi]
 8081bd0:  jne 8081bae
 8081bd2:  mov edi, DWORD PTR [ebp-0x30]
 8081bd5:  sub edi, esi
 8081bd7:  lea eax, [edi+0x8]
 8081bda:  mov DWORD PTR [esp], eax
 8081bdd:  call 804d6f0
 8081be2:  test eax, eax
 8081be4:  mov ebx, eax
 8081be6:  je 8081c35
 8081be8:  lea eax, [ebx+0x8]
 8081beb:  mov DWORD PTR [esp+0x8], edi
 8081bef:  mov DWORD PTR [esp+0x4], esi
 8081bf3:  mov DWORD PTR [esp], eax
 8081bf6:  call 804efc0
 8081bfb:  sub DWORD PTR [ebp-0x44], esi
 8081bfe:  mov DWORD PTR [ebx], eax
 8081c00:  add eax, DWORD PTR [ebp-0x44]
 8081c03:  mov DWORD PTR [ebx+0x4], eax
 8081c06:  mov DWORD PTR [esp+0x8], 0x80802a0
 8081c0e:  mov DWORD PTR [esp+0x4], 0x80d2ed8
 8081c16:  mov DWORD PTR [esp], ebx
 8081c19:  call 8073c10
 8081c1e:  test eax, eax
 8081c20:  je 8081c26
 8081c22:  cmp ebx, DWORD PTR [eax]
 8081c24:  je 8081c35
 8081c26:  mov DWORD PTR [esp], ebx
 8081c29:  lea esi, [esi]
 8081c30:  call 804b4a0
 8081c35:  mov edi, DWORD PTR [ebp-0x50]
 8081c38:  cmp BYTE PTR [edi+0x1], 0x0
 8081c3c:  je 8081ca5
 8081c3e:  mov esi, DWORD PTR [ebp-0x30]
 8081c41:  jmp 8081b75
 8081c46:  mov eax, DWORD PTR [edi+0x4]
 8081c49:  mov edx, DWORD PTR [ebx+0x4]
 8081c4c:  mov DWORD PTR [esp], eax
 8081c4f:  mov DWORD PTR [esp+0x4], edx
 8081c53:  call 806af90
 8081c58:  test eax, eax
 8081c5a:  je 8081f25
 8081c60:  lea ecx, [ebx+0x18]
 8081c63:  mov ebx, DWORD PTR [ebx+0x18]
 8081c66:  mov DWORD PTR [ebp-0x3c], ecx
 8081c69:  test ebx, ebx
 8081c6b:  je 8081b60
 8081c71:  mov esi, DWORD PTR [ebx]
 8081c73:  mov DWORD PTR [esp+0x4], esi
 8081c77:  mov eax, DWORD PTR [ebp-0x38]
 8081c7a:  mov DWORD PTR [esp], eax
 8081c7d:  call 806af90
 8081c82:  test eax, eax
 8081c84:  jne 8081c60
 8081c86:  jmp 8081c46
 8081c88:  add ebx, 0x14
 8081c8b:  mov DWORD PTR [ebp-0x3c], ebx
 8081c8e:  xchg ax, ax
 8081c90:  jmp 8081b26
 8081c95:  lea esi, [esi]
 8081c98:  mov ebx, DWORD PTR [ebx+0x14]
 8081c9b:  nop
 8081c9c:  lea esi, [esi]
 8081ca0:  jmp 8081baa
 8081ca5:  mov ecx, DWORD PTR [ebp-0x4c]
 8081ca8:  mov edx, DWORD PTR [ebp-0x58]
 8081cab:  mov eax, 0xffffffe8
 8081cb0:  mov DWORD PTR [edx+eax], ecx
 8081cb3:  lea esp, [ebp-0xc]
 8081cb6:  pop ebx
 8081cb7:  pop esi
 8081cb8:  pop edi
 8081cb9:  pop ebp
 8081cba:  ret
 8081cbb:  nop
 8081cbc:  lea esi, [esi]
 8081cc0:  lea eax, [esi+ebx-0x1]
 8081cc4:  cmp BYTE PTR [eax], 0xa
 8081cc7:  jne 8081a87
 8081ccd:  mov BYTE PTR [eax], 0x0
 8081cd0:  jmp 8081a87
 8081cd5:  lea esi, [esi]
 8081cd8:  movzx eax, BYTE PTR [esi]
 8081cdb:  test al, al
 8081cdd:  jne 8081cf6
 8081cdf:  nop
 8081ce0:  jmp 8081d00
 8081ce2:  lea esi, [esi]
 8081ce8:  add DWORD PTR [ebp-0x5c], 0x1
 8081cec:  mov edi, DWORD PTR [ebp-0x5c]
 8081cef:  movzx eax, BYTE PTR [edi]
 8081cf2:  test al, al
 8081cf4:  je 8081d00
 8081cf6:  movsx eax, al
 8081cf9:  test BYTE PTR [ebx+eax*2+0x1], 0x20
 8081cfe:  je 8081ce8
 8081d00:  mov eax, DWORD PTR [ebp-0x5c]
 8081d03:  mov DWORD PTR [ebp-0x28], eax
 8081d06:  sub eax, esi
 8081d08:  cmp eax, 0x5
 8081d0b:  je 8081d34
 8081d0d:  cmp eax, 0x6
 8081d10:  jne 8081ab0
 8081d16:  mov eax, 0x80b559d
 8081d1b:  mov ecx, 0x6
 8081d20:  mov edi, eax
 8081d22:  repz cmpsb
 8081d24:  je 8081ec0
 8081d2a:  mov edx, DWORD PTR [ebp-0x40]
 8081d2d:  mov eax, DWORD PTR [edx]
 8081d2f:  jmp 8081a37
 8081d34:  mov eax, 0x80b5597
 8081d39:  mov ecx, 0x5
 8081d3e:  mov edi, eax
 8081d40:  repz cmpsb
 8081d42:  jne 8081ab0
 8081d48:  mov eax, DWORD PTR [ebp-0x28]
 8081d4b:  movzx edx, BYTE PTR [eax]
 8081d4e:  movsx eax, dl
 8081d51:  test BYTE PTR [ebx+eax*2+0x1], 0x20
 8081d56:  je 8081d6c
 8081d58:  add DWORD PTR [ebp-0x28], 0x1
 8081d5c:  mov ecx, DWORD PTR [ebp-0x28]
 8081d5f:  movzx edx, BYTE PTR [ecx]
 8081d62:  movsx eax, dl
 8081d65:  test BYTE PTR [ebx+eax*2+0x1], 0x20
 8081d6a:  jne 8081d58
 8081d6c:  test dl, dl
 8081d6e:  mov ecx, DWORD PTR [ebp-0x28]
 8081d71:  je 8081ab0
 8081d77:  nop
 8081d78:  mov edi, DWORD PTR ds:0x80b041c
 8081d7e:  mov edx, ecx
 8081d80:  add ecx, 0x1
 8081d83:  mov eax, DWORD PTR [edi+eax*4]
 8081d86:  mov BYTE PTR [edx], al
 8081d88:  movzx eax, BYTE PTR [ecx]
 8081d8b:  test al, al
 8081d8d:  je 8081d2a
 8081d8f:  mov ebx, DWORD PTR ds:0x80b0414
 8081d95:  movsx eax, al
 8081d98:  test BYTE PTR [ebx+eax*2+0x1], 0x20
 8081d9d:  je 8081d78
 8081d9f:  lea edi, [ecx+0x1]
 8081da2:  mov edx, ebx
 8081da4:  mov BYTE PTR [ecx], 0x0
 8081da7:  mov esi, edi
 8081da9:  mov DWORD PTR [ebp-0x2c], edi
 8081dac:  movzx ebx, BYTE PTR [ecx+0x1]
 8081db0:  movsx eax, bl
 8081db3:  test BYTE PTR [edx+eax*2+0x1], 0x20
 8081db8:  je 8081dca
 8081dba:  add esi, 0x1
 8081dbd:  movzx ebx, BYTE PTR [esi]
 8081dc0:  movsx eax, bl
 8081dc3:  test BYTE PTR [edx+eax*2+0x1], 0x20
 8081dc8:  jne 8081dba
 8081dca:  xor edx, edx
 8081dcc:  test bl, bl
 8081dce:  jne 8081deb
 8081dd0:  jmp 8081d2a
 8081dd5:  lea esi, [esi]
 8081dd8:  mov ebx, DWORD PTR ds:0x80b0414
 8081dde:  movsx eax, al
 8081de1:  add edx, 0x1
 8081de4:  test BYTE PTR [ebx+eax*2+0x1], 0x20
 8081de9:  jne 8081e05
 8081deb:  mov ebx, DWORD PTR ds:0x80b041c
 8081df1:  lea edi, [ecx+edx+0x2]
 8081df5:  mov eax, DWORD PTR [ebx+eax*4]
 8081df8:  mov BYTE PTR [ecx+edx+0x1], al
 8081dfc:  movzx eax, BYTE PTR [esi+edx+0x1]
 8081e01:  test al, al
 8081e03:  jne 8081dd8
 8081e05:  cmp edi, DWORD PTR [ebp-0x2c]
 8081e08:  je 8081f11
 8081e0e:  mov BYTE PTR [edi], 0x0
 8081e11:  mov ebx, DWORD PTR ds:0x80d2ed0
 8081e17:  test ebx, ebx
 8081e19:  je 8081e42
 8081e1b:  mov eax, DWORD PTR [ebx]
 8081e1d:  mov DWORD PTR [esp+0x4], eax
 8081e21:  mov eax, DWORD PTR [ebp-0x28]
 8081e24:  mov DWORD PTR [esp], eax
 8081e27:  call 806af90
 8081e2c:  cmp eax, 0x0
 8081e2f:  je 8081d2a
 8081e35:  jl 8081eb8
 8081e3b:  mov ebx, DWORD PTR [ebx+0x1c]
 8081e3e:  test ebx, ebx
 8081e40:  jne 8081e1b
 8081e42:  lea esi, [edi+0x1]
 8081e45:  sub esi, DWORD PTR [ebp-0x28]
 8081e48:  lea eax, [esi+0x8]
 8081e4b:  mov DWORD PTR [esp], eax
 8081e4e:  call 804d6f0
 8081e53:  test eax, eax
 8081e55:  mov ebx, eax
 8081e57:  je 8081ab0
 8081e5d:  mov DWORD PTR [esp+0x8], esi
 8081e61:  mov ecx, DWORD PTR [ebp-0x28]
 8081e64:  lea eax, [ebx+0x8]
 8081e67:  mov DWORD PTR [esp], eax
 8081e6a:  mov DWORD PTR [esp+0x4], ecx
 8081e6e:  call 804efc0
 8081e73:  mov edi, DWORD PTR [ebp-0x28]
 8081e76:  sub DWORD PTR [ebp-0x2c], edi
 8081e79:  mov DWORD PTR [ebx], eax
 8081e7b:  add eax, DWORD PTR [ebp-0x2c]
 8081e7e:  mov DWORD PTR [ebx+0x4], eax
 8081e81:  mov DWORD PTR [esp+0x8], 0x80802a0
 8081e89:  mov DWORD PTR [esp+0x4], 0x80d2ed8
 8081e91:  mov DWORD PTR [esp], ebx
 8081e94:  call 8073c10
 8081e99:  test eax, eax
 8081e9b:  je 8081ea5
 8081e9d:  cmp ebx, DWORD PTR [eax]
 8081e9f:  je 8081d2a
 8081ea5:  mov DWORD PTR [esp], ebx
 8081ea8:  call 804b4a0
 8081ead:  mov ecx, DWORD PTR [ebp-0x40]
 8081eb0:  mov eax, DWORD PTR [ecx]
 8081eb2:  jmp 8081a37
 8081eb7:  nop
 8081eb8:  mov ebx, DWORD PTR [ebx+0x14]
 8081ebb:  jmp 8081e17
 8081ec0:  mov edx, DWORD PTR ds:0x80d2a48
 8081ec6:  lea eax, [edx+0x1]
 8081ec9:  mov ds:0x80d2a48, eax
 8081ece:  lea eax, [ebp-0x14]
 8081ed1:  mov DWORD PTR [esp+0x4], eax
 8081ed5:  lea eax, [ebp-0x10]
 8081ed8:  mov DWORD PTR [esp+0x8], edx
 8081edc:  mov DWORD PTR [esp], eax
 8081edf:  mov ecx, DWORD PTR [ebp-0x48]
 8081ee2:  mov eax, DWORD PTR [ebp-0x5c]
 8081ee5:  mov edx, DWORD PTR [ebp-0x54]
 8081ee8:  call 8081240
 8081eed:  mov ecx, DWORD PTR [ebp-0x40]
 8081ef0:  mov eax, DWORD PTR [ecx]
 8081ef2:  sub esp, 0xc
 8081ef5:  jmp 8081a37
 8081efa:  mov edi, DWORD PTR [ebp-0x4c]
 8081efd:  mov ebx, DWORD PTR [ebp-0x58]
 8081f00:  mov ecx, 0xffffffe8
 8081f06:  mov DWORD PTR [ebx+ecx], edi
 8081f09:  lea esp, [ebp-0xc]
 8081f0c:  pop ebx
 8081f0d:  pop esi
 8081f0e:  pop edi
 8081f0f:  pop ebp
 8081f10:  ret
 8081f11:  mov edi, DWORD PTR [ebp-0x40]
 8081f14:  mov eax, DWORD PTR [edi]
 8081f16:  jmp 8081a37
 8081f1b:  call 8081610
 8081f20:  jmp 80819a7
 8081f25:  mov eax, DWORD PTR [ebx+0x8]
 8081f28:  cmp DWORD PTR [edi+0x8], eax
 8081f2b:  nop
 8081f2c:  lea esi, [esi]
 8081f30:  jl 8081f4e
 8081f32:  lea esi, [esi]
 8081f38:  jne 8081af0
 8081f3e:  mov eax, DWORD PTR [edi+0xc]
 8081f41:  cmp eax, DWORD PTR [ebx+0xc]
 8081f44:  lea esi, [esi]
 8081f48:  jge 8081af0
 8081f4e:  mov eax, DWORD PTR [ebx+0x14]
 8081f51:  mov edx, DWORD PTR [ebp-0x3c]
 8081f54:  mov DWORD PTR [edi+0x14], eax
 8081f57:  mov eax, DWORD PTR [ebx+0x1c]
 8081f5a:  mov DWORD PTR [edi+0x1c], eax
 8081f5d:  mov eax, DWORD PTR [ebx+0x18]
 8081f60:  mov DWORD PTR [edi+0x18], eax
 8081f63:  mov DWORD PTR [edx], edi
 8081f65:  mov DWORD PTR [esp], ebx
 8081f68:  call 804b4a0
 8081f6d:  jmp 8081af0

08081f72 <_L_lock_633>:
 8081f72:  lea ecx, ds:0x80d2a4c
 8081f78:  call 8050230
 8081f7d:  jmp 8081638

08081f82 <_L_unlock_650>:
 8081f82:  lea eax, ds:0x80d2a4c
 8081f88:  call 8050260
 8081f8d:  jmp 808165a
 8081f92:  nop
 8081f93:  nop
 8081f94:  nop
 8081f95:  nop
 8081f96:  nop
 8081f97:  nop
 8081f98:  nop
 8081f99:  nop
 8081f9a:  nop
 8081f9b:  nop
 8081f9c:  nop
 8081f9d:  nop
 8081f9e:  nop
 8081f9f:  nop

08081fa0 <__gconv_get_builtin_trans>:
 8081fa0:  push ebp
 8081fa1:  mov ebp, esp
 8081fa3:  push esi
 8081fa4:  mov esi, edx
 8081fa6:  push ebx
 8081fa7:  mov ebx, eax
 8081fa9:  sub esp, 0x10
 8081fac:  mov eax, ds:0x80b5b60
 8081fb1:  mov DWORD PTR [esp], ebx
 8081fb4:  mov DWORD PTR [esp+0x4], eax
 8081fb8:  call 806af90
 8081fbd:  xor edx, edx
 8081fbf:  test eax, eax
 8081fc1:  je 8082128
 8081fc7:  mov eax, ds:0x80b5b70
 8081fcc:  mov DWORD PTR [esp], ebx
 8081fcf:  mov DWORD PTR [esp+0x4], eax
 8081fd3:  call 806af90
 8081fd8:  mov edx, 0x1
 8081fdd:  test eax, eax
 8081fdf:  je 8082128
 8081fe5:  mov eax, ds:0x80b5b80
 8081fea:  mov DWORD PTR [esp], ebx
 8081fed:  mov DWORD PTR [esp+0x4], eax
 8081ff1:  call 806af90
 8081ff6:  mov edx, 0x2
 8081ffb:  test eax, eax
 8081ffd:  je 8082128
 8082003:  mov eax, ds:0x80b5b90
 8082008:  mov DWORD PTR [esp], ebx
 808200b:  mov DWORD PTR [esp+0x4], eax
 808200f:  call 806af90
 8082014:  mov edx, 0x3
 8082019:  test eax, eax
 808201b:  je 8082128
 8082021:  mov eax, ds:0x80b5ba0
 8082026:  mov DWORD PTR [esp], ebx
 8082029:  mov DWORD PTR [esp+0x4], eax
 808202d:  call 806af90
 8082032:  mov edx, 0x4
 8082037:  test eax, eax
 8082039:  je 8082128
 808203f:  mov eax, ds:0x80b5bb0
 8082044:  mov DWORD PTR [esp], ebx
 8082047:  mov DWORD PTR [esp+0x4], eax
 808204b:  call 806af90
 8082050:  mov edx, 0x5
 8082055:  test eax, eax
 8082057:  je 8082128
 808205d:  mov eax, ds:0x80b5bc0
 8082062:  mov DWORD PTR [esp], ebx
 8082065:  mov DWORD PTR [esp+0x4], eax
 8082069:  call 806af90
 808206e:  mov edx, 0x6
 8082073:  test eax, eax
 8082075:  je 8082128
 808207b:  mov eax, ds:0x80b5bd0
 8082080:  mov DWORD PTR [esp], ebx
 8082083:  mov DWORD PTR [esp+0x4], eax
 8082087:  call 806af90
 808208c:  mov edx, 0x7
 8082091:  test eax, eax
 8082093:  je 8082128
 8082099:  mov eax, ds:0x80b5be0
 808209e:  mov DWORD PTR [esp], ebx
 80820a1:  mov DWORD PTR [esp+0x4], eax
 80820a5:  call 806af90
 80820aa:  mov edx, 0x8
 80820af:  test eax, eax
 80820b1:  je 8082128
 80820b3:  mov eax, ds:0x80b5bf0
 80820b8:  mov DWORD PTR [esp], ebx
 80820bb:  mov DWORD PTR [esp+0x4], eax
 80820bf:  call 806af90
 80820c4:  mov edx, 0x9
 80820c9:  test eax, eax
 80820cb:  je 8082128
 80820cd:  mov eax, ds:0x80b5c00
 80820d2:  mov DWORD PTR [esp], ebx
 80820d5:  mov DWORD PTR [esp+0x4], eax
 80820d9:  call 806af90
 80820de:  mov edx, 0xa
 80820e3:  test eax, eax
 80820e5:  je 8082128
 80820e7:  mov eax, ds:0x80b5c10
 80820ec:  mov DWORD PTR [esp], ebx
 80820ef:  mov DWORD PTR [esp+0x4], eax
 80820f3:  call 806af90
 80820f8:  test eax, eax
 80820fa:  je 8082120
 80820fc:  mov DWORD PTR [esp+0xc], 0x80b5b17
 8082104:  mov DWORD PTR [esp+0x8], 0x48
 808210c:  mov DWORD PTR [esp+0x4], 0x80b5b07
 8082114:  mov DWORD PTR [esp], 0x80b5b34
 808211b:  call 8051490
 8082120:  mov edx, 0xb
 8082125:  lea esi, [esi]
 8082128:  shl edx, 0x4
 808212b:  mov eax, DWORD PTR [edx+0x80b5b64]
 8082131:  mov DWORD PTR [esi+0x1c], 0x0
 8082138:  mov DWORD PTR [esi+0x20], 0x0
 808213f:  mov DWORD PTR [esi], 0x0
 8082145:  mov DWORD PTR [esi+0x14], eax
 8082148:  mov eax, DWORD PTR [edx+0x80b5b68]
 808214e:  mov DWORD PTR [esi+0x4], 0x0
 8082155:  mov DWORD PTR [esi+0x34], 0x0
 808215c:  mov DWORD PTR [esi+0x18], eax
 808215f:  movsx eax, BYTE PTR [edx+0x80b5b6c]
 8082166:  mov DWORD PTR [esi+0x24], eax
 8082169:  movsx eax, BYTE PTR [edx+0x80b5b6d]
 8082170:  mov DWORD PTR [esi+0x28], eax
 8082173:  movsx eax, BYTE PTR [edx+0x80b5b6e]
 808217a:  mov DWORD PTR [esi+0x2c], eax
 808217d:  movsx eax, BYTE PTR [edx+0x80b5b6f]
 8082184:  mov DWORD PTR [esi+0x30], eax
 8082187:  add esp, 0x10
 808218a:  pop ebx
 808218b:  pop esi
 808218c:  pop ebp
 808218d:  ret
 808218e:  nop
 808218f:  nop

08082190 <__gconv_btwoc_ascii>:
 8082190:  push ebp
 8082191:  mov ebp, esp
 8082193:  movsx edx, BYTE PTR [ebp+0xc]
 8082197:  pop ebp
 8082198:  movzx eax, dl
 808219b:  sar edx, 0x1f
 808219e:  or eax, edx
 80821a0:  ret
 80821a1:  jmp 80821b0
 80821a3:  nop
 80821a4:  nop
 80821a5:  nop
 80821a6:  nop
 80821a7:  nop
 80821a8:  nop
 80821a9:  nop
 80821aa:  nop
 80821ab:  nop
 80821ac:  nop
 80821ad:  nop
 80821ae:  nop
 80821af:  nop

080821b0 <__gconv_transform_internal_ucs2>:
 80821b0:  push ebp
 80821b1:  mov ebp, esp
 80821b3:  push edi
 80821b4:  push esi
 80821b5:  push ebx
 80821b6:  sub esp, 0x68
 80821b9:  mov ecx, DWORD PTR [ebp+0xc]
 80821bc:  mov eax, DWORD PTR [ebp+0x8]
 80821bf:  mov edx, DWORD PTR [ebp+0xc]
 80821c2:  mov ebx, DWORD PTR [ebp+0x20]
 80821c5:  mov esi, DWORD PTR [ecx+0x8]
 80821c8:  add eax, 0x3c
 80821cb:  add edx, 0x24
 80821ce:  mov DWORD PTR [ebp-0x4c], eax
 80821d1:  test esi, 0x1
 80821d7:  mov DWORD PTR [ebp-0x48], edx
 80821da:  mov DWORD PTR [ebp-0x44], 0x0
 80821e1:  jne 8082203
 80821e3:  mov edx, DWORD PTR [ebp+0x8]
 80821e6:  mov eax, DWORD PTR [ebp-0x4c]
 80821e9:  mov edi, DWORD PTR [edx+0x3c]
 80821ec:  mov eax, DWORD PTR [eax+0x14]
 80821ef:  test edi, edi
 80821f1:  mov DWORD PTR [ebp-0x44], eax
 80821f4:  je 8082203
 80821f6:  ror eax, 0x9
 80821f9:  xor eax, DWORD PTR gs:0x18
 8082200:  mov DWORD PTR [ebp-0x44], eax
 8082203:  test ebx, ebx
 8082205:  jne 808285d
 808220b:  mov edx, DWORD PTR [ebp+0x18]
 808220e:  test edx, edx
 8082210:  jne 80828cf
 8082216:  mov edx, DWORD PTR [ebp+0xc]
 8082219:  mov edx, DWORD PTR [edx]
 808221b:  mov DWORD PTR [ebp-0x3c], edx
 808221e:  cmp DWORD PTR [ebp+0x1c], 0x1
 8082222:  mov ebx, DWORD PTR [ebp+0xc]
 8082225:  lea eax, [ebp-0x10]
 8082228:  mov DWORD PTR [ebp-0x34], eax
 808222b:  sbb eax, eax
 808222d:  not eax
 808222f:  and DWORD PTR [ebp-0x34], eax
 8082232:  mov eax, DWORD PTR [ebp+0x24]
 8082235:  mov ebx, DWORD PTR [ebx+0x4]
 8082238:  mov DWORD PTR [ebp-0x10], 0x0
 808223f:  test eax, eax
 8082241:  mov DWORD PTR [ebp-0x38], ebx
 8082244:  je 8082258
 8082246:  mov edx, DWORD PTR [ebp+0xc]
 8082249:  mov edx, DWORD PTR [edx+0x14]
 808224c:  test BYTE PTR [edx], 0x7
 808224f:  mov DWORD PTR [ebp-0x20], edx
 8082252:  jne 808256a
 8082258:  mov ecx, DWORD PTR [ebp-0x3c]
 808225b:  nop
 808225c:  lea esi, [esi]
 8082260:  mov edx, DWORD PTR [ebp+0x10]
 8082263:  and esi, 0x2
 8082266:  mov edi, 0x4
 808226b:  mov DWORD PTR [ebp-0x24], esi
 808226e:  mov DWORD PTR [ebp-0x50], ecx
 8082271:  mov edx, DWORD PTR [edx]
 8082273:  mov DWORD PTR [ebp-0x1c], ecx
 8082276:  mov DWORD PTR [ebp-0x40], edx
 8082279:  mov ebx, edx
 808227b:  mov DWORD PTR [ebp-0x18], edx
 808227e:  xchg ax, ax
 8082280:  cmp DWORD PTR [ebp+0x14], ebx
 8082283:  je 8082358
 8082289:  lea esi, [ebx+0x4]
 808228c:  cmp DWORD PTR [ebp+0x14], esi
 808228f:  jb 8082548
 8082295:  mov ecx, DWORD PTR [ebp-0x50]
 8082298:  add ecx, 0x2
 808229b:  cmp DWORD PTR [ebp-0x38], ecx
 808229e:  jb 8082552
 80822a4:  mov edx, DWORD PTR [ebx]
 80822a6:  cmp edx, 0xffff
 80822ac:  jbe 8082458
 80822b2:  shr edx, 0x7
 80822b5:  cmp edx, 0x1c00
 80822bb:  je 80824d0
 80822c1:  mov eax, DWORD PTR [ebp-0x34]
 80822c4:  test eax, eax
 80822c6:  je 808251b
 80822cc:  mov eax, DWORD PTR [ebp+0xc]
 80822cf:  mov ebx, DWORD PTR [eax+0x20]
 80822d2:  test ebx, ebx
 80822d4:  jne 80822eb
 80822d6:  jmp 80824ae
 80822db:  nop
 80822dc:  lea esi, [esi]
 80822e0:  mov ebx, DWORD PTR [ebx+0x10]
 80822e3:  test ebx, ebx
 80822e5:  je 80824a8
 80822eb:  mov eax, DWORD PTR [ebx]
 80822ed:  mov DWORD PTR [esp], eax
 80822f0:  call 807f350
 80822f5:  mov edx, DWORD PTR [ebp-0x34]
 80822f8:  lea ecx, [ebp-0x1c]
 80822fb:  mov DWORD PTR [esp+0x18], ecx
 80822ff:  mov DWORD PTR [esp+0x1c], edx
 8082303:  mov eax, DWORD PTR [ebp+0x14]
 8082306:  lea edx, [ebp-0x18]
 8082309:  mov DWORD PTR [esp+0x10], edx
 808230d:  mov DWORD PTR [esp+0x14], eax
 8082311:  mov ecx, DWORD PTR [ebp+0x10]
 8082314:  mov eax, DWORD PTR [ecx]
 8082316:  mov DWORD PTR [esp+0xc], eax
 808231a:  mov eax, DWORD PTR [ebx+0xc]
 808231d:  mov DWORD PTR [esp+0x8], eax
 8082321:  mov eax, DWORD PTR [ebp+0xc]
 8082324:  mov DWORD PTR [esp+0x4], eax
 8082328:  mov edx, DWORD PTR [ebp+0x8]
 808232b:  mov DWORD PTR [esp], edx
 808232e:  call DWORD PTR [ebx]
 8082330:  cmp eax, 0x6
 8082333:  mov edi, eax
 8082335:  je 80822e0
 8082337:  cmp eax, 0x5
 808233a:  je 808255c
 8082340:  mov ebx, DWORD PTR [ebp-0x1c]
 8082343:  mov DWORD PTR [ebp-0x50], ebx
 8082346:  mov ebx, DWORD PTR [ebp-0x18]
 8082349:  cmp DWORD PTR [ebp+0x14], ebx
 808234c:  jne 8082289
 8082352:  lea esi, [esi]
 8082358:  mov edx, DWORD PTR [ebp+0x18]
 808235b:  mov eax, DWORD PTR [ebp+0x10]
 808235e:  test edx, edx
 8082360:  mov DWORD PTR [eax], ebx
 8082362:  jne 8082530
 8082368:  mov eax, DWORD PTR [ebp+0xc]
 808236b:  mov ebx, DWORD PTR [eax+0x20]
 808236e:  test ebx, ebx
 8082370:  je 80823b5
 8082372:  lea esi, [esi]
 8082378:  mov eax, DWORD PTR [ebx+0x4]
 808237b:  test eax, eax
 808237d:  je 80823ae
 808237f:  mov DWORD PTR [esp], eax
 8082382:  call 807f350
 8082387:  mov edx, DWORD PTR [ebp-0x50]
 808238a:  mov DWORD PTR [esp+0x10], edx
 808238e:  mov ecx, DWORD PTR [ebp-0x3c]
 8082391:  mov DWORD PTR [esp+0xc], ecx
 8082395:  mov edx, DWORD PTR [ebp+0x10]
 8082398:  mov eax, DWORD PTR [edx]
 808239a:  mov DWORD PTR [esp+0x8], eax
 808239e:  mov ecx, DWORD PTR [ebp-0x40]
 80823a1:  mov DWORD PTR [esp+0x4], ecx
 80823a5:  mov eax, DWORD PTR [ebx+0xc]
 80823a8:  mov DWORD PTR [esp], eax
 80823ab:  call DWORD PTR [ebx+0x4]
 80823ae:  mov ebx, DWORD PTR [ebx+0x10]
 80823b1:  test ebx, ebx
 80823b3:  jne 8082378
 80823b5:  mov ebx, DWORD PTR [ebp+0xc]
 80823b8:  add DWORD PTR [ebx+0xc], 0x1
 80823bc:  test BYTE PTR [ebx+0x8], 0x1
 80823c0:  jne 808272c
 80823c6:  mov ecx, DWORD PTR [ebp-0x50]
 80823c9:  cmp DWORD PTR [ebp-0x3c], ecx
 80823cc:  jae 8082436
 80823ce:  mov ebx, DWORD PTR [ebp+0xc]
 80823d1:  mov eax, DWORD PTR [ebx]
 80823d3:  mov DWORD PTR [ebp-0x1c], eax
 80823d6:  mov eax, DWORD PTR [ebp-0x44]
 80823d9:  mov DWORD PTR [esp], eax
 80823dc:  call 807f350
 80823e1:  mov edx, DWORD PTR [ebp+0x24]
 80823e4:  mov DWORD PTR [esp+0x18], 0x0
 80823ec:  mov DWORD PTR [esp+0x1c], edx
 80823f0:  mov ecx, DWORD PTR [ebp+0x1c]
 80823f3:  mov DWORD PTR [esp+0x10], 0x0
 80823fb:  mov DWORD PTR [esp+0x14], ecx
 80823ff:  mov ebx, DWORD PTR [ebp-0x50]
 8082402:  mov DWORD PTR [esp+0xc], ebx
 8082406:  lea ebx, [ebp-0x1c]
 8082409:  mov DWORD PTR [esp+0x8], ebx
 808240d:  mov eax, DWORD PTR [ebp-0x48]
 8082410:  mov DWORD PTR [esp+0x4], eax
 8082414:  mov edx, DWORD PTR [ebp-0x4c]
 8082417:  mov DWORD PTR [esp], edx
 808241a:  call DWORD PTR [ebp-0x44]
 808241d:  cmp eax, 0x4
 8082420:  mov edx, eax
 8082422:  je 80824e0
 8082428:  mov eax, DWORD PTR [ebp-0x1c]
 808242b:  mov edi, edx
 808242d:  cmp eax, DWORD PTR [ebp-0x50]
 8082430:  jne 8082785
 8082436:  test edi, edi
 8082438:  jne 80824f6
 808243e:  mov ebx, DWORD PTR [ebp+0xc]
 8082441:  mov eax, DWORD PTR [ebp+0xc]
 8082444:  mov ebx, DWORD PTR [ebx]
 8082446:  mov esi, DWORD PTR [eax+0x8]
 8082449:  mov DWORD PTR [ebp-0x3c], ebx
 808244c:  mov ecx, ebx
 808244e:  jmp 8082260
 8082453:  nop
 8082454:  lea esi, [esi]
 8082458:  lea eax, [edx-0xd800]
 808245e:  cmp eax, 0x7ff
 8082463:  ja 8082490
 8082465:  mov edi, DWORD PTR [ebp-0x34]
 8082468:  test edi, edi
 808246a:  je 808251b
 8082470:  mov ecx, DWORD PTR [ebp-0x24]
 8082473:  test ecx, ecx
 8082475:  je 808251b
 808247b:  mov ecx, DWORD PTR [ebp-0x34]
 808247e:  mov edi, 0x6
 8082483:  mov ebx, esi
 8082485:  mov DWORD PTR [ebp-0x18], esi
 8082488:  add DWORD PTR [ecx], 0x1
 808248b:  jmp 8082280
 8082490:  mov ebx, DWORD PTR [ebp-0x50]
 8082493:  mov DWORD PTR [ebp-0x1c], ecx
 8082496:  mov DWORD PTR [ebp-0x18], esi
 8082499:  mov DWORD PTR [ebp-0x50], ecx
 808249c:  mov WORD PTR [ebx], dx
 808249f:  mov ebx, esi
 80824a1:  jmp 8082280
 80824a6:  xchg ax, ax
 80824a8:  mov ecx, DWORD PTR [ebp-0x1c]
 80824ab:  mov DWORD PTR [ebp-0x50], ecx
 80824ae:  mov eax, DWORD PTR [ebp-0x24]
 80824b1:  test eax, eax
 80824b3:  je 8082518
 80824b5:  mov edx, DWORD PTR [ebp-0x34]
 80824b8:  mov edi, 0x6
 80824bd:  add DWORD PTR [ebp-0x18], 0x4
 80824c1:  mov ebx, DWORD PTR [ebp-0x18]
 80824c4:  add DWORD PTR [edx], 0x1
 80824c7:  jmp 8082280
 80824cc:  lea esi, [esi]
 80824d0:  mov DWORD PTR [ebp-0x18], esi
 80824d3:  mov ebx, esi
 80824d5:  jmp 8082280
 80824da:  lea esi, [esi]
 80824e0:  cmp edi, 0x5
 80824e3:  je 808243e
 80824e9:  test edi, edi
 80824eb:  nop
 80824ec:  lea esi, [esi]
 80824f0:  je 808243e
 80824f6:  mov eax, DWORD PTR [ebp+0x24]
 80824f9:  test eax, eax
 80824fb:  nop
 80824fc:  lea esi, [esi]
 8082500:  je 808250e
 8082502:  cmp edi, 0x7
 8082505:  lea esi, [esi]
 8082508:  je 80826d7
 808250e:  add esp, 0x68
 8082511:  mov eax, edi
 8082513:  pop ebx
 8082514:  pop esi
 8082515:  pop edi
 8082516:  pop ebp
 8082517:  ret
 8082518:  mov ebx, DWORD PTR [ebp-0x18]
 808251b:  mov edx, DWORD PTR [ebp+0x18]
 808251e:  mov edi, 0x6
 8082523:  mov eax, DWORD PTR [ebp+0x10]
 8082526:  test edx, edx
 8082528:  mov DWORD PTR [eax], ebx
 808252a:  je 8082368
 8082530:  mov ecx, DWORD PTR [ebp-0x50]
 8082533:  mov eax, edi
 8082535:  mov edx, DWORD PTR [ebp+0x18]
 8082538:  mov DWORD PTR [edx], ecx
 808253a:  add esp, 0x68
 808253d:  pop ebx
 808253e:  pop esi
 808253f:  pop edi
 8082540:  pop ebp
 8082541:  ret
 8082542:  lea esi, [esi]
 8082548:  mov edi, 0x7
 808254d:  jmp 8082358
 8082552:  mov edi, 0x5
 8082557:  jmp 8082358
 808255c:  mov eax, DWORD PTR [ebp-0x1c]
 808255f:  mov ebx, DWORD PTR [ebp-0x18]
 8082562:  mov DWORD PTR [ebp-0x50], eax
 8082565:  jmp 8082358
 808256a:  mov eax, DWORD PTR [ebp+0x18]
 808256d:  test eax, eax
 808256f:  jne 80827dc
 8082575:  mov ebx, DWORD PTR [ebp+0x10]
 8082578:  xor edx, edx
 808257a:  mov eax, DWORD PTR [ebp-0x3c]
 808257d:  mov ecx, DWORD PTR [ebx]
 808257f:  lea ebx, [ebp-0x14]
 8082582:  mov DWORD PTR [ebp-0x18], eax
 8082585:  mov DWORD PTR [ebp-0x54], ebx
 8082588:  mov DWORD PTR [ebp-0x1c], ecx
 808258b:  mov ebx, DWORD PTR [ebp-0x20]
 808258e:  movzx eax, BYTE PTR [ebx+edx+0x4]
 8082593:  mov BYTE PTR [ebp+edx-0x14], al
 8082597:  mov eax, DWORD PTR [ebx]
 8082599:  add edx, 0x1
 808259c:  and eax, 0x7
 808259f:  cmp edx, eax
 80825a1:  jb 808258b
 80825a3:  sub ecx, edx
 80825a5:  mov ebx, edx
 80825a7:  lea eax, [ecx+0x4]
 80825aa:  cmp DWORD PTR [ebp+0x14], eax
 80825ad:  jb 808273e
 80825b3:  mov edx, DWORD PTR [ebp-0x3c]
 80825b6:  mov edi, 0x5
 80825bb:  add edx, 0x2
 80825be:  cmp DWORD PTR [ebp-0x38], edx
 80825c1:  mov DWORD PTR [ebp-0x28], edx
 80825c4:  jb 808250e
 80825ca:  lea ecx, [ebp-0x14]
 80825cd:  add ecx, ebx
 80825cf:  mov edx, DWORD PTR [ebp-0x1c]
 80825d2:  add ebx, 0x1
 80825d5:  movzx eax, BYTE PTR [edx]
 80825d8:  mov BYTE PTR [ecx], al
 80825da:  lea eax, [edx+0x1]
 80825dd:  add ecx, 0x1
 80825e0:  cmp ebx, 0x3
 80825e3:  mov DWORD PTR [ebp-0x1c], eax
 80825e6:  jbe 8082771
 80825ec:  mov edx, DWORD PTR [ebp-0x14]
 80825ef:  lea ecx, [ebp-0x14]
 80825f2:  mov eax, ecx
 80825f4:  add eax, ebx
 80825f6:  mov DWORD PTR [ebp-0x1c], ecx
 80825f9:  cmp edx, 0xffff
 80825ff:  mov DWORD PTR [ebp-0x30], eax
 8082602:  jbe 8082800
 8082608:  shr edx, 0x7
 808260b:  cmp edx, 0x1c00
 8082611:  je 8082839
 8082617:  mov eax, DWORD PTR [ebp-0x34]
 808261a:  test eax, eax
 808261c:  je 808282f
 8082622:  mov edx, DWORD PTR [ebp+0xc]
 8082625:  mov edx, DWORD PTR [edx+0x20]
 8082628:  test edx, edx
 808262a:  mov DWORD PTR [ebp-0x2c], edx
 808262d:  je 8082796
 8082633:  lea ebx, [ebp-0x1c]
 8082636:  jmp 8082649
 8082638:  mov ecx, DWORD PTR [ebp-0x2c]
 808263b:  mov ecx, DWORD PTR [ecx+0x10]
 808263e:  test ecx, ecx
 8082640:  mov DWORD PTR [ebp-0x2c], ecx
 8082643:  je 8082796
 8082649:  mov ecx, DWORD PTR [ebp-0x2c]
 808264c:  mov eax, DWORD PTR [ecx]
 808264e:  mov DWORD PTR [esp], eax
 8082651:  call 807f350
 8082656:  mov eax, DWORD PTR [ebp-0x34]
 8082659:  lea edx, [ebp-0x18]
 808265c:  mov DWORD PTR [esp+0x18], edx
 8082660:  mov DWORD PTR [esp+0x1c], eax
 8082664:  mov ecx, DWORD PTR [ebp-0x30]
 8082667:  mov DWORD PTR [esp+0x10], ebx
 808266b:  mov DWORD PTR [esp+0x14], ecx
 808266f:  mov edx, DWORD PTR [ebp+0x10]
 8082672:  mov eax, DWORD PTR [edx]
 8082674:  mov DWORD PTR [esp+0xc], eax
 8082678:  mov ecx, DWORD PTR [ebp-0x2c]
 808267b:  mov eax, DWORD PTR [ecx+0xc]
 808267e:  mov DWORD PTR [esp+0x8], eax
 8082682:  mov eax, DWORD PTR [ebp+0xc]
 8082685:  mov DWORD PTR [esp+0x4], eax
 8082689:  mov edx, DWORD PTR [ebp+0x8]
 808268c:  mov DWORD PTR [esp], edx
 808268f:  call DWORD PTR [ecx]
 8082691:  cmp eax, 0x6
 8082694:  mov edi, eax
 8082696:  je 8082638
 8082698:  mov eax, DWORD PTR [ebp-0x1c]
 808269b:  cmp eax, DWORD PTR [ebp-0x54]
 808269e:  je 8082924
 80826a4:  mov ecx, DWORD PTR [ebp-0x20]
 80826a7:  mov edx, eax
 80826a9:  sub edx, DWORD PTR [ebp-0x54]
 80826ac:  mov eax, DWORD PTR [ecx]
 80826ae:  and eax, 0x7
 80826b1:  cmp edx, eax
 80826b3:  jle 8082900
 80826b9:  mov ebx, DWORD PTR [ebp+0x10]
 80826bc:  sub edx, eax
 80826be:  mov ecx, DWORD PTR [ebp+0xc]
 80826c1:  add DWORD PTR [ebx], edx
 80826c3:  mov edx, DWORD PTR [ebp-0x20]
 80826c6:  mov eax, DWORD PTR [ebp-0x18]
 80826c9:  and DWORD PTR [edx], 0xf8
 80826cc:  mov esi, DWORD PTR [ecx+0x8]
 80826cf:  mov DWORD PTR [ebp-0x3c], eax
 80826d2:  jmp 8082258
 80826d7:  mov edx, DWORD PTR [ebp+0x10]
 80826da:  mov eax, DWORD PTR [ebp+0x14]
 80826dd:  mov ebx, DWORD PTR [edx]
 80826df:  sub eax, ebx
 80826e1:  cmp eax, 0x3
 80826e4:  jg 80827b8
 80826ea:  xor esi, esi
 80826ec:  xor edx, edx
 80826ee:  cmp DWORD PTR [ebp+0x14], ebx
 80826f1:  mov ecx, ebx
 80826f3:  jbe 8082717
 80826f5:  mov eax, DWORD PTR [ebp+0xc]
 80826f8:  mov edx, DWORD PTR [eax+0x14]
 80826fb:  movzx eax, BYTE PTR [ecx]
 80826fe:  add ecx, 0x1
 8082701:  mov BYTE PTR [edx+esi+0x4], al
 8082705:  mov edx, DWORD PTR [ebp+0x10]
 8082708:  add esi, 0x1
 808270b:  mov DWORD PTR [edx], ecx
 808270d:  cmp DWORD PTR [ebp+0x14], ecx
 8082710:  ja 80826f5
 8082712:  mov edx, DWORD PTR [ebp+0x14]
 8082715:  sub edx, ebx
 8082717:  mov ecx, DWORD PTR [ebp+0xc]
 808271a:  mov edi, 0x7
 808271f:  mov eax, DWORD PTR [ecx+0x14]
 8082722:  and DWORD PTR [eax], 0xf8
 8082725:  or DWORD PTR [eax], edx
 8082727:  jmp 808250e
 808272c:  mov eax, DWORD PTR [ebp-0x50]
 808272f:  mov edx, DWORD PTR [ebp+0x1c]
 8082732:  mov DWORD PTR [ebx], eax
 8082734:  mov eax, DWORD PTR [ebp-0x10]
 8082737:  add DWORD PTR [edx], eax
 8082739:  jmp 80824f6
 808273e:  mov ecx, DWORD PTR [ebp+0x14]
 8082741:  mov eax, DWORD PTR [ebp+0x10]
 8082744:  mov DWORD PTR [eax], ecx
 8082746:  mov ebx, DWORD PTR [ebp-0x1c]
 8082749:  cmp ecx, ebx
 808274b:  jbe 8082767
 808274d:  mov eax, DWORD PTR [ebp-0x20]
 8082750:  lea edx, [eax+edx+0x4]
 8082754:  movzx eax, BYTE PTR [ebx]
 8082757:  add ebx, 0x1
 808275a:  mov BYTE PTR [edx], al
 808275c:  add edx, 0x1
 808275f:  cmp DWORD PTR [ebp+0x14], ebx
 8082762:  mov DWORD PTR [ebp-0x1c], ebx
 8082765:  ja 8082754
 8082767:  mov edi, 0x7
 808276c:  jmp 808250e
 8082771:  cmp DWORD PTR [ebp+0x14], eax
 8082774:  ja 80825cf
 808277a:  lea esi, [esi]
 8082780:  jmp 80825ec
 8082785:  mov ecx, DWORD PTR [ebp+0x10]
 8082788:  mov edi, edx
 808278a:  sub eax, DWORD PTR [ebp-0x50]
 808278d:  add eax, eax
 808278f:  add DWORD PTR [ecx], eax
 8082791:  jmp 8082436
 8082796:  and esi, 0x2
 8082799:  mov edi, 0x6
 808279e:  je 8082698
 80827a4:  mov ebx, DWORD PTR [ebp-0x34]
 80827a7:  mov edi, 0x6
 80827ac:  add DWORD PTR [ebp-0x1c], 0x4
 80827b0:  add DWORD PTR [ebx], 0x1
 80827b3:  jmp 8082698
 80827b8:  mov DWORD PTR [esp+0xc], 0x80b5f00
 80827c0:  mov DWORD PTR [esp+0x8], 0x312
 80827c8:  mov DWORD PTR [esp+0x4], 0x80b5c20
 80827d0:  mov DWORD PTR [esp], 0x80b5c87
 80827d7:  call 8051490
 80827dc:  mov DWORD PTR [esp+0xc], 0x80b5f00
 80827e4:  mov DWORD PTR [esp+0x8], 0x22f
 80827ec:  mov DWORD PTR [esp+0x4], 0x80b5c20
 80827f4:  mov DWORD PTR [esp], 0x80b5c34
 80827fb:  call 8051490
 8082800:  lea eax, [edx-0xd800]
 8082806:  cmp eax, 0x7ff
 808280b:  ja 8082846
 808280d:  mov eax, DWORD PTR [ebp-0x34]
 8082810:  test eax, eax
 8082812:  je 808282f
 8082814:  and esi, 0x2
 8082817:  je 808282f
 8082819:  lea eax, [ebp-0x10]
 808281c:  mov edi, 0x6
 8082821:  mov DWORD PTR [ebp-0x1c], eax
 8082824:  mov eax, DWORD PTR [ebp-0x34]
 8082827:  add DWORD PTR [eax], 0x1
 808282a:  jmp 8082698
 808282f:  mov edi, 0x6
 8082834:  jmp 808250e
 8082839:  lea eax, [ebp-0x10]
 808283c:  xor edi, edi
 808283e:  mov DWORD PTR [ebp-0x1c], eax
 8082841:  jmp 8082698
 8082846:  mov ecx, DWORD PTR [ebp-0x3c]
 8082849:  xor edi, edi
 808284b:  mov ebx, DWORD PTR [ebp-0x28]
 808284e:  add DWORD PTR [ebp-0x1c], 0x4
 8082852:  mov WORD PTR [ecx], dx
 8082855:  mov DWORD PTR [ebp-0x18], ebx
 8082858:  jmp 8082698
 808285d:  mov ecx, DWORD PTR [ebp+0x18]
 8082860:  test ecx, ecx
 8082862:  jne 80828dc
 8082864:  mov ecx, DWORD PTR [ebp+0xc]
 8082867:  xor edi, edi
 8082869:  mov eax, DWORD PTR [ecx+0x14]
 808286c:  mov DWORD PTR [eax], 0x0
 8082872:  mov DWORD PTR [eax+0x4], 0x0
 8082879:  test BYTE PTR [ecx+0x8], 0x1
 808287d:  jne 808250e
 8082883:  mov eax, DWORD PTR [ebp-0x44]
 8082886:  mov DWORD PTR [esp], eax
 8082889:  call 807f350
 808288e:  mov edx, DWORD PTR [ebp+0x24]
 8082891:  mov DWORD PTR [esp+0x18], ebx
 8082895:  mov DWORD PTR [esp+0x1c], edx
 8082899:  mov ecx, DWORD PTR [ebp+0x1c]
 808289c:  mov DWORD PTR [esp+0x10], 0x0
 80828a4:  mov DWORD PTR [esp+0xc], 0x0
 80828ac:  mov DWORD PTR [esp+0x8], 0x0
 80828b4:  mov DWORD PTR [esp+0x14], ecx
 80828b8:  mov ebx, DWORD PTR [ebp-0x48]
 80828bb:  mov DWORD PTR [esp+0x4], ebx
 80828bf:  mov eax, DWORD PTR [ebp-0x4c]
 80828c2:  mov DWORD PTR [esp], eax
 80828c5:  call DWORD PTR [ebp-0x44]
 80828c8:  mov edi, eax
 80828ca:  jmp 808250e
 80828cf:  mov ecx, DWORD PTR [ebp+0x18]
 80828d2:  mov ecx, DWORD PTR [ecx]
 80828d4:  mov DWORD PTR [ebp-0x3c], ecx
 80828d7:  jmp 808221e
 80828dc:  mov DWORD PTR [esp+0xc], 0x80b5f00
 80828e4:  mov DWORD PTR [esp+0x8], 0x1a0
 80828ec:  mov DWORD PTR [esp+0x4], 0x80b5c20
 80828f4:  mov DWORD PTR [esp], 0x80b5c34
 80828fb:  call 8051490
 8082900:  mov DWORD PTR [esp+0xc], 0x80b5ce6
 8082908:  mov DWORD PTR [esp+0x8], 0x1bc
 8082910:  mov DWORD PTR [esp+0x4], 0x80b5c4f
 8082918:  mov DWORD PTR [esp], 0x80b5d80
 808291f:  call 8051490
 8082924:  cmp edi, 0x7
 8082927:  je 808293d
 8082929:  test edi, edi
 808292b:  jne 808250e
 8082931:  mov eax, DWORD PTR [ebp+0xc]
 8082934:  mov esi, DWORD PTR [eax+0x8]
 8082937:  nop
 8082938:  jmp 8082258
 808293d:  lea eax, [ebp-0x10]
 8082940:  cmp DWORD PTR [ebp-0x30], eax
 8082943:  je 80829ee
 8082949:  mov ebx, DWORD PTR [ebp-0x20]
 808294c:  mov eax, DWORD PTR [ebp-0x30]
 808294f:  sub eax, DWORD PTR [ebp-0x54]
 8082952:  mov ecx, DWORD PTR [ebx]
 8082954:  mov edx, ecx
 8082956:  and edx, 0x7
 8082959:  sub eax, edx
 808295b:  mov edx, DWORD PTR [ebp+0x10]
 808295e:  add DWORD PTR [edx], eax
 8082960:  mov edx, ecx
 8082962:  mov eax, DWORD PTR [ebp-0x30]
 8082965:  and edx, 0xf8
 8082968:  sub eax, DWORD PTR [ebp-0x1c]
 808296b:  cmp eax, edx
 808296d:  jle 80829ca
 808296f:  cmp eax, 0x7
 8082972:  jg 80829a6
 8082974:  mov ecx, DWORD PTR [ebp-0x20]
 8082977:  or eax, edx
 8082979:  lea edx, [ebp-0x14]
 808297c:  cmp DWORD PTR [ebp-0x30], edx
 808297f:  mov DWORD PTR [ecx], eax
 8082981:  jbe 808250e
 8082987:  xor ecx, ecx
 8082989:  movzx eax, BYTE PTR [edx]
 808298c:  add edx, 0x1
 808298f:  mov ebx, DWORD PTR [ebp-0x20]
 8082992:  mov BYTE PTR [ebx+ecx+0x4], al
 8082996:  add ecx, 0x1
 8082999:  cmp DWORD PTR [ebp-0x30], edx
 808299c:  mov DWORD PTR [ebp-0x1c], edx
 808299f:  ja 8082989
 80829a1:  jmp 808250e
 80829a6:  mov DWORD PTR [esp+0xc], 0x80b5ce6
 80829ae:  mov DWORD PTR [esp+0x8], 0x1d9
 80829b6:  mov DWORD PTR [esp+0x4], 0x80b5c4f
 80829be:  mov DWORD PTR [esp], 0x80b5c74
 80829c5:  call 8051490
 80829ca:  mov DWORD PTR [esp+0xc], 0x80b5ce6
 80829d2:  mov DWORD PTR [esp+0x8], 0x1d8
 80829da:  mov DWORD PTR [esp+0x4], 0x80b5c4f
 80829e2:  mov DWORD PTR [esp], 0x80b5da8
 80829e9:  call 8051490
 80829ee:  mov DWORD PTR [esp+0xc], 0x80b5ce6
 80829f6:  mov DWORD PTR [esp+0x8], 0x1ce
 80829fe:  mov DWORD PTR [esp+0x4], 0x80b5c4f
 8082a06:  mov DWORD PTR [esp], 0x80b5c5f
 8082a0d:  call 8051490
 8082a12:  lea esi, [esi]
 8082a19:  lea edi, [edi]

08082a20 <__gconv_transform_ucs2_internal>:
 8082a20:  push ebp
 8082a21:  mov ebp, esp
 8082a23:  push edi
 8082a24:  push esi
 8082a25:  push ebx
 8082a26:  sub esp, 0x54
 8082a29:  mov eax, DWORD PTR [ebp+0x8]
 8082a2c:  mov esi, DWORD PTR [ebp+0xc]
 8082a2f:  mov ecx, DWORD PTR [ebp+0xc]
 8082a32:  mov ebx, DWORD PTR [ebp+0x20]
 8082a35:  lea edx, [eax+0x3c]
 8082a38:  mov DWORD PTR [ebp-0x40], edx
 8082a3b:  mov edx, DWORD PTR [esi+0x8]
 8082a3e:  add ecx, 0x24
 8082a41:  mov DWORD PTR [ebp-0x3c], ecx
 8082a44:  mov DWORD PTR [ebp-0x38], 0x0
 8082a4b:  test dl, 0x1
 8082a4e:  jne 8082a6d
 8082a50:  mov ecx, DWORD PTR [ebp-0x40]
 8082a53:  mov edi, DWORD PTR [eax+0x3c]
 8082a56:  mov ecx, DWORD PTR [ecx+0x14]
 8082a59:  test edi, edi
 8082a5b:  mov DWORD PTR [ebp-0x38], ecx
 8082a5e:  je 8082a6d
 8082a60:  ror ecx, 0x9
 8082a63:  xor ecx, DWORD PTR gs:0x18
 8082a6a:  mov DWORD PTR [ebp-0x38], ecx
 8082a6d:  test ebx, ebx
 8082a6f:  jne 8082fd5
 8082a75:  mov ebx, DWORD PTR [ebp+0x18]
 8082a78:  test ebx, ebx
 8082a7a:  jne 8082fc8
 8082a80:  mov ecx, DWORD PTR [ebp+0xc]
 8082a83:  mov ecx, DWORD PTR [ecx]
 8082a85:  mov DWORD PTR [ebp-0x30], ecx
 8082a88:  mov eax, DWORD PTR [ebp+0xc]
 8082a8b:  lea ecx, [ebp-0x14]
 8082a8e:  cmp DWORD PTR [ebp+0x1c], 0x1
 8082a92:  mov DWORD PTR [ebp-0x14], 0x0
 8082a99:  mov eax, DWORD PTR [eax+0x4]
 8082a9c:  mov DWORD PTR [ebp-0x2c], eax
 8082a9f:  sbb eax, eax
 8082aa1:  not eax
 8082aa3:  and ecx, eax
 8082aa5:  mov DWORD PTR [ebp-0x28], ecx
 8082aa8:  mov ecx, DWORD PTR [ebp+0x24]
 8082aab:  test ecx, ecx
 8082aad:  je 8082ac1
 8082aaf:  mov esi, DWORD PTR [ebp+0xc]
 8082ab2:  mov esi, DWORD PTR [esi+0x14]
 8082ab5:  test BYTE PTR [esi], 0x7
 8082ab8:  mov DWORD PTR [ebp-0x24], esi
 8082abb:  jne 8082d1f
 8082ac1:  mov eax, DWORD PTR [ebp+0x10]
 8082ac4:  mov eax, DWORD PTR [eax]
 8082ac6:  cmp DWORD PTR [ebp+0x14], eax
 8082ac9:  mov DWORD PTR [ebp-0x34], eax
 8082acc:  je 8082c81
 8082ad2:  lea esi, [esi]
 8082ad8:  mov ecx, eax
 8082ada:  add ecx, 0x2
 8082add:  cmp DWORD PTR [ebp+0x14], ecx
 8082ae0:  jb 8082dfc
 8082ae6:  mov eax, DWORD PTR [ebp-0x30]
 8082ae9:  add eax, 0x4
 8082aec:  cmp DWORD PTR [ebp-0x2c], eax
 8082aef:  jb 8082de9
 8082af5:  and edx, 0x2
 8082af8:  je 8082d8d
 8082afe:  mov eax, DWORD PTR [ebp-0x28]
 8082b01:  test eax, eax
 8082b03:  je 8082e0f
 8082b09:  mov eax, DWORD PTR [ebp-0x34]
 8082b0c:  mov edi, 0x4
 8082b11:  mov esi, DWORD PTR [ebp-0x30]
 8082b14:  jmp 8082b40
 8082b16:  xchg ax, ax
 8082b18:  mov edx, DWORD PTR [ebp-0x28]
 8082b1b:  mov edi, 0x6
 8082b20:  add DWORD PTR [edx], 0x1
 8082b23:  cmp DWORD PTR [ebp+0x14], ecx
 8082b26:  je 8082b5c
 8082b28:  lea edx, [ecx+0x2]
 8082b2b:  cmp DWORD PTR [ebp+0x14], edx
 8082b2e:  jb 8082b88
 8082b30:  lea eax, [esi+0x4]
 8082b33:  cmp DWORD PTR [ebp-0x2c], eax
 8082b36:  jb 8082d10
 8082b3c:  mov eax, ecx
 8082b3e:  mov ecx, edx
 8082b40:  movzx edx, WORD PTR [eax]
 8082b43:  lea eax, [edx+0x2800]
 8082b49:  cmp ax, 0x7ff
 8082b4d:  jbe 8082b18
 8082b4f:  movzx eax, dx
 8082b52:  mov DWORD PTR [esi], eax
 8082b54:  add esi, 0x4
 8082b57:  cmp DWORD PTR [ebp+0x14], ecx
 8082b5a:  jne 8082b28
 8082b5c:  mov ecx, DWORD PTR [ebp+0x14]
 8082b5f:  mov eax, DWORD PTR [ebp+0x18]
 8082b62:  mov edx, ecx
 8082b64:  mov ecx, DWORD PTR [ebp+0x10]
 8082b67:  mov DWORD PTR [ebp-0x1c], esi
 8082b6a:  test eax, eax
 8082b6c:  mov DWORD PTR [ecx], edx
 8082b6e:  je 8082b9e
 8082b70:  mov eax, DWORD PTR [ebp-0x1c]
 8082b73:  mov esi, DWORD PTR [ebp+0x18]
 8082b76:  mov DWORD PTR [esi], eax
 8082b78:  add esp, 0x54
 8082b7b:  mov eax, edi
 8082b7d:  pop ebx
 8082b7e:  pop esi
 8082b7f:  pop edi
 8082b80:  pop ebp
 8082b81:  ret
 8082b82:  lea esi, [esi]
 8082b88:  mov edx, ecx
 8082b8a:  mov edi, 0x7
 8082b8f:  mov DWORD PTR [ebp-0x1c], esi
 8082b92:  mov eax, DWORD PTR [ebp+0x18]
 8082b95:  mov ecx, DWORD PTR [ebp+0x10]
 8082b98:  test eax, eax
 8082b9a:  mov DWORD PTR [ecx], edx
 8082b9c:  jne 8082b70
 8082b9e:  mov edx, DWORD PTR [ebp+0xc]
 8082ba1:  mov ebx, DWORD PTR [edx+0x20]
 8082ba4:  test ebx, ebx
 8082ba6:  je 8082be2
 8082ba8:  mov eax, DWORD PTR [ebx+0x4]
 8082bab:  test eax, eax
 8082bad:  je 8082bdb
 8082baf:  mov DWORD PTR [esp], eax
 8082bb2:  call 807f350
 8082bb7:  mov DWORD PTR [esp+0x10], esi
 8082bbb:  mov ecx, DWORD PTR [ebp-0x30]
 8082bbe:  mov DWORD PTR [esp+0xc], ecx
 8082bc2:  mov edx, DWORD PTR [ebp+0x10]
 8082bc5:  mov eax, DWORD PTR [edx]
 8082bc7:  mov DWORD PTR [esp+0x8], eax
 8082bcb:  mov ecx, DWORD PTR [ebp-0x34]
 8082bce:  mov DWORD PTR [esp+0x4], ecx
 8082bd2:  mov eax, DWORD PTR [ebx+0xc]
 8082bd5:  mov DWORD PTR [esp], eax
 8082bd8:  call DWORD PTR [ebx+0x4]
 8082bdb:  mov ebx, DWORD PTR [ebx+0x10]
 8082bde:  test ebx, ebx
 8082be0:  jne 8082ba8
 8082be2:  mov eax, DWORD PTR [ebp+0xc]
 8082be5:  add DWORD PTR [eax+0xc], 0x1
 8082be9:  test BYTE PTR [eax+0x8], 0x1
 8082bed:  jne 8082e67
 8082bf3:  cmp DWORD PTR [ebp-0x30], esi
 8082bf6:  jae 8082c9d
 8082bfc:  mov edx, DWORD PTR [ebp+0xc]
 8082bff:  mov ecx, DWORD PTR [ebp-0x38]
 8082c02:  mov eax, DWORD PTR [edx]
 8082c04:  mov DWORD PTR [ebp-0x18], eax
 8082c07:  mov DWORD PTR [esp], ecx
 8082c0a:  call 807f350
 8082c0f:  mov eax, DWORD PTR [ebp+0x24]
 8082c12:  mov DWORD PTR [esp+0x18], 0x0
 8082c1a:  mov DWORD PTR [esp+0x1c], eax
 8082c1e:  mov edx, DWORD PTR [ebp+0x1c]
 8082c21:  lea eax, [ebp-0x18]
 8082c24:  mov DWORD PTR [esp+0x10], 0x0
 8082c2c:  mov DWORD PTR [esp+0xc], esi
 8082c30:  mov DWORD PTR [esp+0x8], eax
 8082c34:  mov DWORD PTR [esp+0x14], edx
 8082c38:  mov ecx, DWORD PTR [ebp-0x3c]
 8082c3b:  mov DWORD PTR [esp+0x4], ecx
 8082c3f:  mov eax, DWORD PTR [ebp-0x40]
 8082c42:  mov DWORD PTR [esp], eax
 8082c45:  call DWORD PTR [ebp-0x38]
 8082c48:  cmp eax, 0x4
 8082c4b:  mov ecx, eax
 8082c4d:  je 8082c98
 8082c4f:  mov eax, DWORD PTR [ebp-0x18]
 8082c52:  cmp eax, esi
 8082c54:  jne 8082ed8
 8082c5a:  test ecx, ecx
 8082c5c:  jne 808304b
 8082c62:  mov ecx, DWORD PTR [ebp+0xc]
 8082c65:  mov eax, DWORD PTR [ebp+0x10]
 8082c68:  mov esi, DWORD PTR [ebp+0xc]
 8082c6b:  mov ecx, DWORD PTR [ecx]
 8082c6d:  mov eax, DWORD PTR [eax]
 8082c6f:  cmp DWORD PTR [ebp+0x14], eax
 8082c72:  mov edx, DWORD PTR [esi+0x8]
 8082c75:  mov DWORD PTR [ebp-0x30], ecx
 8082c78:  mov DWORD PTR [ebp-0x34], eax
 8082c7b:  jne 8082ad8
 8082c81:  mov esi, DWORD PTR [ebp-0x30]
 8082c84:  mov edi, 0x4
 8082c89:  mov edx, DWORD PTR [ebp+0x14]
 8082c8c:  mov DWORD PTR [ebp-0x1c], esi
 8082c8f:  jmp 8082b92
 8082c94:  lea esi, [esi]
 8082c98:  cmp edi, 0x5
 8082c9b:  je 8082c62
 8082c9d:  mov eax, DWORD PTR [ebp+0x24]
 8082ca0:  test eax, eax
 8082ca2:  je 8082b78
 8082ca8:  cmp edi, 0x7
 8082cab:  nop
 8082cac:  lea esi, [esi]
 8082cb0:  jne 8082b78
 8082cb6:  mov eax, DWORD PTR [ebp+0x10]
 8082cb9:  mov esi, DWORD PTR [eax]
 8082cbb:  mov eax, DWORD PTR [ebp+0x14]
 8082cbe:  sub eax, esi
 8082cc0:  cmp eax, 0x3
 8082cc3:  jg 8082f5a
 8082cc9:  xor ebx, ebx
 8082ccb:  xor edx, edx
 8082ccd:  cmp DWORD PTR [ebp+0x14], esi
 8082cd0:  mov ecx, esi
 8082cd2:  jbe 8082cf6
 8082cd4:  mov eax, DWORD PTR [ebp+0xc]
 8082cd7:  mov edx, DWORD PTR [eax+0x14]
 8082cda:  movzx eax, BYTE PTR [ecx]
 8082cdd:  add ecx, 0x1
 8082ce0:  mov BYTE PTR [edx+ebx+0x4], al
 8082ce4:  mov edx, DWORD PTR [ebp+0x10]
 8082ce7:  add ebx, 0x1
 8082cea:  mov DWORD PTR [edx], ecx
 8082cec:  cmp DWORD PTR [ebp+0x14], ecx
 8082cef:  ja 8082cd4
 8082cf1:  mov edx, DWORD PTR [ebp+0x14]
 8082cf4:  sub edx, esi
 8082cf6:  mov ecx, DWORD PTR [ebp+0xc]
 8082cf9:  mov edi, 0x7
 8082cfe:  mov eax, DWORD PTR [ecx+0x14]
 8082d01:  and DWORD PTR [eax], 0xf8
 8082d04:  or DWORD PTR [eax], edx
 8082d06:  add esp, 0x54
 8082d09:  mov eax, edi
 8082d0b:  pop ebx
 8082d0c:  pop esi
 8082d0d:  pop edi
 8082d0e:  pop ebp
 8082d0f:  ret
 8082d10:  mov edx, ecx
 8082d12:  mov edi, 0x5
 8082d17:  mov DWORD PTR [ebp-0x1c], esi
 8082d1a:  jmp 8082b92
 8082d1f:  mov eax, DWORD PTR [ebp+0x18]
 8082d22:  test eax, eax
 8082d24:  jne 8083052
 8082d2a:  mov eax, DWORD PTR [ebp+0x10]
 8082d2d:  xor ebx, ebx
 8082d2f:  mov ecx, DWORD PTR [eax]
 8082d31:  mov esi, DWORD PTR [ebp-0x24]
 8082d34:  movzx eax, BYTE PTR [esi+ebx+0x4]
 8082d39:  mov BYTE PTR [ebp+ebx-0xe], al
 8082d3d:  mov eax, DWORD PTR [esi]
 8082d3f:  add ebx, 0x1
 8082d42:  and eax, 0x7
 8082d45:  cmp ebx, eax
 8082d47:  jb 8082d31
 8082d49:  mov eax, ecx
 8082d4b:  mov esi, ebx
 8082d4d:  sub eax, ebx
 8082d4f:  add eax, 0x2
 8082d52:  cmp DWORD PTR [ebp+0x14], eax
 8082d55:  jae 8082e79
 8082d5b:  mov edx, DWORD PTR [ebp+0x14]
 8082d5e:  mov eax, DWORD PTR [ebp+0x10]
 8082d61:  cmp edx, ecx
 8082d63:  mov DWORD PTR [eax], edx
 8082d65:  jbe 8082d7e
 8082d67:  mov esi, DWORD PTR [ebp-0x24]
 8082d6a:  lea edx, [esi+ebx+0x4]
 8082d6e:  movzx eax, BYTE PTR [ecx]
 8082d71:  add ecx, 0x1
 8082d74:  mov BYTE PTR [edx], al
 8082d76:  add edx, 0x1
 8082d79:  cmp DWORD PTR [ebp+0x14], ecx
 8082d7c:  ja 8082d6e
 8082d7e:  mov edi, 0x7
 8082d83:  add esp, 0x54
 8082d86:  mov eax, edi
 8082d88:  pop ebx
 8082d89:  pop esi
 8082d8a:  pop edi
 8082d8b:  pop ebp
 8082d8c:  ret
 8082d8d:  mov eax, DWORD PTR [ebp-0x28]
 8082d90:  test eax, eax
 8082d92:  je 8082f7e
 8082d98:  mov edx, DWORD PTR [ebp-0x34]
 8082d9b:  mov esi, DWORD PTR [ebp-0x30]
 8082d9e:  jmp 8082dcd
 8082da0:  movzx eax, bx
 8082da3:  mov DWORD PTR [esi], eax
 8082da5:  add esi, 0x4
 8082da8:  cmp DWORD PTR [ebp+0x14], ecx
 8082dab:  je 8082e5d
 8082db1:  lea ebx, [ecx+0x2]
 8082db4:  cmp DWORD PTR [ebp+0x14], ebx
 8082db7:  jb 8082b88
 8082dbd:  lea eax, [esi+0x4]
 8082dc0:  cmp DWORD PTR [ebp-0x2c], eax
 8082dc3:  jb 8082d10
 8082dc9:  mov edx, ecx
 8082dcb:  mov ecx, ebx
 8082dcd:  movzx ebx, WORD PTR [edx]
 8082dd0:  lea eax, [ebx+0x2800]
 8082dd6:  cmp ax, 0x7ff
 8082dda:  ja 8082da0
 8082ddc:  mov DWORD PTR [ebp-0x1c], esi
 8082ddf:  mov edi, 0x6
 8082de4:  jmp 8082b92
 8082de9:  mov esi, DWORD PTR [ebp-0x30]
 8082dec:  mov edi, 0x5
 8082df1:  mov edx, DWORD PTR [ebp-0x34]
 8082df4:  mov DWORD PTR [ebp-0x1c], esi
 8082df7:  jmp 8082b92
 8082dfc:  mov esi, DWORD PTR [ebp-0x30]
 8082dff:  mov edi, 0x7
 8082e04:  mov edx, DWORD PTR [ebp-0x34]
 8082e07:  mov DWORD PTR [ebp-0x1c], esi
 8082e0a:  jmp 8082b92
 8082e0f:  mov edx, DWORD PTR [ebp-0x34]
 8082e12:  mov esi, DWORD PTR [ebp-0x30]
 8082e15:  jmp 8082e41
 8082e17:  nop
 8082e18:  movzx eax, bx
 8082e1b:  mov DWORD PTR [esi], eax
 8082e1d:  add esi, 0x4
 8082e20:  cmp DWORD PTR [ebp+0x14], ecx
 8082e23:  je 8082e5d
 8082e25:  lea ebx, [ecx+0x2]
 8082e28:  cmp DWORD PTR [ebp+0x14], ebx
 8082e2b:  jb 8082b88
 8082e31:  lea eax, [esi+0x4]
 8082e34:  cmp DWORD PTR [ebp-0x2c], eax
 8082e37:  jb 8082d10
 8082e3d:  mov edx, ecx
 8082e3f:  mov ecx, ebx
 8082e41:  movzx ebx, WORD PTR [edx]
 8082e44:  lea eax, [ebx+0x2800]
 8082e4a:  cmp ax, 0x7ff
 8082e4e:  ja 8082e18
 8082e50:  mov DWORD PTR [ebp-0x1c], esi
 8082e53:  mov edi, 0x6
 8082e58:  jmp 8082b92
 8082e5d:  mov edi, 0x4
 8082e62:  jmp 8082b5f
 8082e67:  mov edx, DWORD PTR [ebp-0x1c]
 8082e6a:  mov ecx, DWORD PTR [ebp+0x1c]
 8082e6d:  mov DWORD PTR [eax], edx
 8082e6f:  mov eax, DWORD PTR [ebp-0x14]
 8082e72:  add DWORD PTR [ecx], eax
 8082e74:  jmp 8082c9d
 8082e79:  mov eax, DWORD PTR [ebp-0x30]
 8082e7c:  mov edi, 0x5
 8082e81:  add eax, 0x4
 8082e84:  cmp DWORD PTR [ebp-0x2c], eax
 8082e87:  mov DWORD PTR [ebp-0x20], eax
 8082e8a:  jb 8082b78
 8082e90:  lea ebx, [ebp-0xe]
 8082e93:  add ebx, esi
 8082e95:  movzx eax, BYTE PTR [ecx]
 8082e98:  add esi, 0x1
 8082e9b:  add ecx, 0x1
 8082e9e:  mov BYTE PTR [ebx], al
 8082ea0:  add ebx, 0x1
 8082ea3:  cmp esi, 0x1
 8082ea6:  jbe 8082eef
 8082ea8:  movzx ecx, WORD PTR [ebp-0xe]
 8082eac:  lea eax, [ecx+0x2800]
 8082eb2:  cmp ax, 0x7ff
 8082eb6:  ja 8082ef6
 8082eb8:  mov eax, DWORD PTR [ebp-0x28]
 8082ebb:  test eax, eax
 8082ebd:  je 8082ec4
 8082ebf:  and edx, 0x2
 8082ec2:  jne 8082f2e
 8082ec4:  mov edi, 0x6
 8082ec9:  lea esi, [esi]
 8082ed0:  jmp 8082b78
 8082ed5:  lea esi, [esi]
 8082ed8:  mov edx, esi
 8082eda:  sub edx, eax
 8082edc:  mov eax, edx
 8082ede:  shr eax, 0x1f
 8082ee1:  add eax, edx
 8082ee3:  mov edx, DWORD PTR [ebp+0x10]
 8082ee6:  sar eax, 1
 8082ee8:  sub DWORD PTR [edx], eax
 8082eea:  jmp 8082c5a
 8082eef:  cmp DWORD PTR [ebp+0x14], ecx
 8082ef2:  ja 8082e95
 8082ef4:  jmp 8082ea8
 8082ef6:  movzx eax, cx
 8082ef9:  mov esi, DWORD PTR [ebp-0x20]
 8082efc:  mov ecx, DWORD PTR [ebp-0x30]
 8082eff:  mov DWORD PTR [ebp-0x30], esi
 8082f02:  mov DWORD PTR [ecx], eax
 8082f04:  mov esi, DWORD PTR [ebp-0x24]
 8082f07:  mov edx, DWORD PTR [esi]
 8082f09:  and edx, 0x7
 8082f0c:  cmp edx, 0x1
 8082f0f:  jg 8082f36
 8082f11:  mov eax, 0x2
 8082f16:  mov ecx, DWORD PTR [ebp-0x24]
 8082f19:  sub eax, edx
 8082f1b:  mov esi, DWORD PTR [ebp+0xc]
 8082f1e:  mov edx, DWORD PTR [ebp+0x10]
 8082f21:  and DWORD PTR [ecx], 0xf8
 8082f24:  add DWORD PTR [edx], eax
 8082f26:  mov edx, DWORD PTR [esi+0x8]
 8082f29:  jmp 8082ac1
 8082f2e:  mov edx, DWORD PTR [ebp-0x28]
 8082f31:  add DWORD PTR [edx], 0x1
 8082f34:  jmp 8082f04
 8082f36:  mov DWORD PTR [esp+0xc], 0x80b5d00
 8082f3e:  mov DWORD PTR [esp+0x8], 0x1bc
 8082f46:  mov DWORD PTR [esp+0x4], 0x80b5c4f
 8082f4e:  mov DWORD PTR [esp], 0x80b5d80
 8082f55:  call 8051490
 8082f5a:  mov DWORD PTR [esp+0xc], 0x80b5f20
 8082f62:  mov DWORD PTR [esp+0x8], 0x312
 8082f6a:  mov DWORD PTR [esp+0x4], 0x80b5c20
 8082f72:  mov DWORD PTR [esp], 0x80b5c87
 8082f79:  call 8051490
 8082f7e:  mov edx, DWORD PTR [ebp-0x34]
 8082f81:  mov esi, DWORD PTR [ebp-0x30]
 8082f84:  jmp 8082fb3
 8082f86:  movzx eax, bx
 8082f89:  mov DWORD PTR [esi], eax
 8082f8b:  add esi, 0x4
 8082f8e:  cmp DWORD PTR [ebp+0x14], ecx
 8082f91:  je 8082e5d
 8082f97:  lea ebx, [ecx+0x2]
 8082f9a:  cmp DWORD PTR [ebp+0x14], ebx
 8082f9d:  jb 8082b88
 8082fa3:  lea eax, [esi+0x4]
 8082fa6:  cmp DWORD PTR [ebp-0x2c], eax
 8082fa9:  jb 8082d10
 8082faf:  mov edx, ecx
 8082fb1:  mov ecx, ebx
 8082fb3:  movzx ebx, WORD PTR [edx]
 8082fb6:  lea eax, [ebx+0x2800]
 8082fbc:  cmp ax, 0x7ff
 8082fc0:  jbe 8082ddc
 8082fc6:  jmp 8082f86
 8082fc8:  mov esi, DWORD PTR [ebp+0x18]
 8082fcb:  mov esi, DWORD PTR [esi]
 8082fcd:  mov DWORD PTR [ebp-0x30], esi
 8082fd0:  jmp 8082a88
 8082fd5:  mov esi, DWORD PTR [ebp+0x18]
 8082fd8:  test esi, esi
 8082fda:  jne 8083076
 8082fe0:  mov esi, DWORD PTR [ebp+0xc]
 8082fe3:  xor edi, edi
 8082fe5:  mov eax, DWORD PTR [esi+0x14]
 8082fe8:  mov DWORD PTR [eax], 0x0
 8082fee:  mov DWORD PTR [eax+0x4], 0x0
 8082ff5:  test BYTE PTR [esi+0x8], 0x1
 8082ff9:  jne 8082b78
 8082fff:  mov eax, DWORD PTR [ebp-0x38]
 8083002:  mov DWORD PTR [esp], eax
 8083005:  call 807f350
 808300a:  mov edx, DWORD PTR [ebp+0x24]
 808300d:  mov DWORD PTR [esp+0x18], ebx
 8083011:  mov DWORD PTR [esp+0x1c], edx
 8083015:  mov ecx, DWORD PTR [ebp+0x1c]
 8083018:  mov DWORD PTR [esp+0x10], 0x0
 8083020:  mov DWORD PTR [esp+0xc], 0x0
 8083028:  mov DWORD PTR [esp+0x8], 0x0
 8083030:  mov DWORD PTR [esp+0x14], ecx
 8083034:  mov esi, DWORD PTR [ebp-0x3c]
 8083037:  mov DWORD PTR [esp+0x4], esi
 808303b:  mov eax, DWORD PTR [ebp-0x40]
 808303e:  mov DWORD PTR [esp], eax
 8083041:  call DWORD PTR [ebp-0x38]
 8083044:  mov edi, eax
 8083046:  jmp 8082b78
 808304b:  mov edi, ecx
 808304d:  jmp 8082c9d
 8083052:  mov DWORD PTR [esp+0xc], 0x80b5f20
 808305a:  mov DWORD PTR [esp+0x8], 0x22f
 8083062:  mov DWORD PTR [esp+0x4], 0x80b5c20
 808306a:  mov DWORD PTR [esp], 0x80b5c34
 8083071:  call 8051490
 8083076:  mov DWORD PTR [esp+0xc], 0x80b5f20
 808307e:  mov DWORD PTR [esp+0x8], 0x1a0
 8083086:  mov DWORD PTR [esp+0x4], 0x80b5c20
 808308e:  mov DWORD PTR [esp], 0x80b5c34
 8083095:  call 8051490
 808309a:  lea esi, [esi]

080830a0 <__gconv_transform_utf8_internal>:
 80830a0:  push ebp
 80830a1:  mov ebp, esp
 80830a3:  push edi
 80830a4:  push esi
 80830a5:  push ebx
 80830a6:  sub esp, 0x98
 80830ac:  mov edi, DWORD PTR [ebp+0xc]
 80830af:  mov eax, DWORD PTR [ebp+0x8]
 80830b2:  mov ecx, DWORD PTR [ebp+0xc]
 80830b5:  mov ebx, DWORD PTR [ebp+0x20]
 80830b8:  mov esi, DWORD PTR [edi+0x8]
 80830bb:  lea edx, [eax+0x3c]
 80830be:  add ecx, 0x24
 80830c1:  mov DWORD PTR [ebp-0x74], edx
 80830c4:  test esi, 0x1
 80830ca:  mov DWORD PTR [ebp-0x70], ecx
 80830cd:  mov DWORD PTR [ebp-0x6c], 0x0
 80830d4:  jne 80830f3
 80830d6:  mov edx, DWORD PTR [ebp-0x74]
 80830d9:  mov eax, DWORD PTR [eax+0x3c]
 80830dc:  mov edx, DWORD PTR [edx+0x14]
 80830df:  test eax, eax
 80830e1:  mov DWORD PTR [ebp-0x6c], edx
 80830e4:  je 80830f3
 80830e6:  ror edx, 0x9
 80830e9:  xor edx, DWORD PTR gs:0x18
 80830f0:  mov DWORD PTR [ebp-0x6c], edx
 80830f3:  test ebx, ebx
 80830f5:  jne 8083ea3
 80830fb:  mov eax, DWORD PTR [ebp+0x18]
 80830fe:  test eax, eax
 8083100:  jne 8083f63
 8083106:  mov edi, DWORD PTR [ebp+0xc]
 8083109:  mov edi, DWORD PTR [edi]
 808310b:  mov DWORD PTR [ebp-0x60], edi
 808310e:  mov edx, DWORD PTR [ebp+0xc]
 8083111:  lea ecx, [ebp-0x10]
 8083114:  cmp DWORD PTR [ebp+0x1c], 0x1
 8083118:  mov edi, DWORD PTR [ebp+0x24]
 808311b:  mov DWORD PTR [ebp-0x10], 0x0
 8083122:  mov edx, DWORD PTR [edx+0x4]
 8083125:  sbb eax, eax
 8083127:  not eax
 8083129:  and ecx, eax
 808312b:  test edi, edi
 808312d:  mov DWORD PTR [ebp-0x58], ecx
 8083130:  mov DWORD PTR [ebp-0x5c], edx
 8083133:  jne 80835f4
 8083139:  mov ebx, DWORD PTR [ebp+0x10]
 808313c:  mov ebx, DWORD PTR [ebx]
 808313e:  mov DWORD PTR [ebp-0x78], ebx
 8083141:  mov edi, ebx
 8083143:  cmp DWORD PTR [ebp+0x14], edi
 8083146:  mov DWORD PTR [ebp-0x64], edi
 8083149:  je 808333a
 808314f:  nop
 8083150:  mov eax, DWORD PTR [ebp-0x60]
 8083153:  add eax, 0x4
 8083156:  cmp DWORD PTR [ebp-0x5c], eax
 8083159:  jb 80835dd
 808315f:  mov ecx, DWORD PTR [ebp-0x60]
 8083162:  and esi, 0x2
 8083165:  mov DWORD PTR [ebp-0x4c], esi
 8083168:  mov edi, DWORD PTR [ebp-0x78]
 808316b:  mov DWORD PTR [ebp-0x68], 0x4
 8083172:  mov DWORD PTR [ebp-0x24], ecx
 8083175:  jmp 80831a4
 8083177:  nop
 8083178:  add edi, 0x1
 808317b:  mov DWORD PTR [ebp-0x2c], edi
 808317e:  mov edx, DWORD PTR [ebp-0x24]
 8083181:  mov edi, DWORD PTR [ebp-0x2c]
 8083184:  mov DWORD PTR [edx], esi
 8083186:  add edx, 0x4
 8083189:  cmp DWORD PTR [ebp+0x14], edi
 808318c:  mov DWORD PTR [ebp-0x24], edx
 808318f:  je 80833de
 8083195:  mov eax, DWORD PTR [ebp-0x24]
 8083198:  add eax, 0x4
 808319b:  cmp DWORD PTR [ebp-0x5c], eax
 808319e:  jb 80835c8
 80831a4:  movzx esi, BYTE PTR [edi]
 80831a7:  cmp esi, 0x7f
 80831aa:  jbe 8083178
 80831ac:  lea eax, [esi-0xc2]
 80831b2:  cmp eax, 0x1d
 80831b5:  ja 80833f0
 80831bb:  and esi, 0x1f
 80831be:  mov ecx, 0x2
 80831c3:  lea eax, [edi+ecx]
 80831c6:  mov ebx, 0x1
 80831cb:  cmp DWORD PTR [ebp+0x14], eax
 80831ce:  mov DWORD PTR [ebp-0x2c], eax
 80831d1:  jae 8083370
 80831d7:  lea ecx, [edi+0x1]
 80831da:  cmp DWORD PTR [ebp+0x14], ecx
 80831dd:  jbe 80835ad
 80831e3:  movzx eax, BYTE PTR [edi+0x1]
 80831e7:  and eax, 0xc0
 80831ec:  add eax, 0x80
 80831ef:  jne 80835ad
 80831f5:  lea edx, [edi+0x2]
 80831f8:  jmp 8083210
 80831fa:  lea esi, [esi]
 8083200:  movzx eax, BYTE PTR [edx]
 8083203:  add edx, 0x1
 8083206:  and eax, 0xc0
 808320b:  add eax, 0x80
 808320e:  jne 808321a
 8083210:  add ebx, 0x1
 8083213:  mov ecx, edx
 8083215:  cmp DWORD PTR [ebp+0x14], edx
 8083218:  ja 8083200
 808321a:  cmp ecx, DWORD PTR [ebp+0x14]
 808321d:  jne 80833b0
 8083223:  mov esi, DWORD PTR [ebp-0x24]
 8083226:  mov DWORD PTR [ebp-0x68], 0x7
 808322d:  lea esi, [esi]
 8083230:  mov eax, DWORD PTR [ebp+0x18]
 8083233:  mov ecx, DWORD PTR [ebp+0x10]
 8083236:  test eax, eax
 8083238:  mov DWORD PTR [ecx], edi
 808323a:  jne 808335c
 8083240:  mov edi, DWORD PTR [ebp+0xc]
 8083243:  mov ebx, DWORD PTR [edi+0x20]
 8083246:  test ebx, ebx
 8083248:  je 808328d
 808324a:  lea esi, [esi]
 8083250:  mov eax, DWORD PTR [ebx+0x4]
 8083253:  test eax, eax
 8083255:  je 8083286
 8083257:  mov DWORD PTR [esp], eax
 808325a:  call 807f350
 808325f:  mov eax, DWORD PTR [ebp-0x24]
 8083262:  mov DWORD PTR [esp+0x10], eax
 8083266:  mov edx, DWORD PTR [ebp-0x60]
 8083269:  mov DWORD PTR [esp+0xc], edx
 808326d:  mov ecx, DWORD PTR [ebp+0x10]
 8083270:  mov eax, DWORD PTR [ecx]
 8083272:  mov DWORD PTR [esp+0x8], eax
 8083276:  mov edi, DWORD PTR [ebp-0x78]
 8083279:  mov DWORD PTR [esp+0x4], edi
 808327d:  mov eax, DWORD PTR [ebx+0xc]
 8083280:  mov DWORD PTR [esp], eax
 8083283:  call DWORD PTR [ebx+0x4]
 8083286:  mov ebx, DWORD PTR [ebx+0x10]
 8083289:  test ebx, ebx
 808328b:  jne 8083250
 808328d:  mov eax, DWORD PTR [ebp+0xc]
 8083290:  add DWORD PTR [eax+0xc], 0x1
 8083294:  test BYTE PTR [eax+0x8], 0x1
 8083298:  jne 8083702
 808329e:  mov ecx, DWORD PTR [ebp-0x24]
 80832a1:  cmp DWORD PTR [ebp-0x60], ecx
 80832a4:  jae 80834ca
 80832aa:  mov ebx, DWORD PTR [ebp+0xc]
 80832ad:  mov edi, DWORD PTR [ebp-0x6c]
 80832b0:  mov eax, DWORD PTR [ebx]
 80832b2:  mov DWORD PTR [ebp-0x14], eax
 80832b5:  mov DWORD PTR [esp], edi
 80832b8:  call 807f350
 80832bd:  mov eax, DWORD PTR [ebp+0x24]
 80832c0:  mov DWORD PTR [esp+0x18], 0x0
 80832c8:  mov DWORD PTR [esp+0x1c], eax
 80832cc:  mov edx, DWORD PTR [ebp+0x1c]
 80832cf:  lea eax, [ebp-0x14]
 80832d2:  mov DWORD PTR [esp+0x10], 0x0
 80832da:  mov DWORD PTR [esp+0x14], edx
 80832de:  mov ecx, DWORD PTR [ebp-0x24]
 80832e1:  mov DWORD PTR [esp+0x8], eax
 80832e5:  mov DWORD PTR [esp+0xc], ecx
 80832e9:  mov ebx, DWORD PTR [ebp-0x70]
 80832ec:  mov DWORD PTR [esp+0x4], ebx
 80832f0:  mov edi, DWORD PTR [ebp-0x74]
 80832f3:  mov DWORD PTR [esp], edi
 80832f6:  call DWORD PTR [ebp-0x6c]
 80832f9:  cmp eax, 0x4
 80832fc:  mov edi, eax
 80832fe:  je 80834c0
 8083304:  mov eax, DWORD PTR [ebp-0x24]
 8083307:  cmp DWORD PTR [ebp-0x14], eax
 808330a:  jne 8083943
 8083310:  test edi, edi
 8083312:  jne 8083f1e
 8083318:  mov ecx, DWORD PTR [ebp+0xc]
 808331b:  mov edi, DWORD PTR [ebp+0x10]
 808331e:  mov ebx, DWORD PTR [ebp+0xc]
 8083321:  mov ecx, DWORD PTR [ecx]
 8083323:  mov edi, DWORD PTR [edi]
 8083325:  cmp DWORD PTR [ebp+0x14], edi
 8083328:  mov esi, DWORD PTR [ebx+0x8]
 808332b:  mov DWORD PTR [ebp-0x60], ecx
 808332e:  mov DWORD PTR [ebp-0x78], edi
 8083331:  mov DWORD PTR [ebp-0x64], edi
 8083334:  jne 8083150
 808333a:  mov eax, DWORD PTR [ebp-0x60]
 808333d:  mov edi, DWORD PTR [ebp+0x14]
 8083340:  mov ecx, DWORD PTR [ebp+0x10]
 8083343:  mov DWORD PTR [ebp-0x68], 0x4
 808334a:  mov DWORD PTR [ebp-0x24], eax
 808334d:  mov esi, eax
 808334f:  mov eax, DWORD PTR [ebp+0x18]
 8083352:  mov DWORD PTR [ecx], edi
 8083354:  test eax, eax
 8083356:  je 8083240
 808335c:  mov ebx, DWORD PTR [ebp+0x18]
 808335f:  mov DWORD PTR [ebx], esi
 8083361:  mov eax, DWORD PTR [ebp-0x68]
 8083364:  add esp, 0x98
 808336a:  pop ebx
 808336b:  pop esi
 808336c:  pop edi
 808336d:  pop ebp
 808336e:  ret
 808336f:  nop
 8083370:  movzx edx, BYTE PTR [edi+ebx]
 8083374:  mov eax, edx
 8083376:  and eax, 0xc0
 808337b:  add eax, 0x80
 808337e:  jne 8083480
 8083384:  shl esi, 0x6
 8083387:  and edx, 0x3f
 808338a:  add ebx, 0x1
 808338d:  or esi, edx
 808338f:  cmp ecx, ebx
 8083391:  ja 8083370
 8083393:  cmp ecx, 0x2
 8083396:  je 808317e
 808339c:  lea ecx, [ecx+ecx*4-0x4]
 80833a0:  mov eax, esi
 80833a2:  shr eax, cl
 80833a4:  test eax, eax
 80833a6:  jne 808317e
 80833ac:  lea esi, [esi]
 80833b0:  mov eax, DWORD PTR [ebp-0x58]
 80833b3:  test eax, eax
 80833b5:  je 808346b
 80833bb:  mov eax, DWORD PTR [ebp-0x4c]
 80833be:  test eax, eax
 80833c0:  je 808346b
 80833c6:  add edi, ebx
 80833c8:  mov ebx, DWORD PTR [ebp-0x58]
 80833cb:  mov DWORD PTR [ebp-0x68], 0x6
 80833d2:  add DWORD PTR [ebx], 0x1
 80833d5:  cmp DWORD PTR [ebp+0x14], edi
 80833d8:  jne 8083195
 80833de:  mov edi, DWORD PTR [ebp+0x14]
 80833e1:  mov esi, DWORD PTR [ebp-0x24]
 80833e4:  jmp 8083230
 80833e9:  lea esi, [esi]
 80833f0:  mov eax, esi
 80833f2:  and eax, 0xf0
 80833f7:  cmp eax, 0xe0
 80833fc:  je 8083490
 8083402:  mov eax, esi
 8083404:  and eax, 0xf8
 8083409:  cmp eax, 0xf0
 808340e:  je 80834a0
 8083414:  mov eax, esi
 8083416:  and eax, 0xfc
 808341b:  cmp eax, 0xf8
 8083420:  je 80834b0
 8083426:  mov eax, esi
 8083428:  xor ebx, ebx
 808342a:  and eax, 0xfe
 808342f:  cmp eax, 0xfc
 8083434:  je 80835a0
 808343a:  add ebx, 0x1
 808343d:  lea eax, [edi+ebx]
 8083440:  cmp DWORD PTR [ebp+0x14], eax
 8083443:  jbe 80833b0
 8083449:  movzx eax, BYTE PTR [edi+ebx]
 808344d:  and eax, 0xc0
 8083452:  add eax, 0x80
 8083455:  jne 80833b0
 808345b:  cmp ebx, 0x4
 808345e:  jbe 808343a
 8083460:  mov eax, DWORD PTR [ebp-0x58]
 8083463:  test eax, eax
 8083465:  jne 80833bb
 808346b:  mov esi, DWORD PTR [ebp-0x24]
 808346e:  mov DWORD PTR [ebp-0x68], 0x6
 8083475:  jmp 8083230
 808347a:  lea esi, [esi]
 8083480:  cmp ecx, ebx
 8083482:  ja 80833b0
 8083488:  jmp 8083393
 808348d:  lea esi, [esi]
 8083490:  and esi, 0xf
 8083493:  mov ecx, 0x3
 8083498:  jmp 80831c3
 808349d:  lea esi, [esi]
 80834a0:  and esi, 0x7
 80834a3:  mov ecx, 0x4
 80834a8:  jmp 80831c3
 80834ad:  lea esi, [esi]
 80834b0:  and esi, 0x3
 80834b3:  mov ecx, 0x5
 80834b8:  jmp 80831c3
 80834bd:  lea esi, [esi]
 80834c0:  cmp DWORD PTR [ebp-0x68], 0x5
 80834c4:  je 8083318
 80834ca:  mov eax, DWORD PTR [ebp+0x24]
 80834cd:  test eax, eax
 80834cf:  je 8083361
 80834d5:  cmp DWORD PTR [ebp-0x68], 0x7
 80834d9:  lea esi, [esi]
 80834e0:  jne 8083361
 80834e6:  mov eax, DWORD PTR [ebp+0xc]
 80834e9:  mov edx, DWORD PTR [ebp+0x10]
 80834ec:  mov eax, DWORD PTR [eax+0x14]
 80834ef:  mov edx, DWORD PTR [edx]
 80834f1:  mov DWORD PTR [ebp-0x84], eax
 80834f7:  mov eax, DWORD PTR [ebp+0x14]
 80834fa:  mov DWORD PTR [ebp-0x78], edx
 80834fd:  mov ecx, DWORD PTR [ebp-0x84]
 8083503:  movzx edx, BYTE PTR [edx]
 8083506:  sub eax, DWORD PTR [ebp-0x78]
 8083509:  mov DWORD PTR [ecx], eax
 808350b:  lea eax, [edx-0xc2]
 8083511:  cmp eax, 0x1d
 8083514:  ja 8083b9f
 808351a:  and edx, 0x1f
 808351d:  mov esi, 0x1
 8083522:  mov DWORD PTR [ebp-0x80], edx
 8083525:  mov ebx, 0x200
 808352a:  mov eax, 0x6
 808352f:  mov edx, DWORD PTR [ebp-0x78]
 8083532:  mov edi, DWORD PTR [ebp+0x10]
 8083535:  add edx, 0x1
 8083538:  mov DWORD PTR [edi], edx
 808353a:  cmp DWORD PTR [ebp+0x14], edx
 808353d:  jbe 808356c
 808353f:  movzx ecx, BYTE PTR [edx]
 8083542:  add edx, 0x1
 8083545:  mov eax, DWORD PTR [ebp-0x80]
 8083548:  mov DWORD PTR [edi], edx
 808354a:  and ecx, 0x3f
 808354d:  shl eax, 0x6
 8083550:  or ecx, eax
 8083552:  cmp DWORD PTR [ebp+0x14], edx
 8083555:  mov DWORD PTR [ebp-0x80], ecx
 8083558:  ja 808353f
 808355a:  mov eax, DWORD PTR [ebp+0x14]
 808355d:  sub DWORD PTR [ebp-0x78], eax
 8083560:  mov edx, DWORD PTR [ebp-0x78]
 8083563:  lea eax, [edx+esi+0x1]
 8083567:  lea eax, [eax+eax*2]
 808356a:  add eax, eax
 808356c:  mov ecx, DWORD PTR [ebp-0x84]
 8083572:  or DWORD PTR [ecx], ebx
 8083574:  mov ecx, eax
 8083576:  shl DWORD PTR [ebp-0x80], cl
 8083579:  mov edi, DWORD PTR [ebp-0x80]
 808357c:  mov ebx, DWORD PTR [ebp-0x84]
 8083582:  mov DWORD PTR [ebx+0x4], edi
 8083585:  mov DWORD PTR [ebp-0x68], 0x7
 808358c:  mov eax, DWORD PTR [ebp-0x68]
 808358f:  add esp, 0x98
 8083595:  pop ebx
 8083596:  pop esi
 8083597:  pop edi
 8083598:  pop ebp
 8083599:  ret
 808359a:  lea esi, [esi]
 80835a0:  and esi, 0x1
 80835a3:  mov ecx, 0x6
 80835a8:  jmp 80831c3
 80835ad:  cmp ecx, DWORD PTR [ebp+0x14]
 80835b0:  mov ebx, 0x1
 80835b5:  jne 80833b0
 80835bb:  nop
 80835bc:  lea esi, [esi]
 80835c0:  jmp 8083223
 80835c5:  lea esi, [esi]
 80835c8:  mov esi, DWORD PTR [ebp-0x24]
 80835cb:  mov DWORD PTR [ebp-0x68], 0x5
 80835d2:  lea esi, [esi]
 80835d8:  jmp 8083230
 80835dd:  mov edx, DWORD PTR [ebp-0x60]
 80835e0:  mov edi, DWORD PTR [ebp-0x78]
 80835e3:  mov DWORD PTR [ebp-0x68], 0x5
 80835ea:  mov DWORD PTR [ebp-0x24], edx
 80835ed:  mov esi, edx
 80835ef:  jmp 8083230
 80835f4:  mov edi, DWORD PTR [ebp+0xc]
 80835f7:  mov edi, DWORD PTR [edi+0x14]
 80835fa:  mov eax, DWORD PTR [edi]
 80835fc:  mov DWORD PTR [ebp-0x40], edi
 80835ff:  test al, 0x7
 8083601:  je 80836f3
 8083607:  mov ebx, DWORD PTR [ebp+0x18]
 808360a:  test ebx, ebx
 808360c:  jne 8083e7f
 8083612:  mov edx, DWORD PTR [ebp+0x10]
 8083615:  movzx ebx, al
 8083618:  mov ecx, DWORD PTR [ebp-0x40]
 808361b:  mov edx, DWORD PTR [edx]
 808361d:  mov DWORD PTR [ebp-0x78], edx
 8083620:  mov DWORD PTR [ebp-0x54], edx
 8083623:  mov edx, eax
 8083625:  mov edi, DWORD PTR [ecx+0x4]
 8083628:  sar edx, 0x8
 808362b:  movzx eax, BYTE PTR [edx+0x80b60be]
 8083632:  sub edx, 0x1
 8083635:  mov BYTE PTR [ebp-0x1a], al
 8083638:  lea eax, [ebp-0x1a]
 808363b:  mov ecx, eax
 808363d:  mov DWORD PTR [ebp-0x7c], eax
 8083640:  add ecx, edx
 8083642:  jmp 8083647
 8083644:  sub edx, 0x1
 8083647:  cmp ebx, edx
 8083649:  jbe 8083655
 808364b:  mov eax, edi
 808364d:  and eax, 0x3f
 8083650:  or eax, 0x80
 8083653:  mov BYTE PTR [ecx], al
 8083655:  shr edi, 0x6
 8083658:  sub ecx, 0x1
 808365b:  cmp edx, 0x1
 808365e:  ja 8083644
 8083660:  mov eax, DWORD PTR [ebp-0x78]
 8083663:  mov edx, edi
 8083665:  or BYTE PTR [ebp-0x1a], dl
 8083668:  sub eax, ebx
 808366a:  add eax, 0x1
 808366d:  cmp DWORD PTR [ebp+0x14], eax
 8083670:  jae 8083711
 8083676:  mov ecx, DWORD PTR [ebp+0x10]
 8083679:  lea edx, [ebp-0x1a]
 808367c:  mov edi, DWORD PTR [ebp+0x14]
 808367f:  add edx, ebx
 8083681:  mov ebx, DWORD PTR [ebp-0x40]
 8083684:  mov eax, edx
 8083686:  sub eax, DWORD PTR [ebp-0x7c]
 8083689:  mov DWORD PTR [ecx], edi
 808368b:  movzx ecx, BYTE PTR [ebp-0x1a]
 808368f:  mov DWORD PTR [ebp-0x50], eax
 8083692:  mov DWORD PTR [ebx], eax
 8083694:  lea eax, [ecx-0xc2]
 808369a:  cmp eax, 0x1d
 808369d:  ja 8083858
 80836a3:  mov ebx, ecx
 80836a5:  mov esi, 0x1
 80836aa:  and ebx, 0x1f
 80836ad:  mov edi, 0x200
 80836b2:  mov eax, 0x6
 80836b7:  lea ecx, [ebp-0x19]
 80836ba:  cmp edx, ecx
 80836bc:  jbe 80836d8
 80836be:  movzx eax, BYTE PTR [ecx]
 80836c1:  shl ebx, 0x6
 80836c4:  add ecx, 0x1
 80836c7:  sub esi, 0x1
 80836ca:  and eax, 0x3f
 80836cd:  or ebx, eax
 80836cf:  cmp edx, ecx
 80836d1:  ja 80836be
 80836d3:  lea eax, [esi+esi*2]
 80836d6:  add eax, eax
 80836d8:  mov edx, DWORD PTR [ebp-0x40]
 80836db:  mov ecx, eax
 80836dd:  or edi, DWORD PTR [ebp-0x50]
 80836e0:  shl ebx, cl
 80836e2:  mov DWORD PTR [edx+0x4], ebx
 80836e5:  mov DWORD PTR [edx], edi
 80836e7:  mov DWORD PTR [ebp-0x68], 0x7
 80836ee:  jmp 8083361
 80836f3:  mov eax, DWORD PTR [ebp+0x10]
 80836f6:  mov eax, DWORD PTR [eax]
 80836f8:  mov DWORD PTR [ebp-0x78], eax
 80836fb:  mov edi, eax
 80836fd:  jmp 8083143
 8083702:  mov edx, DWORD PTR [ebp+0x1c]
 8083705:  mov DWORD PTR [eax], esi
 8083707:  mov eax, DWORD PTR [ebp-0x10]
 808370a:  add DWORD PTR [edx], eax
 808370c:  jmp 80834ca
 8083711:  mov edi, DWORD PTR [ebp-0x60]
 8083714:  mov DWORD PTR [ebp-0x68], 0x5
 808371b:  add edi, 0x4
 808371e:  cmp DWORD PTR [ebp-0x5c], edi
 8083721:  mov DWORD PTR [ebp-0x38], edi
 8083724:  jb 8083361
 808372a:  lea edx, [ebp-0x1a]
 808372d:  add edx, ebx
 808372f:  jmp 808373f
 8083731:  add ecx, 0x1
 8083734:  add edx, 0x1
 8083737:  cmp DWORD PTR [ebp+0x14], ecx
 808373a:  mov DWORD PTR [ebp-0x54], ecx
 808373d:  jbe 808374f
 808373f:  mov ecx, DWORD PTR [ebp-0x54]
 8083742:  add ebx, 0x1
 8083745:  cmp ebx, 0x5
 8083748:  movzx eax, BYTE PTR [ecx]
 808374b:  mov BYTE PTR [edx], al
 808374d:  jbe 8083731
 808374f:  lea edx, [ebp-0x1a]
 8083752:  add edx, ebx
 8083754:  movzx ebx, BYTE PTR [ebp-0x1a]
 8083758:  cmp ebx, 0x7f
 808375b:  jbe 80838e8
 8083761:  lea eax, [ebx-0xc2]
 8083767:  cmp eax, 0x1d
 808376a:  ja 8083bc8
 8083770:  and ebx, 0x1f
 8083773:  mov ecx, 0x2
 8083778:  lea edi, [ebp-0x1a]
 808377b:  add edi, ecx
 808377d:  mov DWORD PTR [ebp-0x34], edi
 8083780:  mov edi, 0x1
 8083785:  cmp edx, DWORD PTR [ebp-0x34]
 8083788:  jae 80838b7
 808378e:  lea ecx, [ebp-0x19]
 8083791:  cmp edx, ecx
 8083793:  mov ebx, ecx
 8083795:  jbe 80837c5
 8083797:  movzx eax, BYTE PTR [ebp-0x19]
 808379b:  mov ebx, ecx
 808379d:  and eax, 0xc0
 80837a2:  add eax, 0x80
 80837a5:  jne 80837c5
 80837a7:  lea ecx, [ebp-0x18]
 80837aa:  jmp 80837bc
 80837ac:  movzx eax, BYTE PTR [ecx]
 80837af:  add ecx, 0x1
 80837b2:  and eax, 0xc0
 80837b7:  add eax, 0x80
 80837ba:  jne 80837c5
 80837bc:  add edi, 0x1
 80837bf:  cmp edx, ecx
 80837c1:  mov ebx, ecx
 80837c3:  ja 80837ac
 80837c5:  cmp ebx, edx
 80837c7:  jne 8083c29
 80837cd:  lea eax, [ebp-0x14]
 80837d0:  cmp ebx, eax
 80837d2:  mov DWORD PTR [ebp-0x68], 0x7
 80837d9:  je 8083ded
 80837df:  mov edi, DWORD PTR [ebp-0x40]
 80837e2:  mov ebx, edx
 80837e4:  mov ecx, DWORD PTR [ebp+0x10]
 80837e7:  sub ebx, DWORD PTR [ebp-0x7c]
 80837ea:  mov eax, DWORD PTR [edi]
 80837ec:  mov DWORD PTR [ebp-0x30], ebx
 80837ef:  and eax, 0x7
 80837f2:  sub ebx, eax
 80837f4:  add DWORD PTR [ecx], ebx
 80837f6:  movzx ecx, BYTE PTR [ebp-0x1a]
 80837fa:  mov ebx, DWORD PTR [ebp-0x30]
 80837fd:  lea eax, [ecx-0xc2]
 8083803:  cmp eax, 0x1d
 8083806:  mov DWORD PTR [edi], ebx
 8083808:  ja 8083da6
 808380e:  mov ebx, ecx
 8083810:  mov esi, 0x1
 8083815:  and ebx, 0x1f
 8083818:  mov edi, 0x200
 808381d:  mov eax, 0x6
 8083822:  lea ecx, [ebp-0x19]
 8083825:  cmp edx, ecx
 8083827:  jbe 8083843
 8083829:  movzx eax, BYTE PTR [ecx]
 808382c:  shl ebx, 0x6
 808382f:  add ecx, 0x1
 8083832:  sub esi, 0x1
 8083835:  and eax, 0x3f
 8083838:  or ebx, eax
 808383a:  cmp edx, ecx
 808383c:  ja 8083829
 808383e:  lea eax, [esi+esi*2]
 8083841:  add eax, eax
 8083843:  mov edx, DWORD PTR [ebp-0x40]
 8083846:  mov ecx, eax
 8083848:  or edi, DWORD PTR [ebp-0x30]
 808384b:  shl ebx, cl
 808384d:  mov DWORD PTR [edx], edi
 808384f:  mov DWORD PTR [edx+0x4], ebx
 8083852:  jmp 8083361
 8083857:  nop
 8083858:  mov eax, ecx
 808385a:  and eax, 0xf0
 808385f:  cmp eax, 0xe0
 8083864:  je 8083e69
 808386a:  mov eax, ecx
 808386c:  and eax, 0xf8
 8083871:  cmp eax, 0xf0
 8083876:  je 8083e53
 808387c:  mov eax, ecx
 808387e:  and eax, 0xfc
 8083883:  cmp eax, 0xf8
 8083888:  je 8083d90
 808388e:  mov ebx, ecx
 8083890:  mov esi, 0x5
 8083895:  and ebx, 0x1
 8083898:  mov edi, 0x600
 808389d:  mov eax, 0x1e
 80838a2:  jmp 80836b7
 80838a7:  nop
 80838a8:  shl ebx, 0x6
 80838ab:  and edx, 0x3f
 80838ae:  add edi, 0x1
 80838b1:  or ebx, edx
 80838b3:  cmp ecx, edi
 80838b5:  jbe 80838d0
 80838b7:  movzx edx, BYTE PTR [ebp+edi-0x1a]
 80838bc:  mov eax, edx
 80838be:  and eax, 0xc0
 80838c3:  add eax, 0x80
 80838c6:  je 80838a8
 80838c8:  cmp edi, ecx
 80838ca:  jb 8083c29
 80838d0:  cmp ecx, 0x2
 80838d3:  je 80838ee
 80838d5:  lea ecx, [ecx+ecx*4-0x4]
 80838d9:  mov eax, ebx
 80838db:  shr eax, cl
 80838dd:  test eax, eax
 80838df:  je 8083c29
 80838e5:  jmp 80838ee
 80838e7:  nop
 80838e8:  lea edi, [ebp-0x19]
 80838eb:  mov DWORD PTR [ebp-0x34], edi
 80838ee:  mov eax, DWORD PTR [ebp-0x60]
 80838f1:  mov DWORD PTR [ebp-0x68], 0x0
 80838f8:  mov DWORD PTR [eax], ebx
 80838fa:  mov edx, DWORD PTR [ebp-0x7c]
 80838fd:  cmp DWORD PTR [ebp-0x34], edx
 8083900:  je 8083f4a
 8083906:  mov eax, DWORD PTR [ebp-0x34]
 8083909:  mov ecx, DWORD PTR [ebp-0x40]
 808390c:  sub eax, edx
 808390e:  mov edx, DWORD PTR [ecx]
 8083910:  and edx, 0x7
 8083913:  cmp eax, edx
 8083915:  jle 8083f26
 808391b:  mov ebx, DWORD PTR [ebp+0x10]
 808391e:  sub eax, edx
 8083920:  mov edi, DWORD PTR [ebp-0x40]
 8083923:  mov edx, DWORD PTR [ebp+0xc]
 8083926:  add DWORD PTR [ebx], eax
 8083928:  mov ecx, DWORD PTR [ebx]
 808392a:  mov eax, DWORD PTR [ebp-0x38]
 808392d:  mov DWORD PTR [edi], 0x0
 8083933:  mov esi, DWORD PTR [edx+0x8]
 8083936:  mov DWORD PTR [ebp-0x78], ecx
 8083939:  mov edi, ecx
 808393b:  mov DWORD PTR [ebp-0x60], eax
 808393e:  jmp 8083143
 8083943:  mov ecx, DWORD PTR [ebp-0x78]
 8083946:  mov edx, DWORD PTR [ebp+0x10]
 8083949:  mov eax, DWORD PTR [ebp+0xc]
 808394c:  mov DWORD PTR [ebp-0x48], 0x4
 8083953:  mov DWORD PTR [edx], ecx
 8083955:  mov edx, DWORD PTR [ebp-0x60]
 8083958:  mov ebx, DWORD PTR [ebp-0x14]
 808395b:  cmp DWORD PTR [ebp+0x14], ecx
 808395e:  mov esi, DWORD PTR [eax+0x8]
 8083961:  mov DWORD PTR [ebp-0x20], edx
 8083964:  mov DWORD PTR [ebp-0x3c], ebx
 8083967:  je 8083b42
 808396d:  mov eax, DWORD PTR [ebp-0x60]
 8083970:  mov ecx, DWORD PTR [ebp-0x60]
 8083973:  mov DWORD PTR [ebp-0x48], 0x5
 808397a:  add eax, 0x4
 808397d:  cmp DWORD PTR [ebp-0x3c], eax
 8083980:  mov DWORD PTR [ebp-0x20], ecx
 8083983:  jb 8083b42
 8083989:  mov ebx, DWORD PTR [ebp-0x60]
 808398c:  and esi, 0x2
 808398f:  mov DWORD PTR [ebp-0x44], esi
 8083992:  mov DWORD PTR [ebp-0x48], 0x4
 8083999:  mov DWORD PTR [ebp-0x20], ebx
 808399c:  jmp 80839cf
 808399e:  add eax, 0x1
 80839a1:  mov DWORD PTR [ebp-0x28], eax
 80839a4:  mov edx, DWORD PTR [ebp-0x20]
 80839a7:  mov ecx, DWORD PTR [ebp-0x28]
 80839aa:  mov DWORD PTR [edx], ebx
 80839ac:  add edx, 0x4
 80839af:  mov DWORD PTR [ebp-0x20], edx
 80839b2:  mov ebx, ecx
 80839b4:  mov DWORD PTR [ebp-0x64], ecx
 80839b7:  cmp DWORD PTR [ebp+0x14], ebx
 80839ba:  je 8083d85
 80839c0:  mov eax, DWORD PTR [ebp-0x20]
 80839c3:  add eax, 0x4
 80839c6:  cmp DWORD PTR [ebp-0x3c], eax
 80839c9:  jb 8083d76
 80839cf:  mov eax, DWORD PTR [ebp-0x64]
 80839d2:  movzx ebx, BYTE PTR [eax]
 80839d5:  cmp ebx, 0x7f
 80839d8:  jbe 808399e
 80839da:  lea eax, [ebx-0xc2]
 80839e0:  cmp eax, 0x1d
 80839e3:  ja 8083ac1
 80839e9:  and ebx, 0x1f
 80839ec:  mov ecx, 0x2
 80839f1:  mov eax, DWORD PTR [ebp-0x64]
 80839f4:  mov esi, 0x1
 80839f9:  add eax, ecx
 80839fb:  cmp DWORD PTR [ebp+0x14], eax
 80839fe:  mov DWORD PTR [ebp-0x28], eax
 8083a01:  jae 8083a90
 8083a07:  mov ecx, DWORD PTR [ebp-0x64]
 8083a0a:  add ecx, 0x1
 8083a0d:  cmp DWORD PTR [ebp+0x14], ecx
 8083a10:  jbe 8083d5f
 8083a16:  mov edx, DWORD PTR [ebp-0x64]
 8083a19:  movzx eax, BYTE PTR [edx+0x1]
 8083a1d:  and eax, 0xc0
 8083a22:  add eax, 0x80
 8083a25:  jne 8083d5f
 8083a2b:  add edx, 0x2
 8083a2e:  jmp 8083a40
 8083a30:  movzx eax, BYTE PTR [edx]
 8083a33:  add edx, 0x1
 8083a36:  and eax, 0xc0
 8083a3b:  add eax, 0x80
 8083a3e:  jne 8083a4a
 8083a40:  add esi, 0x1
 8083a43:  mov ecx, edx
 8083a45:  cmp DWORD PTR [ebp+0x14], edx
 8083a48:  ja 8083a30
 8083a4a:  cmp ecx, DWORD PTR [ebp+0x14]
 8083a4d:  je 8083cf1
 8083a53:  mov eax, DWORD PTR [ebp-0x58]
 8083a56:  test eax, eax
 8083a58:  je 8083b3b
 8083a5e:  mov eax, DWORD PTR [ebp-0x44]
 8083a61:  test eax, eax
 8083a63:  je 8083b3b
 8083a69:  mov ecx, DWORD PTR [ebp-0x58]
 8083a6c:  add DWORD PTR [ebp-0x64], esi
 8083a6f:  mov ebx, DWORD PTR [ebp-0x64]
 8083a72:  mov DWORD PTR [ebp-0x48], 0x6
 8083a79:  add DWORD PTR [ecx], 0x1
 8083a7c:  jmp 80839b7
 8083a81:  shl ebx, 0x6
 8083a84:  and edx, 0x3f
 8083a87:  add esi, 0x1
 8083a8a:  or ebx, edx
 8083a8c:  cmp ecx, esi
 8083a8e:  jbe 8083aa7
 8083a90:  mov eax, DWORD PTR [ebp-0x64]
 8083a93:  movzx edx, BYTE PTR [eax+esi]
 8083a97:  mov eax, edx
 8083a99:  and eax, 0xc0
 8083a9e:  add eax, 0x80
 8083aa1:  je 8083a81
 8083aa3:  cmp ecx, esi
 8083aa5:  ja 8083a53
 8083aa7:  cmp ecx, 0x2
 8083aaa:  je 80839a4
 8083ab0:  lea ecx, [ecx+ecx*4-0x4]
 8083ab4:  mov eax, ebx
 8083ab6:  shr eax, cl
 8083ab8:  test eax, eax
 8083aba:  je 8083a53
 8083abc:  jmp 80839a4
 8083ac1:  mov eax, ebx
 8083ac3:  and eax, 0xf0
 8083ac8:  cmp eax, 0xe0
 8083acd:  je 8083b92
 8083ad3:  mov eax, ebx
 8083ad5:  and eax, 0xf8
 8083ada:  cmp eax, 0xf0
 8083adf:  je 8083b85
 8083ae5:  mov eax, ebx
 8083ae7:  and eax, 0xfc
 8083aec:  cmp eax, 0xf8
 8083af1:  je 8083b78
 8083af7:  mov eax, ebx
 8083af9:  xor esi, esi
 8083afb:  and eax, 0xfe
 8083b00:  cmp eax, 0xfc
 8083b05:  je 8083d69
 8083b0b:  mov eax, DWORD PTR [ebp-0x64]
 8083b0e:  add esi, 0x1
 8083b11:  add eax, esi
 8083b13:  cmp DWORD PTR [ebp+0x14], eax
 8083b16:  jbe 8083a53
 8083b1c:  mov edx, DWORD PTR [ebp-0x64]
 8083b1f:  movzx eax, BYTE PTR [edx+esi]
 8083b23:  and eax, 0xc0
 8083b28:  add eax, 0x80
 8083b2b:  jne 8083a53
 8083b31:  cmp esi, 0x4
 8083b34:  jbe 8083b0b
 8083b36:  jmp 8083a53
 8083b3b:  mov DWORD PTR [ebp-0x48], 0x6
 8083b42:  mov ecx, DWORD PTR [ebp-0x64]
 8083b45:  mov edx, DWORD PTR [ebp+0x10]
 8083b48:  mov ebx, DWORD PTR [ebp-0x20]
 8083b4b:  mov DWORD PTR [edx], ecx
 8083b4d:  cmp DWORD PTR [ebp-0x14], ebx
 8083b50:  jne 8083d21
 8083b56:  cmp DWORD PTR [ebp-0x48], 0x5
 8083b5a:  jne 8083cfd
 8083b60:  mov eax, DWORD PTR [ebp-0x60]
 8083b63:  cmp DWORD PTR [ebp-0x20], eax
 8083b66:  jne 8083310
 8083b6c:  mov edx, DWORD PTR [ebp+0xc]
 8083b6f:  sub DWORD PTR [edx+0xc], 0x1
 8083b73:  jmp 8083310
 8083b78:  and ebx, 0x3
 8083b7b:  mov ecx, 0x5
 8083b80:  jmp 80839f1
 8083b85:  and ebx, 0x7
 8083b88:  mov ecx, 0x4
 8083b8d:  jmp 80839f1
 8083b92:  and ebx, 0xf
 8083b95:  mov ecx, 0x3
 8083b9a:  jmp 80839f1
 8083b9f:  mov eax, edx
 8083ba1:  and eax, 0xf0
 8083ba6:  cmp eax, 0xe0
 8083bab:  jne 8083c95
 8083bb1:  and edx, 0xf
 8083bb4:  mov esi, 0x2
 8083bb9:  mov DWORD PTR [ebp-0x80], edx
 8083bbc:  mov ebx, 0x300
 8083bc1:  mov al, 0xc
 8083bc3:  jmp 808352f
 8083bc8:  mov eax, ebx
 8083bca:  and eax, 0xf0
 8083bcf:  cmp eax, 0xe0
 8083bd4:  je 8083c88
 8083bda:  mov eax, ebx
 8083bdc:  and eax, 0xf8
 8083be1:  cmp eax, 0xf0
 8083be6:  je 8083c7b
 8083bec:  mov eax, ebx
 8083bee:  and eax, 0xfc
 8083bf3:  cmp eax, 0xf8
 8083bf8:  je 8083c62
 8083bfa:  mov eax, ebx
 8083bfc:  xor edi, edi
 8083bfe:  and eax, 0xfe
 8083c03:  cmp eax, 0xfc
 8083c08:  je 8083c55
 8083c0a:  add edi, 0x1
 8083c0d:  lea eax, [ebp-0x1a]
 8083c10:  add eax, edi
 8083c12:  cmp edx, eax
 8083c14:  jbe 8083c29
 8083c16:  movzx eax, BYTE PTR [ebp+edi-0x1a]
 8083c1b:  and eax, 0xc0
 8083c20:  add eax, 0x80
 8083c23:  je 8083cba
 8083c29:  mov ecx, DWORD PTR [ebp-0x58]
 8083c2c:  test ecx, ecx
 8083c2e:  je 8083c6f
 8083c30:  and esi, 0x2
 8083c33:  je 8083c6f
 8083c35:  mov edx, DWORD PTR [ebp-0x58]
 8083c38:  lea eax, [ebp-0x1a]
 8083c3b:  mov ecx, DWORD PTR [ebp-0x60]
 8083c3e:  add eax, edi
 8083c40:  mov DWORD PTR [ebp-0x34], eax
 8083c43:  mov DWORD PTR [ebp-0x68], 0x6
 8083c4a:  add DWORD PTR [edx], 0x1
 8083c4d:  mov DWORD PTR [ebp-0x38], ecx
 8083c50:  jmp 80838fa
 8083c55:  and ebx, 0x1
 8083c58:  mov ecx, 0x6
 8083c5d:  jmp 8083778
 8083c62:  and ebx, 0x3
 8083c65:  mov ecx, 0x5
 8083c6a:  jmp 8083778
 8083c6f:  mov DWORD PTR [ebp-0x68], 0x6
 8083c76:  jmp 8083361
 8083c7b:  and ebx, 0x7
 8083c7e:  mov ecx, 0x4
 8083c83:  jmp 8083778
 8083c88:  and ebx, 0xf
 8083c8b:  mov ecx, 0x3
 8083c90:  jmp 8083778
 8083c95:  mov eax, edx
 8083c97:  and eax, 0xf8
 8083c9c:  cmp eax, 0xf0
 8083ca1:  jne 8083cc8
 8083ca3:  and edx, 0x7
 8083ca6:  mov esi, 0x3
 8083cab:  mov DWORD PTR [ebp-0x80], edx
 8083cae:  mov ebx, 0x400
 8083cb3:  mov al, 0x12
 8083cb5:  jmp 808352f
 8083cba:  cmp edi, 0x4
 8083cbd:  jbe 8083c0a
 8083cc3:  jmp 8083c29
 8083cc8:  mov eax, edx
 8083cca:  and eax, 0xfc
 8083ccf:  cmp eax, 0xf8
 8083cd4:  lea esi, [esi]
 8083cd8:  jne 8083d45
 8083cda:  and edx, 0x3
 8083cdd:  mov esi, 0x4
 8083ce2:  mov DWORD PTR [ebp-0x80], edx
 8083ce5:  mov ebx, 0x500
 8083cea:  mov al, 0x18
 8083cec:  jmp 808352f
 8083cf1:  mov DWORD PTR [ebp-0x48], 0x7
 8083cf8:  jmp 8083b42
 8083cfd:  mov DWORD PTR [esp+0xc], 0x80b5f40
 8083d05:  mov DWORD PTR [esp+0x8], 0x2e1
 8083d0d:  mov DWORD PTR [esp+0x4], 0x80b5c20
 8083d15:  mov DWORD PTR [esp], 0x80b5dd0
 8083d1c:  call 8051490
 8083d21:  mov DWORD PTR [esp+0xc], 0x80b5f40
 8083d29:  mov DWORD PTR [esp+0x8], 0x2e0
 8083d31:  mov DWORD PTR [esp+0x4], 0x80b5c20
 8083d39:  mov DWORD PTR [esp], 0x80b5cb0
 8083d40:  call 8051490
 8083d45:  and edx, 0x1
 8083d48:  mov esi, 0x5
 8083d4d:  mov DWORD PTR [ebp-0x80], edx
 8083d50:  mov ebx, 0x600
 8083d55:  mov eax, 0x1e
 8083d5a:  jmp 808352f
 8083d5f:  mov esi, 0x1
 8083d64:  jmp 8083a4a
 8083d69:  and ebx, 0x1
 8083d6c:  mov ecx, 0x6
 8083d71:  jmp 80839f1
 8083d76:  mov DWORD PTR [ebp-0x48], 0x5
 8083d7d:  lea esi, [esi]
 8083d80:  jmp 8083b42
 8083d85:  mov eax, DWORD PTR [ebp+0x14]
 8083d88:  mov DWORD PTR [ebp-0x64], eax
 8083d8b:  jmp 8083b42
 8083d90:  mov ebx, ecx
 8083d92:  mov esi, 0x4
 8083d97:  and ebx, 0x3
 8083d9a:  mov edi, 0x500
 8083d9f:  mov al, 0x18
 8083da1:  jmp 80836b7
 8083da6:  mov eax, ecx
 8083da8:  and eax, 0xf0
 8083dad:  cmp eax, 0xe0
 8083db2:  je 8083e3d
 8083db8:  mov eax, ecx
 8083dba:  and eax, 0xf8
 8083dbf:  cmp eax, 0xf0
 8083dc4:  je 8083e27
 8083dc6:  mov eax, ecx
 8083dc8:  and eax, 0xfc
 8083dcd:  cmp eax, 0xf8
 8083dd2:  je 8083e11
 8083dd4:  mov ebx, ecx
 8083dd6:  mov esi, 0x5
 8083ddb:  and ebx, 0x1
 8083dde:  mov edi, 0x600
 8083de3:  mov eax, 0x1e
 8083de8:  jmp 8083822
 8083ded:  mov DWORD PTR [esp+0xc], 0x80b5d1a
 8083df5:  mov DWORD PTR [esp+0x8], 0x1ce
 8083dfd:  mov DWORD PTR [esp+0x4], 0x80b5c4f
 8083e05:  mov DWORD PTR [esp], 0x80b5c9b
 8083e0c:  call 8051490
 8083e11:  mov ebx, ecx
 8083e13:  mov esi, 0x4
 8083e18:  and ebx, 0x3
 8083e1b:  mov edi, 0x500
 8083e20:  mov al, 0x18
 8083e22:  jmp 8083822
 8083e27:  mov ebx, ecx
 8083e29:  mov esi, 0x3
 8083e2e:  and ebx, 0x7
 8083e31:  mov edi, 0x400
 8083e36:  mov al, 0x12
 8083e38:  jmp 8083822
 8083e3d:  mov ebx, ecx
 8083e3f:  mov esi, 0x2
 8083e44:  and ebx, 0xf
 8083e47:  mov edi, 0x300
 8083e4c:  mov al, 0xc
 8083e4e:  jmp 8083822
 8083e53:  mov ebx, ecx
 8083e55:  mov esi, 0x3
 8083e5a:  and ebx, 0x7
 8083e5d:  mov edi, 0x400
 8083e62:  mov al, 0x12
 8083e64:  jmp 80836b7
 8083e69:  mov ebx, ecx
 8083e6b:  mov esi, 0x2
 8083e70:  and ebx, 0xf
 8083e73:  mov edi, 0x300
 8083e78:  mov al, 0xc
 8083e7a:  jmp 80836b7
 8083e7f:  mov DWORD PTR [esp+0xc], 0x80b5f40
 8083e87:  mov DWORD PTR [esp+0x8], 0x22f
 8083e8f:  mov DWORD PTR [esp+0x4], 0x80b5c20
 8083e97:  mov DWORD PTR [esp], 0x80b5c34
 8083e9e:  call 8051490
 8083ea3:  mov eax, DWORD PTR [ebp+0x18]
 8083ea6:  test eax, eax
 8083ea8:  jne 8083f70
 8083eae:  mov ecx, DWORD PTR [ebp+0xc]
 8083eb1:  mov eax, DWORD PTR [ecx+0x14]
 8083eb4:  mov DWORD PTR [eax], 0x0
 8083eba:  mov DWORD PTR [eax+0x4], 0x0
 8083ec1:  test BYTE PTR [ecx+0x8], 0x1
 8083ec5:  mov DWORD PTR [ebp-0x68], 0x0
 8083ecc:  jne 8083361
 8083ed2:  mov edi, DWORD PTR [ebp-0x6c]
 8083ed5:  mov DWORD PTR [esp], edi
 8083ed8:  call 807f350
 8083edd:  mov eax, DWORD PTR [ebp+0x24]
 8083ee0:  mov DWORD PTR [esp+0x18], ebx
 8083ee4:  mov DWORD PTR [esp+0x1c], eax
 8083ee8:  mov edx, DWORD PTR [ebp+0x1c]
 8083eeb:  mov DWORD PTR [esp+0x10], 0x0
 8083ef3:  mov DWORD PTR [esp+0xc], 0x0
 8083efb:  mov DWORD PTR [esp+0x8], 0x0
 8083f03:  mov DWORD PTR [esp+0x14], edx
 8083f07:  mov ecx, DWORD PTR [ebp-0x70]
 8083f0a:  mov DWORD PTR [esp+0x4], ecx
 8083f0e:  mov ebx, DWORD PTR [ebp-0x74]
 8083f11:  mov DWORD PTR [esp], ebx
 8083f14:  call edi
 8083f16:  mov DWORD PTR [ebp-0x68], eax
 8083f19:  jmp 8083361
 8083f1e:  mov DWORD PTR [ebp-0x68], edi
 8083f21:  jmp 80834ca
 8083f26:  mov DWORD PTR [esp+0xc], 0x80b5d1a
 8083f2e:  mov DWORD PTR [esp+0x8], 0x1bc
 8083f36:  mov DWORD PTR [esp+0x4], 0x80b5c4f
 8083f3e:  mov DWORD PTR [esp], 0x80b5d80
 8083f45:  call 8051490
 8083f4a:  mov edx, DWORD PTR [ebp-0x68]
 8083f4d:  test edx, edx
 8083f4f:  jne 8083361
 8083f55:  mov ebx, DWORD PTR [ebp+0xc]
 8083f58:  mov edi, DWORD PTR [ebp-0x78]
 8083f5b:  mov esi, DWORD PTR [ebx+0x8]
 8083f5e:  jmp 8083143
 8083f63:  mov eax, DWORD PTR [ebp+0x18]
 8083f66:  mov eax, DWORD PTR [eax]
 8083f68:  mov DWORD PTR [ebp-0x60], eax
 8083f6b:  jmp 808310e
 8083f70:  mov DWORD PTR [esp+0xc], 0x80b5f40
 8083f78:  mov DWORD PTR [esp+0x8], 0x1a0
 8083f80:  mov DWORD PTR [esp+0x4], 0x80b5c20
 8083f88:  mov DWORD PTR [esp], 0x80b5c34
 8083f8f:  call 8051490
 8083f94:  lea esi, [esi]
 8083f9a:  lea edi, [edi]

08083fa0 <__gconv_transform_internal_utf8>:
 8083fa0:  push ebp
 8083fa1:  mov ebp, esp
 8083fa3:  push edi
 8083fa4:  push esi
 8083fa5:  push ebx
 8083fa6:  sub esp, 0x74
 8083fa9:  mov ecx, DWORD PTR [ebp+0xc]
 8083fac:  mov eax, DWORD PTR [ebp+0x8]
 8083faf:  mov edx, DWORD PTR [ebp+0xc]
 8083fb2:  mov ebx, DWORD PTR [ebp+0x20]
 8083fb5:  mov esi, DWORD PTR [ecx+0x8]
 8083fb8:  add eax, 0x3c
 8083fbb:  add edx, 0x24
 8083fbe:  mov DWORD PTR [ebp-0x54], eax
 8083fc1:  test esi, 0x1
 8083fc7:  mov DWORD PTR [ebp-0x50], edx
 8083fca:  mov DWORD PTR [ebp-0x4c], 0x0
 8083fd1:  jne 8083ff3
 8083fd3:  mov edx, DWORD PTR [ebp+0x8]
 8083fd6:  mov eax, DWORD PTR [ebp-0x54]
 8083fd9:  mov ecx, DWORD PTR [edx+0x3c]
 8083fdc:  mov eax, DWORD PTR [eax+0x14]
 8083fdf:  test ecx, ecx
 8083fe1:  mov DWORD PTR [ebp-0x4c], eax
 8083fe4:  je 8083ff3
 8083fe6:  ror eax, 0x9
 8083fe9:  xor eax, DWORD PTR gs:0x18
 8083ff0:  mov DWORD PTR [ebp-0x4c], eax
 8083ff3:  test ebx, ebx
 8083ff5:  jne 80846a4
 8083ffb:  mov eax, DWORD PTR [ebp+0x18]
 8083ffe:  test eax, eax
 8084000:  jne 80847ac
 8084006:  mov edx, DWORD PTR [ebp+0xc]
 8084009:  mov edx, DWORD PTR [edx]
 808400b:  mov DWORD PTR [ebp-0x40], edx
 808400e:  cmp DWORD PTR [ebp+0x1c], 0x1
 8084012:  mov ebx, DWORD PTR [ebp+0xc]
 8084015:  lea eax, [ebp-0x10]
 8084018:  mov DWORD PTR [ebp-0x38], eax
 808401b:  sbb eax, eax
 808401d:  not eax
 808401f:  and DWORD PTR [ebp-0x38], eax
 8084022:  mov eax, DWORD PTR [ebp+0x24]
 8084025:  mov ebx, DWORD PTR [ebx+0x4]
 8084028:  mov DWORD PTR [ebp-0x10], 0x0
 808402f:  test eax, eax
 8084031:  mov DWORD PTR [ebp-0x3c], ebx
 8084034:  je 8084048
 8084036:  mov edx, DWORD PTR [ebp+0xc]
 8084039:  mov edx, DWORD PTR [edx+0x14]
 808403c:  test BYTE PTR [edx], 0x7
 808403f:  mov DWORD PTR [ebp-0x28], edx
 8084042:  jne 80843a3
 8084048:  mov ecx, DWORD PTR [ebp-0x40]
 808404b:  nop
 808404c:  lea esi, [esi]
 8084050:  mov edx, DWORD PTR [ebp+0x10]
 8084053:  and esi, 0x2
 8084056:  mov DWORD PTR [ebp-0x30], esi
 8084059:  mov esi, ecx
 808405b:  mov DWORD PTR [ebp-0x48], 0x4
 8084062:  mov edx, DWORD PTR [edx]
 8084064:  mov DWORD PTR [ebp-0x18], ecx
 8084067:  mov DWORD PTR [ebp-0x44], edx
 808406a:  mov DWORD PTR [ebp-0x1c], edx
 808406d:  cmp DWORD PTR [ebp+0x14], edx
 8084070:  je 80840a8
 8084072:  lea eax, [edx+0x4]
 8084075:  cmp DWORD PTR [ebp+0x14], eax
 8084078:  jb 8084320
 808407e:  cmp DWORD PTR [ebp-0x3c], esi
 8084081:  jbe 80842f8
 8084087:  mov ebx, DWORD PTR [edx]
 8084089:  cmp ebx, 0x7f
 808408c:  ja 80841a0
 8084092:  lea eax, [esi+0x1]
 8084095:  mov BYTE PTR [esi], bl
 8084097:  mov esi, eax
 8084099:  mov DWORD PTR [ebp-0x18], eax
 808409c:  add DWORD PTR [ebp-0x1c], 0x4
 80840a0:  mov edx, DWORD PTR [ebp-0x1c]
 80840a3:  cmp DWORD PTR [ebp+0x14], edx
 80840a6:  jne 8084072
 80840a8:  mov ebx, DWORD PTR [ebp+0x10]
 80840ab:  mov DWORD PTR [ebx], edx
 80840ad:  mov ebx, DWORD PTR [ebp+0x18]
 80840b0:  test ebx, ebx
 80840b2:  jne 808430f
 80840b8:  mov edx, DWORD PTR [ebp+0xc]
 80840bb:  mov ebx, DWORD PTR [edx+0x20]
 80840be:  test ebx, ebx
 80840c0:  je 8084102
 80840c2:  lea esi, [esi]
 80840c8:  mov eax, DWORD PTR [ebx+0x4]
 80840cb:  test eax, eax
 80840cd:  je 80840fb
 80840cf:  mov DWORD PTR [esp], eax
 80840d2:  call 807f350
 80840d7:  mov DWORD PTR [esp+0x10], esi
 80840db:  mov ecx, DWORD PTR [ebp-0x40]
 80840de:  mov DWORD PTR [esp+0xc], ecx
 80840e2:  mov edx, DWORD PTR [ebp+0x10]
 80840e5:  mov eax, DWORD PTR [edx]
 80840e7:  mov DWORD PTR [esp+0x8], eax
 80840eb:  mov ecx, DWORD PTR [ebp-0x44]
 80840ee:  mov DWORD PTR [esp+0x4], ecx
 80840f2:  mov eax, DWORD PTR [ebx+0xc]
 80840f5:  mov DWORD PTR [esp], eax
 80840f8:  call DWORD PTR [ebx+0x4]
 80840fb:  mov ebx, DWORD PTR [ebx+0x10]
 80840fe:  test ebx, ebx
 8084100:  jne 80840c8
 8084102:  mov ebx, DWORD PTR [ebp+0xc]
 8084105:  add DWORD PTR [ebx+0xc], 0x1
 8084109:  test BYTE PTR [ebx+0x8], 0x1
 808410d:  jne 80844b4
 8084113:  cmp esi, DWORD PTR [ebp-0x40]
 8084116:  jbe 808417b
 8084118:  mov ecx, DWORD PTR [ebp+0xc]
 808411b:  mov ebx, DWORD PTR [ebp-0x4c]
 808411e:  mov eax, DWORD PTR [ecx]
 8084120:  mov DWORD PTR [ebp-0x18], eax
 8084123:  mov DWORD PTR [esp], ebx
 8084126:  lea ebx, [ebp-0x18]
 8084129:  call 807f350
 808412e:  mov eax, DWORD PTR [ebp+0x24]
 8084131:  mov DWORD PTR [esp+0x18], 0x0
 8084139:  mov DWORD PTR [esp+0x1c], eax
 808413d:  mov edx, DWORD PTR [ebp+0x1c]
 8084140:  mov DWORD PTR [esp+0x10], 0x0
 8084148:  mov DWORD PTR [esp+0xc], esi
 808414c:  mov DWORD PTR [esp+0x8], ebx
 8084150:  mov DWORD PTR [esp+0x14], edx
 8084154:  mov ecx, DWORD PTR [ebp-0x50]
 8084157:  mov DWORD PTR [esp+0x4], ecx
 808415b:  mov ebx, DWORD PTR [ebp-0x54]
 808415e:  mov DWORD PTR [esp], ebx
 8084161:  call DWORD PTR [ebp-0x4c]
 8084164:  cmp eax, 0x4
 8084167:  mov edi, eax
 8084169:  je 80842d0
 808416f:  cmp DWORD PTR [ebp-0x18], esi
 8084172:  jne 80844d1
 8084178:  mov DWORD PTR [ebp-0x48], edi
 808417b:  mov eax, DWORD PTR [ebp-0x48]
 808417e:  test eax, eax
 8084180:  jne 80842e5
 8084186:  mov ebx, DWORD PTR [ebp+0xc]
 8084189:  mov eax, DWORD PTR [ebp+0xc]
 808418c:  mov ebx, DWORD PTR [ebx]
 808418e:  mov esi, DWORD PTR [eax+0x8]
 8084191:  mov DWORD PTR [ebp-0x40], ebx
 8084194:  mov ecx, ebx
 8084196:  jmp 8084050
 808419b:  nop
 808419c:  lea esi, [esi]
 80841a0:  test ebx, ebx
 80841a2:  js 8084220
 80841a4:  test ebx, 0xfffff800
 80841aa:  mov ecx, 0x2
 80841af:  je 80841da
 80841b1:  test ebx, 0xffff0000
 80841b7:  mov ecx, 0x3
 80841bc:  je 80841da
 80841be:  test ebx, 0xffe00000
 80841c4:  mov ecx, 0x4
 80841c9:  je 80841da
 80841cb:  mov eax, ebx
 80841cd:  and eax, 0xfc000000
 80841d2:  cmp eax, 0x1
 80841d5:  sbb ecx, ecx
 80841d7:  add ecx, 0x6
 80841da:  lea edi, [esi+ecx]
 80841dd:  cmp DWORD PTR [ebp-0x3c], edi
 80841e0:  jb 80842f8
 80841e6:  mov eax, 0xffffff00
 80841eb:  mov edx, edi
 80841ed:  sar eax, cl
 80841ef:  mov BYTE PTR [esi], al
 80841f1:  add DWORD PTR [ebp-0x18], ecx
 80841f4:  lea esi, [esi]
 80841f8:  mov eax, ebx
 80841fa:  sub ecx, 0x1
 80841fd:  and eax, 0x3f
 8084200:  or eax, 0x80
 8084203:  mov BYTE PTR [edx-0x1], al
 8084206:  shr ebx, 0x6
 8084209:  sub edx, 0x1
 808420c:  cmp ecx, 0x1
 808420f:  ja 80841f8
 8084211:  or BYTE PTR [esi], bl
 8084213:  mov esi, DWORD PTR [ebp-0x18]
 8084216:  jmp 808409c
 808421b:  nop
 808421c:  lea esi, [esi]
 8084220:  mov eax, DWORD PTR [ebp-0x38]
 8084223:  test eax, eax
 8084225:  je 808432f
 808422b:  mov eax, DWORD PTR [ebp+0xc]
 808422e:  mov ebx, DWORD PTR [eax+0x20]
 8084231:  test ebx, ebx
 8084233:  jne 808423f
 8084235:  jmp 80842ab
 8084237:  nop
 8084238:  mov ebx, DWORD PTR [ebx+0x10]
 808423b:  test ebx, ebx
 808423d:  je 80842a8
 808423f:  mov eax, DWORD PTR [ebx]
 8084241:  mov DWORD PTR [esp], eax
 8084244:  call 807f350
 8084249:  mov edx, DWORD PTR [ebp-0x38]
 808424c:  lea ecx, [ebp-0x18]
 808424f:  mov DWORD PTR [esp+0x18], ecx
 8084253:  mov DWORD PTR [esp+0x1c], edx
 8084257:  mov eax, DWORD PTR [ebp+0x14]
 808425a:  lea edx, [ebp-0x1c]
 808425d:  mov DWORD PTR [esp+0x10], edx
 8084261:  mov DWORD PTR [esp+0x14], eax
 8084265:  mov ecx, DWORD PTR [ebp+0x10]
 8084268:  mov eax, DWORD PTR [ecx]
 808426a:  mov DWORD PTR [esp+0xc], eax
 808426e:  mov eax, DWORD PTR [ebx+0xc]
 8084271:  mov DWORD PTR [esp+0x8], eax
 8084275:  mov eax, DWORD PTR [ebp+0xc]
 8084278:  mov DWORD PTR [esp+0x4], eax
 808427c:  mov edx, DWORD PTR [ebp+0x8]
 808427f:  mov DWORD PTR [esp], edx
 8084282:  call DWORD PTR [ebx]
 8084284:  cmp eax, 0x6
 8084287:  mov DWORD PTR [ebp-0x48], eax
 808428a:  je 8084238
 808428c:  cmp DWORD PTR [ebp-0x48], 0x5
 8084290:  je 808433b
 8084296:  mov esi, DWORD PTR [ebp-0x18]
 8084299:  mov edx, DWORD PTR [ebp-0x1c]
 808429c:  jmp 808406d
 80842a1:  lea esi, [esi]
 80842a8:  mov esi, DWORD PTR [ebp-0x18]
 80842ab:  mov edi, DWORD PTR [ebp-0x30]
 80842ae:  test edi, edi
 80842b0:  je 808432c
 80842b2:  mov ecx, DWORD PTR [ebp-0x38]
 80842b5:  add DWORD PTR [ebp-0x1c], 0x4
 80842b9:  mov edx, DWORD PTR [ebp-0x1c]
 80842bc:  mov DWORD PTR [ebp-0x48], 0x6
 80842c3:  add DWORD PTR [ecx], 0x1
 80842c6:  jmp 808406d
 80842cb:  nop
 80842cc:  lea esi, [esi]
 80842d0:  cmp DWORD PTR [ebp-0x48], 0x5
 80842d4:  je 8084186
 80842da:  mov eax, DWORD PTR [ebp-0x48]
 80842dd:  test eax, eax
 80842df:  je 8084186
 80842e5:  mov eax, DWORD PTR [ebp+0x24]
 80842e8:  test eax, eax
 80842ea:  jne 8084346
 80842ec:  mov eax, DWORD PTR [ebp-0x48]
 80842ef:  add esp, 0x74
 80842f2:  pop ebx
 80842f3:  pop esi
 80842f4:  pop edi
 80842f5:  pop ebp
 80842f6:  ret
 80842f7:  nop
 80842f8:  mov ebx, DWORD PTR [ebp+0x10]
 80842fb:  mov DWORD PTR [ebp-0x48], 0x5
 8084302:  mov DWORD PTR [ebx], edx
 8084304:  mov ebx, DWORD PTR [ebp+0x18]
 8084307:  test ebx, ebx
 8084309:  je 80840b8
 808430f:  mov eax, DWORD PTR [ebp+0x18]
 8084312:  mov DWORD PTR [eax], esi
 8084314:  mov eax, DWORD PTR [ebp-0x48]
 8084317:  add esp, 0x74
 808431a:  pop ebx
 808431b:  pop esi
 808431c:  pop edi
 808431d:  pop ebp
 808431e:  ret
 808431f:  nop
 8084320:  mov DWORD PTR [ebp-0x48], 0x7
 8084327:  jmp 80840a8
 808432c:  mov edx, DWORD PTR [ebp-0x1c]
 808432f:  mov DWORD PTR [ebp-0x48], 0x6
 8084336:  jmp 80840a8
 808433b:  mov esi, DWORD PTR [ebp-0x18]
 808433e:  mov edx, DWORD PTR [ebp-0x1c]
 8084341:  jmp 80840a8
 8084346:  cmp DWORD PTR [ebp-0x48], 0x7
 808434a:  jne 80842ec
 808434c:  mov edx, DWORD PTR [ebp+0x10]
 808434f:  mov eax, DWORD PTR [ebp+0x14]
 8084352:  mov ebx, DWORD PTR [edx]
 8084354:  sub eax, ebx
 8084356:  cmp eax, 0x3
 8084359:  jg 80847de
 808435f:  xor esi, esi
 8084361:  xor edx, edx
 8084363:  cmp DWORD PTR [ebp+0x14], ebx
 8084366:  mov ecx, ebx
 8084368:  jbe 808438c
 808436a:  mov eax, DWORD PTR [ebp+0xc]
 808436d:  mov edx, DWORD PTR [eax+0x14]
 8084370:  movzx eax, BYTE PTR [ecx]
 8084373:  add ecx, 0x1
 8084376:  mov BYTE PTR [edx+esi+0x4], al
 808437a:  mov edx, DWORD PTR [ebp+0x10]
 808437d:  add esi, 0x1
 8084380:  mov DWORD PTR [edx], ecx
 8084382:  cmp DWORD PTR [ebp+0x14], ecx
 8084385:  ja 808436a
 8084387:  mov edx, DWORD PTR [ebp+0x14]
 808438a:  sub edx, ebx
 808438c:  mov ecx, DWORD PTR [ebp+0xc]
 808438f:  mov eax, DWORD PTR [ecx+0x14]
 8084392:  and DWORD PTR [eax], 0xf8
 8084395:  or DWORD PTR [eax], edx
 8084397:  mov DWORD PTR [ebp-0x48], 0x7
 808439e:  jmp 80842ec
 80843a3:  mov eax, DWORD PTR [ebp+0x18]
 80843a6:  test eax, eax
 80843a8:  jne 8084788
 80843ae:  mov ecx, DWORD PTR [ebp+0x10]
 80843b1:  xor edx, edx
 80843b3:  mov ebx, DWORD PTR [ebp-0x40]
 80843b6:  mov eax, DWORD PTR [ecx]
 80843b8:  mov DWORD PTR [ebp-0x1c], ebx
 80843bb:  mov DWORD PTR [ebp-0x18], eax
 80843be:  lea eax, [ebp-0x14]
 80843c1:  mov DWORD PTR [ebp-0x60], eax
 80843c4:  mov ecx, DWORD PTR [ebp-0x28]
 80843c7:  movzx eax, BYTE PTR [ecx+edx+0x4]
 80843cc:  mov BYTE PTR [ebp+edx-0x14], al
 80843d0:  mov eax, DWORD PTR [ecx]
 80843d2:  add edx, 0x1
 80843d5:  and eax, 0x7
 80843d8:  cmp edx, eax
 80843da:  jb 80843c4
 80843dc:  mov eax, 0x4
 80843e1:  mov ebx, edx
 80843e3:  sub eax, edx
 80843e5:  add eax, DWORD PTR [ebp-0x18]
 80843e8:  cmp DWORD PTR [ebp+0x14], eax
 80843eb:  jae 8084415
 80843ed:  mov eax, DWORD PTR [ebp+0x14]
 80843f0:  mov ebx, DWORD PTR [ebp+0x10]
 80843f3:  mov DWORD PTR [ebx], eax
 80843f5:  mov ebx, DWORD PTR [ebp-0x18]
 80843f8:  cmp eax, ebx
 80843fa:  jbe 8084397
 80843fc:  lea edx, [ecx+edx+0x4]
 8084400:  movzx eax, BYTE PTR [ebx]
 8084403:  add ebx, 0x1
 8084406:  mov BYTE PTR [edx], al
 8084408:  add edx, 0x1
 808440b:  cmp DWORD PTR [ebp+0x14], ebx
 808440e:  mov DWORD PTR [ebp-0x18], ebx
 8084411:  ja 8084400
 8084413:  jmp 8084397
 8084415:  mov edx, DWORD PTR [ebp-0x3c]
 8084418:  cmp DWORD PTR [ebp-0x40], edx
 808441b:  mov DWORD PTR [ebp-0x48], 0x5
 8084422:  jae 80842ec
 8084428:  lea ecx, [ebp-0x14]
 808442b:  add ecx, ebx
 808442d:  mov edx, DWORD PTR [ebp-0x18]
 8084430:  add ebx, 0x1
 8084433:  movzx eax, BYTE PTR [edx]
 8084436:  mov BYTE PTR [ecx], al
 8084438:  lea eax, [edx+0x1]
 808443b:  add ecx, 0x1
 808443e:  cmp ebx, 0x3
 8084441:  mov DWORD PTR [ebp-0x18], eax
 8084444:  jbe 80844c3
 8084446:  lea ecx, [ebp-0x14]
 8084449:  mov eax, ecx
 808444b:  add eax, ebx
 808444d:  mov ebx, DWORD PTR [ebp-0x14]
 8084450:  mov DWORD PTR [ebp-0x18], ecx
 8084453:  mov DWORD PTR [ebp-0x34], eax
 8084456:  cmp ebx, 0x7f
 8084459:  ja 8084846
 808445f:  mov eax, DWORD PTR [ebp-0x1c]
 8084462:  mov BYTE PTR [eax], bl
 8084464:  add eax, 0x1
 8084467:  mov DWORD PTR [ebp-0x1c], eax
 808446a:  add DWORD PTR [ebp-0x18], 0x4
 808446e:  mov DWORD PTR [ebp-0x48], 0x0
 8084475:  mov eax, DWORD PTR [ebp-0x18]
 8084478:  cmp eax, DWORD PTR [ebp-0x60]
 808447b:  je 8084826
 8084481:  mov ecx, DWORD PTR [ebp-0x28]
 8084484:  mov edx, eax
 8084486:  sub edx, DWORD PTR [ebp-0x60]
 8084489:  mov eax, DWORD PTR [ecx]
 808448b:  and eax, 0x7
 808448e:  cmp edx, eax
 8084490:  jle 8084802
 8084496:  mov ebx, DWORD PTR [ebp+0x10]
 8084499:  sub edx, eax
 808449b:  mov ecx, DWORD PTR [ebp+0xc]
 808449e:  add DWORD PTR [ebx], edx
 80844a0:  mov edx, DWORD PTR [ebp-0x28]
 80844a3:  mov eax, DWORD PTR [ebp-0x1c]
 80844a6:  and DWORD PTR [edx], 0xf8
 80844a9:  mov esi, DWORD PTR [ecx+0x8]
 80844ac:  mov DWORD PTR [ebp-0x40], eax
 80844af:  jmp 8084048
 80844b4:  mov edx, DWORD PTR [ebp+0x1c]
 80844b7:  mov eax, DWORD PTR [ebp-0x10]
 80844ba:  mov DWORD PTR [ebx], esi
 80844bc:  add DWORD PTR [edx], eax
 80844be:  jmp 80842e5
 80844c3:  cmp DWORD PTR [ebp+0x14], eax
 80844c6:  ja 808442d
 80844cc:  jmp 8084446
 80844d1:  mov ebx, DWORD PTR [ebp+0xc]
 80844d4:  mov esi, 0x4
 80844d9:  mov edx, DWORD PTR [ebp-0x44]
 80844dc:  mov eax, DWORD PTR [ebp+0x10]
 80844df:  mov ebx, DWORD PTR [ebx+0x8]
 80844e2:  mov DWORD PTR [eax], edx
 80844e4:  mov eax, DWORD PTR [ebp-0x40]
 80844e7:  mov ecx, DWORD PTR [ebp-0x18]
 80844ea:  and ebx, 0x2
 80844ed:  mov DWORD PTR [ebp-0x1c], edx
 80844f0:  mov DWORD PTR [ebp-0x20], eax
 80844f3:  mov DWORD PTR [ebp-0x24], ecx
 80844f6:  mov DWORD PTR [ebp-0x2c], ebx
 80844f9:  mov DWORD PTR [ebp-0x5c], eax
 80844fc:  jmp 8084514
 80844fe:  mov eax, ecx
 8084500:  add eax, 0x1
 8084503:  mov BYTE PTR [ecx], bl
 8084505:  mov ecx, eax
 8084507:  mov DWORD PTR [ebp-0x20], eax
 808450a:  add DWORD PTR [ebp-0x1c], 0x4
 808450e:  mov edx, DWORD PTR [ebp-0x1c]
 8084511:  mov DWORD PTR [ebp-0x5c], ecx
 8084514:  cmp DWORD PTR [ebp+0x14], edx
 8084517:  je 808466f
 808451d:  lea eax, [edx+0x4]
 8084520:  cmp DWORD PTR [ebp+0x14], eax
 8084523:  jb 80847c7
 8084529:  mov ecx, DWORD PTR [ebp-0x5c]
 808452c:  cmp DWORD PTR [ebp-0x24], ecx
 808452f:  jbe 808466a
 8084535:  mov ebx, DWORD PTR [edx]
 8084537:  cmp ebx, 0x7f
 808453a:  jbe 80844fe
 808453c:  test ebx, ebx
 808453e:  js 80845bf
 8084540:  test ebx, 0xfffff800
 8084546:  mov ecx, 0x2
 808454b:  je 8084576
 808454d:  test ebx, 0xffff0000
 8084553:  mov ecx, 0x3
 8084558:  je 8084576
 808455a:  test ebx, 0xffe00000
 8084560:  mov ecx, 0x4
 8084565:  je 8084576
 8084567:  mov eax, ebx
 8084569:  and eax, 0xfc000000
 808456e:  cmp eax, 0x1
 8084571:  sbb ecx, ecx
 8084573:  add ecx, 0x6
 8084576:  mov eax, DWORD PTR [ebp-0x5c]
 8084579:  add eax, ecx
 808457b:  cmp DWORD PTR [ebp-0x24], eax
 808457e:  mov DWORD PTR [ebp-0x58], eax
 8084581:  jb 808466a
 8084587:  mov edx, DWORD PTR [ebp-0x5c]
 808458a:  mov eax, 0xffffff00
 808458f:  sar eax, cl
 8084591:  mov BYTE PTR [edx], al
 8084593:  mov edx, DWORD PTR [ebp-0x58]
 8084596:  add DWORD PTR [ebp-0x20], ecx
 8084599:  mov eax, ebx
 808459b:  sub ecx, 0x1
 808459e:  and eax, 0x3f
 80845a1:  or eax, 0x80
 80845a4:  mov BYTE PTR [edx-0x1], al
 80845a7:  shr ebx, 0x6
 80845aa:  sub edx, 0x1
 80845ad:  cmp ecx, 0x1
 80845b0:  ja 8084599
 80845b2:  mov ecx, DWORD PTR [ebp-0x5c]
 80845b5:  or BYTE PTR [ecx], bl
 80845b7:  mov ecx, DWORD PTR [ebp-0x20]
 80845ba:  jmp 808450a
 80845bf:  mov ecx, DWORD PTR [ebp-0x38]
 80845c2:  test ecx, ecx
 80845c4:  je 80847d4
 80845ca:  mov eax, DWORD PTR [ebp+0xc]
 80845cd:  mov ebx, DWORD PTR [eax+0x20]
 80845d0:  test ebx, ebx
 80845d2:  jne 80845df
 80845d4:  jmp 8084648
 80845d6:  xchg ax, ax
 80845d8:  mov ebx, DWORD PTR [ebx+0x10]
 80845db:  test ebx, ebx
 80845dd:  je 8084642
 80845df:  mov eax, DWORD PTR [ebx]
 80845e1:  mov DWORD PTR [esp], eax
 80845e4:  call 807f350
 80845e9:  mov edx, DWORD PTR [ebp-0x38]
 80845ec:  lea ecx, [ebp-0x20]
 80845ef:  mov DWORD PTR [esp+0x18], ecx
 80845f3:  mov DWORD PTR [esp+0x1c], edx
 80845f7:  mov eax, DWORD PTR [ebp+0x14]
 80845fa:  lea edx, [ebp-0x1c]
 80845fd:  mov DWORD PTR [esp+0x10], edx
 8084601:  mov DWORD PTR [esp+0x14], eax
 8084605:  mov ecx, DWORD PTR [ebp+0x10]
 8084608:  mov eax, DWORD PTR [ecx]
 808460a:  mov DWORD PTR [esp+0xc], eax
 808460e:  mov eax, DWORD PTR [ebx+0xc]
 8084611:  mov DWORD PTR [esp+0x8], eax
 8084615:  mov eax, DWORD PTR [ebp+0xc]
 8084618:  mov DWORD PTR [esp+0x4], eax
 808461c:  mov edx, DWORD PTR [ebp+0x8]
 808461f:  mov DWORD PTR [esp], edx
 8084622:  call DWORD PTR [ebx]
 8084624:  cmp eax, 0x6
 8084627:  mov esi, eax
 8084629:  je 80845d8
 808462b:  cmp eax, 0x5
 808462e:  je 80847b9
 8084634:  mov ebx, DWORD PTR [ebp-0x20]
 8084637:  mov edx, DWORD PTR [ebp-0x1c]
 808463a:  mov DWORD PTR [ebp-0x5c], ebx
 808463d:  jmp 8084514
 8084642:  mov ecx, DWORD PTR [ebp-0x20]
 8084645:  mov DWORD PTR [ebp-0x5c], ecx
 8084648:  mov eax, DWORD PTR [ebp-0x2c]
 808464b:  test eax, eax
 808464d:  je 80847d1
 8084653:  mov edx, DWORD PTR [ebp-0x38]
 8084656:  mov esi, 0x6
 808465b:  add DWORD PTR [ebp-0x1c], 0x4
 808465f:  add DWORD PTR [edx], 0x1
 8084662:  mov edx, DWORD PTR [ebp-0x1c]
 8084665:  jmp 8084514
 808466a:  mov esi, 0x5
 808466f:  mov ebx, DWORD PTR [ebp+0x10]
 8084672:  mov eax, DWORD PTR [ebp-0x5c]
 8084675:  mov DWORD PTR [ebx], edx
 8084677:  cmp DWORD PTR [ebp-0x18], eax
 808467a:  jne 8084764
 8084680:  cmp esi, 0x5
 8084683:  jne 8084740
 8084689:  mov edx, DWORD PTR [ebp-0x5c]
 808468c:  cmp DWORD PTR [ebp-0x40], edx
 808468f:  jne 8084178
 8084695:  mov ecx, DWORD PTR [ebp+0xc]
 8084698:  mov DWORD PTR [ebp-0x48], edi
 808469b:  sub DWORD PTR [ecx+0xc], 0x1
 808469f:  jmp 808417b
 80846a4:  mov edx, DWORD PTR [ebp+0x18]
 80846a7:  test edx, edx
 80846a9:  jne 808471c
 80846ab:  mov ecx, DWORD PTR [ebp+0xc]
 80846ae:  mov eax, DWORD PTR [ecx+0x14]
 80846b1:  mov DWORD PTR [eax], 0x0
 80846b7:  mov DWORD PTR [eax+0x4], 0x0
 80846be:  test BYTE PTR [ecx+0x8], 0x1
 80846c2:  mov DWORD PTR [ebp-0x48], 0x0
 80846c9:  jne 80842ec
 80846cf:  mov eax, DWORD PTR [ebp-0x4c]
 80846d2:  mov DWORD PTR [esp], eax
 80846d5:  call 807f350
 80846da:  mov edx, DWORD PTR [ebp+0x24]
 80846dd:  mov DWORD PTR [esp+0x18], ebx
 80846e1:  mov DWORD PTR [esp+0x1c], edx
 80846e5:  mov ecx, DWORD PTR [ebp+0x1c]
 80846e8:  mov DWORD PTR [esp+0x10], 0x0
 80846f0:  mov DWORD PTR [esp+0xc], 0x0
 80846f8:  mov DWORD PTR [esp+0x8], 0x0
 8084700:  mov DWORD PTR [esp+0x14], ecx
 8084704:  mov ebx, DWORD PTR [ebp-0x50]
 8084707:  mov DWORD PTR [esp+0x4], ebx
 808470b:  mov eax, DWORD PTR [ebp-0x54]
 808470e:  mov DWORD PTR [esp], eax
 8084711:  call DWORD PTR [ebp-0x4c]
 8084714:  mov DWORD PTR [ebp-0x48], eax
 8084717:  jmp 80842ec
 808471c:  mov DWORD PTR [esp+0xc], 0x80b5f60
 8084724:  mov DWORD PTR [esp+0x8], 0x1a0
 808472c:  mov DWORD PTR [esp+0x4], 0x80b5c20
 8084734:  mov DWORD PTR [esp], 0x80b5c34
 808473b:  call 8051490
 8084740:  mov DWORD PTR [esp+0xc], 0x80b5f60
 8084748:  mov DWORD PTR [esp+0x8], 0x2e1
 8084750:  mov DWORD PTR [esp+0x4], 0x80b5c20
 8084758:  mov DWORD PTR [esp], 0x80b5dd0
 808475f:  call 8051490
 8084764:  mov DWORD PTR [esp+0xc], 0x80b5f60
 808476c:  mov DWORD PTR [esp+0x8], 0x2e0
 8084774:  mov DWORD PTR [esp+0x4], 0x80b5c20
 808477c:  mov DWORD PTR [esp], 0x80b5cb0
 8084783:  call 8051490
 8084788:  mov DWORD PTR [esp+0xc], 0x80b5f60
 8084790:  mov DWORD PTR [esp+0x8], 0x22f
 8084798:  mov DWORD PTR [esp+0x4], 0x80b5c20
 80847a0:  mov DWORD PTR [esp], 0x80b5c34
 80847a7:  call 8051490
 80847ac:  mov ecx, DWORD PTR [ebp+0x18]
 80847af:  mov ecx, DWORD PTR [ecx]
 80847b1:  mov DWORD PTR [ebp-0x40], ecx
 80847b4:  jmp 808400e
 80847b9:  mov eax, DWORD PTR [ebp-0x20]
 80847bc:  mov edx, DWORD PTR [ebp-0x1c]
 80847bf:  mov DWORD PTR [ebp-0x5c], eax
 80847c2:  jmp 808466f
 80847c7:  mov esi, 0x7
 80847cc:  jmp 808466f
 80847d1:  mov edx, DWORD PTR [ebp-0x1c]
 80847d4:  mov esi, 0x6
 80847d9:  jmp 808466f
 80847de:  mov DWORD PTR [esp+0xc], 0x80b5f60
 80847e6:  mov DWORD PTR [esp+0x8], 0x312
 80847ee:  mov DWORD PTR [esp+0x4], 0x80b5c20
 80847f6:  mov DWORD PTR [esp], 0x80b5c87
 80847fd:  call 8051490
 8084802:  mov DWORD PTR [esp+0xc], 0x80b5d34
 808480a:  mov DWORD PTR [esp+0x8], 0x1bc
 8084812:  mov DWORD PTR [esp+0x4], 0x80b5c4f
 808481a:  mov DWORD PTR [esp], 0x80b5d80
 8084821:  call 8051490
 8084826:  cmp DWORD PTR [ebp-0x48], 0x7
 808482a:  je 80848b9
 8084830:  mov eax, DWORD PTR [ebp-0x48]
 8084833:  test eax, eax
 8084835:  jne 80842ec
 808483b:  mov eax, DWORD PTR [ebp+0xc]
 808483e:  mov esi, DWORD PTR [eax+0x8]
 8084841:  jmp 8084048
 8084846:  test ebx, ebx
 8084848:  js 808492a
 808484e:  mov edi, 0x2
 8084853:  mov edx, 0xb
 8084858:  mov esi, 0xffffffff
 808485d:  jmp 808486b
 808485f:  nop
 8084860:  add edi, 0x1
 8084863:  add edx, 0x5
 8084866:  cmp edi, 0x6
 8084869:  je 8084875
 808486b:  mov eax, esi
 808486d:  mov ecx, edx
 808486f:  shl eax, cl
 8084871:  test eax, ebx
 8084873:  jne 8084860
 8084875:  mov esi, DWORD PTR [ebp-0x1c]
 8084878:  mov DWORD PTR [ebp-0x48], 0x5
 808487f:  lea edx, [esi+edi]
 8084882:  cmp DWORD PTR [ebp-0x3c], edx
 8084885:  jb 80842ec
 808488b:  mov eax, 0xffffff00
 8084890:  mov ecx, edi
 8084892:  sar eax, cl
 8084894:  mov BYTE PTR [esi], al
 8084896:  add DWORD PTR [ebp-0x1c], edi
 8084899:  mov eax, ebx
 808489b:  sub edi, 0x1
 808489e:  and eax, 0x3f
 80848a1:  or eax, 0x80
 80848a4:  mov BYTE PTR [edx-0x1], al
 80848a7:  shr ebx, 0x6
 80848aa:  sub edx, 0x1
 80848ad:  cmp edi, 0x1
 80848b0:  ja 8084899
 80848b2:  or BYTE PTR [esi], bl
 80848b4:  jmp 808446a
 80848b9:  lea eax, [ebp-0x10]
 80848bc:  cmp DWORD PTR [ebp-0x34], eax
 80848bf:  je 80849e1
 80848c5:  mov ebx, DWORD PTR [ebp-0x28]
 80848c8:  mov eax, DWORD PTR [ebp-0x34]
 80848cb:  sub eax, DWORD PTR [ebp-0x60]
 80848ce:  mov ecx, DWORD PTR [ebx]
 80848d0:  mov edx, ecx
 80848d2:  and edx, 0x7
 80848d5:  sub eax, edx
 80848d7:  mov edx, DWORD PTR [ebp+0x10]
 80848da:  add DWORD PTR [edx], eax
 80848dc:  mov edx, ecx
 80848de:  mov eax, DWORD PTR [ebp-0x34]
 80848e1:  and edx, 0xf8
 80848e4:  sub eax, DWORD PTR [ebp-0x18]
 80848e7:  cmp eax, edx
 80848e9:  jle 80849bd
 80848ef:  cmp eax, 0x7
 80848f2:  jg 8084a05
 80848f8:  mov ecx, DWORD PTR [ebp-0x28]
 80848fb:  or eax, edx
 80848fd:  lea edx, [ebp-0x14]
 8084900:  cmp DWORD PTR [ebp-0x34], edx
 8084903:  mov DWORD PTR [ecx], eax
 8084905:  jbe 80842ec
 808490b:  xor ecx, ecx
 808490d:  movzx eax, BYTE PTR [edx]
 8084910:  add edx, 0x1
 8084913:  mov ebx, DWORD PTR [ebp-0x28]
 8084916:  mov BYTE PTR [ebx+ecx+0x4], al
 808491a:  add ecx, 0x1
 808491d:  cmp DWORD PTR [ebp-0x34], edx
 8084920:  mov DWORD PTR [ebp-0x18], edx
 8084923:  ja 808490d
 8084925:  jmp 80842ec
 808492a:  mov eax, DWORD PTR [ebp-0x38]
 808492d:  test eax, eax
 808492f:  je 8084a29
 8084935:  mov ebx, DWORD PTR [ebp+0xc]
 8084938:  mov edi, DWORD PTR [ebx+0x20]
 808493b:  test edi, edi
 808493d:  je 8084997
 808493f:  lea ebx, [ebp-0x18]
 8084942:  mov eax, DWORD PTR [edi]
 8084944:  mov DWORD PTR [esp], eax
 8084947:  call 807f350
 808494c:  mov eax, DWORD PTR [ebp-0x38]
 808494f:  lea edx, [ebp-0x1c]
 8084952:  mov DWORD PTR [esp+0x18], edx
 8084956:  mov DWORD PTR [esp+0x1c], eax
 808495a:  mov ecx, DWORD PTR [ebp-0x34]
 808495d:  mov DWORD PTR [esp+0x10], ebx
 8084961:  mov DWORD PTR [esp+0x14], ecx
 8084965:  mov edx, DWORD PTR [ebp+0x10]
 8084968:  mov eax, DWORD PTR [edx]
 808496a:  mov DWORD PTR [esp+0xc], eax
 808496e:  mov eax, DWORD PTR [edi+0xc]
 8084971:  mov DWORD PTR [esp+0x8], eax
 8084975:  mov ecx, DWORD PTR [ebp+0xc]
 8084978:  mov DWORD PTR [esp+0x4], ecx
 808497c:  mov eax, DWORD PTR [ebp+0x8]
 808497f:  mov DWORD PTR [esp], eax
 8084982:  call DWORD PTR [edi]
 8084984:  cmp eax, 0x6
 8084987:  mov DWORD PTR [ebp-0x48], eax
 808498a:  jne 8084475
 8084990:  mov edi, DWORD PTR [edi+0x10]
 8084993:  test edi, edi
 8084995:  jne 8084942
 8084997:  and esi, 0x2
 808499a:  mov DWORD PTR [ebp-0x48], 0x6
 80849a1:  je 8084475
 80849a7:  mov edx, DWORD PTR [ebp-0x38]
 80849aa:  add DWORD PTR [ebp-0x18], 0x4
 80849ae:  mov DWORD PTR [ebp-0x48], 0x6
 80849b5:  add DWORD PTR [edx], 0x1
 80849b8:  jmp 8084475
 80849bd:  mov DWORD PTR [esp+0xc], 0x80b5d34
 80849c5:  mov DWORD PTR [esp+0x8], 0x1d8
 80849cd:  mov DWORD PTR [esp+0x4], 0x80b5c4f
 80849d5:  mov DWORD PTR [esp], 0x80b5da8
 80849dc:  call 8051490
 80849e1:  mov DWORD PTR [esp+0xc], 0x80b5d34
 80849e9:  mov DWORD PTR [esp+0x8], 0x1ce
 80849f1:  mov DWORD PTR [esp+0x4], 0x80b5c4f
 80849f9:  mov DWORD PTR [esp], 0x80b5c5f
 8084a00:  call 8051490
 8084a05:  mov DWORD PTR [esp+0xc], 0x80b5d34
 8084a0d:  mov DWORD PTR [esp+0x8], 0x1d9
 8084a15:  mov DWORD PTR [esp+0x4], 0x80b5c4f
 8084a1d:  mov DWORD PTR [esp], 0x80b5c74
 8084a24:  call 8051490
 8084a29:  mov DWORD PTR [ebp-0x48], 0x6
 8084a30:  jmp 80842ec
 8084a35:  lea esi, [esi]
 8084a39:  lea edi, [edi]

08084a40 <__gconv_transform_internal_ascii>:
 8084a40:  push ebp
 8084a41:  mov ebp, esp
 8084a43:  push edi
 8084a44:  push esi
 8084a45:  push ebx
 8084a46:  sub esp, 0x60
 8084a49:  mov ecx, DWORD PTR [ebp+0xc]
 8084a4c:  mov eax, DWORD PTR [ebp+0x8]
 8084a4f:  mov edx, DWORD PTR [ebp+0xc]
 8084a52:  mov ebx, DWORD PTR [ebp+0x20]
 8084a55:  mov ecx, DWORD PTR [ecx+0x8]
 8084a58:  add eax, 0x3c
 8084a5b:  add edx, 0x24
 8084a5e:  mov DWORD PTR [ebp-0x44], eax
 8084a61:  mov DWORD PTR [ebp-0x48], ecx
 8084a64:  and ecx, 0x1
 8084a67:  mov DWORD PTR [ebp-0x40], edx
 8084a6a:  mov DWORD PTR [ebp-0x3c], 0x0
 8084a71:  jne 8084a93
 8084a73:  mov edx, DWORD PTR [ebp+0x8]
 8084a76:  mov eax, DWORD PTR [ebp-0x44]
 8084a79:  mov esi, DWORD PTR [edx+0x3c]
 8084a7c:  mov eax, DWORD PTR [eax+0x14]
 8084a7f:  test esi, esi
 8084a81:  mov DWORD PTR [ebp-0x3c], eax
 8084a84:  je 8084a93
 8084a86:  ror eax, 0x9
 8084a89:  xor eax, DWORD PTR gs:0x18
 8084a90:  mov DWORD PTR [ebp-0x3c], eax
 8084a93:  test ebx, ebx
 8084a95:  jne 8085025
 8084a9b:  mov edx, DWORD PTR [ebp+0x18]
 8084a9e:  test edx, edx
 8084aa0:  jne 8085018
 8084aa6:  mov edx, DWORD PTR [ebp+0xc]
 8084aa9:  mov edx, DWORD PTR [edx]
 8084aab:  mov DWORD PTR [ebp-0x34], edx
 8084aae:  cmp DWORD PTR [ebp+0x1c], 0x1
 8084ab2:  mov ebx, DWORD PTR [ebp+0xc]
 8084ab5:  lea eax, [ebp-0x10]
 8084ab8:  mov DWORD PTR [ebp-0x2c], eax
 8084abb:  sbb eax, eax
 8084abd:  not eax
 8084abf:  and DWORD PTR [ebp-0x2c], eax
 8084ac2:  mov eax, DWORD PTR [ebp+0x24]
 8084ac5:  mov ebx, DWORD PTR [ebx+0x4]
 8084ac8:  mov DWORD PTR [ebp-0x10], 0x0
 8084acf:  test eax, eax
 8084ad1:  mov DWORD PTR [ebp-0x30], ebx
 8084ad4:  je 8084ae8
 8084ad6:  mov edx, DWORD PTR [ebp+0xc]
 8084ad9:  mov edx, DWORD PTR [edx+0x14]
 8084adc:  test BYTE PTR [edx], 0x7
 8084adf:  mov DWORD PTR [ebp-0x20], edx
 8084ae2:  jne 8084dd5
 8084ae8:  mov ecx, DWORD PTR [ebp-0x34]
 8084aeb:  nop
 8084aec:  lea esi, [esi]
 8084af0:  mov edx, DWORD PTR [ebp+0x10]
 8084af3:  mov esi, 0x4
 8084af8:  mov edi, ecx
 8084afa:  mov ebx, DWORD PTR [ebp-0x48]
 8084afd:  mov edx, DWORD PTR [edx]
 8084aff:  and ebx, 0x2
 8084b02:  mov DWORD PTR [ebp-0x1c], ecx
 8084b05:  mov DWORD PTR [ebp-0x24], ebx
 8084b08:  mov DWORD PTR [ebp-0x38], edx
 8084b0b:  mov DWORD PTR [ebp-0x18], edx
 8084b0e:  xchg ax, ax
 8084b10:  cmp DWORD PTR [ebp+0x14], edx
 8084b13:  je 8084bd8
 8084b19:  lea ecx, [edx+0x4]
 8084b1c:  cmp DWORD PTR [ebp+0x14], ecx
 8084b1f:  jb 8084d34
 8084b25:  cmp DWORD PTR [ebp-0x30], edi
 8084b28:  jbe 8084d58
 8084b2e:  mov eax, DWORD PTR [edx]
 8084b30:  cmp eax, 0x7f
 8084b33:  jbe 8084cc8
 8084b39:  shr eax, 0x7
 8084b3c:  cmp eax, 0x1c00
 8084b41:  je 8084d08
 8084b47:  mov eax, DWORD PTR [ebp-0x2c]
 8084b4a:  test eax, eax
 8084b4c:  je 8084d65
 8084b52:  mov eax, DWORD PTR [ebp+0xc]
 8084b55:  mov ebx, DWORD PTR [eax+0x20]
 8084b58:  test ebx, ebx
 8084b5a:  jne 8084b73
 8084b5c:  jmp 8084ce3
 8084b61:  lea esi, [esi]
 8084b68:  mov ebx, DWORD PTR [ebx+0x10]
 8084b6b:  test ebx, ebx
 8084b6d:  je 8084ce0
 8084b73:  mov eax, DWORD PTR [ebx]
 8084b75:  mov DWORD PTR [esp], eax
 8084b78:  call 807f350
 8084b7d:  mov edx, DWORD PTR [ebp-0x2c]
 8084b80:  lea ecx, [ebp-0x1c]
 8084b83:  mov DWORD PTR [esp+0x18], ecx
 8084b87:  mov DWORD PTR [esp+0x1c], edx
 8084b8b:  mov eax, DWORD PTR [ebp+0x14]
 8084b8e:  lea edx, [ebp-0x18]
 8084b91:  mov DWORD PTR [esp+0x10], edx
 8084b95:  mov DWORD PTR [esp+0x14], eax
 8084b99:  mov ecx, DWORD PTR [ebp+0x10]
 8084b9c:  mov eax, DWORD PTR [ecx]
 8084b9e:  mov DWORD PTR [esp+0xc], eax
 8084ba2:  mov eax, DWORD PTR [ebx+0xc]
 8084ba5:  mov DWORD PTR [esp+0x8], eax
 8084ba9:  mov eax, DWORD PTR [ebp+0xc]
 8084bac:  mov DWORD PTR [esp+0x4], eax
 8084bb0:  mov edx, DWORD PTR [ebp+0x8]
 8084bb3:  mov DWORD PTR [esp], edx
 8084bb6:  call DWORD PTR [ebx]
 8084bb8:  cmp eax, 0x6
 8084bbb:  mov esi, eax
 8084bbd:  je 8084b68
 8084bbf:  cmp eax, 0x5
 8084bc2:  je 8084d6f
 8084bc8:  mov edx, DWORD PTR [ebp-0x18]
 8084bcb:  cmp DWORD PTR [ebp+0x14], edx
 8084bce:  mov edi, DWORD PTR [ebp-0x1c]
 8084bd1:  jne 8084b19
 8084bd7:  nop
 8084bd8:  mov eax, DWORD PTR [ebp+0x18]
 8084bdb:  mov ebx, DWORD PTR [ebp+0x10]
 8084bde:  test eax, eax
 8084be0:  mov DWORD PTR [ebx], edx
 8084be2:  jne 8084d49
 8084be8:  mov edx, DWORD PTR [ebp+0xc]
 8084beb:  mov ebx, DWORD PTR [edx+0x20]
 8084bee:  test ebx, ebx
 8084bf0:  je 8084c32
 8084bf2:  lea esi, [esi]
 8084bf8:  mov eax, DWORD PTR [ebx+0x4]
 8084bfb:  test eax, eax
 8084bfd:  je 8084c2b
 8084bff:  mov DWORD PTR [esp], eax
 8084c02:  call 807f350
 8084c07:  mov DWORD PTR [esp+0x10], edi
 8084c0b:  mov ecx, DWORD PTR [ebp-0x34]
 8084c0e:  mov DWORD PTR [esp+0xc], ecx
 8084c12:  mov edx, DWORD PTR [ebp+0x10]
 8084c15:  mov eax, DWORD PTR [edx]
 8084c17:  mov DWORD PTR [esp+0x8], eax
 8084c1b:  mov ecx, DWORD PTR [ebp-0x38]
 8084c1e:  mov DWORD PTR [esp+0x4], ecx
 8084c22:  mov eax, DWORD PTR [ebx+0xc]
 8084c25:  mov DWORD PTR [esp], eax
 8084c28:  call DWORD PTR [ebx+0x4]
 8084c2b:  mov ebx, DWORD PTR [ebx+0x10]
 8084c2e:  test ebx, ebx
 8084c30:  jne 8084bf8
 8084c32:  mov ebx, DWORD PTR [ebp+0xc]
 8084c35:  add DWORD PTR [ebx+0xc], 0x1
 8084c39:  test BYTE PTR [ebx+0x8], 0x1
 8084c3d:  jne 8084f36
 8084c43:  cmp DWORD PTR [ebp-0x34], edi
 8084c46:  jae 8084ca8
 8084c48:  mov ecx, DWORD PTR [ebp+0xc]
 8084c4b:  mov ebx, DWORD PTR [ebp-0x3c]
 8084c4e:  mov eax, DWORD PTR [ecx]
 8084c50:  mov DWORD PTR [ebp-0x1c], eax
 8084c53:  mov DWORD PTR [esp], ebx
 8084c56:  lea ebx, [ebp-0x1c]
 8084c59:  call 807f350
 8084c5e:  mov eax, DWORD PTR [ebp+0x24]
 8084c61:  mov DWORD PTR [esp+0x18], 0x0
 8084c69:  mov DWORD PTR [esp+0x1c], eax
 8084c6d:  mov edx, DWORD PTR [ebp+0x1c]
 8084c70:  mov DWORD PTR [esp+0x10], 0x0
 8084c78:  mov DWORD PTR [esp+0xc], edi
 8084c7c:  mov DWORD PTR [esp+0x8], ebx
 8084c80:  mov DWORD PTR [esp+0x14], edx
 8084c84:  mov ecx, DWORD PTR [ebp-0x40]
 8084c87:  mov DWORD PTR [esp+0x4], ecx
 8084c8b:  mov ebx, DWORD PTR [ebp-0x44]
 8084c8e:  mov DWORD PTR [esp], ebx
 8084c91:  call DWORD PTR [ebp-0x3c]
 8084c94:  cmp eax, 0x4
 8084c97:  mov edx, eax
 8084c99:  je 8084d18
 8084c9b:  mov eax, DWORD PTR [ebp-0x1c]
 8084c9e:  mov esi, edx
 8084ca0:  cmp eax, edi
 8084ca2:  jne 8084f77
 8084ca8:  test esi, esi
 8084caa:  jne 8084d22
 8084cac:  mov ebx, DWORD PTR [ebp+0xc]
 8084caf:  mov eax, DWORD PTR [ebp+0xc]
 8084cb2:  mov ebx, DWORD PTR [ebx]
 8084cb4:  mov eax, DWORD PTR [eax+0x8]
 8084cb7:  mov DWORD PTR [ebp-0x34], ebx
 8084cba:  mov ecx, ebx
 8084cbc:  mov DWORD PTR [ebp-0x48], eax
 8084cbf:  jmp 8084af0
 8084cc4:  lea esi, [esi]
 8084cc8:  mov BYTE PTR [edi], al
 8084cca:  lea eax, [edi+0x1]
 8084ccd:  add DWORD PTR [ebp-0x18], 0x4
 8084cd1:  mov edi, eax
 8084cd3:  mov edx, DWORD PTR [ebp-0x18]
 8084cd6:  mov DWORD PTR [ebp-0x1c], eax
 8084cd9:  jmp 8084b10
 8084cde:  xchg ax, ax
 8084ce0:  mov edi, DWORD PTR [ebp-0x1c]
 8084ce3:  mov eax, DWORD PTR [ebp-0x24]
 8084ce6:  test eax, eax
 8084ce8:  je 8084d62
 8084cea:  mov ecx, DWORD PTR [ebp-0x2c]
 8084ced:  mov esi, 0x6
 8084cf2:  add DWORD PTR [ebp-0x18], 0x4
 8084cf6:  mov edx, DWORD PTR [ebp-0x18]
 8084cf9:  add DWORD PTR [ecx], 0x1
 8084cfc:  jmp 8084b10
 8084d01:  lea esi, [esi]
 8084d08:  mov DWORD PTR [ebp-0x18], ecx
 8084d0b:  mov edx, ecx
 8084d0d:  jmp 8084b10
 8084d12:  lea esi, [esi]
 8084d18:  cmp esi, 0x5
 8084d1b:  je 8084cac
 8084d1d:  test esi, esi
 8084d1f:  nop
 8084d20:  je 8084cac
 8084d22:  mov ebx, DWORD PTR [ebp+0x24]
 8084d25:  test ebx, ebx
 8084d27:  nop
 8084d28:  jne 8084d7a
 8084d2a:  add esp, 0x60
 8084d2d:  mov eax, esi
 8084d2f:  pop ebx
 8084d30:  pop esi
 8084d31:  pop edi
 8084d32:  pop ebp
 8084d33:  ret
 8084d34:  mov eax, DWORD PTR [ebp+0x18]
 8084d37:  mov esi, 0x7
 8084d3c:  mov ebx, DWORD PTR [ebp+0x10]
 8084d3f:  test eax, eax
 8084d41:  mov DWORD PTR [ebx], edx
 8084d43:  je 8084be8
 8084d49:  mov eax, DWORD PTR [ebp+0x18]
 8084d4c:  mov DWORD PTR [eax], edi
 8084d4e:  add esp, 0x60
 8084d51:  mov eax, esi
 8084d53:  pop ebx
 8084d54:  pop esi
 8084d55:  pop edi
 8084d56:  pop ebp
 8084d57:  ret
 8084d58:  mov esi, 0x5
 8084d5d:  jmp 8084bd8
 8084d62:  mov edx, DWORD PTR [ebp-0x18]
 8084d65:  mov esi, 0x6
 8084d6a:  jmp 8084bd8
 8084d6f:  mov edi, DWORD PTR [ebp-0x1c]
 8084d72:  mov edx, DWORD PTR [ebp-0x18]
 8084d75:  jmp 8084bd8
 8084d7a:  cmp esi, 0x7
 8084d7d:  jne 8084d2a
 8084d7f:  mov edx, DWORD PTR [ebp+0x10]
 8084d82:  mov eax, DWORD PTR [ebp+0x14]
 8084d85:  mov ebx, DWORD PTR [edx]
 8084d87:  sub eax, ebx
 8084d89:  cmp eax, 0x3
 8084d8c:  jg 8084f88
 8084d92:  xor si, si
 8084d95:  xor edx, edx
 8084d97:  cmp DWORD PTR [ebp+0x14], ebx
 8084d9a:  mov ecx, ebx
 8084d9c:  jbe 8084dc0
 8084d9e:  mov eax, DWORD PTR [ebp+0xc]
 8084da1:  mov edx, DWORD PTR [eax+0x14]
 8084da4:  movzx eax, BYTE PTR [ecx]
 8084da7:  add ecx, 0x1
 8084daa:  mov BYTE PTR [edx+esi+0x4], al
 8084dae:  mov edx, DWORD PTR [ebp+0x10]
 8084db1:  add esi, 0x1
 8084db4:  mov DWORD PTR [edx], ecx
 8084db6:  cmp DWORD PTR [ebp+0x14], ecx
 8084db9:  ja 8084d9e
 8084dbb:  mov edx, DWORD PTR [ebp+0x14]
 8084dbe:  sub edx, ebx
 8084dc0:  mov ecx, DWORD PTR [ebp+0xc]
 8084dc3:  mov eax, DWORD PTR [ecx+0x14]
 8084dc6:  and DWORD PTR [eax], 0xf8
 8084dc9:  or DWORD PTR [eax], edx
 8084dcb:  mov esi, 0x7
 8084dd0:  jmp 8084d2a
 8084dd5:  mov eax, DWORD PTR [ebp+0x18]
 8084dd8:  test eax, eax
 8084dda:  jne 8084fac
 8084de0:  mov ebx, DWORD PTR [ebp+0x10]
 8084de3:  xor edx, edx
 8084de5:  mov eax, DWORD PTR [ebp-0x34]
 8084de8:  mov ecx, DWORD PTR [ebx]
 8084dea:  lea ebx, [ebp-0x14]
 8084ded:  mov DWORD PTR [ebp-0x18], eax
 8084df0:  mov DWORD PTR [ebp-0x4c], ebx
 8084df3:  mov DWORD PTR [ebp-0x1c], ecx
 8084df6:  mov ebx, DWORD PTR [ebp-0x20]
 8084df9:  movzx eax, BYTE PTR [ebx+edx+0x4]
 8084dfe:  mov BYTE PTR [ebp+edx-0x14], al
 8084e02:  mov eax, DWORD PTR [ebx]
 8084e04:  add edx, 0x1
 8084e07:  and eax, 0x7
 8084e0a:  cmp edx, eax
 8084e0c:  jb 8084df6
 8084e0e:  sub ecx, edx
 8084e10:  mov ebx, edx
 8084e12:  lea eax, [ecx+0x4]
 8084e15:  cmp DWORD PTR [ebp+0x14], eax
 8084e18:  jb 8084f45
 8084e1e:  mov edx, DWORD PTR [ebp-0x30]
 8084e21:  mov esi, 0x5
 8084e26:  cmp DWORD PTR [ebp-0x34], edx
 8084e29:  jae 8084d2a
 8084e2f:  lea ecx, [ebp-0x14]
 8084e32:  add ecx, ebx
 8084e34:  mov edx, DWORD PTR [ebp-0x1c]
 8084e37:  add ebx, 0x1
 8084e3a:  movzx eax, BYTE PTR [edx]
 8084e3d:  mov BYTE PTR [ecx], al
 8084e3f:  lea eax, [edx+0x1]
 8084e42:  add ecx, 0x1
 8084e45:  cmp ebx, 0x3
 8084e48:  mov DWORD PTR [ebp-0x1c], eax
 8084e4b:  ja 8084e52
 8084e4d:  cmp DWORD PTR [ebp+0x14], eax
 8084e50:  ja 8084e34
 8084e52:  lea ecx, [ebp-0x14]
 8084e55:  mov eax, ecx
 8084e57:  add eax, ebx
 8084e59:  mov DWORD PTR [ebp-0x28], eax
 8084e5c:  mov eax, DWORD PTR [ebp-0x14]
 8084e5f:  mov DWORD PTR [ebp-0x1c], ecx
 8084e62:  cmp eax, 0x7f
 8084e65:  jbe 8085000
 8084e6b:  shr eax, 0x7
 8084e6e:  cmp eax, 0x1c00
 8084e73:  je 8084ff3
 8084e79:  mov eax, DWORD PTR [ebp-0x2c]
 8084e7c:  mov esi, 0x6
 8084e81:  test eax, eax
 8084e83:  je 8084d2a
 8084e89:  mov edx, DWORD PTR [ebp+0xc]
 8084e8c:  mov edi, DWORD PTR [edx+0x20]
 8084e8f:  test edi, edi
 8084e91:  je 8084fd0
 8084e97:  lea ebx, [ebp-0x1c]
 8084e9a:  jmp 8084eab
 8084e9c:  lea esi, [esi]
 8084ea0:  mov edi, DWORD PTR [edi+0x10]
 8084ea3:  test edi, edi
 8084ea5:  je 8084fd0
 8084eab:  mov eax, DWORD PTR [edi]
 8084ead:  mov DWORD PTR [esp], eax
 8084eb0:  call 807f350
 8084eb5:  mov ecx, DWORD PTR [ebp-0x2c]
 8084eb8:  lea eax, [ebp-0x18]
 8084ebb:  mov DWORD PTR [esp+0x18], eax
 8084ebf:  mov DWORD PTR [esp+0x1c], ecx
 8084ec3:  mov edx, DWORD PTR [ebp-0x28]
 8084ec6:  mov DWORD PTR [esp+0x10], ebx
 8084eca:  mov DWORD PTR [esp+0x14], edx
 8084ece:  mov ecx, DWORD PTR [ebp+0x10]
 8084ed1:  mov eax, DWORD PTR [ecx]
 8084ed3:  mov DWORD PTR [esp+0xc], eax
 8084ed7:  mov eax, DWORD PTR [edi+0xc]
 8084eda:  mov DWORD PTR [esp+0x8], eax
 8084ede:  mov eax, DWORD PTR [ebp+0xc]
 8084ee1:  mov DWORD PTR [esp+0x4], eax
 8084ee5:  mov edx, DWORD PTR [ebp+0x8]
 8084ee8:  mov DWORD PTR [esp], edx
 8084eeb:  call DWORD PTR [edi]
 8084eed:  cmp eax, 0x6
 8084ef0:  mov esi, eax
 8084ef2:  je 8084ea0
 8084ef4:  mov eax, DWORD PTR [ebp-0x1c]
 8084ef7:  cmp eax, DWORD PTR [ebp-0x4c]
 8084efa:  je 80850bf
 8084f00:  mov ecx, DWORD PTR [ebp-0x20]
 8084f03:  mov edx, eax
 8084f05:  sub edx, DWORD PTR [ebp-0x4c]
 8084f08:  mov eax, DWORD PTR [ecx]
 8084f0a:  and eax, 0x7
 8084f0d:  cmp edx, eax
 8084f0f:  jle 808509b
 8084f15:  mov ebx, DWORD PTR [ebp+0x10]
 8084f18:  sub edx, eax
 8084f1a:  mov ecx, DWORD PTR [ebp+0xc]
 8084f1d:  add DWORD PTR [ebx], edx
 8084f1f:  mov edx, DWORD PTR [ebp-0x20]
 8084f22:  mov eax, DWORD PTR [ebp-0x18]
 8084f25:  and DWORD PTR [edx], 0xf8
 8084f28:  mov ecx, DWORD PTR [ecx+0x8]
 8084f2b:  mov DWORD PTR [ebp-0x34], eax
 8084f2e:  mov DWORD PTR [ebp-0x48], ecx
 8084f31:  jmp 8084ae8
 8084f36:  mov edx, DWORD PTR [ebp+0x1c]
 8084f39:  mov eax, DWORD PTR [ebp-0x10]
 8084f3c:  mov DWORD PTR [ebx], edi
 8084f3e:  add DWORD PTR [edx], eax
 8084f40:  jmp 8084d22
 8084f45:  mov ecx, DWORD PTR [ebp+0x14]
 8084f48:  mov eax, DWORD PTR [ebp+0x10]
 8084f4b:  mov DWORD PTR [eax], ecx
 8084f4d:  mov ebx, DWORD PTR [ebp-0x1c]
 8084f50:  cmp ecx, ebx
 8084f52:  jbe 8084dcb
 8084f58:  mov eax, DWORD PTR [ebp-0x20]
 8084f5b:  lea edx, [eax+edx+0x4]
 8084f5f:  movzx eax, BYTE PTR [ebx]
 8084f62:  add ebx, 0x1
 8084f65:  mov BYTE PTR [edx], al
 8084f67:  add edx, 0x1
 8084f6a:  cmp DWORD PTR [ebp+0x14], ebx
 8084f6d:  mov DWORD PTR [ebp-0x1c], ebx
 8084f70:  ja 8084f5f
 8084f72:  jmp 8084dcb
 8084f77:  mov ecx, DWORD PTR [ebp+0x10]
 8084f7a:  sub eax, edi
 8084f7c:  mov esi, edx
 8084f7e:  shl eax, 0x2
 8084f81:  add DWORD PTR [ecx], eax
 8084f83:  jmp 8084ca8
 8084f88:  mov DWORD PTR [esp+0xc], 0x80b5f80
 8084f90:  mov DWORD PTR [esp+0x8], 0x312
 8084f98:  mov DWORD PTR [esp+0x4], 0x80b5c20
 8084fa0:  mov DWORD PTR [esp], 0x80b5c87
 8084fa7:  call 8051490
 8084fac:  mov DWORD PTR [esp+0xc], 0x80b5f80
 8084fb4:  mov DWORD PTR [esp+0x8], 0x22f
 8084fbc:  mov DWORD PTR [esp+0x4], 0x80b5c20
 8084fc4:  mov DWORD PTR [esp], 0x80b5c34
 8084fcb:  call 8051490
 8084fd0:  test BYTE PTR [ebp-0x48], 0x2
 8084fd4:  mov esi, 0x6
 8084fd9:  je 8084ef4
 8084fdf:  mov ecx, DWORD PTR [ebp-0x2c]
 8084fe2:  mov esi, 0x6
 8084fe7:  add DWORD PTR [ebp-0x1c], 0x4
 8084feb:  add DWORD PTR [ecx], 0x1
 8084fee:  jmp 8084ef4
 8084ff3:  lea eax, [ebp-0x10]
 8084ff6:  xor esi, esi
 8084ff8:  mov DWORD PTR [ebp-0x1c], eax
 8084ffb:  jmp 8084ef4
 8085000:  mov ebx, DWORD PTR [ebp-0x34]
 8085003:  xor esi, esi
 8085005:  mov BYTE PTR [ebx], al
 8085007:  mov eax, ebx
 8085009:  add eax, 0x1
 808500c:  mov DWORD PTR [ebp-0x18], eax
 808500f:  add DWORD PTR [ebp-0x1c], 0x4
 8085013:  jmp 8084ef4
 8085018:  mov ecx, DWORD PTR [ebp+0x18]
 808501b:  mov ecx, DWORD PTR [ecx]
 808501d:  mov DWORD PTR [ebp-0x34], ecx
 8085020:  jmp 8084aae
 8085025:  mov ecx, DWORD PTR [ebp+0x18]
 8085028:  test ecx, ecx
 808502a:  jne 80850da
 8085030:  mov ecx, DWORD PTR [ebp+0xc]
 8085033:  xor esi, esi
 8085035:  mov eax, DWORD PTR [ecx+0x14]
 8085038:  mov DWORD PTR [eax], 0x0
 808503e:  mov DWORD PTR [eax+0x4], 0x0
 8085045:  test BYTE PTR [ecx+0x8], 0x1
 8085049:  jne 8084d2a
 808504f:  mov eax, DWORD PTR [ebp-0x3c]
 8085052:  mov DWORD PTR [esp], eax
 8085055:  call 807f350
 808505a:  mov edx, DWORD PTR [ebp+0x24]
 808505d:  mov DWORD PTR [esp+0x18], ebx
 8085061:  mov DWORD PTR [esp+0x1c], edx
 8085065:  mov ecx, DWORD PTR [ebp+0x1c]
 8085068:  mov DWORD PTR [esp+0x10], 0x0
 8085070:  mov DWORD PTR [esp+0xc], 0x0
 8085078:  mov DWORD PTR [esp+0x8], 0x0
 8085080:  mov DWORD PTR [esp+0x14], ecx
 8085084:  mov ebx, DWORD PTR [ebp-0x40]
 8085087:  mov DWORD PTR [esp+0x4], ebx
 808508b:  mov eax, DWORD PTR [ebp-0x44]
 808508e:  mov DWORD PTR [esp], eax
 8085091:  call DWORD PTR [ebp-0x3c]
 8085094:  mov esi, eax
 8085096:  jmp 8084d2a
 808509b:  mov DWORD PTR [esp+0xc], 0x80b5d4e
 80850a3:  mov DWORD PTR [esp+0x8], 0x1bc
 80850ab:  mov DWORD PTR [esp+0x4], 0x80b5c4f
 80850b3:  mov DWORD PTR [esp], 0x80b5d80
 80850ba:  call 8051490
 80850bf:  cmp esi, 0x7
 80850c2:  je 80850fe
 80850c4:  test esi, esi
 80850c6:  jne 8084d2a
 80850cc:  mov eax, DWORD PTR [ebp+0xc]
 80850cf:  mov eax, DWORD PTR [eax+0x8]
 80850d2:  mov DWORD PTR [ebp-0x48], eax
 80850d5:  jmp 8084ae8
 80850da:  mov DWORD PTR [esp+0xc], 0x80b5f80
 80850e2:  mov DWORD PTR [esp+0x8], 0x1a0
 80850ea:  mov DWORD PTR [esp+0x4], 0x80b5c20
 80850f2:  mov DWORD PTR [esp], 0x80b5c34
 80850f9:  call 8051490
 80850fe:  lea eax, [ebp-0x10]
 8085101:  cmp DWORD PTR [ebp-0x28], eax
 8085104:  je 8085163
 8085106:  mov ebx, DWORD PTR [ebp-0x20]
 8085109:  mov eax, DWORD PTR [ebp-0x28]
 808510c:  sub eax, DWORD PTR [ebp-0x4c]
 808510f:  mov ecx, DWORD PTR [ebx]
 8085111:  mov edx, ecx
 8085113:  and edx, 0x7
 8085116:  sub eax, edx
 8085118:  mov edx, DWORD PTR [ebp+0x10]
 808511b:  add DWORD PTR [edx], eax
 808511d:  mov edx, ecx
 808511f:  mov eax, DWORD PTR [ebp-0x28]
 8085122:  and edx, 0xf8
 8085125:  sub eax, DWORD PTR [ebp-0x1c]
 8085128:  cmp eax, edx
 808512a:  jle 80851ab
 808512c:  cmp eax, 0x7
 808512f:  jg 8085187
 8085131:  mov ecx, DWORD PTR [ebp-0x20]
 8085134:  or eax, edx
 8085136:  lea edx, [ebp-0x14]
 8085139:  cmp DWORD PTR [ebp-0x28], edx
 808513c:  mov DWORD PTR [ecx], eax
 808513e:  jbe 8084d2a
 8085144:  xor ecx, ecx
 8085146:  movzx eax, BYTE PTR [edx]
 8085149:  add edx, 0x1
 808514c:  mov ebx, DWORD PTR [ebp-0x20]
 808514f:  mov BYTE PTR [ebx+ecx+0x4], al
 8085153:  add ecx, 0x1
 8085156:  cmp DWORD PTR [ebp-0x28], edx
 8085159:  mov DWORD PTR [ebp-0x1c], edx
 808515c:  ja 8085146
 808515e:  jmp 8084d2a
 8085163:  mov DWORD PTR [esp+0xc], 0x80b5d4e
 808516b:  mov DWORD PTR [esp+0x8], 0x1ce
 8085173:  mov DWORD PTR [esp+0x4], 0x80b5c4f
 808517b:  mov DWORD PTR [esp], 0x80b5c5f
 8085182:  call 8051490
 8085187:  mov DWORD PTR [esp+0xc], 0x80b5d4e
 808518f:  mov DWORD PTR [esp+0x8], 0x1d9
 8085197:  mov DWORD PTR [esp+0x4], 0x80b5c4f
 808519f:  mov DWORD PTR [esp], 0x80b5c74
 80851a6:  call 8051490
 80851ab:  mov DWORD PTR [esp+0xc], 0x80b5d4e
 80851b3:  mov DWORD PTR [esp+0x8], 0x1d8
 80851bb:  mov DWORD PTR [esp+0x4], 0x80b5c4f
 80851c3:  mov DWORD PTR [esp], 0x80b5da8
 80851ca:  call 8051490
 80851cf:  nop

080851d0 <__gconv_transform_ascii_internal>:
 80851d0:  push ebp
 80851d1:  mov ebp, esp
 80851d3:  push edi
 80851d4:  push esi
 80851d5:  push ebx
 80851d6:  sub esp, 0x48
 80851d9:  mov ecx, DWORD PTR [ebp+0xc]
 80851dc:  mov eax, DWORD PTR [ebp+0x8]
 80851df:  mov ebx, DWORD PTR [ebp+0x20]
 80851e2:  mov DWORD PTR [ebp-0x2c], 0x0
 80851e9:  add ecx, 0x24
 80851ec:  mov DWORD PTR [ebp-0x30], ecx
 80851ef:  mov ecx, DWORD PTR [ebp+0xc]
 80851f2:  lea edx, [eax+0x3c]
 80851f5:  mov DWORD PTR [ebp-0x34], edx
 80851f8:  mov edx, DWORD PTR [ecx+0x8]
 80851fb:  test dl, 0x1
 80851fe:  jne 808521d
 8085200:  mov ecx, DWORD PTR [ebp-0x34]
 8085203:  mov eax, DWORD PTR [eax+0x3c]
 8085206:  mov ecx, DWORD PTR [ecx+0x14]
 8085209:  test eax, eax
 808520b:  mov DWORD PTR [ebp-0x2c], ecx
 808520e:  je 808521d
 8085210:  ror ecx, 0x9
 8085213:  xor ecx, DWORD PTR gs:0x18
 808521a:  mov DWORD PTR [ebp-0x2c], ecx
 808521d:  test ebx, ebx
 808521f:  jne 8085537
 8085225:  mov eax, DWORD PTR [ebp+0x18]
 8085228:  test eax, eax
 808522a:  jne 808552a
 8085230:  mov ecx, DWORD PTR [ebp+0xc]
 8085233:  mov ecx, DWORD PTR [ecx]
 8085235:  mov DWORD PTR [ebp-0x24], ecx
 8085238:  mov ecx, DWORD PTR [ebp+0xc]
 808523b:  lea eax, [ebp-0x10]
 808523e:  cmp DWORD PTR [ebp+0x1c], 0x1
 8085242:  mov DWORD PTR [ebp-0x1c], eax
 8085245:  mov DWORD PTR [ebp-0x10], 0x0
 808524c:  mov ecx, DWORD PTR [ecx+0x4]
 808524f:  sbb eax, eax
 8085251:  not eax
 8085253:  and DWORD PTR [ebp-0x1c], eax
 8085256:  mov DWORD PTR [ebp-0x20], ecx
 8085259:  mov ecx, DWORD PTR [ebp+0x10]
 808525c:  mov edi, DWORD PTR [ecx]
 808525e:  cmp edi, DWORD PTR [ebp+0x14]
 8085261:  je 80853f3
 8085267:  nop
 8085268:  mov eax, DWORD PTR [ebp-0x24]
 808526b:  add eax, 0x4
 808526e:  cmp DWORD PTR [ebp-0x20], eax
 8085271:  jb 8085419
 8085277:  and edx, 0x2
 808527a:  je 808546a
 8085280:  mov eax, DWORD PTR [ebp-0x1c]
 8085283:  test eax, eax
 8085285:  je 808542d
 808528b:  lea edx, [edi+0x1]
 808528e:  mov esi, DWORD PTR [ebp-0x24]
 8085291:  mov DWORD PTR [ebp-0x28], 0x4
 8085298:  jmp 80852ba
 808529a:  lea esi, [esi]
 80852a0:  movzx eax, al
 80852a3:  mov ecx, edx
 80852a5:  mov DWORD PTR [esi], eax
 80852a7:  add esi, 0x4
 80852aa:  cmp DWORD PTR [ebp+0x14], edx
 80852ad:  je 80852d6
 80852af:  add edx, 0x1
 80852b2:  lea eax, [esi+0x4]
 80852b5:  cmp DWORD PTR [ebp-0x20], eax
 80852b8:  jb 8085300
 80852ba:  movzx eax, BYTE PTR [edx-0x1]
 80852be:  test al, al
 80852c0:  jns 80852a0
 80852c2:  mov eax, DWORD PTR [ebp-0x1c]
 80852c5:  mov ecx, edx
 80852c7:  mov DWORD PTR [ebp-0x28], 0x6
 80852ce:  add DWORD PTR [eax], 0x1
 80852d1:  cmp DWORD PTR [ebp+0x14], edx
 80852d4:  jne 80852af
 80852d6:  mov ecx, DWORD PTR [ebp+0x14]
 80852d9:  mov eax, DWORD PTR [ebp+0x18]
 80852dc:  mov edx, DWORD PTR [ebp+0x10]
 80852df:  mov DWORD PTR [ebp-0x18], esi
 80852e2:  test eax, eax
 80852e4:  mov DWORD PTR [edx], ecx
 80852e6:  je 8085316
 80852e8:  mov eax, DWORD PTR [ebp-0x18]
 80852eb:  mov ecx, DWORD PTR [ebp+0x18]
 80852ee:  mov DWORD PTR [ecx], eax
 80852f0:  mov eax, DWORD PTR [ebp-0x28]
 80852f3:  add esp, 0x48
 80852f6:  pop ebx
 80852f7:  pop esi
 80852f8:  pop edi
 80852f9:  pop ebp
 80852fa:  ret
 80852fb:  nop
 80852fc:  lea esi, [esi]
 8085300:  mov DWORD PTR [ebp-0x18], esi
 8085303:  mov DWORD PTR [ebp-0x28], 0x5
 808530a:  mov eax, DWORD PTR [ebp+0x18]
 808530d:  mov edx, DWORD PTR [ebp+0x10]
 8085310:  test eax, eax
 8085312:  mov DWORD PTR [edx], ecx
 8085314:  jne 80852e8
 8085316:  mov edx, DWORD PTR [ebp+0xc]
 8085319:  mov ebx, DWORD PTR [edx+0x20]
 808531c:  test ebx, ebx
 808531e:  je 8085357
 8085320:  mov eax, DWORD PTR [ebx+0x4]
 8085323:  test eax, eax
 8085325:  je 8085350
 8085327:  mov DWORD PTR [esp], eax
 808532a:  call 807f350
 808532f:  mov DWORD PTR [esp+0x10], esi
 8085333:  mov ecx, DWORD PTR [ebp-0x24]
 8085336:  mov DWORD PTR [esp+0xc], ecx
 808533a:  mov edx, DWORD PTR [ebp+0x10]
 808533d:  mov eax, DWORD PTR [edx]
 808533f:  mov DWORD PTR [esp+0x4], edi
 8085343:  mov DWORD PTR [esp+0x8], eax
 8085347:  mov eax, DWORD PTR [ebx+0xc]
 808534a:  mov DWORD PTR [esp], eax
 808534d:  call DWORD PTR [ebx+0x4]
 8085350:  mov ebx, DWORD PTR [ebx+0x10]
 8085353:  test ebx, ebx
 8085355:  jne 8085320
 8085357:  mov ecx, DWORD PTR [ebp+0xc]
 808535a:  add DWORD PTR [ecx+0xc], 0x1
 808535e:  test BYTE PTR [ecx+0x8], 0x1
 8085362:  jne 80854b5
 8085368:  cmp esi, DWORD PTR [ebp-0x24]
 808536b:  jbe 808540e
 8085371:  mov ecx, DWORD PTR [ebp+0xc]
 8085374:  mov eax, DWORD PTR [ecx]
 8085376:  mov DWORD PTR [ebp-0x14], eax
 8085379:  mov eax, DWORD PTR [ebp-0x2c]
 808537c:  mov DWORD PTR [esp], eax
 808537f:  call 807f350
 8085384:  mov edx, DWORD PTR [ebp+0x24]
 8085387:  lea eax, [ebp-0x14]
 808538a:  mov DWORD PTR [esp+0x18], 0x0
 8085392:  mov DWORD PTR [esp+0x1c], edx
 8085396:  mov ecx, DWORD PTR [ebp+0x1c]
 8085399:  mov DWORD PTR [esp+0x10], 0x0
 80853a1:  mov DWORD PTR [esp+0xc], esi
 80853a5:  mov DWORD PTR [esp+0x8], eax
 80853a9:  mov DWORD PTR [esp+0x14], ecx
 80853ad:  mov eax, DWORD PTR [ebp-0x30]
 80853b0:  mov DWORD PTR [esp+0x4], eax
 80853b4:  mov edx, DWORD PTR [ebp-0x34]
 80853b7:  mov DWORD PTR [esp], edx
 80853ba:  call DWORD PTR [ebp-0x2c]
 80853bd:  cmp eax, 0x4
 80853c0:  mov ecx, eax
 80853c2:  je 8085408
 80853c4:  mov eax, DWORD PTR [ebp-0x14]
 80853c7:  cmp eax, esi
 80853c9:  jne 80854cd
 80853cf:  test ecx, ecx
 80853d1:  jne 8085522
 80853d7:  mov ecx, DWORD PTR [ebp+0xc]
 80853da:  mov eax, DWORD PTR [ebp+0xc]
 80853dd:  mov ecx, DWORD PTR [ecx]
 80853df:  mov edx, DWORD PTR [eax+0x8]
 80853e2:  mov DWORD PTR [ebp-0x24], ecx
 80853e5:  mov ecx, DWORD PTR [ebp+0x10]
 80853e8:  mov edi, DWORD PTR [ecx]
 80853ea:  cmp edi, DWORD PTR [ebp+0x14]
 80853ed:  jne 8085268
 80853f3:  mov esi, DWORD PTR [ebp-0x24]
 80853f6:  mov ecx, DWORD PTR [ebp+0x14]
 80853f9:  mov DWORD PTR [ebp-0x28], 0x4
 8085400:  mov DWORD PTR [ebp-0x18], esi
 8085403:  jmp 808530a
 8085408:  cmp DWORD PTR [ebp-0x28], 0x5
 808540c:  je 80853d7
 808540e:  mov eax, DWORD PTR [ebp-0x28]
 8085411:  add esp, 0x48
 8085414:  pop ebx
 8085415:  pop esi
 8085416:  pop edi
 8085417:  pop ebp
 8085418:  ret
 8085419:  mov esi, DWORD PTR [ebp-0x24]
 808541c:  mov ecx, edi
 808541e:  mov DWORD PTR [ebp-0x28], 0x5
 8085425:  mov DWORD PTR [ebp-0x18], esi
 8085428:  jmp 808530a
 808542d:  mov esi, DWORD PTR [ebp-0x24]
 8085430:  mov ecx, edi
 8085432:  jmp 8085454
 8085434:  lea esi, [esi]
 8085438:  movzx eax, al
 808543b:  add ecx, 0x1
 808543e:  mov DWORD PTR [esi], eax
 8085440:  add esi, 0x4
 8085443:  cmp DWORD PTR [ebp+0x14], ecx
 8085446:  je 80854a2
 8085448:  lea eax, [esi+0x4]
 808544b:  cmp DWORD PTR [ebp-0x20], eax
 808544e:  jb 8085300
 8085454:  movzx eax, BYTE PTR [ecx]
 8085457:  test al, al
 8085459:  jns 8085438
 808545b:  mov DWORD PTR [ebp-0x18], esi
 808545e:  mov DWORD PTR [ebp-0x28], 0x6
 8085465:  jmp 808530a
 808546a:  mov eax, DWORD PTR [ebp-0x1c]
 808546d:  test eax, eax
 808546f:  je 80854e8
 8085471:  mov esi, DWORD PTR [ebp-0x24]
 8085474:  mov ecx, edi
 8085476:  jmp 8085494
 8085478:  movzx eax, al
 808547b:  add ecx, 0x1
 808547e:  mov DWORD PTR [esi], eax
 8085480:  add esi, 0x4
 8085483:  cmp DWORD PTR [ebp+0x14], ecx
 8085486:  je 80854a2
 8085488:  lea eax, [esi+0x4]
 808548b:  cmp DWORD PTR [ebp-0x20], eax
 808548e:  jb 8085300
 8085494:  movzx eax, BYTE PTR [ecx]
 8085497:  test al, al
 8085499:  jns 8085478
 808549b:  nop
 808549c:  lea esi, [esi]
 80854a0:  jmp 808545b
 80854a2:  mov DWORD PTR [ebp-0x28], 0x4
 80854a9:  lea esi, [esi]
 80854b0:  jmp 80852d9
 80854b5:  mov eax, DWORD PTR [ebp-0x18]
 80854b8:  mov edx, DWORD PTR [ebp+0x1c]
 80854bb:  mov DWORD PTR [ecx], eax
 80854bd:  mov eax, DWORD PTR [ebp-0x10]
 80854c0:  add DWORD PTR [edx], eax
 80854c2:  mov eax, DWORD PTR [ebp-0x28]
 80854c5:  add esp, 0x48
 80854c8:  pop ebx
 80854c9:  pop esi
 80854ca:  pop edi
 80854cb:  pop ebp
 80854cc:  ret
 80854cd:  mov edx, esi
 80854cf:  sub edx, eax
 80854d1:  mov eax, edx
 80854d3:  sar eax, 0x1f
 80854d6:  shr eax, 0x1e
 80854d9:  add eax, edx
 80854db:  mov edx, DWORD PTR [ebp+0x10]
 80854de:  sar eax, 0x2
 80854e1:  sub DWORD PTR [edx], eax
 80854e3:  jmp 80853cf
 80854e8:  mov esi, DWORD PTR [ebp-0x24]
 80854eb:  mov ecx, edi
 80854ed:  jmp 808550c
 80854ef:  nop
 80854f0:  movzx eax, al
 80854f3:  add ecx, 0x1
 80854f6:  mov DWORD PTR [esi], eax
 80854f8:  add esi, 0x4
 80854fb:  cmp DWORD PTR [ebp+0x14], ecx
 80854fe:  je 80854a2
 8085500:  lea eax, [esi+0x4]
 8085503:  cmp DWORD PTR [ebp-0x20], eax
 8085506:  jb 8085300
 808550c:  movzx eax, BYTE PTR [ecx]
 808550f:  test al, al
 8085511:  jns 80854f0
 8085513:  mov DWORD PTR [ebp-0x18], esi
 8085516:  mov DWORD PTR [ebp-0x28], 0x6
 808551d:  jmp 808530a
 8085522:  mov DWORD PTR [ebp-0x28], ecx
 8085525:  jmp 808540e
 808552a:  mov eax, DWORD PTR [ebp+0x18]
 808552d:  mov eax, DWORD PTR [eax]
 808552f:  mov DWORD PTR [ebp-0x24], eax
 8085532:  jmp 8085238
 8085537:  mov eax, DWORD PTR [ebp+0x18]
 808553a:  test eax, eax
 808553c:  jne 80855af
 808553e:  mov edx, DWORD PTR [ebp+0xc]
 8085541:  mov eax, DWORD PTR [edx+0x14]
 8085544:  mov DWORD PTR [eax], 0x0
 808554a:  mov DWORD PTR [eax+0x4], 0x0
 8085551:  test BYTE PTR [edx+0x8], 0x1
 8085555:  mov DWORD PTR [ebp-0x28], 0x0
 808555c:  jne 808540e
 8085562:  mov ecx, DWORD PTR [ebp-0x2c]
 8085565:  mov DWORD PTR [esp], ecx
 8085568:  call 807f350
 808556d:  mov eax, DWORD PTR [ebp+0x24]
 8085570:  mov DWORD PTR [esp+0x18], ebx
 8085574:  mov DWORD PTR [esp+0x1c], eax
 8085578:  mov edx, DWORD PTR [ebp+0x1c]
 808557b:  mov DWORD PTR [esp+0x10], 0x0
 8085583:  mov DWORD PTR [esp+0xc], 0x0
 808558b:  mov DWORD PTR [esp+0x8], 0x0
 8085593:  mov DWORD PTR [esp+0x14], edx
 8085597:  mov ecx, DWORD PTR [ebp-0x30]
 808559a:  mov DWORD PTR [esp+0x4], ecx
 808559e:  mov eax, DWORD PTR [ebp-0x34]
 80855a1:  mov DWORD PTR [esp], eax
 80855a4:  call DWORD PTR [ebp-0x2c]
 80855a7:  mov DWORD PTR [ebp-0x28], eax
 80855aa:  jmp 808540e
 80855af:  mov DWORD PTR [esp+0xc], 0x80b5fc0
 80855b7:  mov DWORD PTR [esp+0x8], 0x1a0
 80855bf:  mov DWORD PTR [esp+0x4], 0x80b5c20
 80855c7:  mov DWORD PTR [esp], 0x80b5c34
 80855ce:  call 8051490
 80855d3:  lea esi, [esi]
 80855d9:  lea edi, [edi]

080855e0 <__gconv_transform_ucs4le_internal>:
 80855e0:  push ebp
 80855e1:  mov ebp, esp
 80855e3:  push edi
 80855e4:  push esi
 80855e5:  push ebx
 80855e6:  sub esp, 0x4c
 80855e9:  mov eax, DWORD PTR [ebp+0x8]
 80855ec:  mov ecx, DWORD PTR [ebp+0xc]
 80855ef:  mov ebx, DWORD PTR [ebp+0x20]
 80855f2:  mov DWORD PTR [ebp-0x30], 0x0
 80855f9:  lea edx, [eax+0x3c]
 80855fc:  mov DWORD PTR [ebp-0x38], edx
 80855ff:  mov edx, DWORD PTR [ebp+0xc]
 8085602:  add ecx, 0x24
 8085605:  mov DWORD PTR [ebp-0x34], ecx
 8085608:  mov ecx, DWORD PTR [edx+0x8]
 808560b:  test cl, 0x1
 808560e:  jne 808562d
 8085610:  mov edx, DWORD PTR [ebp-0x38]
 8085613:  mov eax, DWORD PTR [eax+0x3c]
 8085616:  mov edx, DWORD PTR [edx+0x14]
 8085619:  test eax, eax
 808561b:  mov DWORD PTR [ebp-0x30], edx
 808561e:  je 808562d
 8085620:  ror edx, 0x9
 8085623:  xor edx, DWORD PTR gs:0x18
 808562a:  mov DWORD PTR [ebp-0x30], edx
 808562d:  test ebx, ebx
 808562f:  jne 8085a5f
 8085635:  mov esi, DWORD PTR [ebp+0x18]
 8085638:  test esi, esi
 808563a:  jne 8085a52
 8085640:  mov eax, DWORD PTR [ebp+0xc]
 8085643:  mov eax, DWORD PTR [eax]
 8085645:  mov DWORD PTR [ebp-0x28], eax
 8085648:  mov eax, DWORD PTR [ebp+0xc]
 808564b:  lea edx, [ebp-0x10]
 808564e:  cmp DWORD PTR [ebp+0x1c], 0x1
 8085652:  mov ebx, DWORD PTR [ebp+0x24]
 8085655:  mov DWORD PTR [ebp-0x10], 0x0
 808565c:  mov eax, DWORD PTR [eax+0x4]
 808565f:  mov DWORD PTR [ebp-0x24], eax
 8085662:  sbb eax, eax
 8085664:  not eax
 8085666:  and edx, eax
 8085668:  test ebx, ebx
 808566a:  mov DWORD PTR [ebp-0x20], edx
 808566d:  je 8085688
 808566f:  mov eax, DWORD PTR [ebp+0xc]
 8085672:  mov eax, DWORD PTR [eax+0x14]
 8085675:  mov edi, DWORD PTR [eax]
 8085677:  mov DWORD PTR [ebp-0x18], eax
 808567a:  mov eax, edi
 808567c:  and eax, 0x7
 808567f:  jne 808592a
 8085685:  lea esi, [esi]
 8085688:  mov eax, DWORD PTR [ebp+0x10]
 808568b:  mov edx, DWORD PTR [ebp-0x24]
 808568e:  sub edx, DWORD PTR [ebp-0x28]
 8085691:  mov edi, DWORD PTR [eax]
 8085693:  mov eax, DWORD PTR [ebp+0x14]
 8085696:  sub eax, edi
 8085698:  cmp edx, eax
 808569a:  jle 808569e
 808569c:  mov edx, eax
 808569e:  mov eax, edx
 80856a0:  sar eax, 0x1f
 80856a3:  shr eax, 0x1e
 80856a6:  add eax, edx
 80856a8:  sar eax, 0x2
 80856ab:  test eax, eax
 80856ad:  je 8085897
 80856b3:  and ecx, 0x2
 80856b6:  je 80858a3
 80856bc:  mov ebx, DWORD PTR [ebp-0x20]
 80856bf:  test ebx, ebx
 80856c1:  je 8085902
 80856c7:  mov esi, DWORD PTR [ebp-0x28]
 80856ca:  xor ecx, ecx
 80856cc:  jmp 80856dc
 80856ce:  xchg ax, ax
 80856d0:  add ecx, 0x1
 80856d3:  mov DWORD PTR [esi], edx
 80856d5:  add esi, 0x4
 80856d8:  cmp eax, ecx
 80856da:  jbe 80856f0
 80856dc:  mov edx, DWORD PTR [edi+ecx*4]
 80856df:  test edx, edx
 80856e1:  jns 80856d0
 80856e3:  mov edx, DWORD PTR [ebp-0x20]
 80856e6:  add ecx, 0x1
 80856e9:  add DWORD PTR [edx], 0x1
 80856ec:  cmp eax, ecx
 80856ee:  ja 80856dc
 80856f0:  lea ecx, [edi+eax*4]
 80856f3:  mov edx, esi
 80856f5:  mov eax, DWORD PTR [ebp+0x10]
 80856f8:  mov DWORD PTR [ebp-0x2c], 0x4
 80856ff:  mov BYTE PTR [ebp-0x19], 0x0
 8085703:  mov DWORD PTR [eax], ecx
 8085705:  cmp DWORD PTR [ebp+0x14], ecx
 8085708:  je 8085734
 808570a:  lea eax, [ecx+0x4]
 808570d:  cmp DWORD PTR [ebp+0x14], eax
 8085710:  mov DWORD PTR [ebp-0x2c], 0x7
 8085717:  mov BYTE PTR [ebp-0x19], 0x1
 808571b:  jb 8085734
 808571d:  lea eax, [edx+0x4]
 8085720:  cmp DWORD PTR [ebp-0x24], eax
 8085723:  jae 8085a09
 8085729:  mov DWORD PTR [ebp-0x2c], 0x5
 8085730:  mov BYTE PTR [ebp-0x19], 0x0
 8085734:  mov ecx, DWORD PTR [ebp+0x18]
 8085737:  test ecx, ecx
 8085739:  jne 80858f2
 808573f:  mov ecx, DWORD PTR [ebp+0xc]
 8085742:  mov ebx, DWORD PTR [ecx+0x20]
 8085745:  test ebx, ebx
 8085747:  je 8085787
 8085749:  lea esi, [esi]
 8085750:  mov eax, DWORD PTR [ebx+0x4]
 8085753:  test eax, eax
 8085755:  je 8085780
 8085757:  mov DWORD PTR [esp], eax
 808575a:  call 807f350
 808575f:  mov DWORD PTR [esp+0x10], esi
 8085763:  mov eax, DWORD PTR [ebp-0x28]
 8085766:  mov DWORD PTR [esp+0xc], eax
 808576a:  mov edx, DWORD PTR [ebp+0x10]
 808576d:  mov eax, DWORD PTR [edx]
 808576f:  mov DWORD PTR [esp+0x4], edi
 8085773:  mov DWORD PTR [esp+0x8], eax
 8085777:  mov eax, DWORD PTR [ebx+0xc]
 808577a:  mov DWORD PTR [esp], eax
 808577d:  call DWORD PTR [ebx+0x4]
 8085780:  mov ebx, DWORD PTR [ebx+0x10]
 8085783:  test ebx, ebx
 8085785:  jne 8085750
 8085787:  mov ecx, DWORD PTR [ebp+0xc]
 808578a:  add DWORD PTR [ecx+0xc], 0x1
 808578e:  test BYTE PTR [ecx+0x8], 0x1
 8085792:  jne 8085974
 8085798:  cmp DWORD PTR [ebp-0x28], esi
 808579b:  jae 8085826
 80857a1:  mov ecx, DWORD PTR [ebp+0xc]
 80857a4:  mov eax, DWORD PTR [ecx]
 80857a6:  mov DWORD PTR [ebp-0x14], eax
 80857a9:  mov eax, DWORD PTR [ebp-0x30]
 80857ac:  mov DWORD PTR [esp], eax
 80857af:  call 807f350
 80857b4:  mov edx, DWORD PTR [ebp+0x24]
 80857b7:  lea eax, [ebp-0x14]
 80857ba:  mov DWORD PTR [esp+0x18], 0x0
 80857c2:  mov DWORD PTR [esp+0x1c], edx
 80857c6:  mov ecx, DWORD PTR [ebp+0x1c]
 80857c9:  mov DWORD PTR [esp+0x10], 0x0
 80857d1:  mov DWORD PTR [esp+0xc], esi
 80857d5:  mov DWORD PTR [esp+0x8], eax
 80857d9:  mov DWORD PTR [esp+0x14], ecx
 80857dd:  mov edx, DWORD PTR [ebp-0x34]
 80857e0:  mov DWORD PTR [esp+0x4], edx
 80857e4:  mov ecx, DWORD PTR [ebp-0x38]
 80857e7:  mov DWORD PTR [esp], ecx
 80857ea:  call DWORD PTR [ebp-0x30]
 80857ed:  cmp eax, 0x4
 80857f0:  je 8085820
 80857f2:  mov edx, DWORD PTR [ebp-0x14]
 80857f5:  cmp edx, esi
 80857f7:  jne 80859cd
 80857fd:  test eax, eax
 80857ff:  nop
 8085800:  jne 8085b47
 8085806:  mov eax, DWORD PTR [ebp+0xc]
 8085809:  mov edx, DWORD PTR [ebp+0xc]
 808580c:  mov eax, DWORD PTR [eax]
 808580e:  mov ecx, DWORD PTR [edx+0x8]
 8085811:  mov DWORD PTR [ebp-0x28], eax
 8085814:  jmp 8085688
 8085819:  lea esi, [esi]
 8085820:  cmp DWORD PTR [ebp-0x2c], 0x5
 8085824:  je 8085806
 8085826:  mov edx, DWORD PTR [ebp+0x24]
 8085829:  test edx, edx
 808582b:  je 808588c
 808582d:  cmp BYTE PTR [ebp-0x19], 0x0
 8085831:  lea esi, [esi]
 8085838:  je 808588c
 808583a:  mov ecx, DWORD PTR [ebp+0x10]
 808583d:  mov eax, DWORD PTR [ebp+0x14]
 8085840:  mov esi, DWORD PTR [ecx]
 8085842:  sub eax, esi
 8085844:  cmp eax, 0x3
 8085847:  jg 8085adb
 808584d:  xor ebx, ebx
 808584f:  xor edx, edx
 8085851:  cmp DWORD PTR [ebp+0x14], esi
 8085854:  mov ecx, esi
 8085856:  jbe 808587a
 8085858:  mov eax, DWORD PTR [ebp+0xc]
 808585b:  mov edx, DWORD PTR [eax+0x14]
 808585e:  movzx eax, BYTE PTR [ecx]
 8085861:  add ecx, 0x1
 8085864:  mov BYTE PTR [edx+ebx+0x4], al
 8085868:  mov edx, DWORD PTR [ebp+0x10]
 808586b:  add ebx, 0x1
 808586e:  mov DWORD PTR [edx], ecx
 8085870:  cmp DWORD PTR [ebp+0x14], ecx
 8085873:  ja 8085858
 8085875:  mov edx, DWORD PTR [ebp+0x14]
 8085878:  sub edx, esi
 808587a:  mov ecx, DWORD PTR [ebp+0xc]
 808587d:  mov DWORD PTR [ebp-0x2c], 0x7
 8085884:  mov eax, DWORD PTR [ecx+0x14]
 8085887:  and DWORD PTR [eax], 0xf8
 808588a:  or DWORD PTR [eax], edx
 808588c:  mov eax, DWORD PTR [ebp-0x2c]
 808588f:  add esp, 0x4c
 8085892:  pop ebx
 8085893:  pop esi
 8085894:  pop edi
 8085895:  pop ebp
 8085896:  ret
 8085897:  mov edx, DWORD PTR [ebp-0x28]
 808589a:  mov ecx, edi
 808589c:  mov esi, edx
 808589e:  jmp 80856f5
 80858a3:  mov esi, DWORD PTR [ebp-0x20]
 80858a6:  test esi, esi
 80858a8:  je 8085a2d
 80858ae:  mov ecx, edi
 80858b0:  xor ebx, ebx
 80858b2:  mov esi, DWORD PTR [ebp-0x28]
 80858b5:  mov edx, DWORD PTR [ecx]
 80858b7:  test edx, edx
 80858b9:  js 80858d9
 80858bb:  nop
 80858bc:  lea esi, [esi]
 80858c0:  add ebx, 0x1
 80858c3:  add ecx, 0x4
 80858c6:  mov DWORD PTR [esi], edx
 80858c8:  add esi, 0x4
 80858cb:  cmp eax, ebx
 80858cd:  jbe 80856f3
 80858d3:  mov edx, DWORD PTR [ecx]
 80858d5:  test edx, edx
 80858d7:  jns 80858c0
 80858d9:  mov ecx, DWORD PTR [ebp+0x18]
 80858dc:  mov esi, DWORD PTR [ebp-0x28]
 80858df:  mov DWORD PTR [ebp-0x2c], 0x6
 80858e6:  mov BYTE PTR [ebp-0x19], 0x0
 80858ea:  test ecx, ecx
 80858ec:  je 808573f
 80858f2:  mov edx, DWORD PTR [ebp+0x18]
 80858f5:  mov eax, DWORD PTR [ebp-0x2c]
 80858f8:  mov DWORD PTR [edx], esi
 80858fa:  add esp, 0x4c
 80858fd:  pop ebx
 80858fe:  pop esi
 80858ff:  pop edi
 8085900:  pop ebp
 8085901:  ret
 8085902:  mov esi, DWORD PTR [ebp-0x28]
 8085905:  mov ecx, edi
 8085907:  xor ebx, ebx
 8085909:  lea esi, [esi]
 8085910:  mov edx, DWORD PTR [ecx]
 8085912:  test edx, edx
 8085914:  js 80858d9
 8085916:  add ebx, 0x1
 8085919:  add ecx, 0x4
 808591c:  mov DWORD PTR [esi], edx
 808591e:  add esi, 0x4
 8085921:  cmp eax, ebx
 8085923:  ja 8085910
 8085925:  jmp 80856f3
 808592a:  mov edx, DWORD PTR [ebp+0x18]
 808592d:  test edx, edx
 808592f:  jne 8085b23
 8085935:  mov ebx, eax
 8085937:  mov eax, DWORD PTR [ebp+0x10]
 808593a:  mov edx, DWORD PTR [eax]
 808593c:  cmp DWORD PTR [ebp+0x14], edx
 808593f:  jbe 80859a2
 8085941:  cmp ebx, 0x3
 8085944:  jbe 8085983
 8085946:  mov eax, DWORD PTR [ebp-0x18]
 8085949:  cmp BYTE PTR [eax+0x7], 0x80
 808594d:  jbe 80859dd
 8085953:  and ecx, 0x2
 8085956:  mov DWORD PTR [ebp-0x2c], 0x6
 808595d:  je 808588c
 8085963:  mov eax, DWORD PTR [ebp-0x18]
 8085966:  mov edx, DWORD PTR [ebp+0xc]
 8085969:  and DWORD PTR [eax], 0xf8
 808596c:  mov ecx, DWORD PTR [edx+0x8]
 808596f:  jmp 8085688
 8085974:  mov edx, DWORD PTR [ebp+0x1c]
 8085977:  mov eax, DWORD PTR [ebp-0x10]
 808597a:  mov DWORD PTR [ecx], esi
 808597c:  add DWORD PTR [edx], eax
 808597e:  jmp 8085826
 8085983:  mov eax, DWORD PTR [ebp-0x18]
 8085986:  lea esi, [eax+ebx+0x4]
 808598a:  movzx eax, BYTE PTR [edx]
 808598d:  add edx, 0x1
 8085990:  add ebx, 0x1
 8085993:  mov BYTE PTR [esi], al
 8085995:  mov eax, DWORD PTR [ebp+0x10]
 8085998:  add esi, 0x1
 808599b:  mov DWORD PTR [eax], edx
 808599d:  cmp DWORD PTR [ebp+0x14], edx
 80859a0:  ja 80859c3
 80859a2:  cmp ebx, 0x3
 80859a5:  ja 8085946
 80859a7:  mov edx, DWORD PTR [ebp-0x18]
 80859aa:  and edi, 0xf8
 80859ad:  or edi, ebx
 80859af:  mov DWORD PTR [ebp-0x2c], 0x7
 80859b6:  mov eax, DWORD PTR [ebp-0x2c]
 80859b9:  mov DWORD PTR [edx], edi
 80859bb:  add esp, 0x4c
 80859be:  pop ebx
 80859bf:  pop esi
 80859c0:  pop edi
 80859c1:  pop ebp
 80859c2:  ret
 80859c3:  cmp ebx, 0x3
 80859c6:  jbe 808598a
 80859c8:  jmp 8085946
 80859cd:  mov ecx, DWORD PTR [ebp+0x10]
 80859d0:  sub edx, esi
 80859d2:  add DWORD PTR [ecx], edx
 80859d4:  lea esi, [esi]
 80859d8:  jmp 80857fd
 80859dd:  mov edx, DWORD PTR [ebp-0x18]
 80859e0:  mov ecx, DWORD PTR [ebp-0x28]
 80859e3:  movzx eax, BYTE PTR [edx+0x4]
 80859e7:  mov BYTE PTR [ecx], al
 80859e9:  movzx eax, BYTE PTR [edx+0x5]
 80859ed:  mov BYTE PTR [ecx+0x1], al
 80859f0:  movzx eax, BYTE PTR [edx+0x6]
 80859f4:  mov BYTE PTR [ecx+0x2], al
 80859f7:  movzx eax, BYTE PTR [edx+0x7]
 80859fb:  mov BYTE PTR [ecx+0x3], al
 80859fe:  add ecx, 0x4
 8085a01:  mov DWORD PTR [ebp-0x28], ecx
 8085a04:  jmp 8085963
 8085a09:  mov DWORD PTR [esp+0xc], 0x80b5d69
 8085a11:  mov DWORD PTR [esp+0x8], 0x28f
 8085a19:  mov DWORD PTR [esp+0x4], 0x80b5cc1
 8085a21:  mov DWORD PTR [esp], 0x80b5cd0
 8085a28:  call 8051490
 8085a2d:  mov esi, DWORD PTR [ebp-0x28]
 8085a30:  mov ecx, edi
 8085a32:  xor edx, edx
 8085a34:  mov ebx, DWORD PTR [ecx]
 8085a36:  test ebx, ebx
 8085a38:  js 80858d9
 8085a3e:  add edx, 0x1
 8085a41:  add ecx, 0x4
 8085a44:  mov DWORD PTR [esi], ebx
 8085a46:  add esi, 0x4
 8085a49:  cmp eax, edx
 8085a4b:  ja 8085a34
 8085a4d:  jmp 80856f3
 8085a52:  mov edx, DWORD PTR [ebp+0x18]
 8085a55:  mov edx, DWORD PTR [edx]
 8085a57:  mov DWORD PTR [ebp-0x28], edx
 8085a5a:  jmp 8085648
 8085a5f:  mov edi, DWORD PTR [ebp+0x18]
 8085a62:  test edi, edi
 8085a64:  jne 8085aff
 8085a6a:  mov ecx, DWORD PTR [ebp+0xc]
 8085a6d:  mov eax, DWORD PTR [ecx+0x14]
 8085a70:  mov DWORD PTR [eax], 0x0
 8085a76:  mov DWORD PTR [eax+0x4], 0x0
 8085a7d:  test BYTE PTR [ecx+0x8], 0x1
 8085a81:  mov DWORD PTR [ebp-0x2c], 0x0
 8085a88:  jne 808588c
 8085a8e:  mov eax, DWORD PTR [ebp-0x30]
 8085a91:  mov DWORD PTR [esp], eax
 8085a94:  call 807f350
 8085a99:  mov edx, DWORD PTR [ebp+0x24]
 8085a9c:  mov DWORD PTR [esp+0x18], ebx
 8085aa0:  mov DWORD PTR [esp+0x1c], edx
 8085aa4:  mov ecx, DWORD PTR [ebp+0x1c]
 8085aa7:  mov DWORD PTR [esp+0x10], 0x0
 8085aaf:  mov DWORD PTR [esp+0xc], 0x0
 8085ab7:  mov DWORD PTR [esp+0x8], 0x0
 8085abf:  mov DWORD PTR [esp+0x14], ecx
 8085ac3:  mov eax, DWORD PTR [ebp-0x34]
 8085ac6:  mov DWORD PTR [esp+0x4], eax
 8085aca:  mov edx, DWORD PTR [ebp-0x38]
 8085acd:  mov DWORD PTR [esp], edx
 8085ad0:  call DWORD PTR [ebp-0x30]
 8085ad3:  mov DWORD PTR [ebp-0x2c], eax
 8085ad6:  jmp 808588c
 8085adb:  mov DWORD PTR [esp+0xc], 0x80b6000
 8085ae3:  mov DWORD PTR [esp+0x8], 0x312
 8085aeb:  mov DWORD PTR [esp+0x4], 0x80b5c20
 8085af3:  mov DWORD PTR [esp], 0x80b5c87
 8085afa:  call 8051490
 8085aff:  mov DWORD PTR [esp+0xc], 0x80b6000
 8085b07:  mov DWORD PTR [esp+0x8], 0x1a0
 8085b0f:  mov DWORD PTR [esp+0x4], 0x80b5c20
 8085b17:  mov DWORD PTR [esp], 0x80b5c34
 8085b1e:  call 8051490
 8085b23:  mov DWORD PTR [esp+0xc], 0x80b6000
 8085b2b:  mov DWORD PTR [esp+0x8], 0x22f
 8085b33:  mov DWORD PTR [esp+0x4], 0x80b5c20
 8085b3b:  mov DWORD PTR [esp], 0x80b5c34
 8085b42:  call 8051490
 8085b47:  cmp eax, 0x7
 8085b4a:  sete BYTE PTR [ebp-0x19]
 8085b4e:  mov DWORD PTR [ebp-0x2c], eax
 8085b51:  jmp 8085826
 8085b56:  lea esi, [esi]
 8085b59:  lea edi, [edi]

08085b60 <__gconv_transform_internal_ucs2reverse>:
 8085b60:  push ebp
 8085b61:  mov ebp, esp
 8085b63:  push edi
 8085b64:  push esi
 8085b65:  push ebx
 8085b66:  sub esp, 0x68
 8085b69:  mov ecx, DWORD PTR [ebp+0xc]
 8085b6c:  mov eax, DWORD PTR [ebp+0x8]
 8085b6f:  mov edx, DWORD PTR [ebp+0xc]
 8085b72:  mov ebx, DWORD PTR [ebp+0x20]
 8085b75:  mov esi, DWORD PTR [ecx+0x8]
 8085b78:  add eax, 0x3c
 8085b7b:  add edx, 0x24
 8085b7e:  mov DWORD PTR [ebp-0x4c], eax
 8085b81:  test esi, 0x1
 8085b87:  mov DWORD PTR [ebp-0x48], edx
 8085b8a:  mov DWORD PTR [ebp-0x44], 0x0
 8085b91:  jne 8085bb3
 8085b93:  mov edx, DWORD PTR [ebp+0x8]
 8085b96:  mov eax, DWORD PTR [ebp-0x4c]
 8085b99:  mov edx, DWORD PTR [edx+0x3c]
 8085b9c:  mov eax, DWORD PTR [eax+0x14]
 8085b9f:  test edx, edx
 8085ba1:  mov DWORD PTR [ebp-0x44], eax
 8085ba4:  je 8085bb3
 8085ba6:  ror eax, 0x9
 8085ba9:  xor eax, DWORD PTR gs:0x18
 8085bb0:  mov DWORD PTR [ebp-0x44], eax
 8085bb3:  test ebx, ebx
 8085bb5:  jne 8086215
 8085bbb:  mov eax, DWORD PTR [ebp+0x18]
 8085bbe:  test eax, eax
 8085bc0:  jne 8086208
 8085bc6:  mov edx, DWORD PTR [ebp+0xc]
 8085bc9:  mov edx, DWORD PTR [edx]
 8085bcb:  mov DWORD PTR [ebp-0x3c], edx
 8085bce:  cmp DWORD PTR [ebp+0x1c], 0x1
 8085bd2:  mov ebx, DWORD PTR [ebp+0xc]
 8085bd5:  lea eax, [ebp-0x10]
 8085bd8:  mov DWORD PTR [ebp-0x34], eax
 8085bdb:  sbb eax, eax
 8085bdd:  not eax
 8085bdf:  and DWORD PTR [ebp-0x34], eax
 8085be2:  mov eax, DWORD PTR [ebp+0x24]
 8085be5:  mov ebx, DWORD PTR [ebx+0x4]
 8085be8:  mov DWORD PTR [ebp-0x10], 0x0
 8085bef:  test eax, eax
 8085bf1:  mov DWORD PTR [ebp-0x38], ebx
 8085bf4:  je 8085c08
 8085bf6:  mov edx, DWORD PTR [ebp+0xc]
 8085bf9:  mov edx, DWORD PTR [edx+0x14]
 8085bfc:  test BYTE PTR [edx], 0x7
 8085bff:  mov DWORD PTR [ebp-0x20], edx
 8085c02:  jne 8085f69
 8085c08:  mov ecx, DWORD PTR [ebp-0x3c]
 8085c0b:  nop
 8085c0c:  lea esi, [esi]
 8085c10:  mov edx, DWORD PTR [ebp+0x10]
 8085c13:  and esi, 0x2
 8085c16:  mov edi, 0x4
 8085c1b:  mov DWORD PTR [ebp-0x24], esi
 8085c1e:  mov DWORD PTR [ebp-0x50], ecx
 8085c21:  mov edx, DWORD PTR [edx]
 8085c23:  mov DWORD PTR [ebp-0x1c], ecx
 8085c26:  mov DWORD PTR [ebp-0x40], edx
 8085c29:  mov ebx, edx
 8085c2b:  mov DWORD PTR [ebp-0x18], edx
 8085c2e:  xchg ax, ax
 8085c30:  cmp DWORD PTR [ebp+0x14], ebx
 8085c33:  je 8085d08
 8085c39:  lea esi, [ebx+0x4]
 8085c3c:  cmp DWORD PTR [ebp+0x14], esi
 8085c3f:  jb 8085ee8
 8085c45:  mov ecx, DWORD PTR [ebp-0x50]
 8085c48:  add ecx, 0x2
 8085c4b:  cmp DWORD PTR [ebp-0x38], ecx
 8085c4e:  jb 8085ef2
 8085c54:  mov edx, DWORD PTR [ebx]
 8085c56:  cmp edx, 0xffff
 8085c5c:  jbe 8085e08
 8085c62:  shr edx, 0x7
 8085c65:  cmp edx, 0x1c00
 8085c6b:  je 8085e68
 8085c71:  mov edx, DWORD PTR [ebp-0x34]
 8085c74:  test edx, edx
 8085c76:  je 8085ebf
 8085c7c:  mov eax, DWORD PTR [ebp+0xc]
 8085c7f:  mov ebx, DWORD PTR [eax+0x20]
 8085c82:  test ebx, ebx
 8085c84:  jne 8085c9b
 8085c86:  jmp 8085e46
 8085c8b:  nop
 8085c8c:  lea esi, [esi]
 8085c90:  mov ebx, DWORD PTR [ebx+0x10]
 8085c93:  test ebx, ebx
 8085c95:  je 8085e40
 8085c9b:  mov eax, DWORD PTR [ebx]
 8085c9d:  mov DWORD PTR [esp], eax
 8085ca0:  call 807f350
 8085ca5:  mov edx, DWORD PTR [ebp-0x34]
 8085ca8:  lea ecx, [ebp-0x1c]
 8085cab:  mov DWORD PTR [esp+0x18], ecx
 8085caf:  mov DWORD PTR [esp+0x1c], edx
 8085cb3:  mov eax, DWORD PTR [ebp+0x14]
 8085cb6:  lea edx, [ebp-0x18]
 8085cb9:  mov DWORD PTR [esp+0x10], edx
 8085cbd:  mov DWORD PTR [esp+0x14], eax
 8085cc1:  mov ecx, DWORD PTR [ebp+0x10]
 8085cc4:  mov eax, DWORD PTR [ecx]
 8085cc6:  mov DWORD PTR [esp+0xc], eax
 8085cca:  mov eax, DWORD PTR [ebx+0xc]
 8085ccd:  mov DWORD PTR [esp+0x8], eax
 8085cd1:  mov eax, DWORD PTR [ebp+0xc]
 8085cd4:  mov DWORD PTR [esp+0x4], eax
 8085cd8:  mov edx, DWORD PTR [ebp+0x8]
 8085cdb:  mov DWORD PTR [esp], edx
 8085cde:  call DWORD PTR [ebx]
 8085ce0:  cmp eax, 0x6
 8085ce3:  mov edi, eax
 8085ce5:  je 8085c90
 8085ce7:  cmp eax, 0x5
 8085cea:  je 8085efc
 8085cf0:  mov ebx, DWORD PTR [ebp-0x1c]
 8085cf3:  mov DWORD PTR [ebp-0x50], ebx
 8085cf6:  mov ebx, DWORD PTR [ebp-0x18]
 8085cf9:  cmp DWORD PTR [ebp+0x14], ebx
 8085cfc:  jne 8085c39
 8085d02:  lea esi, [esi]
 8085d08:  mov eax, DWORD PTR [ebp+0x10]
 8085d0b:  mov DWORD PTR [eax], ebx
 8085d0d:  mov eax, DWORD PTR [ebp+0x18]
 8085d10:  test eax, eax
 8085d12:  jne 8085ed4
 8085d18:  mov eax, DWORD PTR [ebp+0xc]
 8085d1b:  mov ebx, DWORD PTR [eax+0x20]
 8085d1e:  test ebx, ebx
 8085d20:  je 8085d65
 8085d22:  lea esi, [esi]
 8085d28:  mov eax, DWORD PTR [ebx+0x4]
 8085d2b:  test eax, eax
 8085d2d:  je 8085d5e
 8085d2f:  mov DWORD PTR [esp], eax
 8085d32:  call 807f350
 8085d37:  mov edx, DWORD PTR [ebp-0x50]
 8085d3a:  mov DWORD PTR [esp+0x10], edx
 8085d3e:  mov ecx, DWORD PTR [ebp-0x3c]
 8085d41:  mov DWORD PTR [esp+0xc], ecx
 8085d45:  mov edx, DWORD PTR [ebp+0x10]
 8085d48:  mov eax, DWORD PTR [edx]
 8085d4a:  mov DWORD PTR [esp+0x8], eax
 8085d4e:  mov ecx, DWORD PTR [ebp-0x40]
 8085d51:  mov DWORD PTR [esp+0x4], ecx
 8085d55:  mov eax, DWORD PTR [ebx+0xc]
 8085d58:  mov DWORD PTR [esp], eax
 8085d5b:  call DWORD PTR [ebx+0x4]
 8085d5e:  mov ebx, DWORD PTR [ebx+0x10]
 8085d61:  test ebx, ebx
 8085d63:  jne 8085d28
 8085d65:  mov ebx, DWORD PTR [ebp+0xc]
 8085d68:  add DWORD PTR [ebx+0xc], 0x1
 8085d6c:  test BYTE PTR [ebx+0x8], 0x1
 8085d70:  jne 80860d7
 8085d76:  mov ecx, DWORD PTR [ebp-0x50]
 8085d79:  cmp DWORD PTR [ebp-0x3c], ecx
 8085d7c:  jae 8085de6
 8085d7e:  mov ebx, DWORD PTR [ebp+0xc]
 8085d81:  mov eax, DWORD PTR [ebx]
 8085d83:  mov DWORD PTR [ebp-0x1c], eax
 8085d86:  mov eax, DWORD PTR [ebp-0x44]
 8085d89:  mov DWORD PTR [esp], eax
 8085d8c:  call 807f350
 8085d91:  mov edx, DWORD PTR [ebp+0x24]
 8085d94:  mov DWORD PTR [esp+0x18], 0x0
 8085d9c:  mov DWORD PTR [esp+0x1c], edx
 8085da0:  mov ecx, DWORD PTR [ebp+0x1c]
 8085da3:  mov DWORD PTR [esp+0x10], 0x0
 8085dab:  mov DWORD PTR [esp+0x14], ecx
 8085daf:  mov ebx, DWORD PTR [ebp-0x50]
 8085db2:  mov DWORD PTR [esp+0xc], ebx
 8085db6:  lea ebx, [ebp-0x1c]
 8085db9:  mov DWORD PTR [esp+0x8], ebx
 8085dbd:  mov eax, DWORD PTR [ebp-0x48]
 8085dc0:  mov DWORD PTR [esp+0x4], eax
 8085dc4:  mov edx, DWORD PTR [ebp-0x4c]
 8085dc7:  mov DWORD PTR [esp], edx
 8085dca:  call DWORD PTR [ebp-0x44]
 8085dcd:  cmp eax, 0x4
 8085dd0:  mov edx, eax
 8085dd2:  je 8085e98
 8085dd8:  mov eax, DWORD PTR [ebp-0x1c]
 8085ddb:  mov edi, edx
 8085ddd:  cmp eax, DWORD PTR [ebp-0x50]
 8085de0:  jne 808612d
 8085de6:  test edi, edi
 8085de8:  jne 8085ea9
 8085dee:  mov ebx, DWORD PTR [ebp+0xc]
 8085df1:  mov eax, DWORD PTR [ebp+0xc]
 8085df4:  mov ebx, DWORD PTR [ebx]
 8085df6:  mov esi, DWORD PTR [eax+0x8]
 8085df9:  mov DWORD PTR [ebp-0x3c], ebx
 8085dfc:  mov ecx, ebx
 8085dfe:  jmp 8085c10
 8085e03:  nop
 8085e04:  lea esi, [esi]
 8085e08:  lea eax, [edx-0xd800]
 8085e0e:  cmp eax, 0x7ff
 8085e13:  ja 8085e78
 8085e15:  mov eax, DWORD PTR [ebp-0x34]
 8085e18:  test eax, eax
 8085e1a:  je 8085ebf
 8085e20:  mov eax, DWORD PTR [ebp-0x24]
 8085e23:  test eax, eax
 8085e25:  je 8085ebf
 8085e2b:  mov ecx, DWORD PTR [ebp-0x34]
 8085e2e:  mov ebx, esi
 8085e30:  mov DWORD PTR [ebp-0x18], esi
 8085e33:  add DWORD PTR [ecx], 0x1
 8085e36:  jmp 8085c30
 8085e3b:  nop
 8085e3c:  lea esi, [esi]
 8085e40:  mov ecx, DWORD PTR [ebp-0x1c]
 8085e43:  mov DWORD PTR [ebp-0x50], ecx
 8085e46:  mov eax, DWORD PTR [ebp-0x24]
 8085e49:  test eax, eax
 8085e4b:  je 8085ebc
 8085e4d:  mov edx, DWORD PTR [ebp-0x34]
 8085e50:  mov edi, 0x6
 8085e55:  add DWORD PTR [ebp-0x18], 0x4
 8085e59:  mov ebx, DWORD PTR [ebp-0x18]
 8085e5c:  add DWORD PTR [edx], 0x1
 8085e5f:  jmp 8085c30
 8085e64:  lea esi, [esi]
 8085e68:  mov DWORD PTR [ebp-0x18], esi
 8085e6b:  mov ebx, esi
 8085e6d:  jmp 8085c30
 8085e72:  lea esi, [esi]
 8085e78:  mov ebx, DWORD PTR [ebp-0x50]
 8085e7b:  mov eax, edx
 8085e7d:  mov DWORD PTR [ebp-0x1c], ecx
 8085e80:  ror ax, 0x8
 8085e84:  mov DWORD PTR [ebp-0x18], esi
 8085e87:  mov WORD PTR [ebx], ax
 8085e8a:  mov ebx, esi
 8085e8c:  mov DWORD PTR [ebp-0x50], ecx
 8085e8f:  jmp 8085c30
 8085e94:  lea esi, [esi]
 8085e98:  cmp edi, 0x5
 8085e9b:  je 8085dee
 8085ea1:  test edi, edi
 8085ea3:  je 8085dee
 8085ea9:  mov eax, DWORD PTR [ebp+0x24]
 8085eac:  test eax, eax
 8085eae:  xchg ax, ax
 8085eb0:  jne 8085f0a
 8085eb2:  add esp, 0x68
 8085eb5:  mov eax, edi
 8085eb7:  pop ebx
 8085eb8:  pop esi
 8085eb9:  pop edi
 8085eba:  pop ebp
 8085ebb:  ret
 8085ebc:  mov ebx, DWORD PTR [ebp-0x18]
 8085ebf:  mov eax, DWORD PTR [ebp+0x10]
 8085ec2:  mov edi, 0x6
 8085ec7:  mov DWORD PTR [eax], ebx
 8085ec9:  mov eax, DWORD PTR [ebp+0x18]
 8085ecc:  test eax, eax
 8085ece:  je 8085d18
 8085ed4:  mov ecx, DWORD PTR [ebp-0x50]
 8085ed7:  mov eax, edi
 8085ed9:  mov edx, DWORD PTR [ebp+0x18]
 8085edc:  mov DWORD PTR [edx], ecx
 8085ede:  add esp, 0x68
 8085ee1:  pop ebx
 8085ee2:  pop esi
 8085ee3:  pop edi
 8085ee4:  pop ebp
 8085ee5:  ret
 8085ee6:  xchg ax, ax
 8085ee8:  mov edi, 0x7
 8085eed:  jmp 8085d08
 8085ef2:  mov edi, 0x5
 8085ef7:  jmp 8085d08
 8085efc:  mov eax, DWORD PTR [ebp-0x1c]
 8085eff:  mov ebx, DWORD PTR [ebp-0x18]
 8085f02:  mov DWORD PTR [ebp-0x50], eax
 8085f05:  jmp 8085d08
 8085f0a:  cmp edi, 0x7
 8085f0d:  jne 8085eb2
 8085f0f:  mov edx, DWORD PTR [ebp+0x10]
 8085f12:  mov eax, DWORD PTR [ebp+0x14]
 8085f15:  mov ebx, DWORD PTR [edx]
 8085f17:  sub eax, ebx
 8085f19:  cmp eax, 0x3
 8085f1c:  jg 8086160
 8085f22:  xor esi, esi
 8085f24:  xor edx, edx
 8085f26:  cmp DWORD PTR [ebp+0x14], ebx
 8085f29:  mov ecx, ebx
 8085f2b:  jbe 8085f4f
 8085f2d:  mov eax, DWORD PTR [ebp+0xc]
 8085f30:  mov edx, DWORD PTR [eax+0x14]
 8085f33:  movzx eax, BYTE PTR [ecx]
 8085f36:  add ecx, 0x1
 8085f39:  mov BYTE PTR [edx+esi+0x4], al
 8085f3d:  mov edx, DWORD PTR [ebp+0x10]
 8085f40:  add esi, 0x1
 8085f43:  mov DWORD PTR [edx], ecx
 8085f45:  cmp DWORD PTR [ebp+0x14], ecx
 8085f48:  ja 8085f2d
 8085f4a:  mov edx, DWORD PTR [ebp+0x14]
 8085f4d:  sub edx, ebx
 8085f4f:  mov ecx, DWORD PTR [ebp+0xc]
 8085f52:  mov edi, 0x7
 8085f57:  mov eax, DWORD PTR [ecx+0x14]
 8085f5a:  and DWORD PTR [eax], 0xf8
 8085f5d:  or DWORD PTR [eax], edx
 8085f5f:  add esp, 0x68
 8085f62:  mov eax, edi
 8085f64:  pop ebx
 8085f65:  pop esi
 8085f66:  pop edi
 8085f67:  pop ebp
 8085f68:  ret
 8085f69:  mov edi, DWORD PTR [ebp+0x18]
 8085f6c:  test edi, edi
 8085f6e:  jne 8086184
 8085f74:  mov ebx, DWORD PTR [ebp+0x10]
 8085f77:  xor edx, edx
 8085f79:  mov eax, DWORD PTR [ebp-0x3c]
 8085f7c:  mov ecx, DWORD PTR [ebx]
 8085f7e:  lea ebx, [ebp-0x14]
 8085f81:  mov DWORD PTR [ebp-0x18], eax
 8085f84:  mov DWORD PTR [ebp-0x54], ebx
 8085f87:  mov DWORD PTR [ebp-0x1c], ecx
 8085f8a:  mov ebx, DWORD PTR [ebp-0x20]
 8085f8d:  movzx eax, BYTE PTR [ebx+edx+0x4]
 8085f92:  mov BYTE PTR [ebp+edx-0x14], al
 8085f96:  mov eax, DWORD PTR [ebx]
 8085f98:  add edx, 0x1
 8085f9b:  and eax, 0x7
 8085f9e:  cmp edx, eax
 8085fa0:  jb 8085f8a
 8085fa2:  sub ecx, edx
 8085fa4:  mov ebx, edx
 8085fa6:  lea eax, [ecx+0x4]
 8085fa9:  cmp DWORD PTR [ebp+0x14], eax
 8085fac:  jb 80860e9
 8085fb2:  mov edx, DWORD PTR [ebp-0x3c]
 8085fb5:  mov edi, 0x5
 8085fba:  add edx, 0x2
 8085fbd:  cmp DWORD PTR [ebp-0x38], edx
 8085fc0:  mov DWORD PTR [ebp-0x28], edx
 8085fc3:  jb 8085eb2
 8085fc9:  lea ecx, [ebp-0x14]
 8085fcc:  add ecx, ebx
 8085fce:  mov edx, DWORD PTR [ebp-0x1c]
 8085fd1:  add ebx, 0x1
 8085fd4:  movzx eax, BYTE PTR [edx]
 8085fd7:  mov BYTE PTR [ecx], al
 8085fd9:  lea eax, [edx+0x1]
 8085fdc:  add ecx, 0x1
 8085fdf:  cmp ebx, 0x3
 8085fe2:  mov DWORD PTR [ebp-0x1c], eax
 8085fe5:  jbe 808611c
 8085feb:  mov edx, DWORD PTR [ebp-0x14]
 8085fee:  lea ecx, [ebp-0x14]
 8085ff1:  mov eax, ecx
 8085ff3:  add eax, ebx
 8085ff5:  mov DWORD PTR [ebp-0x1c], ecx
 8085ff8:  cmp edx, 0xffff
 8085ffe:  mov DWORD PTR [ebp-0x30], eax
 8086001:  jbe 80861a8
 8086007:  shr edx, 0x7
 808600a:  cmp edx, 0x1c00
 8086010:  je 80861de
 8086016:  mov ebx, DWORD PTR [ebp-0x34]
 8086019:  test ebx, ebx
 808601b:  je 80861d4
 8086021:  mov edx, DWORD PTR [ebp+0xc]
 8086024:  mov edx, DWORD PTR [edx+0x20]
 8086027:  test edx, edx
 8086029:  mov DWORD PTR [ebp-0x2c], edx
 808602c:  je 808613e
 8086032:  lea ebx, [ebp-0x1c]
 8086035:  jmp 8086049
 8086037:  nop
 8086038:  mov ecx, DWORD PTR [ebp-0x2c]
 808603b:  mov ecx, DWORD PTR [ecx+0x10]
 808603e:  test ecx, ecx
 8086040:  mov DWORD PTR [ebp-0x2c], ecx
 8086043:  je 808613e
 8086049:  mov ecx, DWORD PTR [ebp-0x2c]
 808604c:  mov eax, DWORD PTR [ecx]
 808604e:  mov DWORD PTR [esp], eax
 8086051:  call 807f350
 8086056:  mov eax, DWORD PTR [ebp-0x34]
 8086059:  lea edx, [ebp-0x18]
 808605c:  mov DWORD PTR [esp+0x18], edx
 8086060:  mov DWORD PTR [esp+0x1c], eax
 8086064:  mov ecx, DWORD PTR [ebp-0x30]
 8086067:  mov DWORD PTR [esp+0x10], ebx
 808606b:  mov DWORD PTR [esp+0x14], ecx
 808606f:  mov edx, DWORD PTR [ebp+0x10]
 8086072:  mov eax, DWORD PTR [edx]
 8086074:  mov DWORD PTR [esp+0xc], eax
 8086078:  mov ecx, DWORD PTR [ebp-0x2c]
 808607b:  mov eax, DWORD PTR [ecx+0xc]
 808607e:  mov DWORD PTR [esp+0x8], eax
 8086082:  mov eax, DWORD PTR [ebp+0xc]
 8086085:  mov DWORD PTR [esp+0x4], eax
 8086089:  mov edx, DWORD PTR [ebp+0x8]
 808608c:  mov DWORD PTR [esp], edx
 808608f:  call DWORD PTR [ecx]
 8086091:  cmp eax, 0x6
 8086094:  mov edi, eax
 8086096:  je 8086038
 8086098:  mov eax, DWORD PTR [ebp-0x1c]
 808609b:  cmp eax, DWORD PTR [ebp-0x54]
 808609e:  je 80862af
 80860a4:  mov ebx, DWORD PTR [ebp-0x20]
 80860a7:  mov edx, eax
 80860a9:  sub edx, DWORD PTR [ebp-0x54]
 80860ac:  mov eax, DWORD PTR [ebx]
 80860ae:  and eax, 0x7
 80860b1:  cmp edx, eax
 80860b3:  jle 808628b
 80860b9:  sub edx, eax
 80860bb:  mov eax, DWORD PTR [ebp+0x10]
 80860be:  mov ecx, DWORD PTR [ebp-0x20]
 80860c1:  mov ebx, DWORD PTR [ebp+0xc]
 80860c4:  add DWORD PTR [eax], edx
 80860c6:  mov edx, DWORD PTR [ebp-0x18]
 80860c9:  and DWORD PTR [ecx], 0xf8
 80860cc:  mov esi, DWORD PTR [ebx+0x8]
 80860cf:  mov DWORD PTR [ebp-0x3c], edx
 80860d2:  jmp 8085c08
 80860d7:  mov eax, DWORD PTR [ebp-0x50]
 80860da:  mov edx, DWORD PTR [ebp+0x1c]
 80860dd:  mov DWORD PTR [ebx], eax
 80860df:  mov eax, DWORD PTR [ebp-0x10]
 80860e2:  add DWORD PTR [edx], eax
 80860e4:  jmp 8085ea9
 80860e9:  mov ecx, DWORD PTR [ebp+0x14]
 80860ec:  mov eax, DWORD PTR [ebp+0x10]
 80860ef:  mov DWORD PTR [eax], ecx
 80860f1:  mov ebx, DWORD PTR [ebp-0x1c]
 80860f4:  cmp ecx, ebx
 80860f6:  jbe 8086112
 80860f8:  mov eax, DWORD PTR [ebp-0x20]
 80860fb:  lea edx, [eax+edx+0x4]
 80860ff:  movzx eax, BYTE PTR [ebx]
 8086102:  add ebx, 0x1
 8086105:  mov BYTE PTR [edx], al
 8086107:  add edx, 0x1
 808610a:  cmp DWORD PTR [ebp+0x14], ebx
 808610d:  mov DWORD PTR [ebp-0x1c], ebx
 8086110:  ja 80860ff
 8086112:  mov edi, 0x7
 8086117:  jmp 8085eb2
 808611c:  cmp DWORD PTR [ebp+0x14], eax
 808611f:  ja 8085fce
 8086125:  lea esi, [esi]
 8086128:  jmp 8085feb
 808612d:  mov ecx, DWORD PTR [ebp+0x10]
 8086130:  mov edi, edx
 8086132:  sub eax, DWORD PTR [ebp-0x50]
 8086135:  add eax, eax
 8086137:  add DWORD PTR [ecx], eax
 8086139:  jmp 8085de6
 808613e:  and esi, 0x2
 8086141:  mov edi, 0x6
 8086146:  je 8086098
 808614c:  mov ebx, DWORD PTR [ebp-0x34]
 808614f:  mov edi, 0x6
 8086154:  add DWORD PTR [ebp-0x1c], 0x4
 8086158:  add DWORD PTR [ebx], 0x1
 808615b:  jmp 8086098
 8086160:  mov DWORD PTR [esp+0xc], 0x80b5e00
 8086168:  mov DWORD PTR [esp+0x8], 0x312
 8086170:  mov DWORD PTR [esp+0x4], 0x80b5c20
 8086178:  mov DWORD PTR [esp], 0x80b5c87
 808617f:  call 8051490
 8086184:  mov DWORD PTR [esp+0xc], 0x80b5e00
 808618c:  mov DWORD PTR [esp+0x8], 0x22f
 8086194:  mov DWORD PTR [esp+0x4], 0x80b5c20
 808619c:  mov DWORD PTR [esp], 0x80b5c34
 80861a3:  call 8051490
 80861a8:  lea eax, [edx-0xd800]
 80861ae:  cmp eax, 0x7ff
 80861b3:  ja 80861eb
 80861b5:  mov ecx, DWORD PTR [ebp-0x34]
 80861b8:  test ecx, ecx
 80861ba:  je 80861d4
 80861bc:  and esi, 0x2
 80861bf:  je 80861d4
 80861c1:  lea eax, [ebp-0x10]
 80861c4:  xor edi, edi
 80861c6:  mov DWORD PTR [ebp-0x1c], eax
 80861c9:  mov eax, DWORD PTR [ebp-0x34]
 80861cc:  add DWORD PTR [eax], 0x1
 80861cf:  jmp 8086098
 80861d4:  mov edi, 0x6
 80861d9:  jmp 8085eb2
 80861de:  lea eax, [ebp-0x10]
 80861e1:  xor edi, edi
 80861e3:  mov DWORD PTR [ebp-0x1c], eax
 80861e6:  jmp 8086098
 80861eb:  mov eax, edx
 80861ed:  mov ecx, DWORD PTR [ebp-0x28]
 80861f0:  xor edi, edi
 80861f2:  mov edx, DWORD PTR [ebp-0x3c]
 80861f5:  ror ax, 0x8
 80861f9:  add DWORD PTR [ebp-0x1c], 0x4
 80861fd:  mov WORD PTR [edx], ax
 8086200:  mov DWORD PTR [ebp-0x18], ecx
 8086203:  jmp 8086098
 8086208:  mov ecx, DWORD PTR [ebp+0x18]
 808620b:  mov ecx, DWORD PTR [ecx]
 808620d:  mov DWORD PTR [ebp-0x3c], ecx
 8086210:  jmp 8085bce
 8086215:  mov eax, DWORD PTR [ebp+0x18]
 8086218:  test eax, eax
 808621a:  jne 80862cd
 8086220:  mov ecx, DWORD PTR [ebp+0xc]
 8086223:  xor edi, edi
 8086225:  mov eax, DWORD PTR [ecx+0x14]
 8086228:  mov DWORD PTR [eax], 0x0
 808622e:  mov DWORD PTR [eax+0x4], 0x0
 8086235:  test BYTE PTR [ecx+0x8], 0x1
 8086239:  jne 8085eb2
 808623f:  mov eax, DWORD PTR [ebp-0x44]
 8086242:  mov DWORD PTR [esp], eax
 8086245:  call 807f350
 808624a:  mov edx, DWORD PTR [ebp+0x24]
 808624d:  mov DWORD PTR [esp+0x18], ebx
 8086251:  mov DWORD PTR [esp+0x1c], edx
 8086255:  mov ecx, DWORD PTR [ebp+0x1c]
 8086258:  mov DWORD PTR [esp+0x10], 0x0
 8086260:  mov DWORD PTR [esp+0xc], 0x0
 8086268:  mov DWORD PTR [esp+0x8], 0x0
 8086270:  mov DWORD PTR [esp+0x14], ecx
 8086274:  mov ebx, DWORD PTR [ebp-0x48]
 8086277:  mov DWORD PTR [esp+0x4], ebx
 808627b:  mov eax, DWORD PTR [ebp-0x4c]
 808627e:  mov DWORD PTR [esp], eax
 8086281:  call DWORD PTR [ebp-0x44]
 8086284:  mov edi, eax
 8086286:  jmp 8085eb2
 808628b:  mov DWORD PTR [esp+0xc], 0x80b5e40
 8086293:  mov DWORD PTR [esp+0x8], 0x1bc
 808629b:  mov DWORD PTR [esp+0x4], 0x80b5c4f
 80862a3:  mov DWORD PTR [esp], 0x80b5d80
 80862aa:  call 8051490
 80862af:  cmp edi, 0x7
 80862b2:  je 80862f1
 80862b4:  test edi, edi
 80862b6:  jne 8085eb2
 80862bc:  mov eax, DWORD PTR [ebp+0xc]
 80862bf:  mov esi, DWORD PTR [eax+0x8]
 80862c2:  lea esi, [esi]
 80862c8:  jmp 8085c08
 80862cd:  mov DWORD PTR [esp+0xc], 0x80b5e00
 80862d5:  mov DWORD PTR [esp+0x8], 0x1a0
 80862dd:  mov DWORD PTR [esp+0x4], 0x80b5c20
 80862e5:  mov DWORD PTR [esp], 0x80b5c34
 80862ec:  call 8051490
 80862f1:  lea eax, [ebp-0x10]
 80862f4:  cmp DWORD PTR [ebp-0x30], eax
 80862f7:  je 8086356
 80862f9:  mov edx, DWORD PTR [ebp-0x20]
 80862fc:  mov eax, DWORD PTR [ebp-0x30]
 80862ff:  mov ebx, DWORD PTR [ebp+0x10]
 8086302:  sub eax, DWORD PTR [ebp-0x54]
 8086305:  mov ecx, DWORD PTR [edx]
 8086307:  mov edx, ecx
 8086309:  and edx, 0x7
 808630c:  sub eax, edx
 808630e:  mov edx, ecx
 8086310:  add DWORD PTR [ebx], eax
 8086312:  and edx, 0xf8
 8086315:  mov eax, DWORD PTR [ebp-0x30]
 8086318:  sub eax, DWORD PTR [ebp-0x1c]
 808631b:  cmp eax, edx
 808631d:  jle 808639e
 808631f:  cmp eax, 0x7
 8086322:  jg 808637a
 8086324:  or eax, edx
 8086326:  mov edx, DWORD PTR [ebp-0x20]
 8086329:  mov DWORD PTR [edx], eax
 808632b:  lea edx, [ebp-0x14]
 808632e:  cmp DWORD PTR [ebp-0x30], edx
 8086331:  jbe 8085eb2
 8086337:  xor ecx, ecx
 8086339:  movzx eax, BYTE PTR [edx]
 808633c:  add edx, 0x1
 808633f:  mov ebx, DWORD PTR [ebp-0x20]
 8086342:  mov BYTE PTR [ebx+ecx+0x4], al
 8086346:  add ecx, 0x1
 8086349:  cmp DWORD PTR [ebp-0x30], edx
 808634c:  mov DWORD PTR [ebp-0x1c], edx
 808634f:  ja 8086339
 8086351:  jmp 8085eb2
 8086356:  mov DWORD PTR [esp+0xc], 0x80b5e40
 808635e:  mov DWORD PTR [esp+0x8], 0x1ce
 8086366:  mov DWORD PTR [esp+0x4], 0x80b5c4f
 808636e:  mov DWORD PTR [esp], 0x80b5c5f
 8086375:  call 8051490
 808637a:  mov DWORD PTR [esp+0xc], 0x80b5e40
 8086382:  mov DWORD PTR [esp+0x8], 0x1d9
 808638a:  mov DWORD PTR [esp+0x4], 0x80b5c4f
 8086392:  mov DWORD PTR [esp], 0x80b5c74
 8086399:  call 8051490
 808639e:  mov DWORD PTR [esp+0xc], 0x80b5e40
 80863a6:  mov DWORD PTR [esp+0x8], 0x1d8
 80863ae:  mov DWORD PTR [esp+0x4], 0x80b5c4f
 80863b6:  mov DWORD PTR [esp], 0x80b5da8
 80863bd:  call 8051490
 80863c2:  lea esi, [esi]
 80863c9:  lea edi, [edi]

080863d0 <__gconv_transform_ucs2reverse_internal>:
 80863d0:  push ebp
 80863d1:  mov ebp, esp
 80863d3:  push edi
 80863d4:  push esi
 80863d5:  push ebx
 80863d6:  sub esp, 0x54
 80863d9:  mov ecx, DWORD PTR [ebp+0xc]
 80863dc:  mov eax, DWORD PTR [ebp+0x8]
 80863df:  mov ebx, DWORD PTR [ebp+0x20]
 80863e2:  mov DWORD PTR [ebp-0x38], 0x0
 80863e9:  add ecx, 0x24
 80863ec:  mov DWORD PTR [ebp-0x3c], ecx
 80863ef:  mov ecx, DWORD PTR [ebp+0xc]
 80863f2:  lea edx, [eax+0x3c]
 80863f5:  mov DWORD PTR [ebp-0x40], edx
 80863f8:  mov edx, DWORD PTR [ecx+0x8]
 80863fb:  test dl, 0x1
 80863fe:  jne 808641d
 8086400:  mov ecx, DWORD PTR [ebp-0x40]
 8086403:  mov esi, DWORD PTR [eax+0x3c]
 8086406:  mov ecx, DWORD PTR [ecx+0x14]
 8086409:  test esi, esi
 808640b:  mov DWORD PTR [ebp-0x38], ecx
 808640e:  je 808641d
 8086410:  ror ecx, 0x9
 8086413:  xor ecx, DWORD PTR gs:0x18
 808641a:  mov DWORD PTR [ebp-0x38], ecx
 808641d:  test ebx, ebx
 808641f:  jne 8086940
 8086425:  mov eax, DWORD PTR [ebp+0x18]
 8086428:  test eax, eax
 808642a:  jne 8086933
 8086430:  mov ecx, DWORD PTR [ebp+0xc]
 8086433:  mov ecx, DWORD PTR [ecx]
 8086435:  mov DWORD PTR [ebp-0x30], ecx
 8086438:  cmp DWORD PTR [ebp+0x1c], 0x1
 808643c:  mov ecx, DWORD PTR [ebp+0xc]
 808643f:  lea eax, [ebp-0x14]
 8086442:  mov DWORD PTR [ebp-0x28], eax
 8086445:  sbb eax, eax
 8086447:  not eax
 8086449:  and DWORD PTR [ebp-0x28], eax
 808644c:  mov eax, DWORD PTR [ebp+0x24]
 808644f:  mov ecx, DWORD PTR [ecx+0x4]
 8086452:  mov DWORD PTR [ebp-0x14], 0x0
 8086459:  test eax, eax
 808645b:  mov DWORD PTR [ebp-0x2c], ecx
 808645e:  je 808646f
 8086460:  mov ecx, DWORD PTR [ebp+0xc]
 8086463:  mov edi, DWORD PTR [ecx+0x14]
 8086466:  test BYTE PTR [edi], 0x7
 8086469:  jne 80866dd
 808646f:  mov eax, DWORD PTR [ebp+0x10]
 8086472:  mov edi, DWORD PTR [eax]
 8086474:  cmp DWORD PTR [ebp+0x14], edi
 8086477:  je 808662b
 808647d:  lea esi, [esi]
 8086480:  lea ecx, [edi+0x2]
 8086483:  cmp DWORD PTR [ebp+0x14], ecx
 8086486:  jb 808675e
 808648c:  mov eax, DWORD PTR [ebp-0x30]
 808648f:  add eax, 0x4
 8086492:  cmp DWORD PTR [ebp-0x2c], eax
 8086495:  jb 8086746
 808649b:  and edx, 0x2
 808649e:  je 80867e2
 80864a4:  mov eax, DWORD PTR [ebp-0x28]
 80864a7:  test eax, eax
 80864a9:  je 8086788
 80864af:  mov eax, edi
 80864b1:  mov esi, DWORD PTR [ebp-0x30]
 80864b4:  jmp 80864dd
 80864b6:  xchg ax, ax
 80864b8:  movzx eax, dx
 80864bb:  mov DWORD PTR [esi], eax
 80864bd:  add esi, 0x4
 80864c0:  cmp DWORD PTR [ebp+0x14], ecx
 80864c3:  je 80864fb
 80864c5:  lea edx, [ecx+0x2]
 80864c8:  cmp DWORD PTR [ebp+0x14], edx
 80864cb:  jb 8086530
 80864cd:  lea eax, [esi+0x4]
 80864d0:  cmp DWORD PTR [ebp-0x2c], eax
 80864d3:  jb 80866c8
 80864d9:  mov eax, ecx
 80864db:  mov ecx, edx
 80864dd:  movzx edx, WORD PTR [eax]
 80864e0:  ror dx, 0x8
 80864e4:  lea eax, [edx+0x2800]
 80864ea:  cmp ax, 0x7ff
 80864ee:  ja 80864b8
 80864f0:  mov edx, DWORD PTR [ebp-0x28]
 80864f3:  add DWORD PTR [edx], 0x1
 80864f6:  cmp DWORD PTR [ebp+0x14], ecx
 80864f9:  jne 80864c5
 80864fb:  mov ecx, DWORD PTR [ebp+0x14]
 80864fe:  mov ebx, ecx
 8086500:  mov ecx, DWORD PTR [ebp+0x10]
 8086503:  mov DWORD PTR [ebp-0x1c], esi
 8086506:  mov DWORD PTR [ebp-0x34], 0x4
 808650d:  mov BYTE PTR [ebp-0x21], 0x0
 8086511:  mov DWORD PTR [ecx], ebx
 8086513:  mov ebx, DWORD PTR [ebp+0x18]
 8086516:  test ebx, ebx
 8086518:  je 808654c
 808651a:  mov edx, DWORD PTR [ebp-0x1c]
 808651d:  mov eax, DWORD PTR [ebp+0x18]
 8086520:  mov DWORD PTR [eax], edx
 8086522:  mov eax, DWORD PTR [ebp-0x34]
 8086525:  add esp, 0x54
 8086528:  pop ebx
 8086529:  pop esi
 808652a:  pop edi
 808652b:  pop ebp
 808652c:  ret
 808652d:  lea esi, [esi]
 8086530:  mov ebx, ecx
 8086532:  mov DWORD PTR [ebp-0x1c], esi
 8086535:  mov DWORD PTR [ebp-0x34], 0x7
 808653c:  mov BYTE PTR [ebp-0x21], 0x1
 8086540:  mov ecx, DWORD PTR [ebp+0x10]
 8086543:  mov DWORD PTR [ecx], ebx
 8086545:  mov ebx, DWORD PTR [ebp+0x18]
 8086548:  test ebx, ebx
 808654a:  jne 808651a
 808654c:  mov ecx, DWORD PTR [ebp+0xc]
 808654f:  mov ebx, DWORD PTR [ecx+0x20]
 8086552:  test ebx, ebx
 8086554:  je 808658f
 8086556:  xchg ax, ax
 8086558:  mov eax, DWORD PTR [ebx+0x4]
 808655b:  test eax, eax
 808655d:  je 8086588
 808655f:  mov DWORD PTR [esp], eax
 8086562:  call 807f350
 8086567:  mov DWORD PTR [esp+0x10], esi
 808656b:  mov eax, DWORD PTR [ebp-0x30]
 808656e:  mov DWORD PTR [esp+0xc], eax
 8086572:  mov edx, DWORD PTR [ebp+0x10]
 8086575:  mov eax, DWORD PTR [edx]
 8086577:  mov DWORD PTR [esp+0x4], edi
 808657b:  mov DWORD PTR [esp+0x8], eax
 808657f:  mov eax, DWORD PTR [ebx+0xc]
 8086582:  mov DWORD PTR [esp], eax
 8086585:  call DWORD PTR [ebx+0x4]
 8086588:  mov ebx, DWORD PTR [ebx+0x10]
 808658b:  test ebx, ebx
 808658d:  jne 8086558
 808658f:  mov ecx, DWORD PTR [ebp+0xc]
 8086592:  add DWORD PTR [ecx+0xc], 0x1
 8086596:  test BYTE PTR [ecx+0x8], 0x1
 808659a:  jne 8086776
 80865a0:  cmp DWORD PTR [ebp-0x30], esi
 80865a3:  jae 808664e
 80865a9:  mov ecx, DWORD PTR [ebp+0xc]
 80865ac:  mov eax, DWORD PTR [ecx]
 80865ae:  mov DWORD PTR [ebp-0x18], eax
 80865b1:  mov eax, DWORD PTR [ebp-0x38]
 80865b4:  mov DWORD PTR [esp], eax
 80865b7:  call 807f350
 80865bc:  mov edx, DWORD PTR [ebp+0x24]
 80865bf:  lea eax, [ebp-0x18]
 80865c2:  mov DWORD PTR [esp+0x18], 0x0
 80865ca:  mov DWORD PTR [esp+0x1c], edx
 80865ce:  mov ecx, DWORD PTR [ebp+0x1c]
 80865d1:  mov DWORD PTR [esp+0x10], 0x0
 80865d9:  mov DWORD PTR [esp+0xc], esi
 80865dd:  mov DWORD PTR [esp+0x8], eax
 80865e1:  mov DWORD PTR [esp+0x14], ecx
 80865e5:  mov edx, DWORD PTR [ebp-0x3c]
 80865e8:  mov DWORD PTR [esp+0x4], edx
 80865ec:  mov ecx, DWORD PTR [ebp-0x40]
 80865ef:  mov DWORD PTR [esp], ecx
 80865f2:  call DWORD PTR [ebp-0x38]
 80865f5:  cmp eax, 0x4
 80865f8:  mov ecx, eax
 80865fa:  je 8086648
 80865fc:  mov eax, DWORD PTR [ebp-0x18]
 80865ff:  cmp eax, esi
 8086601:  jne 80868a8
 8086607:  test ecx, ecx
 8086609:  jne 8086924
 808660f:  mov eax, DWORD PTR [ebp+0xc]
 8086612:  mov ecx, DWORD PTR [ebp+0xc]
 8086615:  mov edx, DWORD PTR [eax+0x8]
 8086618:  mov eax, DWORD PTR [ebp+0x10]
 808661b:  mov ecx, DWORD PTR [ecx]
 808661d:  mov edi, DWORD PTR [eax]
 808661f:  cmp DWORD PTR [ebp+0x14], edi
 8086622:  mov DWORD PTR [ebp-0x30], ecx
 8086625:  jne 8086480
 808662b:  mov esi, DWORD PTR [ebp-0x30]
 808662e:  mov ebx, DWORD PTR [ebp+0x14]
 8086631:  mov DWORD PTR [ebp-0x34], 0x4
 8086638:  mov BYTE PTR [ebp-0x21], 0x0
 808663c:  mov DWORD PTR [ebp-0x1c], esi
 808663f:  jmp 8086540
 8086644:  lea esi, [esi]
 8086648:  cmp DWORD PTR [ebp-0x34], 0x5
 808664c:  je 808660f
 808664e:  mov ecx, DWORD PTR [ebp+0x24]
 8086651:  test ecx, ecx
 8086653:  je 8086522
 8086659:  cmp BYTE PTR [ebp-0x21], 0x0
 808665d:  lea esi, [esi]
 8086660:  je 8086522
 8086666:  mov edx, DWORD PTR [ebp+0x10]
 8086669:  mov eax, DWORD PTR [ebp+0x14]
 808666c:  mov esi, DWORD PTR [edx]
 808666e:  sub eax, esi
 8086670:  cmp eax, 0x3
 8086673:  jg 80869bc
 8086679:  xor ebx, ebx
 808667b:  xor edx, edx
 808667d:  cmp DWORD PTR [ebp+0x14], esi
 8086680:  mov ecx, esi
 8086682:  jbe 80866a6
 8086684:  mov eax, DWORD PTR [ebp+0xc]
 8086687:  mov edx, DWORD PTR [eax+0x14]
 808668a:  movzx eax, BYTE PTR [ecx]
 808668d:  add ecx, 0x1
 8086690:  mov BYTE PTR [edx+ebx+0x4], al
 8086694:  mov edx, DWORD PTR [ebp+0x10]
 8086697:  add ebx, 0x1
 808669a:  mov DWORD PTR [edx], ecx
 808669c:  cmp DWORD PTR [ebp+0x14], ecx
 808669f:  ja 8086684
 80866a1:  mov edx, DWORD PTR [ebp+0x14]
 80866a4:  sub edx, esi
 80866a6:  mov ecx, DWORD PTR [ebp+0xc]
 80866a9:  mov DWORD PTR [ebp-0x34], 0x7
 80866b0:  mov eax, DWORD PTR [ecx+0x14]
 80866b3:  and DWORD PTR [eax], 0xf8
 80866b6:  or DWORD PTR [eax], edx
 80866b8:  mov eax, DWORD PTR [ebp-0x34]
 80866bb:  add esp, 0x54
 80866be:  pop ebx
 80866bf:  pop esi
 80866c0:  pop edi
 80866c1:  pop ebp
 80866c2:  ret
 80866c3:  nop
 80866c4:  lea esi, [esi]
 80866c8:  mov ebx, ecx
 80866ca:  mov DWORD PTR [ebp-0x1c], esi
 80866cd:  mov DWORD PTR [ebp-0x34], 0x5
 80866d4:  mov BYTE PTR [ebp-0x21], 0x0
 80866d8:  jmp 8086540
 80866dd:  mov eax, DWORD PTR [ebp+0x18]
 80866e0:  test eax, eax
 80866e2:  jne 8086a51
 80866e8:  mov eax, DWORD PTR [ebp+0x10]
 80866eb:  xor ebx, ebx
 80866ed:  mov ecx, DWORD PTR [eax]
 80866ef:  movzx eax, BYTE PTR [edi+ebx+0x4]
 80866f4:  mov BYTE PTR [ebp+ebx-0xe], al
 80866f8:  mov eax, DWORD PTR [edi]
 80866fa:  add ebx, 0x1
 80866fd:  and eax, 0x7
 8086700:  cmp ebx, eax
 8086702:  jb 80866ef
 8086704:  mov eax, ecx
 8086706:  sub eax, ebx
 8086708:  add eax, 0x2
 808670b:  cmp DWORD PTR [ebp+0x14], eax
 808670e:  jae 8086847
 8086714:  mov eax, DWORD PTR [ebp+0x14]
 8086717:  mov edx, DWORD PTR [ebp+0x10]
 808671a:  cmp eax, ecx
 808671c:  mov DWORD PTR [edx], eax
 808671e:  jbe 8086734
 8086720:  lea edx, [edi+ebx+0x4]
 8086724:  movzx eax, BYTE PTR [ecx]
 8086727:  add ecx, 0x1
 808672a:  mov BYTE PTR [edx], al
 808672c:  add edx, 0x1
 808672f:  cmp DWORD PTR [ebp+0x14], ecx
 8086732:  ja 8086724
 8086734:  mov DWORD PTR [ebp-0x34], 0x7
 808673b:  mov eax, DWORD PTR [ebp-0x34]
 808673e:  add esp, 0x54
 8086741:  pop ebx
 8086742:  pop esi
 8086743:  pop edi
 8086744:  pop ebp
 8086745:  ret
 8086746:  mov esi, DWORD PTR [ebp-0x30]
 8086749:  mov ebx, edi
 808674b:  mov DWORD PTR [ebp-0x34], 0x5
 8086752:  mov BYTE PTR [ebp-0x21], 0x0
 8086756:  mov DWORD PTR [ebp-0x1c], esi
 8086759:  jmp 8086540
 808675e:  mov esi, DWORD PTR [ebp-0x30]
 8086761:  mov ebx, edi
 8086763:  mov DWORD PTR [ebp-0x34], 0x7
 808676a:  mov BYTE PTR [ebp-0x21], 0x1
 808676e:  mov DWORD PTR [ebp-0x1c], esi
 8086771:  jmp 8086540
 8086776:  mov eax, DWORD PTR [ebp-0x1c]
 8086779:  mov edx, DWORD PTR [ebp+0x1c]
 808677c:  mov DWORD PTR [ecx], eax
 808677e:  mov eax, DWORD PTR [ebp-0x14]
 8086781:  add DWORD PTR [edx], eax
 8086783:  jmp 808664e
 8086788:  mov ebx, edi
 808678a:  mov esi, DWORD PTR [ebp-0x30]
 808678d:  jmp 80867bc
 808678f:  movzx eax, dx
 8086792:  mov DWORD PTR [esi], eax
 8086794:  add esi, 0x4
 8086797:  cmp DWORD PTR [ebp+0x14], ecx
 808679a:  je 80864fe
 80867a0:  lea edx, [ecx+0x2]
 80867a3:  cmp DWORD PTR [ebp+0x14], edx
 80867a6:  jb 8086530
 80867ac:  lea eax, [esi+0x4]
 80867af:  cmp DWORD PTR [ebp-0x2c], eax
 80867b2:  jb 80866c8
 80867b8:  mov ebx, ecx
 80867ba:  mov ecx, edx
 80867bc:  movzx edx, WORD PTR [ebx]
 80867bf:  ror dx, 0x8
 80867c3:  lea eax, [edx+0x2800]
 80867c9:  cmp ax, 0x7ff
 80867cd:  ja 808678f
 80867cf:  mov DWORD PTR [ebp-0x1c], esi
 80867d2:  mov DWORD PTR [ebp-0x34], 0x6
 80867d9:  mov BYTE PTR [ebp-0x21], 0x0
 80867dd:  jmp 8086540
 80867e2:  mov esi, DWORD PTR [ebp-0x28]
 80867e5:  test esi, esi
 80867e7:  je 8086a04
 80867ed:  mov ebx, edi
 80867ef:  mov esi, DWORD PTR [ebp-0x30]
 80867f2:  jmp 8086821
 80867f4:  movzx eax, dx
 80867f7:  mov DWORD PTR [esi], eax
 80867f9:  add esi, 0x4
 80867fc:  cmp DWORD PTR [ebp+0x14], ecx
 80867ff:  je 80864fe
 8086805:  lea edx, [ecx+0x2]
 8086808:  cmp DWORD PTR [ebp+0x14], edx
 808680b:  jb 8086530
 8086811:  lea eax, [esi+0x4]
 8086814:  cmp DWORD PTR [ebp-0x2c], eax
 8086817:  jb 80866c8
 808681d:  mov ebx, ecx
 808681f:  mov ecx, edx
 8086821:  movzx edx, WORD PTR [ebx]
 8086824:  ror dx, 0x8
 8086828:  lea eax, [edx+0x2800]
 808682e:  cmp ax, 0x7ff
 8086832:  ja 80867f4
 8086834:  mov DWORD PTR [ebp-0x1c], esi
 8086837:  mov DWORD PTR [ebp-0x34], 0x6
 808683e:  mov BYTE PTR [ebp-0x21], 0x0
 8086842:  jmp 8086540
 8086847:  mov eax, DWORD PTR [ebp-0x30]
 808684a:  mov DWORD PTR [ebp-0x34], 0x5
 8086851:  add eax, 0x4
 8086854:  cmp DWORD PTR [ebp-0x2c], eax
 8086857:  mov DWORD PTR [ebp-0x20], eax
 808685a:  jb 8086522
 8086860:  lea esi, [ebp-0xe]
 8086863:  add esi, ebx
 8086865:  movzx eax, BYTE PTR [ecx]
 8086868:  add ebx, 0x1
 808686b:  add ecx, 0x1
 808686e:  mov BYTE PTR [esi], al
 8086870:  add esi, 0x1
 8086873:  cmp ebx, 0x1
 8086876:  jbe 80868bf
 8086878:  movzx ecx, WORD PTR [ebp-0xe]
 808687c:  ror cx, 0x8
 8086880:  lea eax, [ecx+0x2800]
 8086886:  cmp ax, 0x7ff
 808688a:  ja 80868c6
 808688c:  mov eax, DWORD PTR [ebp-0x28]
 808688f:  test eax, eax
 8086891:  je 8086898
 8086893:  and edx, 0x2
 8086896:  jne 80868f8
 8086898:  mov DWORD PTR [ebp-0x34], 0x6
 808689f:  nop
 80868a0:  jmp 8086522
 80868a5:  lea esi, [esi]
 80868a8:  mov edx, esi
 80868aa:  sub edx, eax
 80868ac:  mov eax, edx
 80868ae:  shr eax, 0x1f
 80868b1:  add eax, edx
 80868b3:  mov edx, DWORD PTR [ebp+0x10]
 80868b6:  sar eax, 1
 80868b8:  sub DWORD PTR [edx], eax
 80868ba:  jmp 8086607
 80868bf:  cmp DWORD PTR [ebp+0x14], ecx
 80868c2:  ja 8086865
 80868c4:  jmp 8086878
 80868c6:  movzx eax, cx
 80868c9:  mov ecx, DWORD PTR [ebp-0x30]
 80868cc:  mov DWORD PTR [ecx], eax
 80868ce:  mov eax, DWORD PTR [ebp-0x20]
 80868d1:  mov DWORD PTR [ebp-0x30], eax
 80868d4:  mov edx, DWORD PTR [edi]
 80868d6:  and edx, 0x7
 80868d9:  cmp edx, 0x1
 80868dc:  jg 8086900
 80868de:  mov eax, 0x2
 80868e3:  mov ecx, DWORD PTR [ebp+0xc]
 80868e6:  sub eax, edx
 80868e8:  mov edx, DWORD PTR [ebp+0x10]
 80868eb:  and DWORD PTR [edi], 0xf8
 80868ee:  add DWORD PTR [edx], eax
 80868f0:  mov edx, DWORD PTR [ecx+0x8]
 80868f3:  jmp 808646f
 80868f8:  mov edx, DWORD PTR [ebp-0x28]
 80868fb:  add DWORD PTR [edx], 0x1
 80868fe:  jmp 80868d4
 8086900:  mov DWORD PTR [esp+0xc], 0x80b5ec0
 8086908:  mov DWORD PTR [esp+0x8], 0x1bc
 8086910:  mov DWORD PTR [esp+0x4], 0x80b5c4f
 8086918:  mov DWORD PTR [esp], 0x80b5d80
 808691f:  call 8051490
 8086924:  cmp ecx, 0x7
 8086927:  sete BYTE PTR [ebp-0x21]
 808692b:  mov DWORD PTR [ebp-0x34], ecx
 808692e:  jmp 808664e
 8086933:  mov eax, DWORD PTR [ebp+0x18]
 8086936:  mov eax, DWORD PTR [eax]
 8086938:  mov DWORD PTR [ebp-0x30], eax
 808693b:  jmp 8086438
 8086940:  mov eax, DWORD PTR [ebp+0x18]
 8086943:  test eax, eax
 8086945:  jne 80869e0
 808694b:  mov edx, DWORD PTR [ebp+0xc]
 808694e:  mov eax, DWORD PTR [edx+0x14]
 8086951:  mov DWORD PTR [eax], 0x0
 8086957:  mov DWORD PTR [eax+0x4], 0x0
 808695e:  test BYTE PTR [edx+0x8], 0x1
 8086962:  mov DWORD PTR [ebp-0x34], 0x0
 8086969:  jne 8086522
 808696f:  mov ecx, DWORD PTR [ebp-0x38]
 8086972:  mov DWORD PTR [esp], ecx
 8086975:  call 807f350
 808697a:  mov eax, DWORD PTR [ebp+0x24]
 808697d:  mov DWORD PTR [esp+0x18], ebx
 8086981:  mov DWORD PTR [esp+0x1c], eax
 8086985:  mov edx, DWORD PTR [ebp+0x1c]
 8086988:  mov DWORD PTR [esp+0x10], 0x0
 8086990:  mov DWORD PTR [esp+0xc], 0x0
 8086998:  mov DWORD PTR [esp+0x8], 0x0
 80869a0:  mov DWORD PTR [esp+0x14], edx
 80869a4:  mov ecx, DWORD PTR [ebp-0x3c]
 80869a7:  mov DWORD PTR [esp+0x4], ecx
 80869ab:  mov eax, DWORD PTR [ebp-0x40]
 80869ae:  mov DWORD PTR [esp], eax
 80869b1:  call DWORD PTR [ebp-0x38]
 80869b4:  mov DWORD PTR [ebp-0x34], eax
 80869b7:  jmp 8086522
 80869bc:  mov DWORD PTR [esp+0xc], 0x80b5e80
 80869c4:  mov DWORD PTR [esp+0x8], 0x312
 80869cc:  mov DWORD PTR [esp+0x4], 0x80b5c20
 80869d4:  mov DWORD PTR [esp], 0x80b5c87
 80869db:  call 8051490
 80869e0:  mov DWORD PTR [esp+0xc], 0x80b5e80
 80869e8:  mov DWORD PTR [esp+0x8], 0x1a0
 80869f0:  mov DWORD PTR [esp+0x4], 0x80b5c20
 80869f8:  mov DWORD PTR [esp], 0x80b5c34
 80869ff:  call 8051490
 8086a04:  mov ebx, edi
 8086a06:  mov esi, DWORD PTR [ebp-0x30]
 8086a09:  jmp 8086a38
 8086a0b:  movzx eax, dx
 8086a0e:  mov DWORD PTR [esi], eax
 8086a10:  add esi, 0x4
 8086a13:  cmp DWORD PTR [ebp+0x14], ecx
 8086a16:  je 80864fe
 8086a1c:  lea edx, [ecx+0x2]
 8086a1f:  cmp DWORD PTR [ebp+0x14], edx
 8086a22:  jb 8086530
 8086a28:  lea eax, [esi+0x4]
 8086a2b:  cmp DWORD PTR [ebp-0x2c], eax
 8086a2e:  jb 80866c8
 8086a34:  mov ebx, ecx
 8086a36:  mov ecx, edx
 8086a38:  movzx edx, WORD PTR [ebx]
 8086a3b:  ror dx, 0x8
 8086a3f:  lea eax, [edx+0x2800]
 8086a45:  cmp ax, 0x7ff
 8086a49:  jbe 80867cf
 8086a4f:  jmp 8086a0b
 8086a51:  mov DWORD PTR [esp+0xc], 0x80b5e80
 8086a59:  mov DWORD PTR [esp+0x8], 0x22f
 8086a61:  mov DWORD PTR [esp+0x4], 0x80b5c20
 8086a69:  mov DWORD PTR [esp], 0x80b5c34
 8086a70:  call 8051490
 8086a75:  lea esi, [esi]
 8086a79:  lea edi, [edi]

08086a80 <__gconv_transform_ucs4_internal>:
 8086a80:  push ebp
 8086a81:  mov ebp, esp
 8086a83:  push edi
 8086a84:  push esi
 8086a85:  push ebx
 8086a86:  sub esp, 0x4c
 8086a89:  mov eax, DWORD PTR [ebp+0x8]
 8086a8c:  mov ecx, DWORD PTR [ebp+0xc]
 8086a8f:  mov ebx, DWORD PTR [ebp+0x20]
 8086a92:  mov DWORD PTR [ebp-0x30], 0x0
 8086a99:  lea edx, [eax+0x3c]
 8086a9c:  mov DWORD PTR [ebp-0x38], edx
 8086a9f:  mov edx, DWORD PTR [ebp+0xc]
 8086aa2:  add ecx, 0x24
 8086aa5:  mov DWORD PTR [ebp-0x34], ecx
 8086aa8:  mov ecx, DWORD PTR [edx+0x8]
 8086aab:  test cl, 0x1
 8086aae:  jne 8086acd
 8086ab0:  mov edx, DWORD PTR [ebp-0x38]
 8086ab3:  mov eax, DWORD PTR [eax+0x3c]
 8086ab6:  mov edx, DWORD PTR [edx+0x14]
 8086ab9:  test eax, eax
 8086abb:  mov DWORD PTR [ebp-0x30], edx
 8086abe:  je 8086acd
 8086ac0:  ror edx, 0x9
 8086ac3:  xor edx, DWORD PTR gs:0x18
 8086aca:  mov DWORD PTR [ebp-0x30], edx
 8086acd:  test ebx, ebx
 8086acf:  jne 8086ee6
 8086ad5:  mov edi, DWORD PTR [ebp+0x18]
 8086ad8:  test edi, edi
 8086ada:  jne 8086f5e
 8086ae0:  mov eax, DWORD PTR [ebp+0xc]
 8086ae3:  mov eax, DWORD PTR [eax]
 8086ae5:  mov DWORD PTR [ebp-0x28], eax
 8086ae8:  mov eax, DWORD PTR [ebp+0xc]
 8086aeb:  lea edx, [ebp-0x10]
 8086aee:  cmp DWORD PTR [ebp+0x1c], 0x1
 8086af2:  mov esi, DWORD PTR [ebp+0x24]
 8086af5:  mov DWORD PTR [ebp-0x10], 0x0
 8086afc:  mov eax, DWORD PTR [eax+0x4]
 8086aff:  mov DWORD PTR [ebp-0x24], eax
 8086b02:  sbb eax, eax
 8086b04:  not eax
 8086b06:  and edx, eax
 8086b08:  test esi, esi
 8086b0a:  mov DWORD PTR [ebp-0x20], edx
 8086b0d:  je 8086b28
 8086b0f:  mov eax, DWORD PTR [ebp+0xc]
 8086b12:  mov eax, DWORD PTR [eax+0x14]
 8086b15:  mov edi, DWORD PTR [eax]
 8086b17:  mov DWORD PTR [ebp-0x18], eax
 8086b1a:  mov eax, edi
 8086b1c:  and eax, 0x7
 8086b1f:  jne 8086d66
 8086b25:  lea esi, [esi]
 8086b28:  mov edx, DWORD PTR [ebp+0x10]
 8086b2b:  mov eax, DWORD PTR [ebp+0x14]
 8086b2e:  mov edi, DWORD PTR [edx]
 8086b30:  mov edx, DWORD PTR [ebp-0x24]
 8086b33:  sub edx, DWORD PTR [ebp-0x28]
 8086b36:  sub eax, edi
 8086b38:  cmp edx, eax
 8086b3a:  jle 8086b3e
 8086b3c:  mov edx, eax
 8086b3e:  mov eax, edx
 8086b40:  sar eax, 0x1f
 8086b43:  shr eax, 0x1e
 8086b46:  add eax, edx
 8086b48:  sar eax, 0x2
 8086b4b:  test eax, eax
 8086b4d:  je 8086d5a
 8086b53:  and ecx, 0x2
 8086b56:  je 8086dfb
 8086b5c:  mov edx, DWORD PTR [ebp-0x20]
 8086b5f:  test edx, edx
 8086b61:  je 8086dbf
 8086b67:  mov esi, DWORD PTR [ebp-0x28]
 8086b6a:  xor ecx, ecx
 8086b6c:  jmp 8086b7c
 8086b6e:  xchg ax, ax
 8086b70:  add ecx, 0x1
 8086b73:  mov DWORD PTR [esi], edx
 8086b75:  add esi, 0x4
 8086b78:  cmp eax, ecx
 8086b7a:  jbe 8086b92
 8086b7c:  mov edx, DWORD PTR [edi+ecx*4]
 8086b7f:  bswap edx
 8086b81:  test edx, edx
 8086b83:  jns 8086b70
 8086b85:  mov edx, DWORD PTR [ebp-0x20]
 8086b88:  add ecx, 0x1
 8086b8b:  add DWORD PTR [edx], 0x1
 8086b8e:  cmp eax, ecx
 8086b90:  ja 8086b7c
 8086b92:  lea ecx, [edi+eax*4]
 8086b95:  mov edx, esi
 8086b97:  mov eax, DWORD PTR [ebp+0x10]
 8086b9a:  mov DWORD PTR [eax], ecx
 8086b9c:  cmp DWORD PTR [ebp+0x14], ecx
 8086b9f:  je 8086d48
 8086ba5:  lea eax, [esi+0x4]
 8086ba8:  cmp DWORD PTR [ebp-0x24], eax
 8086bab:  jb 8086d20
 8086bb1:  mov esi, edx
 8086bb3:  mov DWORD PTR [ebp-0x2c], 0x7
 8086bba:  mov BYTE PTR [ebp-0x19], 0x1
 8086bbe:  mov eax, DWORD PTR [ebp+0x18]
 8086bc1:  test eax, eax
 8086bc3:  jne 8086d38
 8086bc9:  mov ecx, DWORD PTR [ebp+0xc]
 8086bcc:  mov ebx, DWORD PTR [ecx+0x20]
 8086bcf:  test ebx, ebx
 8086bd1:  je 8086c0f
 8086bd3:  nop
 8086bd4:  lea esi, [esi]
 8086bd8:  mov eax, DWORD PTR [ebx+0x4]
 8086bdb:  test eax, eax
 8086bdd:  je 8086c08
 8086bdf:  mov DWORD PTR [esp], eax
 8086be2:  call 807f350
 8086be7:  mov DWORD PTR [esp+0x10], esi
 8086beb:  mov eax, DWORD PTR [ebp-0x28]
 8086bee:  mov DWORD PTR [esp+0xc], eax
 8086bf2:  mov edx, DWORD PTR [ebp+0x10]
 8086bf5:  mov eax, DWORD PTR [edx]
 8086bf7:  mov DWORD PTR [esp+0x4], edi
 8086bfb:  mov DWORD PTR [esp+0x8], eax
 8086bff:  mov eax, DWORD PTR [ebx+0xc]
 8086c02:  mov DWORD PTR [esp], eax
 8086c05:  call DWORD PTR [ebx+0x4]
 8086c08:  mov ebx, DWORD PTR [ebx+0x10]
 8086c0b:  test ebx, ebx
 8086c0d:  jne 8086bd8
 8086c0f:  mov ecx, DWORD PTR [ebp+0xc]
 8086c12:  add DWORD PTR [ecx+0xc], 0x1
 8086c16:  test BYTE PTR [ecx+0x8], 0x1
 8086c1a:  jne 8086e45
 8086c20:  cmp DWORD PTR [ebp-0x28], esi
 8086c23:  jae 8086cae
 8086c29:  mov ecx, DWORD PTR [ebp+0xc]
 8086c2c:  mov eax, DWORD PTR [ecx]
 8086c2e:  mov DWORD PTR [ebp-0x14], eax
 8086c31:  mov eax, DWORD PTR [ebp-0x30]
 8086c34:  mov DWORD PTR [esp], eax
 8086c37:  call 807f350
 8086c3c:  mov edx, DWORD PTR [ebp+0x24]
 8086c3f:  lea eax, [ebp-0x14]
 8086c42:  mov DWORD PTR [esp+0x18], 0x0
 8086c4a:  mov DWORD PTR [esp+0x1c], edx
 8086c4e:  mov ecx, DWORD PTR [ebp+0x1c]
 8086c51:  mov DWORD PTR [esp+0x10], 0x0
 8086c59:  mov DWORD PTR [esp+0xc], esi
 8086c5d:  mov DWORD PTR [esp+0x8], eax
 8086c61:  mov DWORD PTR [esp+0x14], ecx
 8086c65:  mov edx, DWORD PTR [ebp-0x34]
 8086c68:  mov DWORD PTR [esp+0x4], edx
 8086c6c:  mov ecx, DWORD PTR [ebp-0x38]
 8086c6f:  mov DWORD PTR [esp], ecx
 8086c72:  call DWORD PTR [ebp-0x30]
 8086c75:  cmp eax, 0x4
 8086c78:  je 8086ca8
 8086c7a:  mov edx, DWORD PTR [ebp-0x14]
 8086c7d:  cmp edx, esi
 8086c7f:  jne 8086eda
 8086c85:  test eax, eax
 8086c87:  nop
 8086c88:  jne 8086ffe
 8086c8e:  mov eax, DWORD PTR [ebp+0xc]
 8086c91:  mov edx, DWORD PTR [ebp+0xc]
 8086c94:  mov eax, DWORD PTR [eax]
 8086c96:  mov ecx, DWORD PTR [edx+0x8]
 8086c99:  mov DWORD PTR [ebp-0x28], eax
 8086c9c:  jmp 8086b28
 8086ca1:  lea esi, [esi]
 8086ca8:  cmp DWORD PTR [ebp-0x2c], 0x5
 8086cac:  je 8086c8e
 8086cae:  mov edi, DWORD PTR [ebp+0x24]
 8086cb1:  test edi, edi
 8086cb3:  je 8086d14
 8086cb5:  cmp BYTE PTR [ebp-0x19], 0x0
 8086cb9:  lea esi, [esi]
 8086cc0:  je 8086d14
 8086cc2:  mov ecx, DWORD PTR [ebp+0x10]
 8086cc5:  mov eax, DWORD PTR [ebp+0x14]
 8086cc8:  mov esi, DWORD PTR [ecx]
 8086cca:  sub eax, esi
 8086ccc:  cmp eax, 0x3
 8086ccf:  jg 8086f8f
 8086cd5:  xor ebx, ebx
 8086cd7:  xor edx, edx
 8086cd9:  cmp DWORD PTR [ebp+0x14], esi
 8086cdc:  mov ecx, esi
 8086cde:  jbe 8086d02
 8086ce0:  mov eax, DWORD PTR [ebp+0xc]
 8086ce3:  mov edx, DWORD PTR [eax+0x14]
 8086ce6:  movzx eax, BYTE PTR [ecx]
 8086ce9:  add ecx, 0x1
 8086cec:  mov BYTE PTR [edx+ebx+0x4], al
 8086cf0:  mov edx, DWORD PTR [ebp+0x10]
 8086cf3:  add ebx, 0x1
 8086cf6:  mov DWORD PTR [edx], ecx
 8086cf8:  cmp DWORD PTR [ebp+0x14], ecx
 8086cfb:  ja 8086ce0
 8086cfd:  mov edx, DWORD PTR [ebp+0x14]
 8086d00:  sub edx, esi
 8086d02:  mov ecx, DWORD PTR [ebp+0xc]
 8086d05:  mov DWORD PTR [ebp-0x2c], 0x7
 8086d0c:  mov eax, DWORD PTR [ecx+0x14]
 8086d0f:  and DWORD PTR [eax], 0xf8
 8086d12:  or DWORD PTR [eax], edx
 8086d14:  mov eax, DWORD PTR [ebp-0x2c]
 8086d17:  add esp, 0x4c
 8086d1a:  pop ebx
 8086d1b:  pop esi
 8086d1c:  pop edi
 8086d1d:  pop ebp
 8086d1e:  ret
 8086d1f:  nop
 8086d20:  mov eax, DWORD PTR [ebp+0x18]
 8086d23:  mov esi, edx
 8086d25:  mov DWORD PTR [ebp-0x2c], 0x5
 8086d2c:  mov BYTE PTR [ebp-0x19], 0x0
 8086d30:  test eax, eax
 8086d32:  je 8086bc9
 8086d38:  mov edx, DWORD PTR [ebp+0x18]
 8086d3b:  mov eax, DWORD PTR [ebp-0x2c]
 8086d3e:  mov DWORD PTR [edx], esi
 8086d40:  add esp, 0x4c
 8086d43:  pop ebx
 8086d44:  pop esi
 8086d45:  pop edi
 8086d46:  pop ebp
 8086d47:  ret
 8086d48:  mov esi, edx
 8086d4a:  mov DWORD PTR [ebp-0x2c], 0x4
 8086d51:  mov BYTE PTR [ebp-0x19], 0x0
 8086d55:  jmp 8086bbe
 8086d5a:  mov esi, DWORD PTR [ebp-0x28]
 8086d5d:  mov ecx, edi
 8086d5f:  mov edx, esi
 8086d61:  jmp 8086b97
 8086d66:  mov ebx, DWORD PTR [ebp+0x18]
 8086d69:  test ebx, ebx
 8086d6b:  jne 8086fb3
 8086d71:  mov esi, eax
 8086d73:  mov eax, DWORD PTR [ebp+0x10]
 8086d76:  mov edx, DWORD PTR [eax]
 8086d78:  cmp DWORD PTR [ebp+0x14], edx
 8086d7b:  jbe 8086e73
 8086d81:  cmp esi, 0x3
 8086d84:  jbe 8086e54
 8086d8a:  mov eax, DWORD PTR [ebp-0x18]
 8086d8d:  cmp BYTE PTR [eax+0x4], 0x80
 8086d91:  jbe 8086ea2
 8086d97:  and ecx, 0x2
 8086d9a:  lea esi, [esi]
 8086da0:  jne 8086ec9
 8086da6:  and edi, 0x7
 8086da9:  sub edi, esi
 8086dab:  lea eax, [edx+edi]
 8086dae:  mov edx, DWORD PTR [ebp+0x10]
 8086db1:  mov DWORD PTR [ebp-0x2c], 0x6
 8086db8:  mov DWORD PTR [edx], eax
 8086dba:  jmp 8086d14
 8086dbf:  mov esi, DWORD PTR [ebp-0x28]
 8086dc2:  mov ecx, edi
 8086dc4:  xor ebx, ebx
 8086dc6:  xchg ax, ax
 8086dc8:  mov edx, DWORD PTR [ecx]
 8086dca:  bswap edx
 8086dcc:  test edx, edx
 8086dce:  js 8086de8
 8086dd0:  add ebx, 0x1
 8086dd3:  add ecx, 0x4
 8086dd6:  mov DWORD PTR [esi], edx
 8086dd8:  add esi, 0x4
 8086ddb:  cmp eax, ebx
 8086ddd:  ja 8086dc8
 8086ddf:  jmp 8086b95
 8086de4:  lea esi, [esi]
 8086de8:  mov esi, DWORD PTR [ebp-0x28]
 8086deb:  mov DWORD PTR [ebp-0x2c], 0x6
 8086df2:  mov BYTE PTR [ebp-0x19], 0x0
 8086df6:  jmp 8086bbe
 8086dfb:  mov ecx, DWORD PTR [ebp-0x20]
 8086dfe:  test ecx, ecx
 8086e00:  je 8086fd7
 8086e06:  mov esi, DWORD PTR [ebp-0x28]
 8086e09:  mov ecx, edi
 8086e0b:  xor ebx, ebx
 8086e0d:  lea esi, [esi]
 8086e10:  mov edx, DWORD PTR [ecx]
 8086e12:  bswap edx
 8086e14:  test edx, edx
 8086e16:  js 8086e30
 8086e18:  add ebx, 0x1
 8086e1b:  add ecx, 0x4
 8086e1e:  mov DWORD PTR [esi], edx
 8086e20:  add esi, 0x4
 8086e23:  cmp eax, ebx
 8086e25:  ja 8086e10
 8086e27:  jmp 8086b95
 8086e2c:  lea esi, [esi]
 8086e30:  mov eax, DWORD PTR [ebp+0x10]
 8086e33:  mov DWORD PTR [ebp-0x2c], 0x6
 8086e3a:  mov BYTE PTR [ebp-0x19], 0x0
 8086e3e:  mov DWORD PTR [eax], ecx
 8086e40:  jmp 8086bbe
 8086e45:  mov edx, DWORD PTR [ebp+0x1c]
 8086e48:  mov eax, DWORD PTR [ebp-0x10]
 8086e4b:  mov DWORD PTR [ecx], esi
 8086e4d:  add DWORD PTR [edx], eax
 8086e4f:  jmp 8086cae
 8086e54:  mov eax, DWORD PTR [ebp-0x18]
 8086e57:  lea ebx, [eax+esi+0x4]
 8086e5b:  movzx eax, BYTE PTR [edx]
 8086e5e:  add edx, 0x1
 8086e61:  add esi, 0x1
 8086e64:  mov BYTE PTR [ebx], al
 8086e66:  mov eax, DWORD PTR [ebp+0x10]
 8086e69:  add ebx, 0x1
 8086e6c:  mov DWORD PTR [eax], edx
 8086e6e:  cmp DWORD PTR [ebp+0x14], edx
 8086e71:  ja 8086e98
 8086e73:  cmp esi, 0x3
 8086e76:  ja 8086d8a
 8086e7c:  mov edx, DWORD PTR [ebp-0x18]
 8086e7f:  and edi, 0xf8
 8086e82:  or edi, esi
 8086e84:  mov DWORD PTR [ebp-0x2c], 0x7
 8086e8b:  mov eax, DWORD PTR [ebp-0x2c]
 8086e8e:  mov DWORD PTR [edx], edi
 8086e90:  add esp, 0x4c
 8086e93:  pop ebx
 8086e94:  pop esi
 8086e95:  pop edi
 8086e96:  pop ebp
 8086e97:  ret
 8086e98:  cmp esi, 0x3
 8086e9b:  jbe 8086e5b
 8086e9d:  jmp 8086d8a
 8086ea2:  mov ecx, DWORD PTR [ebp-0x18]
 8086ea5:  mov edx, DWORD PTR [ebp-0x28]
 8086ea8:  movzx eax, BYTE PTR [ecx+0x7]
 8086eac:  mov BYTE PTR [edx], al
 8086eae:  movzx eax, BYTE PTR [ecx+0x6]
 8086eb2:  mov BYTE PTR [edx+0x1], al
 8086eb5:  movzx eax, BYTE PTR [ecx+0x5]
 8086eb9:  mov BYTE PTR [edx+0x2], al
 8086ebc:  movzx eax, BYTE PTR [ecx+0x4]
 8086ec0:  mov BYTE PTR [edx+0x3], al
 8086ec3:  add edx, 0x4
 8086ec6:  mov DWORD PTR [ebp-0x28], edx
 8086ec9:  mov ecx, DWORD PTR [ebp-0x18]
 8086ecc:  mov eax, DWORD PTR [ebp+0xc]
 8086ecf:  and DWORD PTR [ecx], 0xf8
 8086ed2:  mov ecx, DWORD PTR [eax+0x8]
 8086ed5:  jmp 8086b28
 8086eda:  mov ecx, DWORD PTR [ebp+0x10]
 8086edd:  sub edx, esi
 8086edf:  add DWORD PTR [ecx], edx
 8086ee1:  jmp 8086c85
 8086ee6:  mov eax, DWORD PTR [ebp+0x18]
 8086ee9:  test eax, eax
 8086eeb:  jne 8086f6b
 8086eed:  mov ecx, DWORD PTR [ebp+0xc]
 8086ef0:  mov eax, DWORD PTR [ecx+0x14]
 8086ef3:  mov DWORD PTR [eax], 0x0
 8086ef9:  mov DWORD PTR [eax+0x4], 0x0
 8086f00:  test BYTE PTR [ecx+0x8], 0x1
 8086f04:  mov DWORD PTR [ebp-0x2c], 0x0
 8086f0b:  jne 8086d14
 8086f11:  mov eax, DWORD PTR [ebp-0x30]
 8086f14:  mov DWORD PTR [esp], eax
 8086f17:  call 807f350
 8086f1c:  mov edx, DWORD PTR [ebp+0x24]
 8086f1f:  mov DWORD PTR [esp+0x18], ebx
 8086f23:  mov DWORD PTR [esp+0x1c], edx
 8086f27:  mov ecx, DWORD PTR [ebp+0x1c]
 8086f2a:  mov DWORD PTR [esp+0x10], 0x0
 8086f32:  mov DWORD PTR [esp+0xc], 0x0
 8086f3a:  mov DWORD PTR [esp+0x8], 0x0
 8086f42:  mov DWORD PTR [esp+0x14], ecx
 8086f46:  mov eax, DWORD PTR [ebp-0x34]
 8086f49:  mov DWORD PTR [esp+0x4], eax
 8086f4d:  mov edx, DWORD PTR [ebp-0x38]
 8086f50:  mov DWORD PTR [esp], edx
 8086f53:  call DWORD PTR [ebp-0x30]
 8086f56:  mov DWORD PTR [ebp-0x2c], eax
 8086f59:  jmp 8086d14
 8086f5e:  mov edx, DWORD PTR [ebp+0x18]
 8086f61:  mov edx, DWORD PTR [edx]
 8086f63:  mov DWORD PTR [ebp-0x28], edx
 8086f66:  jmp 8086ae8
 8086f6b:  mov DWORD PTR [esp+0xc], 0x80b6080
 8086f73:  mov DWORD PTR [esp+0x8], 0x1a0
 8086f7b:  mov DWORD PTR [esp+0x4], 0x80b5c20
 8086f83:  mov DWORD PTR [esp], 0x80b5c34
 8086f8a:  call 8051490
 8086f8f:  mov DWORD PTR [esp+0xc], 0x80b6080
 8086f97:  mov DWORD PTR [esp+0x8], 0x312
 8086f9f:  mov DWORD PTR [esp+0x4], 0x80b5c20
 8086fa7:  mov DWORD PTR [esp], 0x80b5c87
 8086fae:  call 8051490
 8086fb3:  mov DWORD PTR [esp+0xc], 0x80b6080
 8086fbb:  mov DWORD PTR [esp+0x8], 0x22f
 8086fc3:  mov DWORD PTR [esp+0x4], 0x80b5c20
 8086fcb:  mov DWORD PTR [esp], 0x80b5c34
 8086fd2:  call 8051490
 8086fd7:  mov esi, DWORD PTR [ebp-0x28]
 8086fda:  mov ecx, edi
 8086fdc:  xor ebx, ebx
 8086fde:  mov edx, DWORD PTR [ecx]
 8086fe0:  bswap edx
 8086fe2:  test edx, edx
 8086fe4:  js 8086de8
 8086fea:  add ebx, 0x1
 8086fed:  add ecx, 0x4
 8086ff0:  mov DWORD PTR [esi], edx
 8086ff2:  add esi, 0x4
 8086ff5:  cmp eax, ebx
 8086ff7:  ja 8086fde
 8086ff9:  jmp 8086b95
 8086ffe:  cmp eax, 0x7
 8087001:  sete BYTE PTR [ebp-0x19]
 8087005:  mov DWORD PTR [ebp-0x2c], eax
 8087008:  jmp 8086cae
 808700d:  lea esi, [esi]

08087010 <__gconv_transform_internal_ucs4>:
 8087010:  push ebp
 8087011:  mov ebp, esp
 8087013:  push edi
 8087014:  push esi
 8087015:  push ebx
 8087016:  sub esp, 0x4c
 8087019:  mov eax, DWORD PTR [ebp+0x8]
 808701c:  mov ecx, DWORD PTR [ebp+0xc]
 808701f:  mov ebx, DWORD PTR [ebp+0x20]
 8087022:  mov DWORD PTR [ebp-0x30], 0x0
 8087029:  lea edx, [eax+0x3c]
 808702c:  mov DWORD PTR [ebp-0x38], edx
 808702f:  mov edx, DWORD PTR [ebp+0xc]
 8087032:  add ecx, 0x24
 8087035:  mov DWORD PTR [ebp-0x34], ecx
 8087038:  test BYTE PTR [edx+0x8], 0x1
 808703c:  jne 808705b
 808703e:  mov ecx, DWORD PTR [ebp-0x38]
 8087041:  mov edi, DWORD PTR [eax+0x3c]
 8087044:  mov ecx, DWORD PTR [ecx+0x14]
 8087047:  test edi, edi
 8087049:  mov DWORD PTR [ebp-0x30], ecx
 808704c:  je 808705b
 808704e:  ror ecx, 0x9
 8087051:  xor ecx, DWORD PTR gs:0x18
 8087058:  mov DWORD PTR [ebp-0x30], ecx
 808705b:  test ebx, ebx
 808705d:  jne 8087349
 8087063:  mov ebx, DWORD PTR [ebp+0x18]
 8087066:  test ebx, ebx
 8087068:  jne 808733c
 808706e:  mov eax, DWORD PTR [ebp+0xc]
 8087071:  mov eax, DWORD PTR [eax]
 8087073:  mov DWORD PTR [ebp-0x28], eax
 8087076:  mov ecx, DWORD PTR [ebp+0xc]
 8087079:  mov ecx, DWORD PTR [ecx+0x4]
 808707c:  mov DWORD PTR [ebp-0x24], ecx
 808707f:  mov ecx, DWORD PTR [ebp+0x24]
 8087082:  test ecx, ecx
 8087084:  je 80870a0
 8087086:  mov ebx, DWORD PTR [ebp+0xc]
 8087089:  mov edi, DWORD PTR [ebx+0x14]
 808708c:  mov esi, DWORD PTR [edi]
 808708e:  mov eax, esi
 8087090:  and eax, 0x7
 8087093:  jne 8087277
 8087099:  lea esi, [esi]
 80870a0:  mov ecx, DWORD PTR [ebp+0x10]
 80870a3:  mov eax, DWORD PTR [ebp+0x14]
 80870a6:  mov edx, DWORD PTR [ebp-0x24]
 80870a9:  sub edx, DWORD PTR [ebp-0x28]
 80870ac:  mov esi, DWORD PTR [ecx]
 80870ae:  sub eax, esi
 80870b0:  cmp edx, eax
 80870b2:  jle 80870b6
 80870b4:  mov edx, eax
 80870b6:  mov eax, edx
 80870b8:  mov edi, DWORD PTR [ebp-0x28]
 80870bb:  sar eax, 0x1f
 80870be:  shr eax, 0x1e
 80870c1:  lea ecx, [eax+edx]
 80870c4:  xor edx, edx
 80870c6:  sar ecx, 0x2
 80870c9:  mov eax, esi
 80870cb:  test ecx, ecx
 80870cd:  je 80870f0
 80870cf:  nop
 80870d0:  mov ebx, DWORD PTR [ebp-0x28]
 80870d3:  mov eax, DWORD PTR [esi+edx*4]
 80870d6:  bswap eax
 80870d8:  mov DWORD PTR [ebx+edx*4], eax
 80870db:  add edx, 0x1
 80870de:  cmp ecx, edx
 80870e0:  ja 80870d0
 80870e2:  lea eax, [ecx*4]
 80870e9:  mov edi, ebx
 80870eb:  add edi, eax
 80870ed:  lea eax, [esi+eax]
 80870f0:  mov edx, DWORD PTR [ebp+0x10]
 80870f3:  mov DWORD PTR [ebp-0x2c], 0x4
 80870fa:  mov BYTE PTR [ebp-0x20], 0x0
 80870fe:  mov DWORD PTR [edx], eax
 8087100:  cmp DWORD PTR [ebp+0x14], eax
 8087103:  je 8087121
 8087105:  lea eax, [edi+0x4]
 8087108:  cmp DWORD PTR [ebp-0x24], eax
 808710b:  sbb ecx, ecx
 808710d:  and ecx, 0xfe
 8087110:  add ecx, 0x7
 8087113:  cmp DWORD PTR [ebp-0x24], eax
 8087116:  mov DWORD PTR [ebp-0x2c], ecx
 8087119:  sbb ebx, ebx
 808711b:  add ebx, 0x1
 808711e:  mov BYTE PTR [ebp-0x20], bl
 8087121:  mov eax, DWORD PTR [ebp+0x18]
 8087124:  test eax, eax
 8087126:  jne 80872c6
 808712c:  mov edx, DWORD PTR [ebp+0xc]
 808712f:  mov ebx, DWORD PTR [edx+0x20]
 8087132:  test ebx, ebx
 8087134:  je 808716f
 8087136:  xchg ax, ax
 8087138:  mov eax, DWORD PTR [ebx+0x4]
 808713b:  test eax, eax
 808713d:  je 8087168
 808713f:  mov DWORD PTR [esp], eax
 8087142:  call 807f350
 8087147:  mov DWORD PTR [esp+0x10], edi
 808714b:  mov ecx, DWORD PTR [ebp-0x28]
 808714e:  mov DWORD PTR [esp+0xc], ecx
 8087152:  mov edx, DWORD PTR [ebp+0x10]
 8087155:  mov eax, DWORD PTR [edx]
 8087157:  mov DWORD PTR [esp+0x4], esi
 808715b:  mov DWORD PTR [esp+0x8], eax
 808715f:  mov eax, DWORD PTR [ebx+0xc]
 8087162:  mov DWORD PTR [esp], eax
 8087165:  call DWORD PTR [ebx+0x4]
 8087168:  mov ebx, DWORD PTR [ebx+0x10]
 808716b:  test ebx, ebx
 808716d:  jne 8087138
 808716f:  mov ecx, DWORD PTR [ebp+0xc]
 8087172:  add DWORD PTR [ecx+0xc], 0x1
 8087176:  test BYTE PTR [ecx+0x8], 0x1
 808717a:  jne 80872bf
 8087180:  cmp DWORD PTR [ebp-0x28], edi
 8087183:  jae 8087206
 8087189:  mov ebx, DWORD PTR [ebp+0xc]
 808718c:  mov eax, DWORD PTR [ebx]
 808718e:  lea ebx, [ebp-0x10]
 8087191:  mov DWORD PTR [ebp-0x10], eax
 8087194:  mov eax, DWORD PTR [ebp-0x30]
 8087197:  mov DWORD PTR [esp], eax
 808719a:  call 807f350
 808719f:  mov edx, DWORD PTR [ebp+0x24]
 80871a2:  mov DWORD PTR [esp+0x18], 0x0
 80871aa:  mov DWORD PTR [esp+0x1c], edx
 80871ae:  mov ecx, DWORD PTR [ebp+0x1c]
 80871b1:  mov DWORD PTR [esp+0x10], 0x0
 80871b9:  mov DWORD PTR [esp+0xc], edi
 80871bd:  mov DWORD PTR [esp+0x8], ebx
 80871c1:  mov DWORD PTR [esp+0x14], ecx
 80871c5:  mov eax, DWORD PTR [ebp-0x34]
 80871c8:  mov DWORD PTR [esp+0x4], eax
 80871cc:  mov edx, DWORD PTR [ebp-0x38]
 80871cf:  mov DWORD PTR [esp], edx
 80871d2:  call DWORD PTR [ebp-0x30]
 80871d5:  cmp eax, 0x4
 80871d8:  je 8087200
 80871da:  mov edx, DWORD PTR [ebp-0x10]
 80871dd:  cmp edx, edi
 80871df:  jne 808731a
 80871e5:  test eax, eax
 80871e7:  nop
 80871e8:  jne 808732d
 80871ee:  mov ebx, DWORD PTR [ebp+0xc]
 80871f1:  mov ebx, DWORD PTR [ebx]
 80871f3:  mov DWORD PTR [ebp-0x28], ebx
 80871f6:  jmp 80870a0
 80871fb:  nop
 80871fc:  lea esi, [esi]
 8087200:  cmp DWORD PTR [ebp-0x2c], 0x5
 8087204:  je 80871ee
 8087206:  mov eax, DWORD PTR [ebp+0x24]
 8087209:  test eax, eax
 808720b:  je 808726c
 808720d:  cmp BYTE PTR [ebp-0x20], 0x0
 8087211:  lea esi, [esi]
 8087218:  je 808726c
 808721a:  mov eax, DWORD PTR [ebp+0x10]
 808721d:  mov esi, DWORD PTR [eax]
 808721f:  mov eax, DWORD PTR [ebp+0x14]
 8087222:  sub eax, esi
 8087224:  cmp eax, 0x3
 8087227:  jg 80873c5
 808722d:  xor ebx, ebx
 808722f:  xor edx, edx
 8087231:  cmp DWORD PTR [ebp+0x14], esi
 8087234:  mov ecx, esi
 8087236:  jbe 808725a
 8087238:  mov eax, DWORD PTR [ebp+0xc]
 808723b:  mov edx, DWORD PTR [eax+0x14]
 808723e:  movzx eax, BYTE PTR [ecx]
 8087241:  add ecx, 0x1
 8087244:  mov BYTE PTR [edx+ebx+0x4], al
 8087248:  mov edx, DWORD PTR [ebp+0x10]
 808724b:  add ebx, 0x1
 808724e:  mov DWORD PTR [edx], ecx
 8087250:  cmp DWORD PTR [ebp+0x14], ecx
 8087253:  ja 8087238
 8087255:  mov edx, DWORD PTR [ebp+0x14]
 8087258:  sub edx, esi
 808725a:  mov ecx, DWORD PTR [ebp+0xc]
 808725d:  mov DWORD PTR [ebp-0x2c], 0x7
 8087264:  mov eax, DWORD PTR [ecx+0x14]
 8087267:  and DWORD PTR [eax], 0xf8
 808726a:  or DWORD PTR [eax], edx
 808726c:  mov eax, DWORD PTR [ebp-0x2c]
 808726f:  add esp, 0x4c
 8087272:  pop ebx
 8087273:  pop esi
 8087274:  pop edi
 8087275:  pop ebp
 8087276:  ret
 8087277:  mov edx, DWORD PTR [ebp+0x18]
 808727a:  test edx, edx
 808727c:  jne 80873e9
 8087282:  mov ebx, eax
 8087284:  mov eax, DWORD PTR [ebp+0x10]
 8087287:  mov edx, DWORD PTR [eax]
 8087289:  cmp DWORD PTR [ebp+0x14], edx
 808728c:  jbe 80872f2
 808728e:  cmp ebx, 0x3
 8087291:  jbe 80872d6
 8087293:  movzx eax, BYTE PTR [edi+0x7]
 8087297:  mov edx, DWORD PTR [ebp-0x28]
 808729a:  mov BYTE PTR [edx], al
 808729c:  movzx eax, BYTE PTR [edi+0x6]
 80872a0:  mov BYTE PTR [edx+0x1], al
 80872a3:  movzx eax, BYTE PTR [edi+0x5]
 80872a7:  mov BYTE PTR [edx+0x2], al
 80872aa:  movzx eax, BYTE PTR [edi+0x4]
 80872ae:  mov BYTE PTR [edx+0x3], al
 80872b1:  add edx, 0x4
 80872b4:  mov DWORD PTR [ebp-0x28], edx
 80872b7:  and DWORD PTR [edi], 0xf8
 80872ba:  jmp 80870a0
 80872bf:  mov DWORD PTR [ecx], edi
 80872c1:  jmp 8087206
 80872c6:  mov eax, DWORD PTR [ebp+0x18]
 80872c9:  mov DWORD PTR [eax], edi
 80872cb:  mov eax, DWORD PTR [ebp-0x2c]
 80872ce:  add esp, 0x4c
 80872d1:  pop ebx
 80872d2:  pop esi
 80872d3:  pop edi
 80872d4:  pop ebp
 80872d5:  ret
 80872d6:  lea ecx, [edi+ebx+0x4]
 80872da:  movzx eax, BYTE PTR [edx]
 80872dd:  add edx, 0x1
 80872e0:  add ebx, 0x1
 80872e3:  mov BYTE PTR [ecx], al
 80872e5:  mov eax, DWORD PTR [ebp+0x10]
 80872e8:  add ecx, 0x1
 80872eb:  mov DWORD PTR [eax], edx
 80872ed:  cmp DWORD PTR [ebp+0x14], edx
 80872f0:  ja 8087310
 80872f2:  cmp ebx, 0x3
 80872f5:  ja 8087293
 80872f7:  and esi, 0xf8
 80872fa:  or esi, ebx
 80872fc:  mov DWORD PTR [ebp-0x2c], 0x7
 8087303:  mov eax, DWORD PTR [ebp-0x2c]
 8087306:  mov DWORD PTR [edi], esi
 8087308:  add esp, 0x4c
 808730b:  pop ebx
 808730c:  pop esi
 808730d:  pop edi
 808730e:  pop ebp
 808730f:  ret
 8087310:  cmp ebx, 0x3
 8087313:  jbe 80872da
 8087315:  jmp 8087293
 808731a:  mov ecx, DWORD PTR [ebp+0x10]
 808731d:  sub edx, edi
 808731f:  add DWORD PTR [ecx], edx
 8087321:  lea esi, [esi]
 8087328:  jmp 80871e5
 808732d:  cmp eax, 0x7
 8087330:  sete BYTE PTR [ebp-0x20]
 8087334:  mov DWORD PTR [ebp-0x2c], eax
 8087337:  jmp 8087206
 808733c:  mov edx, DWORD PTR [ebp+0x18]
 808733f:  mov edx, DWORD PTR [edx]
 8087341:  mov DWORD PTR [ebp-0x28], edx
 8087344:  jmp 8087076
 8087349:  mov esi, DWORD PTR [ebp+0x18]
 808734c:  test esi, esi
 808734e:  jne 808740d
 8087354:  mov edx, DWORD PTR [ebp+0xc]
 8087357:  mov eax, DWORD PTR [edx+0x14]
 808735a:  mov DWORD PTR [eax], 0x0
 8087360:  mov DWORD PTR [eax+0x4], 0x0
 8087367:  test BYTE PTR [edx+0x8], 0x1
 808736b:  mov DWORD PTR [ebp-0x2c], 0x0
 8087372:  jne 808726c
 8087378:  mov ecx, DWORD PTR [ebp-0x30]
 808737b:  mov DWORD PTR [esp], ecx
 808737e:  call 807f350
 8087383:  mov eax, DWORD PTR [ebp+0x24]
 8087386:  mov DWORD PTR [esp+0x18], ebx
 808738a:  mov DWORD PTR [esp+0x1c], eax
 808738e:  mov edx, DWORD PTR [ebp+0x1c]
 8087391:  mov DWORD PTR [esp+0x10], 0x0
 8087399:  mov DWORD PTR [esp+0xc], 0x0
 80873a1:  mov DWORD PTR [esp+0x8], 0x0
 80873a9:  mov DWORD PTR [esp+0x14], edx
 80873ad:  mov ecx, DWORD PTR [ebp-0x34]
 80873b0:  mov DWORD PTR [esp+0x4], ecx
 80873b4:  mov ebx, DWORD PTR [ebp-0x38]
 80873b7:  mov DWORD PTR [esp], ebx
 80873ba:  call DWORD PTR [ebp-0x30]
 80873bd:  mov DWORD PTR [ebp-0x2c], eax
 80873c0:  jmp 808726c
 80873c5:  mov DWORD PTR [esp+0xc], 0x80b60a0
 80873cd:  mov DWORD PTR [esp+0x8], 0x312
 80873d5:  mov DWORD PTR [esp+0x4], 0x80b5c20
 80873dd:  mov DWORD PTR [esp], 0x80b5c87
 80873e4:  call 8051490
 80873e9:  mov DWORD PTR [esp+0xc], 0x80b60a0
 80873f1:  mov DWORD PTR [esp+0x8], 0x22f
 80873f9:  mov DWORD PTR [esp+0x4], 0x80b5c20
 8087401:  mov DWORD PTR [esp], 0x80b5c34
 8087408:  call 8051490
 808740d:  mov DWORD PTR [esp+0xc], 0x80b60a0
 8087415:  mov DWORD PTR [esp+0x8], 0x1a0
 808741d:  mov DWORD PTR [esp+0x4], 0x80b5c20
 8087425:  mov DWORD PTR [esp], 0x80b5c34
 808742c:  call 8051490
 8087431:  jmp 8087440
 8087433:  nop
 8087434:  nop
 8087435:  nop
 8087436:  nop
 8087437:  nop
 8087438:  nop
 8087439:  nop
 808743a:  nop
 808743b:  nop
 808743c:  nop
 808743d:  nop
 808743e:  nop
 808743f:  nop

08087440 <__gconv_transform_internal_ucs4le>:
 8087440:  push ebp
 8087441:  mov ebp, esp
 8087443:  push edi
 8087444:  push esi
 8087445:  push ebx
 8087446:  sub esp, 0x4c
 8087449:  mov eax, DWORD PTR [ebp+0x8]
 808744c:  mov ecx, DWORD PTR [ebp+0xc]
 808744f:  mov ebx, DWORD PTR [ebp+0x20]
 8087452:  mov DWORD PTR [ebp-0x30], 0x0
 8087459:  lea edx, [eax+0x3c]
 808745c:  mov DWORD PTR [ebp-0x38], edx
 808745f:  mov edx, DWORD PTR [ebp+0xc]
 8087462:  add ecx, 0x24
 8087465:  mov DWORD PTR [ebp-0x34], ecx
 8087468:  test BYTE PTR [edx+0x8], 0x1
 808746c:  jne 808748b
 808746e:  mov ecx, DWORD PTR [ebp-0x38]
 8087471:  mov edi, DWORD PTR [eax+0x3c]
 8087474:  mov ecx, DWORD PTR [ecx+0x14]
 8087477:  test edi, edi
 8087479:  mov DWORD PTR [ebp-0x30], ecx
 808747c:  je 808748b
 808747e:  ror ecx, 0x9
 8087481:  xor ecx, DWORD PTR gs:0x18
 8087488:  mov DWORD PTR [ebp-0x30], ecx
 808748b:  test ebx, ebx
 808748d:  jne 8087769
 8087493:  mov ebx, DWORD PTR [ebp+0x18]
 8087496:  test ebx, ebx
 8087498:  jne 808775c
 808749e:  mov edx, DWORD PTR [ebp+0xc]
 80874a1:  mov edx, DWORD PTR [edx]
 80874a3:  mov DWORD PTR [ebp-0x28], edx
 80874a6:  mov eax, DWORD PTR [ebp+0xc]
 80874a9:  mov ecx, DWORD PTR [ebp+0x24]
 80874ac:  mov eax, DWORD PTR [eax+0x4]
 80874af:  test ecx, ecx
 80874b1:  mov DWORD PTR [ebp-0x24], eax
 80874b4:  je 80874d0
 80874b6:  mov edx, DWORD PTR [ebp+0xc]
 80874b9:  mov edi, DWORD PTR [edx+0x14]
 80874bc:  mov esi, DWORD PTR [edi]
 80874be:  mov eax, esi
 80874c0:  and eax, 0x7
 80874c3:  jne 8087697
 80874c9:  lea esi, [esi]
 80874d0:  mov ecx, DWORD PTR [ebp+0x10]
 80874d3:  mov eax, DWORD PTR [ebp+0x14]
 80874d6:  mov edx, DWORD PTR [ebp-0x24]
 80874d9:  sub edx, DWORD PTR [ebp-0x28]
 80874dc:  mov edi, DWORD PTR [ecx]
 80874de:  sub eax, edi
 80874e0:  cmp edx, eax
 80874e2:  jle 80874e9
 80874e4:  mov ecx, DWORD PTR [ebp+0x10]
 80874e7:  mov edx, eax
 80874e9:  mov eax, edx
 80874eb:  sar eax, 0x1f
 80874ee:  shr eax, 0x1e
 80874f1:  add eax, edx
 80874f3:  and eax, 0xfc
 80874f6:  lea edx, [edi+eax]
 80874f9:  mov DWORD PTR [ecx], edx
 80874fb:  mov DWORD PTR [esp+0x8], eax
 80874ff:  mov DWORD PTR [esp+0x4], edi
 8087503:  mov eax, DWORD PTR [ebp-0x28]
 8087506:  mov DWORD PTR [esp], eax
 8087509:  call 806c310
 808750e:  mov edx, DWORD PTR [ebp+0x10]
 8087511:  mov ecx, DWORD PTR [ebp+0x14]
 8087514:  mov DWORD PTR [ebp-0x2c], 0x4
 808751b:  mov BYTE PTR [ebp-0x20], 0x0
 808751f:  cmp ecx, DWORD PTR [edx]
 8087521:  mov esi, eax
 8087523:  je 8087541
 8087525:  lea eax, [eax+0x4]
 8087528:  cmp DWORD PTR [ebp-0x24], eax
 808752b:  sbb edx, edx
 808752d:  and edx, 0xfe
 8087530:  add edx, 0x7
 8087533:  cmp DWORD PTR [ebp-0x24], eax
 8087536:  mov DWORD PTR [ebp-0x2c], edx
 8087539:  sbb ecx, ecx
 808753b:  add ecx, 0x1
 808753e:  mov BYTE PTR [ebp-0x20], cl
 8087541:  mov eax, DWORD PTR [ebp+0x18]
 8087544:  test eax, eax
 8087546:  jne 80876e6
 808754c:  mov edx, DWORD PTR [ebp+0xc]
 808754f:  mov ebx, DWORD PTR [edx+0x20]
 8087552:  test ebx, ebx
 8087554:  je 808758f
 8087556:  xchg ax, ax
 8087558:  mov eax, DWORD PTR [ebx+0x4]
 808755b:  test eax, eax
 808755d:  je 8087588
 808755f:  mov DWORD PTR [esp], eax
 8087562:  call 807f350
 8087567:  mov DWORD PTR [esp+0x10], esi
 808756b:  mov ecx, DWORD PTR [ebp-0x28]
 808756e:  mov DWORD PTR [esp+0xc], ecx
 8087572:  mov edx, DWORD PTR [ebp+0x10]
 8087575:  mov eax, DWORD PTR [edx]
 8087577:  mov DWORD PTR [esp+0x4], edi
 808757b:  mov DWORD PTR [esp+0x8], eax
 808757f:  mov eax, DWORD PTR [ebx+0xc]
 8087582:  mov DWORD PTR [esp], eax
 8087585:  call DWORD PTR [ebx+0x4]
 8087588:  mov ebx, DWORD PTR [ebx+0x10]
 808758b:  test ebx, ebx
 808758d:  jne 8087558
 808758f:  mov ecx, DWORD PTR [ebp+0xc]
 8087592:  add DWORD PTR [ecx+0xc], 0x1
 8087596:  test BYTE PTR [ecx+0x8], 0x1
 808759a:  jne 80876df
 80875a0:  cmp DWORD PTR [ebp-0x28], esi
 80875a3:  jae 8087626
 80875a9:  mov edx, DWORD PTR [ebp+0xc]
 80875ac:  mov ecx, DWORD PTR [ebp-0x30]
 80875af:  mov eax, DWORD PTR [edx]
 80875b1:  mov DWORD PTR [ebp-0x10], eax
 80875b4:  mov DWORD PTR [esp], ecx
 80875b7:  call 807f350
 80875bc:  mov eax, DWORD PTR [ebp+0x24]
 80875bf:  lea ecx, [ebp-0x10]
 80875c2:  mov DWORD PTR [esp+0x18], 0x0
 80875ca:  mov DWORD PTR [esp+0x1c], eax
 80875ce:  mov edx, DWORD PTR [ebp+0x1c]
 80875d1:  mov DWORD PTR [esp+0x10], 0x0
 80875d9:  mov DWORD PTR [esp+0xc], esi
 80875dd:  mov DWORD PTR [esp+0x8], ecx
 80875e1:  mov DWORD PTR [esp+0x14], edx
 80875e5:  mov eax, DWORD PTR [ebp-0x34]
 80875e8:  mov DWORD PTR [esp+0x4], eax
 80875ec:  mov edx, DWORD PTR [ebp-0x38]
 80875ef:  mov DWORD PTR [esp], edx
 80875f2:  call DWORD PTR [ebp-0x30]
 80875f5:  cmp eax, 0x4
 80875f8:  je 8087620
 80875fa:  mov edx, DWORD PTR [ebp-0x10]
 80875fd:  cmp edx, esi
 80875ff:  jne 808773a
 8087605:  test eax, eax
 8087607:  nop
 8087608:  jne 808774d
 808760e:  mov eax, DWORD PTR [ebp+0xc]
 8087611:  mov eax, DWORD PTR [eax]
 8087613:  mov DWORD PTR [ebp-0x28], eax
 8087616:  jmp 80874d0
 808761b:  nop
 808761c:  lea esi, [esi]
 8087620:  cmp DWORD PTR [ebp-0x2c], 0x5
 8087624:  je 808760e
 8087626:  mov eax, DWORD PTR [ebp+0x24]
 8087629:  test eax, eax
 808762b:  je 808768c
 808762d:  cmp BYTE PTR [ebp-0x20], 0x0
 8087631:  lea esi, [esi]
 8087638:  je 808768c
 808763a:  mov edx, DWORD PTR [ebp+0x10]
 808763d:  mov eax, DWORD PTR [ebp+0x14]
 8087640:  mov esi, DWORD PTR [edx]
 8087642:  sub eax, esi
 8087644:  cmp eax, 0x3
 8087647:  jg 80877e5
 808764d:  xor ebx, ebx
 808764f:  xor edx, edx
 8087651:  cmp DWORD PTR [ebp+0x14], esi
 8087654:  mov ecx, esi
 8087656:  jbe 808767a
 8087658:  mov eax, DWORD PTR [ebp+0xc]
 808765b:  mov edx, DWORD PTR [eax+0x14]
 808765e:  movzx eax, BYTE PTR [ecx]
 8087661:  add ecx, 0x1
 8087664:  mov BYTE PTR [edx+ebx+0x4], al
 8087668:  mov edx, DWORD PTR [ebp+0x10]
 808766b:  add ebx, 0x1
 808766e:  mov DWORD PTR [edx], ecx
 8087670:  cmp DWORD PTR [ebp+0x14], ecx
 8087673:  ja 8087658
 8087675:  mov edx, DWORD PTR [ebp+0x14]
 8087678:  sub edx, esi
 808767a:  mov ecx, DWORD PTR [ebp+0xc]
 808767d:  mov DWORD PTR [ebp-0x2c], 0x7
 8087684:  mov eax, DWORD PTR [ecx+0x14]
 8087687:  and DWORD PTR [eax], 0xf8
 808768a:  or DWORD PTR [eax], edx
 808768c:  mov eax, DWORD PTR [ebp-0x2c]
 808768f:  add esp, 0x4c
 8087692:  pop ebx
 8087693:  pop esi
 8087694:  pop edi
 8087695:  pop ebp
 8087696:  ret
 8087697:  mov edx, DWORD PTR [ebp+0x18]
 808769a:  test edx, edx
 808769c:  jne 8087809
 80876a2:  mov ecx, DWORD PTR [ebp+0x10]
 80876a5:  mov ebx, eax
 80876a7:  mov edx, DWORD PTR [ecx]
 80876a9:  cmp DWORD PTR [ebp+0x14], edx
 80876ac:  jbe 8087712
 80876ae:  cmp eax, 0x3
 80876b1:  jbe 80876f6
 80876b3:  movzx eax, BYTE PTR [edi+0x4]
 80876b7:  mov edx, DWORD PTR [ebp-0x28]
 80876ba:  mov BYTE PTR [edx], al
 80876bc:  movzx eax, BYTE PTR [edi+0x5]
 80876c0:  mov BYTE PTR [edx+0x1], al
 80876c3:  movzx eax, BYTE PTR [edi+0x6]
 80876c7:  mov BYTE PTR [edx+0x2], al
 80876ca:  movzx eax, BYTE PTR [edi+0x7]
 80876ce:  mov BYTE PTR [edx+0x3], al
 80876d1:  add edx, 0x4
 80876d4:  mov DWORD PTR [ebp-0x28], edx
 80876d7:  and DWORD PTR [edi], 0xf8
 80876da:  jmp 80874d0
 80876df:  mov DWORD PTR [ecx], esi
 80876e1:  jmp 8087626
 80876e6:  mov eax, DWORD PTR [ebp+0x18]
 80876e9:  mov DWORD PTR [eax], esi
 80876eb:  mov eax, DWORD PTR [ebp-0x2c]
 80876ee:  add esp, 0x4c
 80876f1:  pop ebx
 80876f2:  pop esi
 80876f3:  pop edi
 80876f4:  pop ebp
 80876f5:  ret
 80876f6:  lea ecx, [edi+eax+0x4]
 80876fa:  movzx eax, BYTE PTR [edx]
 80876fd:  add edx, 0x1
 8087700:  add ebx, 0x1
 8087703:  mov BYTE PTR [ecx], al
 8087705:  mov eax, DWORD PTR [ebp+0x10]
 8087708:  add ecx, 0x1
 808770b:  mov DWORD PTR [eax], edx
 808770d:  cmp DWORD PTR [ebp+0x14], edx
 8087710:  ja 8087730
 8087712:  cmp ebx, 0x3
 8087715:  ja 80876b3
 8087717:  and esi, 0xf8
 808771a:  or esi, ebx
 808771c:  mov DWORD PTR [ebp-0x2c], 0x7
 8087723:  mov eax, DWORD PTR [ebp-0x2c]
 8087726:  mov DWORD PTR [edi], esi
 8087728:  add esp, 0x4c
 808772b:  pop ebx
 808772c:  pop esi
 808772d:  pop edi
 808772e:  pop ebp
 808772f:  ret
 8087730:  cmp ebx, 0x3
 8087733:  jbe 80876fa
 8087735:  jmp 80876b3
 808773a:  mov ecx, DWORD PTR [ebp+0x10]
 808773d:  sub edx, esi
 808773f:  add DWORD PTR [ecx], edx
 8087741:  lea esi, [esi]
 8087748:  jmp 8087605
 808774d:  cmp eax, 0x7
 8087750:  sete BYTE PTR [ebp-0x20]
 8087754:  mov DWORD PTR [ebp-0x2c], eax
 8087757:  jmp 8087626
 808775c:  mov ecx, DWORD PTR [ebp+0x18]
 808775f:  mov ecx, DWORD PTR [ecx]
 8087761:  mov DWORD PTR [ebp-0x28], ecx
 8087764:  jmp 80874a6
 8087769:  mov esi, DWORD PTR [ebp+0x18]
 808776c:  test esi, esi
 808776e:  jne 808782d
 8087774:  mov edx, DWORD PTR [ebp+0xc]
 8087777:  mov eax, DWORD PTR [edx+0x14]
 808777a:  mov DWORD PTR [eax], 0x0
 8087780:  mov DWORD PTR [eax+0x4], 0x0
 8087787:  test BYTE PTR [edx+0x8], 0x1
 808778b:  mov DWORD PTR [ebp-0x2c], 0x0
 8087792:  jne 808768c
 8087798:  mov ecx, DWORD PTR [ebp-0x30]
 808779b:  mov DWORD PTR [esp], ecx
 808779e:  call 807f350
 80877a3:  mov eax, DWORD PTR [ebp+0x24]
 80877a6:  mov DWORD PTR [esp+0x18], ebx
 80877aa:  mov DWORD PTR [esp+0x1c], eax
 80877ae:  mov edx, DWORD PTR [ebp+0x1c]
 80877b1:  mov DWORD PTR [esp+0x10], 0x0
 80877b9:  mov DWORD PTR [esp+0xc], 0x0
 80877c1:  mov DWORD PTR [esp+0x8], 0x0
 80877c9:  mov DWORD PTR [esp+0x14], edx
 80877cd:  mov ecx, DWORD PTR [ebp-0x34]
 80877d0:  mov DWORD PTR [esp+0x4], ecx
 80877d4:  mov eax, DWORD PTR [ebp-0x38]
 80877d7:  mov DWORD PTR [esp], eax
 80877da:  call DWORD PTR [ebp-0x30]
 80877dd:  mov DWORD PTR [ebp-0x2c], eax
 80877e0:  jmp 808768c
 80877e5:  mov DWORD PTR [esp+0xc], 0x80b6040
 80877ed:  mov DWORD PTR [esp+0x8], 0x312
 80877f5:  mov DWORD PTR [esp+0x4], 0x80b5c20
 80877fd:  mov DWORD PTR [esp], 0x80b5c87
 8087804:  call 8051490
 8087809:  mov DWORD PTR [esp+0xc], 0x80b6040
 8087811:  mov DWORD PTR [esp+0x8], 0x22f
 8087819:  mov DWORD PTR [esp+0x4], 0x80b5c20
 8087821:  mov DWORD PTR [esp], 0x80b5c34
 8087828:  call 8051490
 808782d:  mov DWORD PTR [esp+0xc], 0x80b6040
 8087835:  mov DWORD PTR [esp+0x8], 0x1a0
 808783d:  mov DWORD PTR [esp+0x4], 0x80b5c20
 8087845:  mov DWORD PTR [esp], 0x80b5c34
 808784c:  call 8051490
 8087851:  nop
 8087852:  nop
 8087853:  nop
 8087854:  nop
 8087855:  nop
 8087856:  nop
 8087857:  nop
 8087858:  nop
 8087859:  nop
 808785a:  nop
 808785b:  nop
 808785c:  nop
 808785d:  nop
 808785e:  nop
 808785f:  nop

08087860 <open_translit>:
 8087860:  push ebp
 8087861:  mov ebp, esp
 8087863:  push ebx
 8087864:  mov ebx, eax
 8087866:  sub esp, 0xc
 8087869:  mov DWORD PTR [esp+0x4], 0x80000001
 8087871:  mov eax, DWORD PTR [eax+0x20]
 8087874:  mov DWORD PTR [esp], eax
 8087877:  call 8099030
 808787c:  mov edx, 0x1
 8087881:  test eax, eax
 8087883:  mov DWORD PTR [ebx+0x24], eax
 8087886:  je 80878ce
 8087888:  mov DWORD PTR [esp+0x4], 0x80b60c5
 8087890:  mov DWORD PTR [esp], eax
 8087893:  call 8099140
 8087898:  test eax, eax
 808789a:  mov edx, eax
 808789c:  je 80878b7
 808789e:  lea eax, [ebx+0xc]
 80878a1:  mov DWORD PTR [esp+0x8], eax
 80878a5:  lea eax, [ebx+0x8]
 80878a8:  mov DWORD PTR [esp+0x4], eax
 80878ac:  mov eax, DWORD PTR [ebx]
 80878ae:  mov DWORD PTR [esp], eax
 80878b1:  call edx
 80878b3:  test eax, eax
 80878b5:  je 80878d8
 80878b7:  mov eax, DWORD PTR [ebx+0x24]
 80878ba:  mov DWORD PTR [esp], eax
 80878bd:  call 8098f50
 80878c2:  mov edx, 0x1
 80878c7:  mov DWORD PTR [ebx+0x24], 0x0
 80878ce:  add esp, 0xc
 80878d1:  mov eax, edx
 80878d3:  pop ebx
 80878d4:  pop ebp
 80878d5:  ret
 80878d6:  xchg ax, ax
 80878d8:  mov DWORD PTR [esp+0x4], 0x80b60d9
 80878e0:  mov eax, DWORD PTR [ebx+0x24]
 80878e3:  mov DWORD PTR [esp], eax
 80878e6:  call 8099140
 80878eb:  test eax, eax
 80878ed:  mov DWORD PTR [ebx+0x10], eax
 80878f0:  je 80878b7
 80878f2:  mov DWORD PTR [esp+0x4], 0x80b60e5
 80878fa:  mov eax, DWORD PTR [ebx+0x24]
 80878fd:  mov DWORD PTR [esp], eax
 8087900:  call 8099140
 8087905:  mov DWORD PTR [ebx+0x18], eax
 8087908:  mov DWORD PTR [esp+0x4], 0x80b60c5
 8087910:  mov eax, DWORD PTR [ebx+0x24]
 8087913:  mov DWORD PTR [esp], eax
 8087916:  call 8099140
 808791b:  mov DWORD PTR [ebx+0x14], eax
 808791e:  mov DWORD PTR [esp+0x4], 0x80b60f6
 8087926:  mov eax, DWORD PTR [ebx+0x24]
 8087929:  mov DWORD PTR [esp], eax
 808792c:  call 8099140
 8087931:  xor edx, edx
 8087933:  mov DWORD PTR [ebx+0x28], 0x1
 808793a:  mov DWORD PTR [ebx+0x1c], eax
 808793d:  add esp, 0xc
 8087940:  mov eax, edx
 8087942:  pop ebx
 8087943:  pop ebp
 8087944:  ret
 8087945:  lea esi, [esi]
 8087949:  lea edi, [edi]

08087950 <__gconv_translit_find>:
 8087950:  push ebp
 8087951:  mov ebp, esp
 8087953:  sub esp, 0x28
 8087956:  mov DWORD PTR [ebp-0xc], ebx
 8087959:  mov DWORD PTR [ebp-0x8], esi
 808795c:  mov DWORD PTR [ebp-0x4], edi
 808795f:  mov edx, DWORD PTR [eax]
 8087961:  mov DWORD PTR [ebp-0x18], eax
 8087964:  test edx, edx
 8087966:  je 8087beb
 808796c:  xor eax, eax
 808796e:  mov ecx, 0x1
 8087973:  cmp DWORD PTR gs:0xc, 0x0
 808797b:  je 808797e
 808797d:  cmpxchg DWORD PTR ds:0x80d2a54, ecx
 8087985:  jne 8088013
 808798b:  mov eax, DWORD PTR [ebp-0x18]
 808798e:  mov DWORD PTR [esp+0x8], 0x8087c20
 8087996:  mov DWORD PTR [esp+0x4], 0x80d2a50
 808799e:  mov DWORD PTR [esp], eax
 80879a1:  call 80736f0
 80879a6:  test eax, eax
 80879a8:  mov ebx, eax
 80879aa:  je 8087a08
 80879ac:  mov eax, DWORD PTR [eax]
 80879ae:  mov edx, DWORD PTR [eax+0x24]
 80879b1:  test edx, edx
 80879b3:  je 80879f8
 80879b5:  xor esi, esi
 80879b7:  add edx, 0x1
 80879ba:  je 80879e8
 80879bc:  cmp DWORD PTR gs:0xc, 0x0
 80879c4:  je 80879c7
 80879c6:  sub DWORD PTR ds:0x80d2a54, 0x1
 80879ce:  jne 8088023
 80879d4:  mov eax, esi
 80879d6:  mov ebx, DWORD PTR [ebp-0xc]
 80879d9:  mov esi, DWORD PTR [ebp-0x8]
 80879dc:  mov edi, DWORD PTR [ebp-0x4]
 80879df:  mov esp, ebp
 80879e1:  pop ebp
 80879e2:  ret
 80879e3:  nop
 80879e4:  lea esi, [esi]
 80879e8:  call 8087860
 80879ed:  test eax, eax
 80879ef:  je 8087b68
 80879f5:  lea esi, [esi]
 80879f8:  mov esi, 0x1
 80879fd:  lea esi, [esi]
 8087a00:  jmp 80879bc
 8087a02:  lea esi, [esi]
 8087a08:  mov edi, DWORD PTR [ebp-0x18]
 8087a0b:  mov eax, DWORD PTR [edi]
 8087a0d:  mov DWORD PTR [esp], eax
 8087a10:  call 804eea0
 8087a15:  add eax, 0x1
 8087a18:  mov DWORD PTR [ebp-0x10], eax
 8087a1b:  mov eax, ds:0x80d2ee4
 8087a20:  test eax, eax
 8087a22:  je 8087c0f
 8087a28:  cmp DWORD PTR [ebp-0x10], 0x4
 8087a2c:  mov ebx, 0x1
 8087a31:  ja 8087bc0
 8087a37:  mov eax, ds:0x80d2ee0
 8087a3c:  mov edx, DWORD PTR [ebp-0x10]
 8087a3f:  lea eax, [eax+edx*2+0x2f]
 8087a43:  mov DWORD PTR [esp], eax
 8087a46:  call 804d6f0
 8087a4b:  test eax, eax
 8087a4d:  mov DWORD PTR [ebp-0x14], eax
 8087a50:  je 80879f8
 8087a52:  mov edi, eax
 8087a54:  mov ecx, 0xb
 8087a59:  xor eax, eax
 8087a5b:  rep stosd
 8087a5d:  mov edx, DWORD PTR [ebp-0x14]
 8087a60:  mov eax, DWORD PTR [ebp-0x14]
 8087a63:  mov ecx, DWORD PTR [ebp-0x10]
 8087a66:  mov edi, DWORD PTR [ebp-0x18]
 8087a69:  add edx, 0x2c
 8087a6c:  mov DWORD PTR [eax], edx
 8087a6e:  mov DWORD PTR [esp+0x8], ecx
 8087a72:  mov eax, DWORD PTR [edi]
 8087a74:  mov DWORD PTR [esp], edx
 8087a77:  mov DWORD PTR [esp+0x4], eax
 8087a7b:  call 806c310
 8087a80:  mov edx, DWORD PTR [ebp-0x14]
 8087a83:  mov esi, DWORD PTR ds:0x80d2ee4
 8087a89:  mov DWORD PTR [edx+0x20], eax
 8087a8c:  mov eax, DWORD PTR [esi]
 8087a8e:  test eax, eax
 8087a90:  je 8087ba8
 8087a96:  test ebx, ebx
 8087a98:  je 8087aae
 8087a9a:  jmp 8087b1e
 8087a9f:  nop
 8087aa0:  add esi, 0x8
 8087aa3:  mov eax, DWORD PTR [esi]
 8087aa5:  test eax, eax
 8087aa7:  nop
 8087aa8:  je 8087ba8
 8087aae:  mov ecx, DWORD PTR [ebp-0x18]
 8087ab1:  mov edi, DWORD PTR [ebp-0x14]
 8087ab4:  mov ebx, DWORD PTR [ecx]
 8087ab6:  mov DWORD PTR [esp+0x4], eax
 8087aba:  mov eax, DWORD PTR [edi+0x20]
 8087abd:  mov DWORD PTR [esp], eax
 8087ac0:  call 806c360
 8087ac5:  mov edx, DWORD PTR [ebp-0x10]
 8087ac8:  mov DWORD PTR [esp+0x4], ebx
 8087acc:  mov DWORD PTR [esp+0x8], edx
 8087ad0:  mov DWORD PTR [esp], eax
 8087ad3:  call 804efc0
 8087ad8:  mov eax, edi
 8087ada:  call 8087860
 8087adf:  test eax, eax
 8087ae1:  jne 8087aa0
 8087ae3:  mov ecx, DWORD PTR [ebp-0x14]
 8087ae6:  xor esi, esi
 8087ae8:  mov DWORD PTR [esp+0x8], 0x8087c20
 8087af0:  mov DWORD PTR [esp+0x4], 0x80d2a50
 8087af8:  mov DWORD PTR [esp], ecx
 8087afb:  call 8073c10
 8087b00:  test eax, eax
 8087b02:  jne 80879bc
 8087b08:  jmp 80879f8
 8087b0d:  lea esi, [esi]
 8087b10:  add esi, 0x8
 8087b13:  mov eax, DWORD PTR [esi]
 8087b15:  test eax, eax
 8087b17:  nop
 8087b18:  je 8087ba8
 8087b1e:  mov ecx, DWORD PTR [ebp-0x18]
 8087b21:  mov edi, DWORD PTR [ebp-0x14]
 8087b24:  mov ebx, DWORD PTR [ecx]
 8087b26:  mov DWORD PTR [esp+0x4], eax
 8087b2a:  mov eax, DWORD PTR [edi+0x20]
 8087b2d:  mov DWORD PTR [esp], eax
 8087b30:  call 806c360
 8087b35:  mov edx, DWORD PTR [ebp-0x10]
 8087b38:  mov DWORD PTR [esp+0x4], ebx
 8087b3c:  mov DWORD PTR [esp+0x8], edx
 8087b40:  mov DWORD PTR [esp], eax
 8087b43:  call 806c310
 8087b48:  mov DWORD PTR [eax], 0x6f732e
 8087b4e:  mov eax, edi
 8087b50:  call 8087860
 8087b55:  test eax, eax
 8087b57:  jne 8087b10
 8087b59:  lea esi, [esi]
 8087b60:  jmp 8087ae3
 8087b62:  lea esi, [esi]
 8087b68:  mov edx, DWORD PTR [ebx]
 8087b6a:  xor esi, esi
 8087b6c:  mov ecx, DWORD PTR [ebp-0x18]
 8087b6f:  mov eax, DWORD PTR [edx]
 8087b71:  mov DWORD PTR [ecx], eax
 8087b73:  mov eax, DWORD PTR [edx+0x4]
 8087b76:  mov DWORD PTR [ecx+0x4], eax
 8087b79:  mov eax, DWORD PTR [edx+0x8]
 8087b7c:  mov DWORD PTR [ecx+0x8], eax
 8087b7f:  mov eax, DWORD PTR [edx+0xc]
 8087b82:  mov DWORD PTR [ecx+0xc], eax
 8087b85:  mov eax, DWORD PTR [edx+0x10]
 8087b88:  mov DWORD PTR [ecx+0x10], eax
 8087b8b:  mov eax, DWORD PTR [edx+0x14]
 8087b8e:  mov DWORD PTR [ecx+0x14], eax
 8087b91:  mov eax, DWORD PTR [edx+0x18]
 8087b94:  mov DWORD PTR [ecx+0x18], eax
 8087b97:  mov eax, DWORD PTR [edx+0x1c]
 8087b9a:  mov DWORD PTR [ecx+0x1c], eax
 8087b9d:  add DWORD PTR [edx+0x28], 0x1
 8087ba1:  jmp 80879bc
 8087ba6:  xchg ax, ax
 8087ba8:  mov edi, DWORD PTR [ebp-0x14]
 8087bab:  mov esi, 0x1
 8087bb0:  mov DWORD PTR [edi+0x20], 0x0
 8087bb7:  mov ecx, edi
 8087bb9:  jmp 8087ae8
 8087bbe:  xchg ax, ax
 8087bc0:  mov eax, DWORD PTR [ebp-0x18]
 8087bc3:  mov ecx, 0x3
 8087bc8:  mov esi, DWORD PTR [ebp-0x10]
 8087bcb:  sub esi, 0x4
 8087bce:  add esi, DWORD PTR [eax]
 8087bd0:  mov eax, 0x80b56d0
 8087bd5:  mov edi, eax
 8087bd7:  repz cmpsb
 8087bd9:  seta dl
 8087bdc:  setb al
 8087bdf:  xor ebx, ebx
 8087be1:  cmp dl, al
 8087be3:  setne bl
 8087be6:  jmp 8087a37
 8087beb:  mov DWORD PTR [esp+0xc], 0x80b612f
 8087bf3:  mov DWORD PTR [esp+0x8], 0x147
 8087bfb:  mov DWORD PTR [esp+0x4], 0x80b6106
 8087c03:  mov DWORD PTR [esp], 0x80b6114
 8087c0a:  call 8051490
 8087c0f:  call 8081610
 8087c14:  jmp 8087a28
 8087c19:  lea esi, [esi]

08087c20 <trans_compare>:
 8087c20:  push ebp
 8087c21:  mov ebp, esp
 8087c23:  mov eax, DWORD PTR [ebp+0xc]
 8087c26:  mov eax, DWORD PTR [eax]
 8087c28:  mov DWORD PTR [ebp+0xc], eax
 8087c2b:  mov eax, DWORD PTR [ebp+0x8]
 8087c2e:  mov eax, DWORD PTR [eax]
 8087c30:  mov DWORD PTR [ebp+0x8], eax
 8087c33:  pop ebp
 8087c34:  jmp 806af90
 8087c39:  lea esi, [esi]

08087c40 <__gconv_transliterate>:
 8087c40:  push ebp
 8087c41:  mov ebp, esp
 8087c43:  push edi
 8087c44:  push esi
 8087c45:  push ebx
 8087c46:  sub esp, 0x64
 8087c49:  mov ecx, DWORD PTR [ebp+0x8]
 8087c4c:  mov eax, DWORD PTR [ebp+0x18]
 8087c4f:  mov edx, DWORD PTR [ebp+0x8]
 8087c52:  mov esi, DWORD PTR [ecx]
 8087c54:  mov eax, DWORD PTR [eax]
 8087c56:  mov edx, DWORD PTR [edx+0x14]
 8087c59:  test esi, esi
 8087c5b:  mov DWORD PTR [ebp-0x4c], eax
 8087c5e:  mov DWORD PTR [ebp-0x30], edx
 8087c61:  je 8087c70
 8087c63:  ror edx, 0x9
 8087c66:  xor edx, DWORD PTR gs:0x18
 8087c6d:  mov DWORD PTR [ebp-0x30], edx
 8087c70:  mov ebx, DWORD PTR gs:0x0
 8087c77:  mov esi, 0xffffffd8
 8087c7d:  mov DWORD PTR [ebp-0x50], ebx
 8087c80:  mov eax, DWORD PTR [ebx+esi]
 8087c83:  mov eax, DWORD PTR [eax]
 8087c85:  mov edx, DWORD PTR [eax+0x118]
 8087c8b:  test edx, edx
 8087c8d:  je 8087d78
 8087c93:  mov ecx, DWORD PTR [eax+0x11c]
 8087c99:  mov DWORD PTR [ebp-0x48], ecx
 8087c9c:  mov ebx, DWORD PTR [eax+0x120]
 8087ca2:  mov DWORD PTR [ebp-0x44], ebx
 8087ca5:  mov esi, DWORD PTR [eax+0x124]
 8087cab:  mov DWORD PTR [ebp-0x40], esi
 8087cae:  mov eax, DWORD PTR [eax+0x128]
 8087cb4:  mov DWORD PTR [ebp-0x34], edx
 8087cb7:  mov DWORD PTR [ebp-0x38], 0x0
 8087cbe:  mov DWORD PTR [ebp-0x3c], eax
 8087cc1:  mov eax, DWORD PTR [ebp-0x4c]
 8087cc4:  add eax, 0x4
 8087cc7:  cmp DWORD PTR [ebp+0x1c], eax
 8087cca:  jb 8087eb5
 8087cd0:  mov edx, DWORD PTR [ebp-0x38]
 8087cd3:  add edx, DWORD PTR [ebp-0x34]
 8087cd6:  mov ecx, DWORD PTR [ebp-0x48]
 8087cd9:  mov esi, DWORD PTR [ebp-0x44]
 8087cdc:  shr edx, 1
 8087cde:  mov eax, DWORD PTR [ebp-0x4c]
 8087ce1:  mov DWORD PTR [ebp-0x2c], edx
 8087ce4:  mov ecx, DWORD PTR [ecx+edx*4]
 8087ce7:  mov DWORD PTR [ebp-0x24], 0x0
 8087cee:  mov ebx, ecx
 8087cf0:  mov DWORD PTR [ebp-0x28], ecx
 8087cf3:  mov ecx, DWORD PTR [esi+ecx*4]
 8087cf6:  lea edx, [esi+ebx*4+0x4]
 8087cfa:  lea esi, [esi]
 8087d00:  cmp DWORD PTR [eax], ecx
 8087d02:  jne 8087d30
 8087d04:  mov ecx, DWORD PTR [edx]
 8087d06:  add DWORD PTR [ebp-0x24], 0x1
 8087d0a:  test ecx, ecx
 8087d0c:  je 8087de0
 8087d12:  add eax, 0x4
 8087d15:  add edx, 0x4
 8087d18:  cmp DWORD PTR [ebp+0x1c], eax
 8087d1b:  ja 8087d00
 8087d1d:  mov edx, 0x7
 8087d22:  add esp, 0x64
 8087d25:  mov eax, edx
 8087d27:  pop ebx
 8087d28:  pop esi
 8087d29:  pop edi
 8087d2a:  pop ebp
 8087d2b:  ret
 8087d2c:  lea esi, [esi]
 8087d30:  mov ebx, DWORD PTR [ebp-0x24]
 8087d33:  test ebx, ebx
 8087d35:  jne 8087dd3
 8087d3b:  mov esi, DWORD PTR [ebp-0x24]
 8087d3e:  mov eax, DWORD PTR [ebp-0x4c]
 8087d41:  lea edx, [eax+esi*4]
 8087d44:  cmp DWORD PTR [ebp+0x1c], edx
 8087d47:  jbe 8087d5c
 8087d49:  mov ecx, DWORD PTR [ebp-0x44]
 8087d4c:  mov eax, esi
 8087d4e:  add eax, DWORD PTR [ebp-0x28]
 8087d51:  mov eax, DWORD PTR [ecx+eax*4]
 8087d54:  cmp eax, DWORD PTR [edx]
 8087d56:  jae 8087ea8
 8087d5c:  mov esi, DWORD PTR [ebp-0x2c]
 8087d5f:  mov eax, DWORD PTR [ebp-0x34]
 8087d62:  add esi, 0x1
 8087d65:  mov DWORD PTR [ebp-0x38], esi
 8087d68:  cmp DWORD PTR [ebp-0x38], eax
 8087d6b:  jb 8087cd0
 8087d71:  lea esi, [esi]
 8087d78:  mov ecx, DWORD PTR [ebp-0x50]
 8087d7b:  mov edx, 0xffffffd8
 8087d81:  mov eax, DWORD PTR [ecx+edx]
 8087d84:  mov eax, DWORD PTR [eax]
 8087d86:  mov DWORD PTR [ebp-0x20], eax
 8087d89:  mov edi, DWORD PTR [eax+0x134]
 8087d8f:  test edi, edi
 8087d91:  jne 8087ed5
 8087d97:  mov esi, DWORD PTR [ebp-0x20]
 8087d9a:  mov ebx, DWORD PTR [esi+0x12c]
 8087da0:  test ebx, ebx
 8087da2:  je 8087ec6
 8087da8:  mov eax, DWORD PTR [ebp-0x4c]
 8087dab:  mov esi, DWORD PTR [esi+0x130]
 8087db1:  add eax, 0x4
 8087db4:  cmp DWORD PTR [ebp+0x1c], eax
 8087db7:  jae 8087f42
 8087dbd:  mov edx, DWORD PTR [ebp+0x1c]
 8087dc0:  cmp DWORD PTR [ebp-0x4c], edx
 8087dc3:  jne 8087d1d
 8087dc9:  mov edx, 0x4
 8087dce:  jmp 8087d22
 8087dd3:  test ecx, ecx
 8087dd5:  lea esi, [esi]
 8087dd8:  jne 8087d1d
 8087dde:  xchg ax, ax
 8087de0:  mov eax, DWORD PTR [ebp-0x2c]
 8087de3:  mov edx, DWORD PTR [ebp-0x40]
 8087de6:  mov ecx, DWORD PTR [ebp-0x3c]
 8087de9:  mov esi, DWORD PTR [edx+eax*4]
 8087dec:  mov eax, DWORD PTR [ecx+esi*4]
 8087def:  nop
 8087df0:  lea ebx, [esi*4]
 8087df7:  test eax, eax
 8087df9:  mov DWORD PTR [ebp-0x18], ebx
 8087dfc:  mov edi, ebx
 8087dfe:  je 8087e2b
 8087e00:  mov edx, DWORD PTR [ebp-0x3c]
 8087e03:  add esi, 0x1
 8087e06:  lea edi, [esi*4]
 8087e0d:  add edx, edi
 8087e0f:  jmp 8087e1c
 8087e11:  lea esi, [esi]
 8087e18:  mov edi, ebx
 8087e1a:  mov esi, ecx
 8087e1c:  mov eax, DWORD PTR [edx]
 8087e1e:  add edx, 0x4
 8087e21:  lea ebx, [edi+0x4]
 8087e24:  lea ecx, [esi+0x1]
 8087e27:  test eax, eax
 8087e29:  jne 8087e18
 8087e2b:  mov edx, DWORD PTR [ebp+0x20]
 8087e2e:  lea ebx, [ebp-0x10]
 8087e31:  mov eax, DWORD PTR [ebp-0x3c]
 8087e34:  add eax, DWORD PTR [ebp-0x18]
 8087e37:  mov ecx, DWORD PTR [ebp-0x30]
 8087e3a:  mov DWORD PTR [ebp-0x14], eax
 8087e3d:  mov eax, DWORD PTR [edx]
 8087e3f:  mov DWORD PTR [ebp-0x10], eax
 8087e42:  mov DWORD PTR [esp], ecx
 8087e45:  call 807f350
 8087e4a:  mov DWORD PTR [esp+0x1c], 0x0
 8087e52:  mov DWORD PTR [esp+0x18], 0x0
 8087e5a:  mov DWORD PTR [esp+0x14], 0x0
 8087e62:  mov DWORD PTR [esp+0x10], ebx
 8087e66:  mov eax, DWORD PTR [ebp-0x3c]
 8087e69:  add eax, edi
 8087e6b:  mov DWORD PTR [esp+0xc], eax
 8087e6f:  lea eax, [ebp-0x14]
 8087e72:  mov DWORD PTR [esp+0x8], eax
 8087e76:  mov edx, DWORD PTR [ebp+0xc]
 8087e79:  mov DWORD PTR [esp+0x4], edx
 8087e7d:  mov ecx, DWORD PTR [ebp+0x8]
 8087e80:  mov DWORD PTR [esp], ecx
 8087e83:  call DWORD PTR [ebp-0x30]
 8087e86:  cmp eax, 0x6
 8087e89:  mov edx, eax
 8087e8b:  jne 8087fb2
 8087e91:  mov ebx, DWORD PTR [ebp-0x3c]
 8087e94:  add esi, 0x1
 8087e97:  mov eax, DWORD PTR [ebx+esi*4]
 8087e9a:  test eax, eax
 8087e9c:  jne 8087df0
 8087ea2:  jmp 8087d3b
 8087ea7:  nop
 8087ea8:  mov ebx, DWORD PTR [ebp-0x2c]
 8087eab:  mov DWORD PTR [ebp-0x34], ebx
 8087eae:  mov eax, ebx
 8087eb0:  jmp 8087d68
 8087eb5:  mov eax, DWORD PTR [ebp+0x1c]
 8087eb8:  cmp DWORD PTR [ebp-0x4c], eax
 8087ebb:  jne 8087d1d
 8087ec1:  jmp 8087dc9
 8087ec6:  mov edx, 0x6
 8087ecb:  add esp, 0x64
 8087ece:  mov eax, edx
 8087ed0:  pop ebx
 8087ed1:  pop esi
 8087ed2:  pop edi
 8087ed3:  pop ebp
 8087ed4:  ret
 8087ed5:  mov ebx, DWORD PTR [ebp+0x18]
 8087ed8:  mov edx, DWORD PTR [eax+0x138]
 8087ede:  mov eax, DWORD PTR [ebp-0x4c]
 8087ee1:  mov ebx, DWORD PTR [ebx]
 8087ee3:  add eax, 0x4
 8087ee6:  cmp DWORD PTR [ebp+0x1c], eax
 8087ee9:  mov DWORD PTR [ebp-0x1c], ebx
 8087eec:  mov esi, DWORD PTR [ebx]
 8087eee:  jb 8087fdc
 8087ef4:  test edi, edi
 8087ef6:  jle 8087d97
 8087efc:  mov eax, DWORD PTR [edx]
 8087efe:  xor ebx, ebx
 8087f00:  mov ecx, edx
 8087f02:  cmp esi, eax
 8087f04:  jb 8087d97
 8087f0a:  lea esi, [esi]
 8087f10:  cmp esi, DWORD PTR [ecx+0x4]
 8087f13:  ja 8087f28
 8087f15:  mov edx, esi
 8087f17:  sub edx, eax
 8087f19:  mov eax, edx
 8087f1b:  xor edx, edx
 8087f1d:  div DWORD PTR [ecx+0x8]
 8087f20:  test edx, edx
 8087f22:  je 8087ffd
 8087f28:  add ebx, 0x1
 8087f2b:  cmp edi, ebx
 8087f2d:  jle 8087d97
 8087f33:  add ecx, 0xc
 8087f36:  mov eax, DWORD PTR [ecx]
 8087f38:  cmp esi, eax
 8087f3a:  jb 8087d97
 8087f40:  jmp 8087f10
 8087f42:  mov ecx, DWORD PTR [ebp+0x20]
 8087f45:  mov DWORD PTR [ebp-0x10], esi
 8087f48:  mov eax, DWORD PTR [ecx]
 8087f4a:  mov DWORD PTR [ebp-0x14], eax
 8087f4d:  mov eax, DWORD PTR [ebp-0x30]
 8087f50:  mov DWORD PTR [esp], eax
 8087f53:  call 807f350
 8087f58:  lea eax, [ebp-0x14]
 8087f5b:  mov DWORD PTR [esp+0x10], eax
 8087f5f:  lea eax, [esi+ebx*4]
 8087f62:  mov DWORD PTR [esp+0xc], eax
 8087f66:  lea eax, [ebp-0x10]
 8087f69:  mov DWORD PTR [esp+0x1c], 0x0
 8087f71:  mov DWORD PTR [esp+0x18], 0x0
 8087f79:  mov DWORD PTR [esp+0x14], 0x0
 8087f81:  mov DWORD PTR [esp+0x8], eax
 8087f85:  mov edx, DWORD PTR [ebp+0xc]
 8087f88:  mov DWORD PTR [esp+0x4], edx
 8087f8c:  mov ecx, DWORD PTR [ebp+0x8]
 8087f8f:  mov DWORD PTR [esp], ecx
 8087f92:  call DWORD PTR [ebp-0x30]
 8087f95:  cmp eax, 0x6
 8087f98:  mov edx, eax
 8087f9a:  je 8087ec6
 8087fa0:  cmp eax, 0x4
 8087fa3:  je 8087fed
 8087fa5:  mov eax, DWORD PTR [ebp-0x14]
 8087fa8:  mov ecx, DWORD PTR [ebp+0x20]
 8087fab:  mov DWORD PTR [ecx], eax
 8087fad:  jmp 8087d22
 8087fb2:  cmp eax, 0x4
 8087fb5:  jne 8087fca
 8087fb7:  mov eax, DWORD PTR [ebp-0x24]
 8087fba:  xor dl, dl
 8087fbc:  mov ebx, DWORD PTR [ebp+0x18]
 8087fbf:  mov esi, DWORD PTR [ebp+0x24]
 8087fc2:  shl eax, 0x2
 8087fc5:  add DWORD PTR [ebx], eax
 8087fc7:  add DWORD PTR [esi], 0x1
 8087fca:  mov eax, DWORD PTR [ebp-0x10]
 8087fcd:  mov ecx, DWORD PTR [ebp+0x20]
 8087fd0:  mov DWORD PTR [ecx], eax
 8087fd2:  add esp, 0x64
 8087fd5:  mov eax, edx
 8087fd7:  pop ebx
 8087fd8:  pop esi
 8087fd9:  pop edi
 8087fda:  pop ebp
 8087fdb:  ret
 8087fdc:  mov esi, DWORD PTR [ebp+0x1c]
 8087fdf:  cmp DWORD PTR [ebp-0x4c], esi
 8087fe2:  jne 8087d1d
 8087fe8:  jmp 8087dc9
 8087fed:  mov ebx, DWORD PTR [ebp+0x24]
 8087ff0:  xor dl, dl
 8087ff2:  mov esi, DWORD PTR [ebp+0x18]
 8087ff5:  add DWORD PTR [ebx], 0x1
 8087ff8:  add DWORD PTR [esi], 0x4
 8087ffb:  jmp 8087fa5
 8087ffd:  mov eax, DWORD PTR [ebp-0x1c]
 8088000:  mov ecx, DWORD PTR [ebp+0x18]
 8088003:  mov ebx, DWORD PTR [ebp+0x24]
 8088006:  add eax, 0x4
 8088009:  mov DWORD PTR [ecx], eax
 808800b:  add DWORD PTR [ebx], 0x1
 808800e:  jmp 8087d22

08088013 <_L_lock_114>:
 8088013:  lea ecx, ds:0x80d2a54
 8088019:  call 8050230
 808801e:  jmp 808798b

08088023 <_L_unlock_141>:
 8088023:  lea eax, ds:0x80d2a54
 8088029:  call 8050260
 808802e:  jmp 80879d4
 8088033:  nop
 8088034:  nop
 8088035:  nop
 8088036:  nop
 8088037:  nop
 8088038:  nop
 8088039:  nop
 808803a:  nop
 808803b:  nop
 808803c:  nop
 808803d:  nop
 808803e:  nop
 808803f:  nop

08088040 <__gconv_get_cache>:
 8088040:  push ebp
 8088041:  mov eax, ds:0x80d2a58
 8088046:  mov ebp, esp
 8088048:  pop ebp
 8088049:  ret
 808804a:  lea esi, [esi]

08088050 <__gconv_release_cache>:
 8088050:  push ebp
 8088051:  mov ebp, esp
 8088053:  sub esp, 0x4
 8088056:  mov edx, DWORD PTR ds:0x80d2a58
 808805c:  test edx, edx
 808805e:  je 8088068
 8088060:  mov DWORD PTR [esp], eax
 8088063:  call 804b4a0
 8088068:  leave
 8088069:  ret
 808806a:  lea esi, [esi]

08088070 <find_module>:
 8088070:  push ebp
 8088071:  mov ebp, esp
 8088073:  push edi
 8088074:  mov edi, ecx
 8088076:  push esi
 8088077:  push ebx
 8088078:  sub esp, 0x18
 808807b:  mov DWORD PTR [esp], eax
 808807e:  mov DWORD PTR [ebp-0x14], edx
 8088081:  mov DWORD PTR [ebp-0x10], eax
 8088084:  call 804eea0
 8088089:  mov DWORD PTR [ebp-0x18], eax
 808808c:  mov eax, DWORD PTR [ebp-0x14]
 808808f:  mov DWORD PTR [esp], eax
 8088092:  call 804eea0
 8088097:  mov edx, DWORD PTR [ebp-0x18]
 808809a:  mov esi, eax
 808809c:  add esi, 0x1
 808809f:  lea eax, [esi+edx+0x12]
 80880a3:  and eax, 0xfc
 80880a6:  sub esp, eax
 80880a8:  mov eax, DWORD PTR [ebp-0x10]
 80880ab:  lea ebx, [esp+0x1b]
 80880af:  and ebx, 0xf0
 80880b2:  mov DWORD PTR [esp+0x8], edx
 80880b6:  mov DWORD PTR [esp+0x4], eax
 80880ba:  mov DWORD PTR [esp], ebx
 80880bd:  call 806c310
 80880c2:  mov edx, DWORD PTR [ebp-0x14]
 80880c5:  mov DWORD PTR [esp+0x8], esi
 80880c9:  mov DWORD PTR [esp+0x4], edx
 80880cd:  mov DWORD PTR [esp], eax
 80880d0:  call 804efc0
 80880d5:  mov eax, ebx
 80880d7:  call 8088ae0
 80880dc:  mov edx, eax
 80880de:  test edx, edx
 80880e0:  mov DWORD PTR [edi], eax
 80880e2:  mov eax, 0x1
 80880e7:  je 8088143
 80880e9:  mov eax, DWORD PTR [edx+0xc]
 80880ec:  mov ecx, DWORD PTR [edx+0x10]
 80880ef:  mov DWORD PTR [edi+0x4], 0x0
 80880f6:  mov DWORD PTR [edi+0x18], 0x0
 80880fd:  mov DWORD PTR [edi+0x14], eax
 8088100:  mov eax, DWORD PTR [edx+0x14]
 8088103:  mov DWORD PTR [edi+0x1c], ecx
 8088106:  mov DWORD PTR [edi+0x38], 0x0
 808810d:  mov DWORD PTR [edi+0x20], eax
 8088110:  xor eax, eax
 8088112:  test ecx, ecx
 8088114:  je 8088143
 8088116:  mov ebx, ecx
 8088118:  ror ebx, 0x9
 808811b:  xor ebx, DWORD PTR gs:0x18
 8088122:  mov DWORD PTR [esp], ebx
 8088125:  call 807f350
 808812a:  mov DWORD PTR [esp], edi
 808812d:  call ebx
 808812f:  mov edx, DWORD PTR [edi+0x18]
 8088132:  test edx, edx
 8088134:  je 8088143
 8088136:  xor edx, DWORD PTR gs:0x18
 808813d:  rol edx, 0x9
 8088140:  mov DWORD PTR [edi+0x18], edx
 8088143:  lea esp, [ebp-0xc]
 8088146:  pop ebx
 8088147:  pop esi
 8088148:  pop edi
 8088149:  pop ebp
 808814a:  ret
 808814b:  nop
 808814c:  lea esi, [esi]

08088150 <__gconv_load_cache>:
 8088150:  push ebp
 8088151:  mov ebp, esp
 8088153:  add esp, 0x80
 8088156:  mov DWORD PTR [esp], 0x80b6145
 808815d:  mov DWORD PTR [ebp-0x8], ebx
 8088160:  mov DWORD PTR [ebp-0x4], esi
 8088163:  call 80562f0
 8088168:  test eax, eax
 808816a:  mov ds:0x80d2edc, eax
 808816f:  je 8088182
 8088171:  mov edx, 0xffffffff
 8088176:  mov ebx, DWORD PTR [ebp-0x8]
 8088179:  mov eax, edx
 808817b:  mov esi, DWORD PTR [ebp-0x4]
 808817e:  mov esp, ebp
 8088180:  pop ebp
 8088181:  ret
 8088182:  mov DWORD PTR [esp+0x8], 0x0
 808818a:  mov DWORD PTR [esp+0x4], 0x0
 8088192:  mov DWORD PTR [esp], 0x80b6150
 8088199:  call 804f1fa
 808819e:  cmp eax, 0xff
 80881a1:  mov esi, eax
 80881a3:  je 8088171
 80881a5:  lea eax, [ebp-0x68]
 80881a8:  mov DWORD PTR [esp+0x8], eax
 80881ac:  mov DWORD PTR [esp+0x4], esi
 80881b0:  mov DWORD PTR [esp], 0x3
 80881b7:  call 804f1b0
 80881bc:  test eax, eax
 80881be:  js 80881c8
 80881c0:  mov eax, DWORD PTR [ebp-0x3c]
 80881c3:  cmp eax, 0xf
 80881c6:  ja 80881d8
 80881c8:  mov ebx, esi
 80881ca:  mov eax, 0x6
 80881cf:  int 0x80
 80881d1:  mov edx, 0xffffffff
 80881d6:  jmp 8088176
 80881d8:  mov ds:0x80d2a5c, eax
 80881dd:  mov DWORD PTR [esp+0x14], 0x0
 80881e5:  mov DWORD PTR [esp+0x10], esi
 80881e9:  mov DWORD PTR [esp+0xc], 0x1
 80881f1:  mov DWORD PTR [esp+0x8], 0x1
 80881f9:  mov DWORD PTR [esp+0x4], eax
 80881fd:  mov DWORD PTR [esp], 0x0
 8088204:  call 8050000
 8088209:  mov ds:0x80d2a58, eax
 808820e:  add eax, 0x1
 8088211:  je 80882a1
 8088217:  mov ebx, esi
 8088219:  mov eax, 0x6
 808821e:  int 0x80
 8088220:  mov ecx, DWORD PTR ds:0x80d2a58
 8088226:  cmp DWORD PTR [ecx], 0x20010324
 808822c:  jne 808826d
 808822e:  mov ebx, DWORD PTR ds:0x80d2a5c
 8088234:  movzx eax, WORD PTR [ecx+0x4]
 8088238:  cmp eax, ebx
 808823a:  jae 808826d
 808823c:  movzx edx, WORD PTR [ecx+0x6]
 8088240:  cmp ebx, edx
 8088242:  jbe 808826d
 8088244:  movzx eax, WORD PTR [ecx+0x8]
 8088248:  test ax, ax
 808824b:  je 808826d
 808824d:  movzx eax, ax
 8088250:  lea eax, [edx+eax*4]
 8088253:  cmp ebx, eax
 8088255:  jb 808826d
 8088257:  movzx eax, WORD PTR [ecx+0xa]
 808825b:  cmp ebx, eax
 808825d:  jbe 808826d
 808825f:  movzx eax, WORD PTR [ecx+0xc]
 8088263:  xor edx, edx
 8088265:  cmp ebx, eax
 8088267:  jae 8088176
 808826d:  mov ebx, DWORD PTR ds:0x80d2a60
 8088273:  test ebx, ebx
 8088275:  je 808830a
 808827b:  mov DWORD PTR [esp], ecx
 808827e:  call 804b4a0
 8088283:  mov DWORD PTR ds:0x80d2a60, 0x0
 808828d:  mov DWORD PTR ds:0x80d2a58, 0x0
 8088297:  mov edx, 0xffffffff
 808829c:  jmp 8088176
 80882a1:  mov eax, ds:0x80d2a5c
 80882a6:  mov DWORD PTR [esp], eax
 80882a9:  call 804d6f0
 80882ae:  test eax, eax
 80882b0:  mov ds:0x80d2a58, eax
 80882b5:  je 80881c8
 80882bb:  xor ebx, ebx
 80882bd:  jmp 80882ca
 80882bf:  nop
 80882c0:  add ebx, eax
 80882c2:  cmp ebx, DWORD PTR ds:0x80d2a5c
 80882c8:  jae 8088320
 80882ca:  mov eax, ds:0x80d2a5c
 80882cf:  mov DWORD PTR [esp], esi
 80882d2:  sub eax, ebx
 80882d4:  mov DWORD PTR [esp+0x8], eax
 80882d8:  mov eax, ebx
 80882da:  add eax, DWORD PTR ds:0x80d2a58
 80882e0:  mov DWORD PTR [esp+0x4], eax
 80882e4:  call 804f250
 80882e9:  cmp eax, 0xff
 80882ec:  jne 80882c0
 80882ee:  mov eax, ds:0x80d2a58
 80882f3:  mov DWORD PTR [esp], eax
 80882f6:  call 804b4a0
 80882fb:  mov DWORD PTR ds:0x80d2a58, 0x0
 8088305:  jmp 80881c8
 808830a:  mov eax, ds:0x80d2a5c
 808830f:  mov DWORD PTR [esp], ecx
 8088312:  mov DWORD PTR [esp+0x4], eax
 8088316:  call 8050050
 808831b:  jmp 808828d
 8088320:  mov DWORD PTR ds:0x80d2a60, 0x1
 808832a:  jmp 8088217
 808832f:  nop

08088330 <__gconv_lookup_cache>:
 8088330:  push ebp
 8088331:  mov ebp, esp
 8088333:  push edi
 8088334:  push esi
 8088335:  push ebx
 8088336:  mov ebx, 0x2
 808833b:  sub esp, 0x68
 808833e:  mov DWORD PTR [ebp-0x58], eax
 8088341:  mov eax, ds:0x80d2a58
 8088346:  mov DWORD PTR [ebp-0x5c], edx
 8088349:  mov DWORD PTR [ebp-0x60], ecx
 808834c:  test eax, eax
 808834e:  mov DWORD PTR [ebp-0x54], eax
 8088351:  je 8088640
 8088357:  mov edx, eax
 8088359:  movzx eax, WORD PTR [eax+0x4]
 808835d:  movzx ecx, WORD PTR [edx+0xa]
 8088361:  mov ebx, DWORD PTR [ebp-0x5c]
 8088364:  add eax, edx
 8088366:  mov DWORD PTR [ebp-0x4c], eax
 8088369:  movzx eax, WORD PTR [edx+0x6]
 808836d:  mov WORD PTR [ebp-0x4e], cx
 8088371:  add eax, edx
 8088373:  mov DWORD PTR [ebp-0x2c], eax
 8088376:  mov DWORD PTR [esp], ebx
 8088379:  call 8055960
 808837e:  xor edx, edx
 8088380:  mov esi, eax
 8088382:  mov eax, DWORD PTR [ebp-0x54]
 8088385:  movzx eax, WORD PTR [eax+0x8]
 8088389:  mov DWORD PTR [ebp-0x24], eax
 808838c:  mov eax, esi
 808838e:  div DWORD PTR [ebp-0x24]
 8088391:  mov eax, esi
 8088393:  mov esi, DWORD PTR ds:0x80d2a5c
 8088399:  mov DWORD PTR [ebp-0x28], esi
 808839c:  mov ecx, edx
 808839e:  mov edx, DWORD PTR [ebp-0x24]
 80883a1:  sub edx, 0x2
 80883a4:  mov ebx, edx
 80883a6:  xor edx, edx
 80883a8:  div ebx
 80883aa:  lea edi, [edx+0x1]
 80883ad:  mov edx, DWORD PTR [ebp-0x54]
 80883b0:  lea ebx, [edi*4]
 80883b7:  mov DWORD PTR [ebp-0x6c], ebx
 80883ba:  movzx eax, WORD PTR [edx+0x4]
 80883be:  sub esi, eax
 80883c0:  mov DWORD PTR [ebp-0x30], esi
 80883c3:  mov eax, DWORD PTR [ebp-0x2c]
 80883c6:  lea esi, [edi+ecx]
 80883c9:  lea ebx, [eax+ecx*4]
 80883cc:  jmp 80883e5
 80883ce:  xchg ax, ax
 80883d0:  lea edx, [esi+edi]
 80883d3:  mov eax, edx
 80883d5:  add ebx, DWORD PTR [ebp-0x6c]
 80883d8:  sub eax, edi
 80883da:  cmp eax, DWORD PTR [ebp-0x24]
 80883dd:  jae 8088650
 80883e3:  mov esi, edx
 80883e5:  movzx eax, WORD PTR [ebx]
 80883e8:  test ax, ax
 80883eb:  je 8088668
 80883f1:  movzx eax, ax
 80883f4:  cmp DWORD PTR [ebp-0x30], eax
 80883f7:  jbe 80883d0
 80883f9:  add eax, DWORD PTR [ebp-0x4c]
 80883fc:  mov DWORD PTR [esp+0x4], eax
 8088400:  mov eax, DWORD PTR [ebp-0x5c]
 8088403:  mov DWORD PTR [esp], eax
 8088406:  call 806af90
 808840b:  test eax, eax
 808840d:  jne 80883d0
 808840f:  mov ecx, DWORD PTR [ebp-0x54]
 8088412:  movzx ebx, WORD PTR [ebx+0x2]
 8088416:  movzx edx, WORD PTR [ecx+0xa]
 808841a:  lea eax, [ebx+ebx*2+0x3]
 808841e:  mov DWORD PTR [ebp-0x48], ebx
 8088421:  lea eax, [edx+eax*4]
 8088424:  cmp eax, DWORD PTR [ebp-0x28]
 8088427:  ja 8088668
 808842d:  mov ebx, DWORD PTR ds:0x80d2a58
 8088433:  mov edx, DWORD PTR [ebp-0x58]
 8088436:  movzx eax, WORD PTR [ebx+0x4]
 808843a:  lea eax, [ebx+eax]
 808843d:  mov DWORD PTR [ebp-0x18], eax
 8088440:  movzx eax, WORD PTR [ebx+0x6]
 8088444:  lea eax, [ebx+eax]
 8088447:  mov DWORD PTR [ebp-0x1c], eax
 808844a:  mov DWORD PTR [esp], edx
 808844d:  call 8055960
 8088452:  movzx ecx, WORD PTR [ebx+0x8]
 8088456:  xor edx, edx
 8088458:  mov DWORD PTR [ebp-0x10], ecx
 808845b:  mov edi, eax
 808845d:  div ecx
 808845f:  mov eax, edi
 8088461:  mov ecx, edx
 8088463:  mov edx, DWORD PTR [ebp-0x10]
 8088466:  sub edx, 0x2
 8088469:  mov esi, edx
 808846b:  xor edx, edx
 808846d:  div esi
 808846f:  mov eax, ds:0x80d2a5c
 8088474:  mov DWORD PTR [ebp-0x14], eax
 8088477:  movzx eax, WORD PTR [ebx+0x4]
 808847b:  lea edi, [edx+0x1]
 808847e:  mov edx, DWORD PTR [ebp-0x14]
 8088481:  lea ebx, [edi*4]
 8088488:  mov DWORD PTR [ebp-0x68], ebx
 808848b:  sub edx, eax
 808848d:  mov DWORD PTR [ebp-0x20], edx
 8088490:  mov eax, DWORD PTR [ebp-0x1c]
 8088493:  lea esi, [ecx+edi]
 8088496:  lea ebx, [eax+ecx*4]
 8088499:  jmp 80884b5
 808849b:  nop
 808849c:  lea esi, [esi]
 80884a0:  lea edx, [esi+edi]
 80884a3:  mov eax, edx
 80884a5:  add ebx, DWORD PTR [ebp-0x68]
 80884a8:  sub eax, edi
 80884aa:  cmp eax, DWORD PTR [ebp-0x10]
 80884ad:  jae 8088680
 80884b3:  mov esi, edx
 80884b5:  movzx eax, WORD PTR [ebx]
 80884b8:  test ax, ax
 80884bb:  je 8088668
 80884c1:  movzx eax, ax
 80884c4:  cmp DWORD PTR [ebp-0x20], eax
 80884c7:  jbe 80884a0
 80884c9:  add eax, DWORD PTR [ebp-0x18]
 80884cc:  mov DWORD PTR [esp+0x4], eax
 80884d0:  mov eax, DWORD PTR [ebp-0x58]
 80884d3:  mov DWORD PTR [esp], eax
 80884d6:  call 806af90
 80884db:  test eax, eax
 80884dd:  jne 80884a0
 80884df:  mov ecx, DWORD PTR [ebp-0x54]
 80884e2:  movzx ebx, WORD PTR [ebx+0x2]
 80884e6:  movzx edx, WORD PTR [ecx+0xa]
 80884ea:  lea eax, [ebx+ebx*2+0x3]
 80884ee:  mov DWORD PTR [ebp-0x44], ebx
 80884f1:  lea eax, [edx+eax*4]
 80884f4:  cmp eax, DWORD PTR [ebp-0x14]
 80884f7:  ja 8088668
 80884fd:  test BYTE PTR [ebp+0xc], 0x1
 8088501:  jne 80887b8
 8088507:  movzx eax, WORD PTR [ebp-0x4e]
 808850b:  add eax, DWORD PTR [ebp-0x54]
 808850e:  mov ecx, DWORD PTR [ebp-0x48]
 8088511:  mov DWORD PTR [ebp-0x40], eax
 8088514:  mov ebx, DWORD PTR [ebp-0x40]
 8088517:  lea eax, [ecx+ecx*2]
 808851a:  test ecx, ecx
 808851c:  lea eax, [ebx+eax*4]
 808851f:  mov DWORD PTR [ebp-0x3c], eax
 8088522:  je 808853d
 8088524:  mov edx, DWORD PTR [ebp-0x44]
 8088527:  test edx, edx
 8088529:  jne 808873f
 808852f:  mov ecx, DWORD PTR [ebp-0x3c]
 8088532:  cmp WORD PTR [ecx+0x4], 0x0
 8088537:  je 8088668
 808853d:  mov ebx, DWORD PTR [ebp-0x44]
 8088540:  mov esi, DWORD PTR [ebp-0x40]
 8088543:  lea eax, [ebx+ebx*2]
 8088546:  test ebx, ebx
 8088548:  lea edi, [esi+eax*4]
 808854b:  jne 808865a
 8088551:  mov eax, DWORD PTR [ebp-0x48]
 8088554:  test eax, eax
 8088556:  jne 8088563
 8088558:  mov eax, DWORD PTR [ebp-0x44]
 808855b:  test eax, eax
 808855d:  je 8088668
 8088563:  mov DWORD PTR [esp], 0x78
 808856a:  call 804d6f0
 808856f:  test eax, eax
 8088571:  mov esi, eax
 8088573:  je 80887ae
 8088579:  mov eax, DWORD PTR [ebp-0x60]
 808857c:  xor ebx, ebx
 808857e:  mov edx, DWORD PTR [ebp+0x8]
 8088581:  mov DWORD PTR [eax], esi
 8088583:  mov eax, DWORD PTR [ebp-0x48]
 8088586:  mov DWORD PTR [edx], 0x0
 808858c:  test eax, eax
 808858e:  je 80885e3
 8088590:  mov ecx, DWORD PTR [ebp-0x3c]
 8088593:  mov DWORD PTR [esi+0x10], 0x80b5649
 808859a:  mov DWORD PTR [esi+0x8], 0x1
 80885a1:  mov DWORD PTR [esi+0x38], 0x0
 80885a8:  movzx eax, WORD PTR [ecx]
 80885ab:  add eax, DWORD PTR [ebp-0x4c]
 80885ae:  mov DWORD PTR [esi+0xc], eax
 80885b1:  movzx eax, WORD PTR [ecx+0x6]
 80885b5:  add eax, DWORD PTR [ebp-0x4c]
 80885b8:  cmp BYTE PTR [eax], 0x0
 80885bb:  je 8088798
 80885c1:  movzx edx, WORD PTR [ecx+0x8]
 80885c5:  mov ecx, esi
 80885c7:  add edx, DWORD PTR [ebp-0x4c]
 80885ca:  call 8088070
 80885cf:  test eax, eax
 80885d1:  mov ebx, eax
 80885d3:  jne 80887f4
 80885d9:  mov edx, DWORD PTR [ebp+0x8]
 80885dc:  mov eax, DWORD PTR [edx]
 80885de:  lea ebx, [eax+0x1]
 80885e1:  mov DWORD PTR [edx], ebx
 80885e3:  mov eax, DWORD PTR [ebp-0x44]
 80885e6:  test eax, eax
 80885e8:  je 8088725
 80885ee:  imul eax, ebx, 0x3c
 80885f1:  lea ecx, [esi+eax]
 80885f4:  movzx eax, WORD PTR [edi]
 80885f7:  add eax, DWORD PTR [ebp-0x4c]
 80885fa:  mov DWORD PTR [ecx+0xc], 0x80b5649
 8088601:  mov DWORD PTR [ecx+0x8], 0x1
 8088608:  mov DWORD PTR [ecx+0x10], eax
 808860b:  movzx eax, WORD PTR [edi+0x2]
 808860f:  add eax, DWORD PTR [ebp-0x4c]
 8088612:  mov DWORD PTR [ecx+0x38], 0x0
 8088619:  cmp BYTE PTR [eax], 0x0
 808861c:  je 808872c
 8088622:  movzx edx, WORD PTR [edi+0x4]
 8088626:  add edx, DWORD PTR [ebp-0x4c]
 8088629:  call 8088070
 808862e:  test eax, eax
 8088630:  mov edi, eax
 8088632:  jne 80887d5
 8088638:  mov ecx, DWORD PTR [ebp+0x8]
 808863b:  xor ebx, ebx
 808863d:  add DWORD PTR [ecx], 0x1
 8088640:  add esp, 0x68
 8088643:  mov eax, ebx
 8088645:  pop ebx
 8088646:  pop esi
 8088647:  pop edi
 8088648:  pop ebp
 8088649:  ret 0x8
 808864c:  lea esi, [esi]
 8088650:  mov ecx, esi
 8088652:  sub ecx, DWORD PTR [ebp-0x24]
 8088655:  jmp 80883c3
 808865a:  cmp WORD PTR [edi+0x8], 0x0
 808865f:  jne 8088551
 8088665:  lea esi, [esi]
 8088668:  mov ebx, 0x1
 808866d:  add esp, 0x68
 8088670:  mov eax, ebx
 8088672:  pop ebx
 8088673:  pop esi
 8088674:  pop edi
 8088675:  pop ebp
 8088676:  ret 0x8
 8088679:  lea esi, [esi]
 8088680:  mov ecx, esi
 8088682:  sub ecx, DWORD PTR [ebp-0x10]
 8088685:  jmp 8088490
 808868a:  mov ebx, DWORD PTR [ebp+0x8]
 808868d:  imul eax, edx, 0x3c
 8088690:  mov DWORD PTR [ebx], edx
 8088692:  mov DWORD PTR [esp], eax
 8088695:  call 804d6f0
 808869a:  mov edx, DWORD PTR [ebp-0x60]
 808869d:  test eax, eax
 808869f:  mov DWORD PTR [ebp-0x64], eax
 80886a2:  mov DWORD PTR [edx], eax
 80886a4:  je 80887ae
 80886aa:  mov ebx, DWORD PTR [ebp-0x3c]
 80886ad:  lea edi, [esi+0x2]
 80886b0:  mov DWORD PTR [ebp-0x34], 0x0
 80886b7:  movzx eax, WORD PTR [ebx]
 80886ba:  add eax, DWORD PTR [ebp-0x4c]
 80886bd:  mov ebx, DWORD PTR [ebp-0x64]
 80886c0:  mov DWORD PTR [ebp-0x38], eax
 80886c3:  mov eax, DWORD PTR [ebp-0x38]
 80886c6:  mov edx, DWORD PTR [ebp-0x40]
 80886c9:  mov DWORD PTR [ebx+0x8], 0x1
 80886d0:  mov DWORD PTR [ebx+0x38], 0x0
 80886d7:  mov DWORD PTR [ebx+0xc], eax
 80886da:  movzx eax, WORD PTR [edi]
 80886dd:  lea eax, [eax+eax*2]
 80886e0:  movzx eax, WORD PTR [edx+eax*4]
 80886e4:  add eax, DWORD PTR [ebp-0x4c]
 80886e7:  mov DWORD PTR [ebp-0x38], eax
 80886ea:  mov DWORD PTR [ebx+0x10], eax
 80886ed:  movzx eax, WORD PTR [edi+0x2]
 80886f1:  add eax, DWORD PTR [ebp-0x4c]
 80886f4:  cmp BYTE PTR [eax], 0x0
 80886f7:  je 8088805
 80886fd:  movzx edx, WORD PTR [edi+0x4]
 8088701:  mov ecx, ebx
 8088703:  add edx, DWORD PTR [ebp-0x4c]
 8088706:  call 8088070
 808870b:  test eax, eax
 808870d:  jne 808881d
 8088713:  add DWORD PTR [ebp-0x34], 0x1
 8088717:  add edi, 0x6
 808871a:  movzx eax, WORD PTR [esi]
 808871d:  add ebx, 0x3c
 8088720:  cmp DWORD PTR [ebp-0x34], eax
 8088723:  jl 80886c3
 8088725:  xor ebx, ebx
 8088727:  jmp 8088640
 808872c:  movzx eax, WORD PTR [edi+0x4]
 8088730:  mov edx, ecx
 8088732:  add eax, DWORD PTR [ebp-0x4c]
 8088735:  call 8081fa0
 808873a:  jmp 8088638
 808873f:  movzx eax, WORD PTR [eax+0xa]
 8088743:  test ax, ax
 8088746:  je 808852f
 808874c:  mov ecx, DWORD PTR [ebp-0x54]
 808874f:  movzx eax, ax
 8088752:  movzx edx, WORD PTR [ecx+0xc]
 8088756:  lea esi, [edx+eax-0x1]
 808875a:  add esi, DWORD PTR ds:0x80d2a58
 8088760:  movzx eax, WORD PTR [esi]
 8088763:  test ax, ax
 8088766:  je 808852f
 808876c:  movzx edx, ax
 808876f:  lea eax, [edx+edx*2-0x3]
 8088773:  movzx eax, WORD PTR [esi+eax*2+0x2]
 8088778:  cmp eax, DWORD PTR [ebp-0x44]
 808877b:  je 808868a
 8088781:  lea eax, [edx+edx*2+0x1]
 8088785:  lea esi, [esi+eax*2]
 8088788:  movzx eax, WORD PTR [esi]
 808878b:  test ax, ax
 808878e:  jne 808876c
 8088790:  jmp 808852f
 8088795:  lea esi, [esi]
 8088798:  mov ebx, DWORD PTR [ebp-0x3c]
 808879b:  mov edx, esi
 808879d:  movzx eax, WORD PTR [ebx+0x8]
 80887a1:  add eax, DWORD PTR [ebp-0x4c]
 80887a4:  call 8081fa0
 80887a9:  jmp 80885d9
 80887ae:  mov ebx, 0x3
 80887b3:  jmp 8088640
 80887b8:  mov edx, DWORD PTR [ebp-0x44]
 80887bb:  mov ebx, 0xffffffff
 80887c0:  cmp DWORD PTR [ebp-0x48], edx
 80887c3:  nop
 80887c4:  lea esi, [esi]
 80887c8:  jne 8088507
 80887ce:  xchg ax, ax
 80887d0:  jmp 8088640
 80887d5:  test ebx, ebx
 80887d7:  nop
 80887d8:  je 80887e5
 80887da:  mov eax, esi
 80887dc:  lea esi, [esi]
 80887e0:  call 80803a0
 80887e5:  mov DWORD PTR [esp], esi
 80887e8:  mov ebx, edi
 80887ea:  call 804b4a0
 80887ef:  jmp 8088640
 80887f4:  mov DWORD PTR [esp], esi
 80887f7:  call 804b4a0
 80887fc:  lea esi, [esi]
 8088800:  jmp 8088640
 8088805:  movzx eax, WORD PTR [edi+0x4]
 8088809:  mov edx, ebx
 808880b:  add eax, DWORD PTR [ebp-0x4c]
 808880e:  call 8081fa0
 8088813:  nop
 8088814:  lea esi, [esi]
 8088818:  jmp 8088713
 808881d:  mov ecx, DWORD PTR [ebp-0x64]
 8088820:  mov DWORD PTR [esp], ecx
 8088823:  call 804b4a0
 8088828:  jmp 808852f
 808882d:  lea esi, [esi]

08088830 <__gconv_compare_alias_cache>:
 8088830:  push ebp
 8088831:  mov ebp, esp
 8088833:  push edi
 8088834:  push esi
 8088835:  push ebx
 8088836:  sub esp, 0x40
 8088839:  mov ebx, DWORD PTR ds:0x80d2a58
 808883f:  mov DWORD PTR [ebp-0x34], eax
 8088842:  mov eax, 0xffffffff
 8088847:  mov DWORD PTR [ebp-0x38], edx
 808884a:  mov DWORD PTR [ebp-0x3c], ecx
 808884d:  test ebx, ebx
 808884f:  je 80889c0
 8088855:  movzx eax, WORD PTR [ebx+0x4]
 8088859:  lea eax, [ebx+eax]
 808885c:  mov DWORD PTR [ebp-0x28], eax
 808885f:  movzx eax, WORD PTR [ebx+0x6]
 8088863:  lea eax, [ebx+eax]
 8088866:  mov DWORD PTR [ebp-0x2c], eax
 8088869:  mov eax, DWORD PTR [ebp-0x34]
 808886c:  mov DWORD PTR [esp], eax
 808886f:  call 8055960
 8088874:  movzx edx, WORD PTR [ebx+0x8]
 8088878:  mov DWORD PTR [ebp-0x20], edx
 808887b:  xor edx, edx
 808887d:  mov edi, eax
 808887f:  div DWORD PTR [ebp-0x20]
 8088882:  mov eax, edi
 8088884:  mov ecx, edx
 8088886:  mov edx, DWORD PTR [ebp-0x20]
 8088889:  sub edx, 0x2
 808888c:  mov esi, edx
 808888e:  xor edx, edx
 8088890:  div esi
 8088892:  movzx eax, WORD PTR [ebx+0x4]
 8088896:  lea edi, [edx+0x1]
 8088899:  mov edx, DWORD PTR ds:0x80d2a5c
 808889f:  lea esi, [edi*4]
 80888a6:  mov DWORD PTR [ebp-0x44], esi
 80888a9:  sub edx, eax
 80888ab:  mov DWORD PTR [ebp-0x30], edx
 80888ae:  mov eax, DWORD PTR [ebp-0x2c]
 80888b1:  lea esi, [edi+ecx]
 80888b4:  lea ebx, [eax+ecx*4]
 80888b7:  jmp 80888d5
 80888b9:  lea esi, [esi]
 80888c0:  lea edx, [esi+edi]
 80888c3:  mov eax, edx
 80888c5:  add ebx, DWORD PTR [ebp-0x44]
 80888c8:  sub eax, edi
 80888ca:  cmp eax, DWORD PTR [ebp-0x20]
 80888cd:  jae 80889c8
 80888d3:  mov esi, edx
 80888d5:  movzx eax, WORD PTR [ebx]
 80888d8:  test ax, ax
 80888db:  je 80889d8
 80888e1:  movzx eax, ax
 80888e4:  cmp DWORD PTR [ebp-0x30], eax
 80888e7:  jbe 80888c0
 80888e9:  add eax, DWORD PTR [ebp-0x28]
 80888ec:  mov DWORD PTR [esp+0x4], eax
 80888f0:  mov eax, DWORD PTR [ebp-0x34]
 80888f3:  mov DWORD PTR [esp], eax
 80888f6:  call 806af90
 80888fb:  test eax, eax
 80888fd:  jne 80888c0
 80888ff:  movzx ebx, WORD PTR [ebx+0x2]
 8088903:  mov edx, DWORD PTR [ebp-0x38]
 8088906:  mov WORD PTR [ebp-0x22], bx
 808890a:  mov ebx, DWORD PTR ds:0x80d2a58
 8088910:  movzx eax, WORD PTR [ebx+0x4]
 8088914:  lea eax, [ebx+eax]
 8088917:  mov DWORD PTR [ebp-0x14], eax
 808891a:  movzx eax, WORD PTR [ebx+0x6]
 808891e:  lea eax, [ebx+eax]
 8088921:  mov DWORD PTR [ebp-0x18], eax
 8088924:  mov DWORD PTR [esp], edx
 8088927:  call 8055960
 808892c:  movzx esi, WORD PTR [ebx+0x8]
 8088930:  xor edx, edx
 8088932:  mov DWORD PTR [ebp-0x10], esi
 8088935:  mov edi, eax
 8088937:  div esi
 8088939:  mov eax, edi
 808893b:  mov ecx, edx
 808893d:  mov edx, esi
 808893f:  sub edx, 0x2
 8088942:  mov esi, edx
 8088944:  xor edx, edx
 8088946:  div esi
 8088948:  movzx eax, WORD PTR [ebx+0x4]
 808894c:  lea edi, [edx+0x1]
 808894f:  mov edx, DWORD PTR ds:0x80d2a5c
 8088955:  lea esi, [edi*4]
 808895c:  mov DWORD PTR [ebp-0x40], esi
 808895f:  sub edx, eax
 8088961:  mov DWORD PTR [ebp-0x1c], edx
 8088964:  lea esi, [esi]
 8088968:  mov eax, DWORD PTR [ebp-0x18]
 808896b:  lea esi, [ecx+edi]
 808896e:  lea ebx, [eax+ecx*4]
 8088971:  jmp 8088989
 8088973:  nop
 8088974:  lea esi, [esi]
 8088978:  lea edx, [esi+edi]
 808897b:  mov eax, edx
 808897d:  add ebx, DWORD PTR [ebp-0x40]
 8088980:  sub eax, edi
 8088982:  cmp eax, DWORD PTR [ebp-0x10]
 8088985:  jae 8088a00
 8088987:  mov esi, edx
 8088989:  movzx eax, WORD PTR [ebx]
 808898c:  test ax, ax
 808898f:  je 80889d8
 8088991:  movzx eax, ax
 8088994:  cmp DWORD PTR [ebp-0x1c], eax
 8088997:  jbe 8088978
 8088999:  add eax, DWORD PTR [ebp-0x14]
 808899c:  mov DWORD PTR [esp+0x4], eax
 80889a0:  mov edx, DWORD PTR [ebp-0x38]
 80889a3:  mov DWORD PTR [esp], edx
 80889a6:  call 806af90
 80889ab:  test eax, eax
 80889ad:  jne 8088978
 80889af:  movzx eax, WORD PTR [ebp-0x22]
 80889b3:  movzx edx, WORD PTR [ebx+0x2]
 80889b7:  mov esi, DWORD PTR [ebp-0x3c]
 80889ba:  sub eax, edx
 80889bc:  mov DWORD PTR [esi], eax
 80889be:  xor eax, eax
 80889c0:  add esp, 0x40
 80889c3:  pop ebx
 80889c4:  pop esi
 80889c5:  pop edi
 80889c6:  pop ebp
 80889c7:  ret
 80889c8:  mov ecx, esi
 80889ca:  sub ecx, DWORD PTR [ebp-0x20]
 80889cd:  jmp 80888ae
 80889d2:  lea esi, [esi]
 80889d8:  mov edx, DWORD PTR [ebp-0x38]
 80889db:  mov DWORD PTR [esp+0x4], edx
 80889df:  mov esi, DWORD PTR [ebp-0x34]
 80889e2:  mov DWORD PTR [esp], esi
 80889e5:  call 806af90
 80889ea:  mov edx, DWORD PTR [ebp-0x3c]
 80889ed:  mov DWORD PTR [edx], eax
 80889ef:  add esp, 0x40
 80889f2:  xor eax, eax
 80889f4:  pop ebx
 80889f5:  pop esi
 80889f6:  pop edi
 80889f7:  pop ebp
 80889f8:  ret
 80889f9:  lea esi, [esi]
 8088a00:  mov ecx, esi
 8088a02:  sub ecx, DWORD PTR [ebp-0x10]
 8088a05:  jmp 8088968
 8088a0a:  nop
 8088a0b:  nop
 8088a0c:  nop
 8088a0d:  nop
 8088a0e:  nop
 8088a0f:  nop

08088a10 <__gconv_release_shlib>:
 8088a10:  push ebp
 8088a11:  mov ebp, esp
 8088a13:  sub esp, 0x8
 8088a16:  mov ds:0x80d2a68, eax
 8088a1b:  mov eax, ds:0x80d2a64
 8088a20:  mov DWORD PTR [esp+0x4], 0x8088a40
 8088a28:  mov DWORD PTR [esp], eax
 8088a2b:  call 8073810
 8088a30:  leave
 8088a31:  ret
 8088a32:  lea esi, [esi]
 8088a39:  lea edi, [edi]

08088a40 <do_release_shlib>:
 8088a40:  push ebp
 8088a41:  mov ebp, esp
 8088a43:  push ebx
 8088a44:  sub esp, 0x10
 8088a47:  mov edx, DWORD PTR [ebp+0xc]
 8088a4a:  mov eax, DWORD PTR [ebp+0x8]
 8088a4d:  test edx, edx
 8088a4f:  mov ebx, DWORD PTR [eax]
 8088a51:  je 8088a60
 8088a53:  cmp edx, 0x3
 8088a56:  je 8088a60
 8088a58:  add esp, 0x10
 8088a5b:  pop ebx
 8088a5c:  pop ebp
 8088a5d:  ret
 8088a5e:  xchg ax, ax
 8088a60:  cmp ebx, DWORD PTR ds:0x80d2a68
 8088a66:  je 8088aa0
 8088a68:  mov edx, DWORD PTR [ebx+0x4]
 8088a6b:  lea eax, [edx+0x2]
 8088a6e:  cmp eax, 0x2
 8088a71:  ja 8088a58
 8088a73:  lea eax, [edx-0x1]
 8088a76:  cmp eax, 0xfe
 8088a79:  mov DWORD PTR [ebx+0x4], eax
 8088a7c:  jge 8088a58
 8088a7e:  mov eax, DWORD PTR [ebx+0x8]
 8088a81:  test eax, eax
 8088a83:  je 8088a58
 8088a85:  mov DWORD PTR [esp], eax
 8088a88:  call 8098f50
 8088a8d:  mov DWORD PTR [ebx+0x8], 0x0
 8088a94:  add esp, 0x10
 8088a97:  pop ebx
 8088a98:  pop ebp
 8088a99:  ret
 8088a9a:  lea esi, [esi]
 8088aa0:  mov eax, DWORD PTR [ebx+0x4]
 8088aa3:  test eax, eax
 8088aa5:  jle 8088aaf
 8088aa7:  sub eax, 0x1
 8088aaa:  mov DWORD PTR [ebx+0x4], eax
 8088aad:  jmp 8088a58
 8088aaf:  mov DWORD PTR [esp+0xc], 0x80b61c1
 8088ab7:  mov DWORD PTR [esp+0x8], 0xaf
 8088abf:  mov DWORD PTR [esp+0x4], 0x80b6173
 8088ac7:  mov DWORD PTR [esp], 0x80b617e
 8088ace:  call 8051490
 8088ad3:  lea esi, [esi]
 8088ad9:  lea edi, [edi]

08088ae0 <__gconv_find_shlib>:
 8088ae0:  push ebp
 8088ae1:  mov ebp, esp
 8088ae3:  push esi
 8088ae4:  push ebx
 8088ae5:  sub esp, 0x14
 8088ae8:  mov DWORD PTR [ebp-0xc], eax
 8088aeb:  lea eax, [ebp-0xc]
 8088aee:  mov DWORD PTR [esp+0x8], 0x8088cd0
 8088af6:  mov DWORD PTR [esp+0x4], 0x80d2a64
 8088afe:  mov DWORD PTR [esp], eax
 8088b01:  call 80736f0
 8088b06:  test eax, eax
 8088b08:  je 8088c30
 8088b0e:  mov ebx, DWORD PTR [eax]
 8088b10:  test ebx, ebx
 8088b12:  je 8088bd2
 8088b18:  mov eax, DWORD PTR [ebx+0x4]
 8088b1b:  cmp eax, 0xfe
 8088b1e:  jge 8088be0
 8088b24:  mov ecx, DWORD PTR [ebx+0x8]
 8088b27:  test ecx, ecx
 8088b29:  jne 8088ca5
 8088b2f:  mov DWORD PTR [esp+0x4], 0x80000001
 8088b37:  mov eax, DWORD PTR [ebx]
 8088b39:  mov DWORD PTR [esp], eax
 8088b3c:  call 8099030
 8088b41:  test eax, eax
 8088b43:  mov DWORD PTR [ebx+0x8], eax
 8088b46:  je 8088c20
 8088b4c:  mov DWORD PTR [esp+0x4], 0x80b544e
 8088b54:  mov DWORD PTR [esp], eax
 8088b57:  call 8099140
 8088b5c:  test eax, eax
 8088b5e:  mov DWORD PTR [ebx+0xc], eax
 8088b61:  je 8088bff
 8088b67:  mov DWORD PTR [esp+0x4], 0x80b61ac
 8088b6f:  mov eax, DWORD PTR [ebx+0x8]
 8088b72:  mov DWORD PTR [esp], eax
 8088b75:  call 8099140
 8088b7a:  mov DWORD PTR [ebx+0x10], eax
 8088b7d:  mov DWORD PTR [esp+0x4], 0x80b61b7
 8088b85:  mov eax, DWORD PTR [ebx+0x8]
 8088b88:  mov DWORD PTR [esp], eax
 8088b8b:  call 8099140
 8088b90:  mov DWORD PTR [ebx+0x14], eax
 8088b93:  mov eax, DWORD PTR [ebx+0xc]
 8088b96:  xor eax, DWORD PTR gs:0x18
 8088b9d:  rol eax, 0x9
 8088ba0:  mov DWORD PTR [ebx+0xc], eax
 8088ba3:  mov eax, DWORD PTR [ebx+0x10]
 8088ba6:  test eax, eax
 8088ba8:  je 8088bb7
 8088baa:  xor eax, DWORD PTR gs:0x18
 8088bb1:  rol eax, 0x9
 8088bb4:  mov DWORD PTR [ebx+0x10], eax
 8088bb7:  mov eax, DWORD PTR [ebx+0x14]
 8088bba:  test eax, eax
 8088bbc:  je 8088bcb
 8088bbe:  xor eax, DWORD PTR gs:0x18
 8088bc5:  rol eax, 0x9
 8088bc8:  mov DWORD PTR [ebx+0x14], eax
 8088bcb:  mov DWORD PTR [ebx+0x4], 0x1
 8088bd2:  add esp, 0x14
 8088bd5:  mov eax, ebx
 8088bd7:  pop ebx
 8088bd8:  pop esi
 8088bd9:  pop ebp
 8088bda:  ret
 8088bdb:  nop
 8088bdc:  lea esi, [esi]
 8088be0:  mov edx, DWORD PTR [ebx+0x8]
 8088be3:  test edx, edx
 8088be5:  je 8088bd2
 8088be7:  test eax, eax
 8088be9:  mov edx, 0x1
 8088bee:  jle 8088bf3
 8088bf0:  lea edx, [eax+0x1]
 8088bf3:  mov DWORD PTR [ebx+0x4], edx
 8088bf6:  mov eax, ebx
 8088bf8:  add esp, 0x14
 8088bfb:  pop ebx
 8088bfc:  pop esi
 8088bfd:  pop ebp
 8088bfe:  ret
 8088bff:  mov eax, ds:0x80d2a64
 8088c04:  mov DWORD PTR ds:0x80d2a68, ebx
 8088c0a:  mov DWORD PTR [esp+0x4], 0x8088a40
 8088c12:  mov DWORD PTR [esp], eax
 8088c15:  call 8073810
 8088c1a:  lea esi, [esi]
 8088c20:  xor ebx, ebx
 8088c22:  add esp, 0x14
 8088c25:  mov eax, ebx
 8088c27:  pop ebx
 8088c28:  pop esi
 8088c29:  pop ebp
 8088c2a:  ret
 8088c2b:  nop
 8088c2c:  lea esi, [esi]
 8088c30:  mov eax, DWORD PTR [ebp-0xc]
 8088c33:  mov DWORD PTR [esp], eax
 8088c36:  call 804eea0
 8088c3b:  lea esi, [eax+0x1]
 8088c3e:  add eax, 0x19
 8088c41:  mov DWORD PTR [esp], eax
 8088c44:  call 804d6f0
 8088c49:  test eax, eax
 8088c4b:  mov ebx, eax
 8088c4d:  je 8088bd2
 8088c4f:  lea edx, [eax+0x18]
 8088c52:  mov DWORD PTR [esp+0x8], esi
 8088c56:  mov eax, DWORD PTR [ebp-0xc]
 8088c59:  mov DWORD PTR [esp], edx
 8088c5c:  mov DWORD PTR [esp+0x4], eax
 8088c60:  call 804efc0
 8088c65:  mov DWORD PTR [ebx+0x4], 0xfffffffd
 8088c6c:  mov DWORD PTR [ebx+0x8], 0x0
 8088c73:  mov DWORD PTR [ebx], eax
 8088c75:  mov DWORD PTR [esp+0x8], 0x8088cd0
 8088c7d:  mov DWORD PTR [esp+0x4], 0x80d2a64
 8088c85:  mov DWORD PTR [esp], ebx
 8088c88:  call 8073c10
 8088c8d:  test eax, eax
 8088c8f:  jne 8088b18
 8088c95:  mov DWORD PTR [esp], ebx
 8088c98:  xor ebx, ebx
 8088c9a:  call 804b4a0
 8088c9f:  nop
 8088ca0:  jmp 8088bd2
 8088ca5:  mov DWORD PTR [esp+0xc], 0x80b61d2
 8088cad:  mov DWORD PTR [esp+0x8], 0x75
 8088cb5:  mov DWORD PTR [esp+0x4], 0x80b6173
 8088cbd:  mov DWORD PTR [esp], 0x80b618f
 8088cc4:  call 8051490
 8088cc9:  lea esi, [esi]

08088cd0 <known_compare>:
 8088cd0:  push ebp
 8088cd1:  mov ebp, esp
 8088cd3:  mov eax, DWORD PTR [ebp+0xc]
 8088cd6:  mov eax, DWORD PTR [eax]
 8088cd8:  mov DWORD PTR [ebp+0xc], eax
 8088cdb:  mov eax, DWORD PTR [ebp+0x8]
 8088cde:  mov eax, DWORD PTR [eax]
 8088ce0:  mov DWORD PTR [ebp+0x8], eax
 8088ce3:  pop ebp
 8088ce4:  jmp 806af90
 8088ce9:  nop
 8088cea:  nop
 8088ceb:  nop
 8088cec:  nop
 8088ced:  nop
 8088cee:  nop
 8088cef:  nop

08088cf0 <new_composite_name>:
 8088cf0:  push ebp
 8088cf1:  mov ebp, esp
 8088cf3:  push edi
 8088cf4:  push esi
 8088cf5:  push ebx
 8088cf6:  sub esp, 0x1c
 8088cf9:  cmp eax, 0x6
 8088cfc:  mov DWORD PTR [ebp-0x18], eax
 8088cff:  mov DWORD PTR [ebp-0x1c], edx
 8088d02:  je 8088e08
 8088d08:  mov DWORD PTR [ebp-0x10], 0x0
 8088d0f:  xor ebx, ebx
 8088d11:  mov edi, 0x1
 8088d16:  xchg ax, ax
 8088d18:  cmp ebx, 0x6
 8088d1b:  je 8088da8
 8088d21:  cmp DWORD PTR [ebp-0x18], ebx
 8088d24:  je 8088db6
 8088d2a:  mov esi, DWORD PTR [ebx*4+0x80d13c0]
 8088d31:  mov DWORD PTR [esp], esi
 8088d34:  call 804eea0
 8088d39:  mov ecx, DWORD PTR [ebp-0x10]
 8088d3c:  test ebx, ebx
 8088d3e:  lea edx, [ecx+eax+0x2]
 8088d42:  mov DWORD PTR [ebp-0x14], eax
 8088d45:  movzx eax, BYTE PTR [ebx+0x80b6296]
 8088d4c:  lea eax, [edx+eax]
 8088d4f:  mov DWORD PTR [ebp-0x10], eax
 8088d52:  jle 8088d70
 8088d54:  test edi, edi
 8088d56:  je 8088d70
 8088d58:  mov edx, DWORD PTR [ebp-0x1c]
 8088d5b:  mov eax, DWORD PTR [edx]
 8088d5d:  mov DWORD PTR [esp], esi
 8088d60:  mov DWORD PTR [esp+0x4], eax
 8088d64:  call 806af90
 8088d69:  cmp eax, 0x1
 8088d6c:  sbb eax, eax
 8088d6e:  and edi, eax
 8088d70:  add ebx, 0x1
 8088d73:  cmp ebx, 0xc
 8088d76:  jle 8088d18
 8088d78:  test edi, edi
 8088d7a:  je 8088e7d
 8088d80:  mov ecx, DWORD PTR [ebp-0x1c]
 8088d83:  mov ebx, DWORD PTR [ecx]
 8088d85:  mov DWORD PTR [esp+0x4], 0x80b1f00
 8088d8d:  mov DWORD PTR [esp], ebx
 8088d90:  call 806af90
 8088d95:  test eax, eax
 8088d97:  jne 8088dc0
 8088d99:  mov esi, 0x80b1f00
 8088d9e:  add esp, 0x1c
 8088da1:  mov eax, esi
 8088da3:  pop ebx
 8088da4:  pop esi
 8088da5:  pop edi
 8088da6:  pop ebp
 8088da7:  ret
 8088da8:  mov ebx, 0x7
 8088dad:  cmp DWORD PTR [ebp-0x18], ebx
 8088db0:  jne 8088d2a
 8088db6:  mov ecx, DWORD PTR [ebp-0x1c]
 8088db9:  mov esi, DWORD PTR [ecx]
 8088dbb:  jmp 8088d31
 8088dc0:  mov DWORD PTR [esp+0x4], 0x80b04dd
 8088dc8:  mov DWORD PTR [esp], ebx
 8088dcb:  call 806af90
 8088dd0:  test eax, eax
 8088dd2:  je 8088d99
 8088dd4:  mov ebx, DWORD PTR [ebp-0x14]
 8088dd7:  add ebx, 0x1
 8088dda:  mov DWORD PTR [esp], ebx
 8088ddd:  call 804d6f0
 8088de2:  test eax, eax
 8088de4:  mov esi, eax
 8088de6:  je 8088d9e
 8088de8:  mov edx, DWORD PTR [ebp-0x1c]
 8088deb:  mov eax, DWORD PTR [edx]
 8088ded:  mov DWORD PTR [esp], esi
 8088df0:  mov DWORD PTR [esp+0x8], ebx
 8088df4:  mov DWORD PTR [esp+0x4], eax
 8088df8:  call 804efc0
 8088dfd:  mov esi, eax
 8088dff:  jmp 8088d9e
 8088e01:  lea esi, [esi]
 8088e08:  xor ebx, ebx
 8088e0a:  mov edi, 0x1
 8088e0f:  cmp ebx, 0x6
 8088e12:  mov DWORD PTR [ebp-0x10], 0x0
 8088e19:  je 8088e76
 8088e1b:  nop
 8088e1c:  lea esi, [esi]
 8088e20:  mov eax, DWORD PTR [ebp-0x1c]
 8088e23:  mov esi, DWORD PTR [eax+ebx*4]
 8088e26:  mov DWORD PTR [esp], esi
 8088e29:  call 804eea0
 8088e2e:  mov ecx, DWORD PTR [ebp-0x10]
 8088e31:  test ebx, ebx
 8088e33:  lea edx, [ecx+eax+0x2]
 8088e37:  mov DWORD PTR [ebp-0x14], eax
 8088e3a:  movzx eax, BYTE PTR [ebx+0x80b6296]
 8088e41:  lea eax, [edx+eax]
 8088e44:  mov DWORD PTR [ebp-0x10], eax
 8088e47:  jle 8088e65
 8088e49:  test edi, edi
 8088e4b:  je 8088e65
 8088e4d:  mov edx, DWORD PTR [ebp-0x1c]
 8088e50:  mov eax, DWORD PTR [edx]
 8088e52:  mov DWORD PTR [esp], esi
 8088e55:  mov DWORD PTR [esp+0x4], eax
 8088e59:  call 806af90
 8088e5e:  cmp eax, 0x1
 8088e61:  sbb eax, eax
 8088e63:  and edi, eax
 8088e65:  add ebx, 0x1
 8088e68:  cmp ebx, 0xc
 8088e6b:  jg 8088d78
 8088e71:  cmp ebx, 0x6
 8088e74:  jne 8088e20
 8088e76:  mov ebx, 0x7
 8088e7b:  jmp 8088e20
 8088e7d:  mov ecx, DWORD PTR [ebp-0x10]
 8088e80:  mov DWORD PTR [esp], ecx
 8088e83:  call 804d6f0
 8088e88:  test eax, eax
 8088e8a:  mov esi, eax
 8088e8c:  je 8088d9e
 8088e92:  xor ebx, ebx
 8088e94:  xor edi, edi
 8088e96:  cmp DWORD PTR [ebp-0x18], 0x6
 8088e9a:  mov edx, eax
 8088e9c:  mov ecx, eax
 8088e9e:  je 8088ef9
 8088ea0:  cmp ebx, 0x6
 8088ea3:  je 8088f40
 8088ea9:  cmp DWORD PTR [ebp-0x18], ebx
 8088eac:  je 8088f4d
 8088eb2:  mov edi, DWORD PTR [ebx*4+0x80d13c0]
 8088eb9:  movzx eax, BYTE PTR [ebx+0x80b6289]
 8088ec0:  add ebx, 0x1
 8088ec3:  mov DWORD PTR [esp], edx
 8088ec6:  add eax, 0x80b6200
 8088ecb:  mov DWORD PTR [esp+0x4], eax
 8088ecf:  call 806c360
 8088ed4:  mov BYTE PTR [eax], 0x3d
 8088ed7:  add eax, 0x1
 8088eda:  mov DWORD PTR [esp+0x4], edi
 8088ede:  mov DWORD PTR [esp], eax
 8088ee1:  call 806c360
 8088ee6:  cmp ebx, 0xc
 8088ee9:  mov BYTE PTR [eax], 0x3b
 8088eec:  lea edx, [eax+0x1]
 8088eef:  jle 8088ea0
 8088ef1:  mov BYTE PTR [eax], 0x0
 8088ef4:  jmp 8088d9e
 8088ef9:  cmp edi, 0x6
 8088efc:  je 8088f5d
 8088efe:  movzx eax, BYTE PTR [edi+0x80b6289]
 8088f05:  mov edx, DWORD PTR [ebp-0x1c]
 8088f08:  add eax, 0x80b6200
 8088f0d:  mov ebx, DWORD PTR [edx+edi*4]
 8088f10:  add edi, 0x1
 8088f13:  mov DWORD PTR [esp], ecx
 8088f16:  mov DWORD PTR [esp+0x4], eax
 8088f1a:  call 806c360
 8088f1f:  mov BYTE PTR [eax], 0x3d
 8088f22:  add eax, 0x1
 8088f25:  mov DWORD PTR [esp+0x4], ebx
 8088f29:  mov DWORD PTR [esp], eax
 8088f2c:  call 806c360
 8088f31:  cmp edi, 0xc
 8088f34:  mov BYTE PTR [eax], 0x3b
 8088f37:  lea ecx, [eax+0x1]
 8088f3a:  jle 8088ef9
 8088f3c:  jmp 8088ef1
 8088f3e:  xchg ax, ax
 8088f40:  mov ebx, 0x7
 8088f45:  lea esi, [esi]
 8088f48:  jmp 8088ea9
 8088f4d:  mov eax, DWORD PTR [ebp-0x1c]
 8088f50:  mov edi, DWORD PTR [eax]
 8088f52:  lea esi, [esi]
 8088f58:  jmp 8088eb9
 8088f5d:  mov edi, 0x7
 8088f62:  lea esi, [esi]
 8088f68:  jmp 8088efe
 8088f6a:  lea esi, [esi]

08088f70 <setlocale>:
 8088f70:  push ebp
 8088f71:  mov ebp, esp
 8088f73:  push edi
 8088f74:  push esi
 8088f75:  push ebx
 8088f76:  sub esp, 0xb0
 8088f7c:  mov ebx, DWORD PTR [ebp+0x8]
 8088f7f:  cmp ebx, 0xc
 8088f82:  ja 80894a8
 8088f88:  mov esi, DWORD PTR [ebp+0xc]
 8088f8b:  test esi, esi
 8088f8d:  je 8089368
 8088f93:  mov eax, 0x0
 8088f98:  test eax, eax
 8088f9a:  je 8088fa8
 8088f9c:  mov DWORD PTR [esp], 0x80d2a80
 8088fa3:  call 0
 8088fa8:  lea esi, [ebx+0x10]
 8088fab:  mov edi, DWORD PTR [esi*4+0x80d1380]
 8088fb2:  mov DWORD PTR [esp+0x4], edi
 8088fb6:  mov eax, DWORD PTR [ebp+0xc]
 8088fb9:  mov DWORD PTR [esp], eax
 8088fbc:  call 806af90
 8088fc1:  test eax, eax
 8088fc3:  jne 8088ff8
 8088fc5:  mov eax, 0x0
 8088fca:  test eax, eax
 8088fcc:  je 8088fe1
 8088fce:  mov DWORD PTR [esp], 0x80d2a80
 8088fd5:  call 0
 8088fda:  mov edi, DWORD PTR [esi*4+0x80d1380]
 8088fe1:  mov DWORD PTR [ebp-0x98], edi
 8088fe7:  mov eax, DWORD PTR [ebp-0x98]
 8088fed:  lea esp, [ebp-0xc]
 8088ff0:  pop ebx
 8088ff1:  pop esi
 8088ff2:  pop edi
 8088ff3:  pop ebp
 8088ff4:  ret
 8088ff5:  lea esi, [esi]
 8088ff8:  mov DWORD PTR [ebp-0x10], 0x0
 8088fff:  mov DWORD PTR [ebp-0x14], 0x0
 8089006:  mov DWORD PTR [esp], 0x80b61e5
 808900d:  call 80562f0
 8089012:  test eax, eax
 8089014:  je 808901f
 8089016:  cmp BYTE PTR [eax], 0x0
 8089019:  jne 80892e8
 808901f:  xor eax, eax
 8089021:  cmp ebx, 0x6
 8089024:  lea esi, [esi]
 8089028:  je 8089158
 808902e:  mov eax, DWORD PTR [ebx*4+0x80b62c0]
 8089035:  xor edi, edi
 8089037:  mov ecx, DWORD PTR [ebp+0xc]
 808903a:  test eax, eax
 808903c:  mov DWORD PTR [ebp-0x18], ecx
 808903f:  mov DWORD PTR [ebp-0x9c], eax
 8089045:  je 8089074
 8089047:  mov edx, DWORD PTR [ebp-0x14]
 808904a:  lea ecx, [ebp-0x18]
 808904d:  mov eax, DWORD PTR [ebp-0x10]
 8089050:  mov DWORD PTR [esp], ecx
 8089053:  mov ecx, ebx
 8089055:  call 8089740
 808905a:  sub esp, 0x4
 808905d:  test eax, eax
 808905f:  mov edi, eax
 8089061:  je 80893ca
 8089067:  cmp DWORD PTR [eax+0x18], 0xff
 808906b:  je 8089074
 808906d:  mov DWORD PTR [eax+0x18], 0xffffffff
 8089074:  mov eax, DWORD PTR [ebp-0x18]
 8089077:  cmp eax, 0x80b1f00
 808907c:  je 8089091
 808907e:  mov DWORD PTR [esp], eax
 8089081:  call 806b010
 8089086:  test eax, eax
 8089088:  mov DWORD PTR [ebp-0x18], eax
 808908b:  je 80893ca
 8089091:  lea edx, [ebp-0x18]
 8089094:  mov eax, ebx
 8089096:  call 8088cf0
 808909b:  test eax, eax
 808909d:  mov DWORD PTR [ebp-0x88], eax
 80890a3:  je 80893b8
 80890a9:  mov eax, DWORD PTR [ebp-0x9c]
 80890af:  test eax, eax
 80890b1:  je 80890c7
 80890b3:  mov eax, DWORD PTR [ebx*4+0x80b6300]
 80890ba:  mov DWORD PTR [ebx*4+0x80d1380], edi
 80890c1:  test eax, eax
 80890c3:  je 80890c7
 80890c5:  call eax
 80890c7:  mov ebx, DWORD PTR [ebp-0x18]
 80890ca:  mov eax, DWORD PTR [esi*4+0x80d1380]
 80890d1:  cmp ebx, eax
 80890d3:  je 80890eb
 80890d5:  cmp eax, 0x80b1f00
 80890da:  je 80890e4
 80890dc:  mov DWORD PTR [esp], eax
 80890df:  call 804b4a0
 80890e4:  mov DWORD PTR [esi*4+0x80d1380], ebx
 80890eb:  mov eax, ds:0x80d13d8
 80890f0:  cmp DWORD PTR [ebp-0x88], eax
 80890f6:  je 8089113
 80890f8:  cmp eax, 0x80b1f00
 80890fd:  je 8089107
 80890ff:  mov DWORD PTR [esp], eax
 8089102:  call 804b4a0
 8089107:  mov edx, DWORD PTR [ebp-0x88]
 808910d:  mov DWORD PTR ds:0x80d13d8, edx
 8089113:  add DWORD PTR ds:0x80d2e74, 0x1
 808911a:  mov eax, 0x0
 808911f:  test eax, eax
 8089121:  je 808912f
 8089123:  mov DWORD PTR [esp], 0x80d2a80
 808912a:  call 0
 808912f:  mov eax, DWORD PTR [ebp-0x10]
 8089132:  mov DWORD PTR [esp], eax
 8089135:  call 804b4a0
 808913a:  mov ecx, DWORD PTR [ebp-0x18]
 808913d:  mov DWORD PTR [ebp-0x98], ecx
 8089143:  mov eax, DWORD PTR [ebp-0x98]
 8089149:  lea esp, [ebp-0xc]
 808914c:  pop ebx
 808914d:  pop esi
 808914e:  pop edi
 808914f:  pop ebp
 8089150:  ret
 8089151:  lea esi, [esi]
 8089158:  cmp eax, 0x6
 808915b:  je 80892d8
 8089161:  mov esi, DWORD PTR [ebp+0xc]
 8089164:  mov DWORD PTR [ebp+eax*4-0x4c], esi
 8089168:  add eax, 0x1
 808916b:  cmp eax, 0xc
 808916e:  jle 8089158
 8089170:  mov DWORD PTR [esp+0x4], 0x3b
 8089178:  mov DWORD PTR [esp], esi
 808917b:  call 806ae20
 8089180:  test eax, eax
 8089182:  jne 80894ca
 8089188:  lea esi, [ebp-0x1c]
 808918b:  mov edi, 0xc
 8089190:  mov DWORD PTR [ebp-0x90], 0xd
 808919a:  mov DWORD PTR [ebp-0x94], 0xb
 80891a4:  jmp 80891d1
 80891a6:  xchg ax, ax
 80891a8:  mov ecx, DWORD PTR [ebp-0x8c]
 80891ae:  mov DWORD PTR [esi], ecx
 80891b0:  test edi, edi
 80891b2:  jle 8089388
 80891b8:  mov eax, DWORD PTR [ebp-0x84]
 80891be:  sub edi, 0x1
 80891c1:  sub esi, 0x4
 80891c4:  sub DWORD PTR [ebp-0x94], 0x1
 80891cb:  mov DWORD PTR [ebp-0x90], eax
 80891d1:  cmp edi, 0x6
 80891d4:  mov DWORD PTR [ebp-0x84], edi
 80891da:  je 80891b8
 80891dc:  mov edx, DWORD PTR [ebp-0x14]
 80891df:  mov ecx, edi
 80891e1:  mov eax, DWORD PTR [ebp-0x10]
 80891e4:  mov DWORD PTR [esp], esi
 80891e7:  call 8089740
 80891ec:  sub esp, 0x4
 80891ef:  test eax, eax
 80891f1:  mov DWORD PTR [ebp+edi*4-0x80], eax
 80891f5:  je 80893a0
 80891fb:  cmp DWORD PTR [eax+0x18], 0xff
 80891ff:  je 8089208
 8089201:  mov DWORD PTR [eax+0x18], 0xffffffff
 8089208:  mov ebx, DWORD PTR [esi]
 808920a:  cmp ebx, 0x80b1f00
 8089210:  je 80891b0
 8089212:  mov edx, DWORD PTR [edi*4+0x80d13c0]
 8089219:  mov DWORD PTR [ebp-0x8c], edx
 808921f:  mov DWORD PTR [esp+0x4], edx
 8089223:  mov DWORD PTR [esp], ebx
 8089226:  call 806af90
 808922b:  test eax, eax
 808922d:  je 80891a8
 8089233:  mov DWORD PTR [esp], ebx
 8089236:  call 806b010
 808923b:  test eax, eax
 808923d:  mov DWORD PTR [esi], eax
 808923f:  jne 80891b0
 8089245:  lea esi, [esi]
 8089248:  mov ecx, DWORD PTR [ebp-0x84]
 808924e:  test ecx, ecx
 8089250:  js 80893d8
 8089256:  cmp DWORD PTR [ebp-0x90], 0xd
 808925d:  je 80892a4
 808925f:  mov ebx, DWORD PTR [ebp-0x90]
 8089265:  xor esi, esi
 8089267:  lea edi, [ebp-0x4c]
 808926a:  add ebx, 0x1
 808926d:  jmp 8089276
 808926f:  nop
 8089270:  add ebx, 0x1
 8089273:  add esi, 0x4
 8089276:  cmp ebx, 0x7
 8089279:  je 8089270
 808927b:  mov edx, DWORD PTR [ebp-0x90]
 8089281:  lea eax, [edi+esi]
 8089284:  mov eax, DWORD PTR [eax+edx*4]
 8089287:  cmp eax, 0x80b1f00
 808928c:  je 808929f
 808928e:  cmp eax, DWORD PTR [esi+edx*4+0x80d13c0]
 8089295:  je 808929f
 8089297:  mov DWORD PTR [esp], eax
 808929a:  call 804b4a0
 808929f:  cmp ebx, 0xd
 80892a2:  jne 8089270
 80892a4:  mov DWORD PTR [ebp-0x98], 0x0
 80892ae:  xchg ax, ax
 80892b0:  mov eax, 0x0
 80892b5:  test eax, eax
 80892b7:  je 80892c5
 80892b9:  mov DWORD PTR [esp], 0x80d2a80
 80892c0:  call 0
 80892c5:  mov eax, DWORD PTR [ebp-0x10]
 80892c8:  mov DWORD PTR [esp], eax
 80892cb:  call 804b4a0
 80892d0:  jmp 8088fe7
 80892d5:  lea esi, [esi]
 80892d8:  mov eax, 0x7
 80892dd:  lea esi, [esi]
 80892e0:  jmp 8089161
 80892e5:  lea esi, [esi]
 80892e8:  lea edx, [ebp-0x14]
 80892eb:  lea edi, [ebp-0x10]
 80892ee:  mov DWORD PTR [esp+0xc], edx
 80892f2:  mov DWORD PTR [esp+0x8], edi
 80892f6:  mov DWORD PTR [esp+0x4], 0x3a
 80892fe:  mov DWORD PTR [esp], eax
 8089301:  call 80942e0
 8089306:  test eax, eax
 8089308:  jne 8089331
 808930a:  lea ecx, [ebp-0x14]
 808930d:  mov DWORD PTR [esp+0xc], 0x3a
 8089315:  mov DWORD PTR [esp+0x8], 0x80b636b
 808931d:  mov DWORD PTR [esp+0x4], ecx
 8089321:  mov DWORD PTR [esp], edi
 8089324:  call 80943c0
 8089329:  test eax, eax
 808932b:  je 808901f
 8089331:  mov eax, 0x0
 8089336:  test eax, eax
 8089338:  mov DWORD PTR [ebp-0x98], 0x0
 8089342:  je 8088fe7
 8089348:  mov DWORD PTR [esp], 0x80d2a80
 808934f:  call 0
 8089354:  mov DWORD PTR [ebp-0x98], 0x0
 808935e:  jmp 8088fe7
 8089363:  nop
 8089364:  lea esi, [esi]
 8089368:  mov ebx, DWORD PTR [ebx*4+0x80d13c0]
 808936f:  mov DWORD PTR [ebp-0x98], ebx
 8089375:  mov eax, DWORD PTR [ebp-0x98]
 808937b:  lea esp, [ebp-0xc]
 808937e:  pop ebx
 808937f:  pop esi
 8089380:  pop edi
 8089381:  pop ebp
 8089382:  ret
 8089383:  nop
 8089384:  lea esi, [esi]
 8089388:  mov esi, DWORD PTR [ebp-0x94]
 808938e:  mov DWORD PTR [ebp-0x90], edi
 8089394:  mov DWORD PTR [ebp-0x84], esi
 808939a:  jmp 8089248
 808939f:  nop
 80893a0:  cmp DWORD PTR [esi], 0x80b1f00
 80893a6:  je 80891b0
 80893ac:  jmp 8089248
 80893b1:  lea esi, [esi]
 80893b8:  mov eax, DWORD PTR [ebp-0x18]
 80893bb:  cmp eax, 0x80b1f00
 80893c0:  je 80893ca
 80893c2:  mov DWORD PTR [esp], eax
 80893c5:  call 804b4a0
 80893ca:  mov DWORD PTR [ebp-0x18], 0x0
 80893d1:  jmp 808911a
 80893d6:  xchg ax, ax
 80893d8:  lea edi, [ebp-0x4c]
 80893db:  mov eax, 0x6
 80893e0:  mov edx, edi
 80893e2:  xor edi, edi
 80893e4:  call 8088cf0
 80893e9:  test eax, eax
 80893eb:  mov DWORD PTR [ebp-0x98], eax
 80893f1:  je 8089256
 80893f7:  nop
 80893f8:  cmp edi, 0x6
 80893fb:  je 8089488
 8089401:  mov edx, DWORD PTR [edi*4+0x80b62c0]
 8089408:  mov eax, DWORD PTR [ebp+edi*4-0x80]
 808940c:  test edx, edx
 808940e:  je 8089424
 8089410:  mov DWORD PTR [edi*4+0x80d1380], eax
 8089417:  mov eax, DWORD PTR [edi*4+0x80b6300]
 808941e:  test eax, eax
 8089420:  je 8089424
 8089422:  call eax
 8089424:  lea ebx, [edi+0x10]
 8089427:  mov esi, DWORD PTR [ebp+edi*4-0x4c]
 808942b:  mov eax, DWORD PTR [ebx*4+0x80d1380]
 8089432:  cmp esi, eax
 8089434:  je 808944c
 8089436:  cmp eax, 0x80b1f00
 808943b:  je 8089445
 808943d:  mov DWORD PTR [esp], eax
 8089440:  call 804b4a0
 8089445:  mov DWORD PTR [ebx*4+0x80d1380], esi
 808944c:  add edi, 0x1
 808944f:  cmp edi, 0xc
 8089452:  jle 80893f8
 8089454:  mov eax, ds:0x80d13d8
 8089459:  cmp DWORD PTR [ebp-0x98], eax
 808945f:  je 808947b
 8089461:  cmp eax, 0x80b1f00
 8089466:  je 8089470
 8089468:  mov DWORD PTR [esp], eax
 808946b:  call 804b4a0
 8089470:  mov eax, DWORD PTR [ebp-0x98]
 8089476:  mov ds:0x80d13d8, eax
 808947b:  add DWORD PTR ds:0x80d2e74, 0x1
 8089482:  jmp 80892b0
 8089487:  nop
 8089488:  mov edi, 0x7
 808948d:  jmp 8089401
 8089492:  mov eax, 0x0
 8089497:  test eax, eax
 8089499:  je 80894a8
 808949b:  mov DWORD PTR [esp], 0x80d2a80
 80894a2:  call 0
 80894a7:  nop
 80894a8:  mov edx, 0xffffffe8
 80894ae:  mov eax, gs:0x0
 80894b4:  mov DWORD PTR [ebp-0x98], 0x0
 80894be:  mov DWORD PTR [eax+edx], 0x16
 80894c5:  jmp 8088fe7
 80894ca:  mov eax, DWORD PTR [ebp+0xc]
 80894cd:  mov DWORD PTR [esp], eax
 80894d0:  call 804eea0
 80894d5:  lea edx, [eax+0x1]
 80894d8:  add eax, 0x13
 80894db:  and eax, 0xfc
 80894de:  sub esp, eax
 80894e0:  mov DWORD PTR [esp+0x8], edx
 80894e4:  mov edx, DWORD PTR [ebp+0xc]
 80894e7:  lea eax, [esp+0x1f]
 80894eb:  and eax, 0xf0
 80894ee:  mov DWORD PTR [esp], eax
 80894f1:  mov DWORD PTR [esp+0x4], edx
 80894f5:  call 804efc0
 80894fa:  mov DWORD PTR [ebp-0xac], eax
 8089500:  mov ecx, eax
 8089502:  mov DWORD PTR [esp+0x4], 0x3d
 808950a:  mov DWORD PTR [esp], ecx
 808950d:  call 806ae20
 8089512:  test eax, eax
 8089514:  mov DWORD PTR [ebp-0xa4], eax
 808951a:  je 80895e1
 8089520:  mov ebx, eax
 8089522:  sub ebx, DWORD PTR [ebp-0xac]
 8089528:  mov DWORD PTR [ebp-0xa8], 0x0
 8089532:  lea esi, [esi]
 8089538:  cmp DWORD PTR [ebp-0xa8], 0x6
 808953f:  je 80895b0
 8089541:  mov ecx, DWORD PTR [ebp-0xa8]
 8089547:  movzx eax, BYTE PTR [ecx+0x80b6296]
 808954e:  cmp ebx, eax
 8089550:  je 80895c0
 8089552:  add DWORD PTR [ebp-0xa8], 0x1
 8089559:  cmp DWORD PTR [ebp-0xa8], 0xc
 8089560:  jle 8089538
 8089562:  cmp DWORD PTR [ebp-0xa8], 0xd
 8089569:  je 8089492
 808956f:  mov eax, DWORD PTR [ebp-0xa4]
 8089575:  mov edx, DWORD PTR [ebp-0xa8]
 808957b:  add eax, 0x1
 808957e:  mov DWORD PTR [ebp+edx*4-0x4c], eax
 8089582:  mov DWORD PTR [esp+0x4], 0x3b
 808958a:  mov DWORD PTR [esp], eax
 808958d:  call 806ae20
 8089592:  test eax, eax
 8089594:  je 80895e1
 8089596:  mov BYTE PTR [eax], 0x0
 8089599:  add eax, 0x1
 808959c:  mov DWORD PTR [ebp-0xac], eax
 80895a2:  mov ecx, eax
 80895a4:  jmp 8089502
 80895a9:  lea esi, [esi]
 80895b0:  mov DWORD PTR [ebp-0xa8], 0x7
 80895ba:  jmp 8089541
 80895bc:  lea esi, [esi]
 80895c0:  movzx edi, BYTE PTR [ecx+0x80b6289]
 80895c7:  mov ecx, ebx
 80895c9:  mov esi, DWORD PTR [ebp-0xac]
 80895cf:  add edi, 0x80b6200
 80895d5:  cmp ebx, ebx
 80895d7:  repz cmpsb
 80895d9:  jne 8089552
 80895df:  jmp 808956f
 80895e1:  xor eax, eax
 80895e3:  cmp eax, 0x6
 80895e6:  je 8089605
 80895e8:  mov esi, DWORD PTR [ebp+0xc]
 80895eb:  cmp DWORD PTR [ebp+eax*4-0x4c], esi
 80895ef:  nop
 80895f0:  je 8089492
 80895f6:  add eax, 0x1
 80895f9:  cmp eax, 0xc
 80895fc:  jle 80895e3
 80895fe:  xchg ax, ax
 8089600:  jmp 8089188
 8089605:  mov eax, 0x7
 808960a:  lea esi, [esi]
 8089610:  jmp 80895e8
 8089612:  nop
 8089613:  nop
 8089614:  nop
 8089615:  nop
 8089616:  nop
 8089617:  nop
 8089618:  nop
 8089619:  nop
 808961a:  nop
 808961b:  nop
 808961c:  nop
 808961d:  nop
 808961e:  nop
 808961f:  nop

08089620 <strip>:
 8089620:  push ebp
 8089621:  mov ecx, eax
 8089623:  mov ebp, esp
 8089625:  push edi
 8089626:  push esi
 8089627:  push ebx
 8089628:  mov ebx, edx
 808962a:  sub esp, 0x4
 808962d:  movzx eax, BYTE PTR [edx]
 8089630:  test al, al
 8089632:  je 80896e2
 8089638:  mov DWORD PTR [ebp-0x10], 0x0
 808963f:  mov esi, DWORD PTR ds:0x80b0414
 8089645:  mov edi, DWORD PTR ds:0x80b041c
 808964b:  jmp 8089688
 808964d:  lea esi, [esi]
 8089650:  cmp al, 0x5f
 8089652:  je 8089691
 8089654:  cmp al, 0x2d
 8089656:  je 8089691
 8089658:  cmp al, 0x2e
 808965a:  lea esi, [esi]
 8089660:  je 8089691
 8089662:  cmp al, 0x2c
 8089664:  lea esi, [esi]
 8089668:  je 8089691
 808966a:  cmp al, 0x3a
 808966c:  lea esi, [esi]
 8089670:  je 8089691
 8089672:  cmp al, 0x2f
 8089674:  lea esi, [esi]
 8089678:  je 80896d0
 808967a:  add ebx, 0x1
 808967d:  movzx eax, BYTE PTR [ebx]
 8089680:  test al, al
 8089682:  je 80896a3
 8089684:  lea esi, [esi]
 8089688:  movsx edx, al
 808968b:  test BYTE PTR [esi+edx*2], 0x8
 808968f:  je 8089650
 8089691:  mov eax, DWORD PTR [edi+edx*4]
 8089694:  add ebx, 0x1
 8089697:  mov BYTE PTR [ecx], al
 8089699:  movzx eax, BYTE PTR [ebx]
 808969c:  add ecx, 0x1
 808969f:  test al, al
 80896a1:  jne 8089688
 80896a3:  cmp DWORD PTR [ebp-0x10], 0x1
 80896a7:  jg 80896c1
 80896a9:  mov edx, DWORD PTR [ebp-0x10]
 80896ac:  add edx, 0x1
 80896af:  nop
 80896b0:  add edx, 0x1
 80896b3:  lea eax, [edx-0x1]
 80896b6:  mov BYTE PTR [ecx], 0x2f
 80896b9:  add ecx, 0x1
 80896bc:  sub eax, 0x1
 80896bf:  jle 80896b0
 80896c1:  mov BYTE PTR [ecx], 0x0
 80896c4:  add esp, 0x4
 80896c7:  pop ebx
 80896c8:  pop esi
 80896c9:  pop edi
 80896ca:  pop ebp
 80896cb:  ret
 80896cc:  lea esi, [esi]
 80896d0:  add DWORD PTR [ebp-0x10], 0x1
 80896d4:  cmp DWORD PTR [ebp-0x10], 0x3
 80896d8:  je 80896c1
 80896da:  mov BYTE PTR [ecx], 0x2f
 80896dd:  add ecx, 0x1
 80896e0:  jmp 808967a
 80896e2:  mov edx, 0x1
 80896e7:  jmp 80896b0
 80896e9:  lea esi, [esi]

080896f0 <_nl_remove_locale>:
 80896f0:  mov ecx, eax
 80896f2:  mov eax, DWORD PTR [edx+0x18]
 80896f5:  push ebp
 80896f6:  mov ebp, esp
 80896f8:  sub eax, 0x1
 80896fb:  test eax, eax
 80896fd:  mov DWORD PTR [edx+0x18], eax
 8089700:  jne 8089738
 8089702:  cmp DWORD PTR [edx+0xc], 0x2
 8089706:  je 808972e
 8089708:  mov eax, DWORD PTR [ecx*4+0x80d2f00]
 808970f:  cmp DWORD PTR [eax+0x8], edx
 8089712:  je 8089720
 8089714:  lea esi, [esi]
 8089718:  mov eax, DWORD PTR [eax+0xc]
 808971b:  cmp DWORD PTR [eax+0x8], edx
 808971e:  jne 8089718
 8089720:  mov DWORD PTR [eax+0x4], 0x0
 8089727:  mov DWORD PTR [eax+0x8], 0x0
 808972e:  pop ebp
 808972f:  mov eax, edx
 8089731:  jmp 8089bb0
 8089736:  xchg ax, ax
 8089738:  pop ebp
 8089739:  ret
 808973a:  lea esi, [esi]

08089740 <_nl_find_locale>:
 8089740:  push ebp
 8089741:  mov ebp, esp
 8089743:  push edi
 8089744:  mov edi, ecx
 8089746:  push esi
 8089747:  push ebx
 8089748:  sub esp, 0x50
 808974b:  mov esi, DWORD PTR [ebp+0x8]
 808974e:  mov DWORD PTR [ebp-0x2c], eax
 8089751:  mov DWORD PTR [ebp-0x30], edx
 8089754:  mov eax, DWORD PTR [esi]
 8089756:  cmp BYTE PTR [eax], 0x0
 8089759:  je 80897d0
 808975b:  test eax, eax
 808975d:  je 8089768
 808975f:  cmp BYTE PTR [eax], 0x0
 8089762:  jne 8089828
 8089768:  mov DWORD PTR [esi], 0x80b1f00
 808976e:  mov ebx, 0x80b1f00
 8089773:  mov DWORD PTR [esp+0x4], 0x80b1f00
 808977b:  mov DWORD PTR [esp], ebx
 808977e:  call 806af90
 8089783:  test eax, eax
 8089785:  je 8089858
 808978b:  mov DWORD PTR [esp+0x4], 0x80b04dd
 8089793:  mov DWORD PTR [esp], ebx
 8089796:  call 806af90
 808979b:  test eax, eax
 808979d:  je 8089858
 80897a3:  mov eax, DWORD PTR [ebp-0x2c]
 80897a6:  test eax, eax
 80897a8:  jne 808987a
 80897ae:  mov edx, esi
 80897b0:  mov eax, edi
 80897b2:  call 808a270
 80897b7:  test eax, eax
 80897b9:  je 808986a
 80897bf:  lea esp, [ebp-0xc]
 80897c2:  pop ebx
 80897c3:  pop esi
 80897c4:  pop edi
 80897c5:  pop ebp
 80897c6:  ret 0x4
 80897c9:  lea esi, [esi]
 80897d0:  mov DWORD PTR [esp], 0x80b6334
 80897d7:  call 80562f0
 80897dc:  test eax, eax
 80897de:  mov DWORD PTR [esi], eax
 80897e0:  je 80897eb
 80897e2:  cmp BYTE PTR [eax], 0x0
 80897e5:  jne 808975f
 80897eb:  movzx eax, BYTE PTR [edi+0x80b6289]
 80897f2:  add eax, 0x80b6200
 80897f7:  mov DWORD PTR [esp], eax
 80897fa:  call 80562f0
 80897ff:  test eax, eax
 8089801:  mov DWORD PTR [esi], eax
 8089803:  je 808980e
 8089805:  cmp BYTE PTR [eax], 0x0
 8089808:  jne 808975f
 808980e:  mov DWORD PTR [esp], 0x80b633b
 8089815:  call 80562f0
 808981a:  mov DWORD PTR [esi], eax
 808981c:  jmp 808975b
 8089821:  lea esi, [esi]
 8089828:  mov edx, DWORD PTR ds:0x80d0cd8
 808982e:  test edx, edx
 8089830:  jne 8089839
 8089832:  mov ebx, DWORD PTR [esi]
 8089834:  jmp 8089773
 8089839:  mov DWORD PTR [esp+0x4], 0x2f
 8089841:  mov DWORD PTR [esp], eax
 8089844:  call 806ae20
 8089849:  test eax, eax
 808984b:  jne 8089768
 8089851:  mov ebx, DWORD PTR [esi]
 8089853:  jmp 8089773
 8089858:  mov DWORD PTR [esi], 0x80b1f00
 808985e:  mov eax, DWORD PTR [edi*4+0x80b63a0]
 8089865:  jmp 80897bf
 808986a:  mov ebx, DWORD PTR [esi]
 808986c:  mov DWORD PTR [ebp-0x2c], 0x80b636b
 8089873:  mov DWORD PTR [ebp-0x30], 0x10
 808987a:  mov DWORD PTR [esp], ebx
 808987d:  call 80542c0
 8089882:  test eax, eax
 8089884:  mov ebx, eax
 8089886:  je 8089ae5
 808988c:  mov DWORD PTR [esp], ebx
 808988f:  call 804eea0
 8089894:  lea edx, [eax+0x1]
 8089897:  add eax, 0x13
 808989a:  and eax, 0xfc
 808989d:  sub esp, eax
 808989f:  lea eax, [esp+0x3b]
 80898a3:  and eax, 0xf0
 80898a6:  mov DWORD PTR [esp+0x8], edx
 80898aa:  mov DWORD PTR [esp+0x4], ebx
 80898ae:  mov DWORD PTR [esp], eax
 80898b1:  call 804efc0
 80898b6:  lea edx, [ebp-0x20]
 80898b9:  mov DWORD PTR [esp+0x14], edx
 80898bd:  lea edx, [ebp-0x1c]
 80898c0:  mov DWORD PTR [esp+0x10], edx
 80898c4:  lea edx, [ebp-0x18]
 80898c7:  mov DWORD PTR [esp+0xc], edx
 80898cb:  lea edx, [ebp-0x14]
 80898ce:  mov DWORD PTR [esp+0x8], edx
 80898d2:  lea edx, [ebp-0x10]
 80898d5:  mov DWORD PTR [esp+0x4], edx
 80898d9:  mov DWORD PTR [esp], eax
 80898dc:  call 8054ab0
 80898e1:  mov edx, DWORD PTR [ebp-0x30]
 80898e4:  mov DWORD PTR [esp+0x28], 0x0
 80898ec:  mov DWORD PTR [esp+0x8], edx
 80898f0:  mov ebx, eax
 80898f2:  movzx eax, BYTE PTR [edi+0x80b6289]
 80898f9:  mov DWORD PTR [esp+0xc], ebx
 80898fd:  lea esi, [eax+0x80b6200]
 8089903:  lea eax, [edi*4+0x80d2f00]
 808990a:  mov DWORD PTR [ebp-0x28], eax
 808990d:  mov eax, DWORD PTR [ebp-0x14]
 8089910:  mov edx, DWORD PTR [ebp-0x28]
 8089913:  mov DWORD PTR [esp+0x24], esi
 8089917:  mov DWORD PTR [esp+0x20], eax
 808991b:  mov eax, DWORD PTR [ebp-0x20]
 808991e:  mov DWORD PTR [esp], edx
 8089921:  mov DWORD PTR [esp+0x1c], eax
 8089925:  mov eax, DWORD PTR [ebp-0x1c]
 8089928:  mov DWORD PTR [esp+0x18], eax
 808992c:  mov eax, DWORD PTR [ebp-0x18]
 808992f:  mov DWORD PTR [esp+0x14], eax
 8089933:  mov eax, DWORD PTR [ebp-0x10]
 8089936:  mov DWORD PTR [esp+0x10], eax
 808993a:  mov eax, DWORD PTR [ebp-0x2c]
 808993d:  mov DWORD PTR [esp+0x4], eax
 8089941:  call 8054610
 8089946:  test eax, eax
 8089948:  mov DWORD PTR [ebp-0x24], eax
 808994b:  je 8089a67
 8089951:  and ebx, 0x1
 8089954:  jne 8089ad5
 808995a:  mov edx, DWORD PTR [ebp-0x24]
 808995d:  mov eax, DWORD PTR [edx+0x4]
 8089960:  test eax, eax
 8089962:  je 8089ac5
 8089968:  mov eax, DWORD PTR [ebp-0x24]
 808996b:  mov ebx, DWORD PTR [eax+0x8]
 808996e:  test ebx, ebx
 8089970:  je 8089b51
 8089976:  mov edx, DWORD PTR [ebp-0x1c]
 8089979:  test edx, edx
 808997b:  je 8089a1e
 8089981:  mov eax, DWORD PTR [edi*4+0x80b63e0]
 8089988:  mov ebx, DWORD PTR [ebx+eax*4+0x24]
 808998c:  test ebx, ebx
 808998e:  je 8089b2d
 8089994:  mov DWORD PTR [esp], ebx
 8089997:  call 804eea0
 808999c:  mov edx, ebx
 808999e:  add eax, 0x15
 80899a1:  and eax, 0xfc
 80899a4:  sub esp, eax
 80899a6:  lea edi, [esp+0x3b]
 80899aa:  and edi, 0xf0
 80899ad:  mov eax, edi
 80899af:  call 8089620
 80899b4:  mov ebx, DWORD PTR [ebp-0x1c]
 80899b7:  mov DWORD PTR [esp], ebx
 80899ba:  call 804eea0
 80899bf:  mov edx, ebx
 80899c1:  add eax, 0x15
 80899c4:  and eax, 0xfc
 80899c7:  sub esp, eax
 80899c9:  lea esi, [esp+0x3b]
 80899cd:  and esi, 0xf0
 80899d0:  mov eax, esi
 80899d2:  call 8089620
 80899d7:  mov ecx, DWORD PTR ds:0x80b041c
 80899dd:  mov edx, edi
 80899df:  nop
 80899e0:  movsx eax, BYTE PTR [edx]
 80899e3:  mov eax, DWORD PTR [ecx+eax*4]
 80899e6:  mov BYTE PTR [edx], al
 80899e8:  add edx, 0x1
 80899eb:  test al, al
 80899ed:  jne 80899e0
 80899ef:  mov edx, esi
 80899f1:  lea esi, [esi]
 80899f8:  movsx eax, BYTE PTR [edx]
 80899fb:  mov eax, DWORD PTR [ecx+eax*4]
 80899fe:  mov BYTE PTR [edx], al
 8089a00:  add edx, 0x1
 8089a03:  test al, al
 8089a05:  jne 80899f8
 8089a07:  mov edx, edi
 8089a09:  mov eax, esi
 8089a0b:  call 80802c0
 8089a10:  test eax, eax
 8089a12:  jne 8089abe
 8089a18:  mov edx, DWORD PTR [ebp-0x24]
 8089a1b:  mov ebx, DWORD PTR [edx+0x8]
 8089a1e:  mov eax, DWORD PTR [ebx]
 8089a20:  test eax, eax
 8089a22:  je 8089aed
 8089a28:  mov eax, DWORD PTR [ebp-0x14]
 8089a2b:  test eax, eax
 8089a2d:  je 8089a50
 8089a2f:  mov DWORD PTR [esp+0x4], 0x80b1e09
 8089a37:  mov DWORD PTR [esp], eax
 8089a3a:  call 806c3b0
 8089a3f:  test eax, eax
 8089a41:  jne 8089a50
 8089a43:  mov edx, DWORD PTR [ebp-0x24]
 8089a46:  mov DWORD PTR [ebx+0x1c], 0x1
 8089a4d:  mov ebx, DWORD PTR [edx+0x8]
 8089a50:  cmp DWORD PTR [ebx+0x18], 0xfd
 8089a54:  ja 8089a60
 8089a56:  mov eax, DWORD PTR [ebp-0x24]
 8089a59:  add DWORD PTR [ebx+0x18], 0x1
 8089a5d:  mov ebx, DWORD PTR [eax+0x8]
 8089a60:  mov eax, ebx
 8089a62:  jmp 80897bf
 8089a67:  mov eax, DWORD PTR [ebp-0x14]
 8089a6a:  mov edx, DWORD PTR [ebp-0x2c]
 8089a6d:  mov DWORD PTR [esp+0x28], 0x1
 8089a75:  mov DWORD PTR [esp+0x24], esi
 8089a79:  mov DWORD PTR [esp+0x20], eax
 8089a7d:  mov eax, DWORD PTR [ebp-0x20]
 8089a80:  mov DWORD PTR [esp+0xc], ebx
 8089a84:  mov DWORD PTR [esp+0x4], edx
 8089a88:  mov DWORD PTR [esp+0x1c], eax
 8089a8c:  mov eax, DWORD PTR [ebp-0x1c]
 8089a8f:  mov DWORD PTR [esp+0x18], eax
 8089a93:  mov eax, DWORD PTR [ebp-0x18]
 8089a96:  mov DWORD PTR [esp+0x14], eax
 8089a9a:  mov eax, DWORD PTR [ebp-0x10]
 8089a9d:  mov DWORD PTR [esp+0x10], eax
 8089aa1:  mov eax, DWORD PTR [ebp-0x30]
 8089aa4:  mov DWORD PTR [esp+0x8], eax
 8089aa8:  mov eax, DWORD PTR [ebp-0x28]
 8089aab:  mov DWORD PTR [esp], eax
 8089aae:  call 8054610
 8089ab3:  test eax, eax
 8089ab5:  mov DWORD PTR [ebp-0x24], eax
 8089ab8:  jne 8089951
 8089abe:  xor eax, eax
 8089ac0:  jmp 80897bf
 8089ac5:  mov eax, edx
 8089ac7:  mov edx, edi
 8089ac9:  call 8089f80
 8089ace:  xchg ax, ax
 8089ad0:  jmp 8089968
 8089ad5:  mov eax, DWORD PTR [ebp-0x20]
 8089ad8:  mov DWORD PTR [esp], eax
 8089adb:  call 804b4a0
 8089ae0:  jmp 808995a
 8089ae5:  mov ebx, DWORD PTR [esi]
 8089ae7:  nop
 8089ae8:  jmp 808988c
 8089aed:  mov edx, DWORD PTR [ebp-0x24]
 8089af0:  mov DWORD PTR [esp+0x4], 0x2f
 8089af8:  mov eax, DWORD PTR [edx]
 8089afa:  mov DWORD PTR [esp], eax
 8089afd:  call 806b430
 8089b02:  lea edx, [eax-0x1]
 8089b05:  jmp 8089b09
 8089b07:  mov edx, ecx
 8089b09:  cmp BYTE PTR [edx-0x1], 0x2f
 8089b0d:  lea ecx, [edx-0x1]
 8089b10:  jne 8089b07
 8089b12:  sub eax, edx
 8089b14:  mov DWORD PTR [esp+0x4], eax
 8089b18:  mov DWORD PTR [esp], edx
 8089b1b:  call 80941b0
 8089b20:  mov DWORD PTR [ebx], eax
 8089b22:  mov eax, DWORD PTR [ebp-0x24]
 8089b25:  mov ebx, DWORD PTR [eax+0x8]
 8089b28:  jmp 8089a28
 8089b2d:  mov DWORD PTR [esp+0xc], 0x80b637b
 8089b35:  mov DWORD PTR [esp+0x8], 0xe1
 8089b3d:  mov DWORD PTR [esp+0x4], 0x80b6340
 8089b45:  mov DWORD PTR [esp], 0x80b634d
 8089b4c:  call 8051490
 8089b51:  mov eax, DWORD PTR [eax+0x10]
 8089b54:  test eax, eax
 8089b56:  jne 8089b6b
 8089b58:  jmp 8089ba4
 8089b5a:  lea esi, [esi]
 8089b60:  add ebx, 0x1
 8089b63:  mov eax, DWORD PTR [edx+ebx*4+0x10]
 8089b67:  test eax, eax
 8089b69:  je 8089b87
 8089b6b:  mov esi, DWORD PTR [eax+0x4]
 8089b6e:  test esi, esi
 8089b70:  jne 8089b79
 8089b72:  mov edx, edi
 8089b74:  call 8089f80
 8089b79:  mov edx, DWORD PTR [ebp-0x24]
 8089b7c:  mov eax, DWORD PTR [edx+ebx*4+0x10]
 8089b80:  mov ecx, DWORD PTR [eax+0x8]
 8089b83:  test ecx, ecx
 8089b85:  je 8089b60
 8089b87:  mov edx, DWORD PTR [ebp-0x24]
 8089b8a:  mov DWORD PTR [edx+0x10], eax
 8089b8d:  mov ebx, DWORD PTR [edx+ebx*4+0x10]
 8089b91:  test ebx, ebx
 8089b93:  mov DWORD PTR [ebp-0x24], ebx
 8089b96:  je 8089abe
 8089b9c:  mov ebx, DWORD PTR [ebx+0x8]
 8089b9f:  jmp 8089976
 8089ba4:  mov ebx, eax
 8089ba6:  jmp 8089b87
 8089ba8:  nop
 8089ba9:  nop
 8089baa:  nop
 8089bab:  nop
 8089bac:  nop
 8089bad:  nop
 8089bae:  nop
 8089baf:  nop

08089bb0 <_nl_unload_locale>:
 8089bb0:  push ebp
 8089bb1:  mov ebp, esp
 8089bb3:  push ebx
 8089bb4:  mov ebx, eax
 8089bb6:  sub esp, 0x8
 8089bb9:  mov edx, DWORD PTR [eax+0x10]
 8089bbc:  test edx, edx
 8089bbe:  je 8089bc2
 8089bc0:  call edx
 8089bc2:  mov eax, DWORD PTR [ebx+0xc]
 8089bc5:  test eax, eax
 8089bc7:  jne 8089bf8
 8089bc9:  mov eax, DWORD PTR [ebx+0x4]
 8089bcc:  mov DWORD PTR [esp], eax
 8089bcf:  call 804b4a0
 8089bd4:  mov eax, DWORD PTR [ebx+0xc]
 8089bd7:  cmp eax, 0x2
 8089bda:  je 8089be6
 8089bdc:  mov eax, DWORD PTR [ebx]
 8089bde:  mov DWORD PTR [esp], eax
 8089be1:  call 804b4a0
 8089be6:  mov DWORD PTR [esp], ebx
 8089be9:  call 804b4a0
 8089bee:  add esp, 0x8
 8089bf1:  pop ebx
 8089bf2:  pop ebp
 8089bf3:  ret
 8089bf4:  lea esi, [esi]
 8089bf8:  cmp eax, 0x1
 8089bfb:  jne 8089bd7
 8089bfd:  mov eax, DWORD PTR [ebx+0x8]
 8089c00:  mov DWORD PTR [esp+0x4], eax
 8089c04:  mov eax, DWORD PTR [ebx+0x4]
 8089c07:  mov DWORD PTR [esp], eax
 8089c0a:  call 8050050
 8089c0f:  mov eax, DWORD PTR [ebx+0xc]
 8089c12:  jmp 8089bd7
 8089c14:  lea esi, [esi]
 8089c1a:  lea edi, [edi]

08089c20 <_nl_intern_locale_data>:
 8089c20:  push ebp
 8089c21:  mov ebp, esp
 8089c23:  push edi
 8089c24:  mov edi, edx
 8089c26:  push esi
 8089c27:  mov esi, eax
 8089c29:  push ebx
 8089c2a:  mov ebx, ecx
 8089c2c:  sub esp, 0x14
 8089c2f:  cmp ecx, 0x7
 8089c32:  jbe 8089cfa
 8089c38:  cmp esi, 0x3
 8089c3b:  mov edx, DWORD PTR [edx]
 8089c3d:  mov eax, 0x20051017
 8089c42:  je 8089c4b
 8089c44:  mov eax, esi
 8089c46:  xor eax, 0x20031115
 8089c4b:  cmp edx, eax
 8089c4d:  jne 8089cfa
 8089c53:  mov edx, DWORD PTR [edi+0x4]
 8089c56:  cmp edx, DWORD PTR [esi*4+0x80b6860]
 8089c5d:  jb 8089cfa
 8089c63:  lea eax, [edx*4+0x8]
 8089c6a:  cmp ebx, eax
 8089c6c:  jbe 8089cfa
 8089c72:  lea eax, [edx*4+0x24]
 8089c79:  mov DWORD PTR [esp], eax
 8089c7c:  call 804d6f0
 8089c81:  test eax, eax
 8089c83:  mov ecx, eax
 8089c85:  mov DWORD PTR [ebp-0x10], eax
 8089c88:  je 8089d14
 8089c8e:  mov DWORD PTR [eax+0x4], edi
 8089c91:  mov DWORD PTR [eax+0x8], ebx
 8089c94:  mov DWORD PTR [eax+0x14], 0x0
 8089c9b:  mov DWORD PTR [eax+0x10], 0x0
 8089ca2:  mov DWORD PTR [eax+0x18], 0x0
 8089ca9:  mov DWORD PTR [eax+0x1c], 0x0
 8089cb0:  mov eax, DWORD PTR [edi+0x4]
 8089cb3:  test eax, eax
 8089cb5:  mov DWORD PTR [ecx+0x20], eax
 8089cb8:  je 8089d14
 8089cba:  mov ebx, DWORD PTR [edi+0x8]
 8089cbd:  xor edx, edx
 8089cbf:  cmp ebx, DWORD PTR [ecx+0x8]
 8089cc2:  ja 8089cf2
 8089cc4:  lea esi, [esi]
 8089cc8:  cmp esi, 0xc
 8089ccb:  jbe 8089d20
 8089ccd:  test esi, esi
 8089ccf:  jne 8089f35
 8089cd5:  cmp edx, 0x46
 8089cd8:  jbe 8089d38
 8089cda:  add ebx, DWORD PTR [ecx+0x4]
 8089cdd:  mov DWORD PTR [ecx+edx*4+0x24], ebx
 8089ce1:  add edx, 0x1
 8089ce4:  cmp DWORD PTR [ecx+0x20], edx
 8089ce7:  jbe 8089d14
 8089ce9:  mov ebx, DWORD PTR [edi+edx*4+0x8]
 8089ced:  cmp ebx, DWORD PTR [ecx+0x8]
 8089cf0:  jbe 8089cc8
 8089cf2:  mov DWORD PTR [esp], ecx
 8089cf5:  call 804b4a0
 8089cfa:  mov edx, 0xffffffe8
 8089d00:  mov eax, gs:0x0
 8089d06:  mov DWORD PTR [ebp-0x10], 0x0
 8089d0d:  mov DWORD PTR [eax+edx], 0x16
 8089d14:  mov eax, DWORD PTR [ebp-0x10]
 8089d17:  add esp, 0x14
 8089d1a:  pop ebx
 8089d1b:  pop esi
 8089d1c:  pop edi
 8089d1d:  pop ebp
 8089d1e:  ret
 8089d1f:  nop
 8089d20:  jmp DWORD PTR [esi*4+0x80b6820]
 8089d27:  nop
 8089d28:  cmp edx, 0xf
 8089d2b:  ja 8089f59
 8089d31:  lea esi, [esi]
 8089d38:  mov eax, DWORD PTR [esi*4+0x80b68a0]
 8089d3f:  cmp DWORD PTR [eax+edx*4], 0x5
 8089d43:  jne 8089cda
 8089d45:  test bl, 0x3
 8089d48:  jne 8089cf2
 8089d4a:  mov eax, DWORD PTR [ecx+0x4]
 8089d4d:  mov eax, DWORD PTR [eax+ebx]
 8089d50:  mov DWORD PTR [ecx+edx*4+0x24], eax
 8089d54:  jmp 8089ce1
 8089d56:  xchg ax, ax
 8089d58:  cmp edx, 0x1
 8089d5b:  jbe 8089d38
 8089d5d:  mov DWORD PTR [esp+0xc], 0x80b6438
 8089d65:  mov DWORD PTR [esp+0x8], 0x8a
 8089d6d:  mov DWORD PTR [esp+0x4], 0x80b6414
 8089d75:  mov DWORD PTR [esp], 0x80b6744
 8089d7c:  call 8051490
 8089d81:  lea esi, [esi]
 8089d88:  cmp edx, 0x4
 8089d8b:  jbe 8089d38
 8089d8d:  mov DWORD PTR [esp+0xc], 0x80b6438
 8089d95:  mov DWORD PTR [esp+0x8], 0x89
 8089d9d:  mov DWORD PTR [esp+0x4], 0x80b6414
 8089da5:  mov DWORD PTR [esp], 0x80b66ec
 8089dac:  call 8051490
 8089db1:  lea esi, [esi]
 8089db8:  cmp edx, 0xc
 8089dbb:  jbe 8089d38
 8089dc1:  mov DWORD PTR [esp+0xc], 0x80b6438
 8089dc9:  mov DWORD PTR [esp+0x8], 0x88
 8089dd1:  mov DWORD PTR [esp+0x4], 0x80b6414
 8089dd9:  mov DWORD PTR [esp], 0x80b6698
 8089de0:  call 8051490
 8089de5:  lea esi, [esi]
 8089de8:  cmp edx, 0x6
 8089deb:  jbe 8089d38
 8089df1:  mov DWORD PTR [esp+0xc], 0x80b6438
 8089df9:  mov DWORD PTR [esp+0x8], 0x87
 8089e01:  mov DWORD PTR [esp+0x4], 0x80b6414
 8089e09:  mov DWORD PTR [esp], 0x80b6648
 8089e10:  call 8051490
 8089e15:  lea esi, [esi]
 8089e18:  cmp edx, 0x2
 8089e1b:  jbe 8089d38
 8089e21:  mov DWORD PTR [esp+0xc], 0x80b6438
 8089e29:  mov DWORD PTR [esp+0x8], 0x86
 8089e31:  mov DWORD PTR [esp+0x4], 0x80b6414
 8089e39:  mov DWORD PTR [esp], 0x80b65f8
 8089e40:  call 8051490
 8089e45:  lea esi, [esi]
 8089e48:  cmp edx, 0x4
 8089e4b:  jbe 8089d38
 8089e51:  mov DWORD PTR [esp+0xc], 0x80b6438
 8089e59:  mov DWORD PTR [esp+0x8], 0x85
 8089e61:  mov DWORD PTR [esp+0x4], 0x80b6414
 8089e69:  mov DWORD PTR [esp], 0x80b65a0
 8089e70:  call 8051490
 8089e75:  lea esi, [esi]
 8089e78:  cmp edx, 0x2d
 8089e7b:  jbe 8089d38
 8089e81:  mov DWORD PTR [esp+0xc], 0x80b6438
 8089e89:  mov DWORD PTR [esp+0x8], 0x84
 8089e91:  mov DWORD PTR [esp+0x4], 0x80b6414
 8089e99:  mov DWORD PTR [esp], 0x80b6548
 8089ea0:  call 8051490
 8089ea5:  lea esi, [esi]
 8089ea8:  cmp edx, 0x12
 8089eab:  jbe 8089d38
 8089eb1:  mov DWORD PTR [esp+0xc], 0x80b6438
 8089eb9:  mov DWORD PTR [esp+0x8], 0x83
 8089ec1:  mov DWORD PTR [esp+0x4], 0x80b6414
 8089ec9:  mov DWORD PTR [esp], 0x80b64f4
 8089ed0:  call 8051490
 8089ed5:  lea esi, [esi]
 8089ed8:  cmp edx, 0x6e
 8089edb:  jbe 8089d38
 8089ee1:  mov DWORD PTR [esp+0xc], 0x80b6438
 8089ee9:  mov DWORD PTR [esp+0x8], 0x82
 8089ef1:  mov DWORD PTR [esp+0x4], 0x80b6414
 8089ef9:  mov DWORD PTR [esp], 0x80b64a4
 8089f00:  call 8051490
 8089f05:  lea esi, [esi]
 8089f08:  cmp edx, 0x5
 8089f0b:  jbe 8089d38
 8089f11:  mov DWORD PTR [esp+0xc], 0x80b6438
 8089f19:  mov DWORD PTR [esp+0x8], 0x81
 8089f21:  mov DWORD PTR [esp+0x4], 0x80b6414
 8089f29:  mov DWORD PTR [esp], 0x80b6450
 8089f30:  call 8051490
 8089f35:  mov DWORD PTR [esp+0xc], 0x80b6438
 8089f3d:  mov DWORD PTR [esp+0x8], 0x8d
 8089f45:  mov DWORD PTR [esp+0x4], 0x80b6414
 8089f4d:  mov DWORD PTR [esp], 0x80b6421
 8089f54:  call 8051490
 8089f59:  mov DWORD PTR [esp+0xc], 0x80b6438
 8089f61:  mov DWORD PTR [esp+0x8], 0x8b
 8089f69:  mov DWORD PTR [esp+0x4], 0x80b6414
 8089f71:  mov DWORD PTR [esp], 0x80b67a0
 8089f78:  call 8051490
 8089f7d:  lea esi, [esi]

08089f80 <_nl_load_locale>:
 8089f80:  push ebp
 8089f81:  mov ebp, esp
 8089f83:  push edi
 8089f84:  push esi
 8089f85:  push ebx
 8089f86:  sub esp, 0x9c
 8089f8c:  mov DWORD PTR [eax+0x4], 0x1
 8089f93:  mov DWORD PTR [eax+0x8], 0x0
 8089f9a:  mov DWORD PTR [ebp-0x80], eax
 8089f9d:  mov DWORD PTR [esp+0x4], 0x0
 8089fa5:  mov eax, DWORD PTR [eax]
 8089fa7:  mov DWORD PTR [ebp-0x84], edx
 8089fad:  mov DWORD PTR [esp], eax
 8089fb0:  call 804f1fa
 8089fb5:  test eax, eax
 8089fb7:  mov edi, eax
 8089fb9:  js 808a092
 8089fbf:  lea ecx, [ebp-0x6c]
 8089fc2:  mov DWORD PTR [esp+0x8], ecx
 8089fc6:  mov DWORD PTR [esp+0x4], eax
 8089fca:  mov DWORD PTR [esp], 0x3
 8089fd1:  call 804f1b0
 8089fd6:  test eax, eax
 8089fd8:  js 808a0c0
 8089fde:  mov eax, DWORD PTR [ebp-0x5c]
 8089fe1:  and eax, 0xf000
 8089fe6:  cmp eax, 0x4000
 8089feb:  je 808a16d
 8089ff1:  mov ecx, DWORD PTR gs:0x0
 8089ff8:  mov ebx, 0xffffffe8
 8089ffe:  mov eax, DWORD PTR [ebp-0x40]
 808a001:  mov DWORD PTR [ebp-0x88], ecx
 808a007:  mov ebx, DWORD PTR [ecx+ebx]
 808a00a:  mov DWORD PTR [esp+0x14], 0x0
 808a012:  mov DWORD PTR [esp+0x10], edi
 808a016:  mov DWORD PTR [esp+0xc], 0x2
 808a01e:  mov DWORD PTR [ebp-0x7c], ebx
 808a021:  mov DWORD PTR [esp+0x8], 0x1
 808a029:  mov DWORD PTR [esp+0x4], eax
 808a02d:  mov DWORD PTR [esp], 0x0
 808a034:  call 8050000
 808a039:  mov DWORD PTR [ebp-0x90], eax
 808a03f:  add eax, 0x1
 808a042:  je 808a0cb
 808a048:  mov DWORD PTR [ebp-0x78], 0x1
 808a04f:  mov esi, 0x1
 808a054:  mov ebx, edi
 808a056:  mov eax, 0x6
 808a05b:  int 0x80
 808a05d:  mov eax, DWORD PTR [ebp-0x90]
 808a063:  test eax, eax
 808a065:  je 808a092
 808a067:  mov ecx, DWORD PTR [ebp-0x40]
 808a06a:  mov edx, DWORD PTR [ebp-0x90]
 808a070:  mov eax, DWORD PTR [ebp-0x84]
 808a076:  call 8089c20
 808a07b:  test eax, eax
 808a07d:  je 808a230
 808a083:  mov edx, DWORD PTR [ebp-0x80]
 808a086:  mov DWORD PTR [eax], 0x0
 808a08c:  mov DWORD PTR [eax+0xc], esi
 808a08f:  mov DWORD PTR [edx+0x8], eax
 808a092:  lea esp, [ebp-0xc]
 808a095:  pop ebx
 808a096:  pop esi
 808a097:  pop edi
 808a098:  pop ebp
 808a099:  ret
 808a09a:  mov ecx, DWORD PTR [ebp-0x90]
 808a0a0:  mov DWORD PTR [esp], ecx
 808a0a3:  call 804b4a0
 808a0a8:  test esi, esi
 808a0aa:  jne 808a0c0
 808a0ac:  mov eax, DWORD PTR [ebp-0x88]
 808a0b2:  mov ebx, 0xffffffe8
 808a0b8:  mov DWORD PTR [eax+ebx], 0x16
 808a0bf:  nop
 808a0c0:  mov ebx, edi
 808a0c2:  mov eax, 0x6
 808a0c7:  int 0x80
 808a0c9:  jmp 808a092
 808a0cb:  mov edx, DWORD PTR [ebp-0x88]
 808a0d1:  mov eax, 0xffffffe8
 808a0d6:  cmp DWORD PTR [edx+eax], 0x26
 808a0da:  jne 808a048
 808a0e0:  mov eax, DWORD PTR [ebp-0x40]
 808a0e3:  xor esi, esi
 808a0e5:  mov DWORD PTR [esp], eax
 808a0e8:  call 804d6f0
 808a0ed:  mov DWORD PTR [ebp-0x78], 0x0
 808a0f4:  test eax, eax
 808a0f6:  mov DWORD PTR [ebp-0x90], eax
 808a0fc:  je 808a054
 808a102:  mov ecx, DWORD PTR [ebp-0x40]
 808a105:  test ecx, ecx
 808a107:  mov DWORD PTR [ebp-0x74], ecx
 808a10a:  jle 808a14d
 808a10c:  mov ebx, DWORD PTR [ebp-0x90]
 808a112:  mov DWORD PTR [ebp-0x70], ebx
 808a115:  mov edx, ebx
 808a117:  jmp 808a126
 808a119:  lea esi, [esi]
 808a120:  add DWORD PTR [ebp-0x70], eax
 808a123:  mov edx, DWORD PTR [ebp-0x70]
 808a126:  mov eax, DWORD PTR [ebp-0x74]
 808a129:  mov DWORD PTR [esp+0x4], edx
 808a12d:  mov DWORD PTR [esp], edi
 808a130:  mov DWORD PTR [esp+0x8], eax
 808a134:  call 804f25a
 808a139:  test eax, eax
 808a13b:  mov esi, eax
 808a13d:  jle 808a09a
 808a143:  sub DWORD PTR [ebp-0x74], eax
 808a146:  mov edx, DWORD PTR [ebp-0x74]
 808a149:  test edx, edx
 808a14b:  jg 808a120
 808a14d:  mov ebx, DWORD PTR [ebp-0x7c]
 808a150:  xor esi, esi
 808a152:  mov ecx, DWORD PTR [ebp-0x88]
 808a158:  mov edx, 0xffffffe8
 808a15e:  mov DWORD PTR [ebp-0x78], 0x0
 808a165:  mov DWORD PTR [ecx+edx], ebx
 808a168:  jmp 808a054
 808a16d:  mov ebx, edi
 808a16f:  mov eax, 0x6
 808a174:  int 0x80
 808a176:  mov eax, DWORD PTR [ebp-0x80]
 808a179:  mov eax, DWORD PTR [eax]
 808a17b:  mov DWORD PTR [esp], eax
 808a17e:  mov DWORD PTR [ebp-0x8c], eax
 808a184:  call 804eea0
 808a189:  mov edx, DWORD PTR [ebp-0x84]
 808a18f:  mov ecx, DWORD PTR [ebp-0x84]
 808a195:  movzx esi, BYTE PTR [edx+0x80b6296]
 808a19c:  movzx ebx, BYTE PTR [ecx+0x80b6289]
 808a1a3:  lea edx, [eax+esi+0x18]
 808a1a7:  add esi, 0x1
 808a1aa:  and edx, 0xfc
 808a1ad:  add ebx, 0x80b6200
 808a1b3:  sub esp, edx
 808a1b5:  mov DWORD PTR [esp+0x8], eax
 808a1b9:  mov eax, DWORD PTR [ebp-0x8c]
 808a1bf:  lea edi, [esp+0x27]
 808a1c3:  and edi, 0xf0
 808a1c6:  mov DWORD PTR [esp], edi
 808a1c9:  mov DWORD PTR [esp+0x4], eax
 808a1cd:  call 806c310
 808a1d2:  mov DWORD PTR [eax], 0x5359532f
 808a1d8:  mov BYTE PTR [eax+0x4], 0x5f
 808a1dc:  add eax, 0x5
 808a1df:  mov DWORD PTR [esp+0x8], esi
 808a1e3:  mov DWORD PTR [esp+0x4], ebx
 808a1e7:  mov DWORD PTR [esp], eax
 808a1ea:  call 804efc0
 808a1ef:  mov DWORD PTR [esp], edi
 808a1f2:  mov DWORD PTR [esp+0x4], 0x0
 808a1fa:  call 804f1fa
 808a1ff:  test eax, eax
 808a201:  mov edi, eax
 808a203:  js 808a092
 808a209:  lea edx, [ebp-0x6c]
 808a20c:  mov DWORD PTR [esp+0x8], edx
 808a210:  mov DWORD PTR [esp+0x4], eax
 808a214:  mov DWORD PTR [esp], 0x3
 808a21b:  call 804f1b0
 808a220:  test eax, eax
 808a222:  jns 8089ff1
 808a228:  jmp 808a0c0
 808a22d:  lea esi, [esi]
 808a230:  cmp DWORD PTR [ebp-0x78], 0x1
 808a234:  lea esi, [esi]
 808a238:  jne 808a092
 808a23e:  mov eax, DWORD PTR [ebp-0x40]
 808a241:  mov DWORD PTR [esp+0x4], eax
 808a245:  mov eax, DWORD PTR [ebp-0x90]
 808a24b:  mov DWORD PTR [esp], eax
 808a24e:  call 8050050
 808a253:  jmp 808a092
 808a258:  nop
 808a259:  nop
 808a25a:  nop
 808a25b:  nop
 808a25c:  nop
 808a25d:  nop
 808a25e:  nop
 808a25f:  nop

0808a260 <rangecmp>:
 808a260:  push ebp
 808a261:  mov ebp, esp
 808a263:  mov eax, DWORD PTR [ebp+0x8]
 808a266:  mov edx, DWORD PTR [ebp+0xc]
 808a269:  pop ebp
 808a26a:  mov eax, DWORD PTR [eax]
 808a26c:  sub eax, DWORD PTR [edx]
 808a26e:  ret
 808a26f:  nop

0808a270 <_nl_load_locale_from_archive>:
 808a270:  push ebp
 808a271:  mov ebp, esp
 808a273:  push edi
 808a274:  push esi
 808a275:  push ebx
 808a276:  sub esp, 0x210
 808a27c:  mov DWORD PTR [ebp-0x1ec], eax
 808a282:  mov eax, DWORD PTR [edx]
 808a284:  mov DWORD PTR [ebp-0x1f0], edx
 808a28a:  mov DWORD PTR [ebp-0x1cc], eax
 808a290:  mov DWORD PTR [esp], 0x1e
 808a297:  call 8072b70
 808a29c:  mov ebx, DWORD PTR ds:0x80d2b20
 808a2a2:  test ebx, ebx
 808a2a4:  mov DWORD PTR [ebp-0x1e8], eax
 808a2aa:  jne 808a2cc
 808a2ac:  jmp 808a2f8
 808a2ae:  xchg ax, ax
 808a2b0:  mov DWORD PTR [esp+0x4], esi
 808a2b4:  mov edx, DWORD PTR [ebp-0x1cc]
 808a2ba:  mov DWORD PTR [esp], edx
 808a2bd:  call 806af90
 808a2c2:  test eax, eax
 808a2c4:  je 808a2d7
 808a2c6:  mov ebx, DWORD PTR [ebx]
 808a2c8:  test ebx, ebx
 808a2ca:  je 808a2f8
 808a2cc:  mov esi, DWORD PTR [ebx+0x4]
 808a2cf:  cmp esi, DWORD PTR [ebp-0x1cc]
 808a2d5:  jne 808a2b0
 808a2d7:  mov ecx, DWORD PTR [ebp-0x1f0]
 808a2dd:  mov DWORD PTR [ecx], esi
 808a2df:  mov esi, DWORD PTR [ebp-0x1ec]
 808a2e5:  mov eax, DWORD PTR [ebx+esi*4+0x8]
 808a2e9:  lea esp, [ebp-0xc]
 808a2ec:  pop ebx
 808a2ed:  pop esi
 808a2ee:  pop edi
 808a2ef:  pop ebp
 808a2f0:  ret
 808a2f1:  lea esi, [esi]
 808a2f8:  mov DWORD PTR [esp+0x4], 0x2e
 808a300:  mov edi, DWORD PTR [ebp-0x1cc]
 808a306:  mov DWORD PTR [esp], edi
 808a309:  call 806ae20
 808a30e:  test eax, eax
 808a310:  je 808a325
 808a312:  lea ebx, [eax+0x1]
 808a315:  movzx eax, BYTE PTR [eax+0x1]
 808a319:  cmp al, 0x40
 808a31b:  je 808a325
 808a31d:  test al, al
 808a31f:  jne 808a844
 808a325:  mov ebx, DWORD PTR ds:0x80d2aa0
 808a32b:  mov DWORD PTR [ebp-0x1bc], 0xffffffff
 808a335:  test ebx, ebx
 808a337:  je 808aa0e
 808a33d:  mov esi, DWORD PTR ds:0x80d2aa4
 808a343:  test esi, esi
 808a345:  mov DWORD PTR [ebp-0x1e4], esi
 808a34b:  je 808a790
 808a351:  mov edi, DWORD PTR [ebp-0x1cc]
 808a357:  mov DWORD PTR [esp], edi
 808a35a:  call 804eea0
 808a35f:  test eax, eax
 808a361:  mov ebx, eax
 808a363:  je 808a7a8
 808a369:  mov esi, DWORD PTR [ebp-0x1cc]
 808a36f:  xor ecx, ecx
 808a371:  mov DWORD PTR [ebp-0x1a0], eax
 808a377:  nop
 808a378:  mov edx, DWORD PTR [ebp-0x1a0]
 808a37e:  movsx eax, BYTE PTR [esi+ecx]
 808a382:  add ecx, 0x1
 808a385:  ror edx, 0x17
 808a388:  cmp ebx, ecx
 808a38a:  lea eax, [edx+eax]
 808a38d:  mov DWORD PTR [ebp-0x1a0], eax
 808a393:  ja 808a378
 808a395:  test eax, eax
 808a397:  je 808a7a8
 808a39d:  mov eax, DWORD PTR [ebp-0x1e4]
 808a3a3:  xor edx, edx
 808a3a5:  mov edi, DWORD PTR [ebp-0x1e4]
 808a3ab:  mov eax, DWORD PTR [eax+0x10]
 808a3ae:  add edi, DWORD PTR [edi+0x8]
 808a3b1:  mov DWORD PTR [ebp-0x1e0], eax
 808a3b7:  mov eax, DWORD PTR [ebp-0x1a0]
 808a3bd:  div DWORD PTR [ebp-0x1e0]
 808a3c3:  mov ebx, DWORD PTR [ebp-0x1e0]
 808a3c9:  mov eax, DWORD PTR [ebp-0x1a0]
 808a3cf:  mov DWORD PTR [ebp-0x1c8], edi
 808a3d5:  sub ebx, 0x2
 808a3d8:  mov ecx, edx
 808a3da:  xor edx, edx
 808a3dc:  div ebx
 808a3de:  lea edi, [edx+0x1]
 808a3e1:  lea eax, [edi+edi*2]
 808a3e4:  shl eax, 0x2
 808a3e7:  mov DWORD PTR [ebp-0x1f8], eax
 808a3ed:  mov edx, DWORD PTR [ebp-0x1c8]
 808a3f3:  lea eax, [ecx+ecx*2]
 808a3f6:  lea esi, [edi+ecx]
 808a3f9:  lea ebx, [edx+eax*4+0x4]
 808a3fd:  jmp 808a41b
 808a3ff:  nop
 808a400:  lea edx, [esi+edi]
 808a403:  mov eax, edx
 808a405:  add ebx, DWORD PTR [ebp-0x1f8]
 808a40b:  sub eax, edi
 808a40d:  cmp DWORD PTR [ebp-0x1e0], eax
 808a413:  jbe 808a768
 808a419:  mov esi, edx
 808a41b:  mov eax, DWORD PTR [ebx]
 808a41d:  lea ecx, [ebx-0x4]
 808a420:  mov DWORD PTR [ebp-0x1dc], ecx
 808a426:  test eax, eax
 808a428:  je 808a790
 808a42e:  mov edx, DWORD PTR [ebp-0x1a0]
 808a434:  cmp DWORD PTR [ebx-0x4], edx
 808a437:  jne 808a400
 808a439:  add eax, DWORD PTR [ebp-0x1e4]
 808a43f:  mov DWORD PTR [esp+0x4], eax
 808a443:  mov ecx, DWORD PTR [ebp-0x1cc]
 808a449:  mov DWORD PTR [esp], ecx
 808a44c:  call 806af90
 808a451:  test eax, eax
 808a453:  jne 808a400
 808a455:  mov ebx, DWORD PTR [ebp-0x1dc]
 808a45b:  mov eax, DWORD PTR [ebx+0x8]
 808a45e:  test eax, eax
 808a460:  je 808a790
 808a466:  mov ebx, DWORD PTR [ebp-0x1e4]
 808a46c:  xor ecx, ecx
 808a46e:  mov DWORD PTR [ebp-0x1c4], 0x0
 808a478:  add ebx, eax
 808a47a:  lea esi, [esi]
 808a480:  cmp ecx, 0x6
 808a483:  je 808a928
 808a489:  mov eax, DWORD PTR [ebp-0x1c4]
 808a48f:  mov edx, DWORD PTR [ebx+ecx*8+0x4]
 808a493:  add DWORD PTR [ebp-0x1c4], 0x1
 808a49a:  shl eax, 0x4
 808a49d:  mov DWORD PTR [ebp+eax-0x194], edx
 808a4a4:  mov edx, DWORD PTR [ebx+ecx*8+0x8]
 808a4a8:  mov DWORD PTR [ebp+eax-0x18c], ecx
 808a4af:  add ecx, 0x1
 808a4b2:  cmp ecx, 0xc
 808a4b5:  mov DWORD PTR [ebp+eax-0x188], 0x0
 808a4c0:  mov DWORD PTR [ebp+eax-0x190], edx
 808a4c7:  jle 808a480
 808a4c9:  mov DWORD PTR [esp+0xc], 0x808a260
 808a4d1:  lea edi, [ebp-0x194]
 808a4d7:  mov DWORD PTR [esp+0x8], 0x10
 808a4df:  mov esi, DWORD PTR [ebp-0x1c4]
 808a4e5:  mov DWORD PTR [esp], edi
 808a4e8:  mov DWORD PTR [esp+0x4], esi
 808a4ec:  call 80562c0
 808a4f1:  mov eax, DWORD PTR [ebp-0x1e8]
 808a4f7:  mov edx, DWORD PTR [ebp-0x1e8]
 808a4fd:  mov ebx, DWORD PTR ds:0x80d2aa0
 808a503:  mov DWORD PTR [ebp-0x1c0], 0x0
 808a50d:  sub eax, 0x1
 808a510:  mov DWORD PTR [ebp-0x1d8], eax
 808a516:  neg edx
 808a518:  and eax, DWORD PTR [ebp-0x1e8]
 808a51e:  mov DWORD PTR [ebp-0x1a4], ebx
 808a524:  mov DWORD PTR [ebp-0x1f4], edx
 808a52a:  mov DWORD PTR [ebp-0x1d4], eax
 808a530:  test ebx, ebx
 808a532:  mov DWORD PTR [ebp-0x198], 0x0
 808a53c:  je 808a5a9
 808a53e:  mov eax, DWORD PTR [ebp-0x1c0]
 808a544:  mov edx, DWORD PTR [ebx+0x4]
 808a547:  mov DWORD PTR [ebp-0x198], ebx
 808a54d:  mov ecx, DWORD PTR [ebp-0x1a4]
 808a553:  shl eax, 0x4
 808a556:  mov edi, DWORD PTR [ebp+eax-0x194]
 808a55d:  mov eax, DWORD PTR [ebp+eax-0x190]
 808a564:  mov esi, eax
 808a566:  mov DWORD PTR [ebp-0x19c], eax
 808a56c:  mov eax, edx
 808a56e:  add esi, edi
 808a570:  add eax, DWORD PTR [ebx+0x8]
 808a573:  cmp eax, esi
 808a575:  jbe 808a590
 808a577:  jmp 808a93e
 808a57c:  lea esi, [esi]
 808a580:  mov edx, DWORD PTR [ebx+0x4]
 808a583:  mov eax, DWORD PTR [ebx+0x8]
 808a586:  add eax, edx
 808a588:  cmp eax, esi
 808a58a:  ja 808a932
 808a590:  mov ecx, ebx
 808a592:  mov ebx, DWORD PTR [ebx+0xc]
 808a595:  test ebx, ebx
 808a597:  jne 808a580
 808a599:  mov DWORD PTR [ebp-0x1a4], ecx
 808a59f:  mov DWORD PTR [ebp-0x198], 0x0
 808a5a9:  mov edx, DWORD PTR [ebp-0x1d4]
 808a5af:  test edx, edx
 808a5b1:  jne 808abe5
 808a5b7:  mov eax, DWORD PTR [ebp-0x1c0]
 808a5bd:  mov edi, DWORD PTR ds:0x80d2aec
 808a5c3:  shl eax, 0x4
 808a5c6:  test ebx, ebx
 808a5c8:  mov esi, DWORD PTR [ebp+eax-0x194]
 808a5cf:  mov DWORD PTR [ebp-0x1fc], edi
 808a5d5:  mov DWORD PTR [ebp-0x1a8], esi
 808a5db:  je 808a987
 808a5e1:  lea ecx, [ebp+eax-0x190]
 808a5e8:  mov eax, DWORD PTR [ebp-0x1c0]
 808a5ee:  mov edx, esi
 808a5f0:  mov DWORD PTR [ebp-0x1b0], eax
 808a5f6:  xchg ax, ax
 808a5f8:  mov eax, edx
 808a5fa:  add eax, DWORD PTR [ecx]
 808a5fc:  cmp DWORD PTR [ebp-0x1fc], eax
 808a602:  jb 808a790
 808a608:  mov esi, DWORD PTR [ebp-0x1d8]
 808a60e:  add esi, eax
 808a610:  and esi, DWORD PTR [ebp-0x1f4]
 808a616:  cmp edx, DWORD PTR [ebx+0x4]
 808a619:  jae 808a643
 808a61b:  add DWORD PTR [ebp-0x1b0], 0x1
 808a622:  mov edx, DWORD PTR [ebp-0x1c4]
 808a628:  cmp DWORD PTR [ebp-0x1b0], edx
 808a62e:  jge 808a643
 808a630:  mov edi, DWORD PTR [ebp-0x1e8]
 808a636:  mov edx, DWORD PTR [ecx+0xc]
 808a639:  add ecx, 0x10
 808a63c:  lea eax, [esi+edi]
 808a63f:  cmp edx, eax
 808a641:  jb 808a5f8
 808a643:  cmp DWORD PTR [ebp-0x1bc], 0xff
 808a64a:  je 808ac09
 808a650:  mov edi, DWORD PTR [ebp-0x1f4]
 808a656:  and edi, DWORD PTR [ebp-0x1a8]
 808a65c:  sub esi, edi
 808a65e:  mov DWORD PTR [ebp-0x1d0], esi
 808a664:  mov DWORD PTR [esp+0x14], edi
 808a668:  mov DWORD PTR [esp+0x18], 0x0
 808a670:  mov ecx, DWORD PTR [ebp-0x1bc]
 808a676:  mov DWORD PTR [esp+0xc], 0x2
 808a67e:  mov DWORD PTR [esp+0x8], 0x1
 808a686:  mov DWORD PTR [esp+0x4], esi
 808a68a:  mov DWORD PTR [esp+0x10], ecx
 808a68e:  mov DWORD PTR [esp], 0x0
 808a695:  call 8073690
 808a69a:  mov DWORD PTR [ebp-0x1ac], eax
 808a6a0:  add eax, 0x1
 808a6a3:  je 808a790
 808a6a9:  mov DWORD PTR [esp], 0x10
 808a6b0:  call 804d6f0
 808a6b5:  test eax, eax
 808a6b7:  mov esi, eax
 808a6b9:  je 808a775
 808a6bf:  mov ecx, DWORD PTR [ebp-0x1a4]
 808a6c5:  mov eax, DWORD PTR [ebp-0x1ac]
 808a6cb:  mov edx, DWORD PTR [ebp-0x1d0]
 808a6d1:  mov DWORD PTR [esi+0x4], edi
 808a6d4:  cmp DWORD PTR [ecx+0xc], ebx
 808a6d7:  mov DWORD PTR [esi], eax
 808a6d9:  mov DWORD PTR [esi+0x8], edx
 808a6dc:  jne 808acb8
 808a6e2:  mov eax, DWORD PTR [ebp-0x1c0]
 808a6e8:  lea ecx, [ebp-0x194]
 808a6ee:  mov DWORD PTR [esi+0xc], ebx
 808a6f1:  mov ebx, DWORD PTR [ebp-0x1a4]
 808a6f7:  shl eax, 0x4
 808a6fa:  mov DWORD PTR [ebx+0xc], esi
 808a6fd:  add ecx, eax
 808a6ff:  nop
 808a700:  mov edx, DWORD PTR [ecx]
 808a702:  cmp edi, edx
 808a704:  ja 808a9ea
 808a70a:  mov eax, DWORD PTR [ecx+0x8]
 808a70d:  sub edx, edi
 808a70f:  add edx, DWORD PTR [ebp-0x1ac]
 808a715:  add DWORD PTR [ebp-0x1c0], 0x1
 808a71c:  mov DWORD PTR [ebp+eax*8-0xd4], edx
 808a723:  mov edx, DWORD PTR [ecx+0x4]
 808a726:  add ecx, 0x10
 808a729:  mov DWORD PTR [ebp+eax*8-0xd0], edx
 808a730:  mov eax, DWORD PTR [ebp-0x1c0]
 808a736:  cmp DWORD PTR [ebp-0x1b0], eax
 808a73c:  jg 808a700
 808a73e:  mov ecx, esi
 808a740:  mov edx, DWORD PTR [ebp-0x1c4]
 808a746:  cmp DWORD PTR [ebp-0x1c0], edx
 808a74c:  jge 808ab30
 808a752:  mov ebx, DWORD PTR [ebp-0x198]
 808a758:  mov DWORD PTR [ebp-0x1a4], ecx
 808a75e:  jmp 808a530
 808a763:  nop
 808a764:  lea esi, [esi]
 808a768:  mov ecx, esi
 808a76a:  sub ecx, DWORD PTR [ebp-0x1e0]
 808a770:  jmp 808a3ed
 808a775:  mov ebx, DWORD PTR [ebp-0x1d0]
 808a77b:  mov DWORD PTR [esp+0x4], ebx
 808a77f:  mov esi, DWORD PTR [ebp-0x1ac]
 808a785:  mov DWORD PTR [esp], esi
 808a788:  call 8050050
 808a78d:  lea esi, [esi]
 808a790:  mov ecx, DWORD PTR [ebp-0x1bc]
 808a796:  test ecx, ecx
 808a798:  jns 808a830
 808a79e:  lea esp, [ebp-0xc]
 808a7a1:  xor eax, eax
 808a7a3:  pop ebx
 808a7a4:  pop esi
 808a7a5:  pop edi
 808a7a6:  pop ebp
 808a7a7:  ret
 808a7a8:  mov DWORD PTR [ebp-0x1a0], 0xffffffff
 808a7b2:  jmp 808a39d
 808a7b7:  mov DWORD PTR [esp+0x4], esi
 808a7bb:  mov DWORD PTR [esp], edx
 808a7be:  call 8050050
 808a7c3:  xor eax, eax
 808a7c5:  cmp eax, DWORD PTR ds:0x80d2af0
 808a7cb:  jg 808a830
 808a7cd:  jl 808a7d7
 808a7cf:  cmp ebx, DWORD PTR ds:0x80d2aec
 808a7d5:  ja 808a830
 808a7d7:  mov edx, DWORD PTR [ebp-0x1e8]
 808a7dd:  mov esi, DWORD PTR [ebp-0x1e8]
 808a7e3:  mov DWORD PTR [esp+0x14], 0x0
 808a7eb:  mov DWORD PTR [esp+0x18], 0x0
 808a7f3:  mov ecx, DWORD PTR [ebp-0x1bc]
 808a7f9:  lea eax, [ebx+edx-0x1]
 808a7fd:  neg esi
 808a7ff:  and esi, eax
 808a801:  mov DWORD PTR [esp+0x10], ecx
 808a805:  mov DWORD PTR [esp+0xc], 0x2
 808a80d:  mov DWORD PTR [esp+0x8], 0x1
 808a815:  mov DWORD PTR [esp+0x4], esi
 808a819:  mov DWORD PTR [esp], 0x0
 808a820:  call 8073690
 808a825:  cmp eax, 0xff
 808a828:  mov edx, eax
 808a82a:  jne 808aaee
 808a830:  mov ebx, DWORD PTR [ebp-0x1bc]
 808a836:  mov eax, 0x6
 808a83b:  int 0x80
 808a83d:  xor eax, eax
 808a83f:  jmp 808a2e9
 808a844:  mov DWORD PTR [esp+0x4], 0x40
 808a84c:  mov DWORD PTR [esp], ebx
 808a84f:  call 804f010
 808a854:  mov esi, eax
 808a856:  sub esi, ebx
 808a858:  mov DWORD PTR [ebp-0x1b8], eax
 808a85e:  mov DWORD PTR [esp+0x4], esi
 808a862:  mov DWORD PTR [esp], ebx
 808a865:  call 8054410
 808a86a:  test eax, eax
 808a86c:  mov edi, eax
 808a86e:  je 808a79e
 808a874:  mov DWORD PTR [esp+0x8], esi
 808a878:  mov DWORD PTR [esp+0x4], ebx
 808a87c:  mov DWORD PTR [esp], eax
 808a87f:  call 806b230
 808a884:  test eax, eax
 808a886:  jne 808a892
 808a888:  cmp BYTE PTR [edi+esi], 0x0
 808a88c:  je 808a918
 808a892:  mov DWORD PTR [esp], edi
 808a895:  lea esi, [esi]
 808a898:  call 804eea0
 808a89d:  mov esi, eax
 808a89f:  mov eax, DWORD PTR [ebp-0x1b8]
 808a8a5:  mov DWORD PTR [esp], eax
 808a8a8:  call 804eea0
 808a8ad:  mov edx, ebx
 808a8af:  sub edx, DWORD PTR [ebp-0x1cc]
 808a8b5:  add eax, 0x1
 808a8b8:  mov DWORD PTR [ebp-0x1b4], eax
 808a8be:  add eax, esi
 808a8c0:  lea eax, [edx+eax+0x12]
 808a8c4:  and eax, 0xfc
 808a8c7:  sub esp, eax
 808a8c9:  mov DWORD PTR [esp+0x8], edx
 808a8cd:  mov edx, DWORD PTR [ebp-0x1cc]
 808a8d3:  lea ebx, [esp+0x2b]
 808a8d7:  and ebx, 0xf0
 808a8da:  mov DWORD PTR [esp], ebx
 808a8dd:  mov DWORD PTR [esp+0x4], edx
 808a8e1:  call 806c310
 808a8e6:  mov DWORD PTR [esp+0x8], esi
 808a8ea:  mov DWORD PTR [esp+0x4], edi
 808a8ee:  mov DWORD PTR [esp], eax
 808a8f1:  call 806c310
 808a8f6:  mov ecx, DWORD PTR [ebp-0x1b4]
 808a8fc:  mov DWORD PTR [esp+0x8], ecx
 808a900:  mov esi, DWORD PTR [ebp-0x1b8]
 808a906:  mov DWORD PTR [esp], eax
 808a909:  mov DWORD PTR [esp+0x4], esi
 808a90d:  call 804efc0
 808a912:  mov DWORD PTR [ebp-0x1cc], ebx
 808a918:  mov DWORD PTR [esp], edi
 808a91b:  call 804b4a0
 808a920:  jmp 808a325
 808a925:  lea esi, [esi]
 808a928:  mov ecx, 0x7
 808a92d:  jmp 808a489
 808a932:  mov DWORD PTR [ebp-0x1a4], ecx
 808a938:  mov DWORD PTR [ebp-0x198], ebx
 808a93e:  cmp edi, edx
 808a940:  jb 808a5a9
 808a946:  mov eax, edx
 808a948:  add eax, DWORD PTR [ebx+0x8]
 808a94b:  cmp eax, esi
 808a94d:  jb 808a5a9
 808a953:  mov eax, DWORD PTR [ebp-0x1c0]
 808a959:  sub edi, edx
 808a95b:  add edi, DWORD PTR [ebx]
 808a95d:  mov ebx, DWORD PTR [ebp-0x19c]
 808a963:  add DWORD PTR [ebp-0x1c0], 0x1
 808a96a:  shl eax, 0x4
 808a96d:  mov eax, DWORD PTR [ebp+eax-0x18c]
 808a974:  mov DWORD PTR [ebp+eax*8-0xd4], edi
 808a97b:  mov DWORD PTR [ebp+eax*8-0xd0], ebx
 808a982:  jmp 808a740
 808a987:  lea ecx, [ebp+eax-0x190]
 808a98e:  mov eax, DWORD PTR [ebp-0x1c0]
 808a994:  mov edx, esi
 808a996:  mov DWORD PTR [ebp-0x1b0], eax
 808a99c:  mov eax, edx
 808a99e:  add eax, DWORD PTR [ecx]
 808a9a0:  cmp DWORD PTR [ebp-0x1fc], eax
 808a9a6:  jb 808a790
 808a9ac:  mov esi, DWORD PTR [ebp-0x1d8]
 808a9b2:  add DWORD PTR [ebp-0x1b0], 0x1
 808a9b9:  mov edx, DWORD PTR [ebp-0x1b0]
 808a9bf:  add esi, eax
 808a9c1:  and esi, DWORD PTR [ebp-0x1f4]
 808a9c7:  cmp DWORD PTR [ebp-0x1c4], edx
 808a9cd:  jle 808a643
 808a9d3:  mov edi, DWORD PTR [ebp-0x1e8]
 808a9d9:  mov edx, DWORD PTR [ecx+0xc]
 808a9dc:  add ecx, 0x10
 808a9df:  add edi, esi
 808a9e1:  cmp edx, edi
 808a9e3:  jb 808a99c
 808a9e5:  jmp 808a643
 808a9ea:  mov DWORD PTR [esp+0xc], 0x80b6e65
 808a9f2:  mov DWORD PTR [esp+0x8], 0x1b6
 808a9fa:  mov DWORD PTR [esp+0x4], 0x80b6de0
 808aa02:  mov DWORD PTR [esp], 0x80b6e35
 808aa09:  call 8051490
 808aa0e:  mov DWORD PTR ds:0x80d2aa0, 0x80d2aa4
 808aa18:  mov DWORD PTR [esp+0x4], 0x8000
 808aa20:  mov DWORD PTR [esp], 0x80b6e84
 808aa27:  call 804f1fa
 808aa2c:  test eax, eax
 808aa2e:  mov DWORD PTR [ebp-0x1bc], eax
 808aa34:  js 808a79e
 808aa3a:  mov DWORD PTR [esp+0x8], 0x80d2ac0
 808aa42:  mov DWORD PTR [esp+0x4], eax
 808aa46:  mov DWORD PTR [esp], 0x3
 808aa4d:  call 804f1b0
 808aa52:  add eax, 0x1
 808aa55:  je 808a830
 808aa5b:  mov edx, DWORD PTR ds:0x80d2af0
 808aa61:  mov eax, ds:0x80d2aec
 808aa66:  cmp edx, 0x0
 808aa69:  jl 808aa76
 808aa6b:  jle 808aceb
 808aa71:  mov eax, 0x200000
 808aa76:  mov DWORD PTR [esp+0x14], 0x0
 808aa7e:  mov esi, eax
 808aa80:  mov DWORD PTR [esp+0x18], 0x0
 808aa88:  mov edi, DWORD PTR [ebp-0x1bc]
 808aa8e:  mov DWORD PTR [esp+0xc], 0x2
 808aa96:  mov DWORD PTR [esp+0x8], 0x1
 808aa9e:  mov DWORD PTR [esp+0x4], eax
 808aaa2:  mov DWORD PTR [esp+0x10], edi
 808aaa6:  mov DWORD PTR [esp], 0x0
 808aaad:  call 8073690
 808aab2:  cmp eax, 0xff
 808aab5:  mov edx, eax
 808aab7:  je 808a830
 808aabd:  mov eax, DWORD PTR [eax+0x10]
 808aac0:  lea eax, [eax+eax*2]
 808aac3:  lea ebx, [eax*4]
 808aaca:  imul eax, DWORD PTR [edx+0x24], 0x6c
 808aace:  add ebx, DWORD PTR [edx+0x8]
 808aad1:  add eax, DWORD PTR [edx+0x20]
 808aad4:  cmp ebx, eax
 808aad6:  jge 808aada
 808aad8:  mov ebx, eax
 808aada:  mov eax, DWORD PTR [edx+0x18]
 808aadd:  add eax, DWORD PTR [edx+0x14]
 808aae0:  cmp ebx, eax
 808aae2:  jge 808aae6
 808aae4:  mov ebx, eax
 808aae6:  cmp esi, ebx
 808aae8:  jb 808a7b7
 808aaee:  xor eax, eax
 808aaf0:  cmp eax, DWORD PTR ds:0x80d2af0
 808aaf6:  jl 808ab19
 808aaf8:  jg 808ab02
 808aafa:  cmp esi, DWORD PTR ds:0x80d2aec
 808ab00:  jb 808ab19
 808ab02:  mov ebx, DWORD PTR [ebp-0x1bc]
 808ab08:  mov eax, 0x6
 808ab0d:  int 0x80
 808ab0f:  mov DWORD PTR [ebp-0x1bc], 0xffffffff
 808ab19:  mov DWORD PTR ds:0x80d2aa4, edx
 808ab1f:  mov DWORD PTR ds:0x80d2aac, esi
 808ab25:  jmp 808a33d
 808ab2a:  lea esi, [esi]
 808ab30:  mov eax, DWORD PTR [ebp-0x1bc]
 808ab36:  test eax, eax
 808ab38:  js 808ab47
 808ab3a:  mov ebx, DWORD PTR [ebp-0x1bc]
 808ab40:  mov eax, 0x6
 808ab45:  int 0x80
 808ab47:  mov DWORD PTR [esp], 0x3c
 808ab4e:  call 804d6f0
 808ab53:  test eax, eax
 808ab55:  mov esi, eax
 808ab57:  je 808a79e
 808ab5d:  mov edi, DWORD PTR [ebp-0x1f0]
 808ab63:  mov eax, DWORD PTR [edi]
 808ab65:  mov DWORD PTR [esp], eax
 808ab68:  call 806b010
 808ab6d:  test eax, eax
 808ab6f:  mov DWORD PTR [esi+0x4], eax
 808ab72:  je 808acdc
 808ab78:  mov eax, ds:0x80d2b20
 808ab7d:  xor ebx, ebx
 808ab7f:  mov DWORD PTR [esi], eax
 808ab81:  mov DWORD PTR ds:0x80d2b20, esi
 808ab87:  cmp ebx, 0x6
 808ab8a:  jne 808ab91
 808ab8c:  mov ebx, 0x7
 808ab91:  mov edx, DWORD PTR [ebp+ebx*8-0xd4]
 808ab98:  mov eax, ebx
 808ab9a:  mov ecx, DWORD PTR [ebp+ebx*8-0xd0]
 808aba1:  call 8089c20
 808aba6:  test eax, eax
 808aba8:  mov edx, eax
 808abaa:  mov DWORD PTR [esi+ebx*4+0x8], eax
 808abae:  je 808abc3
 808abb0:  mov DWORD PTR [eax+0xc], 0x2
 808abb7:  mov eax, DWORD PTR [esi+0x4]
 808abba:  mov DWORD PTR [edx+0x18], 0xffffffff
 808abc1:  mov DWORD PTR [edx], eax
 808abc3:  add ebx, 0x1
 808abc6:  cmp ebx, 0xc
 808abc9:  jle 808ab87
 808abcb:  mov eax, DWORD PTR [esi+0x4]
 808abce:  mov edx, DWORD PTR [ebp-0x1f0]
 808abd4:  mov ecx, DWORD PTR [ebp-0x1ec]
 808abda:  mov DWORD PTR [edx], eax
 808abdc:  mov eax, DWORD PTR [esi+ecx*4+0x8]
 808abe0:  jmp 808a2e9
 808abe5:  mov DWORD PTR [esp+0xc], 0x80b6e65
 808abed:  mov DWORD PTR [esp+0x8], 0x175
 808abf5:  mov DWORD PTR [esp+0x4], 0x80b6de0
 808abfd:  mov DWORD PTR [esp], 0x80b6e05
 808ac04:  call 8051490
 808ac09:  mov DWORD PTR [esp+0x4], 0x8000
 808ac11:  mov DWORD PTR [esp], 0x80b6e84
 808ac18:  call 804f1fa
 808ac1d:  mov DWORD PTR [ebp-0x1bc], eax
 808ac23:  add eax, 0x1
 808ac26:  je 808a79e
 808ac2c:  lea eax, [ebp-0x6c]
 808ac2f:  mov DWORD PTR [esp+0x8], eax
 808ac33:  mov edx, DWORD PTR [ebp-0x1bc]
 808ac39:  mov DWORD PTR [esp], 0x3
 808ac40:  mov DWORD PTR [esp+0x4], edx
 808ac44:  call 804f1b0
 808ac49:  test eax, eax
 808ac4b:  js 808a790
 808ac51:  mov edx, DWORD PTR [ebp-0x40]
 808ac54:  mov eax, DWORD PTR [ebp-0x3c]
 808ac57:  xor eax, DWORD PTR ds:0x80d2af0
 808ac5d:  xor edx, DWORD PTR ds:0x80d2aec
 808ac63:  or eax, edx
 808ac65:  jne 808a790
 808ac6b:  mov eax, DWORD PTR [ebp-0x24]
 808ac6e:  cmp eax, DWORD PTR ds:0x80d2b08
 808ac74:  jne 808a790
 808ac7a:  mov edx, DWORD PTR [ebp-0x6c]
 808ac7d:  mov eax, DWORD PTR [ebp-0x68]
 808ac80:  xor eax, DWORD PTR ds:0x80d2ac4
 808ac86:  xor edx, DWORD PTR ds:0x80d2ac0
 808ac8c:  or eax, edx
 808ac8e:  jne 808a790
 808ac94:  mov edx, DWORD PTR [ebp-0x14]
 808ac97:  mov eax, DWORD PTR [ebp-0x10]
 808ac9a:  xor eax, DWORD PTR ds:0x80d2b1c
 808aca0:  xor edx, DWORD PTR ds:0x80d2b18
 808aca6:  or eax, edx
 808aca8:  je 808a650
 808acae:  jmp 808a790
 808acb3:  nop
 808acb4:  lea esi, [esi]
 808acb8:  mov DWORD PTR [esp+0xc], 0x80b6e65
 808acc0:  mov DWORD PTR [esp+0x8], 0x1ae
 808acc8:  mov DWORD PTR [esp+0x4], 0x80b6de0
 808acd0:  mov DWORD PTR [esp], 0x80b6e20
 808acd7:  call 8051490
 808acdc:  mov DWORD PTR [esp], esi
 808acdf:  call 804b4a0
 808ace4:  xor eax, eax
 808ace6:  jmp 808a2e9
 808aceb:  cmp eax, 0x200000
 808acf0:  jbe 808aa76
 808acf6:  xchg ax, ax
 808acf8:  jmp 808aa71
 808acfd:  nop
 808acfe:  nop
 808acff:  nop

0808ad00 <_nl_postload_ctype>:
 808ad00:  push ebp
 808ad01:  mov ebp, esp
 808ad03:  sub esp, 0x8
 808ad06:  mov DWORD PTR [esp], ebx
 808ad09:  mov DWORD PTR [esp+0x4], esi
 808ad0d:  mov edx, DWORD PTR ds:0x80d1380
 808ad13:  mov eax, DWORD PTR [edx+0x24]
 808ad16:  lea ebx, [eax+0x100]
 808ad1c:  mov DWORD PTR ds:0x80d13b4, ebx
 808ad22:  mov eax, DWORD PTR [edx+0x30]
 808ad25:  lea esi, [eax+0x200]
 808ad2b:  mov DWORD PTR ds:0x80d13b8, esi
 808ad31:  mov eax, DWORD PTR [edx+0x28]
 808ad34:  mov edx, DWORD PTR gs:0x0
 808ad3b:  lea ecx, [eax+0x200]
 808ad41:  mov eax, 0xffffffe4
 808ad46:  mov DWORD PTR ds:0x80d13bc, ecx
 808ad4c:  cmp DWORD PTR [edx+eax], 0x80d1380
 808ad53:  je 808ad60
 808ad55:  mov ebx, DWORD PTR [esp]
 808ad58:  mov esi, DWORD PTR [esp+0x4]
 808ad5c:  mov esp, ebp
 808ad5e:  pop ebp
 808ad5f:  ret
 808ad60:  mov eax, 0xfffffff4
 808ad65:  mov DWORD PTR [edx+eax], ebx
 808ad68:  mov eax, 0xfffffff8
 808ad6d:  mov DWORD PTR [edx+eax], ecx
 808ad70:  mov eax, 0xfffffffc
 808ad75:  mov DWORD PTR [edx+eax], esi
 808ad78:  mov ebx, DWORD PTR [esp]
 808ad7b:  mov esi, DWORD PTR [esp+0x4]
 808ad7f:  mov esp, ebp
 808ad81:  pop ebp
 808ad82:  ret
 808ad83:  nop
 808ad84:  nop
 808ad85:  nop
 808ad86:  nop
 808ad87:  nop
 808ad88:  nop
 808ad89:  nop
 808ad8a:  nop
 808ad8b:  nop
 808ad8c:  nop
 808ad8d:  nop
 808ad8e:  nop
 808ad8f:  nop

0808ad90 <__current_locale_name>:
 808ad90:  mov eax, gs:0x0
 808ad96:  mov edx, 0xffffffe4
 808ad9c:  push ebp
 808ad9d:  mov ebp, esp
 808ad9f:  mov edx, DWORD PTR [eax+edx]
 808ada2:  mov eax, DWORD PTR [ebp+0x8]
 808ada5:  pop ebp
 808ada6:  mov eax, DWORD PTR [edx+eax*4+0x40]
 808adaa:  ret
 808adab:  nop
 808adac:  nop
 808adad:  nop
 808adae:  nop
 808adaf:  nop

0808adb0 <__ctype_b_loc>:
 808adb0:  mov ecx, DWORD PTR gs:0x0
 808adb7:  mov edx, 0xfffffff4
 808adbd:  push ebp
 808adbe:  mov ebp, esp
 808adc0:  mov eax, DWORD PTR [ecx+edx]
 808adc3:  test eax, eax
 808adc5:  je 808adcc
 808adc7:  lea eax, [ecx+edx]
 808adca:  pop ebp
 808adcb:  ret
 808adcc:  mov eax, 0xffffffd8
 808add1:  mov eax, DWORD PTR [ecx+eax]
 808add4:  mov eax, DWORD PTR [eax]
 808add6:  mov eax, DWORD PTR [eax+0x24]
 808add9:  add eax, 0x100
 808adde:  mov DWORD PTR [ecx+edx], eax
 808ade1:  jmp 808adc7
 808ade3:  lea esi, [esi]
 808ade9:  lea edi, [edi]

0808adf0 <__ctype_toupper_loc>:
 808adf0:  mov ecx, DWORD PTR gs:0x0
 808adf7:  mov edx, 0xfffffff8
 808adfd:  push ebp
 808adfe:  mov ebp, esp
 808ae00:  mov eax, DWORD PTR [ecx+edx]
 808ae03:  test eax, eax
 808ae05:  je 808ae0c
 808ae07:  lea eax, [ecx+edx]
 808ae0a:  pop ebp
 808ae0b:  ret
 808ae0c:  mov eax, 0xffffffd8
 808ae11:  mov eax, DWORD PTR [ecx+eax]
 808ae14:  mov eax, DWORD PTR [eax]
 808ae16:  mov eax, DWORD PTR [eax+0x28]
 808ae19:  add eax, 0x200
 808ae1e:  mov DWORD PTR [ecx+edx], eax
 808ae21:  jmp 808ae07
 808ae23:  lea esi, [esi]
 808ae29:  lea edi, [edi]

0808ae30 <__ctype_tolower_loc>:
 808ae30:  mov ecx, DWORD PTR gs:0x0
 808ae37:  mov edx, 0xfffffffc
 808ae3d:  push ebp
 808ae3e:  mov ebp, esp
 808ae40:  mov eax, DWORD PTR [ecx+edx]
 808ae43:  test eax, eax
 808ae45:  je 808ae4c
 808ae47:  lea eax, [ecx+edx]
 808ae4a:  pop ebp
 808ae4b:  ret
 808ae4c:  mov eax, 0xffffffd8
 808ae51:  mov eax, DWORD PTR [ecx+eax]
 808ae54:  mov eax, DWORD PTR [eax]
 808ae56:  mov eax, DWORD PTR [eax+0x30]
 808ae59:  add eax, 0x200
 808ae5e:  mov DWORD PTR [ecx+edx], eax
 808ae61:  jmp 808ae47
 808ae63:  nop
 808ae64:  nop
 808ae65:  nop
 808ae66:  nop
 808ae67:  nop
 808ae68:  nop
 808ae69:  nop
 808ae6a:  nop
 808ae6b:  nop
 808ae6c:  nop
 808ae6d:  nop
 808ae6e:  nop
 808ae6f:  nop

0808ae70 <__isinf>:
 808ae70:  push ebp
 808ae71:  mov ebp, esp
 808ae73:  sub esp, 0x8
 808ae76:  fld QWORD PTR [ebp+0x8]
 808ae79:  fstp QWORD PTR [ebp-0x8]
 808ae7c:  mov ecx, DWORD PTR [ebp-0x4]
 808ae7f:  mov eax, DWORD PTR [ebp-0x8]
 808ae82:  leave
 808ae83:  mov edx, ecx
 808ae85:  and edx, 0x7fffffff
 808ae8b:  xor edx, 0x7ff00000
 808ae91:  or edx, eax
 808ae93:  mov eax, edx
 808ae95:  neg eax
 808ae97:  or eax, edx
 808ae99:  sar eax, 0x1f
 808ae9c:  not eax
 808ae9e:  sar ecx, 0x1e
 808aea1:  and eax, ecx
 808aea3:  ret
 808aea4:  nop
 808aea5:  nop
 808aea6:  nop
 808aea7:  nop
 808aea8:  nop
 808aea9:  nop
 808aeaa:  nop
 808aeab:  nop
 808aeac:  nop
 808aead:  nop
 808aeae:  nop
 808aeaf:  nop

0808aeb0 <__isnan>:
 808aeb0:  push ebp
 808aeb1:  mov ebp, esp
 808aeb3:  sub esp, 0x8
 808aeb6:  fld QWORD PTR [ebp+0x8]
 808aeb9:  fstp QWORD PTR [ebp-0x8]
 808aebc:  mov eax, DWORD PTR [ebp-0x8]
 808aebf:  mov ecx, DWORD PTR [ebp-0x4]
 808aec2:  leave
 808aec3:  mov edx, eax
 808aec5:  neg edx
 808aec7:  and ecx, 0x7fffffff
 808aecd:  or edx, eax
 808aecf:  mov eax, 0x7ff00000
 808aed4:  shr edx, 0x1f
 808aed7:  or edx, ecx
 808aed9:  sub eax, edx
 808aedb:  shr eax, 0x1f
 808aede:  ret
 808aedf:  nop

0808aee0 <__isinfl>:
 808aee0:  push ebp
 808aee1:  mov ebp, esp
 808aee3:  sub esp, 0x18
 808aee6:  mov edx, DWORD PTR [ebp+0xc]
 808aee9:  mov ecx, DWORD PTR [ebp+0x10]
 808aeec:  mov eax, DWORD PTR [ebp+0x8]
 808aeef:  mov DWORD PTR [ebp-0x14], edx
 808aef2:  mov edx, DWORD PTR [ebp-0x14]
 808aef5:  mov DWORD PTR [ebp-0x10], ecx
 808aef8:  movsx ecx, WORD PTR [ebp-0x10]
 808aefc:  mov DWORD PTR [ebp-0x18], eax
 808aeff:  sub edx, 0x80000000
 808af05:  mov eax, ecx
 808af07:  and ecx, 0x8000
 808af0d:  or edx, DWORD PTR [ebp-0x18]
 808af10:  not eax
 808af12:  and eax, 0x7fff
 808af17:  sar ecx, 0xe
 808af1a:  or edx, eax
 808af1c:  mov eax, edx
 808af1e:  neg eax
 808af20:  or eax, edx
 808af22:  mov edx, 0x1
 808af27:  sar eax, 0x1f
 808af2a:  sub edx, ecx
 808af2c:  not eax
 808af2e:  and eax, edx
 808af30:  leave
 808af31:  ret
 808af32:  nop
 808af33:  nop
 808af34:  nop
 808af35:  nop
 808af36:  nop
 808af37:  nop
 808af38:  nop
 808af39:  nop
 808af3a:  nop
 808af3b:  nop
 808af3c:  nop
 808af3d:  nop
 808af3e:  nop
 808af3f:  nop

0808af40 <__isnanl>:
 808af40:  push ebp
 808af41:  mov ebp, esp
 808af43:  sub esp, 0x18
 808af46:  mov eax, DWORD PTR [ebp+0x8]
 808af49:  mov edx, DWORD PTR [ebp+0xc]
 808af4c:  mov ecx, DWORD PTR [ebp+0x10]
 808af4f:  mov DWORD PTR [ebp-0x18], eax
 808af52:  mov DWORD PTR [ebp-0x14], edx
 808af55:  mov eax, DWORD PTR [ebp-0x14]
 808af58:  mov DWORD PTR [ebp-0x10], ecx
 808af5b:  movsx ecx, WORD PTR [ebp-0x10]
 808af5f:  and eax, 0x7fffffff
 808af64:  or eax, DWORD PTR [ebp-0x18]
 808af67:  add ecx, ecx
 808af69:  and ecx, 0xffff
 808af6f:  leave
 808af70:  mov edx, eax
 808af72:  neg edx
 808af74:  or edx, eax
 808af76:  mov eax, 0xfffe
 808af7b:  shr edx, 0x1f
 808af7e:  or edx, ecx
 808af80:  sub eax, edx
 808af82:  sar eax, 0x10
 808af85:  ret
 808af86:  nop
 808af87:  nop
 808af88:  nop
 808af89:  nop
 808af8a:  nop
 808af8b:  nop
 808af8c:  nop
 808af8d:  nop
 808af8e:  nop
 808af8f:  nop

0808af90 <__sigsetjmp>:
 808af90:  mov eax, DWORD PTR [esp+0x4]
 808af94:  mov DWORD PTR [eax], ebx
 808af96:  mov DWORD PTR [eax+0x4], esi
 808af99:  mov DWORD PTR [eax+0x8], edi
 808af9c:  lea ecx, [esp+0x4]
 808afa0:  xor ecx, DWORD PTR gs:0x18
 808afa7:  rol ecx, 0x9
 808afaa:  mov DWORD PTR [eax+0x10], ecx
 808afad:  mov ecx, DWORD PTR [esp]
 808afb0:  xor ecx, DWORD PTR gs:0x18
 808afb7:  rol ecx, 0x9
 808afba:  mov DWORD PTR [eax+0x14], ecx
 808afbd:  mov DWORD PTR [eax+0xc], ebp
 808afc0:  jmp 808afd0
 808afc5:  nop
 808afc6:  nop
 808afc7:  nop
 808afc8:  nop
 808afc9:  nop
 808afca:  nop
 808afcb:  nop
 808afcc:  nop
 808afcd:  nop
 808afce:  nop
 808afcf:  nop

0808afd0 <__sigjmp_save>:
 808afd0:  push ebp
 808afd1:  mov ebp, esp
 808afd3:  push ebx
 808afd4:  sub esp, 0xc
 808afd7:  mov eax, DWORD PTR [ebp+0xc]
 808afda:  mov ebx, DWORD PTR [ebp+0x8]
 808afdd:  test eax, eax
 808afdf:  jne 808aff0
 808afe1:  xor edx, edx
 808afe3:  xor eax, eax
 808afe5:  mov DWORD PTR [ebx+0x18], edx
 808afe8:  add esp, 0xc
 808afeb:  pop ebx
 808afec:  pop ebp
 808afed:  ret
 808afee:  xchg ax, ax
 808aff0:  lea eax, [ebx+0x1c]
 808aff3:  mov DWORD PTR [esp+0x8], eax
 808aff7:  mov DWORD PTR [esp+0x4], 0x0
 808afff:  mov DWORD PTR [esp], 0x0
 808b006:  call 808b240
 808b00b:  mov edx, 0x1
 808b010:  test eax, eax
 808b012:  jne 808afe1
 808b014:  mov DWORD PTR [ebx+0x18], edx
 808b017:  xor eax, eax
 808b019:  add esp, 0xc
 808b01c:  pop ebx
 808b01d:  pop ebp
 808b01e:  ret
 808b01f:  nop

0808b020 <__longjmp>:
 808b020:  mov eax, DWORD PTR [esp+0x4]
 808b024:  mov edx, DWORD PTR [eax+0x14]
 808b027:  mov ecx, DWORD PTR [eax+0x10]
 808b02a:  ror edx, 0x9
 808b02d:  xor edx, DWORD PTR gs:0x18
 808b034:  ror ecx, 0x9
 808b037:  xor ecx, DWORD PTR gs:0x18
 808b03e:  mov ebx, DWORD PTR [eax]
 808b040:  mov esi, DWORD PTR [eax+0x4]
 808b043:  mov edi, DWORD PTR [eax+0x8]
 808b046:  mov ebp, DWORD PTR [eax+0xc]
 808b049:  mov eax, DWORD PTR [esp+0x8]
 808b04d:  mov esp, ecx
 808b04f:  jmp edx
 808b051:  nop
 808b052:  nop
 808b053:  nop
 808b054:  nop
 808b055:  nop
 808b056:  nop
 808b057:  nop
 808b058:  nop
 808b059:  nop
 808b05a:  nop
 808b05b:  nop
 808b05c:  nop
 808b05d:  nop
 808b05e:  nop
 808b05f:  nop

0808b060 <raise>:
 808b060:  push ebp
 808b061:  mov ebp, esp
 808b063:  push ebx
 808b064:  mov edx, DWORD PTR gs:0x4c
 808b06b:  mov eax, gs:0x48
 808b071:  test eax, eax
 808b073:  jne 808b0a0
 808b075:  mov eax, 0xe0
 808b07a:  int 0x80
 808b07c:  mov ecx, eax
 808b07e:  mov gs:0x48, eax
 808b084:  mov ebx, eax
 808b086:  mov edx, DWORD PTR [ebp+0x8]
 808b089:  mov eax, 0x10e
 808b08e:  int 0x80
 808b090:  mov ecx, eax
 808b092:  cmp ecx, 0xfffff000
 808b098:  ja 808b0bc
 808b09a:  pop ebx
 808b09b:  pop ebp
 808b09c:  ret
 808b09d:  lea esi, [esi]
 808b0a0:  test edx, edx
 808b0a2:  mov ebx, edx
 808b0a4:  mov ecx, eax
 808b0a6:  jg 808b086
 808b0a8:  test edx, 0x7fffffff
 808b0ae:  mov ebx, eax
 808b0b0:  mov ecx, eax
 808b0b2:  je 808b086
 808b0b4:  mov ebx, edx
 808b0b6:  mov ecx, eax
 808b0b8:  neg ebx
 808b0ba:  jmp 808b086
 808b0bc:  mov eax, gs:0x0
 808b0c2:  neg ecx
 808b0c4:  mov edx, 0xffffffe8
 808b0ca:  mov DWORD PTR [eax+edx], ecx
 808b0cd:  mov eax, 0xffffffff
 808b0d2:  jmp 808b09a
 808b0d4:  nop
 808b0d5:  nop
 808b0d6:  nop
 808b0d7:  nop
 808b0d8:  nop
 808b0d9:  nop
 808b0da:  nop
 808b0db:  nop
 808b0dc:  nop
 808b0dd:  nop
 808b0de:  nop
 808b0df:  nop

0808b0e0 <__restore_rt>:
 808b0e0:  mov eax, 0xad
 808b0e5:  int 0x80
 808b0e7:  nop

0808b0e8 <__restore>:
 808b0e8:  pop eax
 808b0e9:  mov eax, 0x77
 808b0ee:  int 0x80

0808b0f0 <__libc_sigaction>:
 808b0f0:  push ebp
 808b0f1:  xor ecx, ecx
 808b0f3:  mov ebp, esp
 808b0f5:  sub esp, 0x124
 808b0fb:  mov edx, DWORD PTR [ebp+0xc]
 808b0fe:  mov DWORD PTR [ebp-0xc], ebx
 808b101:  mov DWORD PTR [ebp-0x8], esi
 808b104:  mov DWORD PTR [ebp-0x4], edi
 808b107:  test edx, edx
 808b109:  je 808b140
 808b10b:  mov eax, DWORD PTR [edx]
 808b10d:  lea esi, [edx+0x4]
 808b110:  mov cl, 0x20
 808b112:  lea edi, [ebp-0x8c]
 808b118:  mov DWORD PTR [ebp-0x98], eax
 808b11e:  mov eax, DWORD PTR [edx+0x84]
 808b124:  mov edx, DWORD PTR ds:0x80d2e08
 808b12a:  mov DWORD PTR [ebp-0x94], eax
 808b130:  test edx, edx
 808b132:  rep movsd
 808b134:  je 808b1c0
 808b13a:  lea ecx, [ebp-0x98]
 808b140:  cmp DWORD PTR [ebp+0x10], 0x1
 808b144:  mov esi, 0x8
 808b149:  lea edx, [ebp-0x124]
 808b14f:  mov ebx, DWORD PTR [ebp+0x8]
 808b152:  sbb eax, eax
 808b154:  not eax
 808b156:  and edx, eax
 808b158:  mov eax, 0xae
 808b15d:  int 0x80
 808b15f:  cmp eax, 0xfffff000
 808b164:  mov ecx, eax
 808b166:  ja 808b1e4
 808b168:  mov edx, eax
 808b16a:  mov eax, DWORD PTR [ebp+0x10]
 808b16d:  test eax, eax
 808b16f:  je 808b1ad
 808b171:  test ecx, ecx
 808b173:  js 808b1ad
 808b175:  mov ecx, DWORD PTR [ebp+0x10]
 808b178:  lea esi, [ebp-0x118]
 808b17e:  mov eax, DWORD PTR [ebp-0x124]
 808b184:  mov edi, ecx
 808b186:  mov DWORD PTR [ecx], eax
 808b188:  add edi, 0x4
 808b18b:  mov ecx, 0x20
 808b190:  rep movsd
 808b192:  mov eax, DWORD PTR [ebp-0x120]
 808b198:  mov ecx, DWORD PTR [ebp+0x10]
 808b19b:  mov DWORD PTR [ecx+0x84], eax
 808b1a1:  mov eax, DWORD PTR [ebp-0x11c]
 808b1a7:  mov DWORD PTR [ecx+0x88], eax
 808b1ad:  mov ebx, DWORD PTR [ebp-0xc]
 808b1b0:  mov eax, edx
 808b1b2:  mov esi, DWORD PTR [ebp-0x8]
 808b1b5:  mov edi, DWORD PTR [ebp-0x4]
 808b1b8:  mov esp, ebp
 808b1ba:  pop ebp
 808b1bb:  ret
 808b1bc:  lea esi, [esi]
 808b1c0:  test al, 0x4
 808b1c2:  mov edx, 0x808b0e0
 808b1c7:  jne 808b1ce
 808b1c9:  mov edx, 0x808b0e8
 808b1ce:  or eax, 0x4000000
 808b1d3:  mov DWORD PTR [ebp-0x94], eax
 808b1d9:  mov DWORD PTR [ebp-0x90], edx
 808b1df:  jmp 808b13a
 808b1e4:  mov edx, 0xffffffe8
 808b1ea:  neg ecx
 808b1ec:  mov eax, gs:0x0
 808b1f2:  mov DWORD PTR [eax+edx], ecx
 808b1f5:  mov edx, 0xffffffff
 808b1fa:  jmp 808b1ad
 808b1fc:  lea esi, [esi]

0808b200 <__sigaction>:
 808b200:  push ebp
 808b201:  mov ebp, esp
 808b203:  push ebx
 808b204:  mov ecx, DWORD PTR [ebp+0x8]
 808b207:  mov ebx, DWORD PTR [ebp+0xc]
 808b20a:  mov edx, DWORD PTR [ebp+0x10]
 808b20d:  lea eax, [ecx-0x20]
 808b210:  cmp eax, 0x1
 808b213:  jbe 808b225
 808b215:  mov DWORD PTR [ebp+0x10], edx
 808b218:  mov DWORD PTR [ebp+0xc], ebx
 808b21b:  mov DWORD PTR [ebp+0x8], ecx
 808b21e:  pop ebx
 808b21f:  pop ebp
 808b220:  jmp 808b0f0
 808b225:  mov eax, gs:0x0
 808b22b:  mov edx, 0xffffffe8
 808b231:  mov DWORD PTR [eax+edx], 0x16
 808b238:  mov eax, 0xffffffff
 808b23d:  pop ebx
 808b23e:  pop ebp
 808b23f:  ret

0808b240 <__sigprocmask>:
 808b240:  push ebp
 808b241:  mov ebp, esp
 808b243:  sub esp, 0x8c
 808b249:  mov ecx, DWORD PTR [ebp+0xc]
 808b24c:  mov DWORD PTR [ebp-0xc], ebx
 808b24f:  mov DWORD PTR [ebp-0x8], esi
 808b252:  mov DWORD PTR [ebp-0x4], edi
 808b255:  test ecx, ecx
 808b257:  je 808b268
 808b259:  mov eax, DWORD PTR [ebp+0xc]
 808b25c:  mov edx, DWORD PTR [eax]
 808b25e:  test edx, edx
 808b260:  js 808b298
 808b262:  test BYTE PTR [eax+0x4], 0x1
 808b266:  jne 808b298
 808b268:  mov esi, 0x8
 808b26d:  mov edx, DWORD PTR [ebp+0x10]
 808b270:  mov ebx, DWORD PTR [ebp+0x8]
 808b273:  mov ecx, DWORD PTR [ebp+0xc]
 808b276:  mov eax, 0xaf
 808b27b:  int 0x80
 808b27d:  mov ebx, eax
 808b27f:  cmp ebx, 0xfffff000
 808b285:  ja 808b2c6
 808b287:  mov ebx, DWORD PTR [ebp-0xc]
 808b28a:  mov esi, DWORD PTR [ebp-0x8]
 808b28d:  mov edi, DWORD PTR [ebp-0x4]
 808b290:  mov esp, ebp
 808b292:  pop ebp
 808b293:  ret
 808b294:  lea esi, [esi]
 808b298:  mov eax, 0x20
 808b29d:  mov esi, DWORD PTR [ebp+0xc]
 808b2a0:  mov ecx, eax
 808b2a2:  lea edi, [ebp-0x8c]
 808b2a8:  rep movsd
 808b2aa:  lea eax, [ebp-0x8c]
 808b2b0:  mov DWORD PTR [ebp+0xc], eax
 808b2b3:  and DWORD PTR [ebp-0x8c], 0x7fffffff
 808b2bd:  and DWORD PTR [ebp-0x88], 0xfe
 808b2c4:  jmp 808b268
 808b2c6:  mov eax, gs:0x0
 808b2cc:  neg ebx
 808b2ce:  mov edx, 0xffffffe8
 808b2d4:  mov DWORD PTR [eax+edx], ebx
 808b2d7:  mov eax, 0xffffffff
 808b2dc:  jmp 808b287
 808b2de:  nop
 808b2df:  nop

0808b2e0 <_quicksort>:
 808b2e0:  push ebp
 808b2e1:  mov ebp, esp
 808b2e3:  push edi
 808b2e4:  push esi
 808b2e5:  push ebx
 808b2e6:  sub esp, 0x17c
 808b2ec:  mov eax, DWORD PTR [ebp+0xc]
 808b2ef:  test eax, eax
 808b2f1:  je 808b4be
 808b2f7:  mov edx, DWORD PTR [ebp+0x10]
 808b2fa:  shl edx, 0x2
 808b2fd:  cmp eax, 0x4
 808b300:  mov DWORD PTR [ebp-0x164], edx
 808b306:  jbe 808b4c9
 808b30c:  mov edx, DWORD PTR [ebp+0x10]
 808b30f:  sub eax, 0x1
 808b312:  mov ecx, DWORD PTR [ebp+0x10]
 808b315:  lea esi, [ebp-0x104]
 808b31b:  imul eax, DWORD PTR [ebp+0x10]
 808b31f:  add eax, DWORD PTR [ebp+0x8]
 808b322:  mov ebx, DWORD PTR [ebp+0x8]
 808b325:  shr edx, 0x2
 808b328:  neg ecx
 808b32a:  mov DWORD PTR [ebp-0x110], eax
 808b330:  mov DWORD PTR [ebp-0x15c], eax
 808b336:  lea eax, [ebp-0x10c]
 808b33c:  mov DWORD PTR [ebp-0x170], edx
 808b342:  shl edx, 0x2
 808b345:  mov DWORD PTR [ebp-0x10c], 0x0
 808b34f:  mov DWORD PTR [ebp-0x108], 0x0
 808b359:  mov DWORD PTR [ebp-0x138], ecx
 808b35f:  mov DWORD PTR [ebp-0x160], ebx
 808b365:  mov DWORD PTR [ebp-0x158], esi
 808b36b:  mov DWORD PTR [ebp-0x178], eax
 808b371:  mov DWORD PTR [ebp-0x174], edx
 808b377:  mov eax, DWORD PTR [ebp-0x15c]
 808b37d:  xor edx, edx
 808b37f:  sub eax, DWORD PTR [ebp-0x160]
 808b385:  div DWORD PTR [ebp+0x10]
 808b388:  mov ecx, DWORD PTR [ebp+0x18]
 808b38b:  mov ebx, DWORD PTR [ebp-0x160]
 808b391:  mov DWORD PTR [esp+0x8], ecx
 808b395:  mov DWORD PTR [esp+0x4], ebx
 808b399:  shr eax, 1
 808b39b:  imul eax, DWORD PTR [ebp+0x10]
 808b39f:  add eax, DWORD PTR [ebp-0x160]
 808b3a5:  mov DWORD PTR [ebp-0x150], eax
 808b3ab:  mov DWORD PTR [esp], eax
 808b3ae:  call DWORD PTR [ebp+0x14]
 808b3b1:  test eax, eax
 808b3b3:  js 808b929
 808b3b9:  mov eax, DWORD PTR [ebp+0x18]
 808b3bc:  mov edx, DWORD PTR [ebp-0x150]
 808b3c2:  mov ecx, DWORD PTR [ebp-0x15c]
 808b3c8:  mov DWORD PTR [esp+0x8], eax
 808b3cc:  mov DWORD PTR [esp+0x4], edx
 808b3d0:  mov DWORD PTR [esp], ecx
 808b3d3:  call DWORD PTR [ebp+0x14]
 808b3d6:  test eax, eax
 808b3d8:  js 808b72e
 808b3de:  mov eax, DWORD PTR [ebp-0x160]
 808b3e4:  add eax, DWORD PTR [ebp+0x10]
 808b3e7:  mov ebx, DWORD PTR [ebp-0x15c]
 808b3ed:  add ebx, DWORD PTR [ebp-0x138]
 808b3f3:  mov DWORD PTR [ebp-0x154], eax
 808b3f9:  lea esi, [esi]
 808b400:  mov ecx, DWORD PTR [ebp+0x18]
 808b403:  mov esi, DWORD PTR [ebp-0x150]
 808b409:  mov DWORD PTR [esp], eax
 808b40c:  mov DWORD PTR [esp+0x8], ecx
 808b410:  mov DWORD PTR [esp+0x4], esi
 808b414:  call DWORD PTR [ebp+0x14]
 808b417:  test eax, eax
 808b419:  jns 808b426
 808b41b:  jmp 808b69d
 808b420:  add ebx, DWORD PTR [ebp-0x138]
 808b426:  mov edx, DWORD PTR [ebp+0x18]
 808b429:  mov ecx, DWORD PTR [ebp-0x150]
 808b42f:  mov DWORD PTR [esp+0x4], ebx
 808b433:  mov DWORD PTR [esp+0x8], edx
 808b437:  mov DWORD PTR [esp], ecx
 808b43a:  call DWORD PTR [ebp+0x14]
 808b43d:  test eax, eax
 808b43f:  js 808b420
 808b441:  cmp DWORD PTR [ebp-0x154], ebx
 808b447:  jae 808b628
 808b44d:  cmp DWORD PTR [ebp+0x10], 0x6
 808b451:  lea esi, [esi]
 808b458:  ja 808b560
 808b45e:  xor ecx, ecx
 808b460:  mov esi, DWORD PTR [ebp-0x154]
 808b466:  movzx eax, BYTE PTR [ebx+ecx]
 808b46a:  movzx edx, BYTE PTR [esi+ecx]
 808b46e:  mov BYTE PTR [esi+ecx], al
 808b471:  mov BYTE PTR [ebx+ecx], dl
 808b474:  add ecx, 0x1
 808b477:  cmp DWORD PTR [ebp+0x10], ecx
 808b47a:  jne 808b460
 808b47c:  mov eax, DWORD PTR [ebp-0x154]
 808b482:  cmp DWORD PTR [ebp-0x150], eax
 808b488:  je 808b61b
 808b48e:  cmp DWORD PTR [ebp-0x150], ebx
 808b494:  je 808b6b1
 808b49a:  mov edx, DWORD PTR [ebp-0x154]
 808b4a0:  add edx, DWORD PTR [ebp+0x10]
 808b4a3:  add ebx, DWORD PTR [ebp-0x138]
 808b4a9:  cmp edx, ebx
 808b4ab:  ja 808b63c
 808b4b1:  mov DWORD PTR [ebp-0x154], edx
 808b4b7:  mov eax, edx
 808b4b9:  jmp 808b400
 808b4be:  add esp, 0x17c
 808b4c4:  pop ebx
 808b4c5:  pop esi
 808b4c6:  pop edi
 808b4c7:  pop ebp
 808b4c8:  ret
 808b4c9:  sub eax, 0x1
 808b4cc:  imul eax, DWORD PTR [ebp+0x10]
 808b4d0:  add eax, DWORD PTR [ebp+0x8]
 808b4d3:  mov DWORD PTR [ebp-0x110], eax
 808b4d9:  mov ecx, DWORD PTR [ebp+0x8]
 808b4dc:  mov ebx, DWORD PTR [ebp-0x110]
 808b4e2:  add ecx, DWORD PTR [ebp-0x164]
 808b4e8:  cmp ecx, ebx
 808b4ea:  mov DWORD PTR [ebp-0x148], ecx
 808b4f0:  jbe 808b4f8
 808b4f2:  mov DWORD PTR [ebp-0x148], ebx
 808b4f8:  mov esi, DWORD PTR [ebp+0x8]
 808b4fb:  mov eax, DWORD PTR [ebp+0x10]
 808b4fe:  add esi, DWORD PTR [ebp+0x10]
 808b501:  cmp DWORD PTR [ebp-0x148], esi
 808b507:  lea eax, [esi+eax]
 808b50a:  mov DWORD PTR [ebp-0x118], esi
 808b510:  mov DWORD PTR [ebp-0x168], eax
 808b516:  jb 808ba21
 808b51c:  mov esi, eax
 808b51e:  mov edi, DWORD PTR [ebp+0x8]
 808b521:  mov ebx, DWORD PTR [ebp-0x118]
 808b527:  jmp 808b547
 808b529:  lea esi, [esi]
 808b530:  add esi, DWORD PTR [ebp+0x10]
 808b533:  add ebx, DWORD PTR [ebp+0x10]
 808b536:  mov eax, esi
 808b538:  sub eax, DWORD PTR [ebp+0x10]
 808b53b:  cmp DWORD PTR [ebp-0x148], eax
 808b541:  jb 808b9f4
 808b547:  mov edx, DWORD PTR [ebp+0x18]
 808b54a:  mov DWORD PTR [esp+0x4], edi
 808b54e:  mov DWORD PTR [esp], ebx
 808b551:  mov DWORD PTR [esp+0x8], edx
 808b555:  call DWORD PTR [ebp+0x14]
 808b558:  test eax, eax
 808b55a:  jns 808b530
 808b55c:  mov edi, ebx
 808b55e:  jmp 808b530
 808b560:  mov eax, DWORD PTR [ebp-0x154]
 808b566:  or eax, ebx
 808b568:  test al, 0x3
 808b56a:  jne 808b45e
 808b570:  mov eax, DWORD PTR [ebp-0x154]
 808b576:  add eax, 0x4
 808b579:  cmp ebx, eax
 808b57b:  ja 808b58c
 808b57d:  lea eax, [ebx+0x4]
 808b580:  cmp DWORD PTR [ebp-0x154], eax
 808b586:  jbe 808b45e
 808b58c:  mov edx, DWORD PTR [ebp-0x174]
 808b592:  xor ecx, ecx
 808b594:  test edx, edx
 808b596:  je 808bc99
 808b59c:  lea esi, [esi]
 808b5a0:  mov eax, DWORD PTR [ebp-0x154]
 808b5a6:  mov esi, DWORD PTR [ebp-0x154]
 808b5ac:  mov edx, DWORD PTR [eax+ecx*4]
 808b5af:  mov eax, DWORD PTR [ebx+ecx*4]
 808b5b2:  mov DWORD PTR [esi+ecx*4], eax
 808b5b5:  mov DWORD PTR [ebx+ecx*4], edx
 808b5b8:  add ecx, 0x1
 808b5bb:  cmp ecx, DWORD PTR [ebp-0x170]
 808b5c1:  jb 808b5a0
 808b5c3:  mov eax, DWORD PTR [ebp-0x174]
 808b5c9:  mov edi, DWORD PTR [ebp-0x154]
 808b5cf:  mov edx, DWORD PTR [ebp+0x10]
 808b5d2:  lea esi, [ebx+eax]
 808b5d5:  add edi, eax
 808b5d7:  sub edx, eax
 808b5d9:  cmp DWORD PTR [ebp+0x10], eax
 808b5dc:  mov DWORD PTR [ebp-0x14c], edx
 808b5e2:  je 808b47c
 808b5e8:  xor ecx, ecx
 808b5ea:  lea esi, [esi]
 808b5f0:  movzx edx, BYTE PTR [edi+ecx]
 808b5f4:  movzx eax, BYTE PTR [esi+ecx]
 808b5f8:  mov BYTE PTR [edi+ecx], al
 808b5fb:  mov BYTE PTR [esi+ecx], dl
 808b5fe:  add ecx, 0x1
 808b601:  cmp DWORD PTR [ebp-0x14c], ecx
 808b607:  jne 808b5f0
 808b609:  mov eax, DWORD PTR [ebp-0x154]
 808b60f:  cmp DWORD PTR [ebp-0x150], eax
 808b615:  jne 808b48e
 808b61b:  mov DWORD PTR [ebp-0x150], ebx
 808b621:  jmp 808b49a
 808b626:  xchg ax, ax
 808b628:  je 808b71d
 808b62e:  mov edx, DWORD PTR [ebp-0x154]
 808b634:  cmp edx, ebx
 808b636:  jbe 808b4b1
 808b63c:  mov eax, ebx
 808b63e:  sub eax, DWORD PTR [ebp-0x160]
 808b644:  cmp DWORD PTR [ebp-0x164], eax
 808b64a:  jb 808b6c2
 808b64c:  mov eax, DWORD PTR [ebp-0x15c]
 808b652:  mov DWORD PTR [ebp-0x160], edx
 808b658:  sub eax, edx
 808b65a:  cmp DWORD PTR [ebp-0x164], eax
 808b660:  jb 808b686
 808b662:  sub DWORD PTR [ebp-0x158], 0x8
 808b669:  mov ebx, DWORD PTR [ebp-0x158]
 808b66f:  mov esi, DWORD PTR [ebp-0x158]
 808b675:  mov ebx, DWORD PTR [ebx]
 808b677:  mov esi, DWORD PTR [esi+0x4]
 808b67a:  mov DWORD PTR [ebp-0x160], ebx
 808b680:  mov DWORD PTR [ebp-0x15c], esi
 808b686:  mov edx, DWORD PTR [ebp-0x178]
 808b68c:  cmp DWORD PTR [ebp-0x158], edx
 808b692:  ja 808b377
 808b698:  jmp 808b4d9
 808b69d:  mov edx, DWORD PTR [ebp+0x10]
 808b6a0:  add DWORD PTR [ebp-0x154], edx
 808b6a6:  mov eax, DWORD PTR [ebp-0x154]
 808b6ac:  jmp 808b400
 808b6b1:  mov edx, DWORD PTR [ebp-0x154]
 808b6b7:  mov DWORD PTR [ebp-0x150], edx
 808b6bd:  jmp 808b49a
 808b6c2:  mov ecx, DWORD PTR [ebp-0x15c]
 808b6c8:  sub ecx, edx
 808b6ca:  cmp DWORD PTR [ebp-0x164], ecx
 808b6d0:  jae 808b712
 808b6d2:  cmp eax, ecx
 808b6d4:  jle 808b6f8
 808b6d6:  mov eax, DWORD PTR [ebp-0x158]
 808b6dc:  mov ecx, DWORD PTR [ebp-0x160]
 808b6e2:  mov DWORD PTR [ebp-0x160], edx
 808b6e8:  mov DWORD PTR [eax+0x4], ebx
 808b6eb:  mov DWORD PTR [eax], ecx
 808b6ed:  add eax, 0x8
 808b6f0:  mov DWORD PTR [ebp-0x158], eax
 808b6f6:  jmp 808b686
 808b6f8:  mov esi, DWORD PTR [ebp-0x158]
 808b6fe:  mov eax, DWORD PTR [ebp-0x15c]
 808b704:  mov DWORD PTR [esi], edx
 808b706:  mov DWORD PTR [esi+0x4], eax
 808b709:  add esi, 0x8
 808b70c:  mov DWORD PTR [ebp-0x158], esi
 808b712:  mov DWORD PTR [ebp-0x15c], ebx
 808b718:  jmp 808b686
 808b71d:  mov ecx, DWORD PTR [ebp+0x10]
 808b720:  lea edx, [ebx+ecx]
 808b723:  add ebx, DWORD PTR [ebp-0x138]
 808b729:  jmp 808b63c
 808b72e:  mov ebx, DWORD PTR [ebp-0x150]
 808b734:  cmp DWORD PTR [ebp+0x10], 0x6
 808b738:  seta BYTE PTR [ebp-0x129]
 808b73f:  add ebx, 0x4
 808b742:  cmp BYTE PTR [ebp-0x129], 0x0
 808b749:  mov DWORD PTR [ebp-0x130], ebx
 808b74f:  jne 808b7db
 808b755:  xor ecx, ecx
 808b757:  mov ebx, DWORD PTR [ebp-0x150]
 808b75d:  mov esi, DWORD PTR [ebp-0x15c]
 808b763:  movzx edx, BYTE PTR [ebx+ecx]
 808b767:  movzx eax, BYTE PTR [esi+ecx]
 808b76b:  mov BYTE PTR [ebx+ecx], al
 808b76e:  mov BYTE PTR [esi+ecx], dl
 808b771:  add ecx, 0x1
 808b774:  cmp DWORD PTR [ebp+0x10], ecx
 808b777:  jne 808b757
 808b779:  mov eax, DWORD PTR [ebp+0x18]
 808b77c:  mov edx, DWORD PTR [ebp-0x160]
 808b782:  mov ecx, DWORD PTR [ebp-0x150]
 808b788:  mov DWORD PTR [esp+0x8], eax
 808b78c:  mov DWORD PTR [esp+0x4], edx
 808b790:  mov DWORD PTR [esp], ecx
 808b793:  call DWORD PTR [ebp+0x14]
 808b796:  test eax, eax
 808b798:  jns 808b3de
 808b79e:  mov eax, DWORD PTR [ebp-0x160]
 808b7a4:  or eax, DWORD PTR [ebp-0x150]
 808b7aa:  test al, 0x3
 808b7ac:  je 808b87a
 808b7b2:  xor ecx, ecx
 808b7b4:  mov ebx, DWORD PTR [ebp-0x150]
 808b7ba:  mov esi, DWORD PTR [ebp-0x160]
 808b7c0:  movzx edx, BYTE PTR [ebx+ecx]
 808b7c4:  movzx eax, BYTE PTR [esi+ecx]
 808b7c8:  mov BYTE PTR [ebx+ecx], al
 808b7cb:  mov BYTE PTR [esi+ecx], dl
 808b7ce:  add ecx, 0x1
 808b7d1:  cmp DWORD PTR [ebp+0x10], ecx
 808b7d4:  jne 808b7b4
 808b7d6:  jmp 808b3de
 808b7db:  mov eax, DWORD PTR [ebp-0x15c]
 808b7e1:  or eax, DWORD PTR [ebp-0x150]
 808b7e7:  test al, 0x3
 808b7e9:  jne 808b755
 808b7ef:  cmp DWORD PTR [ebp-0x15c], ebx
 808b7f5:  jbe 808bc1d
 808b7fb:  mov esi, DWORD PTR [ebp-0x174]
 808b801:  xor ecx, ecx
 808b803:  test esi, esi
 808b805:  je 808bc4d
 808b80b:  mov esi, DWORD PTR [ebp-0x150]
 808b811:  mov ebx, DWORD PTR [ebp-0x15c]
 808b817:  mov edx, DWORD PTR [esi+ecx*4]
 808b81a:  mov eax, DWORD PTR [ebx+ecx*4]
 808b81d:  mov DWORD PTR [esi+ecx*4], eax
 808b820:  mov DWORD PTR [ebx+ecx*4], edx
 808b823:  add ecx, 0x1
 808b826:  cmp ecx, DWORD PTR [ebp-0x170]
 808b82c:  jb 808b80b
 808b82e:  mov ebx, DWORD PTR [ebp-0x15c]
 808b834:  mov esi, DWORD PTR [ebp-0x150]
 808b83a:  mov edi, DWORD PTR [ebp+0x10]
 808b83d:  mov eax, DWORD PTR [ebp-0x174]
 808b843:  add ebx, DWORD PTR [ebp-0x174]
 808b849:  add esi, DWORD PTR [ebp-0x174]
 808b84f:  sub edi, DWORD PTR [ebp-0x174]
 808b855:  cmp DWORD PTR [ebp+0x10], eax
 808b858:  je 808b779
 808b85e:  xor ecx, ecx
 808b860:  movzx edx, BYTE PTR [esi+ecx]
 808b864:  movzx eax, BYTE PTR [ebx+ecx]
 808b868:  mov BYTE PTR [esi+ecx], al
 808b86b:  mov BYTE PTR [ebx+ecx], dl
 808b86e:  add ecx, 0x1
 808b871:  cmp edi, ecx
 808b873:  jne 808b860
 808b875:  jmp 808b779
 808b87a:  cmp BYTE PTR [ebp-0x129], 0x0
 808b881:  je 808b7b2
 808b887:  mov ebx, DWORD PTR [ebp-0x130]
 808b88d:  cmp DWORD PTR [ebp-0x160], ebx
 808b893:  ja 808b8aa
 808b895:  mov eax, DWORD PTR [ebp-0x160]
 808b89b:  add eax, 0x4
 808b89e:  cmp DWORD PTR [ebp-0x150], eax
 808b8a4:  jbe 808b7b2
 808b8aa:  mov ebx, DWORD PTR [ebp-0x174]
 808b8b0:  xor ecx, ecx
 808b8b2:  test ebx, ebx
 808b8b4:  je 808bc85
 808b8ba:  mov esi, DWORD PTR [ebp-0x150]
 808b8c0:  mov ebx, DWORD PTR [ebp-0x160]
 808b8c6:  mov edx, DWORD PTR [esi+ecx*4]
 808b8c9:  mov eax, DWORD PTR [ebx+ecx*4]
 808b8cc:  mov DWORD PTR [esi+ecx*4], eax
 808b8cf:  mov DWORD PTR [ebx+ecx*4], edx
 808b8d2:  add ecx, 0x1
 808b8d5:  cmp ecx, DWORD PTR [ebp-0x170]
 808b8db:  jb 808b8ba
 808b8dd:  mov ebx, DWORD PTR [ebp-0x160]
 808b8e3:  mov esi, DWORD PTR [ebp-0x150]
 808b8e9:  mov edi, DWORD PTR [ebp+0x10]
 808b8ec:  mov eax, DWORD PTR [ebp-0x174]
 808b8f2:  add ebx, DWORD PTR [ebp-0x174]
 808b8f8:  add esi, DWORD PTR [ebp-0x174]
 808b8fe:  sub edi, DWORD PTR [ebp-0x174]
 808b904:  cmp DWORD PTR [ebp+0x10], eax
 808b907:  je 808b3de
 808b90d:  xor ecx, ecx
 808b90f:  movzx edx, BYTE PTR [esi+ecx]
 808b913:  movzx eax, BYTE PTR [ebx+ecx]
 808b917:  mov BYTE PTR [esi+ecx], al
 808b91a:  mov BYTE PTR [ebx+ecx], dl
 808b91d:  add ecx, 0x1
 808b920:  cmp edi, ecx
 808b922:  jne 808b90f
 808b924:  jmp 808b3de
 808b929:  cmp DWORD PTR [ebp+0x10], 0x6
 808b92d:  ja 808b958
 808b92f:  xor ecx, ecx
 808b931:  mov ebx, DWORD PTR [ebp-0x150]
 808b937:  mov esi, DWORD PTR [ebp-0x160]
 808b93d:  movzx edx, BYTE PTR [ebx+ecx]
 808b941:  movzx eax, BYTE PTR [esi+ecx]
 808b945:  mov BYTE PTR [ebx+ecx], al
 808b948:  mov BYTE PTR [esi+ecx], dl
 808b94b:  add ecx, 0x1
 808b94e:  cmp DWORD PTR [ebp+0x10], ecx
 808b951:  jne 808b931
 808b953:  jmp 808b3b9
 808b958:  mov eax, ebx
 808b95a:  or eax, DWORD PTR [ebp-0x150]
 808b960:  test al, 0x3
 808b962:  jne 808b92f
 808b964:  mov eax, DWORD PTR [ebp-0x150]
 808b96a:  add eax, 0x4
 808b96d:  cmp ebx, eax
 808b96f:  jbe 808bc37
 808b975:  mov edi, DWORD PTR [ebp-0x174]
 808b97b:  xor ecx, ecx
 808b97d:  test edi, edi
 808b97f:  je 808bc71
 808b985:  mov esi, DWORD PTR [ebp-0x150]
 808b98b:  mov ebx, DWORD PTR [ebp-0x160]
 808b991:  mov edx, DWORD PTR [esi+ecx*4]
 808b994:  mov eax, DWORD PTR [ebx+ecx*4]
 808b997:  mov DWORD PTR [esi+ecx*4], eax
 808b99a:  mov DWORD PTR [ebx+ecx*4], edx
 808b99d:  add ecx, 0x1
 808b9a0:  cmp ecx, DWORD PTR [ebp-0x170]
 808b9a6:  jb 808b985
 808b9a8:  mov ebx, DWORD PTR [ebp-0x160]
 808b9ae:  mov esi, DWORD PTR [ebp-0x150]
 808b9b4:  mov edi, DWORD PTR [ebp+0x10]
 808b9b7:  mov eax, DWORD PTR [ebp-0x174]
 808b9bd:  add ebx, DWORD PTR [ebp-0x174]
 808b9c3:  add esi, DWORD PTR [ebp-0x174]
 808b9c9:  sub edi, DWORD PTR [ebp-0x174]
 808b9cf:  cmp DWORD PTR [ebp+0x10], eax
 808b9d2:  je 808b3b9
 808b9d8:  xor ecx, ecx
 808b9da:  movzx edx, BYTE PTR [esi+ecx]
 808b9de:  movzx eax, BYTE PTR [ebx+ecx]
 808b9e2:  mov BYTE PTR [esi+ecx], al
 808b9e5:  mov BYTE PTR [ebx+ecx], dl
 808b9e8:  add ecx, 0x1
 808b9eb:  cmp ecx, edi
 808b9ed:  jne 808b9da
 808b9ef:  jmp 808b3b9
 808b9f4:  cmp edi, DWORD PTR [ebp+0x8]
 808b9f7:  je 808ba21
 808b9f9:  cmp DWORD PTR [ebp+0x10], 0x6
 808b9fd:  lea esi, [esi]
 808ba00:  ja 808bb7c
 808ba06:  xor ecx, ecx
 808ba08:  mov ebx, DWORD PTR [ebp+0x8]
 808ba0b:  movzx edx, BYTE PTR [edi+ecx]
 808ba0f:  movzx eax, BYTE PTR [ebx+ecx]
 808ba13:  mov BYTE PTR [edi+ecx], al
 808ba16:  mov BYTE PTR [ebx+ecx], dl
 808ba19:  add ecx, 0x1
 808ba1c:  cmp DWORD PTR [ebp+0x10], ecx
 808ba1f:  jne 808ba08
 808ba21:  mov eax, DWORD PTR [ebp+0x10]
 808ba24:  mov esi, DWORD PTR [ebp-0x168]
 808ba2a:  mov DWORD PTR [ebp-0x120], 0x0
 808ba34:  lea eax, [eax+eax-0x1]
 808ba38:  mov DWORD PTR [ebp-0x11c], esi
 808ba3e:  mov DWORD PTR [ebp-0x16c], eax
 808ba44:  lea esi, [esi]
 808ba48:  mov esi, DWORD PTR [ebp-0x110]
 808ba4e:  cmp DWORD PTR [ebp-0x11c], esi
 808ba54:  ja 808b4be
 808ba5a:  mov edi, DWORD PTR [ebp+0x10]
 808ba5d:  mov ebx, DWORD PTR [ebp-0x118]
 808ba63:  add ebx, DWORD PTR [ebp-0x120]
 808ba69:  neg edi
 808ba6b:  jmp 808ba72
 808ba6d:  lea esi, [esi]
 808ba70:  add ebx, edi
 808ba72:  mov edx, DWORD PTR [ebp+0x18]
 808ba75:  mov ecx, DWORD PTR [ebp-0x11c]
 808ba7b:  mov DWORD PTR [esp+0x4], ebx
 808ba7f:  mov DWORD PTR [esp+0x8], edx
 808ba83:  mov DWORD PTR [esp], ecx
 808ba86:  call DWORD PTR [ebp+0x14]
 808ba89:  test eax, eax
 808ba8b:  js 808ba70
 808ba8d:  add ebx, DWORD PTR [ebp+0x10]
 808ba90:  cmp DWORD PTR [ebp-0x11c], ebx
 808ba96:  mov DWORD PTR [ebp-0x114], ebx
 808ba9c:  je 808bb68
 808baa2:  mov eax, DWORD PTR [ebp-0x16c]
 808baa8:  add eax, DWORD PTR [ebp-0x120]
 808baae:  add eax, DWORD PTR [ebp-0x118]
 808bab4:  cmp DWORD PTR [ebp-0x11c], eax
 808baba:  mov DWORD PTR [ebp-0x140], eax
 808bac0:  ja 808bb68
 808bac6:  mov esi, DWORD PTR [ebp-0x120]
 808bacc:  mov ebx, DWORD PTR [ebp+0x10]
 808bacf:  lea eax, [esi+ebx-0x1]
 808bad3:  add eax, DWORD PTR [ebp-0x118]
 808bad9:  mov DWORD PTR [ebp-0x128], eax
 808badf:  mov eax, DWORD PTR [ebp-0x118]
 808bae5:  lea eax, [eax+esi-0x1]
 808bae9:  mov DWORD PTR [ebp-0x124], eax
 808baef:  nop
 808baf0:  mov edx, DWORD PTR [ebp-0x140]
 808baf6:  mov ebx, DWORD PTR [ebp-0x114]
 808bafc:  mov esi, DWORD PTR [ebp-0x140]
 808bb02:  mov ecx, DWORD PTR [ebp-0x124]
 808bb08:  movzx edx, BYTE PTR [edx]
 808bb0b:  mov eax, esi
 808bb0d:  mov BYTE PTR [ebp-0x139], dl
 808bb13:  mov edx, DWORD PTR [ebp-0x128]
 808bb19:  cmp edx, ebx
 808bb1b:  jae 808bb22
 808bb1d:  jmp 808bb3c
 808bb1f:  nop
 808bb20:  mov edx, ebx
 808bb22:  movzx eax, BYTE PTR [edx]
 808bb25:  add ecx, edi
 808bb27:  lea ebx, [edx+edi]
 808bb2a:  mov BYTE PTR [esi], al
 808bb2c:  mov eax, ecx
 808bb2e:  mov esi, edx
 808bb30:  sub eax, edi
 808bb32:  cmp DWORD PTR [ebp-0x114], eax
 808bb38:  jbe 808bb20
 808bb3a:  mov eax, edx
 808bb3c:  movzx edx, BYTE PTR [ebp-0x139]
 808bb43:  mov BYTE PTR [eax], dl
 808bb45:  sub DWORD PTR [ebp-0x140], 0x1
 808bb4c:  mov ecx, DWORD PTR [ebp-0x140]
 808bb52:  sub DWORD PTR [ebp-0x128], 0x1
 808bb59:  sub DWORD PTR [ebp-0x124], 0x1
 808bb60:  cmp DWORD PTR [ebp-0x11c], ecx
 808bb66:  jbe 808baf0
 808bb68:  mov ebx, DWORD PTR [ebp+0x10]
 808bb6b:  add DWORD PTR [ebp-0x120], ebx
 808bb71:  add DWORD PTR [ebp-0x11c], ebx
 808bb77:  jmp 808ba48
 808bb7c:  mov eax, DWORD PTR [ebp+0x8]
 808bb7f:  or eax, edi
 808bb81:  test al, 0x3
 808bb83:  jne 808ba06
 808bb89:  lea eax, [edi+0x4]
 808bb8c:  cmp DWORD PTR [ebp+0x8], eax
 808bb8f:  ja 808bb9f
 808bb91:  mov eax, DWORD PTR [ebp+0x8]
 808bb94:  add eax, 0x4
 808bb97:  cmp edi, eax
 808bb99:  jbe 808ba06
 808bb9f:  mov ebx, DWORD PTR [ebp+0x10]
 808bba2:  shr ebx, 0x2
 808bba5:  lea ecx, [ebx*4]
 808bbac:  mov DWORD PTR [ebp-0x134], ecx
 808bbb2:  mov eax, DWORD PTR [ebp-0x134]
 808bbb8:  xor ecx, ecx
 808bbba:  test eax, eax
 808bbbc:  je 808bc61
 808bbc2:  mov esi, DWORD PTR [ebp+0x8]
 808bbc5:  mov edx, DWORD PTR [edi+ecx*4]
 808bbc8:  mov eax, DWORD PTR [esi+ecx*4]
 808bbcb:  mov DWORD PTR [edi+ecx*4], eax
 808bbce:  mov DWORD PTR [esi+ecx*4], edx
 808bbd1:  add ecx, 0x1
 808bbd4:  cmp ecx, ebx
 808bbd6:  jb 808bbc2
 808bbd8:  mov eax, DWORD PTR [ebp-0x134]
 808bbde:  mov ebx, esi
 808bbe0:  mov edx, DWORD PTR [ebp+0x10]
 808bbe3:  add ebx, DWORD PTR [ebp-0x134]
 808bbe9:  lea esi, [edi+eax]
 808bbec:  sub edx, eax
 808bbee:  cmp DWORD PTR [ebp+0x10], eax
 808bbf1:  mov DWORD PTR [ebp-0x144], edx
 808bbf7:  je 808ba21
 808bbfd:  xor ecx, ecx
 808bbff:  movzx edx, BYTE PTR [esi+ecx]
 808bc03:  movzx eax, BYTE PTR [ebx+ecx]
 808bc07:  mov BYTE PTR [esi+ecx], al
 808bc0a:  mov BYTE PTR [ebx+ecx], dl
 808bc0d:  add ecx, 0x1
 808bc10:  cmp ecx, DWORD PTR [ebp-0x144]
 808bc16:  jne 808bbff
 808bc18:  jmp 808ba21
 808bc1d:  mov eax, DWORD PTR [ebp-0x15c]
 808bc23:  add eax, 0x4
 808bc26:  cmp DWORD PTR [ebp-0x150], eax
 808bc2c:  jbe 808b755
 808bc32:  jmp 808b7fb
 808bc37:  mov eax, ebx
 808bc39:  add eax, 0x4
 808bc3c:  cmp DWORD PTR [ebp-0x150], eax
 808bc42:  jbe 808b92f
 808bc48:  jmp 808b975
 808bc4d:  mov edi, DWORD PTR [ebp+0x10]
 808bc50:  mov esi, DWORD PTR [ebp-0x150]
 808bc56:  mov ebx, DWORD PTR [ebp-0x15c]
 808bc5c:  jmp 808b85e
 808bc61:  mov ebx, DWORD PTR [ebp+0x10]
 808bc64:  mov esi, edi
 808bc66:  mov DWORD PTR [ebp-0x144], ebx
 808bc6c:  mov ebx, DWORD PTR [ebp+0x8]
 808bc6f:  jmp 808bbfd
 808bc71:  mov edi, DWORD PTR [ebp+0x10]
 808bc74:  mov esi, DWORD PTR [ebp-0x150]
 808bc7a:  mov ebx, DWORD PTR [ebp-0x160]
 808bc80:  jmp 808b9d8
 808bc85:  mov edi, DWORD PTR [ebp+0x10]
 808bc88:  mov esi, DWORD PTR [ebp-0x150]
 808bc8e:  mov ebx, DWORD PTR [ebp-0x160]
 808bc94:  jmp 808b90d
 808bc99:  mov esi, DWORD PTR [ebp+0x10]
 808bc9c:  mov edi, DWORD PTR [ebp-0x154]
 808bca2:  mov DWORD PTR [ebp-0x14c], esi
 808bca8:  mov esi, ebx
 808bcaa:  jmp 808b5e8
 808bcaf:  nop

0808bcb0 <__mpn_cmp>:
 808bcb0:  push ebp
 808bcb1:  mov ebp, esp
 808bcb3:  push edi
 808bcb4:  push esi
 808bcb5:  push ebx
 808bcb6:  mov eax, DWORD PTR [ebp+0x10]
 808bcb9:  mov edx, DWORD PTR [ebp+0x8]
 808bcbc:  mov edi, DWORD PTR [ebp+0xc]
 808bcbf:  mov esi, eax
 808bcc1:  sub esi, 0x1
 808bcc4:  js 808bcf3
 808bcc6:  mov ebx, DWORD PTR [edx+esi*4]
 808bcc9:  mov ecx, DWORD PTR [edi+esi*4]
 808bccc:  cmp ebx, ecx
 808bcce:  jne 808bd00
 808bcd0:  lea eax, [eax*4-0x8]
 808bcd7:  add edx, eax
 808bcd9:  lea eax, [edi+eax]
 808bcdc:  jmp 808bcee
 808bcde:  xchg ax, ax
 808bce0:  mov ebx, DWORD PTR [edx]
 808bce2:  sub edx, 0x4
 808bce5:  mov ecx, DWORD PTR [eax]
 808bce7:  sub eax, 0x4
 808bcea:  cmp ebx, ecx
 808bcec:  jne 808bd00
 808bcee:  sub esi, 0x1
 808bcf1:  jns 808bce0
 808bcf3:  xor eax, eax
 808bcf5:  pop ebx
 808bcf6:  pop esi
 808bcf7:  pop edi
 808bcf8:  pop ebp
 808bcf9:  ret
 808bcfa:  lea esi, [esi]
 808bd00:  cmp ecx, ebx
 808bd02:  sbb eax, eax
 808bd04:  and eax, 0x2
 808bd07:  sub eax, 0x1
 808bd0a:  pop ebx
 808bd0b:  pop esi
 808bd0c:  pop edi
 808bd0d:  pop ebp
 808bd0e:  ret
 808bd0f:  nop

0808bd10 <__mpn_divrem>:
 808bd10:  push ebp
 808bd11:  mov ebp, esp
 808bd13:  push edi
 808bd14:  push esi
 808bd15:  push ebx
 808bd16:  sub esp, 0x70
 808bd19:  mov ebx, DWORD PTR [ebp+0x14]
 808bd1c:  cmp DWORD PTR [ebp+0x1c], 0x1
 808bd20:  je 808bfef
 808bd26:  cmp DWORD PTR [ebp+0x1c], 0x2
 808bd2a:  je 808bf10
 808bd30:  mov edx, DWORD PTR [ebp+0x1c]
 808bd33:  test edx, edx
 808bd35:  jne 808bd52
 808bd37:  mov edx, 0x1
 808bd3c:  mov eax, edx
 808bd3e:  sar edx, 0x1f
 808bd41:  idiv DWORD PTR [ebp+0x1c]
 808bd44:  mov DWORD PTR [ebp-0x48], eax
 808bd47:  mov eax, DWORD PTR [ebp-0x48]
 808bd4a:  add esp, 0x70
 808bd4d:  pop ebx
 808bd4e:  pop esi
 808bd4f:  pop edi
 808bd50:  pop ebp
 808bd51:  ret
 808bd52:  mov esi, DWORD PTR [ebp+0x10]
 808bd55:  mov eax, ebx
 808bd57:  sub eax, DWORD PTR [ebp+0x1c]
 808bd5a:  mov edi, DWORD PTR [ebp+0x1c]
 808bd5d:  mov ecx, DWORD PTR [ebp+0x18]
 808bd60:  lea eax, [esi+eax*4]
 808bd63:  mov DWORD PTR [ebp-0x18], eax
 808bd66:  mov eax, DWORD PTR [ebp+0x18]
 808bd69:  lea edi, [edi*4-0x4]
 808bd70:  mov esi, DWORD PTR [ebp-0x18]
 808bd73:  mov DWORD PTR [ebp-0x54], edi
 808bd76:  mov eax, DWORD PTR [eax+edi]
 808bd79:  add esi, edi
 808bd7b:  mov DWORD PTR [ebp-0x5c], esi
 808bd7e:  mov esi, DWORD PTR [esi]
 808bd80:  mov DWORD PTR [ebp-0x34], eax
 808bd83:  mov eax, DWORD PTR [ebp+0x1c]
 808bd86:  sub eax, 0x2
 808bd89:  lea edx, [eax*4]
 808bd90:  mov eax, DWORD PTR [ecx+eax*4]
 808bd93:  cmp DWORD PTR [ebp-0x34], esi
 808bd96:  mov DWORD PTR [ebp-0x50], edx
 808bd99:  mov DWORD PTR [ebp-0x30], eax
 808bd9c:  jbe 808c0bd
 808bda2:  mov DWORD PTR [ebp-0x48], 0x0
 808bda9:  mov edx, DWORD PTR [ebp+0xc]
 808bdac:  lea eax, [edx+ebx-0x1]
 808bdb0:  sub eax, DWORD PTR [ebp+0x1c]
 808bdb3:  mov DWORD PTR [ebp-0x38], eax
 808bdb6:  js 808bd47
 808bdb8:  mov ebx, DWORD PTR [ebp+0x1c]
 808bdbb:  mov edi, DWORD PTR [ebp+0x8]
 808bdbe:  mov ecx, DWORD PTR [ebp+0x1c]
 808bdc1:  sub ebx, 0x1
 808bdc4:  lea edi, [edi+eax*4]
 808bdc7:  mov eax, DWORD PTR [ebp-0x38]
 808bdca:  shl ecx, 0x2
 808bdcd:  mov DWORD PTR [ebp-0x28], ebx
 808bdd0:  shl ebx, 0x2
 808bdd3:  cmp DWORD PTR [ebp+0xc], eax
 808bdd6:  mov DWORD PTR [ebp-0x4c], ecx
 808bdd9:  mov DWORD PTR [ebp-0x1c], edi
 808bddc:  mov DWORD PTR [ebp-0x64], ebx
 808bddf:  jg 808bed2
 808bde5:  lea esi, [esi]
 808bde8:  sub DWORD PTR [ebp-0x18], 0x4
 808bdec:  mov ecx, DWORD PTR [ebp-0x18]
 808bdef:  mov edx, DWORD PTR [ebp-0x4c]
 808bdf2:  mov edx, DWORD PTR [ecx+edx]
 808bdf5:  add ecx, DWORD PTR [ebp-0x54]
 808bdf8:  mov DWORD PTR [ebp-0x2c], edx
 808bdfb:  mov DWORD PTR [ebp-0x5c], ecx
 808bdfe:  cmp esi, DWORD PTR [ebp-0x34]
 808be01:  mov DWORD PTR [ebp-0x6c], 0xffffffff
 808be08:  je 808be6c
 808be0a:  mov edi, DWORD PTR [ebp-0x5c]
 808be0d:  mov edx, esi
 808be0f:  mov eax, DWORD PTR [edi]
 808be11:  mov edi, DWORD PTR [ebp-0x34]
 808be14:  div DWORD PTR [ebp-0x34]
 808be17:  mov esi, edx
 808be19:  mov DWORD PTR [ebp-0x6c], eax
 808be1c:  mov eax, DWORD PTR [ebp-0x30]
 808be1f:  lea ecx, [esi+edi]
 808be22:  mul DWORD PTR [ebp-0x6c]
 808be25:  mov ebx, edx
 808be27:  mov DWORD PTR [ebp-0x68], eax
 808be2a:  jmp 808be44
 808be2c:  lea esi, [esi]
 808be30:  mov eax, DWORD PTR [ebp-0x30]
 808be33:  cmp DWORD PTR [ebp-0x68], eax
 808be36:  mov edx, DWORD PTR [ebp-0x30]
 808be39:  setb al
 808be3c:  sub DWORD PTR [ebp-0x68], edx
 808be3f:  movzx eax, al
 808be42:  sub ebx, eax
 808be44:  cmp ebx, esi
 808be46:  ja 808be58
 808be48:  jne 808be6c
 808be4a:  mov eax, DWORD PTR [ebp-0x18]
 808be4d:  mov edi, DWORD PTR [ebp-0x50]
 808be50:  mov edx, DWORD PTR [ebp-0x68]
 808be53:  cmp edx, DWORD PTR [eax+edi]
 808be56:  jbe 808be6c
 808be58:  add ecx, DWORD PTR [ebp-0x34]
 808be5b:  sub DWORD PTR [ebp-0x6c], 0x1
 808be5f:  add esi, DWORD PTR [ebp-0x34]
 808be62:  mov eax, ecx
 808be64:  sub eax, DWORD PTR [ebp-0x34]
 808be67:  cmp eax, DWORD PTR [ebp-0x34]
 808be6a:  jae 808be30
 808be6c:  mov ecx, DWORD PTR [ebp-0x6c]
 808be6f:  mov DWORD PTR [esp+0xc], ecx
 808be73:  mov ebx, DWORD PTR [ebp+0x1c]
 808be76:  mov DWORD PTR [esp+0x8], ebx
 808be7a:  mov esi, DWORD PTR [ebp+0x18]
 808be7d:  mov DWORD PTR [esp+0x4], esi
 808be81:  mov edi, DWORD PTR [ebp-0x18]
 808be84:  mov DWORD PTR [esp], edi
 808be87:  call 808dab0
 808be8c:  cmp DWORD PTR [ebp-0x2c], eax
 808be8f:  je 808bea9
 808be91:  mov DWORD PTR [esp+0xc], ebx
 808be95:  mov DWORD PTR [esp+0x8], esi
 808be99:  mov DWORD PTR [esp+0x4], edi
 808be9d:  mov DWORD PTR [esp], edi
 808bea0:  call 8099240
 808bea5:  sub DWORD PTR [ebp-0x6c], 0x1
 808bea9:  mov eax, DWORD PTR [ebp-0x1c]
 808beac:  mov edx, DWORD PTR [ebp-0x6c]
 808beaf:  mov ecx, DWORD PTR [ebp-0x5c]
 808beb2:  mov DWORD PTR [eax], edx
 808beb4:  sub eax, 0x4
 808beb7:  sub DWORD PTR [ebp-0x38], 0x1
 808bebb:  mov esi, DWORD PTR [ecx]
 808bebd:  mov DWORD PTR [ebp-0x1c], eax
 808bec0:  js 808bd47
 808bec6:  mov eax, DWORD PTR [ebp-0x38]
 808bec9:  cmp DWORD PTR [ebp+0xc], eax
 808becc:  jle 808bde8
 808bed2:  mov ecx, DWORD PTR [ebp-0x5c]
 808bed5:  mov eax, DWORD PTR [ebp-0x28]
 808bed8:  mov ecx, DWORD PTR [ecx]
 808beda:  test eax, eax
 808bedc:  mov DWORD PTR [ebp-0x2c], ecx
 808bedf:  js 808bf02
 808bee1:  mov ebx, DWORD PTR [ebp-0x18]
 808bee4:  xor edx, edx
 808bee6:  mov ecx, DWORD PTR [ebp-0x18]
 808bee9:  add ebx, DWORD PTR [ebp-0x64]
 808beec:  add ecx, DWORD PTR [ebp-0x4c]
 808beef:  nop
 808bef0:  mov eax, DWORD PTR [ebx]
 808bef2:  add edx, 0x1
 808bef5:  sub ebx, 0x4
 808bef8:  mov DWORD PTR [ecx], eax
 808befa:  sub ecx, 0x4
 808befd:  cmp edx, DWORD PTR [ebp+0x1c]
 808bf00:  jne 808bef0
 808bf02:  mov ebx, DWORD PTR [ebp-0x18]
 808bf05:  mov DWORD PTR [ebx], 0x0
 808bf0b:  jmp 808bdfe
 808bf10:  mov ecx, DWORD PTR [ebp+0x10]
 808bf13:  mov esi, DWORD PTR [ebp+0x18]
 808bf16:  mov edi, DWORD PTR [ebp+0x18]
 808bf19:  lea ecx, [ecx+ebx*4-0x8]
 808bf1d:  mov DWORD PTR [ebp-0x14], ecx
 808bf20:  mov eax, DWORD PTR [ebp-0x14]
 808bf23:  add ecx, 0x4
 808bf26:  mov esi, DWORD PTR [esi+0x4]
 808bf29:  mov edi, DWORD PTR [edi]
 808bf2b:  mov edx, DWORD PTR [eax+0x4]
 808bf2e:  mov DWORD PTR [ebp-0x40], esi
 808bf31:  mov eax, DWORD PTR [eax]
 808bf33:  cmp DWORD PTR [ebp-0x40], edx
 808bf36:  mov DWORD PTR [ebp-0x3c], edi
 808bf39:  jbe 808c099
 808bf3f:  mov DWORD PTR [ebp-0x48], 0x0
 808bf46:  mov edi, DWORD PTR [ebp+0xc]
 808bf49:  lea ebx, [edi+ebx-0x3]
 808bf4d:  test ebx, ebx
 808bf4f:  mov DWORD PTR [ebp-0x44], ebx
 808bf52:  js 808c182
 808bf58:  mov ecx, DWORD PTR [ebp+0x8]
 808bf5b:  lea ecx, [ecx+ebx*4]
 808bf5e:  mov ebx, DWORD PTR [ebp-0x3c]
 808bf61:  mov DWORD PTR [ebp-0x20], ecx
 808bf64:  neg ebx
 808bf66:  mov DWORD PTR [ebp-0x60], ebx
 808bf69:  jmp 808bf92
 808bf6b:  nop
 808bf6c:  lea esi, [esi]
 808bf70:  je 808c120
 808bf76:  mov edx, DWORD PTR [ebp-0x20]
 808bf79:  mov eax, DWORD PTR [ebp-0x24]
 808bf7c:  sub DWORD PTR [ebp-0x20], 0x4
 808bf80:  mov DWORD PTR [edx], ecx
 808bf82:  mov edx, ebx
 808bf84:  sub eax, edi
 808bf86:  sbb edx, esi
 808bf88:  sub DWORD PTR [ebp-0x44], 0x1
 808bf8c:  js 808c17c
 808bf92:  mov esi, DWORD PTR [ebp-0x44]
 808bf95:  cmp DWORD PTR [ebp+0xc], esi
 808bf98:  jg 808c138
 808bf9e:  sub DWORD PTR [ebp-0x14], 0x4
 808bfa2:  mov edi, DWORD PTR [ebp-0x14]
 808bfa5:  cmp edx, DWORD PTR [ebp-0x40]
 808bfa8:  mov edi, DWORD PTR [edi]
 808bfaa:  mov DWORD PTR [ebp-0x24], edi
 808bfad:  je 808c151
 808bfb3:  div DWORD PTR [ebp-0x40]
 808bfb6:  mov ecx, eax
 808bfb8:  mov ebx, edx
 808bfba:  mov eax, DWORD PTR [ebp-0x3c]
 808bfbd:  mul ecx
 808bfbf:  mov esi, edx
 808bfc1:  mov edi, eax
 808bfc3:  mov eax, DWORD PTR [ebp-0x40]
 808bfc6:  lea edx, [ebx+eax]
 808bfc9:  lea esi, [esi]
 808bfd0:  cmp esi, ebx
 808bfd2:  jbe 808bf70
 808bfd4:  add edx, DWORD PTR [ebp-0x40]
 808bfd7:  sub ecx, 0x1
 808bfda:  sub edi, DWORD PTR [ebp-0x3c]
 808bfdd:  sbb esi, 0x0
 808bfe0:  add ebx, DWORD PTR [ebp-0x40]
 808bfe3:  mov eax, edx
 808bfe5:  sub eax, DWORD PTR [ebp-0x40]
 808bfe8:  cmp DWORD PTR [ebp-0x40], eax
 808bfeb:  jbe 808bfd0
 808bfed:  jmp 808bf76
 808bfef:  mov edx, DWORD PTR [ebp+0x18]
 808bff2:  mov eax, ebx
 808bff4:  mov ecx, DWORD PTR [ebp+0x10]
 808bff7:  sub eax, DWORD PTR [ebp+0x1c]
 808bffa:  mov DWORD PTR [ebp-0x48], 0x0
 808c001:  mov edi, DWORD PTR [edx]
 808c003:  mov esi, DWORD PTR [ecx+eax*4]
 808c006:  cmp edi, esi
 808c008:  jbe 808c111
 808c00e:  mov eax, DWORD PTR [ebp+0xc]
 808c011:  mov edx, DWORD PTR [ebp+0x8]
 808c014:  shl eax, 0x2
 808c017:  add edx, eax
 808c019:  sub ebx, 0x2
 808c01c:  mov DWORD PTR [ebp-0x58], eax
 808c01f:  mov DWORD PTR [ebp-0x10], edx
 808c022:  js 808c053
 808c024:  mov ecx, DWORD PTR [ebp+0x10]
 808c027:  lea eax, [ebx*4]
 808c02e:  add ecx, eax
 808c030:  add eax, edx
 808c032:  mov DWORD PTR [ebp-0x68], eax
 808c035:  lea esi, [esi]
 808c038:  mov eax, DWORD PTR [ecx]
 808c03a:  mov edx, esi
 808c03c:  sub ecx, 0x4
 808c03f:  div edi
 808c041:  mov esi, edx
 808c043:  mov edx, DWORD PTR [ebp-0x68]
 808c046:  mov DWORD PTR [edx], eax
 808c048:  sub edx, 0x4
 808c04b:  sub ebx, 0x1
 808c04e:  mov DWORD PTR [ebp-0x68], edx
 808c051:  jns 808c038
 808c053:  mov eax, DWORD PTR [ebp+0xc]
 808c056:  mov edx, DWORD PTR [ebp-0x10]
 808c059:  sub edx, DWORD PTR [ebp-0x58]
 808c05c:  sub eax, 0x1
 808c05f:  js 808c089
 808c061:  lea ecx, [edx+eax*4]
 808c064:  xor ebx, ebx
 808c066:  mov DWORD PTR [ebp-0x68], 0x0
 808c06d:  lea esi, [esi]
 808c070:  add DWORD PTR [ebp-0x68], 0x1
 808c074:  mov edx, esi
 808c076:  mov eax, ebx
 808c078:  div edi
 808c07a:  mov DWORD PTR [ecx], eax
 808c07c:  mov eax, DWORD PTR [ebp-0x68]
 808c07f:  sub ecx, 0x4
 808c082:  cmp DWORD PTR [ebp+0xc], eax
 808c085:  mov esi, edx
 808c087:  jne 808c070
 808c089:  mov edx, DWORD PTR [ebp+0x10]
 808c08c:  mov eax, DWORD PTR [ebp-0x48]
 808c08f:  mov DWORD PTR [edx], esi
 808c091:  add esp, 0x70
 808c094:  pop ebx
 808c095:  pop esi
 808c096:  pop edi
 808c097:  pop ebp
 808c098:  ret
 808c099:  cmp edx, DWORD PTR [ebp-0x40]
 808c09c:  ja 808c0a6
 808c09e:  cmp eax, edi
 808c0a0:  jb 808bf3f
 808c0a6:  sub eax, DWORD PTR [ebp-0x3c]
 808c0a9:  sbb edx, DWORD PTR [ebp-0x40]
 808c0ac:  mov DWORD PTR [ebp-0x48], 0x1
 808c0b3:  nop
 808c0b4:  lea esi, [esi]
 808c0b8:  jmp 808bf46
 808c0bd:  lea esi, [esi]
 808c0c0:  jb 808c0e3
 808c0c2:  mov eax, DWORD PTR [ebp+0x1c]
 808c0c5:  mov DWORD PTR [esp+0x4], ecx
 808c0c9:  sub eax, 0x1
 808c0cc:  mov DWORD PTR [esp+0x8], eax
 808c0d0:  mov eax, DWORD PTR [ebp-0x18]
 808c0d3:  mov DWORD PTR [esp], eax
 808c0d6:  call 808bcb0
 808c0db:  test eax, eax
 808c0dd:  js 808bda2
 808c0e3:  mov edx, DWORD PTR [ebp+0x1c]
 808c0e6:  mov DWORD PTR [esp+0xc], edx
 808c0ea:  mov ecx, DWORD PTR [ebp+0x18]
 808c0ed:  mov DWORD PTR [esp+0x8], ecx
 808c0f1:  mov esi, DWORD PTR [ebp-0x18]
 808c0f4:  mov DWORD PTR [esp+0x4], esi
 808c0f8:  mov DWORD PTR [esp], esi
 808c0fb:  call 808da20
 808c100:  mov edi, DWORD PTR [ebp-0x5c]
 808c103:  mov DWORD PTR [ebp-0x48], 0x1
 808c10a:  mov esi, DWORD PTR [edi]
 808c10c:  jmp 808bda9
 808c111:  sub esi, edi
 808c113:  mov DWORD PTR [ebp-0x48], 0x1
 808c11a:  jmp 808c00e
 808c11f:  nop
 808c120:  cmp DWORD PTR [ebp-0x24], edi
 808c123:  jae 808bf76
 808c129:  lea esi, [esi]
 808c130:  jmp 808bfd4
 808c135:  lea esi, [esi]
 808c138:  mov ecx, DWORD PTR [ebp-0x14]
 808c13b:  cmp edx, DWORD PTR [ebp-0x40]
 808c13e:  mov DWORD PTR [ebp-0x24], 0x0
 808c145:  mov DWORD PTR [ecx], 0x0
 808c14b:  jne 808bfb3
 808c151:  mov ebx, edx
 808c153:  add ebx, eax
 808c155:  jae 808c198
 808c157:  sub ebx, DWORD PTR [ebp-0x3c]
 808c15a:  mov eax, DWORD PTR [ebp-0x24]
 808c15d:  mov edx, ebx
 808c15f:  mov ebx, DWORD PTR [ebp-0x20]
 808c162:  add eax, DWORD PTR [ebp-0x3c]
 808c165:  adc edx, 0x0
 808c168:  sub DWORD PTR [ebp-0x20], 0x4
 808c16c:  sub DWORD PTR [ebp-0x44], 0x1
 808c170:  mov DWORD PTR [ebx], 0xffffffff
 808c176:  jns 808bf92
 808c17c:  mov ecx, DWORD PTR [ebp-0x14]
 808c17f:  add ecx, 0x4
 808c182:  mov DWORD PTR [ecx], edx
 808c184:  mov ecx, DWORD PTR [ebp-0x14]
 808c187:  mov DWORD PTR [ecx], eax
 808c189:  mov eax, DWORD PTR [ebp-0x48]
 808c18c:  add esp, 0x70
 808c18f:  pop ebx
 808c190:  pop esi
 808c191:  pop edi
 808c192:  pop ebp
 808c193:  ret
 808c194:  lea esi, [esi]
 808c198:  xor eax, eax
 808c19a:  mov esi, DWORD PTR [ebp-0x3c]
 808c19d:  mov ecx, 0xffffffff
 808c1a2:  cmp DWORD PTR [ebp-0x3c], 0x0
 808c1a6:  mov edi, DWORD PTR [ebp-0x60]
 808c1a9:  setne al
 808c1ac:  sub esi, eax
 808c1ae:  jmp 808bfc3
 808c1b3:  nop
 808c1b4:  nop
 808c1b5:  nop
 808c1b6:  nop
 808c1b7:  nop
 808c1b8:  nop
 808c1b9:  nop
 808c1ba:  nop
 808c1bb:  nop
 808c1bc:  nop
 808c1bd:  nop
 808c1be:  nop
 808c1bf:  nop

0808c1c0 <__mpn_lshift>:
 808c1c0:  push edi
 808c1c1:  push esi
 808c1c2:  push ebx
 808c1c3:  mov edi, DWORD PTR [esp+0x10]
 808c1c7:  mov esi, DWORD PTR [esp+0x14]
 808c1cb:  mov edx, DWORD PTR [esp+0x18]
 808c1cf:  mov ecx, DWORD PTR [esp+0x1c]
 808c1d3:  sub esi, 0x4
 808c1d6:  mov ebx, DWORD PTR [esi+edx*4]
 808c1d9:  xor eax, eax
 808c1db:  shld eax, ebx, cl
 808c1de:  dec edx
 808c1df:  je 808c20f
 808c1e1:  push eax
 808c1e2:  test dl, 0x1
 808c1e5:  jne 808c1fa
 808c1e7:  mov eax, ebx
 808c1e9:  lea esi, [esi]
 808c1f0:  mov ebx, DWORD PTR [esi+edx*4]
 808c1f3:  shld eax, ebx, cl
 808c1f6:  mov DWORD PTR [edi+edx*4], eax
 808c1f9:  dec edx
 808c1fa:  mov eax, DWORD PTR [esi+edx*4]
 808c1fd:  shld ebx, eax, cl
 808c200:  mov DWORD PTR [edi+edx*4], ebx
 808c203:  dec edx
 808c204:  jne 808c1f0
 808c206:  shl eax, cl
 808c208:  mov DWORD PTR [edi], eax
 808c20a:  pop eax
 808c20b:  pop ebx
 808c20c:  pop esi
 808c20d:  pop edi
 808c20e:  ret
 808c20f:  shl ebx, cl
 808c211:  mov DWORD PTR [edi], ebx
 808c213:  pop ebx
 808c214:  pop esi
 808c215:  pop edi
 808c216:  ret
 808c217:  nop
 808c218:  nop
 808c219:  nop
 808c21a:  nop
 808c21b:  nop
 808c21c:  nop
 808c21d:  nop
 808c21e:  nop
 808c21f:  nop

0808c220 <__mpn_rshift>:
 808c220:  push edi
 808c221:  push esi
 808c222:  push ebx
 808c223:  mov edi, DWORD PTR [esp+0x10]
 808c227:  mov esi, DWORD PTR [esp+0x14]
 808c22b:  mov edx, DWORD PTR [esp+0x18]
 808c22f:  mov ecx, DWORD PTR [esp+0x1c]
 808c233:  lea edi, [edi+edx*4-0x4]
 808c237:  lea esi, [esi+edx*4]
 808c23a:  neg edx
 808c23c:  mov ebx, DWORD PTR [esi+edx*4]
 808c23f:  xor eax, eax
 808c241:  shrd eax, ebx, cl
 808c244:  inc edx
 808c245:  je 808c26f
 808c247:  push eax
 808c248:  test dl, 0x1
 808c24b:  jne 808c25a
 808c24d:  mov eax, ebx
 808c24f:  nop
 808c250:  mov ebx, DWORD PTR [esi+edx*4]
 808c253:  shrd eax, ebx, cl
 808c256:  mov DWORD PTR [edi+edx*4], eax
 808c259:  inc edx
 808c25a:  mov eax, DWORD PTR [esi+edx*4]
 808c25d:  shrd ebx, eax, cl
 808c260:  mov DWORD PTR [edi+edx*4], ebx
 808c263:  inc edx
 808c264:  jne 808c250
 808c266:  shr eax, cl
 808c268:  mov DWORD PTR [edi], eax
 808c26a:  pop eax
 808c26b:  pop ebx
 808c26c:  pop esi
 808c26d:  pop edi
 808c26e:  ret
 808c26f:  shr ebx, cl
 808c271:  mov DWORD PTR [edi], ebx
 808c273:  pop ebx
 808c274:  pop esi
 808c275:  pop edi
 808c276:  ret
 808c277:  nop
 808c278:  nop
 808c279:  nop
 808c27a:  nop
 808c27b:  nop
 808c27c:  nop
 808c27d:  nop
 808c27e:  nop
 808c27f:  nop

0808c280 <__mpn_mul>:
 808c280:  push ebp
 808c281:  mov ebp, esp
 808c283:  push edi
 808c284:  push esi
 808c285:  push ebx
 808c286:  sub esp, 0x38
 808c289:  cmp DWORD PTR [ebp+0x18], 0x1f
 808c28d:  jg 808c338
 808c293:  mov ecx, DWORD PTR [ebp+0x18]
 808c296:  xor eax, eax
 808c298:  test ecx, ecx
 808c29a:  je 808c32e
 808c2a0:  mov edx, DWORD PTR [ebp+0x14]
 808c2a3:  mov eax, DWORD PTR [edx]
 808c2a5:  cmp eax, 0x1
 808c2a8:  jbe 808c3b0
 808c2ae:  mov DWORD PTR [esp+0xc], eax
 808c2b2:  mov ecx, DWORD PTR [ebp+0x10]
 808c2b5:  mov DWORD PTR [esp+0x8], ecx
 808c2b9:  mov ebx, DWORD PTR [ebp+0xc]
 808c2bc:  mov DWORD PTR [esp+0x4], ebx
 808c2c0:  mov eax, DWORD PTR [ebp+0x8]
 808c2c3:  mov DWORD PTR [esp], eax
 808c2c6:  call 808c5d0
 808c2cb:  mov edx, DWORD PTR [ebp+0x10]
 808c2ce:  mov ecx, DWORD PTR [ebp+0x8]
 808c2d1:  lea edi, [ecx+edx*4]
 808c2d4:  mov DWORD PTR [edi], eax
 808c2d6:  cmp DWORD PTR [ebp+0x18], 0x1
 808c2da:  jle 808c32e
 808c2dc:  mov esi, ecx
 808c2de:  mov ebx, 0x1
 808c2e3:  add esi, 0x4
 808c2e6:  jmp 808c2fe
 808c2e8:  je 808c3e0
 808c2ee:  xor eax, eax
 808c2f0:  mov DWORD PTR [edi+ebx*4], eax
 808c2f3:  add ebx, 0x1
 808c2f6:  cmp DWORD PTR [ebp+0x18], ebx
 808c2f9:  jle 808c32e
 808c2fb:  add esi, 0x4
 808c2fe:  mov edx, DWORD PTR [ebp+0x14]
 808c301:  mov eax, DWORD PTR [edx+ebx*4]
 808c304:  cmp eax, 0x1
 808c307:  jbe 808c2e8
 808c309:  mov DWORD PTR [esp+0xc], eax
 808c30d:  mov edx, DWORD PTR [ebp+0x10]
 808c310:  mov DWORD PTR [esp+0x8], edx
 808c314:  mov ecx, DWORD PTR [ebp+0xc]
 808c317:  mov DWORD PTR [esp], esi
 808c31a:  mov DWORD PTR [esp+0x4], ecx
 808c31e:  call 80992d0
 808c323:  mov DWORD PTR [edi+ebx*4], eax
 808c326:  add ebx, 0x1
 808c329:  cmp DWORD PTR [ebp+0x18], ebx
 808c32c:  jg 808c2fb
 808c32e:  lea esp, [ebp-0xc]
 808c331:  pop ebx
 808c332:  pop esi
 808c333:  pop edi
 808c334:  pop ebp
 808c335:  ret
 808c336:  xchg ax, ax
 808c338:  mov eax, DWORD PTR [ebp+0x18]
 808c33b:  lea ebx, [eax*8+0x10]
 808c342:  sub esp, ebx
 808c344:  lea edx, [esp+0x23]
 808c348:  and edx, 0xf0
 808c34b:  mov DWORD PTR [ebp-0x2c], edx
 808c34e:  mov DWORD PTR [esp+0x10], edx
 808c352:  mov DWORD PTR [esp+0xc], eax
 808c356:  mov ecx, DWORD PTR [ebp+0x14]
 808c359:  mov DWORD PTR [esp+0x8], ecx
 808c35d:  mov eax, DWORD PTR [ebp+0xc]
 808c360:  mov DWORD PTR [esp+0x4], eax
 808c364:  mov edx, DWORD PTR [ebp+0x8]
 808c367:  mov DWORD PTR [esp], edx
 808c36a:  call 808c840
 808c36f:  mov ecx, DWORD PTR [ebp+0x18]
 808c372:  mov edi, DWORD PTR [ebp+0x8]
 808c375:  mov eax, DWORD PTR [ebp+0xc]
 808c378:  mov esi, DWORD PTR [ebp+0x10]
 808c37b:  shl ecx, 0x2
 808c37e:  add edi, ecx
 808c380:  add eax, ecx
 808c382:  sub esi, DWORD PTR [ebp+0x18]
 808c385:  cmp DWORD PTR [ebp+0x18], esi
 808c388:  mov DWORD PTR [ebp-0x28], ecx
 808c38b:  mov DWORD PTR [ebp-0x14], eax
 808c38e:  jle 808c4a8
 808c394:  test esi, esi
 808c396:  jne 808c400
 808c398:  mov ecx, DWORD PTR [ebp+0x10]
 808c39b:  mov edx, DWORD PTR [ebp+0x18]
 808c39e:  mov ebx, DWORD PTR [ebp+0x8]
 808c3a1:  lea eax, [ecx+edx-0x1]
 808c3a5:  mov eax, DWORD PTR [ebx+eax*4]
 808c3a8:  lea esp, [ebp-0xc]
 808c3ab:  pop ebx
 808c3ac:  pop esi
 808c3ad:  pop edi
 808c3ae:  pop ebp
 808c3af:  ret
 808c3b0:  je 808c598
 808c3b6:  mov edx, DWORD PTR [ebp+0x10]
 808c3b9:  xor eax, eax
 808c3bb:  test edx, edx
 808c3bd:  jle 808c3d2
 808c3bf:  nop
 808c3c0:  mov edx, DWORD PTR [ebp+0x8]
 808c3c3:  mov DWORD PTR [edx+eax*4], 0x0
 808c3ca:  add eax, 0x1
 808c3cd:  cmp DWORD PTR [ebp+0x10], eax
 808c3d0:  jg 808c3c0
 808c3d2:  xor eax, eax
 808c3d4:  jmp 808c2cb
 808c3d9:  lea esi, [esi]
 808c3e0:  mov ecx, DWORD PTR [ebp+0x10]
 808c3e3:  mov DWORD PTR [esp+0xc], ecx
 808c3e7:  mov eax, DWORD PTR [ebp+0xc]
 808c3ea:  mov DWORD PTR [esp+0x4], esi
 808c3ee:  mov DWORD PTR [esp], esi
 808c3f1:  mov DWORD PTR [esp+0x8], eax
 808c3f5:  call 8099240
 808c3fa:  jmp 808c2f0
 808c3ff:  nop
 808c400:  mov DWORD PTR [esp+0x10], esi
 808c404:  mov edx, DWORD PTR [ebp-0x14]
 808c407:  mov DWORD PTR [esp+0xc], edx
 808c40b:  mov ecx, DWORD PTR [ebp+0x18]
 808c40e:  mov DWORD PTR [esp+0x8], ecx
 808c412:  mov ebx, DWORD PTR [ebp+0x14]
 808c415:  mov DWORD PTR [esp+0x4], ebx
 808c419:  mov eax, DWORD PTR [ebp-0x2c]
 808c41c:  mov DWORD PTR [esp], eax
 808c41f:  call 808c280
 808c424:  mov edx, DWORD PTR [ebp+0x18]
 808c427:  mov DWORD PTR [esp+0xc], edx
 808c42b:  mov ecx, DWORD PTR [ebp-0x2c]
 808c42e:  mov DWORD PTR [esp+0x4], edi
 808c432:  mov DWORD PTR [esp], edi
 808c435:  mov DWORD PTR [esp+0x8], ecx
 808c439:  call 8099240
 808c43e:  mov ebx, DWORD PTR [ebp-0x28]
 808c441:  mov edx, DWORD PTR [ebp-0x2c]
 808c444:  add edx, DWORD PTR [ebp-0x28]
 808c447:  lea ecx, [edi+ebx]
 808c44a:  mov ebx, DWORD PTR [edx]
 808c44c:  add edx, 0x4
 808c44f:  add eax, ebx
 808c451:  mov DWORD PTR [ecx], eax
 808c453:  add ecx, 0x4
 808c456:  cmp ebx, eax
 808c458:  ja 808c488
 808c45a:  cmp ecx, edx
 808c45c:  je 808c398
 808c462:  sub esi, 0x1
 808c465:  test esi, esi
 808c467:  jle 808c398
 808c46d:  xor ebx, ebx
 808c46f:  nop
 808c470:  mov eax, DWORD PTR [edx+ebx*4]
 808c473:  mov DWORD PTR [ecx+ebx*4], eax
 808c476:  add ebx, 0x1
 808c479:  cmp ebx, esi
 808c47b:  jl 808c470
 808c47d:  jmp 808c398
 808c482:  lea esi, [esi]
 808c488:  sub esi, 0x1
 808c48b:  je 808c398
 808c491:  mov eax, DWORD PTR [edx]
 808c493:  add edx, 0x4
 808c496:  add eax, 0x1
 808c499:  mov DWORD PTR [ecx], eax
 808c49b:  add ecx, 0x4
 808c49e:  test eax, eax
 808c4a0:  je 808c488
 808c4a2:  jmp 808c45a
 808c4a4:  lea esi, [esi]
 808c4a8:  sub esp, ebx
 808c4aa:  mov ebx, DWORD PTR [ebp-0x28]
 808c4ad:  lea edx, [esp+0x23]
 808c4b1:  and edx, 0xf0
 808c4b4:  mov DWORD PTR [ebp-0x30], edx
 808c4b7:  add edx, ecx
 808c4b9:  mov ecx, DWORD PTR [ebp+0x18]
 808c4bc:  sub esi, DWORD PTR [ebp+0x18]
 808c4bf:  mov DWORD PTR [ebp-0x20], edx
 808c4c2:  lea ebx, [edi+ebx+0x4]
 808c4c6:  add edx, 0x4
 808c4c9:  mov DWORD PTR [ebp-0x24], edx
 808c4cc:  neg ecx
 808c4ce:  mov DWORD PTR [ebp-0x1c], ecx
 808c4d1:  mov DWORD PTR [ebp-0x10], esi
 808c4d4:  mov DWORD PTR [ebp-0x18], ebx
 808c4d7:  nop
 808c4d8:  mov eax, DWORD PTR [ebp-0x2c]
 808c4db:  mov DWORD PTR [esp+0x10], eax
 808c4df:  mov edx, DWORD PTR [ebp+0x18]
 808c4e2:  mov DWORD PTR [esp+0xc], edx
 808c4e6:  mov ecx, DWORD PTR [ebp+0x14]
 808c4e9:  mov DWORD PTR [esp+0x8], ecx
 808c4ed:  mov ebx, DWORD PTR [ebp-0x14]
 808c4f0:  mov DWORD PTR [esp+0x4], ebx
 808c4f4:  mov eax, DWORD PTR [ebp-0x30]
 808c4f7:  mov DWORD PTR [esp], eax
 808c4fa:  call 808c840
 808c4ff:  mov edx, DWORD PTR [ebp+0x18]
 808c502:  mov DWORD PTR [esp+0xc], edx
 808c506:  mov ecx, DWORD PTR [ebp-0x30]
 808c509:  mov DWORD PTR [esp+0x4], edi
 808c50d:  mov DWORD PTR [esp], edi
 808c510:  mov DWORD PTR [esp+0x8], ecx
 808c514:  call 8099240
 808c519:  mov ebx, DWORD PTR [ebp-0x20]
 808c51c:  mov ecx, DWORD PTR [ebp-0x18]
 808c51f:  add edi, DWORD PTR [ebp-0x28]
 808c522:  mov edx, DWORD PTR [ebx]
 808c524:  mov ebx, ecx
 808c526:  add eax, edx
 808c528:  cmp edx, eax
 808c52a:  mov DWORD PTR [ecx-0x4], eax
 808c52d:  mov ecx, DWORD PTR [ebp-0x24]
 808c530:  mov esi, DWORD PTR [ebp+0x18]
 808c533:  ja 808c591
 808c535:  cmp ebx, ecx
 808c537:  je 808c555
 808c539:  sub esi, 0x1
 808c53c:  test esi, esi
 808c53e:  jle 808c555
 808c540:  xor edx, edx
 808c542:  lea esi, [esi]
 808c548:  mov eax, DWORD PTR [ecx+edx*4]
 808c54b:  mov DWORD PTR [ebx+edx*4], eax
 808c54e:  add edx, 0x1
 808c551:  cmp edx, esi
 808c553:  jl 808c548
 808c555:  mov eax, DWORD PTR [ebp-0x1c]
 808c558:  mov ebx, DWORD PTR [ebp-0x28]
 808c55b:  mov esi, DWORD PTR [ebp-0x10]
 808c55e:  add DWORD PTR [ebp-0x10], eax
 808c561:  mov eax, DWORD PTR [ebp+0x18]
 808c564:  add DWORD PTR [ebp-0x14], ebx
 808c567:  add DWORD PTR [ebp-0x18], ebx
 808c56a:  add eax, DWORD PTR [ebp-0x10]
 808c56d:  cmp DWORD PTR [ebp+0x18], eax
 808c570:  jle 808c4d8
 808c576:  jmp 808c394
 808c57b:  nop
 808c57c:  lea esi, [esi]
 808c580:  mov eax, DWORD PTR [ecx]
 808c582:  add ecx, 0x4
 808c585:  add eax, 0x1
 808c588:  mov DWORD PTR [ebx], eax
 808c58a:  add ebx, 0x4
 808c58d:  test eax, eax
 808c58f:  jne 808c535
 808c591:  sub esi, 0x1
 808c594:  jne 808c580
 808c596:  jmp 808c555
 808c598:  mov eax, DWORD PTR [ebp+0x10]
 808c59b:  test eax, eax
 808c59d:  lea esi, [esi]
 808c5a0:  jle 808c3d2
 808c5a6:  mov ecx, DWORD PTR [ebp+0xc]
 808c5a9:  xor edx, edx
 808c5ab:  mov ebx, DWORD PTR [ebp+0x8]
 808c5ae:  xchg ax, ax
 808c5b0:  mov eax, DWORD PTR [ecx+edx*4]
 808c5b3:  mov DWORD PTR [ebx+edx*4], eax
 808c5b6:  add edx, 0x1
 808c5b9:  cmp DWORD PTR [ebp+0x10], edx
 808c5bc:  jg 808c5b0
 808c5be:  xor eax, eax
 808c5c0:  jmp 808c2cb
 808c5c5:  nop
 808c5c6:  nop
 808c5c7:  nop
 808c5c8:  nop
 808c5c9:  nop
 808c5ca:  nop
 808c5cb:  nop
 808c5cc:  nop
 808c5cd:  nop
 808c5ce:  nop
 808c5cf:  nop

0808c5d0 <__mpn_mul_1>:
 808c5d0:  push edi
 808c5d1:  push esi
 808c5d2:  push ebp
 808c5d3:  push ebx
 808c5d4:  mov edi, DWORD PTR [esp+0x14]
 808c5d8:  mov esi, DWORD PTR [esp+0x18]
 808c5dc:  mov ecx, DWORD PTR [esp+0x1c]
 808c5e0:  mov ebx, DWORD PTR [esp+0x20]
 808c5e4:  lea edi, [edi+ecx*4]
 808c5e7:  lea esi, [esi+ecx*4]
 808c5ea:  neg ecx
 808c5ec:  xor ebp, ebp
 808c5ee:  xchg ax, ax
 808c5f0:  mov eax, DWORD PTR [esi+ecx*4]
 808c5f3:  mul ebx
 808c5f5:  add eax, ebp
 808c5f7:  mov DWORD PTR [edi+ecx*4], eax
 808c5fa:  adc edx, 0x0
 808c5fd:  mov ebp, edx
 808c5ff:  inc ecx
 808c600:  jne 808c5f0
 808c602:  mov eax, ebp
 808c604:  pop ebx
 808c605:  pop ebp
 808c606:  pop esi
 808c607:  pop edi
 808c608:  ret
 808c609:  nop
 808c60a:  nop
 808c60b:  nop
 808c60c:  nop
 808c60d:  nop
 808c60e:  nop
 808c60f:  nop

0808c610 <__mpn_impn_sqr_n_basecase>:
 808c610:  push ebp
 808c611:  mov ebp, esp
 808c613:  push edi
 808c614:  push esi
 808c615:  push ebx
 808c616:  sub esp, 0x10
 808c619:  mov edx, DWORD PTR [ebp+0xc]
 808c61c:  mov esi, DWORD PTR [ebp+0x10]
 808c61f:  mov eax, DWORD PTR [edx]
 808c621:  cmp eax, 0x1
 808c624:  jbe 808c6c0
 808c62a:  mov DWORD PTR [esp+0xc], eax
 808c62e:  mov eax, DWORD PTR [ebp+0x8]
 808c631:  mov DWORD PTR [esp+0x8], esi
 808c635:  mov DWORD PTR [esp+0x4], edx
 808c639:  mov DWORD PTR [esp], eax
 808c63c:  call 808c5d0
 808c641:  mov edx, DWORD PTR [ebp+0x8]
 808c644:  cmp esi, 0x1
 808c647:  lea edi, [edx+esi*4]
 808c64a:  mov DWORD PTR [edi], eax
 808c64c:  jle 808c695
 808c64e:  mov ebx, 0x1
 808c653:  jmp 808c666
 808c655:  lea esi, [esi]
 808c658:  je 808c6a0
 808c65a:  xor eax, eax
 808c65c:  mov DWORD PTR [edi+ebx*4], eax
 808c65f:  add ebx, 0x1
 808c662:  cmp esi, ebx
 808c664:  jle 808c695
 808c666:  mov ecx, DWORD PTR [ebp+0x8]
 808c669:  lea edx, [ecx+ebx*4]
 808c66c:  mov ecx, DWORD PTR [ebp+0xc]
 808c66f:  mov eax, DWORD PTR [ecx+ebx*4]
 808c672:  cmp eax, 0x1
 808c675:  jbe 808c658
 808c677:  mov DWORD PTR [esp+0xc], eax
 808c67b:  mov DWORD PTR [esp+0x8], esi
 808c67f:  mov DWORD PTR [esp+0x4], ecx
 808c683:  mov DWORD PTR [esp], edx
 808c686:  call 80992d0
 808c68b:  mov DWORD PTR [edi+ebx*4], eax
 808c68e:  add ebx, 0x1
 808c691:  cmp esi, ebx
 808c693:  jg 808c666
 808c695:  add esp, 0x10
 808c698:  pop ebx
 808c699:  pop esi
 808c69a:  pop edi
 808c69b:  pop ebp
 808c69c:  ret
 808c69d:  lea esi, [esi]
 808c6a0:  mov eax, DWORD PTR [ebp+0xc]
 808c6a3:  mov DWORD PTR [esp+0xc], esi
 808c6a7:  mov DWORD PTR [esp+0x4], edx
 808c6ab:  mov DWORD PTR [esp], edx
 808c6ae:  mov DWORD PTR [esp+0x8], eax
 808c6b2:  call 8099240
 808c6b7:  jmp 808c65c
 808c6b9:  lea esi, [esi]
 808c6c0:  je 808c6e8
 808c6c2:  xor eax, eax
 808c6c4:  test esi, esi
 808c6c6:  xchg ax, ax
 808c6c8:  jle 808c6e1
 808c6ca:  lea esi, [esi]
 808c6d0:  mov edx, DWORD PTR [ebp+0x8]
 808c6d3:  mov DWORD PTR [edx+eax*4], 0x0
 808c6da:  add eax, 0x1
 808c6dd:  cmp esi, eax
 808c6df:  jg 808c6d0
 808c6e1:  xor eax, eax
 808c6e3:  jmp 808c641
 808c6e8:  test esi, esi
 808c6ea:  jle 808c70a
 808c6ec:  xor edx, edx
 808c6ee:  xchg ax, ax
 808c6f0:  mov ecx, DWORD PTR [ebp+0xc]
 808c6f3:  mov eax, DWORD PTR [ecx+edx*4]
 808c6f6:  mov ecx, DWORD PTR [ebp+0x8]
 808c6f9:  mov DWORD PTR [ecx+edx*4], eax
 808c6fc:  add edx, 0x1
 808c6ff:  cmp esi, edx
 808c701:  jg 808c6f0
 808c703:  xor eax, eax
 808c705:  jmp 808c641
 808c70a:  mov eax, DWORD PTR [ebp+0x8]
 808c70d:  mov DWORD PTR [eax+esi*4], 0x0
 808c714:  jmp 808c695
 808c719:  lea esi, [esi]

0808c720 <__mpn_impn_mul_n_basecase>:
 808c720:  push ebp
 808c721:  mov ebp, esp
 808c723:  push edi
 808c724:  push esi
 808c725:  push ebx
 808c726:  sub esp, 0x14
 808c729:  mov edx, DWORD PTR [ebp+0x10]
 808c72c:  mov ebx, DWORD PTR [ebp+0x8]
 808c72f:  mov edi, DWORD PTR [ebp+0x14]
 808c732:  mov eax, DWORD PTR [edx]
 808c734:  cmp eax, 0x1
 808c737:  jbe 808c7e0
 808c73d:  mov DWORD PTR [esp+0xc], eax
 808c741:  mov eax, DWORD PTR [ebp+0xc]
 808c744:  mov DWORD PTR [esp+0x8], edi
 808c748:  mov DWORD PTR [esp], ebx
 808c74b:  mov DWORD PTR [esp+0x4], eax
 808c74f:  call 808c5d0
 808c754:  lea edx, [ebx+edi*4]
 808c757:  cmp edi, 0x1
 808c75a:  mov DWORD PTR [ebp-0x10], edx
 808c75d:  mov DWORD PTR [edx], eax
 808c75f:  jle 808c7b3
 808c761:  lea esi, [ebx+0x4]
 808c764:  mov ebx, 0x1
 808c769:  jmp 808c784
 808c76b:  nop
 808c76c:  lea esi, [esi]
 808c770:  je 808c7c0
 808c772:  xor eax, eax
 808c774:  mov ecx, DWORD PTR [ebp-0x10]
 808c777:  mov DWORD PTR [ecx+ebx*4], eax
 808c77a:  add ebx, 0x1
 808c77d:  cmp edi, ebx
 808c77f:  jle 808c7b3
 808c781:  add esi, 0x4
 808c784:  mov ecx, DWORD PTR [ebp+0x10]
 808c787:  mov eax, DWORD PTR [ecx+ebx*4]
 808c78a:  cmp eax, 0x1
 808c78d:  jbe 808c770
 808c78f:  mov edx, DWORD PTR [ebp+0xc]
 808c792:  mov DWORD PTR [esp+0xc], eax
 808c796:  mov DWORD PTR [esp+0x8], edi
 808c79a:  mov DWORD PTR [esp], esi
 808c79d:  mov DWORD PTR [esp+0x4], edx
 808c7a1:  call 80992d0
 808c7a6:  mov ecx, DWORD PTR [ebp-0x10]
 808c7a9:  mov DWORD PTR [ecx+ebx*4], eax
 808c7ac:  add ebx, 0x1
 808c7af:  cmp edi, ebx
 808c7b1:  jg 808c781
 808c7b3:  add esp, 0x14
 808c7b6:  pop ebx
 808c7b7:  pop esi
 808c7b8:  pop edi
 808c7b9:  pop ebp
 808c7ba:  ret
 808c7bb:  nop
 808c7bc:  lea esi, [esi]
 808c7c0:  mov eax, DWORD PTR [ebp+0xc]
 808c7c3:  mov DWORD PTR [esp+0xc], edi
 808c7c7:  mov DWORD PTR [esp+0x4], esi
 808c7cb:  mov DWORD PTR [esp], esi
 808c7ce:  mov DWORD PTR [esp+0x8], eax
 808c7d2:  call 8099240
 808c7d7:  jmp 808c774
 808c7d9:  lea esi, [esi]
 808c7e0:  je 808c808
 808c7e2:  xor eax, eax
 808c7e4:  test edi, edi
 808c7e6:  xchg ax, ax
 808c7e8:  jle 808c7fe
 808c7ea:  lea esi, [esi]
 808c7f0:  mov DWORD PTR [ebx+eax*4], 0x0
 808c7f7:  add eax, 0x1
 808c7fa:  cmp edi, eax
 808c7fc:  jg 808c7f0
 808c7fe:  xor eax, eax
 808c800:  jmp 808c754
 808c805:  lea esi, [esi]
 808c808:  test edi, edi
 808c80a:  jle 808c82c
 808c80c:  mov ecx, DWORD PTR [ebp+0xc]
 808c80f:  xor edx, edx
 808c811:  lea esi, [esi]
 808c818:  mov eax, DWORD PTR [ecx+edx*4]
 808c81b:  mov DWORD PTR [ebx+edx*4], eax
 808c81e:  add edx, 0x1
 808c821:  cmp edi, edx
 808c823:  jg 808c818
 808c825:  xor eax, eax
 808c827:  jmp 808c754
 808c82c:  mov DWORD PTR [ebx+edi*4], 0x0
 808c833:  jmp 808c7b3
 808c838:  nop
 808c839:  lea esi, [esi]

0808c840 <__mpn_impn_mul_n>:
 808c840:  push ebp
 808c841:  mov ebp, esp
 808c843:  push edi
 808c844:  push esi
 808c845:  push ebx
 808c846:  sub esp, 0x44
 808c849:  test BYTE PTR [ebp+0x14], 0x1
 808c84d:  je 808c900
 808c853:  mov edi, DWORD PTR [ebp+0x14]
 808c856:  sub edi, 0x1
 808c859:  cmp edi, 0x1f
 808c85c:  jle 808cc08
 808c862:  mov ecx, DWORD PTR [ebp+0x18]
 808c865:  mov DWORD PTR [esp+0xc], edi
 808c869:  mov DWORD PTR [esp+0x10], ecx
 808c86d:  mov eax, DWORD PTR [ebp+0x10]
 808c870:  mov DWORD PTR [esp+0x8], eax
 808c874:  mov edx, DWORD PTR [ebp+0xc]
 808c877:  mov DWORD PTR [esp+0x4], edx
 808c87b:  mov ecx, DWORD PTR [ebp+0x8]
 808c87e:  mov DWORD PTR [esp], ecx
 808c881:  call 808c840
 808c886:  mov edx, DWORD PTR [ebp+0x8]
 808c889:  lea eax, [edi*4]
 808c890:  mov DWORD PTR [ebp-0x20], eax
 808c893:  add edx, eax
 808c895:  mov DWORD PTR [ebp-0x1c], edx
 808c898:  mov edx, DWORD PTR [ebp+0x10]
 808c89b:  mov ecx, DWORD PTR [ebp-0x20]
 808c89e:  mov eax, DWORD PTR [edx+ecx]
 808c8a1:  mov DWORD PTR [esp+0x8], edi
 808c8a5:  mov DWORD PTR [esp+0xc], eax
 808c8a9:  mov ecx, DWORD PTR [ebp+0xc]
 808c8ac:  mov DWORD PTR [esp+0x4], ecx
 808c8b0:  mov eax, DWORD PTR [ebp-0x1c]
 808c8b3:  mov DWORD PTR [esp], eax
 808c8b6:  call 80992d0
 808c8bb:  mov edx, DWORD PTR [ebp+0x8]
 808c8be:  mov ecx, DWORD PTR [ebp-0x20]
 808c8c1:  mov DWORD PTR [edx+edi*8], eax
 808c8c4:  mov edx, DWORD PTR [ebp+0xc]
 808c8c7:  mov eax, DWORD PTR [edx+ecx]
 808c8ca:  mov DWORD PTR [esp+0xc], eax
 808c8ce:  mov ecx, DWORD PTR [ebp+0x14]
 808c8d1:  mov DWORD PTR [esp+0x8], ecx
 808c8d5:  mov eax, DWORD PTR [ebp+0x10]
 808c8d8:  mov DWORD PTR [esp+0x4], eax
 808c8dc:  mov edx, DWORD PTR [ebp-0x1c]
 808c8df:  mov DWORD PTR [esp], edx
 808c8e2:  call 80992d0
 808c8e7:  mov ecx, DWORD PTR [ebp+0x14]
 808c8ea:  lea edx, [edi+ecx]
 808c8ed:  mov ecx, DWORD PTR [ebp+0x8]
 808c8f0:  mov DWORD PTR [ecx+edx*4], eax
 808c8f3:  add esp, 0x44
 808c8f6:  pop ebx
 808c8f7:  pop esi
 808c8f8:  pop edi
 808c8f9:  pop ebp
 808c8fa:  ret
 808c8fb:  nop
 808c8fc:  lea esi, [esi]
 808c900:  mov esi, DWORD PTR [ebp+0x14]
 808c903:  sar esi, 1
 808c905:  cmp esi, 0x1f
 808c908:  jle 808cb60
 808c90e:  mov edx, DWORD PTR [ebp+0x10]
 808c911:  lea eax, [esi*4]
 808c918:  mov ecx, DWORD PTR [ebp+0xc]
 808c91b:  mov DWORD PTR [ebp-0x18], eax
 808c91e:  add edx, eax
 808c920:  add ecx, eax
 808c922:  mov eax, DWORD PTR [ebp+0x18]
 808c925:  mov DWORD PTR [ebp-0x24], edx
 808c928:  mov DWORD PTR [ebp-0x14], ecx
 808c92b:  mov DWORD PTR [esp+0xc], esi
 808c92f:  mov DWORD PTR [esp+0x10], eax
 808c933:  mov DWORD PTR [esp+0x8], edx
 808c937:  mov DWORD PTR [esp+0x4], ecx
 808c93b:  mov edx, DWORD PTR [ebp+0x14]
 808c93e:  mov ecx, DWORD PTR [ebp+0x8]
 808c941:  lea eax, [ecx+edx*4]
 808c944:  mov DWORD PTR [esp], eax
 808c947:  call 808c840
 808c94c:  mov DWORD PTR [esp+0x8], esi
 808c950:  mov eax, DWORD PTR [ebp+0xc]
 808c953:  mov DWORD PTR [esp+0x4], eax
 808c957:  mov edx, DWORD PTR [ebp-0x14]
 808c95a:  mov DWORD PTR [esp], edx
 808c95d:  call 808bcb0
 808c962:  test eax, eax
 808c964:  js 808cfc0
 808c96a:  mov DWORD PTR [esp+0xc], esi
 808c96e:  mov ecx, DWORD PTR [ebp+0xc]
 808c971:  mov ebx, 0x1
 808c976:  mov DWORD PTR [esp+0x8], ecx
 808c97a:  mov eax, DWORD PTR [ebp-0x14]
 808c97d:  mov DWORD PTR [esp+0x4], eax
 808c981:  mov edx, DWORD PTR [ebp+0x8]
 808c984:  mov DWORD PTR [esp], edx
 808c987:  call 808da20
 808c98c:  mov DWORD PTR [ebp-0x28], 0x0
 808c993:  mov DWORD PTR [esp+0x8], esi
 808c997:  mov ecx, DWORD PTR [ebp+0x10]
 808c99a:  mov DWORD PTR [esp+0x4], ecx
 808c99e:  mov eax, DWORD PTR [ebp-0x24]
 808c9a1:  mov DWORD PTR [esp], eax
 808c9a4:  call 808bcb0
 808c9a9:  test eax, eax
 808c9ab:  js 808cf98
 808c9b1:  mov edx, DWORD PTR [ebp+0x8]
 808c9b4:  add edx, DWORD PTR [ebp-0x18]
 808c9b7:  mov DWORD PTR [ebp-0x38], edx
 808c9ba:  mov DWORD PTR [esp+0xc], esi
 808c9be:  mov ecx, DWORD PTR [ebp+0x10]
 808c9c1:  mov DWORD PTR [esp+0x8], ecx
 808c9c5:  mov eax, DWORD PTR [ebp-0x24]
 808c9c8:  mov DWORD PTR [esp], edx
 808c9cb:  mov DWORD PTR [esp+0x4], eax
 808c9cf:  call 808da20
 808c9d4:  mov DWORD PTR [ebp-0x28], ebx
 808c9d7:  cmp esi, 0x1f
 808c9da:  jg 808cca0
 808c9e0:  mov edx, DWORD PTR [ebp-0x38]
 808c9e3:  mov eax, DWORD PTR [edx]
 808c9e5:  cmp eax, 0x1
 808c9e8:  jbe 808ce58
 808c9ee:  mov DWORD PTR [esp+0xc], eax
 808c9f2:  mov DWORD PTR [esp+0x8], esi
 808c9f6:  mov ecx, DWORD PTR [ebp+0x8]
 808c9f9:  mov DWORD PTR [esp+0x4], ecx
 808c9fd:  mov eax, DWORD PTR [ebp+0x18]
 808ca00:  mov DWORD PTR [esp], eax
 808ca03:  call 808c5d0
 808ca08:  mov edx, DWORD PTR [ebp+0x18]
 808ca0b:  add edx, DWORD PTR [ebp-0x18]
 808ca0e:  cmp esi, 0x1
 808ca11:  mov DWORD PTR [ebp-0x3c], edx
 808ca14:  mov DWORD PTR [edx], eax
 808ca16:  jle 808ca6f
 808ca18:  mov edi, DWORD PTR [ebp+0x18]
 808ca1b:  mov ebx, 0x1
 808ca20:  add edi, 0x4
 808ca23:  jmp 808ca40
 808ca25:  lea esi, [esi]
 808ca28:  je 808cf78
 808ca2e:  xor eax, eax
 808ca30:  mov ecx, DWORD PTR [ebp-0x3c]
 808ca33:  mov DWORD PTR [ecx+ebx*4], eax
 808ca36:  add ebx, 0x1
 808ca39:  cmp esi, ebx
 808ca3b:  jle 808ca6f
 808ca3d:  add edi, 0x4
 808ca40:  mov ecx, DWORD PTR [ebp-0x38]
 808ca43:  mov eax, DWORD PTR [ecx+ebx*4]
 808ca46:  cmp eax, 0x1
 808ca49:  jbe 808ca28
 808ca4b:  mov DWORD PTR [esp+0xc], eax
 808ca4f:  mov DWORD PTR [esp+0x8], esi
 808ca53:  mov edx, DWORD PTR [ebp+0x8]
 808ca56:  mov DWORD PTR [esp], edi
 808ca59:  mov DWORD PTR [esp+0x4], edx
 808ca5d:  call 80992d0
 808ca62:  mov ecx, DWORD PTR [ebp-0x3c]
 808ca65:  mov DWORD PTR [ecx+ebx*4], eax
 808ca68:  add ebx, 0x1
 808ca6b:  cmp esi, ebx
 808ca6d:  jg 808ca3d
 808ca6f:  test esi, esi
 808ca71:  jg 808ccd3
 808ca77:  nop
 808ca78:  mov eax, DWORD PTR [ebp+0x14]
 808ca7b:  mov edi, DWORD PTR [ebp+0x14]
 808ca7e:  mov ecx, DWORD PTR [ebp+0x8]
 808ca81:  add eax, esi
 808ca83:  shl edi, 0x2
 808ca86:  lea eax, [ecx+eax*4]
 808ca89:  add ecx, edi
 808ca8b:  mov DWORD PTR [ebp-0x34], eax
 808ca8e:  mov DWORD PTR [ebp-0x30], ecx
 808ca91:  mov DWORD PTR [esp+0xc], esi
 808ca95:  mov DWORD PTR [esp+0x8], eax
 808ca99:  mov DWORD PTR [esp+0x4], ecx
 808ca9d:  mov DWORD PTR [esp], ecx
 808caa0:  call 8099240
 808caa5:  mov ebx, eax
 808caa7:  mov eax, DWORD PTR [ebp-0x28]
 808caaa:  test eax, eax
 808caac:  je 808cd00
 808cab2:  mov eax, DWORD PTR [ebp+0x14]
 808cab5:  mov DWORD PTR [esp+0xc], eax
 808cab9:  mov edx, DWORD PTR [ebp+0x18]
 808cabc:  mov DWORD PTR [esp+0x8], edx
 808cac0:  mov ecx, DWORD PTR [ebp-0x38]
 808cac3:  mov DWORD PTR [esp+0x4], ecx
 808cac7:  mov DWORD PTR [esp], ecx
 808caca:  call 808da20
 808cacf:  sub ebx, eax
 808cad1:  cmp esi, 0x1f
 808cad4:  mov DWORD PTR [ebp-0x2c], ebx
 808cad7:  jg 808cd2b
 808cadd:  mov edx, DWORD PTR [ebp+0x10]
 808cae0:  mov eax, DWORD PTR [edx]
 808cae2:  cmp eax, 0x1
 808cae5:  jbe 808cee8
 808caeb:  mov DWORD PTR [esp+0xc], eax
 808caef:  mov DWORD PTR [esp+0x8], esi
 808caf3:  mov ecx, DWORD PTR [ebp+0xc]
 808caf6:  mov DWORD PTR [esp+0x4], ecx
 808cafa:  mov eax, DWORD PTR [ebp+0x18]
 808cafd:  mov DWORD PTR [esp], eax
 808cb00:  call 808c5d0
 808cb05:  mov edx, DWORD PTR [ebp-0x3c]
 808cb08:  cmp esi, 0x1
 808cb0b:  mov DWORD PTR [edx], eax
 808cb0d:  jle 808cd51
 808cb13:  mov edi, DWORD PTR [ebp+0x18]
 808cb16:  mov ebx, 0x1
 808cb1b:  add edi, 0x4
 808cb1e:  jmp 808cb3c
 808cb20:  je 808cf58
 808cb26:  xor eax, eax
 808cb28:  mov ecx, DWORD PTR [ebp-0x3c]
 808cb2b:  mov DWORD PTR [ecx+ebx*4], eax
 808cb2e:  add ebx, 0x1
 808cb31:  cmp esi, ebx
 808cb33:  jle 808cd51
 808cb39:  add edi, 0x4
 808cb3c:  mov ecx, DWORD PTR [ebp+0x10]
 808cb3f:  mov eax, DWORD PTR [ecx+ebx*4]
 808cb42:  cmp eax, 0x1
 808cb45:  jbe 808cb20
 808cb47:  mov DWORD PTR [esp+0xc], eax
 808cb4b:  mov DWORD PTR [esp+0x8], esi
 808cb4f:  mov edx, DWORD PTR [ebp+0xc]
 808cb52:  mov DWORD PTR [esp], edi
 808cb55:  mov DWORD PTR [esp+0x4], edx
 808cb59:  call 80992d0
 808cb5e:  jmp 808cb28
 808cb60:  mov edx, DWORD PTR [ebp+0x10]
 808cb63:  lea eax, [esi*4]
 808cb6a:  mov ecx, DWORD PTR [ebp+0xc]
 808cb6d:  mov DWORD PTR [ebp-0x18], eax
 808cb70:  add edx, eax
 808cb72:  add ecx, eax
 808cb74:  mov eax, DWORD PTR [ebp+0x14]
 808cb77:  mov DWORD PTR [ebp-0x24], edx
 808cb7a:  mov edx, DWORD PTR [ebp+0x8]
 808cb7d:  mov DWORD PTR [ebp-0x14], ecx
 808cb80:  mov ecx, DWORD PTR [ebp-0x24]
 808cb83:  lea ebx, [edx+eax*4]
 808cb86:  mov eax, DWORD PTR [ecx]
 808cb88:  cmp eax, 0x1
 808cb8b:  jbe 808ce88
 808cb91:  mov DWORD PTR [esp+0xc], eax
 808cb95:  mov DWORD PTR [esp+0x8], esi
 808cb99:  mov eax, DWORD PTR [ebp-0x14]
 808cb9c:  mov DWORD PTR [esp], ebx
 808cb9f:  mov DWORD PTR [esp+0x4], eax
 808cba3:  call 808c5d0
 808cba8:  mov edx, DWORD PTR [ebp-0x18]
 808cbab:  add edx, ebx
 808cbad:  cmp esi, 0x1
 808cbb0:  mov DWORD PTR [ebp-0x10], edx
 808cbb3:  mov DWORD PTR [edx], eax
 808cbb5:  jle 808c94c
 808cbbb:  lea edi, [ebx+0x4]
 808cbbe:  mov ebx, 0x1
 808cbc3:  jmp 808cbe4
 808cbc5:  lea esi, [esi]
 808cbc8:  je 808cf18
 808cbce:  xor eax, eax
 808cbd0:  mov ecx, DWORD PTR [ebp-0x10]
 808cbd3:  mov DWORD PTR [ecx+ebx*4], eax
 808cbd6:  add ebx, 0x1
 808cbd9:  cmp esi, ebx
 808cbdb:  jle 808c94c
 808cbe1:  add edi, 0x4
 808cbe4:  mov ecx, DWORD PTR [ebp-0x24]
 808cbe7:  mov eax, DWORD PTR [ecx+ebx*4]
 808cbea:  cmp eax, 0x1
 808cbed:  jbe 808cbc8
 808cbef:  mov DWORD PTR [esp+0xc], eax
 808cbf3:  mov DWORD PTR [esp+0x8], esi
 808cbf7:  mov edx, DWORD PTR [ebp-0x14]
 808cbfa:  mov DWORD PTR [esp], edi
 808cbfd:  mov DWORD PTR [esp+0x4], edx
 808cc01:  call 80992d0
 808cc06:  jmp 808cbd0
 808cc08:  mov edx, DWORD PTR [ebp+0x10]
 808cc0b:  mov eax, DWORD PTR [edx]
 808cc0d:  cmp eax, 0x1
 808cc10:  jbe 808ceb8
 808cc16:  mov DWORD PTR [esp+0xc], eax
 808cc1a:  mov DWORD PTR [esp+0x8], edi
 808cc1e:  mov ecx, DWORD PTR [ebp+0xc]
 808cc21:  mov DWORD PTR [esp+0x4], ecx
 808cc25:  mov eax, DWORD PTR [ebp+0x8]
 808cc28:  mov DWORD PTR [esp], eax
 808cc2b:  call 808c5d0
 808cc30:  mov ecx, DWORD PTR [ebp+0x8]
 808cc33:  lea edx, [edi*4]
 808cc3a:  mov DWORD PTR [ebp-0x20], edx
 808cc3d:  add ecx, edx
 808cc3f:  cmp edi, 0x1
 808cc42:  mov DWORD PTR [ebp-0x1c], ecx
 808cc45:  mov DWORD PTR [ecx], eax
 808cc47:  jle 808c898
 808cc4d:  mov esi, DWORD PTR [ebp+0x8]
 808cc50:  mov ebx, 0x1
 808cc55:  add esi, 0x4
 808cc58:  jmp 808cc7c
 808cc5a:  lea esi, [esi]
 808cc60:  je 808cf38
 808cc66:  xor eax, eax
 808cc68:  mov edx, DWORD PTR [ebp-0x1c]
 808cc6b:  mov DWORD PTR [edx+ebx*4], eax
 808cc6e:  add ebx, 0x1
 808cc71:  cmp edi, ebx
 808cc73:  jle 808c898
 808cc79:  add esi, 0x4
 808cc7c:  mov edx, DWORD PTR [ebp+0x10]
 808cc7f:  mov eax, DWORD PTR [edx+ebx*4]
 808cc82:  cmp eax, 0x1
 808cc85:  jbe 808cc60
 808cc87:  mov DWORD PTR [esp+0xc], eax
 808cc8b:  mov DWORD PTR [esp+0x8], edi
 808cc8f:  mov eax, DWORD PTR [ebp+0xc]
 808cc92:  mov DWORD PTR [esp], esi
 808cc95:  mov DWORD PTR [esp+0x4], eax
 808cc99:  call 80992d0
 808cc9e:  jmp 808cc68
 808cca0:  mov edx, DWORD PTR [ebp+0x14]
 808cca3:  mov ecx, DWORD PTR [ebp+0x18]
 808cca6:  mov DWORD PTR [esp+0xc], esi
 808ccaa:  lea eax, [ecx+edx*4]
 808ccad:  mov DWORD PTR [esp+0x10], eax
 808ccb1:  mov eax, DWORD PTR [ebp-0x38]
 808ccb4:  mov DWORD PTR [esp+0x8], eax
 808ccb8:  mov edx, DWORD PTR [ebp+0x8]
 808ccbb:  mov DWORD PTR [esp], ecx
 808ccbe:  mov DWORD PTR [esp+0x4], edx
 808ccc2:  call 808c840
 808ccc7:  mov eax, DWORD PTR [ebp+0x18]
 808ccca:  mov ecx, DWORD PTR [ebp-0x18]
 808cccd:  lea ecx, [eax+ecx]
 808ccd0:  mov DWORD PTR [ebp-0x3c], ecx
 808ccd3:  mov edx, DWORD PTR [ebp+0x8]
 808ccd6:  mov eax, DWORD PTR [ebp+0x14]
 808ccd9:  lea ecx, [edx+esi*4]
 808ccdc:  lea ebx, [edx+eax*4]
 808ccdf:  xor edx, edx
 808cce1:  lea esi, [esi]
 808cce8:  mov eax, DWORD PTR [ebx]
 808ccea:  add edx, 0x1
 808cced:  add ebx, 0x4
 808ccf0:  mov DWORD PTR [ecx], eax
 808ccf2:  add ecx, 0x4
 808ccf5:  cmp esi, edx
 808ccf7:  jg 808cce8
 808ccf9:  jmp 808ca78
 808ccfe:  xchg ax, ax
 808cd00:  mov eax, DWORD PTR [ebp+0x14]
 808cd03:  mov DWORD PTR [esp+0xc], eax
 808cd07:  mov edx, DWORD PTR [ebp+0x18]
 808cd0a:  mov DWORD PTR [esp+0x8], edx
 808cd0e:  mov ecx, DWORD PTR [ebp-0x38]
 808cd11:  mov DWORD PTR [esp+0x4], ecx
 808cd15:  mov DWORD PTR [esp], ecx
 808cd18:  call 8099240
 808cd1d:  add eax, ebx
 808cd1f:  cmp esi, 0x1f
 808cd22:  mov DWORD PTR [ebp-0x2c], eax
 808cd25:  jle 808cadd
 808cd2b:  mov eax, DWORD PTR [ebp+0x18]
 808cd2e:  mov DWORD PTR [esp+0xc], esi
 808cd32:  add eax, edi
 808cd34:  mov DWORD PTR [esp+0x10], eax
 808cd38:  mov eax, DWORD PTR [ebp+0x10]
 808cd3b:  mov DWORD PTR [esp+0x8], eax
 808cd3f:  mov edx, DWORD PTR [ebp+0xc]
 808cd42:  mov DWORD PTR [esp+0x4], edx
 808cd46:  mov ecx, DWORD PTR [ebp+0x18]
 808cd49:  mov DWORD PTR [esp], ecx
 808cd4c:  call 808c840
 808cd51:  mov eax, DWORD PTR [ebp+0x14]
 808cd54:  mov DWORD PTR [esp+0xc], eax
 808cd58:  mov edx, DWORD PTR [ebp+0x18]
 808cd5b:  mov DWORD PTR [esp+0x8], edx
 808cd5f:  mov ecx, DWORD PTR [ebp-0x38]
 808cd62:  mov DWORD PTR [esp+0x4], ecx
 808cd66:  mov DWORD PTR [esp], ecx
 808cd69:  call 8099240
 808cd6e:  add eax, DWORD PTR [ebp-0x2c]
 808cd71:  je 808cd8b
 808cd73:  mov ecx, DWORD PTR [ebp-0x34]
 808cd76:  mov edx, DWORD PTR [ecx]
 808cd78:  mov ebx, ecx
 808cd7a:  add ebx, 0x4
 808cd7d:  add eax, edx
 808cd7f:  cmp edx, eax
 808cd81:  mov DWORD PTR [ecx], eax
 808cd83:  mov ecx, esi
 808cd85:  ja 808ce38
 808cd8b:  xor edx, edx
 808cd8d:  test esi, esi
 808cd8f:  jle 808cdab
 808cd91:  lea esi, [esi]
 808cd98:  mov ecx, DWORD PTR [ebp+0x18]
 808cd9b:  mov eax, DWORD PTR [ecx+edx*4]
 808cd9e:  mov ecx, DWORD PTR [ebp+0x8]
 808cda1:  mov DWORD PTR [ecx+edx*4], eax
 808cda4:  add edx, 0x1
 808cda7:  cmp esi, edx
 808cda9:  jg 808cd98
 808cdab:  mov DWORD PTR [esp+0xc], esi
 808cdaf:  mov eax, DWORD PTR [ebp-0x3c]
 808cdb2:  mov DWORD PTR [esp+0x8], eax
 808cdb6:  mov edx, DWORD PTR [ebp-0x38]
 808cdb9:  mov DWORD PTR [esp+0x4], edx
 808cdbd:  mov DWORD PTR [esp], edx
 808cdc0:  call 8099240
 808cdc5:  test eax, eax
 808cdc7:  je 808c8f3
 808cdcd:  mov ecx, DWORD PTR [ebp-0x30]
 808cdd0:  mov edx, DWORD PTR [ecx]
 808cdd2:  mov ebx, ecx
 808cdd4:  add ebx, 0x4
 808cdd7:  lea eax, [edx+0x1]
 808cdda:  cmp edx, eax
 808cddc:  mov DWORD PTR [ecx], eax
 808cdde:  mov ecx, ebx
 808cde0:  jbe 808ce03
 808cde2:  lea esi, [esi]
 808cde8:  sub DWORD PTR [ebp+0x14], 0x1
 808cdec:  je 808c8f3
 808cdf2:  mov eax, DWORD PTR [ebx]
 808cdf4:  add ebx, 0x4
 808cdf7:  add eax, 0x1
 808cdfa:  mov DWORD PTR [ecx], eax
 808cdfc:  add ecx, 0x4
 808cdff:  test eax, eax
 808ce01:  je 808cde8
 808ce03:  cmp ecx, ebx
 808ce05:  je 808c8f3
 808ce0b:  mov esi, DWORD PTR [ebp+0x14]
 808ce0e:  sub esi, 0x1
 808ce11:  test esi, esi
 808ce13:  jle 808c8f3
 808ce19:  xor edx, edx
 808ce1b:  nop
 808ce1c:  lea esi, [esi]
 808ce20:  mov eax, DWORD PTR [ebx+edx*4]
 808ce23:  mov DWORD PTR [ecx+edx*4], eax
 808ce26:  add edx, 0x1
 808ce29:  cmp esi, edx
 808ce2b:  jg 808ce20
 808ce2d:  add esp, 0x44
 808ce30:  pop ebx
 808ce31:  pop esi
 808ce32:  pop edi
 808ce33:  pop ebp
 808ce34:  ret
 808ce35:  lea esi, [esi]
 808ce38:  sub ecx, 0x1
 808ce3b:  je 808cd8b
 808ce41:  mov eax, DWORD PTR [ebx]
 808ce43:  add ebx, 0x4
 808ce46:  add eax, 0x1
 808ce49:  test eax, eax
 808ce4b:  mov DWORD PTR [ebx-0x4], eax
 808ce4e:  je 808ce38
 808ce50:  jmp 808cd8b
 808ce55:  lea esi, [esi]
 808ce58:  je 808cfeb
 808ce5e:  xor eax, eax
 808ce60:  test esi, esi
 808ce62:  lea esi, [esi]
 808ce68:  jle 808ce81
 808ce6a:  lea esi, [esi]
 808ce70:  mov edx, DWORD PTR [ebp+0x18]
 808ce73:  mov DWORD PTR [edx+eax*4], 0x0
 808ce7a:  add eax, 0x1
 808ce7d:  cmp esi, eax
 808ce7f:  jg 808ce70
 808ce81:  xor eax, eax
 808ce83:  jmp 808ca08
 808ce88:  je 808d05a
 808ce8e:  xor eax, eax
 808ce90:  test esi, esi
 808ce92:  lea esi, [esi]
 808ce98:  jle 808ceae
 808ce9a:  lea esi, [esi]
 808cea0:  mov DWORD PTR [ebx+eax*4], 0x0
 808cea7:  add eax, 0x1
 808ceaa:  cmp esi, eax
 808ceac:  jg 808cea0
 808ceae:  xor eax, eax
 808ceb0:  jmp 808cba8
 808ceb5:  lea esi, [esi]
 808ceb8:  je 808d03a
 808cebe:  xor eax, eax
 808cec0:  test edi, edi
 808cec2:  lea esi, [esi]
 808cec8:  jle 808cee1
 808ceca:  lea esi, [esi]
 808ced0:  mov edx, DWORD PTR [ebp+0x8]
 808ced3:  mov DWORD PTR [edx+eax*4], 0x0
 808ceda:  add eax, 0x1
 808cedd:  cmp edi, eax
 808cedf:  jg 808ced0
 808cee1:  xor eax, eax
 808cee3:  jmp 808cc30
 808cee8:  je 808d012
 808ceee:  xor eax, eax
 808cef0:  test esi, esi
 808cef2:  lea esi, [esi]
 808cef8:  jle 808cf11
 808cefa:  lea esi, [esi]
 808cf00:  mov edx, DWORD PTR [ebp+0x18]
 808cf03:  mov DWORD PTR [edx+eax*4], 0x0
 808cf0a:  add eax, 0x1
 808cf0d:  cmp esi, eax
 808cf0f:  jg 808cf00
 808cf11:  xor eax, eax
 808cf13:  jmp 808cb05
 808cf18:  mov DWORD PTR [esp+0xc], esi
 808cf1c:  mov eax, DWORD PTR [ebp-0x14]
 808cf1f:  mov DWORD PTR [esp+0x4], edi
 808cf23:  mov DWORD PTR [esp], edi
 808cf26:  mov DWORD PTR [esp+0x8], eax
 808cf2a:  call 8099240
 808cf2f:  jmp 808cbd0
 808cf34:  lea esi, [esi]
 808cf38:  mov DWORD PTR [esp+0xc], edi
 808cf3c:  mov ecx, DWORD PTR [ebp+0xc]
 808cf3f:  mov DWORD PTR [esp+0x4], esi
 808cf43:  mov DWORD PTR [esp], esi
 808cf46:  mov DWORD PTR [esp+0x8], ecx
 808cf4a:  call 8099240
 808cf4f:  jmp 808cc68
 808cf54:  lea esi, [esi]
 808cf58:  mov DWORD PTR [esp+0xc], esi
 808cf5c:  mov eax, DWORD PTR [ebp+0xc]
 808cf5f:  mov DWORD PTR [esp+0x4], edi
 808cf63:  mov DWORD PTR [esp], edi
 808cf66:  mov DWORD PTR [esp+0x8], eax
 808cf6a:  call 8099240
 808cf6f:  jmp 808cb28
 808cf74:  lea esi, [esi]
 808cf78:  mov DWORD PTR [esp+0xc], esi
 808cf7c:  mov eax, DWORD PTR [ebp+0x8]
 808cf7f:  mov DWORD PTR [esp+0x4], edi
 808cf83:  mov DWORD PTR [esp], edi
 808cf86:  mov DWORD PTR [esp+0x8], eax
 808cf8a:  call 8099240
 808cf8f:  jmp 808ca30
 808cf94:  lea esi, [esi]
 808cf98:  mov edx, DWORD PTR [ebp+0x8]
 808cf9b:  add edx, DWORD PTR [ebp-0x18]
 808cf9e:  mov DWORD PTR [ebp-0x38], edx
 808cfa1:  mov DWORD PTR [esp+0xc], esi
 808cfa5:  mov ecx, DWORD PTR [ebp-0x24]
 808cfa8:  mov DWORD PTR [esp+0x8], ecx
 808cfac:  mov eax, DWORD PTR [ebp+0x10]
 808cfaf:  mov DWORD PTR [esp], edx
 808cfb2:  mov DWORD PTR [esp+0x4], eax
 808cfb6:  call 808da20
 808cfbb:  jmp 808c9d7
 808cfc0:  mov DWORD PTR [esp+0xc], esi
 808cfc4:  mov ecx, DWORD PTR [ebp-0x14]
 808cfc7:  xor ebx, ebx
 808cfc9:  mov DWORD PTR [esp+0x8], ecx
 808cfcd:  mov eax, DWORD PTR [ebp+0xc]
 808cfd0:  mov DWORD PTR [esp+0x4], eax
 808cfd4:  mov edx, DWORD PTR [ebp+0x8]
 808cfd7:  mov DWORD PTR [esp], edx
 808cfda:  call 808da20
 808cfdf:  mov DWORD PTR [ebp-0x28], 0x1
 808cfe6:  jmp 808c993
 808cfeb:  test esi, esi
 808cfed:  jle 808d07c
 808cff3:  xor edx, edx
 808cff5:  lea esi, [esi]
 808cff8:  mov ecx, DWORD PTR [ebp+0x8]
 808cffb:  mov eax, DWORD PTR [ecx+edx*4]
 808cffe:  mov ecx, DWORD PTR [ebp+0x18]
 808d001:  mov DWORD PTR [ecx+edx*4], eax
 808d004:  add edx, 0x1
 808d007:  cmp esi, edx
 808d009:  jg 808cff8
 808d00b:  xor eax, eax
 808d00d:  jmp 808ca08
 808d012:  test esi, esi
 808d014:  jle 808d0a0
 808d01a:  xor edx, edx
 808d01c:  lea esi, [esi]
 808d020:  mov ecx, DWORD PTR [ebp+0xc]
 808d023:  mov eax, DWORD PTR [ecx+edx*4]
 808d026:  mov ecx, DWORD PTR [ebp+0x18]
 808d029:  mov DWORD PTR [ecx+edx*4], eax
 808d02c:  add edx, 0x1
 808d02f:  cmp esi, edx
 808d031:  jg 808d020
 808d033:  xor eax, eax
 808d035:  jmp 808cb05
 808d03a:  test edi, edi
 808d03c:  jle 808d0b2
 808d03e:  xor edx, edx
 808d040:  mov ecx, DWORD PTR [ebp+0xc]
 808d043:  mov eax, DWORD PTR [ecx+edx*4]
 808d046:  mov ecx, DWORD PTR [ebp+0x8]
 808d049:  mov DWORD PTR [ecx+edx*4], eax
 808d04c:  add edx, 0x1
 808d04f:  cmp edi, edx
 808d051:  jg 808d040
 808d053:  xor eax, eax
 808d055:  jmp 808cc30
 808d05a:  test esi, esi
 808d05c:  jle 808d094
 808d05e:  mov ecx, DWORD PTR [ebp-0x14]
 808d061:  xor edx, edx
 808d063:  nop
 808d064:  lea esi, [esi]
 808d068:  mov eax, DWORD PTR [ecx+edx*4]
 808d06b:  mov DWORD PTR [ebx+edx*4], eax
 808d06e:  add edx, 0x1
 808d071:  cmp esi, edx
 808d073:  jg 808d068
 808d075:  xor eax, eax
 808d077:  jmp 808cba8
 808d07c:  mov eax, DWORD PTR [ebp+0x18]
 808d07f:  mov ecx, DWORD PTR [ebp-0x18]
 808d082:  lea edx, [eax+ecx]
 808d085:  mov DWORD PTR [eax+ecx], 0x0
 808d08c:  mov DWORD PTR [ebp-0x3c], edx
 808d08f:  jmp 808ca78
 808d094:  mov DWORD PTR [ebx+esi*4], 0x0
 808d09b:  jmp 808c94c
 808d0a0:  mov eax, DWORD PTR [ebp+0x18]
 808d0a3:  mov ecx, DWORD PTR [ebp-0x18]
 808d0a6:  mov DWORD PTR [eax+ecx], 0x0
 808d0ad:  jmp 808cd51
 808d0b2:  mov edx, DWORD PTR [ebp+0x8]
 808d0b5:  lea eax, [edi*4]
 808d0bc:  mov DWORD PTR [ebp-0x20], eax
 808d0bf:  add edx, eax
 808d0c1:  mov DWORD PTR [ebp-0x1c], edx
 808d0c4:  mov DWORD PTR [edx], 0x0
 808d0ca:  jmp 808c898
 808d0cf:  nop

0808d0d0 <__mpn_impn_sqr_n>:
 808d0d0:  push ebp
 808d0d1:  mov ebp, esp
 808d0d3:  push edi
 808d0d4:  push esi
 808d0d5:  push ebx
 808d0d6:  sub esp, 0x34
 808d0d9:  test BYTE PTR [ebp+0x10], 0x1
 808d0dd:  je 808d178
 808d0e3:  mov esi, DWORD PTR [ebp+0x10]
 808d0e6:  sub esi, 0x1
 808d0e9:  cmp esi, 0x1f
 808d0ec:  jle 808d3e0
 808d0f2:  mov eax, DWORD PTR [ebp+0x14]
 808d0f5:  mov DWORD PTR [esp+0x8], esi
 808d0f9:  mov DWORD PTR [esp+0xc], eax
 808d0fd:  mov edx, DWORD PTR [ebp+0xc]
 808d100:  mov DWORD PTR [esp+0x4], edx
 808d104:  mov ecx, DWORD PTR [ebp+0x8]
 808d107:  mov DWORD PTR [esp], ecx
 808d10a:  call 808d0d0
 808d10f:  mov edi, DWORD PTR [ebp+0x8]
 808d112:  lea eax, [esi*4]
 808d119:  mov DWORD PTR [ebp-0x18], eax
 808d11c:  add edi, eax
 808d11e:  mov ebx, DWORD PTR [ebp+0xc]
 808d121:  add ebx, DWORD PTR [ebp-0x18]
 808d124:  mov eax, DWORD PTR [ebx]
 808d126:  mov DWORD PTR [esp+0x8], esi
 808d12a:  mov DWORD PTR [esp+0xc], eax
 808d12e:  mov edx, DWORD PTR [ebp+0xc]
 808d131:  mov DWORD PTR [esp], edi
 808d134:  mov DWORD PTR [esp+0x4], edx
 808d138:  call 80992d0
 808d13d:  mov ecx, DWORD PTR [ebp+0x8]
 808d140:  mov DWORD PTR [ecx+esi*8], eax
 808d143:  mov eax, DWORD PTR [ebx]
 808d145:  mov DWORD PTR [esp+0xc], eax
 808d149:  mov eax, DWORD PTR [ebp+0x10]
 808d14c:  mov DWORD PTR [esp+0x8], eax
 808d150:  mov edx, DWORD PTR [ebp+0xc]
 808d153:  mov DWORD PTR [esp], edi
 808d156:  mov DWORD PTR [esp+0x4], edx
 808d15a:  call 80992d0
 808d15f:  mov ecx, DWORD PTR [ebp+0x10]
 808d162:  lea edx, [esi+ecx]
 808d165:  mov ecx, DWORD PTR [ebp+0x8]
 808d168:  mov DWORD PTR [ecx+edx*4], eax
 808d16b:  add esp, 0x34
 808d16e:  pop ebx
 808d16f:  pop esi
 808d170:  pop edi
 808d171:  pop ebp
 808d172:  ret
 808d173:  nop
 808d174:  lea esi, [esi]
 808d178:  mov esi, DWORD PTR [ebp+0x10]
 808d17b:  sar esi, 1
 808d17d:  cmp esi, 0x1f
 808d180:  jle 808d348
 808d186:  mov edi, DWORD PTR [ebp+0xc]
 808d189:  lea ecx, [esi*4]
 808d190:  mov eax, DWORD PTR [ebp+0x14]
 808d193:  mov DWORD PTR [ebp-0x14], ecx
 808d196:  mov DWORD PTR [esp+0x8], esi
 808d19a:  add edi, ecx
 808d19c:  mov DWORD PTR [esp+0xc], eax
 808d1a0:  mov DWORD PTR [esp+0x4], edi
 808d1a4:  mov edx, DWORD PTR [ebp+0x10]
 808d1a7:  mov ecx, DWORD PTR [ebp+0x8]
 808d1aa:  lea eax, [ecx+edx*4]
 808d1ad:  mov DWORD PTR [esp], eax
 808d1b0:  call 808d0d0
 808d1b5:  mov DWORD PTR [esp+0x8], esi
 808d1b9:  mov eax, DWORD PTR [ebp+0xc]
 808d1bc:  mov DWORD PTR [esp], edi
 808d1bf:  mov DWORD PTR [esp+0x4], eax
 808d1c3:  call 808bcb0
 808d1c8:  test eax, eax
 808d1ca:  js 808d770
 808d1d0:  mov DWORD PTR [esp+0xc], esi
 808d1d4:  mov edx, DWORD PTR [ebp+0xc]
 808d1d7:  mov DWORD PTR [esp+0x4], edi
 808d1db:  mov DWORD PTR [esp+0x8], edx
 808d1df:  mov ecx, DWORD PTR [ebp+0x8]
 808d1e2:  mov DWORD PTR [esp], ecx
 808d1e5:  call 808da20
 808d1ea:  cmp esi, 0x1f
 808d1ed:  jg 808d468
 808d1f3:  mov ecx, DWORD PTR [ebp+0x8]
 808d1f6:  mov eax, DWORD PTR [ecx]
 808d1f8:  cmp eax, 0x1
 808d1fb:  jbe 808d660
 808d201:  mov DWORD PTR [esp+0xc], eax
 808d205:  mov DWORD PTR [esp+0x8], esi
 808d209:  mov DWORD PTR [esp+0x4], ecx
 808d20d:  mov eax, DWORD PTR [ebp+0x14]
 808d210:  mov DWORD PTR [esp], eax
 808d213:  call 808c5d0
 808d218:  mov edi, DWORD PTR [ebp+0x14]
 808d21b:  add edi, DWORD PTR [ebp-0x14]
 808d21e:  cmp esi, 0x1
 808d221:  mov DWORD PTR [edi], eax
 808d223:  jle 808d271
 808d225:  mov ebx, 0x1
 808d22a:  jmp 808d242
 808d22c:  lea esi, [esi]
 808d230:  je 808d6f0
 808d236:  xor eax, eax
 808d238:  mov DWORD PTR [edi+ebx*4], eax
 808d23b:  add ebx, 0x1
 808d23e:  cmp esi, ebx
 808d240:  jle 808d271
 808d242:  mov ecx, DWORD PTR [ebp+0x14]
 808d245:  lea edx, [ecx+ebx*4]
 808d248:  mov ecx, DWORD PTR [ebp+0x8]
 808d24b:  mov eax, DWORD PTR [ecx+ebx*4]
 808d24e:  cmp eax, 0x1
 808d251:  jbe 808d230
 808d253:  mov DWORD PTR [esp+0xc], eax
 808d257:  mov DWORD PTR [esp+0x8], esi
 808d25b:  mov DWORD PTR [esp+0x4], ecx
 808d25f:  mov DWORD PTR [esp], edx
 808d262:  call 80992d0
 808d267:  mov DWORD PTR [edi+ebx*4], eax
 808d26a:  add ebx, 0x1
 808d26d:  cmp esi, ebx
 808d26f:  jg 808d242
 808d271:  test esi, esi
 808d273:  jg 808d491
 808d279:  mov eax, DWORD PTR [ebp+0x10]
 808d27c:  mov edx, DWORD PTR [ebp+0x8]
 808d27f:  mov ecx, DWORD PTR [ebp+0x10]
 808d282:  add eax, esi
 808d284:  lea eax, [edx+eax*4]
 808d287:  lea ecx, [edx+ecx*4]
 808d28a:  mov DWORD PTR [ebp-0x28], ecx
 808d28d:  mov DWORD PTR [ebp-0x2c], eax
 808d290:  mov DWORD PTR [esp+0x4], ecx
 808d294:  mov DWORD PTR [esp], ecx
 808d297:  mov DWORD PTR [esp+0xc], esi
 808d29b:  mov DWORD PTR [esp+0x8], eax
 808d29f:  call 8099240
 808d2a4:  mov edx, DWORD PTR [ebp+0x10]
 808d2a7:  mov DWORD PTR [ebp-0x1c], eax
 808d2aa:  mov eax, DWORD PTR [ebp+0x8]
 808d2ad:  add eax, DWORD PTR [ebp-0x14]
 808d2b0:  mov DWORD PTR [ebp-0x24], eax
 808d2b3:  mov DWORD PTR [esp+0xc], edx
 808d2b7:  mov ecx, DWORD PTR [ebp+0x14]
 808d2ba:  mov DWORD PTR [esp+0x4], eax
 808d2be:  mov DWORD PTR [esp], eax
 808d2c1:  mov DWORD PTR [esp+0x8], ecx
 808d2c5:  call 808da20
 808d2ca:  mov DWORD PTR [ebp-0x20], eax
 808d2cd:  lea esi, [esi]
 808d2d0:  mov edx, DWORD PTR [ebp+0xc]
 808d2d3:  mov eax, DWORD PTR [edx]
 808d2d5:  cmp eax, 0x1
 808d2d8:  jbe 808d630
 808d2de:  mov DWORD PTR [esp+0xc], eax
 808d2e2:  mov DWORD PTR [esp+0x8], esi
 808d2e6:  mov DWORD PTR [esp+0x4], edx
 808d2ea:  mov eax, DWORD PTR [ebp+0x14]
 808d2ed:  mov DWORD PTR [esp], eax
 808d2f0:  call 808c5d0
 808d2f5:  cmp esi, 0x1
 808d2f8:  mov DWORD PTR [edi], eax
 808d2fa:  jle 808d52f
 808d300:  mov ebx, 0x1
 808d305:  jmp 808d31e
 808d307:  nop
 808d308:  je 808d750
 808d30e:  xor eax, eax
 808d310:  mov DWORD PTR [edi+ebx*4], eax
 808d313:  add ebx, 0x1
 808d316:  cmp esi, ebx
 808d318:  jle 808d52f
 808d31e:  mov ecx, DWORD PTR [ebp+0x14]
 808d321:  lea edx, [ecx+ebx*4]
 808d324:  mov ecx, DWORD PTR [ebp+0xc]
 808d327:  mov eax, DWORD PTR [ecx+ebx*4]
 808d32a:  cmp eax, 0x1
 808d32d:  jbe 808d308
 808d32f:  mov DWORD PTR [esp+0xc], eax
 808d333:  mov DWORD PTR [esp+0x8], esi
 808d337:  mov DWORD PTR [esp+0x4], ecx
 808d33b:  mov DWORD PTR [esp], edx
 808d33e:  call 80992d0
 808d343:  jmp 808d310
 808d345:  lea esi, [esi]
 808d348:  mov edi, DWORD PTR [ebp+0xc]
 808d34b:  lea eax, [esi*4]
 808d352:  mov DWORD PTR [ebp-0x14], eax
 808d355:  mov edx, DWORD PTR [ebp+0x10]
 808d358:  mov ecx, DWORD PTR [ebp+0x8]
 808d35b:  add edi, eax
 808d35d:  mov eax, DWORD PTR [edi]
 808d35f:  lea edx, [ecx+edx*4]
 808d362:  mov DWORD PTR [ebp-0x30], edx
 808d365:  cmp eax, 0x1
 808d368:  jbe 808d690
 808d36e:  mov DWORD PTR [esp+0xc], eax
 808d372:  mov DWORD PTR [esp+0x8], esi
 808d376:  mov DWORD PTR [esp+0x4], edi
 808d37a:  mov DWORD PTR [esp], edx
 808d37d:  call 808c5d0
 808d382:  mov edx, DWORD PTR [ebp-0x30]
 808d385:  add edx, DWORD PTR [ebp-0x14]
 808d388:  cmp esi, 0x1
 808d38b:  mov DWORD PTR [ebp-0x10], edx
 808d38e:  mov DWORD PTR [edx], eax
 808d390:  jle 808d1b5
 808d396:  mov ebx, 0x1
 808d39b:  jmp 808d3b9
 808d39d:  lea esi, [esi]
 808d3a0:  je 808d710
 808d3a6:  xor eax, eax
 808d3a8:  mov edx, DWORD PTR [ebp-0x10]
 808d3ab:  mov DWORD PTR [edx+ebx*4], eax
 808d3ae:  add ebx, 0x1
 808d3b1:  cmp esi, ebx
 808d3b3:  jle 808d1b5
 808d3b9:  mov eax, DWORD PTR [edi+ebx*4]
 808d3bc:  mov ecx, DWORD PTR [ebp-0x30]
 808d3bf:  cmp eax, 0x1
 808d3c2:  lea edx, [ecx+ebx*4]
 808d3c5:  jbe 808d3a0
 808d3c7:  mov DWORD PTR [esp+0xc], eax
 808d3cb:  mov DWORD PTR [esp+0x8], esi
 808d3cf:  mov DWORD PTR [esp+0x4], edi
 808d3d3:  mov DWORD PTR [esp], edx
 808d3d6:  call 80992d0
 808d3db:  jmp 808d3a8
 808d3dd:  lea esi, [esi]
 808d3e0:  mov edx, DWORD PTR [ebp+0xc]
 808d3e3:  mov eax, DWORD PTR [edx]
 808d3e5:  cmp eax, 0x1
 808d3e8:  jbe 808d6c0
 808d3ee:  mov DWORD PTR [esp+0xc], eax
 808d3f2:  mov DWORD PTR [esp+0x8], esi
 808d3f6:  mov DWORD PTR [esp+0x4], edx
 808d3fa:  mov eax, DWORD PTR [ebp+0x8]
 808d3fd:  mov DWORD PTR [esp], eax
 808d400:  call 808c5d0
 808d405:  mov edi, DWORD PTR [ebp+0x8]
 808d408:  lea edx, [esi*4]
 808d40f:  mov DWORD PTR [ebp-0x18], edx
 808d412:  add edi, edx
 808d414:  cmp esi, 0x1
 808d417:  mov DWORD PTR [edi], eax
 808d419:  jle 808d11e
 808d41f:  mov ebx, 0x1
 808d424:  jmp 808d43e
 808d426:  xchg ax, ax
 808d428:  je 808d730
 808d42e:  xor eax, eax
 808d430:  mov DWORD PTR [edi+ebx*4], eax
 808d433:  add ebx, 0x1
 808d436:  cmp esi, ebx
 808d438:  jle 808d11e
 808d43e:  mov ecx, DWORD PTR [ebp+0x8]
 808d441:  lea edx, [ecx+ebx*4]
 808d444:  mov ecx, DWORD PTR [ebp+0xc]
 808d447:  mov eax, DWORD PTR [ecx+ebx*4]
 808d44a:  cmp eax, 0x1
 808d44d:  jbe 808d428
 808d44f:  mov DWORD PTR [esp+0xc], eax
 808d453:  mov DWORD PTR [esp+0x8], esi
 808d457:  mov DWORD PTR [esp+0x4], ecx
 808d45b:  mov DWORD PTR [esp], edx
 808d45e:  call 80992d0
 808d463:  jmp 808d430
 808d465:  lea esi, [esi]
 808d468:  mov edx, DWORD PTR [ebp+0x10]
 808d46b:  mov ecx, DWORD PTR [ebp+0x14]
 808d46e:  mov DWORD PTR [esp+0x8], esi
 808d472:  lea eax, [ecx+edx*4]
 808d475:  mov DWORD PTR [esp+0xc], eax
 808d479:  mov eax, DWORD PTR [ebp+0x8]
 808d47c:  mov DWORD PTR [esp], ecx
 808d47f:  mov DWORD PTR [esp+0x4], eax
 808d483:  call 808d0d0
 808d488:  mov ecx, DWORD PTR [ebp+0x14]
 808d48b:  mov edx, DWORD PTR [ebp-0x14]
 808d48e:  lea edi, [ecx+edx]
 808d491:  mov edx, DWORD PTR [ebp+0x8]
 808d494:  mov eax, DWORD PTR [ebp+0x10]
 808d497:  lea ecx, [edx+esi*4]
 808d49a:  lea ebx, [edx+eax*4]
 808d49d:  xor edx, edx
 808d49f:  nop
 808d4a0:  mov eax, DWORD PTR [ebx]
 808d4a2:  add edx, 0x1
 808d4a5:  add ebx, 0x4
 808d4a8:  mov DWORD PTR [ecx], eax
 808d4aa:  add ecx, 0x4
 808d4ad:  cmp esi, edx
 808d4af:  jg 808d4a0
 808d4b1:  mov eax, DWORD PTR [ebp+0x10]
 808d4b4:  mov ebx, DWORD PTR [ebp+0x10]
 808d4b7:  mov ecx, DWORD PTR [ebp+0x8]
 808d4ba:  add eax, esi
 808d4bc:  shl ebx, 0x2
 808d4bf:  lea eax, [ecx+eax*4]
 808d4c2:  add ecx, ebx
 808d4c4:  mov DWORD PTR [ebp-0x28], ecx
 808d4c7:  mov DWORD PTR [ebp-0x2c], eax
 808d4ca:  mov DWORD PTR [esp+0x4], ecx
 808d4ce:  mov DWORD PTR [esp], ecx
 808d4d1:  mov DWORD PTR [esp+0xc], esi
 808d4d5:  mov DWORD PTR [esp+0x8], eax
 808d4d9:  call 8099240
 808d4de:  mov edx, DWORD PTR [ebp+0x10]
 808d4e1:  mov DWORD PTR [ebp-0x1c], eax
 808d4e4:  mov eax, DWORD PTR [ebp+0x8]
 808d4e7:  add eax, DWORD PTR [ebp-0x14]
 808d4ea:  mov DWORD PTR [ebp-0x24], eax
 808d4ed:  mov DWORD PTR [esp+0xc], edx
 808d4f1:  mov ecx, DWORD PTR [ebp+0x14]
 808d4f4:  mov DWORD PTR [esp+0x4], eax
 808d4f8:  mov DWORD PTR [esp], eax
 808d4fb:  mov DWORD PTR [esp+0x8], ecx
 808d4ff:  call 808da20
 808d504:  cmp esi, 0x1f
 808d507:  mov DWORD PTR [ebp-0x20], eax
 808d50a:  jle 808d2d0
 808d510:  mov eax, DWORD PTR [ebp+0x14]
 808d513:  mov DWORD PTR [esp+0x8], esi
 808d517:  add eax, ebx
 808d519:  mov DWORD PTR [esp+0xc], eax
 808d51d:  mov eax, DWORD PTR [ebp+0xc]
 808d520:  mov DWORD PTR [esp+0x4], eax
 808d524:  mov edx, DWORD PTR [ebp+0x14]
 808d527:  mov DWORD PTR [esp], edx
 808d52a:  call 808d0d0
 808d52f:  mov ecx, DWORD PTR [ebp+0x10]
 808d532:  mov DWORD PTR [esp+0xc], ecx
 808d536:  mov eax, DWORD PTR [ebp+0x14]
 808d539:  mov DWORD PTR [esp+0x8], eax
 808d53d:  mov edx, DWORD PTR [ebp-0x24]
 808d540:  mov DWORD PTR [esp+0x4], edx
 808d544:  mov DWORD PTR [esp], edx
 808d547:  call 8099240
 808d54c:  mov ecx, DWORD PTR [ebp-0x20]
 808d54f:  sub DWORD PTR [ebp-0x1c], ecx
 808d552:  add eax, DWORD PTR [ebp-0x1c]
 808d555:  je 808d56f
 808d557:  mov ecx, DWORD PTR [ebp-0x2c]
 808d55a:  mov edx, DWORD PTR [ecx]
 808d55c:  mov ebx, ecx
 808d55e:  add ebx, 0x4
 808d561:  add eax, edx
 808d563:  cmp edx, eax
 808d565:  mov DWORD PTR [ecx], eax
 808d567:  mov ecx, esi
 808d569:  ja 808d610
 808d56f:  xor edx, edx
 808d571:  test esi, esi
 808d573:  jle 808d58b
 808d575:  lea esi, [esi]
 808d578:  mov ecx, DWORD PTR [ebp+0x14]
 808d57b:  mov eax, DWORD PTR [ecx+edx*4]
 808d57e:  mov ecx, DWORD PTR [ebp+0x8]
 808d581:  mov DWORD PTR [ecx+edx*4], eax
 808d584:  add edx, 0x1
 808d587:  cmp esi, edx
 808d589:  jg 808d578
 808d58b:  mov DWORD PTR [esp+0xc], esi
 808d58f:  mov DWORD PTR [esp+0x8], edi
 808d593:  mov eax, DWORD PTR [ebp-0x24]
 808d596:  mov DWORD PTR [esp+0x4], eax
 808d59a:  mov DWORD PTR [esp], eax
 808d59d:  call 8099240
 808d5a2:  test eax, eax
 808d5a4:  je 808d16b
 808d5aa:  mov ecx, DWORD PTR [ebp-0x28]
 808d5ad:  mov edx, DWORD PTR [ecx]
 808d5af:  mov ebx, ecx
 808d5b1:  add ebx, 0x4
 808d5b4:  lea eax, [edx+0x1]
 808d5b7:  cmp edx, eax
 808d5b9:  mov DWORD PTR [ecx], eax
 808d5bb:  mov ecx, ebx
 808d5bd:  jbe 808d5db
 808d5bf:  nop
 808d5c0:  sub DWORD PTR [ebp+0x10], 0x1
 808d5c4:  je 808d16b
 808d5ca:  mov eax, DWORD PTR [ebx]
 808d5cc:  add ebx, 0x4
 808d5cf:  add eax, 0x1
 808d5d2:  mov DWORD PTR [ecx], eax
 808d5d4:  add ecx, 0x4
 808d5d7:  test eax, eax
 808d5d9:  je 808d5c0
 808d5db:  cmp ecx, ebx
 808d5dd:  je 808d16b
 808d5e3:  mov esi, DWORD PTR [ebp+0x10]
 808d5e6:  sub esi, 0x1
 808d5e9:  test esi, esi
 808d5eb:  jle 808d16b
 808d5f1:  xor edx, edx
 808d5f3:  nop
 808d5f4:  lea esi, [esi]
 808d5f8:  mov eax, DWORD PTR [ebx+edx*4]
 808d5fb:  mov DWORD PTR [ecx+edx*4], eax
 808d5fe:  add edx, 0x1
 808d601:  cmp edx, esi
 808d603:  jl 808d5f8
 808d605:  add esp, 0x34
 808d608:  pop ebx
 808d609:  pop esi
 808d60a:  pop edi
 808d60b:  pop ebp
 808d60c:  ret
 808d60d:  lea esi, [esi]
 808d610:  sub ecx, 0x1
 808d613:  je 808d56f
 808d619:  mov eax, DWORD PTR [ebx]
 808d61b:  add ebx, 0x4
 808d61e:  add eax, 0x1
 808d621:  test eax, eax
 808d623:  mov DWORD PTR [ebx-0x4], eax
 808d626:  je 808d610
 808d628:  jmp 808d56f
 808d62d:  lea esi, [esi]
 808d630:  je 808d802
 808d636:  xor eax, eax
 808d638:  test esi, esi
 808d63a:  lea esi, [esi]
 808d640:  jle 808d659
 808d642:  lea esi, [esi]
 808d648:  mov edx, DWORD PTR [ebp+0x14]
 808d64b:  mov DWORD PTR [edx+eax*4], 0x0
 808d652:  add eax, 0x1
 808d655:  cmp esi, eax
 808d657:  jg 808d648
 808d659:  xor eax, eax
 808d65b:  jmp 808d2f5
 808d660:  je 808d7dc
 808d666:  xor eax, eax
 808d668:  test esi, esi
 808d66a:  lea esi, [esi]
 808d670:  jle 808d689
 808d672:  lea esi, [esi]
 808d678:  mov edx, DWORD PTR [ebp+0x14]
 808d67b:  mov DWORD PTR [edx+eax*4], 0x0
 808d682:  add eax, 0x1
 808d685:  cmp esi, eax
 808d687:  jg 808d678
 808d689:  xor eax, eax
 808d68b:  jmp 808d218
 808d690:  je 808d7ba
 808d696:  xor eax, eax
 808d698:  test esi, esi
 808d69a:  lea esi, [esi]
 808d6a0:  jle 808d6b9
 808d6a2:  lea esi, [esi]
 808d6a8:  mov edx, DWORD PTR [ebp-0x30]
 808d6ab:  mov DWORD PTR [edx+eax*4], 0x0
 808d6b2:  add eax, 0x1
 808d6b5:  cmp esi, eax
 808d6b7:  jg 808d6a8
 808d6b9:  xor eax, eax
 808d6bb:  jmp 808d382
 808d6c0:  je 808d78f
 808d6c6:  xor eax, eax
 808d6c8:  test esi, esi
 808d6ca:  lea esi, [esi]
 808d6d0:  jle 808d6e9
 808d6d2:  lea esi, [esi]
 808d6d8:  mov edx, DWORD PTR [ebp+0x8]
 808d6db:  mov DWORD PTR [edx+eax*4], 0x0
 808d6e2:  add eax, 0x1
 808d6e5:  cmp esi, eax
 808d6e7:  jg 808d6d8
 808d6e9:  xor eax, eax
 808d6eb:  jmp 808d405
 808d6f0:  mov DWORD PTR [esp+0xc], esi
 808d6f4:  mov eax, DWORD PTR [ebp+0x8]
 808d6f7:  mov DWORD PTR [esp+0x4], edx
 808d6fb:  mov DWORD PTR [esp], edx
 808d6fe:  mov DWORD PTR [esp+0x8], eax
 808d702:  call 8099240
 808d707:  jmp 808d238
 808d70c:  lea esi, [esi]
 808d710:  mov DWORD PTR [esp+0xc], esi
 808d714:  mov DWORD PTR [esp+0x8], edi
 808d718:  mov DWORD PTR [esp+0x4], edx
 808d71c:  mov DWORD PTR [esp], edx
 808d71f:  call 8099240
 808d724:  jmp 808d3a8
 808d729:  lea esi, [esi]
 808d730:  mov DWORD PTR [esp+0xc], esi
 808d734:  mov eax, DWORD PTR [ebp+0xc]
 808d737:  mov DWORD PTR [esp+0x4], edx
 808d73b:  mov DWORD PTR [esp], edx
 808d73e:  mov DWORD PTR [esp+0x8], eax
 808d742:  call 8099240
 808d747:  jmp 808d430
 808d74c:  lea esi, [esi]
 808d750:  mov DWORD PTR [esp+0xc], esi
 808d754:  mov eax, DWORD PTR [ebp+0xc]
 808d757:  mov DWORD PTR [esp+0x4], edx
 808d75b:  mov DWORD PTR [esp], edx
 808d75e:  mov DWORD PTR [esp+0x8], eax
 808d762:  call 8099240
 808d767:  jmp 808d310
 808d76c:  lea esi, [esi]
 808d770:  mov DWORD PTR [esp+0xc], esi
 808d774:  mov DWORD PTR [esp+0x8], edi
 808d778:  mov eax, DWORD PTR [ebp+0xc]
 808d77b:  mov DWORD PTR [esp+0x4], eax
 808d77f:  mov edx, DWORD PTR [ebp+0x8]
 808d782:  mov DWORD PTR [esp], edx
 808d785:  call 808da20
 808d78a:  jmp 808d1ea
 808d78f:  test esi, esi
 808d791:  jle 808d822
 808d797:  xor edx, edx
 808d799:  lea esi, [esi]
 808d7a0:  mov ecx, DWORD PTR [ebp+0xc]
 808d7a3:  mov eax, DWORD PTR [ecx+edx*4]
 808d7a6:  mov ecx, DWORD PTR [ebp+0x8]
 808d7a9:  mov DWORD PTR [ecx+edx*4], eax
 808d7ac:  add edx, 0x1
 808d7af:  cmp esi, edx
 808d7b1:  jg 808d7a0
 808d7b3:  xor eax, eax
 808d7b5:  jmp 808d405
 808d7ba:  test esi, esi
 808d7bc:  jle 808d84e
 808d7c2:  mov ecx, DWORD PTR [ebp-0x30]
 808d7c5:  xor edx, edx
 808d7c7:  nop
 808d7c8:  mov eax, DWORD PTR [edi+edx*4]
 808d7cb:  mov DWORD PTR [ecx+edx*4], eax
 808d7ce:  add edx, 0x1
 808d7d1:  cmp esi, edx
 808d7d3:  jg 808d7c8
 808d7d5:  xor eax, eax
 808d7d7:  jmp 808d382
 808d7dc:  test esi, esi
 808d7de:  jle 808d85d
 808d7e0:  xor edx, edx
 808d7e2:  lea esi, [esi]
 808d7e8:  mov ecx, DWORD PTR [ebp+0x8]
 808d7eb:  mov eax, DWORD PTR [ecx+edx*4]
 808d7ee:  mov ecx, DWORD PTR [ebp+0x14]
 808d7f1:  mov DWORD PTR [ecx+edx*4], eax
 808d7f4:  add edx, 0x1
 808d7f7:  cmp esi, edx
 808d7f9:  jg 808d7e8
 808d7fb:  xor eax, eax
 808d7fd:  jmp 808d218
 808d802:  test esi, esi
 808d804:  jle 808d83c
 808d806:  xor edx, edx
 808d808:  mov ecx, DWORD PTR [ebp+0xc]
 808d80b:  mov eax, DWORD PTR [ecx+edx*4]
 808d80e:  mov ecx, DWORD PTR [ebp+0x14]
 808d811:  mov DWORD PTR [ecx+edx*4], eax
 808d814:  add edx, 0x1
 808d817:  cmp esi, edx
 808d819:  jg 808d808
 808d81b:  xor eax, eax
 808d81d:  jmp 808d2f5
 808d822:  mov edi, DWORD PTR [ebp+0x8]
 808d825:  lea eax, [esi*4]
 808d82c:  mov DWORD PTR [ebp-0x18], eax
 808d82f:  add edi, eax
 808d831:  mov DWORD PTR [edi], 0x0
 808d837:  jmp 808d11e
 808d83c:  mov ecx, DWORD PTR [ebp+0x14]
 808d83f:  mov edx, DWORD PTR [ebp-0x14]
 808d842:  mov DWORD PTR [ecx+edx], 0x0
 808d849:  jmp 808d52f
 808d84e:  mov edx, DWORD PTR [ebp-0x30]
 808d851:  mov DWORD PTR [edx+esi*4], 0x0
 808d858:  jmp 808d1b5
 808d85d:  mov eax, DWORD PTR [ebp+0x14]
 808d860:  mov ecx, DWORD PTR [ebp-0x14]
 808d863:  mov DWORD PTR [eax+ecx], 0x0
 808d86a:  lea edi, [eax+ecx]
 808d86d:  jmp 808d279
 808d872:  lea esi, [esi]
 808d879:  lea edi, [edi]

0808d880 <__mpn_mul_n>:
 808d880:  push ebp
 808d881:  mov ebp, esp
 808d883:  push edi
 808d884:  push esi
 808d885:  push ebx
 808d886:  sub esp, 0x18
 808d889:  mov eax, DWORD PTR [ebp+0x10]
 808d88c:  cmp DWORD PTR [ebp+0xc], eax
 808d88f:  mov ebx, DWORD PTR [ebp+0x8]
 808d892:  mov edi, DWORD PTR [ebp+0x14]
 808d895:  je 808d998
 808d89b:  cmp edi, 0x1f
 808d89e:  jle 808d8d8
 808d8a0:  lea eax, [edi*8+0x10]
 808d8a7:  mov edx, DWORD PTR [ebp+0xc]
 808d8aa:  sub esp, eax
 808d8ac:  lea eax, [esp+0x23]
 808d8b0:  and eax, 0xf0
 808d8b3:  mov DWORD PTR [esp+0x10], eax
 808d8b7:  mov eax, DWORD PTR [ebp+0x10]
 808d8ba:  mov DWORD PTR [esp+0xc], edi
 808d8be:  mov DWORD PTR [esp+0x4], edx
 808d8c2:  mov DWORD PTR [esp], ebx
 808d8c5:  mov DWORD PTR [esp+0x8], eax
 808d8c9:  call 808c840
 808d8ce:  lea esp, [ebp-0xc]
 808d8d1:  pop ebx
 808d8d2:  pop esi
 808d8d3:  pop edi
 808d8d4:  pop ebp
 808d8d5:  ret
 808d8d6:  xchg ax, ax
 808d8d8:  mov edx, DWORD PTR [ebp+0x10]
 808d8db:  mov eax, DWORD PTR [edx]
 808d8dd:  cmp eax, 0x1
 808d8e0:  jbe 808d970
 808d8e6:  mov DWORD PTR [esp+0xc], eax
 808d8ea:  mov eax, DWORD PTR [ebp+0xc]
 808d8ed:  mov DWORD PTR [esp+0x8], edi
 808d8f1:  mov DWORD PTR [esp], ebx
 808d8f4:  mov DWORD PTR [esp+0x4], eax
 808d8f8:  call 808c5d0
 808d8fd:  lea edx, [ebx+edi*4]
 808d900:  cmp edi, 0x1
 808d903:  mov DWORD PTR [ebp-0x10], edx
 808d906:  mov DWORD PTR [edx], eax
 808d908:  jle 808d8ce
 808d90a:  lea esi, [ebx+0x4]
 808d90d:  mov ebx, 0x1
 808d912:  jmp 808d92c
 808d914:  lea esi, [esi]
 808d918:  je 808d950
 808d91a:  xor eax, eax
 808d91c:  mov ecx, DWORD PTR [ebp-0x10]
 808d91f:  mov DWORD PTR [ecx+ebx*4], eax
 808d922:  add ebx, 0x1
 808d925:  cmp edi, ebx
 808d927:  jle 808d8ce
 808d929:  add esi, 0x4
 808d92c:  mov ecx, DWORD PTR [ebp+0x10]
 808d92f:  mov eax, DWORD PTR [ecx+ebx*4]
 808d932:  cmp eax, 0x1
 808d935:  jbe 808d918
 808d937:  mov edx, DWORD PTR [ebp+0xc]
 808d93a:  mov DWORD PTR [esp+0xc], eax
 808d93e:  mov DWORD PTR [esp+0x8], edi
 808d942:  mov DWORD PTR [esp], esi
 808d945:  mov DWORD PTR [esp+0x4], edx
 808d949:  call 80992d0
 808d94e:  jmp 808d91c
 808d950:  mov eax, DWORD PTR [ebp+0xc]
 808d953:  mov DWORD PTR [esp+0xc], edi
 808d957:  mov DWORD PTR [esp+0x4], esi
 808d95b:  mov DWORD PTR [esp], esi
 808d95e:  mov DWORD PTR [esp+0x8], eax
 808d962:  call 8099240
 808d967:  jmp 808d91c
 808d969:  lea esi, [esi]
 808d970:  je 808d9e8
 808d972:  xor eax, eax
 808d974:  test edi, edi
 808d976:  xchg ax, ax
 808d978:  jle 808d98e
 808d97a:  lea esi, [esi]
 808d980:  mov DWORD PTR [ebx+eax*4], 0x0
 808d987:  add eax, 0x1
 808d98a:  cmp edi, eax
 808d98c:  jg 808d980
 808d98e:  xor eax, eax
 808d990:  jmp 808d8fd
 808d995:  lea esi, [esi]
 808d998:  cmp edi, 0x1f
 808d99b:  jg 808d9b8
 808d99d:  mov edx, DWORD PTR [ebp+0xc]
 808d9a0:  mov DWORD PTR [esp+0x8], edi
 808d9a4:  mov DWORD PTR [esp], ebx
 808d9a7:  mov DWORD PTR [esp+0x4], edx
 808d9ab:  call 808c610
 808d9b0:  jmp 808d8ce
 808d9b5:  lea esi, [esi]
 808d9b8:  lea eax, [edi*8+0x10]
 808d9bf:  mov ecx, DWORD PTR [ebp+0xc]
 808d9c2:  sub esp, eax
 808d9c4:  lea eax, [esp+0x23]
 808d9c8:  and eax, 0xf0
 808d9cb:  mov DWORD PTR [esp+0xc], eax
 808d9cf:  mov DWORD PTR [esp+0x8], edi
 808d9d3:  mov DWORD PTR [esp+0x4], ecx
 808d9d7:  mov DWORD PTR [esp], ebx
 808d9da:  call 808d0d0
 808d9df:  jmp 808d8ce
 808d9e4:  lea esi, [esi]
 808d9e8:  test edi, edi
 808d9ea:  jle 808da0c
 808d9ec:  mov ecx, DWORD PTR [ebp+0xc]
 808d9ef:  xor edx, edx
 808d9f1:  lea esi, [esi]
 808d9f8:  mov eax, DWORD PTR [ecx+edx*4]
 808d9fb:  mov DWORD PTR [ebx+edx*4], eax
 808d9fe:  add edx, 0x1
 808da01:  cmp edi, edx
 808da03:  jg 808d9f8
 808da05:  xor eax, eax
 808da07:  jmp 808d8fd
 808da0c:  mov DWORD PTR [ebx+edi*4], 0x0
 808da13:  jmp 808d8ce
 808da18:  nop
 808da19:  nop
 808da1a:  nop
 808da1b:  nop
 808da1c:  nop
 808da1d:  nop
 808da1e:  nop
 808da1f:  nop

0808da20 <__mpn_sub_n>:
 808da20:  push edi
 808da21:  push esi
 808da22:  mov edi, DWORD PTR [esp+0xc]
 808da26:  mov esi, DWORD PTR [esp+0x10]
 808da2a:  mov edx, DWORD PTR [esp+0x14]
 808da2e:  mov ecx, DWORD PTR [esp+0x18]
 808da32:  mov eax, ecx
 808da34:  shr ecx, 0x3
 808da37:  neg eax
 808da39:  and eax, 0x7
 808da3c:  je 808da58
 808da3e:  inc ecx
 808da3f:  shl eax, 0x2
 808da42:  sub edi, eax
 808da44:  sub esi, eax
 808da46:  sub edx, eax
 808da48:  shr eax, 0x2
 808da4b:  lea eax, [eax+eax*8+0x808da55]
 808da52:  jmp eax
 808da54:  lea esi, [esi]
 808da58:  mov eax, DWORD PTR [esi]
 808da5a:  sbb eax, DWORD PTR [edx]
 808da5c:  mov DWORD PTR [edi], eax
 808da5e:  mov eax, DWORD PTR [esi+0x4]
 808da61:  sbb eax, DWORD PTR [edx+0x4]
 808da64:  mov DWORD PTR [edi+0x4], eax
 808da67:  mov eax, DWORD PTR [esi+0x8]
 808da6a:  sbb eax, DWORD PTR [edx+0x8]
 808da6d:  mov DWORD PTR [edi+0x8], eax
 808da70:  mov eax, DWORD PTR [esi+0xc]
 808da73:  sbb eax, DWORD PTR [edx+0xc]
 808da76:  mov DWORD PTR [edi+0xc], eax
 808da79:  mov eax, DWORD PTR [esi+0x10]
 808da7c:  sbb eax, DWORD PTR [edx+0x10]
 808da7f:  mov DWORD PTR [edi+0x10], eax
 808da82:  mov eax, DWORD PTR [esi+0x14]
 808da85:  sbb eax, DWORD PTR [edx+0x14]
 808da88:  mov DWORD PTR [edi+0x14], eax
 808da8b:  mov eax, DWORD PTR [esi+0x18]
 808da8e:  sbb eax, DWORD PTR [edx+0x18]
 808da91:  mov DWORD PTR [edi+0x18], eax
 808da94:  mov eax, DWORD PTR [esi+0x1c]
 808da97:  sbb eax, DWORD PTR [edx+0x1c]
 808da9a:  mov DWORD PTR [edi+0x1c], eax
 808da9d:  lea edi, [edi+0x20]
 808daa0:  lea esi, [esi+0x20]
 808daa3:  lea edx, [edx+0x20]
 808daa6:  dec ecx
 808daa7:  jne 808da58
 808daa9:  sbb eax, eax
 808daab:  neg eax
 808daad:  pop esi
 808daae:  pop edi
 808daaf:  ret

0808dab0 <__mpn_submul_1>:
 808dab0:  push edi
 808dab1:  push esi
 808dab2:  push ebp
 808dab3:  push ebx
 808dab4:  mov edi, DWORD PTR [esp+0x14]
 808dab8:  mov esi, DWORD PTR [esp+0x18]
 808dabc:  mov ecx, DWORD PTR [esp+0x1c]
 808dac0:  mov ebx, DWORD PTR [esp+0x20]
 808dac4:  lea edi, [edi+ecx*4]
 808dac7:  lea esi, [esi+ecx*4]
 808daca:  neg ecx
 808dacc:  xor ebp, ebp
 808dace:  xchg ax, ax
 808dad0:  mov eax, DWORD PTR [esi+ecx*4]
 808dad3:  mul ebx
 808dad5:  add eax, ebp
 808dad7:  adc edx, 0x0
 808dada:  sub DWORD PTR [edi+ecx*4], eax
 808dadd:  adc edx, 0x0
 808dae0:  mov ebp, edx
 808dae2:  inc ecx
 808dae3:  jne 808dad0
 808dae5:  mov eax, ebp
 808dae7:  pop ebx
 808dae8:  pop ebp
 808dae9:  pop esi
 808daea:  pop edi
 808daeb:  ret
 808daec:  nop
 808daed:  nop
 808daee:  nop
 808daef:  nop

0808daf0 <__mpn_extract_double>:
 808daf0:  push ebp
 808daf1:  mov ebp, esp
 808daf3:  sub esp, 0x10
 808daf6:  mov ecx, DWORD PTR [ebp+0x1c]
 808daf9:  mov eax, DWORD PTR [ebp+0x14]
 808dafc:  mov DWORD PTR [ebp-0xc], ebx
 808daff:  mov edx, DWORD PTR [ebp+0x18]
 808db02:  mov DWORD PTR [ebp-0x8], esi
 808db05:  mov esi, DWORD PTR [ebp+0x8]
 808db08:  mov ebx, ecx
 808db0a:  shr ebx, 0x1f
 808db0d:  mov DWORD PTR [ebp-0x4], edi
 808db10:  mov edi, DWORD PTR [ebp+0x10]
 808db13:  mov DWORD PTR [eax], ebx
 808db15:  mov eax, ecx
 808db17:  shr eax, 0x14
 808db1a:  and eax, 0x7ff
 808db1f:  sub eax, 0x3ff
 808db24:  mov DWORD PTR [edi], eax
 808db26:  mov eax, ecx
 808db28:  mov DWORD PTR [esi], edx
 808db2a:  shr eax, 0x10
 808db2d:  mov edx, ecx
 808db2f:  and edx, 0xfffff
 808db35:  test eax, 0x7ff0
 808db3a:  mov DWORD PTR [esi+0x4], edx
 808db3d:  jne 808db70
 808db3f:  mov ebx, DWORD PTR [esi]
 808db41:  test ebx, ebx
 808db43:  je 808db90
 808db45:  test edx, edx
 808db47:  jne 808db94
 808db49:  bsr edx, ebx
 808db4c:  xor edx, 0x1f
 808db4f:  cmp edx, 0xa
 808db52:  jg 808dbd0
 808db54:  mov ecx, 0xb
 808db59:  sub ecx, edx
 808db5b:  shr ebx, cl
 808db5d:  lea ecx, [edx+0x15]
 808db60:  shl DWORD PTR [esi], cl
 808db62:  mov DWORD PTR [esi+0x4], ebx
 808db65:  mov eax, 0xfffffbed
 808db6a:  sub eax, edx
 808db6c:  mov DWORD PTR [edi], eax
 808db6e:  jmp 808db79
 808db70:  or edx, 0x100000
 808db76:  mov DWORD PTR [esi+0x4], edx
 808db79:  mov ebx, DWORD PTR [ebp-0xc]
 808db7c:  mov eax, 0x2
 808db81:  mov esi, DWORD PTR [ebp-0x8]
 808db84:  mov edi, DWORD PTR [ebp-0x4]
 808db87:  mov esp, ebp
 808db89:  pop ebp
 808db8a:  ret
 808db8b:  nop
 808db8c:  lea esi, [esi]
 808db90:  test edx, edx
 808db92:  je 808dbc8
 808db94:  bsr ecx, edx
 808db97:  mov eax, 0x20
 808db9c:  xor ecx, 0x1f
 808db9f:  sub ecx, 0xb
 808dba2:  sub eax, ecx
 808dba4:  mov DWORD PTR [ebp-0x10], ecx
 808dba7:  mov ecx, eax
 808dba9:  mov eax, 0xfffffc02
 808dbae:  shr ebx, cl
 808dbb0:  movzx ecx, BYTE PTR [ebp-0x10]
 808dbb4:  sub eax, DWORD PTR [ebp-0x10]
 808dbb7:  shl DWORD PTR [esi], cl
 808dbb9:  shl edx, cl
 808dbbb:  or ebx, edx
 808dbbd:  mov DWORD PTR [esi+0x4], ebx
 808dbc0:  mov DWORD PTR [edi], eax
 808dbc2:  jmp 808db79
 808dbc4:  lea esi, [esi]
 808dbc8:  mov DWORD PTR [edi], 0x0
 808dbce:  jmp 808db79
 808dbd0:  lea ecx, [edx-0xb]
 808dbd3:  shl ebx, cl
 808dbd5:  mov DWORD PTR [esi+0x4], ebx
 808dbd8:  mov DWORD PTR [esi], 0x0
 808dbde:  jmp 808db65

0808dbe0 <__mpn_extract_long_double>:
 808dbe0:  push ebp
 808dbe1:  mov ebp, esp
 808dbe3:  sub esp, 0x18
 808dbe6:  mov eax, DWORD PTR [ebp+0x18]
 808dbe9:  mov ecx, DWORD PTR [ebp+0x20]
 808dbec:  mov edx, DWORD PTR [ebp+0x1c]
 808dbef:  mov DWORD PTR [ebp-0x8], esi
 808dbf2:  mov esi, DWORD PTR [ebp+0x8]
 808dbf5:  mov DWORD PTR [ebp-0x18], eax
 808dbf8:  mov DWORD PTR [ebp-0x10], ecx
 808dbfb:  movzx eax, BYTE PTR [ebp-0xf]
 808dbff:  mov DWORD PTR [ebp-0x14], edx
 808dc02:  mov edx, DWORD PTR [ebp+0x14]
 808dc05:  mov DWORD PTR [ebp-0x4], edi
 808dc08:  mov edi, DWORD PTR [ebp+0x10]
 808dc0b:  mov DWORD PTR [ebp-0xc], ebx
 808dc0e:  shr al, 0x7
 808dc11:  movzx eax, al
 808dc14:  mov DWORD PTR [edx], eax
 808dc16:  movzx edx, WORD PTR [ebp-0x10]
 808dc1a:  and dx, 0x7fff
 808dc1f:  movzx ecx, dx
 808dc22:  test dx, dx
 808dc25:  lea eax, [ecx-0x3fff]
 808dc2b:  mov DWORD PTR [edi], eax
 808dc2d:  mov eax, DWORD PTR [ebp-0x18]
 808dc30:  mov DWORD PTR [esi], eax
 808dc32:  mov eax, DWORD PTR [ebp-0x14]
 808dc35:  mov DWORD PTR [esi+0x4], eax
 808dc38:  jne 808dc80
 808dc3a:  mov ecx, DWORD PTR [esi]
 808dc3c:  test ecx, ecx
 808dc3e:  je 808dca0
 808dc40:  mov edx, eax
 808dc42:  and edx, 0x7fffffff
 808dc48:  test edx, edx
 808dc4a:  mov DWORD PTR [esi+0x4], edx
 808dc4d:  jne 808dcb9
 808dc4f:  mov eax, DWORD PTR [esi]
 808dc51:  test eax, eax
 808dc53:  jne 808dce8
 808dc59:  mov DWORD PTR [esi+0x4], 0x80000000
 808dc60:  mov DWORD PTR [edi], 0xffffc002
 808dc66:  xchg ax, ax
 808dc68:  mov ebx, DWORD PTR [ebp-0xc]
 808dc6b:  mov eax, 0x2
 808dc70:  mov esi, DWORD PTR [ebp-0x8]
 808dc73:  mov edi, DWORD PTR [ebp-0x4]
 808dc76:  mov esp, ebp
 808dc78:  pop ebp
 808dc79:  ret
 808dc7a:  lea esi, [esi]
 808dc80:  cmp ecx, 0x7fff
 808dc86:  je 808dc68
 808dc88:  mov edx, DWORD PTR [esi]
 808dc8a:  test edx, edx
 808dc8c:  jne 808dc68
 808dc8e:  test eax, eax
 808dc90:  jne 808dc68
 808dc92:  mov DWORD PTR [edi], 0x0
 808dc98:  jmp 808dc68
 808dc9a:  lea esi, [esi]
 808dca0:  test eax, eax
 808dca2:  lea esi, [esi]
 808dca8:  je 808dc92
 808dcaa:  mov edx, eax
 808dcac:  and edx, 0x7fffffff
 808dcb2:  test edx, edx
 808dcb4:  mov DWORD PTR [esi+0x4], edx
 808dcb7:  je 808dc4f
 808dcb9:  bsr ebx, edx
 808dcbc:  xor ebx, 0x1f
 808dcbf:  je 808dcd7
 808dcc1:  mov eax, DWORD PTR [esi]
 808dcc3:  mov ecx, 0x20
 808dcc8:  sub ecx, ebx
 808dcca:  shr eax, cl
 808dccc:  mov ecx, ebx
 808dcce:  shl DWORD PTR [esi], cl
 808dcd0:  shl edx, cl
 808dcd2:  or eax, edx
 808dcd4:  mov DWORD PTR [esi+0x4], eax
 808dcd7:  mov eax, 0xffffc002
 808dcdc:  sub eax, ebx
 808dcde:  mov DWORD PTR [edi], eax
 808dce0:  jmp 808dc68
 808dce2:  lea esi, [esi]
 808dce8:  bsr ecx, eax
 808dceb:  mov DWORD PTR [esi], 0x0
 808dcf1:  xor ecx, 0x1f
 808dcf4:  shl eax, cl
 808dcf6:  mov DWORD PTR [esi+0x4], eax
 808dcf9:  mov eax, 0xffffbfe2
 808dcfe:  sub eax, ecx
 808dd00:  mov DWORD PTR [edi], eax
 808dd02:  jmp 808dc68
 808dd07:  nop
 808dd08:  nop
 808dd09:  nop
 808dd0a:  nop
 808dd0b:  nop
 808dd0c:  nop
 808dd0d:  nop
 808dd0e:  nop
 808dd0f:  nop

0808dd10 <_itowa>:
 808dd10:  push ebp
 808dd11:  mov ebp, esp
 808dd13:  push edi
 808dd14:  mov edi, 0x80c4c20
 808dd19:  push esi
 808dd1a:  push ebx
 808dd1b:  sub esp, 0x18
 808dd1e:  mov eax, DWORD PTR [ebp+0x18]
 808dd21:  mov ebx, DWORD PTR [ebp+0x8]
 808dd24:  mov edx, DWORD PTR [ebp+0xc]
 808dd27:  test eax, eax
 808dd29:  jne 808dd30
 808dd2b:  mov edi, 0x80c4b80
 808dd30:  cmp DWORD PTR [ebp+0x14], 0x8
 808dd34:  je 808de28
 808dd3a:  cmp DWORD PTR [ebp+0x14], 0x10
 808dd3e:  je 808ddf8
 808dd44:  mov ecx, DWORD PTR [ebp+0x14]
 808dd47:  test edx, edx
 808dd49:  lea eax, [ecx+ecx*2]
 808dd4c:  lea eax, [eax*4+0x80b0b68]
 808dd53:  mov DWORD PTR [ebp-0x20], eax
 808dd56:  je 808df00
 808dd5c:  mov esi, DWORD PTR [eax+0x8]
 808dd5f:  cmp edx, esi
 808dd61:  jb 808df85
 808dd67:  mov ecx, edx
 808dd69:  xor edx, edx
 808dd6b:  mov eax, ecx
 808dd6d:  div esi
 808dd6f:  mov ecx, eax
 808dd71:  mov eax, ebx
 808dd73:  div esi
 808dd75:  mov DWORD PTR [ebp-0x10], edx
 808dd78:  mov edx, ecx
 808dd7a:  div esi
 808dd7c:  mov DWORD PTR [ebp-0x18], eax
 808dd7f:  mov eax, 0x3
 808dd84:  mov DWORD PTR [ebp-0x14], edx
 808dd87:  mov esi, DWORD PTR [ebp+0x10]
 808dd8a:  lea eax, [ebp+eax*4-0x1c]
 808dd8e:  lea edx, [ebp-0x18]
 808dd91:  mov ecx, eax
 808dd93:  mov DWORD PTR [ebp-0x24], edx
 808dd96:  mov DWORD PTR [ebp-0x1c], eax
 808dd99:  mov eax, DWORD PTR [ecx]
 808dd9b:  xor ebx, ebx
 808dd9d:  test eax, eax
 808dd9f:  je 808ddc0
 808dda1:  lea esi, [esi]
 808dda8:  xor edx, edx
 808ddaa:  sub esi, 0x4
 808ddad:  div DWORD PTR [ebp+0x14]
 808ddb0:  add ebx, 0x1
 808ddb3:  mov ecx, eax
 808ddb5:  mov eax, DWORD PTR [edi+edx*4]
 808ddb8:  test ecx, ecx
 808ddba:  mov DWORD PTR [esi], eax
 808ddbc:  mov eax, ecx
 808ddbe:  jne 808dda8
 808ddc0:  mov eax, DWORD PTR [ebp-0x24]
 808ddc3:  cmp DWORD PTR [ebp-0x1c], eax
 808ddc6:  je 808de1c
 808ddc8:  mov edx, DWORD PTR [ebp-0x20]
 808ddcb:  movsx eax, BYTE PTR [edx+0x5]
 808ddcf:  cmp eax, ebx
 808ddd1:  jle 808ddef
 808ddd3:  nop
 808ddd4:  lea esi, [esi]
 808ddd8:  mov ecx, DWORD PTR [ebp-0x20]
 808dddb:  sub esi, 0x4
 808ddde:  add ebx, 0x1
 808dde1:  mov DWORD PTR [esi], 0x30
 808dde7:  movsx eax, BYTE PTR [ecx+0x5]
 808ddeb:  cmp eax, ebx
 808dded:  jg 808ddd8
 808ddef:  sub DWORD PTR [ebp-0x1c], 0x4
 808ddf3:  mov ecx, DWORD PTR [ebp-0x1c]
 808ddf6:  jmp 808dd99
 808ddf8:  test edx, edx
 808ddfa:  jne 808df10
 808de00:  mov esi, DWORD PTR [ebp+0x10]
 808de03:  mov edx, ebx
 808de05:  lea esi, [esi]
 808de08:  mov eax, edx
 808de0a:  sub esi, 0x4
 808de0d:  and eax, 0xf
 808de10:  mov eax, DWORD PTR [edi+eax*4]
 808de13:  shr edx, 0x4
 808de16:  test edx, edx
 808de18:  mov DWORD PTR [esi], eax
 808de1a:  jne 808de08
 808de1c:  add esp, 0x18
 808de1f:  mov eax, esi
 808de21:  pop ebx
 808de22:  pop esi
 808de23:  pop edi
 808de24:  pop ebp
 808de25:  ret
 808de26:  xchg ax, ax
 808de28:  test edx, edx
 808de2a:  mov ecx, ebx
 808de2c:  mov esi, DWORD PTR [ebp+0x10]
 808de2f:  je 808dee0
 808de35:  mov eax, ebx
 808de37:  and eax, 0x7
 808de3a:  mov eax, DWORD PTR [edi+eax*4]
 808de3d:  mov DWORD PTR [esi-0x4], eax
 808de40:  mov eax, ebx
 808de42:  shr eax, 0x3
 808de45:  and eax, 0x7
 808de48:  mov eax, DWORD PTR [edi+eax*4]
 808de4b:  mov DWORD PTR [esi-0x8], eax
 808de4e:  mov eax, ecx
 808de50:  shr eax, 0x6
 808de53:  and eax, 0x7
 808de56:  mov eax, DWORD PTR [edi+eax*4]
 808de59:  mov DWORD PTR [esi-0xc], eax
 808de5c:  mov eax, ecx
 808de5e:  shr eax, 0x9
 808de61:  and eax, 0x7
 808de64:  mov eax, DWORD PTR [edi+eax*4]
 808de67:  mov DWORD PTR [esi-0x10], eax
 808de6a:  mov eax, ecx
 808de6c:  shr eax, 0xc
 808de6f:  and eax, 0x7
 808de72:  mov eax, DWORD PTR [edi+eax*4]
 808de75:  mov DWORD PTR [esi-0x14], eax
 808de78:  mov eax, ecx
 808de7a:  shr eax, 0xf
 808de7d:  and eax, 0x7
 808de80:  mov eax, DWORD PTR [edi+eax*4]
 808de83:  mov DWORD PTR [esi-0x18], eax
 808de86:  mov eax, ecx
 808de88:  shr eax, 0x12
 808de8b:  and eax, 0x7
 808de8e:  mov eax, DWORD PTR [edi+eax*4]
 808de91:  mov DWORD PTR [esi-0x1c], eax
 808de94:  mov eax, ecx
 808de96:  shr eax, 0x15
 808de99:  and eax, 0x7
 808de9c:  mov eax, DWORD PTR [edi+eax*4]
 808de9f:  mov DWORD PTR [esi-0x20], eax
 808dea2:  mov eax, ecx
 808dea4:  shr eax, 0x18
 808dea7:  and eax, 0x7
 808deaa:  mov eax, DWORD PTR [edi+eax*4]
 808dead:  shr ecx, 0x1b
 808deb0:  mov ebx, ecx
 808deb2:  shr ebx, 0x3
 808deb5:  mov DWORD PTR [esi-0x24], eax
 808deb8:  mov eax, ecx
 808deba:  mov ecx, edx
 808debc:  and eax, 0x7
 808debf:  mov eax, DWORD PTR [edi+eax*4]
 808dec2:  mov DWORD PTR [esi-0x28], eax
 808dec5:  mov eax, edx
 808dec7:  sub esi, 0x28
 808deca:  and eax, 0x1
 808decd:  shl eax, 0x2
 808ded0:  or ebx, eax
 808ded2:  shr ecx, 1
 808ded4:  jne 808df99
 808deda:  mov ecx, ebx
 808dedc:  lea esi, [esi]
 808dee0:  mov eax, ecx
 808dee2:  sub esi, 0x4
 808dee5:  and eax, 0x7
 808dee8:  mov eax, DWORD PTR [edi+eax*4]
 808deeb:  shr ecx, 0x3
 808deee:  test ecx, ecx
 808def0:  mov DWORD PTR [esi], eax
 808def2:  jne 808dee0
 808def4:  jmp 808de1c
 808def9:  lea esi, [esi]
 808df00:  mov DWORD PTR [ebp-0x18], ebx
 808df03:  mov eax, 0x1
 808df08:  jmp 808dd87
 808df0d:  lea esi, [esi]
 808df10:  mov eax, ebx
 808df12:  mov ecx, DWORD PTR [ebp+0x10]
 808df15:  and eax, 0xf
 808df18:  mov eax, DWORD PTR [edi+eax*4]
 808df1b:  mov esi, ecx
 808df1d:  sub esi, 0x20
 808df20:  mov DWORD PTR [ecx-0x4], eax
 808df23:  mov eax, ebx
 808df25:  shr eax, 0x4
 808df28:  and eax, 0xf
 808df2b:  mov eax, DWORD PTR [edi+eax*4]
 808df2e:  mov DWORD PTR [ecx-0x8], eax
 808df31:  mov eax, ebx
 808df33:  shr eax, 0x8
 808df36:  and eax, 0xf
 808df39:  mov eax, DWORD PTR [edi+eax*4]
 808df3c:  mov DWORD PTR [ecx-0xc], eax
 808df3f:  mov eax, ebx
 808df41:  shr eax, 0xc
 808df44:  and eax, 0xf
 808df47:  mov eax, DWORD PTR [edi+eax*4]
 808df4a:  mov DWORD PTR [ecx-0x10], eax
 808df4d:  mov eax, ebx
 808df4f:  shr eax, 0x10
 808df52:  and eax, 0xf
 808df55:  mov eax, DWORD PTR [edi+eax*4]
 808df58:  mov DWORD PTR [ecx-0x14], eax
 808df5b:  mov eax, ebx
 808df5d:  shr eax, 0x14
 808df60:  and eax, 0xf
 808df63:  mov eax, DWORD PTR [edi+eax*4]
 808df66:  shr ebx, 0x18
 808df69:  mov DWORD PTR [ecx-0x18], eax
 808df6c:  mov eax, ebx
 808df6e:  and eax, 0xf
 808df71:  mov eax, DWORD PTR [edi+eax*4]
 808df74:  shr ebx, 0x4
 808df77:  mov DWORD PTR [ecx-0x1c], eax
 808df7a:  mov eax, DWORD PTR [edi+ebx*4]
 808df7d:  mov DWORD PTR [ecx-0x20], eax
 808df80:  jmp 808de08
 808df85:  mov eax, ebx
 808df87:  div esi
 808df89:  mov DWORD PTR [ebp-0x18], eax
 808df8c:  mov eax, 0x2
 808df91:  mov DWORD PTR [ebp-0x14], edx
 808df94:  jmp 808dd87
 808df99:  mov esi, DWORD PTR [ebp+0x10]
 808df9c:  mov eax, DWORD PTR [edi+ebx*4]
 808df9f:  mov edx, DWORD PTR [ebp+0x10]
 808dfa2:  sub esi, 0x2c
 808dfa5:  mov DWORD PTR [edx-0x2c], eax
 808dfa8:  jmp 808dee0
 808dfad:  nop
 808dfae:  nop
 808dfaf:  nop

0808dfb0 <printf_unknown>:
 808dfb0:  push ebp
 808dfb1:  mov ebp, esp
 808dfb3:  push edi
 808dfb4:  push esi
 808dfb5:  push ebx
 808dfb6:  sub esp, 0x3c
 808dfb9:  mov eax, DWORD PTR [ebp+0x8]
 808dfbc:  mov edx, DWORD PTR [eax+0x58]
 808dfbf:  mov eax, DWORD PTR [edx+0x10]
 808dfc2:  cmp eax, DWORD PTR [edx+0x14]
 808dfc5:  jae 808e368
 808dfcb:  mov DWORD PTR [eax], 0x25
 808dfd1:  add eax, 0x4
 808dfd4:  mov DWORD PTR [edx+0x10], eax
 808dfd7:  mov ecx, DWORD PTR [ebp+0xc]
 808dfda:  mov edx, 0x1
 808dfdf:  mov edi, 0x2
 808dfe4:  movzx eax, BYTE PTR [ecx+0xc]
 808dfe8:  test al, 0x8
 808dfea:  jne 808e1d0
 808dff0:  test al, al
 808dff2:  js 808e207
 808dff8:  mov edi, edx
 808dffa:  test al, 0x40
 808dffc:  jne 808e234
 808e002:  test al, 0x10
 808e004:  lea esi, [esi]
 808e008:  jne 808e308
 808e00e:  test al, 0x20
 808e010:  jne 808e264
 808e016:  mov eax, DWORD PTR [ebp+0xc]
 808e019:  cmp DWORD PTR [eax+0x10], 0x30
 808e01d:  lea esi, [esi]
 808e020:  je 808e292
 808e026:  test BYTE PTR [eax+0xd], 0x8
 808e02a:  lea esi, [esi]
 808e030:  jne 808e188
 808e036:  mov edx, DWORD PTR [ebp+0xc]
 808e039:  lea eax, [ebp-0xc]
 808e03c:  mov DWORD PTR [ebp-0x40], eax
 808e03f:  mov eax, DWORD PTR [edx+0x4]
 808e042:  test eax, eax
 808e044:  jne 808e108
 808e04a:  mov eax, DWORD PTR [ebp+0xc]
 808e04d:  cmp DWORD PTR [eax], 0xff
 808e050:  je 808e2c0
 808e056:  mov ecx, DWORD PTR [ebp+0x8]
 808e059:  mov edx, DWORD PTR [ecx+0x58]
 808e05c:  mov eax, DWORD PTR [edx+0x10]
 808e05f:  cmp eax, DWORD PTR [edx+0x14]
 808e062:  jae 808e44a
 808e068:  mov DWORD PTR [eax], 0x2e
 808e06e:  add eax, 0x4
 808e071:  mov DWORD PTR [edx+0x10], eax
 808e074:  cmp edi, 0x7fffffff
 808e07a:  je 808e0f8
 808e07c:  mov eax, DWORD PTR [ebp+0xc]
 808e07f:  add edi, 0x1
 808e082:  lea esi, [ebp-0xc]
 808e085:  mov ecx, DWORD PTR [eax]
 808e087:  nop
 808e088:  mov eax, 0xcccccccd
 808e08d:  sub esi, 0x4
 808e090:  mul ecx
 808e092:  shr edx, 0x3
 808e095:  lea eax, [edx+edx*4]
 808e098:  add eax, eax
 808e09a:  sub ecx, eax
 808e09c:  test edx, edx
 808e09e:  mov ebx, DWORD PTR [ecx*4+0x80c4b80]
 808e0a5:  mov ecx, edx
 808e0a7:  mov DWORD PTR [esi], ebx
 808e0a9:  jne 808e088
 808e0ab:  cmp DWORD PTR [ebp-0x40], esi
 808e0ae:  ja 808e0d8
 808e0b0:  jmp 808e2c0
 808e0b5:  lea esi, [esi]
 808e0b8:  cmp edi, 0x7fffffff
 808e0be:  xchg ax, ax
 808e0c0:  je 808e0f8
 808e0c2:  add esi, 0x4
 808e0c5:  add edi, 0x1
 808e0c8:  cmp DWORD PTR [ebp-0x40], esi
 808e0cb:  nop
 808e0cc:  lea esi, [esi]
 808e0d0:  jbe 808e2c0
 808e0d6:  mov ebx, DWORD PTR [esi]
 808e0d8:  mov ecx, DWORD PTR [ebp+0x8]
 808e0db:  mov edx, DWORD PTR [ecx+0x58]
 808e0de:  mov eax, DWORD PTR [edx+0x10]
 808e0e1:  cmp eax, DWORD PTR [edx+0x14]
 808e0e4:  jae 808e348
 808e0ea:  mov DWORD PTR [eax], ebx
 808e0ec:  add eax, 0x4
 808e0ef:  add ebx, 0x1
 808e0f2:  mov DWORD PTR [edx+0x10], eax
 808e0f5:  jne 808e0b8
 808e0f7:  nop
 808e0f8:  mov edi, 0xffffffff
 808e0fd:  add esp, 0x3c
 808e100:  mov eax, edi
 808e102:  pop ebx
 808e103:  pop esi
 808e104:  pop edi
 808e105:  pop ebp
 808e106:  ret
 808e107:  nop
 808e108:  mov ecx, eax
 808e10a:  lea esi, [ebp-0xc]
 808e10d:  lea esi, [esi]
 808e110:  mov eax, 0xcccccccd
 808e115:  sub esi, 0x4
 808e118:  mul ecx
 808e11a:  shr edx, 0x3
 808e11d:  lea eax, [edx+edx*4]
 808e120:  add eax, eax
 808e122:  sub ecx, eax
 808e124:  test edx, edx
 808e126:  mov ebx, DWORD PTR [ecx*4+0x80c4b80]
 808e12d:  mov ecx, edx
 808e12f:  mov DWORD PTR [esi], ebx
 808e131:  jne 808e110
 808e133:  cmp DWORD PTR [ebp-0x40], esi
 808e136:  ja 808e160
 808e138:  jmp 808e04a
 808e13d:  lea esi, [esi]
 808e140:  cmp edi, 0x7fffffff
 808e146:  xchg ax, ax
 808e148:  je 808e0f8
 808e14a:  add esi, 0x4
 808e14d:  add edi, 0x1
 808e150:  cmp DWORD PTR [ebp-0x40], esi
 808e153:  nop
 808e154:  lea esi, [esi]
 808e158:  jbe 808e04a
 808e15e:  mov ebx, DWORD PTR [esi]
 808e160:  mov ecx, DWORD PTR [ebp+0x8]
 808e163:  mov edx, DWORD PTR [ecx+0x58]
 808e166:  mov eax, DWORD PTR [edx+0x10]
 808e169:  cmp eax, DWORD PTR [edx+0x14]
 808e16c:  jae 808e32b
 808e172:  mov DWORD PTR [eax], ebx
 808e174:  add eax, 0x4
 808e177:  add ebx, 0x1
 808e17a:  mov DWORD PTR [edx+0x10], eax
 808e17d:  jne 808e140
 808e17f:  jmp 808e0f8
 808e184:  lea esi, [esi]
 808e188:  mov ecx, DWORD PTR [ebp+0x8]
 808e18b:  mov edx, DWORD PTR [ecx+0x58]
 808e18e:  mov eax, DWORD PTR [edx+0x10]
 808e191:  cmp eax, DWORD PTR [edx+0x14]
 808e194:  jae 808e40e
 808e19a:  mov DWORD PTR [eax], 0x49
 808e1a0:  add eax, 0x4
 808e1a3:  mov DWORD PTR [edx+0x10], eax
 808e1a6:  cmp edi, 0x7fffffff
 808e1ac:  je 808e0f8
 808e1b2:  mov edx, DWORD PTR [ebp+0xc]
 808e1b5:  lea eax, [ebp-0xc]
 808e1b8:  add edi, 0x1
 808e1bb:  mov DWORD PTR [ebp-0x40], eax
 808e1be:  mov eax, DWORD PTR [edx+0x4]
 808e1c1:  test eax, eax
 808e1c3:  je 808e04a
 808e1c9:  jmp 808e108
 808e1ce:  xchg ax, ax
 808e1d0:  mov eax, DWORD PTR [ebp+0x8]
 808e1d3:  mov edx, DWORD PTR [eax+0x58]
 808e1d6:  mov eax, DWORD PTR [edx+0x10]
 808e1d9:  cmp eax, DWORD PTR [edx+0x14]
 808e1dc:  jae 808e3b1
 808e1e2:  mov DWORD PTR [eax], 0x23
 808e1e8:  add eax, 0x4
 808e1eb:  mov DWORD PTR [edx+0x10], eax
 808e1ee:  mov ecx, DWORD PTR [ebp+0xc]
 808e1f1:  mov edx, 0x2
 808e1f6:  mov edi, 0x3
 808e1fb:  movzx eax, BYTE PTR [ecx+0xc]
 808e1ff:  test al, al
 808e201:  jns 808dff8
 808e207:  mov eax, DWORD PTR [ebp+0x8]
 808e20a:  mov edx, DWORD PTR [eax+0x58]
 808e20d:  mov eax, DWORD PTR [edx+0x10]
 808e210:  cmp eax, DWORD PTR [edx+0x14]
 808e213:  jae 808e389
 808e219:  mov DWORD PTR [eax], 0x27
 808e21f:  add eax, 0x4
 808e222:  mov DWORD PTR [edx+0x10], eax
 808e225:  mov edx, DWORD PTR [ebp+0xc]
 808e228:  movzx eax, BYTE PTR [edx+0xc]
 808e22c:  test al, 0x40
 808e22e:  je 808e002
 808e234:  mov ecx, DWORD PTR [ebp+0x8]
 808e237:  mov edx, DWORD PTR [ecx+0x58]
 808e23a:  mov eax, DWORD PTR [edx+0x10]
 808e23d:  cmp eax, DWORD PTR [edx+0x14]
 808e240:  jae 808e3d2
 808e246:  mov DWORD PTR [eax], 0x2b
 808e24c:  add eax, 0x4
 808e24f:  mov DWORD PTR [edx+0x10], eax
 808e252:  mov edx, DWORD PTR [ebp+0xc]
 808e255:  add edi, 0x1
 808e258:  movzx eax, BYTE PTR [edx+0xc]
 808e25c:  test al, 0x20
 808e25e:  je 808e016
 808e264:  mov ecx, DWORD PTR [ebp+0x8]
 808e267:  mov edx, DWORD PTR [ecx+0x58]
 808e26a:  mov eax, DWORD PTR [edx+0x10]
 808e26d:  cmp eax, DWORD PTR [edx+0x14]
 808e270:  jae 808e3f0
 808e276:  mov DWORD PTR [eax], 0x2d
 808e27c:  add eax, 0x4
 808e27f:  mov DWORD PTR [edx+0x10], eax
 808e282:  mov eax, DWORD PTR [ebp+0xc]
 808e285:  add edi, 0x1
 808e288:  cmp DWORD PTR [eax+0x10], 0x30
 808e28c:  jne 808e026
 808e292:  mov ecx, DWORD PTR [ebp+0x8]
 808e295:  mov edx, DWORD PTR [ecx+0x58]
 808e298:  mov eax, DWORD PTR [edx+0x10]
 808e29b:  cmp eax, DWORD PTR [edx+0x14]
 808e29e:  jae 808e468
 808e2a4:  mov DWORD PTR [eax], 0x30
 808e2aa:  add eax, 0x4
 808e2ad:  mov DWORD PTR [edx+0x10], eax
 808e2b0:  add edi, 0x1
 808e2b3:  mov eax, DWORD PTR [ebp+0xc]
 808e2b6:  jmp 808e026
 808e2bb:  nop
 808e2bc:  lea esi, [esi]
 808e2c0:  mov eax, DWORD PTR [ebp+0xc]
 808e2c3:  mov edx, DWORD PTR [eax+0x8]
 808e2c6:  test edx, edx
 808e2c8:  je 808e0fd
 808e2ce:  mov eax, DWORD PTR [ebp+0x8]
 808e2d1:  mov ecx, DWORD PTR [eax+0x58]
 808e2d4:  mov eax, DWORD PTR [ecx+0x10]
 808e2d7:  cmp eax, DWORD PTR [ecx+0x14]
 808e2da:  jae 808e486
 808e2e0:  mov DWORD PTR [eax], edx
 808e2e2:  add eax, 0x4
 808e2e5:  add edx, 0x1
 808e2e8:  mov DWORD PTR [ecx+0x10], eax
 808e2eb:  je 808e0f8
 808e2f1:  cmp edi, 0x7fffffff
 808e2f7:  je 808e0f8
 808e2fd:  add edi, 0x1
 808e300:  jmp 808e0fd
 808e305:  lea esi, [esi]
 808e308:  mov ecx, DWORD PTR [ebp+0x8]
 808e30b:  mov edx, DWORD PTR [ecx+0x58]
 808e30e:  mov eax, DWORD PTR [edx+0x10]
 808e311:  cmp eax, DWORD PTR [edx+0x14]
 808e314:  jae 808e42c
 808e31a:  mov DWORD PTR [eax], 0x20
 808e320:  add eax, 0x4
 808e323:  mov DWORD PTR [edx+0x10], eax
 808e326:  jmp 808e252
 808e32b:  mov DWORD PTR [esp+0x4], ebx
 808e32f:  mov DWORD PTR [esp], ecx
 808e332:  call 80630d0
 808e337:  add eax, 0x1
 808e33a:  jne 808e140
 808e340:  jmp 808e0f8
 808e345:  lea esi, [esi]
 808e348:  mov DWORD PTR [esp+0x4], ebx
 808e34c:  mov DWORD PTR [esp], ecx
 808e34f:  call 80630d0
 808e354:  add eax, 0x1
 808e357:  jne 808e0b8
 808e35d:  jmp 808e0f8
 808e362:  lea esi, [esi]
 808e368:  mov edx, DWORD PTR [ebp+0x8]
 808e36b:  mov DWORD PTR [esp+0x4], 0x25
 808e373:  mov DWORD PTR [esp], edx
 808e376:  call 80630d0
 808e37b:  add eax, 0x1
 808e37e:  jne 808dfd7
 808e384:  jmp 808e0f8
 808e389:  mov edx, DWORD PTR [ebp+0x8]
 808e38c:  mov DWORD PTR [esp+0x4], 0x27
 808e394:  mov DWORD PTR [esp], edx
 808e397:  call 80630d0
 808e39c:  add eax, 0x1
 808e39f:  je 808e0f8
 808e3a5:  mov ecx, DWORD PTR [ebp+0xc]
 808e3a8:  movzx eax, BYTE PTR [ecx+0xc]
 808e3ac:  jmp 808dffa
 808e3b1:  mov edx, DWORD PTR [ebp+0x8]
 808e3b4:  mov DWORD PTR [esp+0x4], 0x23
 808e3bc:  mov DWORD PTR [esp], edx
 808e3bf:  call 80630d0
 808e3c4:  add eax, 0x1
 808e3c7:  jne 808e1ee
 808e3cd:  jmp 808e0f8
 808e3d2:  mov DWORD PTR [esp+0x4], 0x2b
 808e3da:  mov DWORD PTR [esp], ecx
 808e3dd:  call 80630d0
 808e3e2:  add eax, 0x1
 808e3e5:  jne 808e252
 808e3eb:  jmp 808e0f8
 808e3f0:  mov DWORD PTR [esp+0x4], 0x2d
 808e3f8:  mov DWORD PTR [esp], ecx
 808e3fb:  call 80630d0
 808e400:  add eax, 0x1
 808e403:  jne 808e282
 808e409:  jmp 808e0f8
 808e40e:  mov DWORD PTR [esp+0x4], 0x49
 808e416:  mov DWORD PTR [esp], ecx
 808e419:  call 80630d0
 808e41e:  add eax, 0x1
 808e421:  jne 808e1a6
 808e427:  jmp 808e0f8
 808e42c:  mov DWORD PTR [esp+0x4], 0x20
 808e434:  mov DWORD PTR [esp], ecx
 808e437:  call 80630d0
 808e43c:  add eax, 0x1
 808e43f:  jne 808e252
 808e445:  jmp 808e0f8
 808e44a:  mov DWORD PTR [esp+0x4], 0x2e
 808e452:  mov DWORD PTR [esp], ecx
 808e455:  call 80630d0
 808e45a:  add eax, 0x1
 808e45d:  jne 808e074
 808e463:  jmp 808e0f8
 808e468:  mov DWORD PTR [esp+0x4], 0x30
 808e470:  mov DWORD PTR [esp], ecx
 808e473:  call 80630d0
 808e478:  add eax, 0x1
 808e47b:  jne 808e2b0
 808e481:  jmp 808e0f8
 808e486:  mov DWORD PTR [esp+0x4], edx
 808e48a:  mov edx, DWORD PTR [ebp+0x8]
 808e48d:  mov DWORD PTR [esp], edx
 808e490:  call 80630d0
 808e495:  add eax, 0x1
 808e498:  jne 808e2f1
 808e49e:  jmp 808e0f8
 808e4a3:  lea esi, [esi]
 808e4a9:  lea edi, [edi]

0808e4b0 <_IO_helper_overflow>:
 808e4b0:  push ebp
 808e4b1:  mov ebp, esp
 808e4b3:  sub esp, 0x20
 808e4b6:  mov DWORD PTR [ebp-0x4], edi
 808e4b9:  mov edi, DWORD PTR [ebp+0x8]
 808e4bc:  mov DWORD PTR [ebp-0xc], ebx
 808e4bf:  mov ebx, DWORD PTR [ebp+0xc]
 808e4c2:  mov DWORD PTR [ebp-0x8], esi
 808e4c5:  mov eax, DWORD PTR [edi+0x154]
 808e4cb:  mov edx, DWORD PTR [edi+0x58]
 808e4ce:  mov DWORD PTR [ebp-0x10], eax
 808e4d1:  mov eax, DWORD PTR [edx+0x10]
 808e4d4:  mov ecx, DWORD PTR [edx+0xc]
 808e4d7:  mov esi, eax
 808e4d9:  sub esi, ecx
 808e4db:  sar esi, 0x2
 808e4de:  test esi, esi
 808e4e0:  jne 808e500
 808e4e2:  cmp eax, DWORD PTR [edx+0x14]
 808e4e5:  jae 808e562
 808e4e7:  mov DWORD PTR [eax], ebx
 808e4e9:  add eax, 0x4
 808e4ec:  mov DWORD PTR [edx+0x10], eax
 808e4ef:  mov eax, ebx
 808e4f1:  mov esi, DWORD PTR [ebp-0x8]
 808e4f4:  mov ebx, DWORD PTR [ebp-0xc]
 808e4f7:  mov edi, DWORD PTR [ebp-0x4]
 808e4fa:  mov esp, ebp
 808e4fc:  pop ebp
 808e4fd:  ret
 808e4fe:  xchg ax, ax
 808e500:  mov edx, DWORD PTR [ebp-0x10]
 808e503:  mov eax, DWORD PTR [edx+0x94]
 808e509:  mov DWORD PTR [esp+0x4], ecx
 808e50d:  mov DWORD PTR [esp+0x8], esi
 808e511:  mov DWORD PTR [esp], edx
 808e514:  call DWORD PTR [eax+0x1c]
 808e517:  mov ecx, eax
 808e519:  lea eax, [eax-0x1]
 808e51c:  cmp eax, 0xfd
 808e51f:  jbe 808e528
 808e521:  mov ebx, 0xffffffff
 808e526:  jmp 808e4ef
 808e528:  mov eax, DWORD PTR [edi+0x58]
 808e52b:  mov edx, DWORD PTR [eax+0xc]
 808e52e:  lea eax, [ecx*4]
 808e535:  mov DWORD PTR [ebp-0x14], eax
 808e538:  mov eax, esi
 808e53a:  sub eax, ecx
 808e53c:  mov DWORD PTR [esp+0x8], eax
 808e540:  mov ecx, DWORD PTR [ebp-0x14]
 808e543:  mov DWORD PTR [esp], edx
 808e546:  lea eax, [edx+ecx]
 808e549:  mov DWORD PTR [esp+0x4], eax
 808e54d:  call 806c570
 808e552:  mov eax, DWORD PTR [edi+0x58]
 808e555:  mov edx, DWORD PTR [ebp-0x14]
 808e558:  sub DWORD PTR [eax+0x10], edx
 808e55b:  mov edx, eax
 808e55d:  mov eax, DWORD PTR [eax+0x10]
 808e560:  jmp 808e4e2
 808e562:  mov DWORD PTR [ebp+0xc], ebx
 808e565:  mov esi, DWORD PTR [ebp-0x8]
 808e568:  mov DWORD PTR [ebp+0x8], edi
 808e56b:  mov ebx, DWORD PTR [ebp-0xc]
 808e56e:  mov edi, DWORD PTR [ebp-0x4]
 808e571:  mov esp, ebp
 808e573:  pop ebp
 808e574:  jmp 80630d0
 808e579:  lea esi, [esi]

0808e580 <group_number>:
 808e580:  push ebp
 808e581:  mov ebp, esp
 808e583:  push edi
 808e584:  push esi
 808e585:  push ebx
 808e586:  mov ebx, eax
 808e588:  sub esp, 0x14
 808e58b:  mov DWORD PTR [ebp-0x10], edx
 808e58e:  mov DWORD PTR [ebp-0x14], ecx
 808e591:  movzx edi, BYTE PTR [ecx]
 808e594:  lea eax, [edi-0x1]
 808e597:  cmp al, 0x7d
 808e599:  jbe 808e5a8
 808e59b:  lea esp, [ebp-0xc]
 808e59e:  mov eax, ebx
 808e5a0:  pop ebx
 808e5a1:  pop esi
 808e5a2:  pop edi
 808e5a3:  pop ebp
 808e5a4:  ret 0x4
 808e5a7:  nop
 808e5a8:  sub edx, ebx
 808e5aa:  and edx, 0xfc
 808e5ad:  lea eax, [edx+0x10]
 808e5b0:  sub esp, eax
 808e5b2:  lea esi, [esp+0x1b]
 808e5b6:  and esi, 0xf0
 808e5b9:  mov DWORD PTR [esp+0x4], ebx
 808e5bd:  mov DWORD PTR [esp+0x8], edx
 808e5c1:  mov DWORD PTR [esp], esi
 808e5c4:  call 806c310
 808e5c9:  mov ebx, DWORD PTR [ebp-0x10]
 808e5cc:  cmp esi, eax
 808e5ce:  mov ecx, eax
 808e5d0:  jae 808e59b
 808e5d2:  mov eax, edi
 808e5d4:  mov edi, DWORD PTR [ebp-0x14]
 808e5d7:  movsx edx, al
 808e5da:  add edi, 0x1
 808e5dd:  lea esi, [esi]
 808e5e0:  sub ecx, 0x4
 808e5e3:  sub ebx, 0x4
 808e5e6:  mov eax, DWORD PTR [ecx]
 808e5e8:  sub edx, 0x1
 808e5eb:  mov DWORD PTR [ebx], eax
 808e5ed:  jne 808e620
 808e5ef:  cmp esi, ecx
 808e5f1:  jae 808e59b
 808e5f3:  mov eax, DWORD PTR [ebp+0x8]
 808e5f6:  sub ebx, 0x4
 808e5f9:  mov DWORD PTR [ebx], eax
 808e5fb:  movzx eax, BYTE PTR [edi]
 808e5fe:  cmp al, 0x7f
 808e600:  je 808e630
 808e602:  cmp al, 0x0
 808e604:  jl 808e630
 808e606:  je 808e658
 808e608:  sub ecx, 0x4
 808e60b:  movsx edx, al
 808e60e:  mov eax, DWORD PTR [ecx]
 808e610:  sub ebx, 0x4
 808e613:  add edi, 0x1
 808e616:  sub edx, 0x1
 808e619:  mov DWORD PTR [ebx], eax
 808e61b:  je 808e5ef
 808e61d:  lea esi, [esi]
 808e620:  cmp esi, ecx
 808e622:  jb 808e5e0
 808e624:  jmp 808e59b
 808e629:  lea esi, [esi]
 808e630:  sub ecx, 0x4
 808e633:  sub ebx, 0x4
 808e636:  mov eax, DWORD PTR [ecx]
 808e638:  cmp esi, ecx
 808e63a:  mov DWORD PTR [ebx], eax
 808e63c:  jae 808e59b
 808e642:  sub ecx, 0x4
 808e645:  sub ebx, 0x4
 808e648:  mov eax, DWORD PTR [ecx]
 808e64a:  cmp esi, ecx
 808e64c:  mov DWORD PTR [ebx], eax
 808e64e:  jb 808e630
 808e650:  jmp 808e59b
 808e655:  lea esi, [esi]
 808e658:  movsx edx, BYTE PTR [edi-0x1]
 808e65c:  jmp 808e5e0
 808e65e:  xchg ax, ax

0808e660 <_i18n_number_rewrite>:
 808e660:  push ebp
 808e661:  mov ebp, esp
 808e663:  push edi
 808e664:  mov edi, eax
 808e666:  push esi
 808e667:  push ebx
 808e668:  mov ebx, edx
 808e66a:  sub esp, 0x28
 808e66d:  sub ebx, edi
 808e66f:  mov DWORD PTR [ebp-0x24], ecx
 808e672:  and ebx, 0xfc
 808e675:  mov DWORD PTR [esp], 0x80b0da4
 808e67c:  call 8074460
 808e681:  mov DWORD PTR [esp], 0x2e
 808e688:  mov DWORD PTR [ebp-0x20], eax
 808e68b:  mov DWORD PTR [esp+0x4], eax
 808e68f:  call 80744e0
 808e694:  mov DWORD PTR [esp], 0x2c
 808e69b:  mov DWORD PTR [ebp-0x1c], eax
 808e69e:  mov eax, DWORD PTR [ebp-0x20]
 808e6a1:  mov DWORD PTR [esp+0x4], eax
 808e6a5:  call 80744e0
 808e6aa:  cmp ebx, 0x1000
 808e6b0:  mov DWORD PTR [ebp-0x18], eax
 808e6b3:  ja 808e750
 808e6b9:  lea eax, [ebx+0x10]
 808e6bc:  sub esp, eax
 808e6be:  lea esi, [esp+0x1f]
 808e6c2:  and esi, 0xf0
 808e6c5:  mov BYTE PTR [ebp-0x11], 0x1
 808e6c9:  mov DWORD PTR [esp+0x8], ebx
 808e6cd:  mov DWORD PTR [esp+0x4], edi
 808e6d1:  mov DWORD PTR [esp], esi
 808e6d4:  call 806c310
 808e6d9:  mov edx, 0xffffffd8
 808e6df:  mov ebx, eax
 808e6e1:  mov eax, gs:0x0
 808e6e7:  mov edx, DWORD PTR [eax+edx]
 808e6ea:  mov eax, DWORD PTR [ebp-0x20]
 808e6ed:  mov DWORD PTR [ebp-0x10], edx
 808e6f0:  test eax, eax
 808e6f2:  jne 808e778
 808e6f8:  mov ecx, DWORD PTR [ebp-0x24]
 808e6fb:  sub ecx, 0x4
 808e6fe:  jmp 808e717
 808e700:  mov edi, DWORD PTR [ebp-0x10]
 808e703:  add edx, 0x3
 808e706:  and edx, 0xffff
 808e70c:  mov eax, DWORD PTR [edi]
 808e70e:  mov eax, DWORD PTR [eax+edx*4+0x24]
 808e712:  mov DWORD PTR [ecx], eax
 808e714:  sub ecx, 0x4
 808e717:  sub ebx, 0x4
 808e71a:  cmp esi, ebx
 808e71c:  lea edi, [ecx+0x4]
 808e71f:  ja 808e730
 808e721:  mov edx, DWORD PTR [ebx]
 808e723:  lea eax, [edx-0x30]
 808e726:  cmp eax, 0x9
 808e729:  jbe 808e700
 808e72b:  mov DWORD PTR [ecx], edx
 808e72d:  jmp 808e714
 808e72f:  nop
 808e730:  cmp BYTE PTR [ebp-0x11], 0x0
 808e734:  jne 808e745
 808e736:  mov DWORD PTR [esp], esi
 808e739:  lea esi, [esi]
 808e740:  call 804b4a0
 808e745:  lea esp, [ebp-0xc]
 808e748:  mov eax, edi
 808e74a:  pop ebx
 808e74b:  pop esi
 808e74c:  pop edi
 808e74d:  pop ebp
 808e74e:  ret
 808e74f:  nop
 808e750:  mov DWORD PTR [esp], ebx
 808e753:  call 8074540
 808e758:  test eax, eax
 808e75a:  jne 808e6b9
 808e760:  mov DWORD PTR [esp], ebx
 808e763:  call 804d6f0
 808e768:  mov BYTE PTR [ebp-0x11], 0x0
 808e76c:  test eax, eax
 808e76e:  mov esi, eax
 808e770:  jne 808e6c9
 808e776:  jmp 808e745
 808e778:  mov ecx, DWORD PTR [ebp-0x24]
 808e77b:  nop
 808e77c:  lea esi, [esi]
 808e780:  sub ebx, 0x4
 808e783:  sub ecx, 0x4
 808e786:  cmp esi, ebx
 808e788:  lea edi, [ecx+0x4]
 808e78b:  ja 808e730
 808e78d:  mov edx, DWORD PTR [ebx]
 808e78f:  lea eax, [edx-0x30]
 808e792:  cmp eax, 0x9
 808e795:  ja 808e7ad
 808e797:  mov edi, DWORD PTR [ebp-0x10]
 808e79a:  add edx, 0x3
 808e79d:  and edx, 0xffff
 808e7a3:  mov eax, DWORD PTR [edi]
 808e7a5:  mov eax, DWORD PTR [eax+edx*4+0x24]
 808e7a9:  mov DWORD PTR [ecx], eax
 808e7ab:  jmp 808e780
 808e7ad:  cmp edx, 0x2e
 808e7b0:  je 808e7c2
 808e7b2:  cmp edx, 0x2c
 808e7b5:  je 808e7ca
 808e7b7:  mov DWORD PTR [ecx], edx
 808e7b9:  lea esi, [esi]
 808e7c0:  jmp 808e780
 808e7c2:  mov eax, DWORD PTR [ebp-0x1c]
 808e7c5:  mov DWORD PTR [ecx], eax
 808e7c7:  nop
 808e7c8:  jmp 808e780
 808e7ca:  mov eax, DWORD PTR [ebp-0x18]
 808e7cd:  mov DWORD PTR [ecx], eax
 808e7cf:  jmp 808e780
 808e7d1:  jmp 808e7e0
 808e7d3:  nop
 808e7d4:  nop
 808e7d5:  nop
 808e7d6:  nop
 808e7d7:  nop
 808e7d8:  nop
 808e7d9:  nop
 808e7da:  nop
 808e7db:  nop
 808e7dc:  nop
 808e7dd:  nop
 808e7de:  nop
 808e7df:  nop

0808e7e0 <_IO_vfwprintf>:
 808e7e0:  push ebp
 808e7e1:  mov eax, gs:0x0
 808e7e7:  mov ebp, esp
 808e7e9:  sub esp, 0x1178
 808e7ef:  mov DWORD PTR [ebp-0xc], ebx
 808e7f2:  mov ebx, 0xffffffe8
 808e7f8:  mov DWORD PTR [ebp-0x4], edi
 808e7fb:  mov ecx, DWORD PTR [ebp+0x8]
 808e7fe:  mov edi, 0xffffffff
 808e803:  mov DWORD PTR [ebp-0x8], esi
 808e806:  mov DWORD PTR [ebp-0x1148], eax
 808e80c:  mov edx, DWORD PTR [eax+ebx]
 808e80f:  mov DWORD PTR [esp+0x4], 0x1
 808e817:  mov DWORD PTR [esp], ecx
 808e81a:  mov DWORD PTR [ebp-0x10f0], edx
 808e820:  call 8065440
 808e825:  sub eax, 0x1
 808e828:  je 808e840
 808e82a:  mov eax, edi
 808e82c:  mov ebx, DWORD PTR [ebp-0xc]
 808e82f:  mov esi, DWORD PTR [ebp-0x8]
 808e832:  mov edi, DWORD PTR [ebp-0x4]
 808e835:  mov esp, ebp
 808e837:  pop ebp
 808e838:  ret
 808e839:  lea esi, [esi]
 808e840:  mov esi, DWORD PTR [ebp+0x8]
 808e843:  test BYTE PTR [esi], 0x8
 808e846:  jne 8090ab8
 808e84c:  mov eax, DWORD PTR [ebp+0xc]
 808e84f:  test eax, eax
 808e851:  je 808ea68
 808e857:  mov ecx, DWORD PTR [ebp+0x8]
 808e85a:  mov edi, 0xffffffff
 808e85f:  mov DWORD PTR [esp+0x4], 0x1
 808e867:  mov DWORD PTR [esp], ecx
 808e86a:  call 8065440
 808e86f:  sub eax, 0x1
 808e872:  jne 808e82a
 808e874:  mov esi, DWORD PTR [ebp+0x8]
 808e877:  mov ebx, DWORD PTR [esi]
 808e879:  test bl, 0x2
 808e87c:  jne 808ea80
 808e882:  mov eax, DWORD PTR [ebp+0xc]
 808e885:  mov DWORD PTR [esp+0x4], 0x25
 808e88d:  mov DWORD PTR [esp], eax
 808e890:  call 80946e0
 808e895:  test bx, bx
 808e898:  mov DWORD PTR [ebp-0x10e8], 0x0
 808e8a2:  mov DWORD PTR [ebp-0x1104], eax
 808e8a8:  js 808e915
 808e8aa:  mov eax, 0x0
 808e8af:  test eax, eax
 808e8b1:  setne al
 808e8b4:  movzx eax, al
 808e8b7:  test eax, eax
 808e8b9:  mov DWORD PTR [ebp-0x10e8], eax
 808e8bf:  jne 8090acf
 808e8c5:  mov esi, DWORD PTR [ebp+0x8]
 808e8c8:  mov DWORD PTR [ebp-0x50], 0x8061830
 808e8cf:  mov DWORD PTR [ebp-0x4c], esi
 808e8d2:  test bx, bx
 808e8d5:  js 808e915
 808e8d7:  mov eax, DWORD PTR [ebp+0x8]
 808e8da:  mov ebx, DWORD PTR gs:0x8
 808e8e1:  mov esi, DWORD PTR [eax+0x48]
 808e8e4:  cmp DWORD PTR [esi+0x8], ebx
 808e8e7:  je 808e911
 808e8e9:  xor edx, edx
 808e8eb:  mov ecx, 0x1
 808e8f0:  mov eax, edx
 808e8f2:  cmp DWORD PTR gs:0xc, 0x0
 808e8fa:  je 808e8fd
 808e8fc:  cmpxchg DWORD PTR [esi], ecx
 808e900:  jne 80930b9
 808e906:  mov edx, DWORD PTR [ebp+0x8]
 808e909:  mov eax, DWORD PTR [edx+0x48]
 808e90c:  mov DWORD PTR [eax+0x8], ebx
 808e90f:  mov esi, eax
 808e911:  add DWORD PTR [esi+0x4], 0x1
 808e915:  mov ecx, DWORD PTR [ebp+0x8]
 808e918:  mov edi, DWORD PTR [ebp-0x1104]
 808e91e:  sub edi, DWORD PTR [ebp+0xc]
 808e921:  mov ebx, DWORD PTR [ebp+0xc]
 808e924:  mov eax, DWORD PTR [ecx+0x94]
 808e92a:  sar edi, 0x2
 808e92d:  mov DWORD PTR [esp+0x8], edi
 808e931:  mov DWORD PTR [esp+0x4], ebx
 808e935:  mov DWORD PTR [esp], ecx
 808e938:  call DWORD PTR [eax+0x1c]
 808e93b:  cmp edi, eax
 808e93d:  jne 8090aa8
 808e943:  cmp edi, 0x7fffffff
 808e949:  ja 8090aa8
 808e94f:  mov esi, DWORD PTR [ebp-0x1104]
 808e955:  mov eax, DWORD PTR [esi]
 808e957:  test eax, eax
 808e959:  je 8090980
 808e95f:  mov eax, DWORD PTR [ebp+0x10]
 808e962:  mov edx, esi
 808e964:  mov ecx, esi
 808e966:  mov DWORD PTR [ebp-0x1110], 0x0
 808e970:  mov DWORD PTR [ebp-0x110c], 0xffffffff
 808e97a:  mov DWORD PTR [ebp-0x10f4], 0x0
 808e984:  mov DWORD PTR [ebp-0x10f8], eax
 808e98a:  mov DWORD PTR [ebp-0x10ec], 0x0
 808e994:  add edx, 0x4
 808e997:  mov DWORD PTR [ebp-0x1108], edx
 808e99d:  mov edx, DWORD PTR [ecx+0x4]
 808e9a0:  mov ecx, 0x808f918
 808e9a5:  lea eax, [edx-0x20]
 808e9a8:  cmp eax, 0x5a
 808e9ab:  ja 808e9bb
 808e9ad:  mov eax, DWORD PTR [eax*4+0x80c50a0]
 808e9b4:  mov ecx, DWORD PTR [eax*4+0x80c5020]
 808e9bb:  mov ebx, DWORD PTR [ebp+0x10]
 808e9be:  lea esi, [ebp-0x64]
 808e9c1:  mov DWORD PTR [ebp-0x10ac], edx
 808e9c7:  mov DWORD PTR [ebp-0x10fc], esi
 808e9cd:  mov DWORD PTR [ebp-0x1100], 0x0
 808e9d7:  mov DWORD PTR [ebp-0x1018], ebx
 808e9dd:  mov DWORD PTR [ebp-0x10dc], 0x0
 808e9e7:  mov DWORD PTR [ebp-0x10d8], 0x0
 808e9f1:  mov DWORD PTR [ebp-0x10d4], 0x0
 808e9fb:  mov DWORD PTR [ebp-0x10d0], 0x0
 808ea05:  mov DWORD PTR [ebp-0x10cc], 0x0
 808ea0f:  mov DWORD PTR [ebp-0x10c8], 0x0
 808ea19:  mov DWORD PTR [ebp-0x10c4], 0x0
 808ea23:  mov DWORD PTR [ebp-0x10c0], 0x0
 808ea2d:  mov DWORD PTR [ebp-0x10bc], 0x0
 808ea37:  mov DWORD PTR [ebp-0x1020], 0x0
 808ea41:  mov DWORD PTR [ebp-0x1008], 0xffffffff
 808ea4b:  mov DWORD PTR [ebp-0x10b4], 0x0
 808ea55:  mov DWORD PTR [ebp-0x10b0], 0x20
 808ea5f:  jmp ecx
 808ea61:  lea esi, [esi]
 808ea68:  mov edx, DWORD PTR [ebp-0x1148]
 808ea6e:  mov edi, 0xffffffff
 808ea73:  mov DWORD PTR [edx+ebx], 0x16
 808ea7a:  jmp 808e82a
 808ea7f:  nop
 808ea80:  mov ecx, DWORD PTR [ebp+0x10]
 808ea83:  mov eax, esi
 808ea85:  mov edx, DWORD PTR [ebp+0xc]
 808ea88:  call 8092ee0
 808ea8d:  mov edi, eax
 808ea8f:  jmp 808e82a
 808ea94:  mov esi, DWORD PTR [ebp-0x1020]
 808ea9a:  mov ecx, DWORD PTR [ebp-0x10d4]
 808eaa0:  sub esi, 0x1
 808eaa3:  test ecx, ecx
 808eaa5:  jne 808eae2
 808eaa7:  test esi, esi
 808eaa9:  jle 808eae2
 808eaab:  mov edx, DWORD PTR [ebp+0x8]
 808eaae:  mov DWORD PTR [esp+0x8], esi
 808eab2:  mov DWORD PTR [esp+0x4], 0x20
 808eaba:  mov DWORD PTR [esp], edx
 808eabd:  call 8062c50
 808eac2:  cmp edi, 0x7ffffffe
 808eac8:  mov edx, eax
 808eaca:  ja 808f719
 808ead0:  mov eax, 0x7fffffff
 808ead5:  sub eax, edi
 808ead7:  cmp edx, eax
 808ead9:  ja 8090967
 808eadf:  lea edi, [edx+edi]
 808eae2:  mov ebx, DWORD PTR [ebp-0x1018]
 808eae8:  mov eax, DWORD PTR [ebp+0x8]
 808eaeb:  mov ecx, DWORD PTR [ebp-0x1018]
 808eaf1:  mov edx, DWORD PTR [ebx]
 808eaf3:  mov ebx, DWORD PTR [eax+0x58]
 808eaf6:  add ecx, 0x4
 808eaf9:  mov DWORD PTR [ebp+0x10], ecx
 808eafc:  mov eax, DWORD PTR [ebx+0x10]
 808eaff:  cmp eax, DWORD PTR [ebx+0x14]
 808eb02:  jae 8092a1e
 808eb08:  mov DWORD PTR [eax], edx
 808eb0a:  add eax, 0x4
 808eb0d:  add edx, 0x1
 808eb10:  mov DWORD PTR [ebx+0x10], eax
 808eb13:  je 8090967
 808eb19:  cmp edi, 0x7fffffff
 808eb1f:  je 8090967
 808eb25:  mov edx, DWORD PTR [ebp-0x10d4]
 808eb2b:  add edi, 0x1
 808eb2e:  test edx, edx
 808eb30:  je 808eb6d
 808eb32:  test esi, esi
 808eb34:  jle 808eb6d
 808eb36:  mov ecx, DWORD PTR [ebp+0x8]
 808eb39:  mov DWORD PTR [esp+0x8], esi
 808eb3d:  mov DWORD PTR [esp+0x4], 0x20
 808eb45:  mov DWORD PTR [esp], ecx
 808eb48:  call 8062c50
 808eb4d:  cmp edi, 0x7ffffffe
 808eb53:  mov edx, eax
 808eb55:  ja 808f719
 808eb5b:  mov eax, 0x7fffffff
 808eb60:  sub eax, edi
 808eb62:  cmp edx, eax
 808eb64:  ja 8090967
 808eb6a:  lea edi, [edx+edi]
 808eb6d:  mov ebx, DWORD PTR [ebp-0x1100]
 808eb73:  test ebx, ebx
 808eb75:  jne 8092690
 808eb7b:  mov esi, DWORD PTR [ebp-0x1108]
 808eb81:  mov DWORD PTR [esp+0x4], 0x25
 808eb89:  add esi, 0x4
 808eb8c:  mov DWORD PTR [esp], esi
 808eb8f:  call 80946e0
 808eb94:  test edi, edi
 808eb96:  mov DWORD PTR [ebp-0x104c], eax
 808eb9c:  js 809266c
 808eba2:  mov edx, DWORD PTR [ebp+0x8]
 808eba5:  mov ebx, eax
 808eba7:  mov DWORD PTR [ebp-0x1010], eax
 808ebad:  sub ebx, esi
 808ebaf:  sar ebx, 0x2
 808ebb2:  mov eax, DWORD PTR [edx+0x94]
 808ebb8:  mov DWORD PTR [esp+0x8], ebx
 808ebbc:  mov DWORD PTR [esp+0x4], esi
 808ebc0:  mov DWORD PTR [esp], edx
 808ebc3:  call DWORD PTR [eax+0x1c]
 808ebc6:  cmp ebx, eax
 808ebc8:  jne 8090aa8
 808ebce:  mov eax, 0x7fffffff
 808ebd3:  sub eax, edi
 808ebd5:  cmp ebx, eax
 808ebd7:  ja 8090aa8
 808ebdd:  mov ecx, DWORD PTR [ebp-0x104c]
 808ebe3:  add edi, ebx
 808ebe5:  mov ecx, DWORD PTR [ecx]
 808ebe7:  test ecx, ecx
 808ebe9:  je 8090980
 808ebef:  add DWORD PTR [ebp-0x10f4], 0x1
 808ebf6:  mov edx, DWORD PTR [ebp-0x1010]
 808ebfc:  mov ecx, DWORD PTR [ebp-0x1010]
 808ec02:  jmp 808e994
 808ec07:  mov ebx, DWORD PTR [ebp-0x1064]
 808ec0d:  mov esi, DWORD PTR [ebp-0x1080]
 808ec13:  sub ebx, 0x1
 808ec16:  test esi, esi
 808ec18:  mov DWORD PTR [ebp-0x1014], ebx
 808ec1e:  jne 808ec5b
 808ec20:  test ebx, ebx
 808ec22:  jle 808ec5b
 808ec24:  mov esi, DWORD PTR [ebp+0x8]
 808ec27:  mov DWORD PTR [esp+0x8], ebx
 808ec2b:  mov DWORD PTR [esp+0x4], 0x20
 808ec33:  mov DWORD PTR [esp], esi
 808ec36:  call 8062c50
 808ec3b:  cmp edi, 0x7ffffffe
 808ec41:  mov edx, eax
 808ec43:  ja 8092cc2
 808ec49:  mov eax, 0x7fffffff
 808ec4e:  sub eax, edi
 808ec50:  cmp edx, eax
 808ec52:  ja 8090967
 808ec58:  lea edi, [edx+edi]
 808ec5b:  mov eax, DWORD PTR [ebp-0x10f4]
 808ec61:  lea edx, [eax+eax*2]
 808ec64:  mov eax, DWORD PTR [ebp-0x109c]
 808ec6a:  shl edx, 0x4
 808ec6d:  add eax, edx
 808ec6f:  test eax, eax
 808ec71:  je 80925a1
 808ec77:  mov ecx, DWORD PTR [ebp-0x109c]
 808ec7d:  mov esi, DWORD PTR [ebp+0x8]
 808ec80:  mov ebx, DWORD PTR [ebp-0x1094]
 808ec86:  mov eax, DWORD PTR [ecx+edx+0x24]
 808ec8a:  mov edx, DWORD PTR [esi+0x58]
 808ec8d:  lea eax, [eax+eax*2]
 808ec90:  mov ecx, DWORD PTR [ebx+eax*4]
 808ec93:  mov eax, DWORD PTR [edx+0x10]
 808ec96:  cmp eax, DWORD PTR [edx+0x14]
 808ec99:  jae 8092ac5
 808ec9f:  mov DWORD PTR [eax], ecx
 808eca1:  add eax, 0x4
 808eca4:  add ecx, 0x1
 808eca7:  mov DWORD PTR [edx+0x10], eax
 808ecaa:  je 8090967
 808ecb0:  cmp edi, 0x7fffffff
 808ecb6:  je 8090967
 808ecbc:  mov esi, DWORD PTR [ebp-0x1018]
 808ecc2:  add edi, 0x1
 808ecc5:  mov ecx, DWORD PTR [ebp-0x1080]
 808eccb:  test ecx, ecx
 808eccd:  je 80913e8
 808ecd3:  mov edx, DWORD PTR [ebp-0x1014]
 808ecd9:  test edx, edx
 808ecdb:  jle 80913e8
 808ece1:  mov edx, DWORD PTR [ebp+0x8]
 808ece4:  mov eax, DWORD PTR [ebp-0x1014]
 808ecea:  mov DWORD PTR [esp+0x4], 0x20
 808ecf2:  mov DWORD PTR [esp], edx
 808ecf5:  mov DWORD PTR [esp+0x8], eax
 808ecf9:  call 8062c50
 808ecfe:  cmp edi, 0x7ffffffe
 808ed04:  mov edx, eax
 808ed06:  ja 8092cc2
 808ed0c:  mov eax, 0x7fffffff
 808ed11:  sub eax, edi
 808ed13:  cmp edx, eax
 808ed15:  ja 8090967
 808ed1b:  lea edi, [edx+edi]
 808ed1e:  mov DWORD PTR [ebp-0x1018], esi
 808ed24:  lea esi, [esi]
 808ed28:  mov edx, DWORD PTR [ebp-0x1100]
 808ed2e:  mov DWORD PTR [esp], edx
 808ed31:  call 804b4a0
 808ed36:  test edi, edi
 808ed38:  js 8092632
 808ed3e:  mov ecx, DWORD PTR [ebp-0x10f4]
 808ed44:  mov esi, DWORD PTR [ebp+0x8]
 808ed47:  lea ebx, [ecx+ecx*2]
 808ed4a:  shl ebx, 0x4
 808ed4d:  mov ecx, DWORD PTR [esi+0x94]
 808ed53:  add ebx, DWORD PTR [ebp-0x109c]
 808ed59:  mov edx, DWORD PTR [ebx+0x14]
 808ed5c:  mov eax, DWORD PTR [ebx+0x18]
 808ed5f:  mov DWORD PTR [esp], esi
 808ed62:  mov DWORD PTR [esp+0x4], edx
 808ed66:  sub eax, edx
 808ed68:  sar eax, 0x2
 808ed6b:  mov DWORD PTR [esp+0x8], eax
 808ed6f:  call DWORD PTR [ecx+0x1c]
 808ed72:  mov edx, eax
 808ed74:  mov eax, DWORD PTR [ebx+0x18]
 808ed77:  sub eax, DWORD PTR [ebx+0x14]
 808ed7a:  sar eax, 0x2
 808ed7d:  cmp edx, eax
 808ed7f:  jne 8090aa8
 808ed85:  mov eax, 0x7fffffff
 808ed8a:  sub eax, edi
 808ed8c:  cmp edx, eax
 808ed8e:  ja 8090aa8
 808ed94:  add DWORD PTR [ebp-0x10f4], 0x1
 808ed9b:  add edi, edx
 808ed9d:  mov esi, DWORD PTR [ebp-0x10f8]
 808eda3:  mov eax, DWORD PTR [ebp-0x10f4]
 808eda9:  cmp DWORD PTR [ebp-0x10a4], eax
 808edaf:  jbe 8090980
 808edb5:  mov ebx, DWORD PTR [ebp-0x109c]
 808edbb:  lea eax, [eax+eax*2]
 808edbe:  shl eax, 0x4
 808edc1:  add ebx, eax
 808edc3:  movzx ecx, BYTE PTR [ebx+0xc]
 808edc7:  mov eax, ecx
 808edc9:  shr al, 0x3
 808edcc:  mov edx, eax
 808edce:  mov eax, ecx
 808edd0:  and edx, 0x1
 808edd3:  shr al, 0x4
 808edd6:  mov DWORD PTR [ebp-0x1088], edx
 808eddc:  mov edx, eax
 808edde:  mov eax, ecx
 808ede0:  and edx, 0x1
 808ede3:  shr al, 0x5
 808ede6:  mov DWORD PTR [ebp-0x1084], edx
 808edec:  mov edx, eax
 808edee:  mov eax, ecx
 808edf0:  and edx, 0x1
 808edf3:  shr al, 0x6
 808edf6:  mov DWORD PTR [ebp-0x1080], edx
 808edfc:  mov edx, eax
 808edfe:  mov eax, ecx
 808ee00:  shr al, 0x7
 808ee03:  and edx, 0x1
 808ee06:  movzx eax, al
 808ee09:  mov DWORD PTR [ebp-0x1078], eax
 808ee0f:  mov eax, ecx
 808ee11:  and eax, 0x1
 808ee14:  mov DWORD PTR [ebp-0x1074], eax
 808ee1a:  mov eax, ecx
 808ee1c:  shr al, 1
 808ee1e:  mov DWORD PTR [ebp-0x107c], edx
 808ee24:  mov edx, eax
 808ee26:  and edx, 0x1
 808ee29:  mov DWORD PTR [ebp-0x1070], edx
 808ee2f:  movzx edx, BYTE PTR [ebx+0xd]
 808ee33:  shr dl, 1
 808ee35:  mov eax, edx
 808ee37:  and eax, 0x1
 808ee3a:  mov DWORD PTR [ebp-0x106c], eax
 808ee40:  mov eax, ecx
 808ee42:  shr al, 0x2
 808ee45:  and eax, 0x1
 808ee48:  mov DWORD PTR [ebp-0x1068], eax
 808ee4e:  mov eax, DWORD PTR [ebx+0x4]
 808ee51:  shr dl, 0x2
 808ee54:  mov DWORD PTR [ebp-0x1064], eax
 808ee5a:  mov eax, DWORD PTR [ebx]
 808ee5c:  mov DWORD PTR [ebp-0x1060], eax
 808ee62:  mov eax, edx
 808ee64:  movzx edx, BYTE PTR [ebx+0x10]
 808ee68:  and eax, 0x1
 808ee6b:  mov DWORD PTR [ebp-0x105c], eax
 808ee71:  mov eax, DWORD PTR [ebx+0x8]
 808ee74:  mov BYTE PTR [ebp-0x1055], dl
 808ee7a:  mov DWORD PTR [ebp-0x1054], eax
 808ee80:  mov eax, DWORD PTR [ebx+0x20]
 808ee83:  cmp eax, 0xff
 808ee86:  je 808eea8
 808ee88:  mov edx, DWORD PTR [ebp-0x1094]
 808ee8e:  lea eax, [eax+eax*2]
 808ee91:  mov eax, DWORD PTR [edx+eax*4]
 808ee94:  test eax, eax
 808ee96:  mov DWORD PTR [ebx+0x4], eax
 808ee99:  js 8090af3
 808ee9f:  mov ecx, DWORD PTR [ebx+0x4]
 808eea2:  mov DWORD PTR [ebp-0x1064], ecx
 808eea8:  mov eax, DWORD PTR [ebx+0x1c]
 808eeab:  cmp eax, 0xff
 808eeae:  je 808eecb
 808eeb0:  mov ecx, DWORD PTR [ebp-0x1094]
 808eeb6:  lea eax, [eax+eax*2]
 808eeb9:  mov edx, DWORD PTR [ecx+eax*4]
 808eebc:  mov eax, edx
 808eebe:  sar eax, 0x1f
 808eec1:  or eax, edx
 808eec3:  mov DWORD PTR [ebx], eax
 808eec5:  mov DWORD PTR [ebp-0x1060], eax
 808eecb:  mov eax, DWORD PTR [ebp-0x1060]
 808eed1:  mov ebx, DWORD PTR [ebp-0x1064]
 808eed7:  cmp eax, ebx
 808eed9:  jge 808eedd
 808eedb:  mov eax, ebx
 808eedd:  lea edx, [ebp-0x64]
 808eee0:  cmp eax, 0x3c8
 808eee5:  mov DWORD PTR [ebp-0x10fc], edx
 808eeeb:  mov DWORD PTR [ebp-0x1100], 0x0
 808eef5:  jle 808ef36
 808eef7:  add eax, 0x20
 808eefa:  mov ebx, eax
 808eefc:  shl ebx, 0x2
 808eeff:  cmp ebx, 0x1000
 808ef05:  mov DWORD PTR [ebp-0x1144], eax
 808ef0b:  ja 8090f3e
 808ef11:  lea eax, [ebx+0x10]
 808ef14:  mov ecx, DWORD PTR [ebp-0x1144]
 808ef1a:  sub esp, eax
 808ef1c:  lea eax, [esp+0x23]
 808ef20:  and eax, 0xf0
 808ef23:  lea eax, [eax+ecx*4]
 808ef26:  mov DWORD PTR [ebp-0x10fc], eax
 808ef2c:  mov DWORD PTR [ebp-0x1100], 0x0
 808ef36:  mov eax, DWORD PTR [ebp-0x1054]
 808ef3c:  mov ecx, 0x8090531
 808ef41:  mov ebx, DWORD PTR [ebp-0x1018]
 808ef47:  sub eax, 0x20
 808ef4a:  cmp eax, 0x5a
 808ef4d:  ja 808ef5d
 808ef4f:  mov eax, DWORD PTR [eax*4+0x80c50a0]
 808ef56:  mov ecx, DWORD PTR [eax*4+0x80c4d20]
 808ef5d:  mov DWORD PTR [ebp-0x1018], ebx
 808ef63:  mov DWORD PTR [ebp-0x10f8], esi
 808ef69:  jmp ecx
 808ef6b:  mov eax, DWORD PTR [ebp-0x1068]
 808ef71:  test eax, eax
 808ef73:  jne 808ec07
 808ef79:  mov ebx, DWORD PTR [ebp-0x1064]
 808ef7f:  mov eax, DWORD PTR [ebp-0x1080]
 808ef85:  sub ebx, 0x1
 808ef88:  test eax, eax
 808ef8a:  jne 808efc7
 808ef8c:  test ebx, ebx
 808ef8e:  jle 808efc7
 808ef90:  mov esi, DWORD PTR [ebp+0x8]
 808ef93:  mov DWORD PTR [esp+0x8], ebx
 808ef97:  mov DWORD PTR [esp+0x4], 0x20
 808ef9f:  mov DWORD PTR [esp], esi
 808efa2:  call 8062c50
 808efa7:  cmp edi, 0x7ffffffe
 808efad:  mov edx, eax
 808efaf:  ja 8092cc2
 808efb5:  mov eax, 0x7fffffff
 808efba:  sub eax, edi
 808efbc:  cmp edx, eax
 808efbe:  ja 8090967
 808efc4:  lea edi, [edx+edi]
 808efc7:  mov eax, DWORD PTR [ebp-0x10f4]
 808efcd:  lea edx, [eax+eax*2]
 808efd0:  mov eax, DWORD PTR [ebp-0x109c]
 808efd6:  shl edx, 0x4
 808efd9:  add eax, edx
 808efdb:  test eax, eax
 808efdd:  je 8092928
 808efe3:  mov ecx, DWORD PTR [ebp-0x109c]
 808efe9:  mov esi, DWORD PTR [ebp-0x1094]
 808efef:  mov eax, DWORD PTR [ecx+edx+0x24]
 808eff3:  lea eax, [eax+eax*2]
 808eff6:  movzx eax, BYTE PTR [esi+eax*4]
 808effa:  mov DWORD PTR [esp], eax
 808effd:  call 8094510
 808f002:  mov ecx, eax
 808f004:  mov eax, DWORD PTR [ebp+0x8]
 808f007:  mov edx, DWORD PTR [eax+0x58]
 808f00a:  mov eax, DWORD PTR [edx+0x10]
 808f00d:  cmp eax, DWORD PTR [edx+0x14]
 808f010:  jae 8092c04
 808f016:  mov DWORD PTR [eax], ecx
 808f018:  add eax, 0x4
 808f01b:  add ecx, 0x1
 808f01e:  mov DWORD PTR [edx+0x10], eax
 808f021:  je 8090967
 808f027:  cmp edi, 0x7fffffff
 808f02d:  je 8090967
 808f033:  add edi, 0x1
 808f036:  mov eax, DWORD PTR [ebp-0x1080]
 808f03c:  test eax, eax
 808f03e:  je 808ed28
 808f044:  test ebx, ebx
 808f046:  jle 808ed28
 808f04c:  mov ecx, DWORD PTR [ebp+0x8]
 808f04f:  mov DWORD PTR [esp+0x8], ebx
 808f053:  mov DWORD PTR [esp+0x4], 0x20
 808f05b:  mov DWORD PTR [esp], ecx
 808f05e:  call 8062c50
 808f063:  cmp edi, 0x7ffffffe
 808f069:  mov edx, eax
 808f06b:  ja 8092cc2
 808f071:  mov eax, 0x7fffffff
 808f076:  sub eax, edi
 808f078:  cmp edx, eax
 808f07a:  ja 8090967
 808f080:  lea edi, [edx+edi]
 808f083:  jmp 808ed28
 808f088:  add DWORD PTR [ebp-0x1108], 0x4
 808f08f:  mov eax, DWORD PTR [ebp-0x1108]
 808f095:  mov eax, DWORD PTR [eax]
 808f097:  mov DWORD PTR [ebp-0x10ac], eax
 808f09d:  sub eax, 0x20
 808f0a0:  cmp eax, 0x5a
 808f0a3:  ja 80918bf
 808f0a9:  mov eax, DWORD PTR [eax*4+0x80c50a0]
 808f0b0:  mov ebx, DWORD PTR [ebp-0x1018]
 808f0b6:  mov esi, DWORD PTR [ebp-0x10f8]
 808f0bc:  mov DWORD PTR [ebp-0x10d8], 0x1
 808f0c6:  mov ecx, DWORD PTR [eax*4+0x80c5020]
 808f0cd:  jmp 808ef5d
 808f0d2:  cmp DWORD PTR [ebp-0x110c], 0xff
 808f0d9:  je 80927e9
 808f0df:  add DWORD PTR [ebp-0x1108], 0x4
 808f0e6:  mov esi, DWORD PTR [ebp-0x1108]
 808f0ec:  mov esi, DWORD PTR [esi]
 808f0ee:  mov eax, esi
 808f0f0:  sub eax, 0x20
 808f0f3:  cmp eax, 0x5a
 808f0f6:  mov DWORD PTR [ebp-0x10ac], esi
 808f0fc:  jbe 809198d
 808f102:  mov ebx, DWORD PTR [ebp-0x1018]
 808f108:  mov ecx, 0x808f918
 808f10d:  mov esi, DWORD PTR [ebp-0x10f8]
 808f113:  mov DWORD PTR [ebp-0x10cc], 0x1
 808f11d:  jmp 808ef5d
 808f122:  add DWORD PTR [ebp-0x1108], 0x4
 808f129:  mov edx, DWORD PTR [ebp-0x1108]
 808f12f:  mov edx, DWORD PTR [edx]
 808f131:  mov eax, edx
 808f133:  sub eax, 0x20
 808f136:  cmp eax, 0x5a
 808f139:  mov DWORD PTR [ebp-0x10ac], edx
 808f13f:  jbe 8091964
 808f145:  mov ebx, DWORD PTR [ebp-0x1018]
 808f14b:  mov ecx, 0x808f918
 808f150:  mov esi, DWORD PTR [ebp-0x10f8]
 808f156:  mov DWORD PTR [ebp-0x10d0], 0x1
 808f160:  jmp 808ef5d
 808f165:  add DWORD PTR [ebp-0x1108], 0x4
 808f16c:  mov ecx, DWORD PTR [ebp-0x1108]
 808f172:  mov ecx, DWORD PTR [ecx]
 808f174:  mov eax, ecx
 808f176:  sub eax, 0x20
 808f179:  cmp eax, 0x5a
 808f17c:  mov DWORD PTR [ebp-0x10ac], ecx
 808f182:  jbe 8091863
 808f188:  mov ebx, DWORD PTR [ebp-0x1018]
 808f18e:  mov ecx, 0x808f918
 808f193:  mov esi, DWORD PTR [ebp-0x10f8]
 808f199:  mov DWORD PTR [ebp-0x10d4], 0x1
 808f1a3:  mov DWORD PTR [ebp-0x10b0], 0x20
 808f1ad:  jmp 808ef5d
 808f1b2:  add DWORD PTR [ebp-0x1108], 0x4
 808f1b9:  mov ebx, DWORD PTR [ebp-0x1108]
 808f1bf:  mov esi, DWORD PTR [ebx]
 808f1c1:  cmp esi, 0x2a
 808f1c4:  je 8091f1e
 808f1ca:  lea eax, [esi-0x30]
 808f1cd:  mov ebx, DWORD PTR [ebp-0x1018]
 808f1d3:  cmp eax, 0x9
 808f1d6:  mov DWORD PTR [ebp-0x1008], 0x0
 808f1e0:  ja 808f28d
 808f1e6:  add DWORD PTR [ebp-0x1108], 0x4
 808f1ed:  mov ebx, DWORD PTR [ebp-0x1108]
 808f1f3:  mov esi, DWORD PTR [ebx]
 808f1f5:  lea edx, [esi-0x30]
 808f1f8:  cmp edx, 0x9
 808f1fb:  ja 808f21a
 808f1fd:  add DWORD PTR [ebp-0x1108], 0x4
 808f204:  lea eax, [eax+eax*4]
 808f207:  lea eax, [edx+eax*2]
 808f20a:  mov edx, DWORD PTR [ebp-0x1108]
 808f210:  mov esi, DWORD PTR [edx]
 808f212:  lea edx, [esi-0x30]
 808f215:  cmp edx, 0x9
 808f218:  jbe 808f1fd
 808f21a:  mov DWORD PTR [ebp-0x1008], eax
 808f220:  mov ecx, DWORD PTR [ebp-0x1020]
 808f226:  cmp DWORD PTR [ebp-0x1008], ecx
 808f22c:  jle 80920f0
 808f232:  cmp DWORD PTR [ebp-0x1008], 0x3c8
 808f23c:  jle 80920f0
 808f242:  cmp DWORD PTR [ebp-0x1008], 0x3fffffe0
 808f24c:  ja 8090967
 808f252:  mov edx, DWORD PTR [ebp-0x1008]
 808f258:  lea ebx, [edx*4+0x80]
 808f25f:  cmp ebx, 0x1000
 808f265:  ja 80920be
 808f26b:  lea eax, [ebx+0x10]
 808f26e:  mov ecx, DWORD PTR [ebp-0x1108]
 808f274:  sub esp, eax
 808f276:  lea eax, [esp+0x23]
 808f27a:  and eax, 0xf0
 808f27d:  add eax, ebx
 808f27f:  mov esi, DWORD PTR [ecx]
 808f281:  mov ebx, DWORD PTR [ebp-0x1018]
 808f287:  mov DWORD PTR [ebp-0x10fc], eax
 808f28d:  mov eax, esi
 808f28f:  mov ecx, 0x808f918
 808f294:  sub eax, 0x20
 808f297:  cmp eax, 0x5a
 808f29a:  mov DWORD PTR [ebp-0x10ac], esi
 808f2a0:  mov esi, DWORD PTR [ebp-0x10f8]
 808f2a6:  ja 808ef5d
 808f2ac:  mov eax, DWORD PTR [eax*4+0x80c50a0]
 808f2b3:  mov esi, DWORD PTR [ebp-0x10f8]
 808f2b9:  mov ecx, DWORD PTR [eax*4+0x80c4f20]
 808f2c0:  jmp 808ef5d
 808f2c5:  add DWORD PTR [ebp-0x1108], 0x4
 808f2cc:  mov ebx, DWORD PTR [ebp-0x1108]
 808f2d2:  mov ebx, DWORD PTR [ebx]
 808f2d4:  mov eax, ebx
 808f2d6:  sub eax, 0x20
 808f2d9:  cmp eax, 0x5a
 808f2dc:  mov DWORD PTR [ebp-0x10ac], ebx
 808f2e2:  jbe 8091912
 808f2e8:  mov ebx, DWORD PTR [ebp-0x1018]
 808f2ee:  mov ecx, 0x808f918
 808f2f3:  mov esi, DWORD PTR [ebp-0x10f8]
 808f2f9:  mov DWORD PTR [ebp-0x10dc], 0x1
 808f303:  jmp 808ef5d
 808f308:  add DWORD PTR [ebp-0x1108], 0x4
 808f30f:  mov edx, DWORD PTR [ebp-0x1108]
 808f315:  mov esi, DWORD PTR [edx]
 808f317:  lea ebx, [esi-0x30]
 808f31a:  cmp ebx, 0x9
 808f31d:  ja 808f34f
 808f31f:  mov eax, DWORD PTR [edx+0x4]
 808f322:  mov ecx, edx
 808f324:  add ecx, 0x4
 808f327:  lea edx, [eax-0x30]
 808f32a:  cmp edx, 0x9
 808f32d:  ja 808f342
 808f32f:  lea eax, [ebx+ebx*4]
 808f332:  add ecx, 0x4
 808f335:  lea ebx, [edx+eax*2]
 808f338:  mov eax, DWORD PTR [ecx]
 808f33a:  lea edx, [eax-0x30]
 808f33d:  cmp edx, 0x9
 808f340:  jbe 808f32f
 808f342:  test ebx, ebx
 808f344:  je 808f34f
 808f346:  cmp eax, 0x24
 808f349:  je 808f926
 808f34f:  mov ecx, DWORD PTR [ebp-0x1018]
 808f355:  mov ebx, DWORD PTR [ebp-0x1018]
 808f35b:  mov ecx, DWORD PTR [ecx]
 808f35d:  add ebx, 0x4
 808f360:  test ecx, ecx
 808f362:  mov DWORD PTR [ebp-0x1020], ecx
 808f368:  jns 808f386
 808f36a:  neg ecx
 808f36c:  mov DWORD PTR [ebp-0x1020], ecx
 808f372:  mov DWORD PTR [ebp-0x10d4], 0x1
 808f37c:  mov DWORD PTR [ebp-0x10b0], 0x20
 808f386:  cmp DWORD PTR [ebp-0x1020], 0x3c7
 808f390:  jle 808f3d6
 808f392:  mov eax, DWORD PTR [ebp-0x1020]
 808f398:  add eax, 0x20
 808f39b:  mov DWORD PTR [ebp-0x114c], eax
 808f3a1:  shl eax, 0x2
 808f3a4:  cmp eax, 0x1000
 808f3a9:  mov DWORD PTR [ebp-0x111c], eax
 808f3af:  ja 809285b
 808f3b5:  mov eax, DWORD PTR [ebp-0x111c]
 808f3bb:  mov ecx, DWORD PTR [ebp-0x114c]
 808f3c1:  add eax, 0x10
 808f3c4:  sub esp, eax
 808f3c6:  lea eax, [esp+0x23]
 808f3ca:  and eax, 0xf0
 808f3cd:  lea eax, [eax+ecx*4]
 808f3d0:  mov DWORD PTR [ebp-0x10fc], eax
 808f3d6:  mov eax, esi
 808f3d8:  mov ecx, 0x808f918
 808f3dd:  sub eax, 0x20
 808f3e0:  cmp eax, 0x5a
 808f3e3:  mov DWORD PTR [ebp-0x10ac], esi
 808f3e9:  mov esi, DWORD PTR [ebp-0x10f8]
 808f3ef:  ja 808ef5d
 808f3f5:  mov eax, DWORD PTR [eax*4+0x80c50a0]
 808f3fc:  mov esi, DWORD PTR [ebp-0x10f8]
 808f402:  mov ecx, DWORD PTR [eax*4+0x80c4fa0]
 808f409:  jmp 808ef5d
 808f40e:  mov ebx, DWORD PTR [ebp-0x10d4]
 808f414:  test ebx, ebx
 808f416:  jne 808f422
 808f418:  mov DWORD PTR [ebp-0x10b0], 0x30
 808f422:  add DWORD PTR [ebp-0x1108], 0x4
 808f429:  mov esi, DWORD PTR [ebp-0x1108]
 808f42f:  mov esi, DWORD PTR [esi]
 808f431:  mov eax, esi
 808f433:  sub eax, 0x20
 808f436:  cmp eax, 0x5a
 808f439:  mov DWORD PTR [ebp-0x10ac], esi
 808f43f:  ja 80913d2
 808f445:  mov eax, DWORD PTR [eax*4+0x80c50a0]
 808f44c:  mov ebx, DWORD PTR [ebp-0x1018]
 808f452:  mov esi, DWORD PTR [ebp-0x10f8]
 808f458:  mov ecx, DWORD PTR [eax*4+0x80c5020]
 808f45f:  jmp 808ef5d
 808f464:  add DWORD PTR [ebp-0x1108], 0x4
 808f46b:  mov ecx, DWORD PTR [ebp-0x1108]
 808f471:  mov ecx, DWORD PTR [ecx]
 808f473:  mov eax, ecx
 808f475:  sub eax, 0x20
 808f478:  cmp eax, 0x5a
 808f47b:  mov DWORD PTR [ebp-0x10ac], ecx
 808f481:  jbe 80918df
 808f487:  mov ebx, DWORD PTR [ebp-0x1018]
 808f48d:  mov ecx, 0x808f918
 808f492:  mov esi, DWORD PTR [ebp-0x10f8]
 808f498:  mov DWORD PTR [ebp-0x10c4], 0x0
 808f4a2:  mov DWORD PTR [ebp-0x10bc], 0x1
 808f4ac:  jmp 808ef5d
 808f4b1:  add DWORD PTR [ebp-0x1108], 0x4
 808f4b8:  mov eax, DWORD PTR [ebp-0x1108]
 808f4be:  mov eax, DWORD PTR [eax]
 808f4c0:  mov DWORD PTR [ebp-0x10ac], eax
 808f4c6:  sub eax, 0x20
 808f4c9:  cmp eax, 0x5a
 808f4cc:  jbe 8091896
 808f4d2:  mov ebx, DWORD PTR [ebp-0x1018]
 808f4d8:  mov ecx, 0x808f918
 808f4dd:  mov esi, DWORD PTR [ebp-0x10f8]
 808f4e3:  mov DWORD PTR [ebp-0x10b4], 0x1
 808f4ed:  jmp 808ef5d
 808f4f2:  add DWORD PTR [ebp-0x1108], 0x4
 808f4f9:  mov edx, DWORD PTR [ebp-0x1108]
 808f4ff:  mov edx, DWORD PTR [edx]
 808f501:  mov eax, edx
 808f503:  sub eax, 0x20
 808f506:  cmp eax, 0x5a
 808f509:  mov DWORD PTR [ebp-0x10ac], edx
 808f50f:  jbe 809193b
 808f515:  mov ebx, DWORD PTR [ebp-0x1018]
 808f51b:  mov ecx, 0x808f918
 808f520:  mov esi, DWORD PTR [ebp-0x10f8]
 808f526:  mov DWORD PTR [ebp-0x10c4], 0x1
 808f530:  jmp 808ef5d
 808f535:  mov edx, DWORD PTR [ebp-0x1108]
 808f53b:  mov eax, DWORD PTR [edx]
 808f53d:  add edx, 0x4
 808f540:  mov esi, DWORD PTR [edx]
 808f542:  mov DWORD PTR [ebp-0x1108], edx
 808f548:  sub eax, 0x30
 808f54b:  lea edx, [esi-0x30]
 808f54e:  cmp edx, 0x9
 808f551:  ja 808f570
 808f553:  add DWORD PTR [ebp-0x1108], 0x4
 808f55a:  mov ecx, DWORD PTR [ebp-0x1108]
 808f560:  lea eax, [eax+eax*4]
 808f563:  lea eax, [edx+eax*2]
 808f566:  mov esi, DWORD PTR [ecx]
 808f568:  lea edx, [esi-0x30]
 808f56b:  cmp edx, 0x9
 808f56e:  jbe 808f553
 808f570:  cmp eax, 0x3c7
 808f575:  mov DWORD PTR [ebp-0x1020], eax
 808f57b:  jle 808f5b2
 808f57d:  add eax, 0x20
 808f580:  mov ebx, eax
 808f582:  shl ebx, 0x2
 808f585:  cmp ebx, 0x1000
 808f58b:  mov DWORD PTR [ebp-0x1140], eax
 808f591:  ja 8092584
 808f597:  lea eax, [ebx+0x10]
 808f59a:  mov edx, DWORD PTR [ebp-0x1140]
 808f5a0:  sub esp, eax
 808f5a2:  lea eax, [esp+0x23]
 808f5a6:  and eax, 0xf0
 808f5a9:  lea eax, [eax+edx*4]
 808f5ac:  mov DWORD PTR [ebp-0x10fc], eax
 808f5b2:  cmp esi, 0x24
 808f5b5:  je 808f926
 808f5bb:  mov eax, esi
 808f5bd:  sub eax, 0x20
 808f5c0:  cmp eax, 0x5a
 808f5c3:  mov DWORD PTR [ebp-0x10ac], esi
 808f5c9:  ja 80913d2
 808f5cf:  mov eax, DWORD PTR [eax*4+0x80c50a0]
 808f5d6:  mov ebx, DWORD PTR [ebp-0x1018]
 808f5dc:  mov esi, DWORD PTR [ebp-0x10f8]
 808f5e2:  mov ecx, DWORD PTR [eax*4+0x80c4fa0]
 808f5e9:  jmp 808ef5d
 808f5ee:  add DWORD PTR [ebp-0x1108], 0x4
 808f5f5:  mov ebx, DWORD PTR [ebp-0x1108]
 808f5fb:  mov ebx, DWORD PTR [ebx]
 808f5fd:  mov eax, ebx
 808f5ff:  sub eax, 0x20
 808f602:  cmp eax, 0x5a
 808f605:  mov DWORD PTR [ebp-0x10ac], ebx
 808f60b:  jbe 80919b6
 808f611:  mov ebx, DWORD PTR [ebp-0x1018]
 808f617:  mov ecx, 0x808f918
 808f61c:  mov esi, DWORD PTR [ebp-0x10f8]
 808f622:  mov DWORD PTR [ebp-0x10c0], 0x1
 808f62c:  jmp 808ef5d
 808f631:  mov eax, DWORD PTR [ebp-0x10c0]
 808f637:  test eax, eax
 808f639:  jne 808ea94
 808f63f:  mov ebx, DWORD PTR [ebp-0x1020]
 808f645:  mov eax, DWORD PTR [ebp-0x10d4]
 808f64b:  sub ebx, 0x1
 808f64e:  test eax, eax
 808f650:  jne 808f68d
 808f652:  test ebx, ebx
 808f654:  jle 808f68d
 808f656:  mov esi, DWORD PTR [ebp+0x8]
 808f659:  mov DWORD PTR [esp+0x8], ebx
 808f65d:  mov DWORD PTR [esp+0x4], 0x20
 808f665:  mov DWORD PTR [esp], esi
 808f668:  call 8062c50
 808f66d:  cmp edi, 0x7ffffffe
 808f673:  mov edx, eax
 808f675:  ja 808f719
 808f67b:  mov eax, 0x7fffffff
 808f680:  sub eax, edi
 808f682:  cmp edx, eax
 808f684:  ja 8090967
 808f68a:  lea edi, [edx+edi]
 808f68d:  mov eax, DWORD PTR [ebp-0x1018]
 808f693:  mov edx, DWORD PTR [ebp-0x1018]
 808f699:  add eax, 0x4
 808f69c:  mov DWORD PTR [ebp+0x10], eax
 808f69f:  movzx eax, BYTE PTR [edx]
 808f6a2:  mov DWORD PTR [esp], eax
 808f6a5:  call 8094510
 808f6aa:  mov esi, DWORD PTR [ebp+0x8]
 808f6ad:  mov edx, DWORD PTR [esi+0x58]
 808f6b0:  mov ecx, eax
 808f6b2:  mov eax, DWORD PTR [edx+0x10]
 808f6b5:  cmp eax, DWORD PTR [edx+0x14]
 808f6b8:  jae 8092a7a
 808f6be:  mov DWORD PTR [eax], ecx
 808f6c0:  add eax, 0x4
 808f6c3:  add ecx, 0x1
 808f6c6:  mov DWORD PTR [edx+0x10], eax
 808f6c9:  je 8090967
 808f6cf:  cmp edi, 0x7fffffff
 808f6d5:  je 8090967
 808f6db:  mov esi, DWORD PTR [ebp-0x10d4]
 808f6e1:  add edi, 0x1
 808f6e4:  test esi, esi
 808f6e6:  je 808eb6d
 808f6ec:  test ebx, ebx
 808f6ee:  jle 808eb6d
 808f6f4:  mov eax, DWORD PTR [ebp+0x8]
 808f6f7:  mov DWORD PTR [esp+0x8], ebx
 808f6fb:  mov DWORD PTR [esp+0x4], 0x20
 808f703:  mov DWORD PTR [esp], eax
 808f706:  call 8062c50
 808f70b:  cmp edi, 0x7ffffffe
 808f711:  mov edx, eax
 808f713:  jbe 808eb5b
 808f719:  mov DWORD PTR [esp+0xc], 0x80c4cc8
 808f721:  mov DWORD PTR [esp+0x8], 0x62d
 808f729:  mov DWORD PTR [esp+0x4], 0x80b0dd7
 808f731:  mov DWORD PTR [esp], 0x80b0e40
 808f738:  call 8051490
 808f73d:  lea esi, [esi]
 808f740:  mov eax, DWORD PTR [ebp-0x1018]
 808f746:  mov ebx, DWORD PTR [ebp-0x1018]
 808f74c:  mov esi, DWORD PTR [eax]
 808f74e:  add ebx, 0x4
 808f751:  mov DWORD PTR [ebp+0x10], ebx
 808f754:  test esi, esi
 808f756:  je 8091de7
 808f75c:  mov eax, DWORD PTR [ebp-0x10c0]
 808f762:  test eax, eax
 808f764:  jne 8091423
 808f76a:  cmp DWORD PTR [ebp-0x10ac], 0x53
 808f771:  je 8091423
 808f777:  cmp DWORD PTR [ebp-0x1008], 0xff
 808f77e:  mov DWORD PTR [ebp-0x18], esi
 808f781:  je 8091d68
 808f787:  mov edx, DWORD PTR [ebp-0x1008]
 808f78d:  mov DWORD PTR [esp], esi
 808f790:  mov DWORD PTR [esp+0x4], edx
 808f794:  call 806b180
 808f799:  mov DWORD PTR [ebp-0x1040], eax
 808f79f:  mov ebx, DWORD PTR [ebp-0x1040]
 808f7a5:  shl ebx, 0x2
 808f7a8:  cmp ebx, 0x1000
 808f7ae:  ja 8091d08
 808f7b4:  lea eax, [ebx+0x10]
 808f7b7:  sub esp, eax
 808f7b9:  lea esi, [esp+0x23]
 808f7bd:  and esi, 0xf0
 808f7c0:  mov DWORD PTR [ebp-0x10a8], 0x0
 808f7ca:  mov ecx, DWORD PTR [ebp-0x1040]
 808f7d0:  lea eax, [ebp-0x20]
 808f7d3:  mov DWORD PTR [esp+0xc], eax
 808f7d7:  lea eax, [ebp-0x18]
 808f7da:  mov DWORD PTR [ebp-0x20], 0x0
 808f7e1:  mov DWORD PTR [ebp-0x1c], 0x0
 808f7e8:  mov DWORD PTR [esp+0x8], ecx
 808f7ec:  mov DWORD PTR [esp+0x4], eax
 808f7f0:  mov DWORD PTR [esp], esi
 808f7f3:  call 8094690
 808f7f8:  cmp eax, 0xff
 808f7fb:  mov ebx, eax
 808f7fd:  je 8090967
 808f803:  mov eax, DWORD PTR [ebp-0x1020]
 808f809:  sub eax, ebx
 808f80b:  mov DWORD PTR [ebp-0x1118], eax
 808f811:  js 8091796
 808f817:  mov eax, DWORD PTR [ebp-0x10d4]
 808f81d:  test eax, eax
 808f81f:  jne 808f868
 808f821:  mov eax, DWORD PTR [ebp-0x1118]
 808f827:  test eax, eax
 808f829:  je 808f868
 808f82b:  mov ecx, DWORD PTR [ebp-0x1118]
 808f831:  mov eax, DWORD PTR [ebp+0x8]
 808f834:  mov DWORD PTR [esp+0x4], 0x20
 808f83c:  mov DWORD PTR [esp+0x8], ecx
 808f840:  mov DWORD PTR [esp], eax
 808f843:  call 8062c50
 808f848:  cmp edi, 0x7ffffffe
 808f84e:  mov edx, eax
 808f850:  ja 808f719
 808f856:  mov eax, 0x7fffffff
 808f85b:  sub eax, edi
 808f85d:  cmp edx, eax
 808f85f:  ja 8090967
 808f865:  lea edi, [edx+edi]
 808f868:  test edi, edi
 808f86a:  js 8092e79
 808f870:  mov edx, DWORD PTR [ebp+0x8]
 808f873:  mov eax, DWORD PTR [edx+0x94]
 808f879:  mov DWORD PTR [esp+0x8], ebx
 808f87d:  mov DWORD PTR [esp+0x4], esi
 808f881:  mov DWORD PTR [esp], edx
 808f884:  call DWORD PTR [eax+0x1c]
 808f887:  cmp eax, ebx
 808f889:  jne 8090967
 808f88f:  mov eax, 0x7fffffff
 808f894:  sub eax, edi
 808f896:  cmp ebx, eax
 808f898:  mov DWORD PTR [ebp-0x1124], 0x7fffffff
 808f8a2:  ja 8090967
 808f8a8:  mov eax, DWORD PTR [ebp-0x10d4]
 808f8ae:  lea edi, [ebx+edi]
 808f8b1:  test eax, eax
 808f8b3:  je 808f8fd
 808f8b5:  mov eax, DWORD PTR [ebp-0x1118]
 808f8bb:  test eax, eax
 808f8bd:  je 808f8fd
 808f8bf:  mov ecx, DWORD PTR [ebp-0x1118]
 808f8c5:  mov ebx, DWORD PTR [ebp+0x8]
 808f8c8:  mov DWORD PTR [esp+0x4], 0x20
 808f8d0:  mov DWORD PTR [esp+0x8], ecx
 808f8d4:  mov DWORD PTR [esp], ebx
 808f8d7:  call 8062c50
 808f8dc:  cmp edi, 0x7ffffffe
 808f8e2:  ja 808f719
 808f8e8:  sub DWORD PTR [ebp-0x1124], edi
 808f8ee:  cmp eax, DWORD PTR [ebp-0x1124]
 808f8f4:  ja 8090967
 808f8fa:  lea edi, [eax+edi]
 808f8fd:  mov eax, DWORD PTR [ebp-0x10a8]
 808f903:  test eax, eax
 808f905:  je 808eb6d
 808f90b:  mov DWORD PTR [esp], esi
 808f90e:  call 804b4a0
 808f913:  jmp 808eb6d
 808f918:  mov esi, DWORD PTR [ebp-0x10ac]
 808f91e:  test esi, esi
 808f920:  je 8090967
 808f926:  mov esi, DWORD PTR [ebp-0x1100]
 808f92c:  sub esp, 0x610
 808f932:  lea ebx, [esp+0x23]
 808f936:  and ebx, 0xf0
 808f939:  mov DWORD PTR [ebp-0x109c], ebx
 808f93f:  mov DWORD PTR [ebp-0x10], 0x0
 808f946:  mov DWORD PTR [esp], esi
 808f949:  call 804b4a0
 808f94e:  cmp DWORD PTR [ebp-0x110c], 0xff
 808f955:  je 80924c4
 808f95b:  mov eax, DWORD PTR [ebp-0x1104]
 808f961:  mov edx, DWORD PTR [eax]
 808f963:  test edx, edx
 808f965:  je 80929b5
 808f96b:  mov DWORD PTR [ebp-0x10a0], 0x20
 808f975:  mov ebx, DWORD PTR [ebp-0x109c]
 808f97b:  mov esi, eax
 808f97d:  mov DWORD PTR [ebp-0x10a4], 0x0
 808f987:  mov DWORD PTR [ebp-0x1098], 0x0
 808f991:  mov DWORD PTR [ebp-0x1048], 0x0
 808f99b:  jmp 808f9b4
 808f99d:  lea esi, [esi]
 808f9a0:  mov DWORD PTR [ebp-0x1048], esi
 808f9a6:  mov esi, DWORD PTR [ebp-0x1108]
 808f9ac:  mov ebx, edx
 808f9ae:  mov DWORD PTR [ebp-0x109c], edx
 808f9b4:  mov ecx, DWORD PTR [ebp-0x1098]
 808f9ba:  lea edx, [ebp-0x10]
 808f9bd:  add ebx, DWORD PTR [ebp-0x1048]
 808f9c3:  mov DWORD PTR [esp+0xc], edx
 808f9c7:  mov DWORD PTR [esp], esi
 808f9ca:  mov DWORD PTR [esp+0x8], ebx
 808f9ce:  mov DWORD PTR [esp+0x4], ecx
 808f9d2:  call 8093120
 808f9d7:  mov ebx, DWORD PTR [ebx+0x18]
 808f9da:  add DWORD PTR [ebp-0x10a4], 0x1
 808f9e1:  add DWORD PTR [ebp-0x1098], eax
 808f9e7:  mov eax, DWORD PTR [ebx]
 808f9e9:  mov DWORD PTR [ebp-0x1108], ebx
 808f9ef:  test eax, eax
 808f9f1:  je 809101f
 808f9f7:  mov ecx, DWORD PTR [ebp-0x1048]
 808f9fd:  mov ebx, DWORD PTR [ebp-0x10a4]
 808fa03:  cmp DWORD PTR [ebp-0x10a0], ebx
 808fa09:  mov edx, DWORD PTR [ebp-0x109c]
 808fa0f:  lea esi, [ecx+0x30]
 808fa12:  ja 808f9a0
 808fa14:  shl DWORD PTR [ebp-0x10a0], 1
 808fa1a:  mov esi, DWORD PTR [ebp-0x10a0]
 808fa20:  lea eax, [esi+esi*2]
 808fa23:  mov esi, DWORD PTR [ebp-0x1048]
 808fa29:  shl eax, 0x4
 808fa2c:  add eax, 0x10
 808fa2f:  sub esp, eax
 808fa31:  add esi, 0x30
 808fa34:  lea ebx, [esp+0x23]
 808fa38:  add edx, esi
 808fa3a:  and ebx, 0xf0
 808fa3d:  cmp edx, ebx
 808fa3f:  je 80913bf
 808fa45:  mov eax, DWORD PTR [ebp-0x109c]
 808fa4b:  mov DWORD PTR [esp+0x8], esi
 808fa4f:  mov DWORD PTR [esp], ebx
 808fa52:  mov DWORD PTR [esp+0x4], eax
 808fa56:  call 804efc0
 808fa5b:  lea eax, [ebx+esi]
 808fa5e:  mov edx, ebx
 808fa60:  cmp DWORD PTR [ebp-0x109c], eax
 808fa66:  jne 808f9a0
 808fa6c:  mov eax, DWORD PTR [ebp-0x10a0]
 808fa72:  mov edx, ebx
 808fa74:  shr eax, 1
 808fa76:  add DWORD PTR [ebp-0x10a0], eax
 808fa7c:  jmp 808f9a0
 808fa81:  mov ebx, DWORD PTR [ebp+0x8]
 808fa84:  mov edx, DWORD PTR [ebx+0x58]
 808fa87:  mov eax, DWORD PTR [edx+0x10]
 808fa8a:  cmp eax, DWORD PTR [edx+0x14]
 808fa8d:  jae 8092b58
 808fa93:  mov DWORD PTR [eax], 0x25
 808fa99:  add eax, 0x4
 808fa9c:  mov DWORD PTR [edx+0x10], eax
 808fa9f:  cmp edi, 0x7fffffff
 808faa5:  je 8090967
 808faab:  add edi, 0x1
 808faae:  jmp 808ed28
 808fab3:  add DWORD PTR [ebp-0x1108], 0x4
 808faba:  mov esi, DWORD PTR [ebp-0x1108]
 808fac0:  mov esi, DWORD PTR [esi]
 808fac2:  mov eax, esi
 808fac4:  sub eax, 0x20
 808fac7:  cmp eax, 0x5a
 808faca:  mov DWORD PTR [ebp-0x10ac], esi
 808fad0:  ja 8090a6d
 808fad6:  mov eax, DWORD PTR [eax*4+0x80c50a0]
 808fadd:  mov ebx, DWORD PTR [ebp-0x1018]
 808fae3:  mov esi, DWORD PTR [ebp-0x10f8]
 808fae9:  mov DWORD PTR [ebp-0x10c8], 0x1
 808faf3:  mov ecx, DWORD PTR [eax*4+0x80c4da0]
 808fafa:  mov DWORD PTR [ebp-0x10c0], 0x1
 808fb04:  jmp 808ef5d
 808fb09:  mov esi, DWORD PTR [ebp-0x10f4]
 808fb0f:  mov edx, DWORD PTR [ebp-0x109c]
 808fb15:  lea eax, [esi+esi*2]
 808fb18:  shl eax, 0x4
 808fb1b:  add edx, eax
 808fb1d:  je 8091e16
 808fb23:  mov eax, DWORD PTR [edx+0x24]
 808fb26:  mov ecx, DWORD PTR [ebp-0x1094]
 808fb2c:  mov ebx, DWORD PTR [ebp+0x8]
 808fb2f:  mov DWORD PTR [esp+0x4], edx
 808fb33:  lea eax, [eax+eax*2]
 808fb36:  lea eax, [ecx+eax*4]
 808fb39:  mov DWORD PTR [ebp-0x14], eax
 808fb3c:  lea eax, [ebp-0x14]
 808fb3f:  mov DWORD PTR [esp+0x8], eax
 808fb43:  mov DWORD PTR [esp], ebx
 808fb46:  call 805fe40
 808fb4b:  mov edx, eax
 808fb4d:  test edx, edx
 808fb4f:  js 8090967
 808fb55:  cmp edi, 0x7ffffffe
 808fb5b:  jbe 808f071
 808fb61:  mov DWORD PTR [esp+0xc], 0x80c4cc8
 808fb69:  mov DWORD PTR [esp+0x8], 0x753
 808fb71:  mov DWORD PTR [esp+0x4], 0x80b0dd7
 808fb79:  mov DWORD PTR [esp], 0x80b0e40
 808fb80:  call 8051490
 808fb85:  lea esi, [esi]
 808fb88:  mov DWORD PTR [ebp-0x10e0], 0x10
 808fb92:  mov eax, DWORD PTR [ebp-0x10c8]
 808fb98:  test eax, eax
 808fb9a:  je 8090f69
 808fba0:  mov ebx, DWORD PTR [ebp-0x1018]
 808fba6:  mov esi, DWORD PTR [ebp-0x1018]
 808fbac:  mov eax, DWORD PTR [ebp-0x1018]
 808fbb2:  mov DWORD PTR [ebp-0x10e4], 0x0
 808fbbc:  add ebx, 0x8
 808fbbf:  mov esi, DWORD PTR [esi]
 808fbc1:  mov DWORD PTR [ebp+0x10], ebx
 808fbc4:  mov ebx, DWORD PTR [eax+0x4]
 808fbc7:  mov DWORD PTR [ebp-0x10d8], 0x0
 808fbd1:  mov DWORD PTR [ebp-0x10d0], 0x0
 808fbdb:  mov DWORD PTR [ebp-0x1138], esi
 808fbe1:  cmp DWORD PTR [ebp-0x1008], 0x0
 808fbe8:  jl 8091272
 808fbee:  jne 8092ab2
 808fbf4:  mov edx, DWORD PTR [ebp-0x1138]
 808fbfa:  mov DWORD PTR [ebp-0x10b0], 0x20
 808fc04:  or edx, ebx
 808fc06:  jne 809127c
 808fc0c:  cmp DWORD PTR [ebp-0x10e0], 0x8
 808fc13:  je 8092468
 808fc19:  mov esi, DWORD PTR [ebp-0x10fc]
 808fc1f:  mov DWORD PTR [ebp-0x10b0], 0x20
 808fc29:  or ebx, DWORD PTR [ebp-0x1138]
 808fc2f:  setne al
 808fc32:  movzx eax, al
 808fc35:  mov DWORD PTR [ebp-0x1138], eax
 808fc3b:  mov ebx, DWORD PTR [ebp-0x10fc]
 808fc41:  sub ebx, esi
 808fc43:  mov eax, ebx
 808fc45:  mov DWORD PTR [ebp-0x1038], ebx
 808fc4b:  sar eax, 0x2
 808fc4e:  cmp DWORD PTR [ebp-0x1008], eax
 808fc54:  jg 808fc8a
 808fc56:  mov eax, DWORD PTR [ebp-0x1138]
 808fc5c:  test eax, eax
 808fc5e:  je 808fc8a
 808fc60:  mov eax, DWORD PTR [ebp-0x10dc]
 808fc66:  test eax, eax
 808fc68:  je 808fc8a
 808fc6a:  cmp DWORD PTR [ebp-0x10e0], 0x8
 808fc71:  jne 808fc8a
 808fc73:  mov eax, DWORD PTR [ebp-0x10fc]
 808fc79:  sub esi, 0x4
 808fc7c:  mov DWORD PTR [esi], 0x30
 808fc82:  sub eax, esi
 808fc84:  mov DWORD PTR [ebp-0x1038], eax
 808fc8a:  mov edx, DWORD PTR [ebp-0x1038]
 808fc90:  sar edx, 0x2
 808fc93:  neg edx
 808fc95:  mov eax, edx
 808fc97:  add eax, DWORD PTR [ebp-0x1008]
 808fc9d:  mov DWORD PTR [ebp-0x1120], edx
 808fca3:  mov ecx, eax
 808fca5:  sar ecx, 0x1f
 808fca8:  not ecx
 808fcaa:  and ecx, eax
 808fcac:  mov eax, DWORD PTR [ebp-0x10d4]
 808fcb2:  mov DWORD PTR [ebp-0x10b8], ecx
 808fcb8:  test eax, eax
 808fcba:  jne 8090c7d
 808fcc0:  mov eax, DWORD PTR [ebp-0x1138]
 808fcc6:  mov ebx, edx
 808fcc8:  add ebx, DWORD PTR [ebp-0x1020]
 808fcce:  sub ebx, ecx
 808fcd0:  test eax, eax
 808fcd2:  setne al
 808fcd5:  and al, BYTE PTR [ebp-0x10dc]
 808fcdb:  mov BYTE PTR [ebp-0x1031], al
 808fce1:  je 808fcef
 808fce3:  cmp DWORD PTR [ebp-0x10e0], 0x10
 808fcea:  jne 808fcef
 808fcec:  sub ebx, 0x2
 808fcef:  mov eax, DWORD PTR [ebp-0x10d8]
 808fcf5:  or eax, DWORD PTR [ebp-0x10e4]
 808fcfb:  or eax, DWORD PTR [ebp-0x10d0]
 808fd01:  cmp eax, 0x1
 808fd04:  adc ebx, 0xff
 808fd07:  cmp DWORD PTR [ebp-0x10b0], 0x20
 808fd0e:  je 80914e8
 808fd14:  mov ecx, DWORD PTR [ebp-0x10e4]
 808fd1a:  test ecx, ecx
 808fd1c:  jne 80914b6
 808fd22:  mov edx, DWORD PTR [ebp-0x10d0]
 808fd28:  test edx, edx
 808fd2a:  jne 80917d4
 808fd30:  mov eax, DWORD PTR [ebp-0x10d8]
 808fd36:  test eax, eax
 808fd38:  jne 8091c4b
 808fd3e:  cmp BYTE PTR [ebp-0x1031], 0x0
 808fd45:  je 808fd54
 808fd47:  cmp DWORD PTR [ebp-0x10e0], 0x10
 808fd4e:  je 8092200
 808fd54:  mov edx, DWORD PTR [ebp-0x10b8]
 808fd5a:  lea eax, [ebx+edx]
 808fd5d:  test eax, eax
 808fd5f:  jle 808fd98
 808fd61:  mov ecx, DWORD PTR [ebp+0x8]
 808fd64:  mov DWORD PTR [esp+0x8], eax
 808fd68:  mov DWORD PTR [esp+0x4], 0x30
 808fd70:  mov DWORD PTR [esp], ecx
 808fd73:  call 8062c50
 808fd78:  cmp edi, 0x7ffffffe
 808fd7e:  mov edx, eax
 808fd80:  ja 809078a
 808fd86:  mov eax, 0x7fffffff
 808fd8b:  sub eax, edi
 808fd8d:  cmp edx, eax
 808fd8f:  ja 8090967
 808fd95:  lea edi, [edx+edi]
 808fd98:  test edi, edi
 808fd9a:  js 8092e55
 808fda0:  mov edx, DWORD PTR [ebp+0x8]
 808fda3:  mov ebx, DWORD PTR [ebp-0x1038]
 808fda9:  mov eax, DWORD PTR [edx+0x94]
 808fdaf:  sar ebx, 0x2
 808fdb2:  mov DWORD PTR [esp+0x8], ebx
 808fdb6:  mov DWORD PTR [esp+0x4], esi
 808fdba:  mov DWORD PTR [esp], edx
 808fdbd:  call DWORD PTR [eax+0x1c]
 808fdc0:  cmp ebx, eax
 808fdc2:  jne 8090967
 808fdc8:  mov eax, 0x7fffffff
 808fdcd:  sub eax, edi
 808fdcf:  cmp ebx, eax
 808fdd1:  ja 8090967
 808fdd7:  add edi, ebx
 808fdd9:  jmp 808eb6d
 808fdde:  mov DWORD PTR [ebp-0x108c], 0xa
 808fde8:  mov eax, DWORD PTR [ebp-0x1074]
 808fdee:  test eax, eax
 808fdf0:  je 8090fb5
 808fdf6:  mov ebx, DWORD PTR [ebp-0x10f4]
 808fdfc:  mov eax, DWORD PTR [ebp-0x109c]
 808fe02:  lea edx, [ebx+ebx*2]
 808fe05:  shl edx, 0x4
 808fe08:  add eax, edx
 808fe0a:  test eax, eax
 808fe0c:  je 80925e9
 808fe12:  mov ecx, DWORD PTR [ebp-0x109c]
 808fe18:  mov ebx, DWORD PTR [ebp-0x1094]
 808fe1e:  mov esi, DWORD PTR [ebp-0x1094]
 808fe24:  mov eax, DWORD PTR [ecx+edx+0x24]
 808fe28:  lea eax, [eax+eax*2]
 808fe2b:  mov ebx, DWORD PTR [ebx+eax*4]
 808fe2e:  mov DWORD PTR [ebp-0x113c], ebx
 808fe34:  mov ebx, DWORD PTR [esi+eax*4+0x4]
 808fe38:  mov eax, DWORD PTR [ebp-0x1018]
 808fe3e:  mov DWORD PTR [ebp-0x1090], 0x0
 808fe48:  mov DWORD PTR [ebp-0x1084], 0x0
 808fe52:  mov DWORD PTR [ebp-0x107c], 0x0
 808fe5c:  mov DWORD PTR [ebp-0x1044], eax
 808fe62:  cmp DWORD PTR [ebp-0x1060], 0x0
 808fe69:  jl 8091787
 808fe6f:  jne 809131a
 808fe75:  mov edx, DWORD PTR [ebp-0x113c]
 808fe7b:  mov BYTE PTR [ebp-0x1055], 0x20
 808fe82:  or edx, ebx
 808fe84:  jne 8091321
 808fe8a:  cmp DWORD PTR [ebp-0x108c], 0x8
 808fe91:  je 80921d0
 808fe97:  mov esi, DWORD PTR [ebp-0x10fc]
 808fe9d:  mov BYTE PTR [ebp-0x1055], 0x20
 808fea4:  or ebx, DWORD PTR [ebp-0x113c]
 808feaa:  mov ebx, DWORD PTR [ebp-0x10fc]
 808feb0:  mov edx, DWORD PTR [ebp-0x1044]
 808feb6:  setne al
 808feb9:  movzx eax, al
 808febc:  sub ebx, esi
 808febe:  mov DWORD PTR [ebp-0x113c], eax
 808fec4:  mov eax, ebx
 808fec6:  mov DWORD PTR [ebp-0x1030], ebx
 808fecc:  sar eax, 0x2
 808fecf:  mov DWORD PTR [ebp-0x1018], edx
 808fed5:  cmp DWORD PTR [ebp-0x1060], eax
 808fedb:  jle 8090b0d
 808fee1:  mov edx, DWORD PTR [ebp-0x1030]
 808fee7:  sar edx, 0x2
 808feea:  neg edx
 808feec:  mov eax, edx
 808feee:  add eax, DWORD PTR [ebp-0x1060]
 808fef4:  mov DWORD PTR [ebp-0x1130], edx
 808fefa:  mov ecx, eax
 808fefc:  sar ecx, 0x1f
 808feff:  not ecx
 808ff01:  and ecx, eax
 808ff03:  mov eax, DWORD PTR [ebp-0x1080]
 808ff09:  mov DWORD PTR [ebp-0x1024], ecx
 808ff0f:  test eax, eax
 808ff11:  jne 8090b52
 808ff17:  mov eax, DWORD PTR [ebp-0x113c]
 808ff1d:  mov ebx, edx
 808ff1f:  add ebx, DWORD PTR [ebp-0x1064]
 808ff25:  sub ebx, ecx
 808ff27:  test eax, eax
 808ff29:  mov eax, DWORD PTR [ebp-0x1088]
 808ff2f:  setne dl
 808ff32:  test eax, eax
 808ff34:  setne al
 808ff37:  and dl, al
 808ff39:  mov BYTE PTR [ebp-0x1019], dl
 808ff3f:  je 808ff4d
 808ff41:  cmp DWORD PTR [ebp-0x108c], 0x10
 808ff48:  jne 808ff4d
 808ff4a:  sub ebx, 0x2
 808ff4d:  mov eax, DWORD PTR [ebp-0x1084]
 808ff53:  or eax, DWORD PTR [ebp-0x1090]
 808ff59:  or eax, DWORD PTR [ebp-0x107c]
 808ff5f:  cmp eax, 0x1
 808ff62:  adc ebx, 0xff
 808ff65:  cmp BYTE PTR [ebp-0x1055], 0x20
 808ff6c:  je 8091658
 808ff72:  mov eax, DWORD PTR [ebp-0x1090]
 808ff78:  test eax, eax
 808ff7a:  jne 80915d7
 808ff80:  mov eax, DWORD PTR [ebp-0x107c]
 808ff86:  test eax, eax
 808ff88:  jne 8091abf
 808ff8e:  mov eax, DWORD PTR [ebp-0x1084]
 808ff94:  test eax, eax
 808ff96:  jne 8091c6e
 808ff9c:  cmp BYTE PTR [ebp-0x1019], 0x0
 808ffa3:  je 808ffb2
 808ffa5:  cmp DWORD PTR [ebp-0x108c], 0x10
 808ffac:  je 8092343
 808ffb2:  mov edx, DWORD PTR [ebp-0x1024]
 808ffb8:  lea eax, [ebx+edx]
 808ffbb:  test eax, eax
 808ffbd:  jle 808fff6
 808ffbf:  mov ecx, DWORD PTR [ebp+0x8]
 808ffc2:  mov DWORD PTR [esp+0x8], eax
 808ffc6:  mov DWORD PTR [esp+0x4], 0x30
 808ffce:  mov DWORD PTR [esp], ecx
 808ffd1:  call 8062c50
 808ffd6:  cmp edi, 0x7ffffffe
 808ffdc:  mov edx, eax
 808ffde:  ja 808fb61
 808ffe4:  mov eax, 0x7fffffff
 808ffe9:  sub eax, edi
 808ffeb:  cmp edx, eax
 808ffed:  ja 8090967
 808fff3:  lea edi, [edx+edi]
 808fff6:  test edi, edi
 808fff8:  js 8092e04
 808fffe:  mov edx, DWORD PTR [ebp+0x8]
 8090001:  mov ebx, DWORD PTR [ebp-0x1030]
 8090007:  mov eax, DWORD PTR [edx+0x94]
 809000d:  sar ebx, 0x2
 8090010:  mov DWORD PTR [esp+0x8], ebx
 8090014:  mov DWORD PTR [esp+0x4], esi
 8090018:  mov DWORD PTR [esp], edx
 809001b:  call DWORD PTR [eax+0x1c]
 809001e:  cmp ebx, eax
 8090020:  jne 8090967
 8090026:  mov eax, 0x7fffffff
 809002b:  sub eax, edi
 809002d:  cmp ebx, eax
 809002f:  ja 8090967
 8090035:  add edi, ebx
 8090037:  jmp 808ed28
 809003c:  mov ebx, DWORD PTR [ebp+0x8]
 809003f:  mov edx, DWORD PTR [ebx+0x58]
 8090042:  mov eax, DWORD PTR [edx+0x10]
 8090045:  cmp eax, DWORD PTR [edx+0x14]
 8090048:  jae 8092b3a
 809004e:  mov DWORD PTR [eax], 0x25
 8090054:  add eax, 0x4
 8090057:  mov DWORD PTR [edx+0x10], eax
 809005a:  cmp edi, 0x7fffffff
 8090060:  je 8090967
 8090066:  mov esi, DWORD PTR [ebp-0x1018]
 809006c:  add edi, 0x1
 809006f:  mov DWORD PTR [ebp+0x10], esi
 8090072:  jmp 808eb6d
 8090077:  mov ecx, DWORD PTR [ebp-0x10f4]
 809007d:  mov eax, DWORD PTR [ebp-0x109c]
 8090083:  lea edx, [ecx+ecx*2]
 8090086:  shl edx, 0x4
 8090089:  add eax, edx
 809008b:  test eax, eax
 809008d:  je 8092656
 8090093:  mov esi, DWORD PTR [ebp-0x109c]
 8090099:  mov eax, DWORD PTR [esi+edx+0x24]
 809009d:  mov edx, DWORD PTR [ebp-0x1094]
 80900a3:  lea eax, [eax+eax*2]
 80900a6:  mov esi, DWORD PTR [edx+eax*4]
 80900a9:  test esi, esi
 80900ab:  je 8091d39
 80900b1:  mov eax, DWORD PTR [ebp-0x1068]
 80900b7:  test eax, eax
 80900b9:  jne 80913f3
 80900bf:  cmp DWORD PTR [ebp-0x1054], 0x53
 80900c6:  je 80913f3
 80900cc:  cmp DWORD PTR [ebp-0x1060], 0xff
 80900d3:  mov DWORD PTR [ebp-0x18], esi
 80900d6:  je 8091d94
 80900dc:  mov ecx, DWORD PTR [ebp-0x1060]
 80900e2:  mov DWORD PTR [esp], esi
 80900e5:  mov DWORD PTR [esp+0x4], ecx
 80900e9:  call 806b180
 80900ee:  mov DWORD PTR [ebp-0x103c], eax
 80900f4:  mov ebx, DWORD PTR [ebp-0x103c]
 80900fa:  shl ebx, 0x2
 80900fd:  cmp ebx, 0x1000
 8090103:  ja 8091cd7
 8090109:  lea eax, [ebx+0x10]
 809010c:  sub esp, eax
 809010e:  lea esi, [esp+0x23]
 8090112:  and esi, 0xf0
 8090115:  mov DWORD PTR [ebp-0x1050], 0x0
 809011f:  mov eax, DWORD PTR [ebp-0x103c]
 8090125:  lea ebx, [ebp-0x28]
 8090128:  lea edx, [ebp-0x18]
 809012b:  mov DWORD PTR [esp+0xc], ebx
 809012f:  mov DWORD PTR [ebp-0x28], 0x0
 8090136:  mov DWORD PTR [ebp-0x24], 0x0
 809013d:  mov DWORD PTR [esp+0x8], eax
 8090141:  mov DWORD PTR [esp+0x4], edx
 8090145:  mov DWORD PTR [esp], esi
 8090148:  call 8094690
 809014d:  cmp eax, 0xff
 8090150:  mov ebx, eax
 8090152:  je 8090967
 8090158:  mov eax, DWORD PTR [ebp-0x1064]
 809015e:  sub eax, ebx
 8090160:  mov DWORD PTR [ebp-0x1114], eax
 8090166:  js 809169a
 809016c:  mov eax, DWORD PTR [ebp-0x1080]
 8090172:  test eax, eax
 8090174:  jne 80901bd
 8090176:  mov eax, DWORD PTR [ebp-0x1114]
 809017c:  test eax, eax
 809017e:  je 80901bd
 8090180:  mov ecx, DWORD PTR [ebp-0x1114]
 8090186:  mov eax, DWORD PTR [ebp+0x8]
 8090189:  mov DWORD PTR [esp+0x4], 0x20
 8090191:  mov DWORD PTR [esp+0x8], ecx
 8090195:  mov DWORD PTR [esp], eax
 8090198:  call 8062c50
 809019d:  cmp edi, 0x7ffffffe
 80901a3:  mov edx, eax
 80901a5:  ja 8092cc2
 80901ab:  mov eax, 0x7fffffff
 80901b0:  sub eax, edi
 80901b2:  cmp edx, eax
 80901b4:  ja 8090967
 80901ba:  lea edi, [edx+edi]
 80901bd:  test edi, edi
 80901bf:  js 8092b76
 80901c5:  mov edx, DWORD PTR [ebp+0x8]
 80901c8:  mov eax, DWORD PTR [edx+0x94]
 80901ce:  mov DWORD PTR [esp+0x8], ebx
 80901d2:  mov DWORD PTR [esp+0x4], esi
 80901d6:  mov DWORD PTR [esp], edx
 80901d9:  call DWORD PTR [eax+0x1c]
 80901dc:  cmp eax, ebx
 80901de:  jne 8090967
 80901e4:  mov eax, 0x7fffffff
 80901e9:  sub eax, edi
 80901eb:  cmp ebx, eax
 80901ed:  mov DWORD PTR [ebp-0x1134], 0x7fffffff
 80901f7:  ja 8090967
 80901fd:  mov eax, DWORD PTR [ebp-0x1080]
 8090203:  lea edi, [ebx+edi]
 8090206:  test eax, eax
 8090208:  je 8090252
 809020a:  mov eax, DWORD PTR [ebp-0x1114]
 8090210:  test eax, eax
 8090212:  je 8090252
 8090214:  mov ecx, DWORD PTR [ebp-0x1114]
 809021a:  mov ebx, DWORD PTR [ebp+0x8]
 809021d:  mov DWORD PTR [esp+0x4], 0x20
 8090225:  mov DWORD PTR [esp+0x8], ecx
 8090229:  mov DWORD PTR [esp], ebx
 809022c:  call 8062c50
 8090231:  cmp edi, 0x7ffffffe
 8090237:  ja 8092cc2
 809023d:  sub DWORD PTR [ebp-0x1134], edi
 8090243:  cmp eax, DWORD PTR [ebp-0x1134]
 8090249:  ja 8090967
 809024f:  lea edi, [eax+edi]
 8090252:  mov eax, DWORD PTR [ebp-0x1050]
 8090258:  test eax, eax
 809025a:  je 808ed28
 8090260:  mov DWORD PTR [esp], esi
 8090263:  call 804b4a0
 8090268:  jmp 808ed28
 809026d:  lea esi, [esi]
 8090270:  mov eax, DWORD PTR [ebp+0x8]
 8090273:  test BYTE PTR [eax+0x3c], 0x4
 8090277:  nop
 8090278:  je 8090288
 809027a:  mov eax, DWORD PTR [ebp-0x10ec]
 8090280:  test eax, eax
 8090282:  je 8092103
 8090288:  mov eax, DWORD PTR [ebp-0x10c8]
 809028e:  test eax, eax
 8090290:  je 80919df
 8090296:  mov esi, DWORD PTR [ebp-0x1018]
 809029c:  mov edx, edi
 809029e:  mov ebx, DWORD PTR [ebp-0x1018]
 80902a4:  sar edx, 0x1f
 80902a7:  mov eax, DWORD PTR [esi]
 80902a9:  add ebx, 0x4
 80902ac:  mov DWORD PTR [ebp+0x10], ebx
 80902af:  mov DWORD PTR [eax], edi
 80902b1:  mov DWORD PTR [eax+0x4], edx
 80902b4:  jmp 808eb6d
 80902b9:  mov ecx, DWORD PTR [ebp-0x10f0]
 80902bf:  lea eax, [ebp-0x1004]
 80902c5:  mov DWORD PTR [esp+0x8], 0xfa0
 80902cd:  mov DWORD PTR [esp+0x4], eax
 80902d1:  mov DWORD PTR [esp], ecx
 80902d4:  call 806b060
 80902d9:  mov ebx, DWORD PTR [ebp-0x1018]
 80902df:  mov DWORD PTR [ebp-0x10c0], 0x0
 80902e9:  mov DWORD PTR [ebp+0x10], ebx
 80902ec:  mov esi, eax
 80902ee:  jmp 808f754
 80902f3:  mov ebx, DWORD PTR [ebp-0x1074]
 80902f9:  test ebx, ebx
 80902fb:  je 8091ae2
 8090301:  mov esi, DWORD PTR [ebp-0x10f4]
 8090307:  mov eax, DWORD PTR [ebp-0x109c]
 809030d:  lea edx, [esi+esi*2]
 8090310:  shl edx, 0x4
 8090313:  add eax, edx
 8090315:  test eax, eax
 8090317:  je 80927d0
 809031d:  mov ebx, DWORD PTR [ebp-0x109c]
 8090323:  mov esi, DWORD PTR [ebp-0x1094]
 8090329:  mov eax, DWORD PTR [ebx+edx+0x24]
 809032d:  lea eax, [eax+eax*2]
 8090330:  mov edx, DWORD PTR [esi+eax*4+0x4]
 8090334:  mov eax, DWORD PTR [esi+eax*4]
 8090337:  mov ecx, edx
 8090339:  shr ecx, 0x1f
 809033c:  test ecx, ecx
 809033e:  mov DWORD PTR [ebp-0x1090], ecx
 8090344:  je 809034d
 8090346:  neg eax
 8090348:  adc edx, 0x0
 809034b:  neg edx
 809034d:  mov esi, DWORD PTR [ebp-0x1018]
 8090353:  mov ebx, edx
 8090355:  mov DWORD PTR [ebp-0x113c], eax
 809035b:  mov DWORD PTR [ebp-0x108c], 0xa
 8090365:  mov DWORD PTR [ebp-0x1044], esi
 809036b:  jmp 808fe62
 8090370:  mov DWORD PTR [ebp-0x108c], 0x10
 809037a:  jmp 808fde8
 809037f:  mov ebx, DWORD PTR [ebp-0x10f4]
 8090385:  mov edx, DWORD PTR [ebp-0x109c]
 809038b:  lea eax, [ebx+ebx*2]
 809038e:  shl eax, 0x4
 8090391:  add edx, eax
 8090393:  je 8091f9e
 8090399:  mov eax, DWORD PTR [edx+0x24]
 809039c:  mov ecx, DWORD PTR [ebp-0x1094]
 80903a2:  mov ebx, DWORD PTR [ebp+0x8]
 80903a5:  mov DWORD PTR [esp+0x4], edx
 80903a9:  lea eax, [eax+eax*2]
 80903ac:  lea eax, [ecx+eax*4]
 80903af:  mov DWORD PTR [ebp-0x14], eax
 80903b2:  lea eax, [ebp-0x14]
 80903b5:  mov DWORD PTR [esp+0x8], eax
 80903b9:  mov DWORD PTR [esp], ebx
 80903bc:  call 805d430
 80903c1:  mov edx, eax
 80903c3:  jmp 808fb4d
 80903c8:  mov DWORD PTR [ebp-0x108c], 0x8
 80903d2:  jmp 808fde8
 80903d7:  mov esi, DWORD PTR [ebp+0x8]
 80903da:  test BYTE PTR [esi+0x3c], 0x4
 80903de:  je 80903ee
 80903e0:  mov esi, DWORD PTR [ebp-0x10ec]
 80903e6:  test esi, esi
 80903e8:  je 8092504
 80903ee:  mov ecx, DWORD PTR [ebp-0x10f4]
 80903f4:  mov eax, DWORD PTR [ebp-0x109c]
 80903fa:  lea edx, [ecx+ecx*2]
 80903fd:  shl edx, 0x4
 8090400:  add eax, edx
 8090402:  test eax, eax
 8090404:  je 80928cb
 809040a:  mov eax, DWORD PTR [ebp-0x1074]
 8090410:  test eax, eax
 8090412:  je 8091c91
 8090418:  mov ecx, DWORD PTR [ebp-0x109c]
 809041e:  mov esi, edi
 8090420:  mov ebx, DWORD PTR [ebp-0x1094]
 8090426:  sar esi, 0x1f
 8090429:  mov eax, DWORD PTR [ecx+edx+0x24]
 809042d:  lea eax, [eax+eax*2]
 8090430:  mov eax, DWORD PTR [ebx+eax*4]
 8090433:  mov DWORD PTR [eax], edi
 8090435:  mov DWORD PTR [eax+0x4], esi
 8090438:  jmp 808ed28
 809043d:  mov ecx, DWORD PTR [ebp-0x10f0]
 8090443:  lea eax, [ebp-0x1004]
 8090449:  mov DWORD PTR [esp+0x8], 0xfa0
 8090451:  mov DWORD PTR [esp+0x4], eax
 8090455:  mov DWORD PTR [esp], ecx
 8090458:  call 806b060
 809045d:  mov DWORD PTR [ebp-0x1068], 0x0
 8090467:  mov esi, eax
 8090469:  jmp 80900a9
 809046e:  mov esi, DWORD PTR [ebp-0x10f4]
 8090474:  mov eax, DWORD PTR [ebp-0x109c]
 809047a:  lea edx, [esi+esi*2]
 809047d:  shl edx, 0x4
 8090480:  add eax, edx
 8090482:  test eax, eax
 8090484:  je 809270e
 809048a:  mov ecx, DWORD PTR [ebp-0x109c]
 8090490:  mov ebx, DWORD PTR [ebp-0x1094]
 8090496:  mov eax, DWORD PTR [ecx+edx+0x24]
 809049a:  lea eax, [eax+eax*2]
 809049d:  mov eax, DWORD PTR [ebx+eax*4]
 80904a0:  test eax, eax
 80904a2:  je 80926ed
 80904a8:  mov DWORD PTR [ebp-0x113c], eax
 80904ae:  mov DWORD PTR [ebp-0x1090], 0x0
 80904b8:  mov DWORD PTR [ebp-0x108c], 0x10
 80904c2:  mov DWORD PTR [ebp-0x1088], 0x1
 80904cc:  mov DWORD PTR [ebp-0x1078], 0x0
 80904d6:  mov DWORD PTR [ebp-0x1054], 0x78
 80904e0:  cmp DWORD PTR [ebp-0x1060], 0x0
 80904e7:  jl 8091483
 80904ed:  jne 8090e73
 80904f3:  mov ecx, DWORD PTR [ebp-0x113c]
 80904f9:  mov BYTE PTR [ebp-0x1055], 0x20
 8090500:  test ecx, ecx
 8090502:  jne 8090e80
 8090508:  cmp DWORD PTR [ebp-0x108c], 0x8
 809050f:  je 8092402
 8090515:  mov esi, DWORD PTR [ebp-0x10fc]
 809051b:  mov BYTE PTR [ebp-0x1055], 0x20
 8090522:  mov DWORD PTR [ebp-0x1030], 0x0
 809052c:  jmp 808fee1
 8090531:  mov edx, DWORD PTR ds:0x80d2e78
 8090537:  test edx, edx
 8090539:  je 8092538
 809053f:  mov ecx, DWORD PTR [ebp-0x10f4]
 8090545:  lea eax, [ecx+ecx*2]
 8090548:  mov ecx, DWORD PTR [ebp-0x109c]
 809054e:  shl eax, 0x4
 8090551:  add ecx, eax
 8090553:  mov eax, DWORD PTR [ecx+0x8]
 8090556:  mov eax, DWORD PTR [edx+eax*4]
 8090559:  test eax, eax
 809055b:  mov DWORD PTR [ebp-0x1150], eax
 8090561:  je 8092e28
 8090567:  mov eax, DWORD PTR [ecx+0x2c]
 809056a:  mov esi, DWORD PTR [ecx+0x2c]
 809056d:  lea eax, [eax*4+0x10]
 8090574:  sub esp, eax
 8090576:  lea ebx, [esp+0x23]
 809057a:  and ebx, 0xf0
 809057d:  test esi, esi
 809057f:  je 809059f
 8090581:  mov esi, DWORD PTR [ebp-0x1094]
 8090587:  xor edx, edx
 8090589:  mov eax, edx
 809058b:  add eax, DWORD PTR [ecx+0x24]
 809058e:  lea eax, [eax+eax*2]
 8090591:  lea eax, [esi+eax*4]
 8090594:  mov DWORD PTR [ebx+edx*4], eax
 8090597:  add edx, 0x1
 809059a:  cmp DWORD PTR [ecx+0x2c], edx
 809059d:  ja 8090589
 809059f:  mov eax, DWORD PTR [ebp+0x8]
 80905a2:  mov DWORD PTR [esp+0x8], ebx
 80905a6:  mov DWORD PTR [esp+0x4], ecx
 80905aa:  mov DWORD PTR [esp], eax
 80905ad:  call DWORD PTR [ebp-0x1150]
 80905b3:  test eax, eax
 80905b5:  mov edx, eax
 80905b7:  js 8090967
 80905bd:  cmp edi, 0x7ffffffe
 80905c3:  jbe 808f071
 80905c9:  mov DWORD PTR [esp+0xc], 0x80c4cc8
 80905d1:  mov DWORD PTR [esp+0x8], 0x777
 80905d9:  mov DWORD PTR [esp+0x4], 0x80b0dd7
 80905e1:  mov DWORD PTR [esp], 0x80b0e40
 80905e8:  call 8051490
 80905ed:  lea esi, [esi]
 80905f0:  add DWORD PTR [ebp-0x1108], 0x4
 80905f7:  mov edx, DWORD PTR [ebp-0x1108]
 80905fd:  mov edx, DWORD PTR [edx]
 80905ff:  mov eax, edx
 8090601:  sub eax, 0x20
 8090604:  cmp eax, 0x5a
 8090607:  mov DWORD PTR [ebp-0x10ac], edx
 809060d:  jbe 8090656
 809060f:  mov ebx, DWORD PTR [ebp-0x1018]
 8090615:  mov ecx, 0x808f918
 809061a:  mov esi, DWORD PTR [ebp-0x10f8]
 8090620:  mov DWORD PTR [ebp-0x10c8], 0x0
 809062a:  mov DWORD PTR [ebp-0x10c0], 0x0
 8090634:  jmp 808ef5d
 8090639:  add DWORD PTR [ebp-0x1108], 0x4
 8090640:  mov eax, DWORD PTR [ebp-0x1108]
 8090646:  mov eax, DWORD PTR [eax]
 8090648:  mov DWORD PTR [ebp-0x10ac], eax
 809064e:  sub eax, 0x20
 8090651:  cmp eax, 0x5a
 8090654:  ja 809060f
 8090656:  mov eax, DWORD PTR [eax*4+0x80c50a0]
 809065d:  mov ebx, DWORD PTR [ebp-0x1018]
 8090663:  mov esi, DWORD PTR [ebp-0x10f8]
 8090669:  mov DWORD PTR [ebp-0x10c8], 0x0
 8090673:  mov ecx, DWORD PTR [eax*4+0x80c4da0]
 809067a:  mov DWORD PTR [ebp-0x10c0], 0x0
 8090684:  jmp 808ef5d
 8090689:  mov eax, DWORD PTR [ebp-0x10ac]
 809068f:  mov DWORD PTR [ebp-0x58], 0x0
 8090696:  movzx edx, BYTE PTR [ebp-0x10c4]
 809069d:  movzx ecx, BYTE PTR [ebp-0x10c0]
 80906a4:  mov ebx, DWORD PTR [ebp-0x1008]
 80906aa:  mov DWORD PTR [ebp-0x5c], eax
 80906ad:  movzx eax, BYTE PTR [ebp-0x58]
 80906b1:  add edx, edx
 80906b3:  mov esi, DWORD PTR [ebp-0x1020]
 80906b9:  shl ecx, 0x2
 80906bc:  or BYTE PTR [ebp-0x57], 0x4
 80906c0:  and eax, 0xfc
 80906c3:  or al, BYTE PTR [ebp-0x10c8]
 80906c9:  mov DWORD PTR [ebp-0x64], ebx
 80906cc:  mov DWORD PTR [ebp-0x60], esi
 80906cf:  or eax, edx
 80906d1:  movzx edx, BYTE PTR [ebp-0x10dc]
 80906d8:  and eax, 0xf3
 80906db:  or eax, ecx
 80906dd:  movzx ecx, BYTE PTR [ebp-0x10d8]
 80906e4:  shl edx, 0x3
 80906e7:  or eax, edx
 80906e9:  movzx edx, BYTE PTR [ebp-0x10d4]
 80906f0:  shl ecx, 0x4
 80906f3:  and eax, 0xcf
 80906f6:  or eax, ecx
 80906f8:  movzx ecx, BYTE PTR [ebp-0x10d0]
 80906ff:  shl edx, 0x5
 8090702:  or eax, edx
 8090704:  movzx edx, BYTE PTR [ebp-0x10cc]
 809070b:  shl ecx, 0x6
 809070e:  and eax, 0x3f
 8090711:  or eax, ecx
 8090713:  shl edx, 0x7
 8090716:  or eax, edx
 8090718:  mov edx, DWORD PTR [ebp-0x10b0]
 809071e:  mov BYTE PTR [ebp-0x58], al
 8090721:  mov DWORD PTR [ebp-0x54], edx
 8090724:  mov edx, DWORD PTR [ebp-0x10c8]
 809072a:  test edx, edx
 809072c:  je 8091bab
 8090732:  mov ecx, DWORD PTR [ebp-0x1018]
 8090738:  mov ebx, DWORD PTR [ebp-0x1018]
 809073e:  add ecx, 0xc
 8090741:  mov eax, DWORD PTR [ebx]
 8090743:  mov edx, DWORD PTR [ebx+0x4]
 8090746:  mov DWORD PTR [ebp+0x10], ecx
 8090749:  mov ecx, DWORD PTR [ebx+0x8]
 809074c:  mov DWORD PTR [ebp-0x34], eax
 809074f:  mov DWORD PTR [ebp-0x30], edx
 8090752:  mov DWORD PTR [ebp-0x2c], ecx
 8090755:  mov ecx, DWORD PTR [ebp+0x8]
 8090758:  lea eax, [ebp-0x34]
 809075b:  lea edx, [ebp-0x64]
 809075e:  mov DWORD PTR [ebp-0x14], eax
 8090761:  lea eax, [ebp-0x14]
 8090764:  mov DWORD PTR [esp+0x4], edx
 8090768:  mov DWORD PTR [esp+0x8], eax
 809076c:  mov DWORD PTR [esp], ecx
 809076f:  call 805fe40
 8090774:  test eax, eax
 8090776:  mov edx, eax
 8090778:  js 8090967
 809077e:  cmp edi, 0x7ffffffe
 8090784:  jbe 808eb5b
 809078a:  mov DWORD PTR [esp+0xc], 0x80c4cc8
 8090792:  mov DWORD PTR [esp+0x8], 0x62c
 809079a:  mov DWORD PTR [esp+0x4], 0x80b0dd7
 80907a2:  mov DWORD PTR [esp], 0x80b0e40
 80907a9:  call 8051490
 80907ae:  xchg ax, ax
 80907b0:  mov esi, DWORD PTR [ebp-0x1018]
 80907b6:  mov ebx, DWORD PTR [ebp-0x1018]
 80907bc:  mov eax, DWORD PTR [esi]
 80907be:  add ebx, 0x4
 80907c1:  mov DWORD PTR [ebp+0x10], ebx
 80907c4:  test eax, eax
 80907c6:  je 8092783
 80907cc:  mov DWORD PTR [ebp-0x1138], eax
 80907d2:  mov DWORD PTR [ebp-0x10e4], 0x0
 80907dc:  mov DWORD PTR [ebp-0x10e0], 0x10
 80907e6:  mov DWORD PTR [ebp-0x10dc], 0x1
 80907f0:  mov DWORD PTR [ebp-0x10cc], 0x0
 80907fa:  mov DWORD PTR [ebp-0x10ac], 0x78
 8090804:  cmp DWORD PTR [ebp-0x1008], 0x0
 809080b:  jl 8090da5
 8090811:  jne 80916d8
 8090817:  mov ecx, DWORD PTR [ebp-0x1138]
 809081d:  mov DWORD PTR [ebp-0x10b0], 0x20
 8090827:  test ecx, ecx
 8090829:  jne 8090db5
 809082f:  cmp DWORD PTR [ebp-0x10e0], 0x8
 8090836:  je 80923aa
 809083c:  mov esi, DWORD PTR [ebp-0x10fc]
 8090842:  xor eax, eax
 8090844:  mov DWORD PTR [ebp-0x10b0], 0x20
 809084e:  mov DWORD PTR [ebp-0x1038], 0x0
 8090858:  jmp 808fc4e
 809085d:  mov eax, DWORD PTR [ebp-0x10ac]
 8090863:  mov DWORD PTR [ebp-0x58], 0x0
 809086a:  movzx edx, BYTE PTR [ebp-0x10c4]
 8090871:  movzx ecx, BYTE PTR [ebp-0x10c0]
 8090878:  mov ebx, DWORD PTR [ebp-0x1008]
 809087e:  mov DWORD PTR [ebp-0x5c], eax
 8090881:  movzx eax, BYTE PTR [ebp-0x58]
 8090885:  add edx, edx
 8090887:  mov esi, DWORD PTR [ebp-0x1020]
 809088d:  shl ecx, 0x2
 8090890:  mov DWORD PTR [ebp-0x64], ebx
 8090893:  and eax, 0xfc
 8090896:  or al, BYTE PTR [ebp-0x10c8]
 809089c:  mov DWORD PTR [ebp-0x60], esi
 809089f:  or eax, edx
 80908a1:  movzx edx, BYTE PTR [ebp-0x10dc]
 80908a8:  and eax, 0xf3
 80908ab:  or eax, ecx
 80908ad:  movzx ecx, BYTE PTR [ebp-0x10d8]
 80908b4:  shl edx, 0x3
 80908b7:  or eax, edx
 80908b9:  movzx edx, BYTE PTR [ebp-0x10d4]
 80908c0:  shl ecx, 0x4
 80908c3:  and eax, 0xcf
 80908c6:  or eax, ecx
 80908c8:  movzx ecx, BYTE PTR [ebp-0x10d0]
 80908cf:  shl edx, 0x5
 80908d2:  or eax, edx
 80908d4:  movzx edx, BYTE PTR [ebp-0x10cc]
 80908db:  shl ecx, 0x6
 80908de:  and eax, 0x3f
 80908e1:  or eax, ecx
 80908e3:  mov ecx, DWORD PTR [ebp-0x10c8]
 80908e9:  shl edx, 0x7
 80908ec:  or eax, edx
 80908ee:  movzx edx, BYTE PTR [ebp-0x10b4]
 80908f5:  mov BYTE PTR [ebp-0x58], al
 80908f8:  movzx eax, BYTE PTR [ebp-0x57]
 80908fc:  shl edx, 0x3
 80908ff:  or eax, 0x4
 8090902:  and eax, 0xf7
 8090905:  or eax, edx
 8090907:  mov edx, DWORD PTR [ebp-0x10b0]
 809090d:  test ecx, ecx
 809090f:  mov BYTE PTR [ebp-0x57], al
 8090912:  mov DWORD PTR [ebp-0x54], edx
 8090915:  je 8091b6c
 809091b:  mov ecx, DWORD PTR [ebp-0x1018]
 8090921:  mov ebx, DWORD PTR [ebp-0x1018]
 8090927:  add ecx, 0xc
 809092a:  mov eax, DWORD PTR [ebx]
 809092c:  mov edx, DWORD PTR [ebx+0x4]
 809092f:  mov DWORD PTR [ebp+0x10], ecx
 8090932:  mov ecx, DWORD PTR [ebx+0x8]
 8090935:  mov DWORD PTR [ebp-0x34], eax
 8090938:  mov DWORD PTR [ebp-0x30], edx
 809093b:  mov DWORD PTR [ebp-0x2c], ecx
 809093e:  mov ecx, DWORD PTR [ebp+0x8]
 8090941:  lea eax, [ebp-0x34]
 8090944:  lea edx, [ebp-0x64]
 8090947:  mov DWORD PTR [ebp-0x14], eax
 809094a:  lea eax, [ebp-0x14]
 809094d:  mov DWORD PTR [esp+0x4], edx
 8090951:  mov DWORD PTR [esp+0x8], eax
 8090955:  mov DWORD PTR [esp], ecx
 8090958:  call 805d430
 809095d:  test eax, eax
 809095f:  mov edx, eax
 8090961:  jns 809077e
 8090967:  mov ecx, DWORD PTR [ebp-0x1100]
 809096d:  mov edi, 0xffffffff
 8090972:  test ecx, ecx
 8090974:  jne 8090a97
 809097a:  lea esi, [esi]
 8090980:  mov ecx, DWORD PTR [ebp+0x8]
 8090983:  cmp WORD PTR [ecx], 0x0
 8090987:  js 80909b4
 8090989:  mov edx, DWORD PTR [ecx+0x48]
 809098c:  mov eax, DWORD PTR [edx+0x4]
 809098f:  sub eax, 0x1
 8090992:  test eax, eax
 8090994:  mov DWORD PTR [edx+0x4], eax
 8090997:  jne 80909b4
 8090999:  mov DWORD PTR [edx+0x8], 0x0
 80909a0:  cmp DWORD PTR gs:0xc, 0x0
 80909a8:  je 80909ab
 80909aa:  sub DWORD PTR [edx], 0x1
 80909ae:  jne 80930c5
 80909b4:  mov edx, DWORD PTR [ebp-0x10e8]
 80909ba:  test edx, edx
 80909bc:  je 808e82a
 80909c2:  lea eax, [ebp-0x50]
 80909c5:  mov DWORD PTR [esp+0x4], 0x0
 80909cd:  mov DWORD PTR [esp], eax
 80909d0:  call 0
 80909d5:  jmp 808e82a
 80909da:  mov DWORD PTR [ebp-0x10e0], 0xa
 80909e4:  jmp 808fb92
 80909e9:  mov DWORD PTR [ebp-0x10e0], 0x8
 80909f3:  jmp 808fb92
 80909f8:  mov ecx, DWORD PTR [ebp-0x10c8]
 80909fe:  test ecx, ecx
 8090a00:  je 8091a0a
 8090a06:  mov ecx, DWORD PTR [ebp-0x1018]
 8090a0c:  mov eax, DWORD PTR [ebp-0x1018]
 8090a12:  mov edx, DWORD PTR [ecx+0x4]
 8090a15:  add eax, 0x8
 8090a18:  mov DWORD PTR [ebp+0x10], eax
 8090a1b:  mov eax, DWORD PTR [ecx]
 8090a1d:  mov ebx, edx
 8090a1f:  shr ebx, 0x1f
 8090a22:  test ebx, ebx
 8090a24:  mov DWORD PTR [ebp-0x10e4], ebx
 8090a2a:  je 8090a33
 8090a2c:  neg eax
 8090a2e:  adc edx, 0x0
 8090a31:  neg edx
 8090a33:  mov DWORD PTR [ebp-0x1138], eax
 8090a39:  mov ebx, edx
 8090a3b:  mov DWORD PTR [ebp-0x10e0], 0xa
 8090a45:  jmp 808fbe1
 8090a4a:  add DWORD PTR [ebp-0x1108], 0x4
 8090a51:  mov ecx, DWORD PTR [ebp-0x1108]
 8090a57:  mov ecx, DWORD PTR [ecx]
 8090a59:  mov eax, ecx
 8090a5b:  sub eax, 0x20
 8090a5e:  cmp eax, 0x5a
 8090a61:  mov DWORD PTR [ebp-0x10ac], ecx
 8090a67:  jbe 808fad6
 8090a6d:  mov ebx, DWORD PTR [ebp-0x1018]
 8090a73:  mov ecx, 0x808f918
 8090a78:  mov esi, DWORD PTR [ebp-0x10f8]
 8090a7e:  mov DWORD PTR [ebp-0x10c8], 0x1
 8090a88:  mov DWORD PTR [ebp-0x10c0], 0x1
 8090a92:  jmp 808ef5d
 8090a97:  mov edx, DWORD PTR [ebp-0x1100]
 8090a9d:  mov DWORD PTR [esp], edx
 8090aa0:  call 804b4a0
 8090aa5:  lea esi, [esi]
 8090aa8:  mov edi, 0xffffffff
 8090aad:  jmp 8090980
 8090ab2:  lea esi, [esi]
 8090ab8:  mov eax, DWORD PTR [ebp-0x1148]
 8090abe:  mov edi, 0xffffffff
 8090ac3:  mov DWORD PTR [eax+ebx], 0x9
 8090aca:  jmp 808e82a
 8090acf:  mov edx, DWORD PTR [ebp+0x8]
 8090ad2:  lea eax, [ebp-0x50]
 8090ad5:  mov DWORD PTR [esp+0x4], 0x8061830
 8090add:  mov DWORD PTR [esp], eax
 8090ae0:  mov DWORD PTR [esp+0x8], edx
 8090ae4:  call 0
 8090ae9:  mov ecx, DWORD PTR [ebp+0x8]
 8090aec:  mov ebx, DWORD PTR [ecx]
 8090aee:  jmp 808e8d2
 8090af3:  neg eax
 8090af5:  or ecx, 0x20
 8090af8:  mov BYTE PTR [ebx+0xc], cl
 8090afb:  mov DWORD PTR [ebx+0x4], eax
 8090afe:  mov DWORD PTR [ebp-0x1080], 0x1
 8090b08:  jmp 808ee9f
 8090b0d:  mov ecx, DWORD PTR [ebp-0x113c]
 8090b13:  test ecx, ecx
 8090b15:  je 808fee1
 8090b1b:  mov edx, DWORD PTR [ebp-0x1088]
 8090b21:  test edx, edx
 8090b23:  je 808fee1
 8090b29:  cmp DWORD PTR [ebp-0x108c], 0x8
 8090b30:  jne 808fee1
 8090b36:  mov eax, DWORD PTR [ebp-0x10fc]
 8090b3c:  sub esi, 0x4
 8090b3f:  mov DWORD PTR [esi], 0x30
 8090b45:  sub eax, esi
 8090b47:  mov DWORD PTR [ebp-0x1030], eax
 8090b4d:  jmp 808fee1
 8090b52:  mov ecx, DWORD PTR [ebp-0x1090]
 8090b58:  test ecx, ecx
 8090b5a:  jne 8091609
 8090b60:  mov edx, DWORD PTR [ebp-0x107c]
 8090b66:  test edx, edx
 8090b68:  jne 8091b49
 8090b6e:  mov eax, DWORD PTR [ebp-0x1084]
 8090b74:  test eax, eax
 8090b76:  jne 8091c28
 8090b7c:  mov eax, DWORD PTR [ebp-0x113c]
 8090b82:  test eax, eax
 8090b84:  je 8090b9d
 8090b86:  mov eax, DWORD PTR [ebp-0x1088]
 8090b8c:  test eax, eax
 8090b8e:  je 8090b9d
 8090b90:  cmp DWORD PTR [ebp-0x108c], 0x10
 8090b97:  je 80922d5
 8090b9d:  mov eax, DWORD PTR [ebp-0x1024]
 8090ba3:  test eax, eax
 8090ba5:  je 8090be4
 8090ba7:  mov ebx, DWORD PTR [ebp-0x1024]
 8090bad:  mov eax, DWORD PTR [ebp+0x8]
 8090bb0:  mov DWORD PTR [esp+0x4], 0x30
 8090bb8:  mov DWORD PTR [esp+0x8], ebx
 8090bbc:  mov DWORD PTR [esp], eax
 8090bbf:  call 8062c50
 8090bc4:  cmp edi, 0x7ffffffe
 8090bca:  mov edx, eax
 8090bcc:  ja 808fb61
 8090bd2:  mov eax, 0x7fffffff
 8090bd7:  sub eax, edi
 8090bd9:  cmp edx, eax
 8090bdb:  ja 8090967
 8090be1:  lea edi, [edx+edi]
 8090be4:  test edi, edi
 8090be6:  js 8092e04
 8090bec:  mov edx, DWORD PTR [ebp+0x8]
 8090bef:  mov ebx, DWORD PTR [ebp-0x1030]
 8090bf5:  mov eax, DWORD PTR [edx+0x94]
 8090bfb:  sar ebx, 0x2
 8090bfe:  mov DWORD PTR [esp+0x8], ebx
 8090c02:  mov DWORD PTR [esp+0x4], esi
 8090c06:  mov DWORD PTR [esp], edx
 8090c09:  call DWORD PTR [eax+0x1c]
 8090c0c:  cmp ebx, eax
 8090c0e:  jne 8090967
 8090c14:  mov esi, 0x7fffffff
 8090c19:  mov eax, esi
 8090c1b:  sub eax, edi
 8090c1d:  cmp ebx, eax
 8090c1f:  ja 8090967
 8090c25:  mov eax, DWORD PTR [ebp-0x1130]
 8090c2b:  add edi, ebx
 8090c2d:  sub eax, DWORD PTR [ebp-0x1024]
 8090c33:  add eax, DWORD PTR [ebp-0x1064]
 8090c39:  test eax, eax
 8090c3b:  jle 808ed28
 8090c41:  mov ecx, DWORD PTR [ebp+0x8]
 8090c44:  mov DWORD PTR [esp+0x8], eax
 8090c48:  mov DWORD PTR [esp+0x4], 0x20
 8090c50:  mov DWORD PTR [esp], ecx
 8090c53:  call 8062c50
 8090c58:  cmp edi, 0x7ffffffe
 8090c5e:  ja 808fb61
 8090c64:  sub esi, edi
 8090c66:  cmp eax, esi
 8090c68:  ja 8090967
 8090c6e:  lea edi, [eax+edi]
 8090c71:  lea esi, [esi]
 8090c78:  jmp 808ed28
 8090c7d:  mov eax, DWORD PTR [ebp-0x10e4]
 8090c83:  test eax, eax
 8090c85:  jne 809159e
 8090c8b:  mov eax, DWORD PTR [ebp-0x10d0]
 8090c91:  test eax, eax
 8090c93:  jne 8091b88
 8090c99:  mov eax, DWORD PTR [ebp-0x10d8]
 8090c9f:  test eax, eax
 8090ca1:  jne 8091c05
 8090ca7:  mov eax, DWORD PTR [ebp-0x1138]
 8090cad:  test eax, eax
 8090caf:  je 8090cc8
 8090cb1:  mov eax, DWORD PTR [ebp-0x10dc]
 8090cb7:  test eax, eax
 8090cb9:  je 8090cc8
 8090cbb:  cmp DWORD PTR [ebp-0x10e0], 0x10
 8090cc2:  je 8092267
 8090cc8:  mov ebx, DWORD PTR [ebp-0x10b8]
 8090cce:  test ebx, ebx
 8090cd0:  je 8090d0f
 8090cd2:  mov ebx, DWORD PTR [ebp-0x10b8]
 8090cd8:  mov eax, DWORD PTR [ebp+0x8]
 8090cdb:  mov DWORD PTR [esp+0x4], 0x30
 8090ce3:  mov DWORD PTR [esp+0x8], ebx
 8090ce7:  mov DWORD PTR [esp], eax
 8090cea:  call 8062c50
 8090cef:  cmp edi, 0x7ffffffe
 8090cf5:  mov edx, eax
 8090cf7:  ja 809078a
 8090cfd:  mov eax, 0x7fffffff
 8090d02:  sub eax, edi
 8090d04:  cmp edx, eax
 8090d06:  ja 8090967
 8090d0c:  lea edi, [edx+edi]
 8090d0f:  test edi, edi
 8090d11:  js 8092e55
 8090d17:  mov edx, DWORD PTR [ebp+0x8]
 8090d1a:  mov ebx, DWORD PTR [ebp-0x1038]
 8090d20:  mov eax, DWORD PTR [edx+0x94]
 8090d26:  sar ebx, 0x2
 8090d29:  mov DWORD PTR [esp+0x8], ebx
 8090d2d:  mov DWORD PTR [esp+0x4], esi
 8090d31:  mov DWORD PTR [esp], edx
 8090d34:  call DWORD PTR [eax+0x1c]
 8090d37:  cmp ebx, eax
 8090d39:  jne 8090967
 8090d3f:  mov esi, 0x7fffffff
 8090d44:  mov eax, esi
 8090d46:  sub eax, edi
 8090d48:  cmp ebx, eax
 8090d4a:  ja 8090967
 8090d50:  mov eax, DWORD PTR [ebp-0x1120]
 8090d56:  add edi, ebx
 8090d58:  sub eax, DWORD PTR [ebp-0x10b8]
 8090d5e:  add eax, DWORD PTR [ebp-0x1020]
 8090d64:  test eax, eax
 8090d66:  jle 808eb6d
 8090d6c:  mov ecx, DWORD PTR [ebp+0x8]
 8090d6f:  mov DWORD PTR [esp+0x8], eax
 8090d73:  mov DWORD PTR [esp+0x4], 0x20
 8090d7b:  mov DWORD PTR [esp], ecx
 8090d7e:  call 8062c50
 8090d83:  cmp edi, 0x7ffffffe
 8090d89:  ja 809078a
 8090d8f:  sub esi, edi
 8090d91:  cmp eax, esi
 8090d93:  ja 8090967
 8090d99:  lea edi, [eax+edi]
 8090d9c:  lea esi, [esi]
 8090da0:  jmp 808eb6d
 8090da5:  mov ecx, DWORD PTR [ebp-0x1138]
 8090dab:  mov DWORD PTR [ebp-0x1008], 0x1
 8090db5:  cmp DWORD PTR [ebp-0x10ac], 0x58
 8090dbc:  mov esi, 0x80c4c20
 8090dc1:  je 8090dc8
 8090dc3:  mov esi, 0x80c4b80
 8090dc8:  cmp DWORD PTR [ebp-0x10e0], 0xa
 8090dcf:  je 8091a74
 8090dd5:  cmp DWORD PTR [ebp-0x10e0], 0x10
 8090ddc:  je 8091a53
 8090de2:  cmp DWORD PTR [ebp-0x10e0], 0x8
 8090de9:  mov ebx, DWORD PTR [ebp-0x10fc]
 8090def:  je 8091a9e
 8090df5:  mov eax, ecx
 8090df7:  xor edx, edx
 8090df9:  div DWORD PTR [ebp-0x10e0]
 8090dff:  sub ebx, 0x4
 8090e02:  mov ecx, eax
 8090e04:  mov eax, DWORD PTR [esi+edx*4]
 8090e07:  test ecx, ecx
 8090e09:  mov DWORD PTR [ebx], eax
 8090e0b:  jne 8090df5
 8090e0d:  mov esi, ebx
 8090e0f:  mov edx, DWORD PTR [ebp-0x10cc]
 8090e15:  test edx, edx
 8090e17:  je 8090e44
 8090e19:  mov eax, DWORD PTR [ebp-0x110c]
 8090e1f:  test eax, eax
 8090e21:  je 8090e44
 8090e23:  mov edx, DWORD PTR [ebp-0x1110]
 8090e29:  mov eax, esi
 8090e2b:  mov ecx, DWORD PTR [ebp-0x110c]
 8090e31:  mov DWORD PTR [esp], edx
 8090e34:  mov edx, DWORD PTR [ebp-0x10fc]
 8090e3a:  call 808e580
 8090e3f:  sub esp, 0x4
 8090e42:  mov esi, eax
 8090e44:  mov eax, DWORD PTR [ebp-0x10b4]
 8090e4a:  test eax, eax
 8090e4c:  je 8090e5b
 8090e4e:  cmp DWORD PTR [ebp-0x10e0], 0xa
 8090e55:  je 8091642
 8090e5b:  mov ecx, DWORD PTR [ebp-0x10fc]
 8090e61:  sub ecx, esi
 8090e63:  mov eax, ecx
 8090e65:  mov DWORD PTR [ebp-0x1038], ecx
 8090e6b:  sar eax, 0x2
 8090e6e:  jmp 808fc4e
 8090e73:  mov ecx, DWORD PTR [ebp-0x113c]
 8090e79:  mov BYTE PTR [ebp-0x1055], 0x20
 8090e80:  cmp DWORD PTR [ebp-0x1054], 0x58
 8090e87:  mov esi, 0x80c4c20
 8090e8c:  je 8090e93
 8090e8e:  mov esi, 0x80c4b80
 8090e93:  cmp DWORD PTR [ebp-0x108c], 0xa
 8090e9a:  je 80917f7
 8090ea0:  cmp DWORD PTR [ebp-0x108c], 0x10
 8090ea7:  je 8091842
 8090ead:  cmp DWORD PTR [ebp-0x108c], 0x8
 8090eb4:  mov ebx, DWORD PTR [ebp-0x10fc]
 8090eba:  je 8091821
 8090ec0:  mov eax, ecx
 8090ec2:  xor edx, edx
 8090ec4:  div DWORD PTR [ebp-0x108c]
 8090eca:  sub ebx, 0x4
 8090ecd:  mov ecx, eax
 8090ecf:  mov eax, DWORD PTR [esi+edx*4]
 8090ed2:  test ecx, ecx
 8090ed4:  mov DWORD PTR [ebx], eax
 8090ed6:  jne 8090ec0
 8090ed8:  mov esi, ebx
 8090eda:  mov eax, DWORD PTR [ebp-0x1078]
 8090ee0:  test eax, eax
 8090ee2:  je 8090f0f
 8090ee4:  mov eax, DWORD PTR [ebp-0x110c]
 8090eea:  test eax, eax
 8090eec:  je 8090f0f
 8090eee:  mov edx, DWORD PTR [ebp-0x1110]
 8090ef4:  mov eax, esi
 8090ef6:  mov ecx, DWORD PTR [ebp-0x110c]
 8090efc:  mov DWORD PTR [esp], edx
 8090eff:  mov edx, DWORD PTR [ebp-0x10fc]
 8090f05:  call 808e580
 8090f0a:  sub esp, 0x4
 8090f0d:  mov esi, eax
 8090f0f:  mov ebx, DWORD PTR [ebp-0x105c]
 8090f15:  test ebx, ebx
 8090f17:  je 8090f26
 8090f19:  cmp DWORD PTR [ebp-0x108c], 0xa
 8090f20:  je 809152a
 8090f26:  mov ecx, DWORD PTR [ebp-0x10fc]
 8090f2c:  sub ecx, esi
 8090f2e:  mov eax, ecx
 8090f30:  mov DWORD PTR [ebp-0x1030], ecx
 8090f36:  sar eax, 0x2
 8090f39:  jmp 808fed5
 8090f3e:  mov DWORD PTR [esp], ebx
 8090f41:  call 8074540
 8090f46:  test eax, eax
 8090f48:  jne 808ef11
 8090f4e:  mov DWORD PTR [esp], ebx
 8090f51:  call 804d6f0
 8090f56:  add ebx, eax
 8090f58:  mov DWORD PTR [ebp-0x1100], eax
 8090f5e:  mov DWORD PTR [ebp-0x10fc], ebx
 8090f64:  jmp 808ef36
 8090f69:  mov esi, DWORD PTR [ebp-0x10bc]
 8090f6f:  test esi, esi
 8090f71:  je 8091553
 8090f77:  mov eax, DWORD PTR [ebp-0x1018]
 8090f7d:  mov esi, DWORD PTR [ebp-0x1018]
 8090f83:  mov DWORD PTR [ebp-0x10e4], 0x0
 8090f8d:  mov DWORD PTR [ebp-0x10d8], 0x0
 8090f97:  movzx eax, BYTE PTR [eax]
 8090f9a:  add esi, 0x4
 8090f9d:  mov DWORD PTR [ebp+0x10], esi
 8090fa0:  mov DWORD PTR [ebp-0x10d0], 0x0
 8090faa:  mov DWORD PTR [ebp-0x1138], eax
 8090fb0:  jmp 8090804
 8090fb5:  mov ecx, DWORD PTR [ebp-0x10f4]
 8090fbb:  mov eax, DWORD PTR [ebp-0x109c]
 8090fc1:  lea edx, [ecx+ecx*2]
 8090fc4:  shl edx, 0x4
 8090fc7:  add eax, edx
 8090fc9:  test eax, eax
 8090fcb:  je 8092181
 8090fd1:  mov eax, DWORD PTR [ebp-0x106c]
 8090fd7:  test eax, eax
 8090fd9:  je 809173a
 8090fdf:  mov esi, DWORD PTR [ebp-0x109c]
 8090fe5:  mov eax, DWORD PTR [esi+edx+0x24]
 8090fe9:  mov edx, DWORD PTR [ebp-0x1094]
 8090fef:  lea eax, [eax+eax*2]
 8090ff2:  movzx eax, BYTE PTR [edx+eax*4]
 8090ff6:  mov DWORD PTR [ebp-0x1090], 0x0
 8091000:  mov DWORD PTR [ebp-0x1084], 0x0
 809100a:  mov DWORD PTR [ebp-0x107c], 0x0
 8091014:  mov DWORD PTR [ebp-0x113c], eax
 809101a:  jmp 80904e0
 809101f:  mov eax, DWORD PTR [ebp-0x10a4]
 8091025:  mov ebx, DWORD PTR [ebp-0x109c]
 809102b:  mov DWORD PTR [ebp-0x100c], eax
 8091031:  mov edx, DWORD PTR [ebp-0x1098]
 8091037:  mov eax, DWORD PTR [ebp-0x10]
 809103a:  mov DWORD PTR [ebp-0x102c], edx
 8091040:  cmp edx, eax
 8091042:  jae 809104c
 8091044:  mov DWORD PTR [ebp-0x102c], eax
 809104a:  mov edx, eax
 809104c:  mov esi, DWORD PTR [ebp+0x8]
 809104f:  shl edx, 0x2
 8091052:  lea eax, [edx+0x10]
 8091055:  sub esp, eax
 8091057:  lea ecx, [esp+0x23]
 809105b:  mov eax, DWORD PTR [esi+0x3c]
 809105e:  and ecx, 0xf0
 8091061:  mov DWORD PTR [esp+0x8], edx
 8091065:  mov DWORD PTR [esp], ecx
 8091068:  mov DWORD PTR [ebp-0x1128], ecx
 809106e:  and eax, 0x4
 8091071:  cmp eax, 0x1
 8091074:  sbb eax, eax
 8091076:  not eax
 8091078:  mov DWORD PTR [esp+0x4], eax
 809107c:  call 804ef50
 8091081:  mov edx, DWORD PTR [ebp-0x102c]
 8091087:  lea eax, [edx+edx*2]
 809108a:  lea eax, [eax*4+0x10]
 8091091:  sub esp, eax
 8091093:  mov eax, DWORD PTR [ebp-0x100c]
 8091099:  lea ecx, [esp+0x23]
 809109d:  and ecx, 0xf0
 80910a0:  mov DWORD PTR [ebp-0x112c], ecx
 80910a6:  test eax, eax
 80910a8:  mov DWORD PTR [ebp-0x1094], ecx
 80910ae:  je 809113c
 80910b4:  xor esi, esi
 80910b6:  jmp 80910f5
 80910b8:  mov eax, DWORD PTR [ebx+0x8]
 80910bb:  mov edx, DWORD PTR [ebx+0x24]
 80910be:  mov DWORD PTR [esp+0x4], ecx
 80910c2:  mov DWORD PTR [esp], ebx
 80910c5:  mov DWORD PTR [ebp-0x1154], eax
 80910cb:  mov eax, DWORD PTR [ebp-0x1128]
 80910d1:  mov ecx, DWORD PTR [ebp-0x1154]
 80910d7:  lea edx, [eax+edx*4]
 80910da:  mov DWORD PTR [esp+0x8], edx
 80910de:  mov edx, DWORD PTR ds:0x80d2f40
 80910e4:  call DWORD PTR [edx+ecx*4]
 80910e7:  add esi, 0x1
 80910ea:  add ebx, 0x30
 80910ed:  cmp esi, DWORD PTR [ebp-0x100c]
 80910f3:  jae 809113c
 80910f5:  mov eax, DWORD PTR [ebx+0x20]
 80910f8:  cmp eax, 0xff
 80910fb:  je 809110a
 80910fd:  mov edx, DWORD PTR [ebp-0x1128]
 8091103:  mov DWORD PTR [edx+eax*4], 0x0
 809110a:  mov eax, DWORD PTR [ebx+0x1c]
 809110d:  cmp eax, 0xff
 8091110:  je 809111f
 8091112:  mov ecx, DWORD PTR [ebp-0x1128]
 8091118:  mov DWORD PTR [ecx+eax*4], 0x0
 809111f:  mov ecx, DWORD PTR [ebx+0x2c]
 8091122:  test ecx, ecx
 8091124:  je 80910e7
 8091126:  cmp ecx, 0x1
 8091129:  jne 80910b8
 809112b:  mov edx, DWORD PTR [ebx+0x24]
 809112e:  mov eax, DWORD PTR [ebx+0x28]
 8091131:  mov ecx, DWORD PTR [ebp-0x1128]
 8091137:  mov DWORD PTR [ecx+edx*4], eax
 809113a:  jmp 80910e7
 809113c:  mov eax, DWORD PTR [ebp-0x102c]
 8091142:  mov ebx, DWORD PTR [ebp-0x112c]
 8091148:  mov DWORD PTR [ebp-0x1028], 0x0
 8091152:  mov esi, DWORD PTR [ebp-0x10f8]
 8091158:  test eax, eax
 809115a:  jne 80911cb
 809115c:  jmp 808eda3
 8091161:  lea esi, [esi]
 8091168:  cmp eax, 0x1
 809116b:  je 8091229
 8091171:  lea esi, [esi]
 8091178:  jle 80916ed
 809117e:  cmp eax, 0x3
 8091181:  lea esi, [esi]
 8091188:  je 8091196
 809118a:  lea esi, [esi]
 8091190:  jg 8091229
 8091196:  mov edx, DWORD PTR [ebp-0x10f8]
 809119c:  mov esi, DWORD PTR [ebp-0x10f8]
 80911a2:  mov eax, DWORD PTR [edx]
 80911a4:  add esi, 0x4
 80911a7:  mov DWORD PTR [ebx], eax
 80911a9:  add DWORD PTR [ebp-0x1028], 0x1
 80911b0:  add ebx, 0xc
 80911b3:  mov edx, DWORD PTR [ebp-0x1028]
 80911b9:  cmp DWORD PTR [ebp-0x102c], edx
 80911bf:  jbe 808eda3
 80911c5:  mov DWORD PTR [ebp-0x10f8], esi
 80911cb:  mov esi, DWORD PTR [ebp-0x1028]
 80911d1:  mov edx, DWORD PTR [ebp-0x1128]
 80911d7:  mov eax, DWORD PTR [edx+esi*4]
 80911da:  cmp eax, 0x5
 80911dd:  je 8091196
 80911df:  jle 8091168
 80911e1:  cmp eax, 0x100
 80911e6:  je 8091498
 80911ec:  lea esi, [esi]
 80911f0:  jg 8091241
 80911f2:  cmp eax, 0x6
 80911f5:  lea esi, [esi]
 80911f8:  je 809146b
 80911fe:  cmp eax, 0x7
 8091201:  lea esi, [esi]
 8091208:  je 8091453
 809120e:  test ah, 0x8
 8091211:  lea esi, [esi]
 8091218:  jne 8091229
 809121a:  fldz
 809121c:  fstp TBYTE PTR [ebx]
 809121e:  mov esi, DWORD PTR [ebp-0x10f8]
 8091224:  jmp 80911a9
 8091229:  mov ecx, DWORD PTR [ebp-0x10f8]
 809122f:  mov esi, DWORD PTR [ebp-0x10f8]
 8091235:  mov eax, DWORD PTR [ecx]
 8091237:  add esi, 0x4
 809123a:  mov DWORD PTR [ebx], eax
 809123c:  jmp 80911a9
 8091241:  cmp eax, 0x200
 8091246:  je 8091229
 8091248:  cmp eax, 0x400
 809124d:  je 8091229
 809124f:  cmp eax, 0x107
 8091254:  lea esi, [esi]
 8091258:  jne 809120e
 809125a:  mov ecx, DWORD PTR [ebp-0x10f8]
 8091260:  mov esi, DWORD PTR [ebp-0x10f8]
 8091266:  fld TBYTE PTR [ecx]
 8091268:  add esi, 0xc
 809126b:  fstp TBYTE PTR [ebx]
 809126d:  jmp 80911a9
 8091272:  mov DWORD PTR [ebp-0x1008], 0x1
 809127c:  xor eax, eax
 809127e:  mov esi, DWORD PTR [ebp-0x10e0]
 8091284:  cmp DWORD PTR [ebp-0x10ac], 0x58
 809128b:  mov edx, DWORD PTR [ebp-0x1138]
 8091291:  mov DWORD PTR [esp+0x4], ebx
 8091295:  sete al
 8091298:  mov DWORD PTR [esp+0x10], eax
 809129c:  mov eax, DWORD PTR [ebp-0x10fc]
 80912a2:  mov DWORD PTR [esp+0xc], esi
 80912a6:  mov DWORD PTR [esp], edx
 80912a9:  mov DWORD PTR [esp+0x8], eax
 80912ad:  call 808dd10
 80912b2:  mov esi, eax
 80912b4:  mov eax, DWORD PTR [ebp-0x10cc]
 80912ba:  test eax, eax
 80912bc:  je 80912e9
 80912be:  mov eax, DWORD PTR [ebp-0x110c]
 80912c4:  test eax, eax
 80912c6:  je 80912e9
 80912c8:  mov ecx, DWORD PTR [ebp-0x1110]
 80912ce:  mov eax, esi
 80912d0:  mov edx, DWORD PTR [ebp-0x10fc]
 80912d6:  mov DWORD PTR [esp], ecx
 80912d9:  mov ecx, DWORD PTR [ebp-0x110c]
 80912df:  call 808e580
 80912e4:  sub esp, 0x4
 80912e7:  mov esi, eax
 80912e9:  mov eax, DWORD PTR [ebp-0x10b4]
 80912ef:  test eax, eax
 80912f1:  je 808fc29
 80912f7:  cmp DWORD PTR [ebp-0x10e0], 0xa
 80912fe:  jne 808fc29
 8091304:  mov ecx, DWORD PTR [ebp-0x10fc]
 809130a:  mov eax, esi
 809130c:  mov edx, ecx
 809130e:  call 808e660
 8091313:  mov esi, eax
 8091315:  jmp 808fc29
 809131a:  mov BYTE PTR [ebp-0x1055], 0x20
 8091321:  xor eax, eax
 8091323:  mov esi, DWORD PTR [ebp-0x108c]
 8091329:  cmp DWORD PTR [ebp-0x1054], 0x58
 8091330:  mov edx, DWORD PTR [ebp-0x113c]
 8091336:  mov DWORD PTR [esp+0x4], ebx
 809133a:  sete al
 809133d:  mov DWORD PTR [esp+0x10], eax
 8091341:  mov eax, DWORD PTR [ebp-0x10fc]
 8091347:  mov DWORD PTR [esp+0xc], esi
 809134b:  mov DWORD PTR [esp], edx
 809134e:  mov DWORD PTR [esp+0x8], eax
 8091352:  call 808dd10
 8091357:  mov esi, eax
 8091359:  mov eax, DWORD PTR [ebp-0x1078]
 809135f:  test eax, eax
 8091361:  je 809138e
 8091363:  mov eax, DWORD PTR [ebp-0x110c]
 8091369:  test eax, eax
 809136b:  je 809138e
 809136d:  mov ecx, DWORD PTR [ebp-0x1110]
 8091373:  mov eax, esi
 8091375:  mov edx, DWORD PTR [ebp-0x10fc]
 809137b:  mov DWORD PTR [esp], ecx
 809137e:  mov ecx, DWORD PTR [ebp-0x110c]
 8091384:  call 808e580
 8091389:  sub esp, 0x4
 809138c:  mov esi, eax
 809138e:  mov ecx, DWORD PTR [ebp-0x105c]
 8091394:  test ecx, ecx
 8091396:  je 808fea4
 809139c:  cmp DWORD PTR [ebp-0x108c], 0xa
 80913a3:  jne 808fea4
 80913a9:  mov ecx, DWORD PTR [ebp-0x10fc]
 80913af:  mov eax, esi
 80913b1:  mov edx, ecx
 80913b3:  call 808e660
 80913b8:  mov esi, eax
 80913ba:  jmp 808fea4
 80913bf:  mov eax, DWORD PTR [ebp-0x10a0]
 80913c5:  shr eax, 1
 80913c7:  add DWORD PTR [ebp-0x10a0], eax
 80913cd:  jmp 808f9a0
 80913d2:  mov ebx, DWORD PTR [ebp-0x1018]
 80913d8:  mov ecx, 0x808f918
 80913dd:  mov esi, DWORD PTR [ebp-0x10f8]
 80913e3:  jmp 808ef5d
 80913e8:  mov DWORD PTR [ebp-0x1018], esi
 80913ee:  jmp 808ed28
 80913f3:  cmp DWORD PTR [ebp-0x1060], 0xff
 80913fa:  je 8091d7b
 8091400:  mov ecx, DWORD PTR [ebp-0x1060]
 8091406:  mov DWORD PTR [esp], esi
 8091409:  mov DWORD PTR [esp+0x4], ecx
 809140d:  call 806cea0
 8091412:  mov DWORD PTR [ebp-0x1050], 0x0
 809141c:  mov ebx, eax
 809141e:  jmp 8090158
 8091423:  cmp DWORD PTR [ebp-0x1008], 0xff
 809142a:  je 8091cbe
 8091430:  mov ebx, DWORD PTR [ebp-0x1008]
 8091436:  mov DWORD PTR [esp], esi
 8091439:  mov DWORD PTR [esp+0x4], ebx
 809143d:  call 806cea0
 8091442:  mov DWORD PTR [ebp-0x10a8], 0x0
 809144c:  mov ebx, eax
 809144e:  jmp 808f803
 8091453:  mov edx, DWORD PTR [ebp-0x10f8]
 8091459:  mov esi, DWORD PTR [ebp-0x10f8]
 809145f:  fld QWORD PTR [edx]
 8091461:  add esi, 0x8
 8091464:  fstp QWORD PTR [ebx]
 8091466:  jmp 80911a9
 809146b:  mov eax, DWORD PTR [ebp-0x10f8]
 8091471:  mov esi, DWORD PTR [ebp-0x10f8]
 8091477:  fld QWORD PTR [eax]
 8091479:  add esi, 0x8
 809147c:  fstp QWORD PTR [ebx]
 809147e:  jmp 80911a9
 8091483:  mov ecx, DWORD PTR [ebp-0x113c]
 8091489:  mov DWORD PTR [ebp-0x1060], 0x1
 8091493:  jmp 8090e80
 8091498:  mov ecx, DWORD PTR [ebp-0x10f8]
 809149e:  mov esi, DWORD PTR [ebp-0x10f8]
 80914a4:  mov eax, DWORD PTR [ecx]
 80914a6:  mov edx, DWORD PTR [ecx+0x4]
 80914a9:  add esi, 0x8
 80914ac:  mov DWORD PTR [ebx], eax
 80914ae:  mov DWORD PTR [ebx+0x4], edx
 80914b1:  jmp 80911a9
 80914b6:  mov eax, DWORD PTR [ebp+0x8]
 80914b9:  mov edx, DWORD PTR [eax+0x58]
 80914bc:  mov eax, DWORD PTR [edx+0x10]
 80914bf:  cmp eax, DWORD PTR [edx+0x14]
 80914c2:  jae 8092af8
 80914c8:  mov DWORD PTR [eax], 0x2d
 80914ce:  add eax, 0x4
 80914d1:  mov DWORD PTR [edx+0x10], eax
 80914d4:  cmp edi, 0x7fffffff
 80914da:  je 8090967
 80914e0:  add edi, 0x1
 80914e3:  jmp 808fd3e
 80914e8:  test ebx, ebx
 80914ea:  jle 8091523
 80914ec:  mov DWORD PTR [esp+0x8], ebx
 80914f0:  mov ebx, DWORD PTR [ebp+0x8]
 80914f3:  mov DWORD PTR [esp+0x4], 0x20
 80914fb:  mov DWORD PTR [esp], ebx
 80914fe:  call 8062c50
 8091503:  cmp edi, 0x7ffffffe
 8091509:  mov edx, eax
 809150b:  ja 809078a
 8091511:  mov eax, 0x7fffffff
 8091516:  sub eax, edi
 8091518:  cmp edx, eax
 809151a:  ja 8090967
 8091520:  lea edi, [edx+edi]
 8091523:  xor ebx, ebx
 8091525:  jmp 808fd14
 809152a:  mov ecx, DWORD PTR [ebp-0x10fc]
 8091530:  mov eax, esi
 8091532:  mov edx, ecx
 8091534:  call 808e660
 8091539:  mov ebx, DWORD PTR [ebp-0x10fc]
 809153f:  sub ebx, eax
 8091541:  mov esi, eax
 8091543:  mov eax, ebx
 8091545:  mov DWORD PTR [ebp-0x1030], ebx
 809154b:  sar eax, 0x2
 809154e:  jmp 808fed5
 8091553:  mov ebx, DWORD PTR [ebp-0x10c4]
 8091559:  test ebx, ebx
 809155b:  jne 8091bc7
 8091561:  mov ecx, DWORD PTR [ebp-0x1018]
 8091567:  mov edx, DWORD PTR [ebp-0x1018]
 809156d:  mov DWORD PTR [ebp-0x10e4], 0x0
 8091577:  mov DWORD PTR [ebp-0x10d8], 0x0
 8091581:  mov ecx, DWORD PTR [ecx]
 8091583:  add edx, 0x4
 8091586:  mov DWORD PTR [ebp+0x10], edx
 8091589:  mov DWORD PTR [ebp-0x10d0], 0x0
 8091593:  mov DWORD PTR [ebp-0x1138], ecx
 8091599:  jmp 8090804
 809159e:  mov ecx, DWORD PTR [ebp+0x8]
 80915a1:  mov edx, DWORD PTR [ecx+0x58]
 80915a4:  mov eax, DWORD PTR [edx+0x10]
 80915a7:  cmp eax, DWORD PTR [edx+0x14]
 80915aa:  jae 8092a94
 80915b0:  mov DWORD PTR [eax], 0x2d
 80915b6:  add eax, 0x4
 80915b9:  mov DWORD PTR [edx+0x10], eax
 80915bc:  cmp edi, 0x7fffffff
 80915c2:  je 8090967
 80915c8:  add edi, 0x1
 80915cb:  sub DWORD PTR [ebp-0x1020], 0x1
 80915d2:  jmp 8090ca7
 80915d7:  mov eax, DWORD PTR [ebp+0x8]
 80915da:  mov edx, DWORD PTR [eax+0x58]
 80915dd:  mov eax, DWORD PTR [edx+0x10]
 80915e0:  cmp eax, DWORD PTR [edx+0x14]
 80915e3:  jae 8092d26
 80915e9:  mov DWORD PTR [eax], 0x2d
 80915ef:  add eax, 0x4
 80915f2:  mov DWORD PTR [edx+0x10], eax
 80915f5:  cmp edi, 0x7fffffff
 80915fb:  je 8090967
 8091601:  add edi, 0x1
 8091604:  jmp 808ff9c
 8091609:  mov ecx, DWORD PTR [ebp+0x8]
 809160c:  mov edx, DWORD PTR [ecx+0x58]
 809160f:  mov eax, DWORD PTR [edx+0x10]
 8091612:  cmp eax, DWORD PTR [edx+0x14]
 8091615:  jae 8092c21
 809161b:  mov DWORD PTR [eax], 0x2d
 8091621:  add eax, 0x4
 8091624:  mov DWORD PTR [edx+0x10], eax
 8091627:  cmp edi, 0x7fffffff
 809162d:  je 8090967
 8091633:  add edi, 0x1
 8091636:  sub DWORD PTR [ebp-0x1064], 0x1
 809163d:  jmp 8090b7c
 8091642:  mov ecx, DWORD PTR [ebp-0x10fc]
 8091648:  mov eax, esi
 809164a:  mov edx, ecx
 809164c:  call 808e660
 8091651:  mov esi, eax
 8091653:  jmp 808fc3b
 8091658:  test ebx, ebx
 809165a:  jle 8091693
 809165c:  mov DWORD PTR [esp+0x8], ebx
 8091660:  mov ebx, DWORD PTR [ebp+0x8]
 8091663:  mov DWORD PTR [esp+0x4], 0x20
 809166b:  mov DWORD PTR [esp], ebx
 809166e:  call 8062c50
 8091673:  cmp edi, 0x7ffffffe
 8091679:  mov edx, eax
 809167b:  ja 808fb61
 8091681:  mov eax, 0x7fffffff
 8091686:  sub eax, edi
 8091688:  cmp edx, eax
 809168a:  ja 8090967
 8091690:  lea edi, [edx+edi]
 8091693:  xor ebx, ebx
 8091695:  jmp 808ff72
 809169a:  test edi, edi
 809169c:  js 8092b76
 80916a2:  mov edx, DWORD PTR [ebp+0x8]
 80916a5:  mov eax, DWORD PTR [edx+0x94]
 80916ab:  mov DWORD PTR [esp+0x8], ebx
 80916af:  mov DWORD PTR [esp+0x4], esi
 80916b3:  mov DWORD PTR [esp], edx
 80916b6:  call DWORD PTR [eax+0x1c]
 80916b9:  cmp eax, ebx
 80916bb:  jne 8090967
 80916c1:  mov eax, 0x7fffffff
 80916c6:  sub eax, edi
 80916c8:  cmp ebx, eax
 80916ca:  ja 8090967
 80916d0:  lea edi, [ebx+edi]
 80916d3:  jmp 808ed28
 80916d8:  mov ecx, DWORD PTR [ebp-0x1138]
 80916de:  mov DWORD PTR [ebp-0x10b0], 0x20
 80916e8:  jmp 8090db5
 80916ed:  cmp eax, 0xff
 80916f0:  je 8091705
 80916f2:  test eax, eax
 80916f4:  je 8091196
 80916fa:  lea esi, [esi]
 8091700:  jmp 809120e
 8091705:  mov eax, DWORD PTR [ebp+0x8]
 8091708:  test BYTE PTR [eax+0x3c], 0x4
 809170c:  lea esi, [esi]
 8091710:  jne 8092d1a
 8091716:  mov DWORD PTR [esp+0xc], 0x80c4cc8
 809171e:  mov DWORD PTR [esp+0x8], 0x6f0
 8091726:  mov DWORD PTR [esp+0x4], 0x80b0dd7
 809172e:  mov DWORD PTR [esp], 0x80b0e03
 8091735:  call 8051490
 809173a:  mov eax, DWORD PTR [ebp-0x1070]
 8091740:  test eax, eax
 8091742:  jne 8091da7
 8091748:  mov ecx, DWORD PTR [ebp-0x109c]
 809174e:  mov ebx, DWORD PTR [ebp-0x1094]
 8091754:  mov eax, DWORD PTR [ecx+edx+0x24]
 8091758:  lea eax, [eax+eax*2]
 809175b:  mov eax, DWORD PTR [ebx+eax*4]
 809175e:  mov DWORD PTR [ebp-0x1090], 0x0
 8091768:  mov DWORD PTR [ebp-0x1084], 0x0
 8091772:  mov DWORD PTR [ebp-0x107c], 0x0
 809177c:  mov DWORD PTR [ebp-0x113c], eax
 8091782:  jmp 80904e0
 8091787:  mov DWORD PTR [ebp-0x1060], 0x1
 8091791:  jmp 8091321
 8091796:  test edi, edi
 8091798:  js 8092e79
 809179e:  mov edx, DWORD PTR [ebp+0x8]
 80917a1:  mov eax, DWORD PTR [edx+0x94]
 80917a7:  mov DWORD PTR [esp+0x8], ebx
 80917ab:  mov DWORD PTR [esp+0x4], esi
 80917af:  mov DWORD PTR [esp], edx
 80917b2:  call DWORD PTR [eax+0x1c]
 80917b5:  cmp eax, ebx
 80917b7:  jne 8090967
 80917bd:  mov eax, 0x7fffffff
 80917c2:  sub eax, edi
 80917c4:  cmp ebx, eax
 80917c6:  ja 8090967
 80917cc:  lea edi, [ebx+edi]
 80917cf:  jmp 808eb6d
 80917d4:  mov ecx, DWORD PTR [ebp+0x8]
 80917d7:  mov edx, DWORD PTR [ecx+0x58]
 80917da:  mov eax, DWORD PTR [edx+0x10]
 80917dd:  cmp eax, DWORD PTR [edx+0x14]
 80917e0:  jae 8092e37
 80917e6:  mov DWORD PTR [eax], 0x2b
 80917ec:  add eax, 0x4
 80917ef:  mov DWORD PTR [edx+0x10], eax
 80917f2:  jmp 80914d4
 80917f7:  mov ebx, DWORD PTR [ebp-0x10fc]
 80917fd:  mov eax, 0xcccccccd
 8091802:  sub ebx, 0x4
 8091805:  mul ecx
 8091807:  shr edx, 0x3
 809180a:  lea eax, [edx+edx*4]
 809180d:  add eax, eax
 809180f:  sub ecx, eax
 8091811:  test edx, edx
 8091813:  mov eax, DWORD PTR [esi+ecx*4]
 8091816:  mov ecx, edx
 8091818:  mov DWORD PTR [ebx], eax
 809181a:  jne 80917fd
 809181c:  jmp 8090ed8
 8091821:  mov edx, DWORD PTR [ebp-0x10fc]
 8091827:  mov eax, ecx
 8091829:  sub edx, 0x4
 809182c:  and eax, 0x7
 809182f:  mov eax, DWORD PTR [esi+eax*4]
 8091832:  shr ecx, 0x3
 8091835:  test ecx, ecx
 8091837:  mov DWORD PTR [edx], eax
 8091839:  jne 8091827
 809183b:  mov esi, edx
 809183d:  jmp 8090eda
 8091842:  mov edx, DWORD PTR [ebp-0x10fc]
 8091848:  mov eax, ecx
 809184a:  sub edx, 0x4
 809184d:  and eax, 0xf
 8091850:  mov eax, DWORD PTR [esi+eax*4]
 8091853:  shr ecx, 0x4
 8091856:  test ecx, ecx
 8091858:  mov DWORD PTR [edx], eax
 809185a:  jne 8091848
 809185c:  mov esi, edx
 809185e:  jmp 8090eda
 8091863:  mov eax, DWORD PTR [eax*4+0x80c50a0]
 809186a:  mov ebx, DWORD PTR [ebp-0x1018]
 8091870:  mov esi, DWORD PTR [ebp-0x10f8]
 8091876:  mov DWORD PTR [ebp-0x10d4], 0x1
 8091880:  mov ecx, DWORD PTR [eax*4+0x80c5020]
 8091887:  mov DWORD PTR [ebp-0x10b0], 0x20
 8091891:  jmp 808ef5d
 8091896:  mov eax, DWORD PTR [eax*4+0x80c50a0]
 809189d:  mov ebx, DWORD PTR [ebp-0x1018]
 80918a3:  mov esi, DWORD PTR [ebp-0x10f8]
 80918a9:  mov DWORD PTR [ebp-0x10b4], 0x1
 80918b3:  mov ecx, DWORD PTR [eax*4+0x80c5020]
 80918ba:  jmp 808ef5d
 80918bf:  mov ebx, DWORD PTR [ebp-0x1018]
 80918c5:  mov ecx, 0x808f918
 80918ca:  mov esi, DWORD PTR [ebp-0x10f8]
 80918d0:  mov DWORD PTR [ebp-0x10d8], 0x1
 80918da:  jmp 808ef5d
 80918df:  mov eax, DWORD PTR [eax*4+0x80c50a0]
 80918e6:  mov ebx, DWORD PTR [ebp-0x1018]
 80918ec:  mov esi, DWORD PTR [ebp-0x10f8]
 80918f2:  mov DWORD PTR [ebp-0x10c4], 0x0
 80918fc:  mov ecx, DWORD PTR [eax*4+0x80c4da0]
 8091903:  mov DWORD PTR [ebp-0x10bc], 0x1
 809190d:  jmp 808ef5d
 8091912:  mov eax, DWORD PTR [eax*4+0x80c50a0]
 8091919:  mov ebx, DWORD PTR [ebp-0x1018]
 809191f:  mov esi, DWORD PTR [ebp-0x10f8]
 8091925:  mov DWORD PTR [ebp-0x10dc], 0x1
 809192f:  mov ecx, DWORD PTR [eax*4+0x80c5020]
 8091936:  jmp 808ef5d
 809193b:  mov eax, DWORD PTR [eax*4+0x80c50a0]
 8091942:  mov ebx, DWORD PTR [ebp-0x1018]
 8091948:  mov esi, DWORD PTR [ebp-0x10f8]
 809194e:  mov DWORD PTR [ebp-0x10c4], 0x1
 8091958:  mov ecx, DWORD PTR [eax*4+0x80c4ea0]
 809195f:  jmp 808ef5d
 8091964:  mov eax, DWORD PTR [eax*4+0x80c50a0]
 809196b:  mov ebx, DWORD PTR [ebp-0x1018]
 8091971:  mov esi, DWORD PTR [ebp-0x10f8]
 8091977:  mov DWORD PTR [ebp-0x10d0], 0x1
 8091981:  mov ecx, DWORD PTR [eax*4+0x80c5020]
 8091988:  jmp 808ef5d
 809198d:  mov eax, DWORD PTR [eax*4+0x80c50a0]
 8091994:  mov ebx, DWORD PTR [ebp-0x1018]
 809199a:  mov esi, DWORD PTR [ebp-0x10f8]
 80919a0:  mov DWORD PTR [ebp-0x10cc], 0x1
 80919aa:  mov ecx, DWORD PTR [eax*4+0x80c5020]
 80919b1:  jmp 808ef5d
 80919b6:  mov eax, DWORD PTR [eax*4+0x80c50a0]
 80919bd:  mov ebx, DWORD PTR [ebp-0x1018]
 80919c3:  mov esi, DWORD PTR [ebp-0x10f8]
 80919c9:  mov DWORD PTR [ebp-0x10c0], 0x1
 80919d3:  mov ecx, DWORD PTR [eax*4+0x80c4e20]
 80919da:  jmp 808ef5d
 80919df:  mov eax, DWORD PTR [ebp-0x10bc]
 80919e5:  test eax, eax
 80919e7:  je 809255b
 80919ed:  mov ebx, DWORD PTR [ebp-0x1018]
 80919f3:  mov edx, edi
 80919f5:  mov ecx, DWORD PTR [ebp-0x1018]
 80919fb:  mov eax, DWORD PTR [ebx]
 80919fd:  add ecx, 0x4
 8091a00:  mov DWORD PTR [ebp+0x10], ecx
 8091a03:  mov BYTE PTR [eax], dl
 8091a05:  jmp 808eb6d
 8091a0a:  mov edx, DWORD PTR [ebp-0x10bc]
 8091a10:  test edx, edx
 8091a12:  je 8092441
 8091a18:  mov edx, DWORD PTR [ebp-0x1018]
 8091a1e:  mov esi, DWORD PTR [ebp-0x1018]
 8091a24:  movsx eax, BYTE PTR [edx]
 8091a27:  add esi, 0x4
 8091a2a:  mov DWORD PTR [ebp+0x10], esi
 8091a2d:  mov ecx, eax
 8091a2f:  shr ecx, 0x1f
 8091a32:  test ecx, ecx
 8091a34:  mov DWORD PTR [ebp-0x10e4], ecx
 8091a3a:  je 8091a3e
 8091a3c:  neg eax
 8091a3e:  mov DWORD PTR [ebp-0x1138], eax
 8091a44:  mov DWORD PTR [ebp-0x10e0], 0xa
 8091a4e:  jmp 8090804
 8091a53:  mov edx, DWORD PTR [ebp-0x10fc]
 8091a59:  mov eax, ecx
 8091a5b:  sub edx, 0x4
 8091a5e:  and eax, 0xf
 8091a61:  mov eax, DWORD PTR [esi+eax*4]
 8091a64:  shr ecx, 0x4
 8091a67:  test ecx, ecx
 8091a69:  mov DWORD PTR [edx], eax
 8091a6b:  jne 8091a59
 8091a6d:  mov esi, edx
 8091a6f:  jmp 8090e0f
 8091a74:  mov ebx, DWORD PTR [ebp-0x10fc]
 8091a7a:  mov eax, 0xcccccccd
 8091a7f:  sub ebx, 0x4
 8091a82:  mul ecx
 8091a84:  shr edx, 0x3
 8091a87:  lea eax, [edx+edx*4]
 8091a8a:  add eax, eax
 8091a8c:  sub ecx, eax
 8091a8e:  test edx, edx
 8091a90:  mov eax, DWORD PTR [esi+ecx*4]
 8091a93:  mov ecx, edx
 8091a95:  mov DWORD PTR [ebx], eax
 8091a97:  jne 8091a7a
 8091a99:  jmp 8090e0d
 8091a9e:  mov edx, DWORD PTR [ebp-0x10fc]
 8091aa4:  mov eax, ecx
 8091aa6:  sub edx, 0x4
 8091aa9:  and eax, 0x7
 8091aac:  mov eax, DWORD PTR [esi+eax*4]
 8091aaf:  shr ecx, 0x3
 8091ab2:  test ecx, ecx
 8091ab4:  mov DWORD PTR [edx], eax
 8091ab6:  jne 8091aa4
 8091ab8:  mov esi, edx
 8091aba:  jmp 8090e0f
 8091abf:  mov ecx, DWORD PTR [ebp+0x8]
 8091ac2:  mov edx, DWORD PTR [ecx+0x58]
 8091ac5:  mov eax, DWORD PTR [edx+0x10]
 8091ac8:  cmp eax, DWORD PTR [edx+0x14]
 8091acb:  jae 8092bbb
 8091ad1:  mov DWORD PTR [eax], 0x2b
 8091ad7:  add eax, 0x4
 8091ada:  mov DWORD PTR [edx+0x10], eax
 8091add:  jmp 80915f5
 8091ae2:  mov eax, DWORD PTR [ebp-0x10f4]
 8091ae8:  lea edx, [eax+eax*2]
 8091aeb:  mov eax, DWORD PTR [ebp-0x109c]
 8091af1:  shl edx, 0x4
 8091af4:  add eax, edx
 8091af6:  test eax, eax
 8091af8:  je 80927a4
 8091afe:  mov eax, DWORD PTR [ebp-0x106c]
 8091b04:  test eax, eax
 8091b06:  je 809249b
 8091b0c:  mov esi, DWORD PTR [ebp-0x109c]
 8091b12:  mov eax, DWORD PTR [esi+edx+0x24]
 8091b16:  mov edx, DWORD PTR [ebp-0x1094]
 8091b1c:  lea eax, [eax+eax*2]
 8091b1f:  movsx eax, BYTE PTR [edx+eax*4]
 8091b23:  mov ecx, eax
 8091b25:  shr ecx, 0x1f
 8091b28:  test ecx, ecx
 8091b2a:  mov DWORD PTR [ebp-0x1090], ecx
 8091b30:  je 8091b34
 8091b32:  neg eax
 8091b34:  mov DWORD PTR [ebp-0x113c], eax
 8091b3a:  mov DWORD PTR [ebp-0x108c], 0xa
 8091b44:  jmp 80904e0
 8091b49:  mov ebx, DWORD PTR [ebp+0x8]
 8091b4c:  mov edx, DWORD PTR [ebx+0x58]
 8091b4f:  mov eax, DWORD PTR [edx+0x10]
 8091b52:  cmp eax, DWORD PTR [edx+0x14]
 8091b55:  jae 8092e9d
 8091b5b:  mov DWORD PTR [eax], 0x2b
 8091b61:  add eax, 0x4
 8091b64:  mov DWORD PTR [edx+0x10], eax
 8091b67:  jmp 8091627
 8091b6c:  mov esi, DWORD PTR [ebp-0x1018]
 8091b72:  mov eax, DWORD PTR [ebp-0x1018]
 8091b78:  add esi, 0x8
 8091b7b:  fld QWORD PTR [eax]
 8091b7d:  mov DWORD PTR [ebp+0x10], esi
 8091b80:  fstp QWORD PTR [ebp-0x34]
 8091b83:  jmp 809093e
 8091b88:  mov ebx, DWORD PTR [ebp+0x8]
 8091b8b:  mov edx, DWORD PTR [ebx+0x58]
 8091b8e:  mov eax, DWORD PTR [edx+0x10]
 8091b91:  cmp eax, DWORD PTR [edx+0x14]
 8091b94:  jae 8092ebb
 8091b9a:  mov DWORD PTR [eax], 0x2b
 8091ba0:  add eax, 0x4
 8091ba3:  mov DWORD PTR [edx+0x10], eax
 8091ba6:  jmp 80915bc
 8091bab:  mov esi, DWORD PTR [ebp-0x1018]
 8091bb1:  mov eax, DWORD PTR [ebp-0x1018]
 8091bb7:  add esi, 0x8
 8091bba:  fld QWORD PTR [eax]
 8091bbc:  mov DWORD PTR [ebp+0x10], esi
 8091bbf:  fstp QWORD PTR [ebp-0x34]
 8091bc2:  jmp 8090755
 8091bc7:  mov esi, DWORD PTR [ebp-0x1018]
 8091bcd:  mov ebx, DWORD PTR [ebp-0x1018]
 8091bd3:  mov DWORD PTR [ebp-0x10e4], 0x0
 8091bdd:  mov DWORD PTR [ebp-0x10d8], 0x0
 8091be7:  movzx esi, WORD PTR [esi]
 8091bea:  add ebx, 0x4
 8091bed:  mov DWORD PTR [ebp+0x10], ebx
 8091bf0:  mov DWORD PTR [ebp-0x10d0], 0x0
 8091bfa:  mov DWORD PTR [ebp-0x1138], esi
 8091c00:  jmp 8090804
 8091c05:  mov eax, DWORD PTR [ebp+0x8]
 8091c08:  mov edx, DWORD PTR [eax+0x58]
 8091c0b:  mov eax, DWORD PTR [edx+0x10]
 8091c0e:  cmp eax, DWORD PTR [edx+0x14]
 8091c11:  jae 8092c3f
 8091c17:  mov DWORD PTR [eax], 0x20
 8091c1d:  add eax, 0x4
 8091c20:  mov DWORD PTR [edx+0x10], eax
 8091c23:  jmp 80915bc
 8091c28:  mov eax, DWORD PTR [ebp+0x8]
 8091c2b:  mov edx, DWORD PTR [eax+0x58]
 8091c2e:  mov eax, DWORD PTR [edx+0x10]
 8091c31:  cmp eax, DWORD PTR [edx+0x14]
 8091c34:  jae 8092b9a
 8091c3a:  mov DWORD PTR [eax], 0x20
 8091c40:  add eax, 0x4
 8091c43:  mov DWORD PTR [edx+0x10], eax
 8091c46:  jmp 8091627
 8091c4b:  mov eax, DWORD PTR [ebp+0x8]
 8091c4e:  mov edx, DWORD PTR [eax+0x58]
 8091c51:  mov eax, DWORD PTR [edx+0x10]
 8091c54:  cmp eax, DWORD PTR [edx+0x14]
 8091c57:  jae 8092ca1
 8091c5d:  mov DWORD PTR [eax], 0x20
 8091c63:  add eax, 0x4
 8091c66:  mov DWORD PTR [edx+0x10], eax
 8091c69:  jmp 80914d4
 8091c6e:  mov eax, DWORD PTR [ebp+0x8]
 8091c71:  mov edx, DWORD PTR [eax+0x58]
 8091c74:  mov eax, DWORD PTR [edx+0x10]
 8091c77:  cmp eax, DWORD PTR [edx+0x14]
 8091c7a:  jae 8092b19
 8091c80:  mov DWORD PTR [eax], 0x20
 8091c86:  add eax, 0x4
 8091c89:  mov DWORD PTR [edx+0x10], eax
 8091c8c:  jmp 80915f5
 8091c91:  mov eax, DWORD PTR [ebp-0x106c]
 8091c97:  test eax, eax
 8091c99:  je 8092156
 8091c9f:  mov ecx, DWORD PTR [ebp-0x109c]
 8091ca5:  mov ebx, DWORD PTR [ebp-0x1094]
 8091cab:  mov eax, DWORD PTR [ecx+edx+0x24]
 8091caf:  mov edx, edi
 8091cb1:  lea eax, [eax+eax*2]
 8091cb4:  mov eax, DWORD PTR [ebx+eax*4]
 8091cb7:  mov BYTE PTR [eax], dl
 8091cb9:  jmp 808ed28
 8091cbe:  mov DWORD PTR [esp], esi
 8091cc1:  call 80944a0
 8091cc6:  mov DWORD PTR [ebp-0x10a8], 0x0
 8091cd0:  mov ebx, eax
 8091cd2:  jmp 808f803
 8091cd7:  mov DWORD PTR [esp], ebx
 8091cda:  call 8074540
 8091cdf:  test eax, eax
 8091ce1:  jne 8090109
 8091ce7:  mov DWORD PTR [esp], ebx
 8091cea:  call 804d6f0
 8091cef:  test eax, eax
 8091cf1:  mov esi, eax
 8091cf3:  je 8090967
 8091cf9:  mov DWORD PTR [ebp-0x1050], 0x1
 8091d03:  jmp 809011f
 8091d08:  mov DWORD PTR [esp], ebx
 8091d0b:  call 8074540
 8091d10:  test eax, eax
 8091d12:  jne 808f7b4
 8091d18:  mov DWORD PTR [esp], ebx
 8091d1b:  call 804d6f0
 8091d20:  test eax, eax
 8091d22:  mov esi, eax
 8091d24:  je 8090967
 8091d2a:  mov DWORD PTR [ebp-0x10a8], 0x1
 8091d34:  jmp 808f7ca
 8091d39:  cmp DWORD PTR [ebp-0x1060], 0xff
 8091d40:  je 8091d4f
 8091d42:  cmp DWORD PTR [ebp-0x1060], 0x5
 8091d49:  jle 80923ec
 8091d4f:  mov esi, 0x80c4d00
 8091d54:  mov ebx, 0x6
 8091d59:  mov DWORD PTR [ebp-0x1050], 0x0
 8091d63:  jmp 8090158
 8091d68:  mov DWORD PTR [esp], esi
 8091d6b:  call 804eea0
 8091d70:  mov DWORD PTR [ebp-0x1040], eax
 8091d76:  jmp 808f79f
 8091d7b:  mov DWORD PTR [esp], esi
 8091d7e:  call 80944a0
 8091d83:  mov DWORD PTR [ebp-0x1050], 0x0
 8091d8d:  mov ebx, eax
 8091d8f:  jmp 8090158
 8091d94:  mov DWORD PTR [esp], esi
 8091d97:  call 804eea0
 8091d9c:  mov DWORD PTR [ebp-0x103c], eax
 8091da2:  jmp 80900f4
 8091da7:  mov esi, DWORD PTR [ebp-0x109c]
 8091dad:  mov eax, DWORD PTR [esi+edx+0x24]
 8091db1:  mov edx, DWORD PTR [ebp-0x1094]
 8091db7:  lea eax, [eax+eax*2]
 8091dba:  movzx eax, WORD PTR [edx+eax*4]
 8091dbe:  mov DWORD PTR [ebp-0x1090], 0x0
 8091dc8:  mov DWORD PTR [ebp-0x1084], 0x0
 8091dd2:  mov DWORD PTR [ebp-0x107c], 0x0
 8091ddc:  mov DWORD PTR [ebp-0x113c], eax
 8091de2:  jmp 80904e0
 8091de7:  cmp DWORD PTR [ebp-0x1008], 0xff
 8091dee:  je 8091dfd
 8091df0:  cmp DWORD PTR [ebp-0x1008], 0x5
 8091df7:  jle 8092140
 8091dfd:  mov esi, 0x80c4d00
 8091e02:  mov ebx, 0x6
 8091e07:  mov DWORD PTR [ebp-0x10a8], 0x0
 8091e11:  jmp 808f803
 8091e16:  mov eax, DWORD PTR [ebp-0x1060]
 8091e1c:  mov edx, DWORD PTR [ebp-0x1064]
 8091e22:  mov ecx, DWORD PTR [ebp-0x1054]
 8091e28:  mov DWORD PTR [ebp-0x58], 0x0
 8091e2f:  mov DWORD PTR [ebp-0x64], eax
 8091e32:  movzx eax, BYTE PTR [ebp-0x58]
 8091e36:  mov DWORD PTR [ebp-0x60], edx
 8091e39:  movzx edx, BYTE PTR [ebp-0x1070]
 8091e40:  mov DWORD PTR [ebp-0x5c], ecx
 8091e43:  movzx ecx, BYTE PTR [ebp-0x1074]
 8091e4a:  or BYTE PTR [ebp-0x57], 0x4
 8091e4e:  and eax, 0xfc
 8091e51:  and edx, 0x1
 8091e54:  and ecx, 0x1
 8091e57:  add edx, edx
 8091e59:  or eax, ecx
 8091e5b:  movzx ecx, BYTE PTR [ebp-0x1068]
 8091e62:  or eax, edx
 8091e64:  movzx edx, BYTE PTR [ebp-0x1088]
 8091e6b:  and eax, 0xf3
 8091e6e:  and ecx, 0x1
 8091e71:  shl ecx, 0x2
 8091e74:  and edx, 0x1
 8091e77:  shl edx, 0x3
 8091e7a:  or eax, ecx
 8091e7c:  movzx ecx, BYTE PTR [ebp-0x1084]
 8091e83:  or eax, edx
 8091e85:  movzx edx, BYTE PTR [ebp-0x1080]
 8091e8c:  and eax, 0xcf
 8091e8f:  and ecx, 0x1
 8091e92:  shl ecx, 0x4
 8091e95:  and edx, 0x1
 8091e98:  shl edx, 0x5
 8091e9b:  or eax, ecx
 8091e9d:  movzx ecx, BYTE PTR [ebp-0x1078]
 8091ea4:  or eax, edx
 8091ea6:  movzx edx, BYTE PTR [ebp-0x107c]
 8091ead:  and eax, 0x3f
 8091eb0:  shl ecx, 0x7
 8091eb3:  and edx, 0x1
 8091eb6:  shl edx, 0x6
 8091eb9:  or eax, edx
 8091ebb:  or eax, ecx
 8091ebd:  mov BYTE PTR [ebp-0x58], al
 8091ec0:  movsx eax, BYTE PTR [ebp-0x1055]
 8091ec7:  mov DWORD PTR [ebp-0x54], eax
 8091eca:  mov eax, DWORD PTR [ebp-0x1074]
 8091ed0:  test eax, eax
 8091ed2:  je 8092828
 8091ed8:  mov ebx, DWORD PTR [ebp-0x1018]
 8091ede:  mov eax, DWORD PTR [ebx]
 8091ee0:  mov edx, DWORD PTR [ebx+0x4]
 8091ee3:  mov ecx, DWORD PTR [ebx+0x8]
 8091ee6:  add ebx, 0xc
 8091ee9:  mov DWORD PTR [ebp-0x1018], ebx
 8091eef:  mov DWORD PTR [ebp-0x40], eax
 8091ef2:  mov DWORD PTR [ebp-0x3c], edx
 8091ef5:  mov DWORD PTR [ebp-0x38], ecx
 8091ef8:  mov edx, DWORD PTR [ebp+0x8]
 8091efb:  lea eax, [ebp-0x40]
 8091efe:  mov DWORD PTR [ebp-0x14], eax
 8091f01:  lea eax, [ebp-0x14]
 8091f04:  mov DWORD PTR [esp+0x8], eax
 8091f08:  lea eax, [ebp-0x64]
 8091f0b:  mov DWORD PTR [esp+0x4], eax
 8091f0f:  mov DWORD PTR [esp], edx
 8091f12:  call 805fe40
 8091f17:  mov edx, eax
 8091f19:  jmp 808fb4d
 8091f1e:  mov eax, DWORD PTR [ebx+0x4]
 8091f21:  mov esi, ebx
 8091f23:  add esi, 0x4
 8091f26:  lea ecx, [eax-0x30]
 8091f29:  cmp ecx, 0x9
 8091f2c:  ja 8091f62
 8091f2e:  mov edx, DWORD PTR [ebp-0x1108]
 8091f34:  add ebx, 0x8
 8091f37:  mov eax, DWORD PTR [edx+0x8]
 8091f3a:  lea edx, [eax-0x30]
 8091f3d:  cmp edx, 0x9
 8091f40:  ja 8091f55
 8091f42:  lea eax, [ecx+ecx*4]
 8091f45:  add ebx, 0x4
 8091f48:  lea ecx, [edx+eax*2]
 8091f4b:  mov eax, DWORD PTR [ebx]
 8091f4d:  lea edx, [eax-0x30]
 8091f50:  cmp edx, 0x9
 8091f53:  jbe 8091f42
 8091f55:  test ecx, ecx
 8091f57:  je 8091f62
 8091f59:  cmp eax, 0x24
 8091f5c:  je 808f926
 8091f62:  mov ecx, DWORD PTR [ebp-0x1018]
 8091f68:  mov ebx, DWORD PTR [ebp-0x1018]
 8091f6e:  mov DWORD PTR [ebp-0x1108], esi
 8091f74:  mov ecx, DWORD PTR [ecx]
 8091f76:  add ebx, 0x4
 8091f79:  mov DWORD PTR [ebp-0x1018], ebx
 8091f7f:  test ecx, ecx
 8091f81:  mov DWORD PTR [ebp-0x1008], ecx
 8091f87:  jns 808f220
 8091f8d:  mov DWORD PTR [ebp-0x1008], 0xffffffff
 8091f97:  mov esi, DWORD PTR [esi]
 8091f99:  jmp 808f28d
 8091f9e:  mov eax, DWORD PTR [ebp-0x1064]
 8091fa4:  mov edx, DWORD PTR [ebp-0x1054]
 8091faa:  mov DWORD PTR [ebp-0x58], 0x0
 8091fb1:  movzx ecx, BYTE PTR [ebp-0x1074]
 8091fb8:  mov esi, DWORD PTR [ebp-0x1060]
 8091fbe:  mov DWORD PTR [ebp-0x60], eax
 8091fc1:  movzx eax, BYTE PTR [ebp-0x58]
 8091fc5:  mov DWORD PTR [ebp-0x5c], edx
 8091fc8:  movzx edx, BYTE PTR [ebp-0x1070]
 8091fcf:  and ecx, 0x1
 8091fd2:  mov DWORD PTR [ebp-0x64], esi
 8091fd5:  and eax, 0xfc
 8091fd8:  and edx, 0x1
 8091fdb:  or eax, ecx
 8091fdd:  movzx ecx, BYTE PTR [ebp-0x1068]
 8091fe4:  add edx, edx
 8091fe6:  or eax, edx
 8091fe8:  movzx edx, BYTE PTR [ebp-0x1088]
 8091fef:  and eax, 0xf3
 8091ff2:  and ecx, 0x1
 8091ff5:  shl ecx, 0x2
 8091ff8:  and edx, 0x1
 8091ffb:  or eax, ecx
 8091ffd:  movzx ecx, BYTE PTR [ebp-0x1084]
 8092004:  shl edx, 0x3
 8092007:  or eax, edx
 8092009:  movzx edx, BYTE PTR [ebp-0x1080]
 8092010:  and eax, 0xcf
 8092013:  and ecx, 0x1
 8092016:  shl ecx, 0x4
 8092019:  and edx, 0x1
 809201c:  or eax, ecx
 809201e:  movzx ecx, BYTE PTR [ebp-0x1078]
 8092025:  shl edx, 0x5
 8092028:  or eax, edx
 809202a:  movzx edx, BYTE PTR [ebp-0x107c]
 8092031:  and eax, 0x3f
 8092034:  shl ecx, 0x7
 8092037:  and edx, 0x1
 809203a:  shl edx, 0x6
 809203d:  or eax, edx
 809203f:  movzx edx, BYTE PTR [ebp-0x105c]
 8092046:  or eax, ecx
 8092048:  mov BYTE PTR [ebp-0x58], al
 809204b:  movzx eax, BYTE PTR [ebp-0x57]
 809204f:  and edx, 0x1
 8092052:  shl edx, 0x3
 8092055:  or eax, 0x4
 8092058:  and eax, 0xf7
 809205b:  or eax, edx
 809205d:  mov BYTE PTR [ebp-0x57], al
 8092060:  movsx eax, BYTE PTR [ebp-0x1055]
 8092067:  mov DWORD PTR [ebp-0x54], eax
 809206a:  mov eax, DWORD PTR [ebp-0x1074]
 8092070:  test eax, eax
 8092072:  je 8092981
 8092078:  mov ebx, DWORD PTR [ebp-0x1018]
 809207e:  mov eax, DWORD PTR [ebx]
 8092080:  mov edx, DWORD PTR [ebx+0x4]
 8092083:  mov ecx, DWORD PTR [ebx+0x8]
 8092086:  add ebx, 0xc
 8092089:  mov DWORD PTR [ebp-0x1018], ebx
 809208f:  mov DWORD PTR [ebp-0x40], eax
 8092092:  mov DWORD PTR [ebp-0x3c], edx
 8092095:  mov DWORD PTR [ebp-0x38], ecx
 8092098:  mov edx, DWORD PTR [ebp+0x8]
 809209b:  lea eax, [ebp-0x40]
 809209e:  mov DWORD PTR [ebp-0x14], eax
 80920a1:  lea eax, [ebp-0x14]
 80920a4:  mov DWORD PTR [esp+0x8], eax
 80920a8:  lea eax, [ebp-0x64]
 80920ab:  mov DWORD PTR [esp+0x4], eax
 80920af:  mov DWORD PTR [esp], edx
 80920b2:  call 805d430
 80920b7:  mov edx, eax
 80920b9:  jmp 808fb4d
 80920be:  mov DWORD PTR [esp], ebx
 80920c1:  call 8074540
 80920c6:  test eax, eax
 80920c8:  jne 808f26b
 80920ce:  mov DWORD PTR [esp], ebx
 80920d1:  call 804d6f0
 80920d6:  test eax, eax
 80920d8:  mov DWORD PTR [ebp-0x1100], eax
 80920de:  je 8090aa8
 80920e4:  add ebx, DWORD PTR [ebp-0x1100]
 80920ea:  mov DWORD PTR [ebp-0x10fc], ebx
 80920f0:  mov eax, DWORD PTR [ebp-0x1108]
 80920f6:  mov ebx, DWORD PTR [ebp-0x1018]
 80920fc:  mov esi, DWORD PTR [eax]
 80920fe:  jmp 808f28d
 8092103:  mov edx, DWORD PTR [ebp+0xc]
 8092106:  mov DWORD PTR [esp], edx
 8092109:  call 80944a0
 809210e:  mov ecx, DWORD PTR [ebp+0xc]
 8092111:  mov DWORD PTR [esp], ecx
 8092114:  lea eax, [eax*4+0x4]
 809211b:  mov DWORD PTR [esp+0x4], eax
 809211f:  call 8074590
 8092124:  test eax, eax
 8092126:  mov DWORD PTR [ebp-0x10ec], eax
 809212c:  jns 8090288
 8092132:  mov DWORD PTR [esp], 0x80b0e98
 8092139:  call 80490e0
 809213e:  xchg ax, ax
 8092140:  mov esi, 0x80c4cfc
 8092145:  xor ebx, ebx
 8092147:  mov DWORD PTR [ebp-0x10a8], 0x0
 8092151:  jmp 808f803
 8092156:  mov eax, DWORD PTR [ebp-0x1070]
 809215c:  test eax, eax
 809215e:  jne 8092765
 8092164:  mov ecx, DWORD PTR [ebp-0x109c]
 809216a:  mov ebx, DWORD PTR [ebp-0x1094]
 8092170:  mov eax, DWORD PTR [ecx+edx+0x24]
 8092174:  lea eax, [eax+eax*2]
 8092177:  mov eax, DWORD PTR [ebx+eax*4]
 809217a:  mov DWORD PTR [eax], edi
 809217c:  jmp 808ed28
 8092181:  mov edx, DWORD PTR [ebp-0x106c]
 8092187:  test edx, edx
 8092189:  je 80926a3
 809218f:  mov ebx, DWORD PTR [ebp-0x1018]
 8092195:  mov esi, DWORD PTR [ebp-0x1018]
 809219b:  mov DWORD PTR [ebp-0x1090], 0x0
 80921a5:  mov DWORD PTR [ebp-0x1084], 0x0
 80921af:  movzx ebx, BYTE PTR [ebx]
 80921b2:  add esi, 0x4
 80921b5:  mov DWORD PTR [ebp-0x1018], esi
 80921bb:  mov DWORD PTR [ebp-0x107c], 0x0
 80921c5:  mov DWORD PTR [ebp-0x113c], ebx
 80921cb:  jmp 80904e0
 80921d0:  mov eax, DWORD PTR [ebp-0x1088]
 80921d6:  test eax, eax
 80921d8:  je 808fe97
 80921de:  mov esi, DWORD PTR [ebp-0x10fc]
 80921e4:  mov ecx, DWORD PTR [ebp-0x10fc]
 80921ea:  mov BYTE PTR [ebp-0x1055], 0x20
 80921f1:  sub esi, 0x4
 80921f4:  mov DWORD PTR [ecx-0x4], 0x30
 80921fb:  jmp 808fea4
 8092200:  mov ecx, DWORD PTR [ebp+0x8]
 8092203:  mov edx, DWORD PTR [ecx+0x58]
 8092206:  mov eax, DWORD PTR [edx+0x10]
 8092209:  cmp eax, DWORD PTR [edx+0x14]
 809220c:  jae 8092d6a
 8092212:  mov DWORD PTR [eax], 0x30
 8092218:  add eax, 0x4
 809221b:  mov DWORD PTR [edx+0x10], eax
 809221e:  cmp edi, 0x7fffffff
 8092224:  je 8090967
 809222a:  mov eax, DWORD PTR [ebp+0x8]
 809222d:  mov edx, DWORD PTR [eax+0x58]
 8092230:  mov eax, DWORD PTR [edx+0x10]
 8092233:  cmp eax, DWORD PTR [edx+0x14]
 8092236:  jae 8092d47
 809223c:  mov ecx, DWORD PTR [ebp-0x10ac]
 8092242:  mov DWORD PTR [eax], ecx
 8092244:  add eax, 0x4
 8092247:  add ecx, 0x1
 809224a:  mov DWORD PTR [edx+0x10], eax
 809224d:  je 8090967
 8092253:  cmp edi, 0x7ffffffe
 8092259:  je 8090967
 809225f:  add edi, 0x2
 8092262:  jmp 808fd54
 8092267:  mov ecx, DWORD PTR [ebp+0x8]
 809226a:  mov edx, DWORD PTR [ecx+0x58]
 809226d:  mov eax, DWORD PTR [edx+0x10]
 8092270:  cmp eax, DWORD PTR [edx+0x14]
 8092273:  jae 8092da8
 8092279:  mov DWORD PTR [eax], 0x30
 809227f:  add eax, 0x4
 8092282:  mov DWORD PTR [edx+0x10], eax
 8092285:  cmp edi, 0x7fffffff
 809228b:  je 8090967
 8092291:  mov ebx, DWORD PTR [ebp+0x8]
 8092294:  mov edx, DWORD PTR [ebx+0x58]
 8092297:  mov eax, DWORD PTR [edx+0x10]
 809229a:  cmp eax, DWORD PTR [edx+0x14]
 809229d:  jae 8092d88
 80922a3:  mov ecx, DWORD PTR [ebp-0x10ac]
 80922a9:  mov DWORD PTR [eax], ecx
 80922ab:  add eax, 0x4
 80922ae:  add ecx, 0x1
 80922b1:  mov DWORD PTR [edx+0x10], eax
 80922b4:  je 8090967
 80922ba:  cmp edi, 0x7ffffffe
 80922c0:  je 8090967
 80922c6:  add edi, 0x2
 80922c9:  sub DWORD PTR [ebp-0x1020], 0x2
 80922d0:  jmp 8090cc8
 80922d5:  mov ecx, DWORD PTR [ebp+0x8]
 80922d8:  mov edx, DWORD PTR [ecx+0x58]
 80922db:  mov eax, DWORD PTR [edx+0x10]
 80922de:  cmp eax, DWORD PTR [edx+0x14]
 80922e1:  jae 8092de6
 80922e7:  mov DWORD PTR [eax], 0x30
 80922ed:  add eax, 0x4
 80922f0:  mov DWORD PTR [edx+0x10], eax
 80922f3:  cmp edi, 0x7fffffff
 80922f9:  je 8090967
 80922ff:  mov ebx, DWORD PTR [ebp+0x8]
 8092302:  mov edx, DWORD PTR [ebx+0x58]
 8092305:  mov eax, DWORD PTR [edx+0x10]
 8092308:  cmp eax, DWORD PTR [edx+0x14]
 809230b:  jae 8092dc6
 8092311:  mov ecx, DWORD PTR [ebp-0x1054]
 8092317:  mov DWORD PTR [eax], ecx
 8092319:  add eax, 0x4
 809231c:  add ecx, 0x1
 809231f:  mov DWORD PTR [edx+0x10], eax
 8092322:  je 8090967
 8092328:  cmp edi, 0x7ffffffe
 809232e:  je 8090967
 8092334:  add edi, 0x2
 8092337:  sub DWORD PTR [ebp-0x1064], 0x2
 809233e:  jmp 8090b9d
 8092343:  mov ecx, DWORD PTR [ebp+0x8]
 8092346:  mov edx, DWORD PTR [ecx+0x58]
 8092349:  mov eax, DWORD PTR [edx+0x10]
 809234c:  cmp eax, DWORD PTR [edx+0x14]
 809234f:  jae 8092c83
 8092355:  mov DWORD PTR [eax], 0x30
 809235b:  add eax, 0x4
 809235e:  mov DWORD PTR [edx+0x10], eax
 8092361:  cmp edi, 0x7fffffff
 8092367:  je 8090967
 809236d:  mov eax, DWORD PTR [ebp+0x8]
 8092370:  mov edx, DWORD PTR [eax+0x58]
 8092373:  mov eax, DWORD PTR [edx+0x10]
 8092376:  cmp eax, DWORD PTR [edx+0x14]
 8092379:  jae 8092c60
 809237f:  mov ecx, DWORD PTR [ebp-0x1054]
 8092385:  mov DWORD PTR [eax], ecx
 8092387:  add eax, 0x4
 809238a:  add ecx, 0x1
 809238d:  mov DWORD PTR [edx+0x10], eax
 8092390:  je 8090967
 8092396:  cmp edi, 0x7ffffffe
 809239c:  je 8090967
 80923a2:  add edi, 0x2
 80923a5:  jmp 808ffb2
 80923aa:  mov ecx, DWORD PTR [ebp-0x10dc]
 80923b0:  test ecx, ecx
 80923b2:  je 809083c
 80923b8:  mov eax, DWORD PTR [ebp-0x10fc]
 80923be:  mov esi, DWORD PTR [ebp-0x10fc]
 80923c4:  mov DWORD PTR [ebp-0x1038], 0x4
 80923ce:  mov DWORD PTR [ebp-0x10b0], 0x20
 80923d8:  mov DWORD PTR [eax-0x4], 0x30
 80923df:  mov eax, 0x1
 80923e4:  sub esi, 0x4
 80923e7:  jmp 808fc4e
 80923ec:  mov esi, 0x80c4cfc
 80923f1:  xor ebx, ebx
 80923f3:  mov DWORD PTR [ebp-0x1050], 0x0
 80923fd:  jmp 8090158
 8092402:  mov eax, DWORD PTR [ebp-0x1088]
 8092408:  test eax, eax
 809240a:  je 8090515
 8092410:  mov esi, DWORD PTR [ebp-0x10fc]
 8092416:  mov eax, 0x1
 809241b:  mov ecx, DWORD PTR [ebp-0x10fc]
 8092421:  mov DWORD PTR [ebp-0x1030], 0x4
 809242b:  mov BYTE PTR [ebp-0x1055], 0x20
 8092432:  sub esi, 0x4
 8092435:  mov DWORD PTR [ecx-0x4], 0x30
 809243c:  jmp 808fed5
 8092441:  mov eax, DWORD PTR [ebp-0x10c4]
 8092447:  test eax, eax
 8092449:  jne 8092841
 809244f:  mov ecx, DWORD PTR [ebp-0x1018]
 8092455:  mov ebx, DWORD PTR [ebp-0x1018]
 809245b:  add ecx, 0x4
 809245e:  mov DWORD PTR [ebp+0x10], ecx
 8092461:  mov eax, DWORD PTR [ebx]
 8092463:  jmp 8091a2d
 8092468:  mov eax, DWORD PTR [ebp-0x10dc]
 809246e:  test eax, eax
 8092470:  je 808fc19
 8092476:  mov esi, DWORD PTR [ebp-0x10fc]
 809247c:  mov ecx, DWORD PTR [ebp-0x10fc]
 8092482:  mov DWORD PTR [ebp-0x10b0], 0x20
 809248c:  sub esi, 0x4
 809248f:  mov DWORD PTR [ecx-0x4], 0x30
 8092496:  jmp 808fc29
 809249b:  mov eax, DWORD PTR [ebp-0x1070]
 80924a1:  test eax, eax
 80924a3:  jne 80929de
 80924a9:  mov ecx, DWORD PTR [ebp-0x109c]
 80924af:  mov ebx, DWORD PTR [ebp-0x1094]
 80924b5:  mov eax, DWORD PTR [ecx+edx+0x24]
 80924b9:  lea eax, [eax+eax*2]
 80924bc:  mov eax, DWORD PTR [ebx+eax*4]
 80924bf:  jmp 8091b23
 80924c4:  mov eax, 0xffffffe0
 80924c9:  mov edx, DWORD PTR [ebp-0x1148]
 80924cf:  mov eax, DWORD PTR [edx+eax]
 80924d2:  mov eax, DWORD PTR [eax]
 80924d4:  mov ecx, DWORD PTR [eax+0x34]
 80924d7:  mov DWORD PTR [ebp-0x1110], ecx
 80924dd:  mov eax, DWORD PTR [eax+0x2c]
 80924e0:  mov DWORD PTR [ebp-0x110c], eax
 80924e6:  movzx eax, BYTE PTR [eax]
 80924e9:  test al, al
 80924eb:  je 80924f5
 80924ed:  cmp al, 0x7f
 80924ef:  jne 808f95b
 80924f5:  mov DWORD PTR [ebp-0x110c], 0x0
 80924ff:  jmp 808f95b
 8092504:  mov eax, DWORD PTR [ebp+0xc]
 8092507:  mov DWORD PTR [esp], eax
 809250a:  call 80944a0
 809250f:  mov edx, DWORD PTR [ebp+0xc]
 8092512:  mov DWORD PTR [esp], edx
 8092515:  lea eax, [eax*4+0x4]
 809251c:  mov DWORD PTR [esp+0x4], eax
 8092520:  call 8074590
 8092525:  test eax, eax
 8092527:  mov DWORD PTR [ebp-0x10ec], eax
 809252d:  jns 80903ee
 8092533:  jmp 8092132
 8092538:  mov esi, DWORD PTR [ebp-0x10f4]
 809253e:  mov ecx, DWORD PTR [ebp-0x109c]
 8092544:  mov DWORD PTR [ebp-0x1150], 0x808dfb0
 809254e:  lea eax, [esi+esi*2]
 8092551:  shl eax, 0x4
 8092554:  add ecx, eax
 8092556:  jmp 8090567
 809255b:  mov eax, DWORD PTR [ebp-0x10c4]
 8092561:  test eax, eax
 8092563:  jne 8092874
 8092569:  mov ebx, DWORD PTR [ebp-0x1018]
 809256f:  mov ecx, DWORD PTR [ebp-0x1018]
 8092575:  mov eax, DWORD PTR [ebx]
 8092577:  add ecx, 0x4
 809257a:  mov DWORD PTR [ebp+0x10], ecx
 809257d:  mov DWORD PTR [eax], edi
 809257f:  jmp 808eb6d
 8092584:  mov DWORD PTR [esp], ebx
 8092587:  call 8074540
 809258c:  test eax, eax
 809258e:  je 80928f9
 8092594:  mov eax, DWORD PTR [ebp-0x1108]
 809259a:  mov esi, DWORD PTR [eax]
 809259c:  jmp 808f597
 80925a1:  mov eax, DWORD PTR [ebp+0x8]
 80925a4:  mov esi, DWORD PTR [ebp-0x1018]
 80925aa:  mov ecx, DWORD PTR [ebp-0x1018]
 80925b0:  mov ebx, DWORD PTR [eax+0x58]
 80925b3:  add esi, 0x4
 80925b6:  mov edx, DWORD PTR [ecx]
 80925b8:  mov eax, DWORD PTR [ebx+0x10]
 80925bb:  cmp eax, DWORD PTR [ebx+0x14]
 80925be:  jae 8092a3b
 80925c4:  mov DWORD PTR [eax], edx
 80925c6:  add eax, 0x4
 80925c9:  add edx, 0x1
 80925cc:  mov DWORD PTR [ebx+0x10], eax
 80925cf:  je 8090967
 80925d5:  cmp edi, 0x7fffffff
 80925db:  je 8090967
 80925e1:  add edi, 0x1
 80925e4:  jmp 808ecc5
 80925e9:  mov eax, DWORD PTR [ebp-0x1018]
 80925ef:  mov esi, DWORD PTR [ebp-0x1018]
 80925f5:  mov edx, DWORD PTR [ebp-0x1018]
 80925fb:  mov DWORD PTR [ebp-0x1090], 0x0
 8092605:  mov eax, DWORD PTR [eax]
 8092607:  add esi, 0x8
 809260a:  mov DWORD PTR [ebp-0x1044], esi
 8092610:  mov ebx, DWORD PTR [edx+0x4]
 8092613:  mov DWORD PTR [ebp-0x1084], 0x0
 809261d:  mov DWORD PTR [ebp-0x113c], eax
 8092623:  mov DWORD PTR [ebp-0x107c], 0x0
 809262d:  jmp 808fe62
 8092632:  mov DWORD PTR [esp+0xc], 0x80c4cc8
 809263a:  mov DWORD PTR [esp+0x8], 0x782
 8092642:  mov DWORD PTR [esp+0x4], 0x80b0dd7
 809264a:  mov DWORD PTR [esp], 0x80b0e70
 8092651:  call 8051490
 8092656:  mov ebx, DWORD PTR [ebp-0x1018]
 809265c:  mov esi, DWORD PTR [ebx]
 809265e:  add ebx, 0x4
 8092661:  mov DWORD PTR [ebp-0x1018], ebx
 8092667:  jmp 80900a9
 809266c:  mov DWORD PTR [esp+0xc], 0x80c4cc8
 8092674:  mov DWORD PTR [esp+0x8], 0x64b
 809267c:  mov DWORD PTR [esp+0x4], 0x80b0dd7
 8092684:  mov DWORD PTR [esp], 0x80b0e70
 809268b:  call 8051490
 8092690:  mov esi, DWORD PTR [ebp-0x1100]
 8092696:  mov DWORD PTR [esp], esi
 8092699:  call 804b4a0
 809269e:  jmp 808eb7b
 80926a3:  mov eax, DWORD PTR [ebp-0x1070]
 80926a9:  test eax, eax
 80926ab:  jne 8092724
 80926ad:  mov eax, DWORD PTR [ebp-0x1018]
 80926b3:  mov edx, DWORD PTR [ebp-0x1018]
 80926b9:  mov DWORD PTR [ebp-0x1090], 0x0
 80926c3:  mov DWORD PTR [ebp-0x1084], 0x0
 80926cd:  mov eax, DWORD PTR [eax]
 80926cf:  add edx, 0x4
 80926d2:  mov DWORD PTR [ebp-0x1018], edx
 80926d8:  mov DWORD PTR [ebp-0x107c], 0x0
 80926e2:  mov DWORD PTR [ebp-0x113c], eax
 80926e8:  jmp 80904e0
 80926ed:  cmp DWORD PTR [ebp-0x1060], 0x4
 80926f4:  mov esi, 0x80c4ce8
 80926f9:  jg 80900bf
 80926ff:  mov DWORD PTR [ebp-0x1060], 0x5
 8092709:  jmp 80900bf
 809270e:  mov edx, DWORD PTR [ebp-0x1018]
 8092714:  mov eax, DWORD PTR [edx]
 8092716:  add edx, 0x4
 8092719:  mov DWORD PTR [ebp-0x1018], edx
 809271f:  jmp 80904a0
 8092724:  mov ecx, DWORD PTR [ebp-0x1018]
 809272a:  mov ebx, DWORD PTR [ebp-0x1018]
 8092730:  mov DWORD PTR [ebp-0x1090], 0x0
 809273a:  mov DWORD PTR [ebp-0x1084], 0x0
 8092744:  movzx ecx, WORD PTR [ecx]
 8092747:  add ebx, 0x4
 809274a:  mov DWORD PTR [ebp-0x1018], ebx
 8092750:  mov DWORD PTR [ebp-0x107c], 0x0
 809275a:  mov DWORD PTR [ebp-0x113c], ecx
 8092760:  jmp 80904e0
 8092765:  mov esi, DWORD PTR [ebp-0x109c]
 809276b:  mov eax, DWORD PTR [esi+edx+0x24]
 809276f:  mov edx, DWORD PTR [ebp-0x1094]
 8092775:  lea eax, [eax+eax*2]
 8092778:  mov eax, DWORD PTR [edx+eax*4]
 809277b:  mov WORD PTR [eax], di
 809277e:  jmp 808ed28
 8092783:  cmp DWORD PTR [ebp-0x1008], 0x4
 809278a:  mov esi, 0x80c4ce8
 809278f:  jg 808f76a
 8092795:  mov DWORD PTR [ebp-0x1008], 0x5
 809279f:  jmp 808f76a
 80927a4:  mov ecx, DWORD PTR [ebp-0x106c]
 80927aa:  test ecx, ecx
 80927ac:  je 8092bd9
 80927b2:  mov edx, DWORD PTR [ebp-0x1018]
 80927b8:  movsx eax, BYTE PTR [edx]
 80927bb:  add edx, 0x4
 80927be:  mov DWORD PTR [ebp-0x1018], edx
 80927c4:  jmp 8091b23
 80927c9:  lea esi, [esi]
 80927d0:  mov ecx, DWORD PTR [ebp-0x1018]
 80927d6:  mov eax, DWORD PTR [ecx]
 80927d8:  mov edx, DWORD PTR [ecx+0x4]
 80927db:  add ecx, 0x8
 80927de:  mov DWORD PTR [ebp-0x1018], ecx
 80927e4:  jmp 8090337
 80927e9:  mov eax, 0xffffffe0
 80927ee:  mov edx, DWORD PTR [ebp-0x1148]
 80927f4:  mov eax, DWORD PTR [edx+eax]
 80927f7:  mov eax, DWORD PTR [eax]
 80927f9:  mov ecx, DWORD PTR [eax+0x34]
 80927fc:  mov DWORD PTR [ebp-0x1110], ecx
 8092802:  mov eax, DWORD PTR [eax+0x2c]
 8092805:  mov DWORD PTR [ebp-0x110c], eax
 809280b:  movzx eax, BYTE PTR [eax]
 809280e:  test al, al
 8092810:  jne 809299a
 8092816:  mov DWORD PTR [ebp-0x110c], 0x0
 8092820:  jmp 808f0df
 8092825:  lea esi, [esi]
 8092828:  mov esi, DWORD PTR [ebp-0x1018]
 809282e:  fld QWORD PTR [esi]
 8092830:  add esi, 0x8
 8092833:  fstp QWORD PTR [ebp-0x40]
 8092836:  mov DWORD PTR [ebp-0x1018], esi
 809283c:  jmp 8091ef8
 8092841:  mov esi, DWORD PTR [ebp-0x1018]
 8092847:  mov edx, DWORD PTR [ebp-0x1018]
 809284d:  add esi, 0x4
 8092850:  mov DWORD PTR [ebp+0x10], esi
 8092853:  movsx eax, WORD PTR [edx]
 8092856:  jmp 8091a2d
 809285b:  mov DWORD PTR [esp], eax
 809285e:  call 8074540
 8092863:  test eax, eax
 8092865:  je 8092890
 8092867:  mov edx, DWORD PTR [ebp-0x1108]
 809286d:  mov esi, DWORD PTR [edx]
 809286f:  jmp 808f3b5
 8092874:  mov edx, DWORD PTR [ebp-0x1018]
 809287a:  mov esi, DWORD PTR [ebp-0x1018]
 8092880:  mov eax, DWORD PTR [edx]
 8092882:  add esi, 0x4
 8092885:  mov DWORD PTR [ebp+0x10], esi
 8092888:  mov WORD PTR [eax], di
 809288b:  jmp 808eb6d
 8092890:  mov esi, DWORD PTR [ebp-0x111c]
 8092896:  mov DWORD PTR [esp], esi
 8092899:  call 804d6f0
 809289e:  test eax, eax
 80928a0:  mov DWORD PTR [ebp-0x1100], eax
 80928a6:  je 8090aa8
 80928ac:  mov esi, DWORD PTR [ebp-0x1100]
 80928b2:  mov eax, DWORD PTR [ebp-0x1108]
 80928b8:  add esi, DWORD PTR [ebp-0x111c]
 80928be:  mov DWORD PTR [ebp-0x10fc], esi
 80928c4:  mov esi, DWORD PTR [eax]
 80928c6:  jmp 808f3d6
 80928cb:  mov ebx, DWORD PTR [ebp-0x1074]
 80928d1:  test ebx, ebx
 80928d3:  je 80929fa
 80928d9:  mov ebx, DWORD PTR [ebp-0x1018]
 80928df:  mov esi, edi
 80928e1:  sar esi, 0x1f
 80928e4:  mov eax, DWORD PTR [ebx]
 80928e6:  add ebx, 0x4
 80928e9:  mov DWORD PTR [ebp-0x1018], ebx
 80928ef:  mov DWORD PTR [eax], edi
 80928f1:  mov DWORD PTR [eax+0x4], esi
 80928f4:  jmp 808ed28
 80928f9:  mov DWORD PTR [esp], ebx
 80928fc:  call 804d6f0
 8092901:  test eax, eax
 8092903:  mov DWORD PTR [ebp-0x1100], eax
 8092909:  je 8090aa8
 809290f:  mov ecx, DWORD PTR [ebp-0x1108]
 8092915:  add ebx, DWORD PTR [ebp-0x1100]
 809291b:  mov esi, DWORD PTR [ecx]
 809291d:  mov DWORD PTR [ebp-0x10fc], ebx
 8092923:  jmp 808f5b2
 8092928:  mov edx, DWORD PTR [ebp-0x1018]
 809292e:  mov esi, DWORD PTR [ebp-0x1018]
 8092934:  movzx eax, BYTE PTR [edx]
 8092937:  add esi, 0x4
 809293a:  mov DWORD PTR [esp], eax
 809293d:  call 8094510
 8092942:  mov ecx, eax
 8092944:  mov eax, DWORD PTR [ebp+0x8]
 8092947:  mov edx, DWORD PTR [eax+0x58]
 809294a:  mov eax, DWORD PTR [edx+0x10]
 809294d:  cmp eax, DWORD PTR [edx+0x14]
 8092950:  jae 8092ce6
 8092956:  mov DWORD PTR [eax], ecx
 8092958:  add eax, 0x4
 809295b:  add ecx, 0x1
 809295e:  mov DWORD PTR [edx+0x10], eax
 8092961:  je 8090967
 8092967:  cmp edi, 0x7fffffff
 809296d:  je 8090967
 8092973:  add edi, 0x1
 8092976:  mov DWORD PTR [ebp-0x1018], esi
 809297c:  jmp 808f036
 8092981:  mov esi, DWORD PTR [ebp-0x1018]
 8092987:  fld QWORD PTR [esi]
 8092989:  add esi, 0x8
 809298c:  fstp QWORD PTR [ebp-0x40]
 809298f:  mov DWORD PTR [ebp-0x1018], esi
 8092995:  jmp 8092098
 809299a:  cmp al, 0x7f
 809299c:  je 8092816
 80929a2:  test ecx, ecx
 80929a4:  jne 808f0df
 80929aa:  lea esi, [esi]
 80929b0:  jmp 8092816
 80929b5:  mov DWORD PTR [ebp-0x1108], eax
 80929bb:  mov DWORD PTR [ebp-0x100c], 0x0
 80929c5:  mov DWORD PTR [ebp-0x1098], 0x0
 80929cf:  mov DWORD PTR [ebp-0x10a4], 0x0
 80929d9:  jmp 8091031
 80929de:  mov esi, DWORD PTR [ebp-0x109c]
 80929e4:  mov eax, DWORD PTR [esi+edx+0x24]
 80929e8:  mov edx, DWORD PTR [ebp-0x1094]
 80929ee:  lea eax, [eax+eax*2]
 80929f1:  movsx eax, WORD PTR [edx+eax*4]
 80929f5:  jmp 8091b23
 80929fa:  mov ecx, DWORD PTR [ebp-0x106c]
 8092a00:  test ecx, ecx
 8092a02:  je 8092a58
 8092a04:  mov edx, DWORD PTR [ebp-0x1018]
 8092a0a:  mov ecx, edi
 8092a0c:  mov eax, DWORD PTR [edx]
 8092a0e:  add edx, 0x4
 8092a11:  mov BYTE PTR [eax], cl
 8092a13:  mov DWORD PTR [ebp-0x1018], edx
 8092a19:  jmp 808ed28
 8092a1e:  mov DWORD PTR [esp+0x4], edx
 8092a22:  mov edx, DWORD PTR [ebp+0x8]
 8092a25:  mov DWORD PTR [esp], edx
 8092a28:  call 80630d0
 8092a2d:  add eax, 0x1
 8092a30:  jne 808eb19
 8092a36:  jmp 8090967
 8092a3b:  mov DWORD PTR [esp+0x4], edx
 8092a3f:  mov edx, DWORD PTR [ebp+0x8]
 8092a42:  mov DWORD PTR [esp], edx
 8092a45:  call 80630d0
 8092a4a:  add eax, 0x1
 8092a4d:  jne 80925d5
 8092a53:  jmp 8090967
 8092a58:  mov edx, DWORD PTR [ebp-0x1070]
 8092a5e:  test edx, edx
 8092a60:  jne 8092adf
 8092a62:  mov ebx, DWORD PTR [ebp-0x1018]
 8092a68:  mov eax, DWORD PTR [ebx]
 8092a6a:  add ebx, 0x4
 8092a6d:  mov DWORD PTR [ebp-0x1018], ebx
 8092a73:  mov DWORD PTR [eax], edi
 8092a75:  jmp 808ed28
 8092a7a:  mov DWORD PTR [esp+0x4], ecx
 8092a7e:  mov DWORD PTR [esp], esi
 8092a81:  call 80630d0
 8092a86:  add eax, 0x1
 8092a89:  jne 808f6cf
 8092a8f:  jmp 8090967
 8092a94:  mov DWORD PTR [esp+0x4], 0x2d
 8092a9c:  mov DWORD PTR [esp], ecx
 8092a9f:  call 80630d0
 8092aa4:  add eax, 0x1
 8092aa7:  jne 80915bc
 8092aad:  jmp 8090967
 8092ab2:  mov DWORD PTR [ebp-0x10b0], 0x20
 8092abc:  lea esi, [esi]
 8092ac0:  jmp 809127c
 8092ac5:  mov DWORD PTR [esp+0x4], ecx
 8092ac9:  mov DWORD PTR [esp], esi
 8092acc:  call 80630d0
 8092ad1:  add eax, 0x1
 8092ad4:  jne 808ecb0
 8092ada:  jmp 8090967
 8092adf:  mov esi, DWORD PTR [ebp-0x1018]
 8092ae5:  mov eax, DWORD PTR [esi]
 8092ae7:  add esi, 0x4
 8092aea:  mov DWORD PTR [ebp-0x1018], esi
 8092af0:  mov WORD PTR [eax], di
 8092af3:  jmp 808ed28
 8092af8:  mov edx, DWORD PTR [ebp+0x8]
 8092afb:  mov DWORD PTR [esp+0x4], 0x2d
 8092b03:  mov DWORD PTR [esp], edx
 8092b06:  call 80630d0
 8092b0b:  add eax, 0x1
 8092b0e:  jne 80914d4
 8092b14:  jmp 8090967
 8092b19:  mov edx, DWORD PTR [ebp+0x8]
 8092b1c:  mov DWORD PTR [esp+0x4], 0x20
 8092b24:  mov DWORD PTR [esp], edx
 8092b27:  call 80630d0
 8092b2c:  add eax, 0x1
 8092b2f:  jne 80915f5
 8092b35:  jmp 8090967
 8092b3a:  mov DWORD PTR [esp+0x4], 0x25
 8092b42:  mov DWORD PTR [esp], ebx
 8092b45:  call 80630d0
 8092b4a:  add eax, 0x1
 8092b4d:  jne 809005a
 8092b53:  jmp 8090967
 8092b58:  mov DWORD PTR [esp+0x4], 0x25
 8092b60:  mov DWORD PTR [esp], ebx
 8092b63:  call 80630d0
 8092b68:  add eax, 0x1
 8092b6b:  jne 808fa9f
 8092b71:  jmp 8090967
 8092b76:  mov DWORD PTR [esp+0xc], 0x80c4cc8
 8092b7e:  mov DWORD PTR [esp+0x8], 0x754
 8092b86:  mov DWORD PTR [esp+0x4], 0x80b0dd7
 8092b8e:  mov DWORD PTR [esp], 0x80b0e70
 8092b95:  call 8051490
 8092b9a:  mov edx, DWORD PTR [ebp+0x8]
 8092b9d:  mov DWORD PTR [esp+0x4], 0x20
 8092ba5:  mov DWORD PTR [esp], edx
 8092ba8:  call 80630d0
 8092bad:  add eax, 0x1
 8092bb0:  jne 8091627
 8092bb6:  jmp 8090967
 8092bbb:  mov DWORD PTR [esp+0x4], 0x2b
 8092bc3:  mov DWORD PTR [esp], ecx
 8092bc6:  call 80630d0
 8092bcb:  add eax, 0x1
 8092bce:  jne 80915f5
 8092bd4:  jmp 8090967
 8092bd9:  mov edx, DWORD PTR [ebp-0x1070]
 8092bdf:  test edx, edx
 8092be1:  lea esi, [esi]
 8092be8:  jne 8092d03
 8092bee:  mov ecx, DWORD PTR [ebp-0x1018]
 8092bf4:  mov eax, DWORD PTR [ecx]
 8092bf6:  add ecx, 0x4
 8092bf9:  mov DWORD PTR [ebp-0x1018], ecx
 8092bff:  jmp 8091b23
 8092c04:  mov edx, DWORD PTR [ebp+0x8]
 8092c07:  mov DWORD PTR [esp+0x4], ecx
 8092c0b:  mov DWORD PTR [esp], edx
 8092c0e:  call 80630d0
 8092c13:  add eax, 0x1
 8092c16:  jne 808f027
 8092c1c:  jmp 8090967
 8092c21:  mov DWORD PTR [esp+0x4], 0x2d
 8092c29:  mov DWORD PTR [esp], ecx
 8092c2c:  call 80630d0
 8092c31:  add eax, 0x1
 8092c34:  jne 8091627
 8092c3a:  jmp 8090967
 8092c3f:  mov edx, DWORD PTR [ebp+0x8]
 8092c42:  mov DWORD PTR [esp+0x4], 0x20
 8092c4a:  mov DWORD PTR [esp], edx
 8092c4d:  call 80630d0
 8092c52:  add eax, 0x1
 8092c55:  jne 80915bc
 8092c5b:  jmp 8090967
 8092c60:  mov edx, DWORD PTR [ebp-0x1054]
 8092c66:  mov ecx, DWORD PTR [ebp+0x8]
 8092c69:  mov DWORD PTR [esp+0x4], edx
 8092c6d:  mov DWORD PTR [esp], ecx
 8092c70:  call 80630d0
 8092c75:  add eax, 0x1
 8092c78:  jne 8092396
 8092c7e:  jmp 8090967
 8092c83:  mov DWORD PTR [esp+0x4], 0x30
 8092c8b:  mov DWORD PTR [esp], ecx
 8092c8e:  call 80630d0
 8092c93:  add eax, 0x1
 8092c96:  jne 8092361
 8092c9c:  jmp 8090967
 8092ca1:  mov edx, DWORD PTR [ebp+0x8]
 8092ca4:  mov DWORD PTR [esp+0x4], 0x20
 8092cac:  mov DWORD PTR [esp], edx
 8092caf:  call 80630d0
 8092cb4:  add eax, 0x1
 8092cb7:  jne 80914d4
 8092cbd:  jmp 8090967
 8092cc2:  mov DWORD PTR [esp+0xc], 0x80c4cc8
 8092cca:  mov DWORD PTR [esp+0x8], 0x754
 8092cd2:  mov DWORD PTR [esp+0x4], 0x80b0dd7
 8092cda:  mov DWORD PTR [esp], 0x80b0e40
 8092ce1:  call 8051490
 8092ce6:  mov edx, DWORD PTR [ebp+0x8]
 8092ce9:  mov DWORD PTR [esp+0x4], ecx
 8092ced:  mov DWORD PTR [esp], edx
 8092cf0:  call 80630d0
 8092cf5:  add eax, 0x1
 8092cf8:  jne 8092967
 8092cfe:  jmp 8090967
 8092d03:  mov ebx, DWORD PTR [ebp-0x1018]
 8092d09:  movsx eax, WORD PTR [ebx]
 8092d0c:  add ebx, 0x4
 8092d0f:  mov DWORD PTR [ebp-0x1018], ebx
 8092d15:  jmp 8091b23
 8092d1a:  mov DWORD PTR [esp], 0x80b0ec4
 8092d21:  call 80490e0
 8092d26:  mov edx, DWORD PTR [ebp+0x8]
 8092d29:  mov DWORD PTR [esp+0x4], 0x2d
 8092d31:  mov DWORD PTR [esp], edx
 8092d34:  call 80630d0
 8092d39:  add eax, 0x1
 8092d3c:  jne 80915f5
 8092d42:  jmp 8090967
 8092d47:  mov edx, DWORD PTR [ebp-0x10ac]
 8092d4d:  mov ecx, DWORD PTR [ebp+0x8]
 8092d50:  mov DWORD PTR [esp+0x4], edx
 8092d54:  mov DWORD PTR [esp], ecx
 8092d57:  call 80630d0
 8092d5c:  add eax, 0x1
 8092d5f:  jne 8092253
 8092d65:  jmp 8090967
 8092d6a:  mov DWORD PTR [esp+0x4], 0x30
 8092d72:  mov DWORD PTR [esp], ecx
 8092d75:  call 80630d0
 8092d7a:  add eax, 0x1
 8092d7d:  jne 809221e
 8092d83:  jmp 8090967
 8092d88:  mov eax, DWORD PTR [ebp-0x10ac]
 8092d8e:  mov DWORD PTR [esp], ebx
 8092d91:  mov DWORD PTR [esp+0x4], eax
 8092d95:  call 80630d0
 8092d9a:  add eax, 0x1
 8092d9d:  jne 80922ba
 8092da3:  jmp 8090967
 8092da8:  mov DWORD PTR [esp+0x4], 0x30
 8092db0:  mov DWORD PTR [esp], ecx
 8092db3:  call 80630d0
 8092db8:  add eax, 0x1
 8092dbb:  jne 8092285
 8092dc1:  jmp 8090967
 8092dc6:  mov eax, DWORD PTR [ebp-0x1054]
 8092dcc:  mov DWORD PTR [esp], ebx
 8092dcf:  mov DWORD PTR [esp+0x4], eax
 8092dd3:  call 80630d0
 8092dd8:  add eax, 0x1
 8092ddb:  jne 8092328
 8092de1:  jmp 8090967
 8092de6:  mov DWORD PTR [esp+0x4], 0x30
 8092dee:  mov DWORD PTR [esp], ecx
 8092df1:  call 80630d0
 8092df6:  add eax, 0x1
 8092df9:  jne 80922f3
 8092dff:  jmp 8090967
 8092e04:  mov DWORD PTR [esp+0xc], 0x80c4cc8
 8092e0c:  mov DWORD PTR [esp+0x8], 0x753
 8092e14:  mov DWORD PTR [esp+0x4], 0x80b0dd7
 8092e1c:  mov DWORD PTR [esp], 0x80b0e70
 8092e23:  call 8051490
 8092e28:  mov DWORD PTR [ebp-0x1150], 0x808dfb0
 8092e32:  jmp 8090567
 8092e37:  mov DWORD PTR [esp+0x4], 0x2b
 8092e3f:  mov DWORD PTR [esp], ecx
 8092e42:  call 80630d0
 8092e47:  add eax, 0x1
 8092e4a:  jne 80914d4
 8092e50:  jmp 8090967
 8092e55:  mov DWORD PTR [esp+0xc], 0x80c4cc8
 8092e5d:  mov DWORD PTR [esp+0x8], 0x62c
 8092e65:  mov DWORD PTR [esp+0x4], 0x80b0dd7
 8092e6d:  mov DWORD PTR [esp], 0x80b0e70
 8092e74:  call 8051490
 8092e79:  mov DWORD PTR [esp+0xc], 0x80c4cc8
 8092e81:  mov DWORD PTR [esp+0x8], 0x62d
 8092e89:  mov DWORD PTR [esp+0x4], 0x80b0dd7
 8092e91:  mov DWORD PTR [esp], 0x80b0e70
 8092e98:  call 8051490
 8092e9d:  mov DWORD PTR [esp+0x4], 0x2b
 8092ea5:  mov DWORD PTR [esp], ebx
 8092ea8:  call 80630d0
 8092ead:  add eax, 0x1
 8092eb0:  jne 8091627
 8092eb6:  jmp 8090967
 8092ebb:  mov DWORD PTR [esp+0x4], 0x2b
 8092ec3:  mov DWORD PTR [esp], ebx
 8092ec6:  call 80630d0
 8092ecb:  add eax, 0x1
 8092ece:  jne 80915bc
 8092ed4:  jmp 8090967
 8092ed9:  lea esi, [esi]

08092ee0 <buffered_vfprintf>:
 8092ee0:  push ebp
 8092ee1:  mov ebp, esp
 8092ee3:  sub esp, 0x819c
 8092ee9:  mov DWORD PTR [esp+0x4], 0x1
 8092ef1:  mov DWORD PTR [ebp-0xc], ebx
 8092ef4:  mov ebx, ecx
 8092ef6:  mov DWORD PTR [ebp-0x8], esi
 8092ef9:  mov esi, eax
 8092efb:  mov DWORD PTR [ebp-0x4], edi
 8092efe:  mov edi, 0xffffffff
 8092f03:  mov DWORD PTR [ebp-0x8188], edx
 8092f09:  mov DWORD PTR [esp], eax
 8092f0c:  call 8065440
 8092f11:  sub eax, 0x1
 8092f14:  je 8092f28
 8092f16:  mov eax, edi
 8092f18:  mov ebx, DWORD PTR [ebp-0xc]
 8092f1b:  mov esi, DWORD PTR [ebp-0x8]
 8092f1e:  mov edi, DWORD PTR [ebp-0x4]
 8092f21:  mov esp, ebp
 8092f23:  pop ebp
 8092f24:  ret
 8092f25:  lea esi, [esi]
 8092f28:  lea eax, [ebp-0xe8]
 8092f2e:  mov DWORD PTR [ebp-0x128], eax
 8092f34:  lea eax, [ebp-0x8180]
 8092f3a:  mov DWORD PTR [ebp-0xd8], eax
 8092f40:  lea edx, [ebp-0x180]
 8092f46:  mov DWORD PTR [ebp-0xdc], eax
 8092f4c:  mov eax, DWORD PTR [esi+0x3c]
 8092f4f:  mov DWORD PTR [ebp-0x2c], esi
 8092f52:  mov DWORD PTR [ebp-0xd4], edx
 8092f58:  mov DWORD PTR [ebp-0x118], 0x1
 8092f62:  mov DWORD PTR [ebp-0x144], eax
 8092f68:  mov eax, DWORD PTR [ebp-0x8188]
 8092f6e:  mov DWORD PTR [ebp-0x180], 0xfbad8004
 8092f78:  mov DWORD PTR [ebp-0x138], 0x0
 8092f82:  mov DWORD PTR [ebp-0xec], 0x80c5220
 8092f8c:  mov DWORD PTR [esp+0x8], ebx
 8092f90:  mov DWORD PTR [esp+0x4], eax
 8092f94:  mov DWORD PTR [esp], edx
 8092f97:  call 808e7e0
 8092f9c:  mov edi, eax
 8092f9e:  mov eax, 0x0
 8092fa3:  test eax, eax
 8092fa5:  setne al
 8092fa8:  movzx eax, al
 8092fab:  test eax, eax
 8092fad:  mov DWORD PTR [ebp-0x8184], eax
 8092fb3:  jne 8093080
 8092fb9:  mov DWORD PTR [ebp-0x1c], 0x8061830
 8092fc0:  mov DWORD PTR [ebp-0x18], esi
 8092fc3:  cmp WORD PTR [esi], 0x0
 8092fc7:  js 8093009
 8092fc9:  mov edx, DWORD PTR [esi+0x48]
 8092fcc:  mov ebx, DWORD PTR gs:0x8
 8092fd3:  cmp DWORD PTR [edx+0x8], ebx
 8092fd6:  je 8093005
 8092fd8:  mov DWORD PTR [ebp-0x8190], 0x0
 8092fe2:  mov ecx, 0x1
 8092fe7:  xor eax, eax
 8092fe9:  cmp DWORD PTR gs:0xc, 0x0
 8092ff1:  je 8092ff4
 8092ff3:  cmpxchg DWORD PTR [edx], ecx
 8092ff7:  jne 80930d1
 8092ffd:  mov eax, DWORD PTR [esi+0x48]
 8093000:  mov DWORD PTR [eax+0x8], ebx
 8093003:  mov edx, eax
 8093005:  add DWORD PTR [edx+0x4], 0x1
 8093009:  mov eax, DWORD PTR [ebp-0x128]
 809300f:  mov edx, DWORD PTR [eax+0xc]
 8093012:  mov ebx, DWORD PTR [eax+0x10]
 8093015:  sub ebx, edx
 8093017:  sar ebx, 0x2
 809301a:  test ebx, ebx
 809301c:  jle 809303f
 809301e:  mov eax, DWORD PTR [esi+0x94]
 8093024:  mov DWORD PTR [esp+0x8], ebx
 8093028:  mov DWORD PTR [esp+0x4], edx
 809302c:  mov DWORD PTR [esp], esi
 809302f:  call DWORD PTR [eax+0x1c]
 8093032:  cmp eax, ebx
 8093034:  sete al
 8093037:  movzx eax, al
 809303a:  sub eax, 0x1
 809303d:  or edi, eax
 809303f:  cmp WORD PTR [esi], 0x0
 8093043:  js 8093055
 8093045:  mov edx, DWORD PTR [esi+0x48]
 8093048:  mov eax, DWORD PTR [edx+0x4]
 809304b:  sub eax, 0x1
 809304e:  test eax, eax
 8093050:  mov DWORD PTR [edx+0x4], eax
 8093053:  je 80930a0
 8093055:  mov eax, DWORD PTR [ebp-0x8184]
 809305b:  test eax, eax
 809305d:  je 8092f16
 8093063:  lea eax, [ebp-0x1c]
 8093066:  mov DWORD PTR [esp+0x4], 0x0
 809306e:  mov DWORD PTR [esp], eax
 8093071:  call 0
 8093076:  jmp 8092f16
 809307b:  nop
 809307c:  lea esi, [esi]
 8093080:  lea eax, [ebp-0x1c]
 8093083:  mov DWORD PTR [esp+0x8], esi
 8093087:  mov DWORD PTR [esp+0x4], 0x8061830
 809308f:  mov DWORD PTR [esp], eax
 8093092:  call 0
 8093097:  jmp 8092fc3
 809309c:  lea esi, [esi]
 80930a0:  mov DWORD PTR [edx+0x8], 0x0
 80930a7:  cmp DWORD PTR gs:0xc, 0x0
 80930af:  je 80930b2
 80930b1:  sub DWORD PTR [edx], 0x1
 80930b5:  jne 80930dd
 80930b7:  jmp 8093055

080930b9 <_L_lock_1402>:
 80930b9:  lea ecx, [esi]
 80930bb:  call 8050230
 80930c0:  jmp 808e906

080930c5 <_L_unlock_5034>:
 80930c5:  lea eax, [edx]
 80930c7:  call 8050260
 80930cc:  jmp 80909b4

080930d1 <_L_lock_10152>:
 80930d1:  lea ecx, [edx]
 80930d3:  call 8050230
 80930d8:  jmp 8092ffd

080930dd <_L_unlock_10233>:
 80930dd:  lea eax, [edx]
 80930df:  call 8050260
 80930e4:  jmp 80930b7
 80930e6:  nop
 80930e7:  nop
 80930e8:  nop
 80930e9:  nop
 80930ea:  nop
 80930eb:  nop
 80930ec:  nop
 80930ed:  nop
 80930ee:  nop
 80930ef:  nop

080930f0 <_IO_sscanf>:
 80930f0:  push ebp
 80930f1:  mov ebp, esp
 80930f3:  sub esp, 0xc
 80930f6:  lea eax, [ebp+0x10]
 80930f9:  mov DWORD PTR [esp+0x8], eax
 80930fd:  mov eax, DWORD PTR [ebp+0xc]
 8093100:  mov DWORD PTR [esp+0x4], eax
 8093104:  mov eax, DWORD PTR [ebp+0x8]
 8093107:  mov DWORD PTR [esp], eax
 809310a:  call 8093d90
 809310f:  leave
 8093110:  ret
 8093111:  nop
 8093112:  nop
 8093113:  nop
 8093114:  nop
 8093115:  nop
 8093116:  nop
 8093117:  nop
 8093118:  nop
 8093119:  nop
 809311a:  nop
 809311b:  nop
 809311c:  nop
 809311d:  nop
 809311e:  nop
 809311f:  nop

08093120 <__parse_one_specwc>:
 8093120:  push ebp
 8093121:  mov ebp, esp
 8093123:  push edi
 8093124:  push esi
 8093125:  push ebx
 8093126:  sub esp, 0x18
 8093129:  mov eax, DWORD PTR [ebp+0x10]
 809312c:  mov edx, DWORD PTR [ebp+0x8]
 809312f:  movzx ecx, BYTE PTR [eax+0xc]
 8093133:  mov DWORD PTR [eax+0x24], 0xffffffff
 809313a:  lea edi, [edx+0x4]
 809313d:  and ecx, 0x7
 8093140:  mov BYTE PTR [ebp-0x15], cl
 8093143:  mov BYTE PTR [eax+0xc], cl
 8093146:  mov ecx, DWORD PTR [ebp+0x10]
 8093149:  movzx eax, BYTE PTR [ecx+0xd]
 809314d:  mov DWORD PTR [ecx+0x10], 0x20
 8093154:  and eax, 0xf6
 8093157:  or eax, 0x4
 809315a:  mov BYTE PTR [ecx+0xd], al
 809315d:  mov esi, DWORD PTR [edx+0x4]
 8093160:  lea ecx, [esi-0x30]
 8093163:  cmp ecx, 0x9
 8093166:  ja 8093198
 8093168:  mov eax, DWORD PTR [edx+0x8]
 809316b:  lea ebx, [edx+0x8]
 809316e:  lea edx, [eax-0x30]
 8093171:  cmp edx, 0x9
 8093174:  ja 809318b
 8093176:  xchg ax, ax
 8093178:  lea eax, [ecx+ecx*4]
 809317b:  add ebx, 0x4
 809317e:  lea ecx, [edx+eax*2]
 8093181:  mov eax, DWORD PTR [ebx]
 8093183:  lea edx, [eax-0x30]
 8093186:  cmp edx, 0x9
 8093189:  jbe 8093178
 809318b:  test ecx, ecx
 809318d:  jne 8093360
 8093193:  nop
 8093194:  lea esi, [esi]
 8093198:  lea eax, [esi-0x20]
 809319b:  cmp eax, 0x29
 809319e:  jbe 80932c8
 80931a4:  test BYTE PTR [ebp-0x15], 0x20
 80931a8:  je 80931b4
 80931aa:  mov eax, DWORD PTR [ebp+0x10]
 80931ad:  mov DWORD PTR [eax+0x10], 0x20
 80931b4:  mov edx, DWORD PTR [ebp+0x10]
 80931b7:  mov DWORD PTR [edx+0x20], 0xffffffff
 80931be:  mov DWORD PTR [edx+0x4], 0x0
 80931c5:  mov eax, DWORD PTR [edi]
 80931c7:  cmp eax, 0x2a
 80931ca:  je 80933c0
 80931d0:  lea ecx, [eax-0x30]
 80931d3:  cmp ecx, 0x9
 80931d6:  mov DWORD PTR [ebp-0x14], 0x0
 80931dd:  jbe 80932a6
 80931e3:  mov edx, DWORD PTR [ebp+0x10]
 80931e6:  mov DWORD PTR [edx+0x1c], 0xffffffff
 80931ed:  mov DWORD PTR [edx], 0xffffffff
 80931f3:  cmp DWORD PTR [edi], 0x2e
 80931f6:  je 80933f0
 80931fc:  mov ecx, DWORD PTR [ebp+0x10]
 80931ff:  lea esi, [edi+0x4]
 8093202:  movzx eax, BYTE PTR [ecx+0xc]
 8093206:  and eax, 0xf8
 8093209:  mov BYTE PTR [ebp-0x15], al
 809320c:  movzx edx, BYTE PTR [ecx+0xd]
 8093210:  mov BYTE PTR [ecx+0xc], al
 8093213:  and edx, 0xfd
 8093216:  mov BYTE PTR [ebp-0x16], dl
 8093219:  mov BYTE PTR [ecx+0xd], dl
 809321c:  mov ebx, DWORD PTR [edi]
 809321e:  lea ecx, [ebx-0x4c]
 8093221:  cmp ecx, 0x2e
 8093224:  jbe 8093350
 809322a:  mov DWORD PTR [ebp-0x10], esi
 809322d:  mov esi, edi
 809322f:  nop
 8093230:  mov edi, DWORD PTR ds:0x80d2e78
 8093236:  mov eax, DWORD PTR [ebp+0x10]
 8093239:  test edi, edi
 809323b:  mov DWORD PTR [eax+0x8], ebx
 809323e:  jne 8093712
 8093244:  mov ecx, DWORD PTR [ebp+0x10]
 8093247:  mov eax, DWORD PTR [ecx+0x8]
 809324a:  mov DWORD PTR [ecx+0x2c], 0x1
 8093251:  sub eax, 0x41
 8093254:  cmp eax, 0x37
 8093257:  jbe 8093358
 809325d:  mov eax, DWORD PTR [ebp+0x10]
 8093260:  mov DWORD PTR [eax+0x2c], 0x0
 8093267:  mov edx, eax
 8093269:  lea esi, [esi]
 8093270:  cmp DWORD PTR [edx+0x24], 0xff
 8093274:  je 8093520
 809327a:  mov edx, DWORD PTR [ebp+0x10]
 809327d:  mov eax, DWORD PTR [edx+0x8]
 8093280:  test eax, eax
 8093282:  jne 8093548
 8093288:  mov DWORD PTR [edx+0x18], esi
 809328b:  mov eax, DWORD PTR [ebp-0x14]
 809328e:  mov DWORD PTR [edx+0x14], esi
 8093291:  add esp, 0x18
 8093294:  pop ebx
 8093295:  pop esi
 8093296:  pop edi
 8093297:  pop ebp
 8093298:  ret
 8093299:  lea esi, [esi]
 80932a0:  lea eax, [ecx+ecx*4]
 80932a3:  lea ecx, [edx+eax*2]
 80932a6:  add edi, 0x4
 80932a9:  mov eax, DWORD PTR [edi]
 80932ab:  lea edx, [eax-0x30]
 80932ae:  cmp edx, 0x9
 80932b1:  jbe 80932a0
 80932b3:  mov eax, DWORD PTR [ebp+0x10]
 80932b6:  mov DWORD PTR [ebp-0x14], 0x0
 80932bd:  mov DWORD PTR [eax+0x4], ecx
 80932c0:  jmp 80931e3
 80932c5:  lea esi, [esi]
 80932c8:  jmp DWORD PTR [eax*4+0x80c6094]
 80932cf:  nop
 80932d0:  mov ecx, DWORD PTR [ebp+0x10]
 80932d3:  or BYTE PTR [ecx+0xd], 0x8
 80932d7:  nop
 80932d8:  add edi, 0x4
 80932db:  mov esi, DWORD PTR [edi]
 80932dd:  test esi, esi
 80932df:  jne 8093198
 80932e5:  jmp 80931a4
 80932ea:  lea esi, [esi]
 80932f0:  mov ecx, DWORD PTR [ebp+0x10]
 80932f3:  mov DWORD PTR [ecx+0x10], 0x30
 80932fa:  jmp 80932d8
 80932fc:  lea esi, [esi]
 8093300:  or BYTE PTR [ebp-0x15], 0x20
 8093304:  movzx edx, BYTE PTR [ebp-0x15]
 8093308:  mov ecx, DWORD PTR [ebp+0x10]
 809330b:  mov BYTE PTR [ecx+0xc], dl
 809330e:  jmp 80932d8
 8093310:  or BYTE PTR [ebp-0x15], 0x40
 8093314:  movzx ecx, BYTE PTR [ebp-0x15]
 8093318:  mov eax, DWORD PTR [ebp+0x10]
 809331b:  mov BYTE PTR [eax+0xc], cl
 809331e:  jmp 80932d8
 8093320:  or BYTE PTR [ebp-0x15], 0x80
 8093324:  movzx eax, BYTE PTR [ebp-0x15]
 8093328:  mov edx, DWORD PTR [ebp+0x10]
 809332b:  mov BYTE PTR [edx+0xc], al
 809332e:  jmp 80932d8
 8093330:  or BYTE PTR [ebp-0x15], 0x8
 8093334:  movzx eax, BYTE PTR [ebp-0x15]
 8093338:  mov edx, DWORD PTR [ebp+0x10]
 809333b:  mov BYTE PTR [edx+0xc], al
 809333e:  jmp 80932d8
 8093340:  or BYTE PTR [ebp-0x15], 0x10
 8093344:  movzx eax, BYTE PTR [ebp-0x15]
 8093348:  mov edx, DWORD PTR [ebp+0x10]
 809334b:  mov BYTE PTR [edx+0xc], al
 809334e:  jmp 80932d8
 8093350:  jmp DWORD PTR [ecx*4+0x80c613c]
 8093357:  nop
 8093358:  jmp DWORD PTR [eax*4+0x80c61f8]
 809335f:  nop
 8093360:  cmp eax, 0x24
 8093363:  nop
 8093364:  lea esi, [esi]
 8093368:  jne 8093198
 809336e:  mov edx, DWORD PTR [ebp+0x10]
 8093371:  lea eax, [ecx-0x1]
 8093374:  lea edi, [ebx+0x4]
 8093377:  mov DWORD PTR [edx+0x24], eax
 809337a:  mov eax, DWORD PTR [ebp+0x14]
 809337d:  mov edx, DWORD PTR [eax]
 809337f:  mov eax, ecx
 8093381:  cmp ecx, edx
 8093383:  jb 80936b7
 8093389:  mov edx, DWORD PTR [ebp+0x14]
 809338c:  mov ecx, DWORD PTR [ebp+0x10]
 809338f:  mov DWORD PTR [edx], eax
 8093391:  mov esi, DWORD PTR [edi]
 8093393:  movzx ecx, BYTE PTR [ecx+0xc]
 8093397:  mov BYTE PTR [ebp-0x15], cl
 809339a:  jmp 8093198
 809339f:  nop
 80933a0:  and eax, 0xfa
 80933a3:  mov edx, DWORD PTR [ebp+0x10]
 80933a6:  lea ecx, [esi+0x4]
 80933a9:  mov BYTE PTR [ebp-0x15], al
 80933ac:  mov BYTE PTR [edx+0xc], al
 80933af:  mov ebx, DWORD PTR [esi]
 80933b1:  mov DWORD PTR [ebp-0x10], ecx
 80933b4:  jmp 8093230
 80933b9:  lea esi, [esi]
 80933c0:  add edi, 0x4
 80933c3:  mov eax, DWORD PTR [edi]
 80933c5:  mov edx, edi
 80933c7:  lea ecx, [eax-0x30]
 80933ca:  cmp ecx, 0x9
 80933cd:  jbe 8093438
 80933cf:  mov ecx, DWORD PTR [ebp+0x10]
 80933d2:  mov eax, DWORD PTR [ecx+0x20]
 80933d5:  test eax, eax
 80933d7:  js 8093630
 80933dd:  mov edi, edx
 80933df:  mov DWORD PTR [ebp-0x14], 0x0
 80933e6:  jmp 80931e3
 80933eb:  nop
 80933ec:  lea esi, [esi]
 80933f0:  add edi, 0x4
 80933f3:  mov eax, DWORD PTR [edi]
 80933f5:  cmp eax, 0x2a
 80933f8:  je 8093608
 80933fe:  lea ecx, [eax-0x30]
 8093401:  cmp ecx, 0x9
 8093404:  jbe 809341e
 8093406:  mov edx, DWORD PTR [ebp+0x10]
 8093409:  mov DWORD PTR [edx], 0x0
 809340f:  jmp 80931fc
 8093414:  lea esi, [esi]
 8093418:  lea eax, [ecx+ecx*4]
 809341b:  lea ecx, [edx+eax*2]
 809341e:  add edi, 0x4
 8093421:  mov eax, DWORD PTR [edi]
 8093423:  lea edx, [eax-0x30]
 8093426:  cmp edx, 0x9
 8093429:  jbe 8093418
 809342b:  mov eax, DWORD PTR [ebp+0x10]
 809342e:  mov DWORD PTR [eax], ecx
 8093430:  jmp 80931fc
 8093435:  lea esi, [esi]
 8093438:  mov eax, DWORD PTR [edi+0x4]
 809343b:  lea ebx, [edi+0x4]
 809343e:  lea edx, [eax-0x30]
 8093441:  cmp edx, 0x9
 8093444:  ja 809345b
 8093446:  xchg ax, ax
 8093448:  lea eax, [ecx+ecx*4]
 809344b:  add ebx, 0x4
 809344e:  lea ecx, [edx+eax*2]
 8093451:  mov eax, DWORD PTR [ebx]
 8093453:  lea edx, [eax-0x30]
 8093456:  cmp edx, 0x9
 8093459:  jbe 8093448
 809345b:  test ecx, ecx
 809345d:  mov edx, ebx
 809345f:  je 80933cf
 8093465:  cmp eax, 0x24
 8093468:  jne 80933cf
 809346e:  mov edx, DWORD PTR [ebp+0x10]
 8093471:  lea eax, [ecx-0x1]
 8093474:  mov DWORD PTR [edx+0x20], eax
 8093477:  mov eax, DWORD PTR [ebp+0x14]
 809347a:  mov edx, DWORD PTR [eax]
 809347c:  mov eax, ecx
 809347e:  cmp ecx, edx
 8093480:  jae 8093484
 8093482:  mov eax, edx
 8093484:  mov edx, DWORD PTR [ebp+0x14]
 8093487:  mov DWORD PTR [edx], eax
 8093489:  lea edx, [ebx+0x4]
 809348c:  jmp 80933cf
 8093491:  lea esi, [esi]
 8093498:  mov ecx, DWORD PTR [ebp+0x10]
 809349b:  or eax, 0x4
 809349e:  mov BYTE PTR [ebp-0x15], al
 80934a1:  mov BYTE PTR [ecx+0xc], al
 80934a4:  mov ebx, DWORD PTR [esi]
 80934a6:  cmp ebx, 0x6c
 80934a9:  jne 80934be
 80934ab:  add esi, 0x4
 80934ae:  or BYTE PTR [ebp-0x15], 0x1
 80934b2:  movzx edx, BYTE PTR [ebp-0x15]
 80934b6:  mov ecx, DWORD PTR [ebp+0x10]
 80934b9:  mov BYTE PTR [ecx+0xc], dl
 80934bc:  mov ebx, DWORD PTR [esi]
 80934be:  lea eax, [esi+0x4]
 80934c1:  mov DWORD PTR [ebp-0x10], eax
 80934c4:  jmp 8093230
 80934c9:  lea esi, [esi]
 80934d0:  cmp DWORD PTR [esi], 0x68
 80934d3:  je 80936cd
 80934d9:  or eax, 0x2
 80934dc:  jmp 80933a3
 80934e1:  lea esi, [esi]
 80934e8:  or eax, 0x5
 80934eb:  nop
 80934ec:  lea esi, [esi]
 80934f0:  jmp 80933a3
 80934f5:  lea esi, [esi]
 80934f8:  and BYTE PTR [ebp-0x15], 0x1
 80934fc:  cmp BYTE PTR [ebp-0x15], 0x1
 8093500:  mov ecx, DWORD PTR [ebp+0x10]
 8093503:  sbb eax, eax
 8093505:  xor al, al
 8093507:  mov edx, ecx
 8093509:  add eax, 0x107
 809350e:  cmp DWORD PTR [edx+0x24], 0xff
 8093512:  mov DWORD PTR [ecx+0x28], eax
 8093515:  jne 809327a
 809351b:  nop
 809351c:  lea esi, [esi]
 8093520:  mov ecx, DWORD PTR [edx+0x2c]
 8093523:  test ecx, ecx
 8093525:  je 809327a
 809352b:  mov ecx, DWORD PTR [ebp+0xc]
 809352e:  mov eax, DWORD PTR [edx+0x2c]
 8093531:  add DWORD PTR [ebp-0x14], eax
 8093534:  mov DWORD PTR [edx+0x24], ecx
 8093537:  mov edx, DWORD PTR [ebp+0x10]
 809353a:  mov eax, DWORD PTR [edx+0x8]
 809353d:  test eax, eax
 809353f:  je 8093288
 8093545:  lea esi, [esi]
 8093548:  mov eax, DWORD PTR [ebp-0x10]
 809354b:  mov DWORD PTR [edx+0x14], eax
 809354e:  mov DWORD PTR [esp+0x4], 0x25
 8093556:  mov DWORD PTR [esp], eax
 8093559:  call 80946e0
 809355e:  mov edx, DWORD PTR [ebp+0x10]
 8093561:  mov DWORD PTR [edx+0x18], eax
 8093564:  mov eax, DWORD PTR [ebp-0x14]
 8093567:  add esp, 0x18
 809356a:  pop ebx
 809356b:  pop esi
 809356c:  pop edi
 809356d:  pop ebp
 809356e:  ret
 809356f:  nop
 8093570:  mov ecx, DWORD PTR [ebp+0x10]
 8093573:  mov DWORD PTR [ecx+0x28], 0x3
 809357a:  mov edx, ecx
 809357c:  jmp 8093270
 8093581:  lea esi, [esi]
 8093588:  mov edx, DWORD PTR [ebp+0x10]
 809358b:  mov DWORD PTR [edx+0x28], 0x5
 8093592:  jmp 8093270
 8093597:  nop
 8093598:  mov ecx, DWORD PTR [ebp+0x10]
 809359b:  mov DWORD PTR [ecx+0x28], 0x800
 80935a2:  mov edx, ecx
 80935a4:  jmp 8093270
 80935a9:  lea esi, [esi]
 80935b0:  mov eax, DWORD PTR [ebp+0x10]
 80935b3:  mov DWORD PTR [eax+0x28], 0x1
 80935ba:  mov edx, eax
 80935bc:  jmp 8093270
 80935c1:  lea esi, [esi]
 80935c8:  test BYTE PTR [ebp-0x15], 0x1
 80935cc:  je 8093648
 80935ce:  mov eax, DWORD PTR [ebp+0x10]
 80935d1:  mov DWORD PTR [eax+0x28], 0x100
 80935d8:  mov edx, eax
 80935da:  jmp 8093270
 80935df:  nop
 80935e0:  mov eax, DWORD PTR [ebp+0x10]
 80935e3:  mov DWORD PTR [eax+0x28], 0x4
 80935ea:  mov edx, eax
 80935ec:  jmp 8093270
 80935f1:  lea esi, [esi]
 80935f8:  mov edx, DWORD PTR [ebp+0x10]
 80935fb:  mov DWORD PTR [edx+0x28], 0x2
 8093602:  jmp 8093270
 8093607:  nop
 8093608:  add edi, 0x4
 809360b:  mov eax, DWORD PTR [edi]
 809360d:  mov ebx, edi
 809360f:  lea ecx, [eax-0x30]
 8093612:  cmp ecx, 0x9
 8093615:  jbe 8093669
 8093617:  mov ecx, DWORD PTR [ebp+0x10]
 809361a:  mov eax, DWORD PTR [ecx+0x1c]
 809361d:  test eax, eax
 809361f:  js 80936e9
 8093625:  mov edi, ebx
 8093627:  jmp 80931fc
 809362c:  lea esi, [esi]
 8093630:  mov edx, DWORD PTR [ebp+0xc]
 8093633:  mov DWORD PTR [ebp-0x14], 0x1
 809363a:  mov DWORD PTR [ecx+0x20], edx
 809363d:  add edx, 0x1
 8093640:  mov DWORD PTR [ebp+0xc], edx
 8093643:  jmp 80931e3
 8093648:  test BYTE PTR [ebp-0x15], 0x4
 809364c:  jne 80936be
 809364e:  test BYTE PTR [ebp-0x15], 0x2
 8093652:  je 80936fe
 8093658:  mov ecx, DWORD PTR [ebp+0x10]
 809365b:  mov DWORD PTR [ecx+0x28], 0x400
 8093662:  mov edx, ecx
 8093664:  jmp 8093270
 8093669:  mov eax, DWORD PTR [edi+0x4]
 809366c:  lea ebx, [edi+0x4]
 809366f:  lea edx, [eax-0x30]
 8093672:  cmp edx, 0x9
 8093675:  ja 809368b
 8093677:  nop
 8093678:  lea eax, [ecx+ecx*4]
 809367b:  add ebx, 0x4
 809367e:  lea ecx, [edx+eax*2]
 8093681:  mov eax, DWORD PTR [ebx]
 8093683:  lea edx, [eax-0x30]
 8093686:  cmp edx, 0x9
 8093689:  jbe 8093678
 809368b:  test ecx, ecx
 809368d:  je 8093617
 809368f:  cmp eax, 0x24
 8093692:  jne 8093617
 8093694:  mov edx, DWORD PTR [ebp+0x10]
 8093697:  lea eax, [ecx-0x1]
 809369a:  mov DWORD PTR [edx+0x1c], eax
 809369d:  mov eax, DWORD PTR [ebp+0x14]
 80936a0:  mov edx, DWORD PTR [eax]
 80936a2:  mov eax, ecx
 80936a4:  cmp ecx, edx
 80936a6:  jae 80936aa
 80936a8:  mov eax, edx
 80936aa:  mov edx, DWORD PTR [ebp+0x14]
 80936ad:  add ebx, 0x4
 80936b0:  mov DWORD PTR [edx], eax
 80936b2:  jmp 8093617
 80936b7:  mov eax, edx
 80936b9:  jmp 8093389
 80936be:  mov edx, DWORD PTR [ebp+0x10]
 80936c1:  mov DWORD PTR [edx+0x28], 0x200
 80936c8:  jmp 8093270
 80936cd:  mov eax, DWORD PTR [ebp+0x10]
 80936d0:  or edx, 0x2
 80936d3:  add esi, 0x4
 80936d6:  mov BYTE PTR [ebp-0x16], dl
 80936d9:  mov BYTE PTR [eax+0xd], dl
 80936dc:  lea edx, [esi+0x4]
 80936df:  mov ebx, DWORD PTR [esi]
 80936e1:  mov DWORD PTR [ebp-0x10], edx
 80936e4:  jmp 8093230
 80936e9:  mov edx, DWORD PTR [ebp+0xc]
 80936ec:  add DWORD PTR [ebp-0x14], 0x1
 80936f0:  mov DWORD PTR [ecx+0x1c], edx
 80936f3:  add edx, 0x1
 80936f6:  mov DWORD PTR [ebp+0xc], edx
 80936f9:  jmp 80931fc
 80936fe:  xor eax, eax
 8093700:  mov edx, DWORD PTR [ebp+0x10]
 8093703:  test BYTE PTR [ebp-0x16], 0x2
 8093707:  setne al
 809370a:  mov DWORD PTR [edx+0x28], eax
 809370d:  jmp 8093270
 8093712:  cmp ebx, 0xff
 8093718:  jg 8093244
 809371e:  mov eax, ds:0x80d2f40
 8093723:  mov edx, DWORD PTR [eax+ebx*4]
 8093726:  test edx, edx
 8093728:  je 8093244
 809372e:  mov eax, DWORD PTR [ebp+0x10]
 8093731:  mov DWORD PTR [esp+0x4], 0x1
 8093739:  add eax, 0x28
 809373c:  mov DWORD PTR [esp+0x8], eax
 8093740:  mov ecx, DWORD PTR [ebp+0x10]
 8093743:  mov DWORD PTR [esp], ecx
 8093746:  call edx
 8093748:  mov edx, DWORD PTR [ebp+0x10]
 809374b:  mov DWORD PTR [edx+0x2c], eax
 809374e:  jmp 8093270
 8093753:  nop
 8093754:  nop
 8093755:  nop
 8093756:  nop
 8093757:  nop
 8093758:  nop
 8093759:  nop
 809375a:  nop
 809375b:  nop
 809375c:  nop
 809375d:  nop
 809375e:  nop
 809375f:  nop

08093760 <_IO_file_doallocate>:
 8093760:  push ebp
 8093761:  mov ebp, esp
 8093763:  push esi
 8093764:  push ebx
 8093765:  sub esp, 0x78
 8093768:  mov esi, DWORD PTR [ebp+0x8]
 809376b:  mov eax, DWORD PTR [esi+0x38]
 809376e:  test eax, eax
 8093770:  js 80937b8
 8093772:  mov eax, DWORD PTR [esi+0x94]
 8093778:  lea edx, [ebp-0x68]
 809377b:  mov DWORD PTR [esp+0x4], edx
 809377f:  mov DWORD PTR [esp], esi
 8093782:  call DWORD PTR [eax+0x48]
 8093785:  test eax, eax
 8093787:  js 80937b8
 8093789:  mov eax, DWORD PTR [ebp-0x58]
 809378c:  and eax, 0xf000
 8093791:  cmp eax, 0x2000
 8093796:  je 8093828
 809379c:  mov eax, DWORD PTR [ebp-0x34]
 809379f:  test eax, eax
 80937a1:  jle 80937b8
 80937a3:  mov ebx, eax
 80937a5:  lea eax, [eax+0xfff]
 80937ab:  and eax, 0xfffff000
 80937b0:  jmp 80937c2
 80937b2:  lea esi, [esi]
 80937b8:  mov ebx, 0x2000
 80937bd:  mov eax, 0x2000
 80937c2:  mov DWORD PTR [esp+0x14], 0x0
 80937ca:  mov DWORD PTR [esp+0x10], 0xffffffff
 80937d2:  mov DWORD PTR [esp+0xc], 0x22
 80937da:  mov DWORD PTR [esp+0x8], 0x3
 80937e2:  mov DWORD PTR [esp+0x4], eax
 80937e6:  mov DWORD PTR [esp], 0x0
 80937ed:  call 8050000
 80937f2:  mov edx, eax
 80937f4:  mov eax, 0xffffffff
 80937f9:  cmp edx, 0xff
 80937fc:  je 809381e
 80937fe:  lea eax, [edx+ebx]
 8093801:  mov DWORD PTR [esp+0x8], eax
 8093805:  mov DWORD PTR [esp+0xc], 0x1
 809380d:  mov DWORD PTR [esp+0x4], edx
 8093811:  mov DWORD PTR [esp], esi
 8093814:  call 8068980
 8093819:  mov eax, 0x1
 809381e:  add esp, 0x78
 8093821:  pop ebx
 8093822:  pop esi
 8093823:  pop ebp
 8093824:  ret
 8093825:  lea esi, [esi]
 8093828:  mov edx, DWORD PTR [ebp-0x44]
 809382b:  mov eax, DWORD PTR [ebp-0x48]
 809382e:  mov ecx, edx
 8093830:  shrd eax, edx, 0x8
 8093834:  and ecx, 0xfffff000
 809383a:  and eax, 0xfff
 809383f:  or ecx, eax
 8093841:  sub ecx, 0x88
 8093847:  cmp ecx, 0x7
 809384a:  ja 8093868
 809384c:  mov eax, DWORD PTR [ebp-0x34]
 809384f:  or DWORD PTR [esi], 0x200
 8093855:  test eax, eax
 8093857:  jg 80937a3
 809385d:  jmp 80937b8
 8093862:  lea esi, [esi]
 8093868:  mov eax, DWORD PTR [esi+0x38]
 809386b:  mov DWORD PTR [esp], eax
 809386e:  call 8095c40
 8093873:  test eax, eax
 8093875:  lea esi, [esi]
 8093878:  je 809379c
 809387e:  xchg ax, ax
 8093880:  jmp 809384c
 8093882:  nop
 8093883:  nop
 8093884:  nop
 8093885:  nop
 8093886:  nop
 8093887:  nop
 8093888:  nop
 8093889:  nop
 809388a:  nop
 809388b:  nop
 809388c:  nop
 809388d:  nop
 809388e:  nop
 809388f:  nop

08093890 <_IO_wfile_doallocate>:
 8093890:  push ebp
 8093891:  mov ebp, esp
 8093893:  push esi
 8093894:  push ebx
 8093895:  sub esp, 0x18
 8093898:  mov esi, DWORD PTR [ebp+0x8]
 809389b:  mov eax, DWORD PTR [esi+0x1c]
 809389e:  test eax, eax
 80938a0:  je 8093928
 80938a6:  mov ebx, DWORD PTR [esi+0x20]
 80938a9:  sub ebx, eax
 80938ab:  test BYTE PTR [esi], 0x1
 80938ae:  je 80938b6
 80938b0:  add ebx, 0x3
 80938b3:  shr ebx, 0x2
 80938b6:  lea eax, [ebx*4+0xfff]
 80938bd:  and eax, 0xfffff000
 80938c2:  mov DWORD PTR [esp+0x14], 0x0
 80938ca:  mov DWORD PTR [esp+0x10], 0xffffffff
 80938d2:  mov DWORD PTR [esp+0xc], 0x22
 80938da:  mov DWORD PTR [esp+0x8], 0x3
 80938e2:  mov DWORD PTR [esp+0x4], eax
 80938e6:  mov DWORD PTR [esp], 0x0
 80938ed:  call 8050000
 80938f2:  mov edx, eax
 80938f4:  mov eax, 0xffffffff
 80938f9:  cmp edx, 0xff
 80938fc:  je 809391e
 80938fe:  lea eax, [edx+ebx*4]
 8093901:  mov DWORD PTR [esp+0x8], eax
 8093905:  mov DWORD PTR [esp+0xc], 0x1
 809390d:  mov DWORD PTR [esp+0x4], edx
 8093911:  mov DWORD PTR [esp], esi
 8093914:  call 8063120
 8093919:  mov eax, 0x1
 809391e:  add esp, 0x18
 8093921:  pop ebx
 8093922:  pop esi
 8093923:  pop ebp
 8093924:  ret
 8093925:  lea esi, [esi]
 8093928:  mov DWORD PTR [esp], esi
 809392b:  call 8093760
 8093930:  mov eax, DWORD PTR [esi+0x1c]
 8093933:  jmp 80938a6
 8093938:  nop
 8093939:  nop
 809393a:  nop
 809393b:  nop
 809393c:  nop
 809393d:  nop
 809393e:  nop
 809393f:  nop

08093940 <_IO_getdelim>:
 8093940:  push ebp
 8093941:  mov ebp, esp
 8093943:  push edi
 8093944:  push esi
 8093945:  push ebx
 8093946:  sub esp, 0x14
 8093949:  mov esi, DWORD PTR [ebp+0x8]
 809394c:  test esi, esi
 809394e:  je 8093b68
 8093954:  mov ebx, DWORD PTR [ebp+0xc]
 8093957:  test ebx, ebx
 8093959:  je 8093b68
 809395f:  mov edx, DWORD PTR [ebp+0x14]
 8093962:  mov eax, DWORD PTR [edx]
 8093964:  test ax, ax
 8093967:  js 80939a9
 8093969:  mov esi, DWORD PTR [edx+0x48]
 809396c:  mov ebx, DWORD PTR gs:0x8
 8093973:  cmp DWORD PTR [esi+0x8], ebx
 8093976:  je 80939a0
 8093978:  xor edx, edx
 809397a:  mov ecx, 0x1
 809397f:  mov eax, edx
 8093981:  cmp DWORD PTR gs:0xc, 0x0
 8093989:  je 809398c
 809398b:  cmpxchg DWORD PTR [esi], ecx
 809398f:  jne 8093bbc
 8093995:  mov edx, DWORD PTR [ebp+0x14]
 8093998:  mov eax, DWORD PTR [edx+0x48]
 809399b:  mov DWORD PTR [eax+0x8], ebx
 809399e:  mov esi, eax
 80939a0:  mov ecx, DWORD PTR [ebp+0x14]
 80939a3:  add DWORD PTR [esi+0x4], 0x1
 80939a7:  mov eax, DWORD PTR [ecx]
 80939a9:  test al, 0x20
 80939ab:  mov ecx, 0xffffffff
 80939b0:  jne 8093ad2
 80939b6:  mov eax, DWORD PTR [ebp+0x8]
 80939b9:  mov ecx, DWORD PTR [eax]
 80939bb:  test ecx, ecx
 80939bd:  je 80939c8
 80939bf:  mov edx, DWORD PTR [ebp+0xc]
 80939c2:  mov edx, DWORD PTR [edx]
 80939c4:  test edx, edx
 80939c6:  jne 80939ea
 80939c8:  mov ecx, DWORD PTR [ebp+0xc]
 80939cb:  mov DWORD PTR [ecx], 0x78
 80939d1:  mov DWORD PTR [esp], 0x78
 80939d8:  call 804d6f0
 80939dd:  mov edx, DWORD PTR [ebp+0x8]
 80939e0:  test eax, eax
 80939e2:  mov DWORD PTR [edx], eax
 80939e4:  je 8093b28
 80939ea:  mov edx, DWORD PTR [ebp+0x14]
 80939ed:  mov eax, DWORD PTR [edx+0x4]
 80939f0:  mov ebx, DWORD PTR [edx+0x8]
 80939f3:  sub ebx, eax
 80939f5:  test ebx, ebx
 80939f7:  jle 8093b18
 80939fd:  mov esi, eax
 80939ff:  xor edi, edi
 8093a01:  jmp 8093a27
 8093a03:  nop
 8093a04:  lea esi, [esi]
 8093a08:  mov DWORD PTR [esp], ecx
 8093a0b:  call 8069060
 8093a10:  add eax, 0x1
 8093a13:  je 8093abe
 8093a19:  mov eax, DWORD PTR [ebp+0x14]
 8093a1c:  mov edi, DWORD PTR [ebp-0x10]
 8093a1f:  mov esi, DWORD PTR [eax+0x4]
 8093a22:  mov ebx, DWORD PTR [eax+0x8]
 8093a25:  sub ebx, esi
 8093a27:  mov ecx, DWORD PTR [ebp+0x10]
 8093a2a:  mov DWORD PTR [esp+0x8], ebx
 8093a2e:  mov DWORD PTR [esp], esi
 8093a31:  mov DWORD PTR [esp+0x4], ecx
 8093a35:  call 806c0c0
 8093a3a:  test eax, eax
 8093a3c:  mov DWORD PTR [ebp-0x14], eax
 8093a3f:  je 8093a48
 8093a41:  mov ebx, eax
 8093a43:  add ebx, 0x1
 8093a46:  sub ebx, esi
 8093a48:  lea eax, [ebx+edi]
 8093a4b:  cmp eax, 0xff
 8093a4e:  mov DWORD PTR [ebp-0x10], eax
 8093a51:  jl 8093b34
 8093a57:  mov ecx, DWORD PTR [ebp+0xc]
 8093a5a:  mov edx, eax
 8093a5c:  add edx, 0x1
 8093a5f:  mov eax, DWORD PTR [ecx]
 8093a61:  cmp edx, eax
 8093a63:  jbe 8093a98
 8093a65:  add eax, eax
 8093a67:  mov esi, edx
 8093a69:  cmp edx, eax
 8093a6b:  jae 8093a6f
 8093a6d:  mov esi, eax
 8093a6f:  mov edx, DWORD PTR [ebp+0x8]
 8093a72:  mov DWORD PTR [esp+0x4], esi
 8093a76:  mov eax, DWORD PTR [edx]
 8093a78:  mov DWORD PTR [esp], eax
 8093a7b:  call 804db10
 8093a80:  test eax, eax
 8093a82:  je 8093b28
 8093a88:  mov edx, DWORD PTR [ebp+0x8]
 8093a8b:  mov ecx, DWORD PTR [ebp+0xc]
 8093a8e:  mov DWORD PTR [edx], eax
 8093a90:  mov eax, DWORD PTR [ebp+0x14]
 8093a93:  mov DWORD PTR [ecx], esi
 8093a95:  mov esi, DWORD PTR [eax+0x4]
 8093a98:  mov edx, DWORD PTR [ebp+0x8]
 8093a9b:  add edi, DWORD PTR [edx]
 8093a9d:  mov DWORD PTR [esp+0x8], ebx
 8093aa1:  mov DWORD PTR [esp+0x4], esi
 8093aa5:  mov DWORD PTR [esp], edi
 8093aa8:  call 804efc0
 8093aad:  mov ecx, DWORD PTR [ebp+0x14]
 8093ab0:  mov eax, DWORD PTR [ebp-0x14]
 8093ab3:  add DWORD PTR [ecx+0x4], ebx
 8093ab6:  test eax, eax
 8093ab8:  je 8093a08
 8093abe:  mov edx, DWORD PTR [ebp+0x8]
 8093ac1:  mov ecx, DWORD PTR [ebp-0x10]
 8093ac4:  mov eax, DWORD PTR [edx]
 8093ac6:  mov BYTE PTR [eax+ecx], 0x0
 8093aca:  mov edx, DWORD PTR [ebp+0x14]
 8093acd:  mov ecx, DWORD PTR [ebp-0x10]
 8093ad0:  mov eax, DWORD PTR [edx]
 8093ad2:  test ax, ax
 8093ad5:  js 8093b08
 8093ad7:  mov eax, DWORD PTR [ebp+0x14]
 8093ada:  mov edx, DWORD PTR [eax+0x48]
 8093add:  mov eax, DWORD PTR [edx+0x4]
 8093ae0:  sub eax, 0x1
 8093ae3:  test eax, eax
 8093ae5:  mov DWORD PTR [edx+0x4], eax
 8093ae8:  jne 8093b08
 8093aea:  mov DWORD PTR [edx+0x8], 0x0
 8093af1:  cmp DWORD PTR gs:0xc, 0x0
 8093af9:  je 8093afc
 8093afb:  sub DWORD PTR [edx], 0x1
 8093aff:  jne 8093bc8
 8093b05:  lea esi, [esi]
 8093b08:  add esp, 0x14
 8093b0b:  mov eax, ecx
 8093b0d:  pop ebx
 8093b0e:  pop esi
 8093b0f:  pop edi
 8093b10:  pop ebp
 8093b11:  ret
 8093b12:  lea esi, [esi]
 8093b18:  mov DWORD PTR [esp], edx
 8093b1b:  call 8069060
 8093b20:  add eax, 0x1
 8093b23:  jne 8093b56
 8093b25:  lea esi, [esi]
 8093b28:  mov ecx, DWORD PTR [ebp+0x14]
 8093b2b:  mov eax, DWORD PTR [ecx]
 8093b2d:  mov ecx, 0xffffffff
 8093b32:  jmp 8093ad2
 8093b34:  mov edx, 0xffffffe8
 8093b3a:  mov ecx, 0xffffffff
 8093b3f:  mov eax, gs:0x0
 8093b45:  mov DWORD PTR [eax+edx], 0x4b
 8093b4c:  mov edx, DWORD PTR [ebp+0x14]
 8093b4f:  mov eax, DWORD PTR [edx]
 8093b51:  jmp 8093ad2
 8093b56:  mov edx, DWORD PTR [ebp+0x14]
 8093b59:  mov eax, DWORD PTR [edx+0x4]
 8093b5c:  mov ebx, DWORD PTR [edx+0x8]
 8093b5f:  sub ebx, eax
 8093b61:  jmp 80939fd
 8093b66:  xchg ax, ax
 8093b68:  mov edx, 0xffffffe8
 8093b6e:  mov ecx, 0xffffffff
 8093b73:  mov eax, gs:0x0
 8093b79:  mov DWORD PTR [eax+edx], 0x16
 8093b80:  jmp 8093b08
 8093b82:  mov ecx, eax
 8093b84:  mov eax, DWORD PTR [ebp+0x14]
 8093b87:  cmp WORD PTR [eax], 0x0
 8093b8b:  js 8093bb4
 8093b8d:  mov edx, DWORD PTR [eax+0x48]
 8093b90:  mov eax, DWORD PTR [edx+0x4]
 8093b93:  sub eax, 0x1
 8093b96:  test eax, eax
 8093b98:  mov DWORD PTR [edx+0x4], eax
 8093b9b:  jne 8093bb4
 8093b9d:  mov DWORD PTR [edx+0x8], 0x0
 8093ba4:  cmp DWORD PTR gs:0xc, 0x0
 8093bac:  je 8093baf
 8093bae:  sub DWORD PTR [edx], 0x1
 8093bb2:  jne 8093bd4
 8093bb4:  mov DWORD PTR [esp], ecx
 8093bb7:  call 80abe50

08093bbc <_L_lock_52>:
 8093bbc:  lea ecx, [esi]
 8093bbe:  call 8050230
 8093bc3:  jmp 8093995

08093bc8 <_L_unlock_241>:
 8093bc8:  lea eax, [edx]
 8093bca:  call 8050260
 8093bcf:  jmp 8093b05

08093bd4 <_L_unlock_361>:
 8093bd4:  lea eax, [edx]
 8093bd6:  call 8050260
 8093bdb:  jmp 8093bb4
 8093bdd:  nop
 8093bde:  nop
 8093bdf:  nop

08093be0 <_IO_getline_info>:
 8093be0:  push ebp
 8093be1:  mov ebp, esp
 8093be3:  push edi
 8093be4:  push esi
 8093be5:  push ebx
 8093be6:  sub esp, 0x14
 8093be9:  mov esi, DWORD PTR [ebp+0x1c]
 8093bec:  mov edi, DWORD PTR [ebp+0x10]
 8093bef:  test esi, esi
 8093bf1:  je 8093bfc
 8093bf3:  mov eax, DWORD PTR [ebp+0x1c]
 8093bf6:  mov DWORD PTR [eax], 0x0
 8093bfc:  mov edx, DWORD PTR [ebp+0x8]
 8093bff:  mov ebx, DWORD PTR [edx+0x68]
 8093c02:  test ebx, ebx
 8093c04:  je 8093d35
 8093c0a:  mov eax, DWORD PTR [ebp+0xc]
 8093c0d:  mov DWORD PTR [ebp-0x14], eax
 8093c10:  jmp 8093c56
 8093c12:  lea esi, [esi]
 8093c18:  cmp ebx, edi
 8093c1a:  jb 8093c1e
 8093c1c:  mov ebx, edi
 8093c1e:  mov DWORD PTR [esp+0x8], ebx
 8093c22:  mov eax, DWORD PTR [ebp+0x14]
 8093c25:  mov DWORD PTR [esp], esi
 8093c28:  mov DWORD PTR [esp+0x4], eax
 8093c2c:  call 806c0c0
 8093c31:  test eax, eax
 8093c33:  mov DWORD PTR [ebp-0x10], eax
 8093c36:  jne 8093ca8
 8093c38:  mov DWORD PTR [esp+0x8], ebx
 8093c3c:  sub edi, ebx
 8093c3e:  mov DWORD PTR [esp+0x4], esi
 8093c42:  mov edx, DWORD PTR [ebp-0x14]
 8093c45:  mov DWORD PTR [esp], edx
 8093c48:  call 804efc0
 8093c4d:  mov eax, DWORD PTR [ebp+0x8]
 8093c50:  add DWORD PTR [ebp-0x14], ebx
 8093c53:  add DWORD PTR [eax+0x4], ebx
 8093c56:  test edi, edi
 8093c58:  je 8093c98
 8093c5a:  mov edx, DWORD PTR [ebp+0x8]
 8093c5d:  mov esi, DWORD PTR [edx+0x4]
 8093c60:  mov ebx, DWORD PTR [edx+0x8]
 8093c63:  sub ebx, esi
 8093c65:  test ebx, ebx
 8093c67:  jg 8093c18
 8093c69:  mov DWORD PTR [esp], edx
 8093c6c:  call 8068f50
 8093c71:  cmp eax, 0xff
 8093c74:  je 8093cef
 8093c76:  cmp eax, DWORD PTR [ebp+0x14]
 8093c79:  lea esi, [esi]
 8093c80:  je 8093d01
 8093c82:  mov edx, DWORD PTR [ebp-0x14]
 8093c85:  sub edi, 0x1
 8093c88:  mov BYTE PTR [edx], al
 8093c8a:  add edx, 0x1
 8093c8d:  test edi, edi
 8093c8f:  mov DWORD PTR [ebp-0x14], edx
 8093c92:  jne 8093c5a
 8093c94:  lea esi, [esi]
 8093c98:  mov eax, DWORD PTR [ebp-0x14]
 8093c9b:  sub eax, DWORD PTR [ebp+0xc]
 8093c9e:  add esp, 0x14
 8093ca1:  pop ebx
 8093ca2:  pop esi
 8093ca3:  pop edi
 8093ca4:  pop ebp
 8093ca5:  ret
 8093ca6:  xchg ax, ax
 8093ca8:  mov edx, DWORD PTR [ebp+0x18]
 8093cab:  mov ebx, eax
 8093cad:  sub ebx, esi
 8093caf:  test edx, edx
 8093cb1:  js 8093cc0
 8093cb3:  add eax, 0x1
 8093cb6:  cmp DWORD PTR [ebp+0x18], 0x1
 8093cba:  mov DWORD PTR [ebp-0x10], eax
 8093cbd:  sbb ebx, 0xff
 8093cc0:  mov DWORD PTR [esp+0x8], ebx
 8093cc4:  mov DWORD PTR [esp+0x4], esi
 8093cc8:  mov edx, DWORD PTR [ebp-0x14]
 8093ccb:  mov DWORD PTR [esp], edx
 8093cce:  call 804efc0
 8093cd3:  mov eax, DWORD PTR [ebp+0x8]
 8093cd6:  mov edx, DWORD PTR [ebp-0x10]
 8093cd9:  mov DWORD PTR [eax+0x4], edx
 8093cdc:  mov eax, DWORD PTR [ebp+0xc]
 8093cdf:  sub DWORD PTR [ebp-0x14], eax
 8093ce2:  mov eax, DWORD PTR [ebp-0x14]
 8093ce5:  add esp, 0x14
 8093ce8:  add eax, ebx
 8093cea:  pop ebx
 8093ceb:  pop esi
 8093cec:  pop edi
 8093ced:  pop ebp
 8093cee:  ret
 8093cef:  mov ecx, DWORD PTR [ebp+0x1c]
 8093cf2:  test ecx, ecx
 8093cf4:  je 8093c98
 8093cf6:  mov eax, DWORD PTR [ebp+0x1c]
 8093cf9:  mov DWORD PTR [eax], 0xffffffff
 8093cff:  jmp 8093c98
 8093d01:  cmp DWORD PTR [ebp+0x18], 0x0
 8093d05:  jle 8093d18
 8093d07:  mov eax, DWORD PTR [ebp-0x14]
 8093d0a:  movzx edx, BYTE PTR [ebp+0x14]
 8093d0e:  mov BYTE PTR [eax], dl
 8093d10:  add eax, 0x1
 8093d13:  mov DWORD PTR [ebp-0x14], eax
 8093d16:  jmp 8093c98
 8093d18:  je 8093c98
 8093d1e:  mov edx, DWORD PTR [ebp+0x14]
 8093d21:  mov DWORD PTR [esp+0x4], edx
 8093d25:  mov eax, DWORD PTR [ebp+0x8]
 8093d28:  mov DWORD PTR [esp], eax
 8093d2b:  call 8068600
 8093d30:  jmp 8093c98
 8093d35:  mov DWORD PTR [edx+0x68], 0xffffffff
 8093d3c:  jmp 8093c0a
 8093d41:  jmp 8093d50
 8093d43:  nop
 8093d44:  nop
 8093d45:  nop
 8093d46:  nop
 8093d47:  nop
 8093d48:  nop
 8093d49:  nop
 8093d4a:  nop
 8093d4b:  nop
 8093d4c:  nop
 8093d4d:  nop
 8093d4e:  nop
 8093d4f:  nop

08093d50 <_IO_getline>:
 8093d50:  push ebp
 8093d51:  mov ebp, esp
 8093d53:  sub esp, 0x18
 8093d56:  mov eax, DWORD PTR [ebp+0x18]
 8093d59:  mov DWORD PTR [esp+0x14], 0x0
 8093d61:  mov DWORD PTR [esp+0x10], eax
 8093d65:  mov eax, DWORD PTR [ebp+0x14]
 8093d68:  mov DWORD PTR [esp+0xc], eax
 8093d6c:  mov eax, DWORD PTR [ebp+0x10]
 8093d6f:  mov DWORD PTR [esp+0x8], eax
 8093d73:  mov eax, DWORD PTR [ebp+0xc]
 8093d76:  mov DWORD PTR [esp+0x4], eax
 8093d7a:  mov eax, DWORD PTR [ebp+0x8]
 8093d7d:  mov DWORD PTR [esp], eax
 8093d80:  call 8093be0
 8093d85:  leave
 8093d86:  ret
 8093d87:  nop
 8093d88:  nop
 8093d89:  nop
 8093d8a:  nop
 8093d8b:  nop
 8093d8c:  nop
 8093d8d:  nop
 8093d8e:  nop
 8093d8f:  nop

08093d90 <_IO_vsscanf>:
 8093d90:  push ebp
 8093d91:  mov ebp, esp
 8093d93:  push ebx
 8093d94:  sub esp, 0xb4
 8093d9a:  lea ebx, [ebp-0xa4]
 8093da0:  mov DWORD PTR [esp], ebx
 8093da3:  mov DWORD PTR [ebp-0x5c], 0x0
 8093daa:  mov DWORD PTR [esp+0x10], 0x0
 8093db2:  mov DWORD PTR [esp+0xc], 0x0
 8093dba:  mov DWORD PTR [esp+0x8], 0xffffffff
 8093dc2:  mov DWORD PTR [esp+0x4], 0x8000
 8093dca:  call 8069b90
 8093dcf:  mov eax, DWORD PTR [ebp+0x8]
 8093dd2:  mov DWORD PTR [esp], ebx
 8093dd5:  mov DWORD PTR [ebp-0x10], 0x80b1c40
 8093ddc:  mov DWORD PTR [esp+0xc], 0x0
 8093de4:  mov DWORD PTR [esp+0x4], eax
 8093de8:  mov DWORD PTR [esp+0x8], 0x0
 8093df0:  call 806ac50
 8093df5:  mov eax, DWORD PTR [ebp+0x10]
 8093df8:  mov DWORD PTR [esp], ebx
 8093dfb:  mov DWORD PTR [esp+0xc], 0x0
 8093e03:  mov DWORD PTR [esp+0x8], eax
 8093e07:  mov eax, DWORD PTR [ebp+0xc]
 8093e0a:  mov DWORD PTR [esp+0x4], eax
 8093e0e:  call 8099310
 8093e13:  add esp, 0xb4
 8093e19:  pop ebx
 8093e1a:  pop ebp
 8093e1b:  ret
 8093e1c:  nop
 8093e1d:  nop
 8093e1e:  nop
 8093e1f:  nop

08093e20 <fileno>:
 8093e20:  push ebp
 8093e21:  mov ebp, esp
 8093e23:  mov edx, DWORD PTR [ebp+0x8]
 8093e26:  mov eax, DWORD PTR [edx]
 8093e28:  test ah, 0x20
 8093e2b:  je 8093e38
 8093e2d:  mov eax, DWORD PTR [edx+0x38]
 8093e30:  test eax, eax
 8093e32:  js 8093e38
 8093e34:  pop ebp
 8093e35:  ret
 8093e36:  xchg ax, ax
 8093e38:  mov eax, gs:0x0
 8093e3e:  mov edx, 0xffffffe8
 8093e44:  mov DWORD PTR [eax+edx], 0x9
 8093e4b:  mov eax, 0xffffffff
 8093e50:  pop ebp
 8093e51:  ret
 8093e52:  nop
 8093e53:  nop
 8093e54:  nop
 8093e55:  nop
 8093e56:  nop
 8093e57:  nop
 8093e58:  nop
 8093e59:  nop
 8093e5a:  nop
 8093e5b:  nop
 8093e5c:  nop
 8093e5d:  nop
 8093e5e:  nop
 8093e5f:  nop

08093e60 <fseek>:
 8093e60:  push ebp
 8093e61:  mov ebp, esp
 8093e63:  sub esp, 0x20
 8093e66:  mov DWORD PTR [ebp-0xc], ebx
 8093e69:  mov ebx, DWORD PTR [ebp+0x8]
 8093e6c:  mov DWORD PTR [ebp-0x8], esi
 8093e6f:  mov DWORD PTR [ebp-0x4], edi
 8093e72:  cmp WORD PTR [ebx], 0x0
 8093e76:  js 8093eb0
 8093e78:  mov edi, DWORD PTR [ebx+0x48]
 8093e7b:  mov esi, DWORD PTR gs:0x8
 8093e82:  cmp DWORD PTR [edi+0x8], esi
 8093e85:  je 8093eac
 8093e87:  xor edx, edx
 8093e89:  mov ecx, 0x1
 8093e8e:  mov eax, edx
 8093e90:  cmp DWORD PTR gs:0xc, 0x0
 8093e98:  je 8093e9b
 8093e9a:  cmpxchg DWORD PTR [edi], ecx
 8093e9e:  jne 8093f56
 8093ea4:  mov eax, DWORD PTR [ebx+0x48]
 8093ea7:  mov DWORD PTR [eax+0x8], esi
 8093eaa:  mov edi, eax
 8093eac:  add DWORD PTR [edi+0x4], 0x1
 8093eb0:  mov eax, DWORD PTR [ebp+0x10]
 8093eb3:  mov DWORD PTR [esp+0x10], 0x3
 8093ebb:  mov DWORD PTR [esp], ebx
 8093ebe:  mov DWORD PTR [esp+0xc], eax
 8093ec2:  mov eax, DWORD PTR [ebp+0xc]
 8093ec5:  mov edx, eax
 8093ec7:  sar edx, 0x1f
 8093eca:  mov DWORD PTR [esp+0x4], eax
 8093ece:  mov DWORD PTR [esp+0x8], edx
 8093ed2:  call 8062950
 8093ed7:  and eax, edx
 8093ed9:  not eax
 8093edb:  cmp eax, 0x1
 8093ede:  sbb ecx, ecx
 8093ee0:  cmp WORD PTR [ebx], 0x0
 8093ee4:  js 8093f10
 8093ee6:  mov edx, DWORD PTR [ebx+0x48]
 8093ee9:  mov eax, DWORD PTR [edx+0x4]
 8093eec:  sub eax, 0x1
 8093eef:  test eax, eax
 8093ef1:  mov DWORD PTR [edx+0x4], eax
 8093ef4:  jne 8093f10
 8093ef6:  mov DWORD PTR [edx+0x8], 0x0
 8093efd:  cmp DWORD PTR gs:0xc, 0x0
 8093f05:  je 8093f08
 8093f07:  sub DWORD PTR [edx], 0x1
 8093f0b:  jne 8093f62
 8093f0d:  lea esi, [esi]
 8093f10:  mov ebx, DWORD PTR [ebp-0xc]
 8093f13:  mov eax, ecx
 8093f15:  mov esi, DWORD PTR [ebp-0x8]
 8093f18:  mov edi, DWORD PTR [ebp-0x4]
 8093f1b:  mov esp, ebp
 8093f1d:  pop ebp
 8093f1e:  ret
 8093f1f:  cmp WORD PTR [ebx], 0x0
 8093f23:  mov ecx, eax
 8093f25:  js 8093f4e
 8093f27:  mov edx, DWORD PTR [ebx+0x48]
 8093f2a:  mov eax, DWORD PTR [edx+0x4]
 8093f2d:  sub eax, 0x1
 8093f30:  test eax, eax
 8093f32:  mov DWORD PTR [edx+0x4], eax
 8093f35:  jne 8093f4e
 8093f37:  mov DWORD PTR [edx+0x8], 0x0
 8093f3e:  cmp DWORD PTR gs:0xc, 0x0
 8093f46:  je 8093f49
 8093f48:  sub DWORD PTR [edx], 0x1
 8093f4c:  jne 8093f6b
 8093f4e:  mov DWORD PTR [esp], ecx
 8093f51:  call 80abe50

08093f56 <_L_lock_37>:
 8093f56:  lea ecx, [edi]
 8093f58:  call 8050230
 8093f5d:  jmp 8093ea4

08093f62 <_L_unlock_88>:
 8093f62:  lea eax, [edx]
 8093f64:  call 8050260
 8093f69:  jmp 8093f0d

08093f6b <_L_unlock_133>:
 8093f6b:  lea eax, [edx]
 8093f6d:  call 8050260
 8093f72:  jmp 8093f4e
 8093f74:  nop
 8093f75:  nop
 8093f76:  nop
 8093f77:  nop
 8093f78:  nop
 8093f79:  nop
 8093f7a:  nop
 8093f7b:  nop
 8093f7c:  nop
 8093f7d:  nop
 8093f7e:  nop
 8093f7f:  nop

08093f80 <ftello>:
 8093f80:  push ebp
 8093f81:  mov ebp, esp
 8093f83:  sub esp, 0x24
 8093f86:  mov eax, DWORD PTR [ebp+0x8]
 8093f89:  mov DWORD PTR [ebp-0xc], ebx
 8093f8c:  mov DWORD PTR [ebp-0x8], esi
 8093f8f:  mov DWORD PTR [ebp-0x4], edi
 8093f92:  cmp WORD PTR [eax], 0x0
 8093f96:  js 8093fd4
 8093f98:  mov esi, DWORD PTR [eax+0x48]
 8093f9b:  mov ebx, DWORD PTR gs:0x8
 8093fa2:  cmp DWORD PTR [esi+0x8], ebx
 8093fa5:  je 8093fcd
 8093fa7:  xor edx, edx
 8093fa9:  mov ecx, 0x1
 8093fae:  mov eax, edx
 8093fb0:  cmp DWORD PTR gs:0xc, 0x0
 8093fb8:  je 8093fbb
 8093fba:  cmpxchg DWORD PTR [esi], ecx
 8093fbe:  jne 809412f
 8093fc4:  mov edx, DWORD PTR [ebp+0x8]
 8093fc7:  mov esi, DWORD PTR [edx+0x48]
 8093fca:  mov DWORD PTR [esi+0x8], ebx
 8093fcd:  add DWORD PTR [esi+0x4], 0x1
 8093fd1:  mov eax, DWORD PTR [ebp+0x8]
 8093fd4:  mov DWORD PTR [esp+0x10], 0x0
 8093fdc:  mov DWORD PTR [esp+0xc], 0x1
 8093fe4:  mov DWORD PTR [esp+0x4], 0x0
 8093fec:  mov DWORD PTR [esp+0x8], 0x0
 8093ff4:  mov DWORD PTR [esp], eax
 8093ff7:  call 8062950
 8093ffc:  mov esi, edx
 8093ffe:  mov edx, DWORD PTR [ebp+0x8]
 8094001:  mov ebx, eax
 8094003:  mov edx, DWORD PTR [edx]
 8094005:  mov DWORD PTR [ebp-0x10], edx
 8094008:  and dh, 0x1
 809400b:  je 8094079
 809400d:  mov edi, esi
 809400f:  mov ecx, ebx
 8094011:  not edi
 8094013:  not ecx
 8094015:  mov eax, edi
 8094017:  or eax, ecx
 8094019:  jne 8094060
 809401b:  cmp WORD PTR [ebp-0x10], 0x0
 8094020:  js 8094035
 8094022:  mov eax, DWORD PTR [ebp+0x8]
 8094025:  mov edx, DWORD PTR [eax+0x48]
 8094028:  mov eax, DWORD PTR [edx+0x4]
 809402b:  sub eax, 0x1
 809402e:  test eax, eax
 8094030:  mov DWORD PTR [edx+0x4], eax
 8094033:  je 8094088
 8094035:  or edi, ecx
 8094037:  je 80940c8
 809403d:  mov edx, ebx
 809403f:  mov eax, ebx
 8094041:  sar edx, 0x1f
 8094044:  xor eax, ebx
 8094046:  mov ecx, edx
 8094048:  mov edi, ebx
 809404a:  xor ecx, esi
 809404c:  or ecx, eax
 809404e:  jne 80940a8
 8094050:  mov eax, edi
 8094052:  mov ebx, DWORD PTR [ebp-0xc]
 8094055:  mov esi, DWORD PTR [ebp-0x8]
 8094058:  mov edi, DWORD PTR [ebp-0x4]
 809405b:  mov esp, ebp
 809405d:  pop ebp
 809405e:  ret
 809405f:  nop
 8094060:  mov edx, DWORD PTR [ebp+0x8]
 8094063:  mov eax, DWORD PTR [edx+0x68]
 8094066:  test eax, eax
 8094068:  jg 809401b
 809406a:  mov eax, DWORD PTR [edx+0x2c]
 809406d:  sub eax, DWORD PTR [edx+0x24]
 8094070:  mov edx, eax
 8094072:  sar edx, 0x1f
 8094075:  sub ebx, eax
 8094077:  sbb esi, edx
 8094079:  mov edi, esi
 809407b:  mov ecx, ebx
 809407d:  not edi
 809407f:  not ecx
 8094081:  jmp 809401b
 8094083:  nop
 8094084:  lea esi, [esi]
 8094088:  mov DWORD PTR [edx+0x8], 0x0
 809408f:  cmp DWORD PTR gs:0xc, 0x0
 8094097:  je 809409a
 8094099:  sub DWORD PTR [edx], 0x1
 809409d:  jne 809413b
 80940a3:  jmp 8094035
 80940a5:  lea esi, [esi]
 80940a8:  mov edx, 0xffffffe8
 80940ae:  mov edi, 0xffffffff
 80940b3:  mov eax, gs:0x0
 80940b9:  mov DWORD PTR [eax+edx], 0x4b
 80940c0:  jmp 8094050
 80940c2:  lea esi, [esi]
 80940c8:  mov edx, DWORD PTR gs:0x0
 80940cf:  mov edi, 0xffffffff
 80940d4:  mov eax, 0xffffffe8
 80940d9:  mov ecx, DWORD PTR [edx+eax]
 80940dc:  test ecx, ecx
 80940de:  jne 8094050
 80940e4:  mov DWORD PTR [edx+eax], 0x5
 80940eb:  mov edi, 0xffffffff
 80940f0:  jmp 8094050
 80940f5:  mov ecx, eax
 80940f7:  mov eax, DWORD PTR [ebp+0x8]
 80940fa:  cmp WORD PTR [eax], 0x0
 80940fe:  js 8094127
 8094100:  mov edx, DWORD PTR [eax+0x48]
 8094103:  mov eax, DWORD PTR [edx+0x4]
 8094106:  sub eax, 0x1
 8094109:  test eax, eax
 809410b:  mov DWORD PTR [edx+0x4], eax
 809410e:  jne 8094127
 8094110:  mov DWORD PTR [edx+0x8], 0x0
 8094117:  cmp DWORD PTR gs:0xc, 0x0
 809411f:  je 8094122
 8094121:  sub DWORD PTR [edx], 0x1
 8094125:  jne 8094147
 8094127:  mov DWORD PTR [esp], ecx
 809412a:  call 80abe50

0809412f <_L_lock_38>:
 809412f:  lea ecx, [esi]
 8094131:  call 8050230
 8094136:  jmp 8093fc4

0809413b <_L_unlock_170>:
 809413b:  lea eax, [edx]
 809413d:  call 8050260
 8094142:  jmp 80940a3

08094147 <_L_unlock_227>:
 8094147:  lea eax, [edx]
 8094149:  call 8050260
 809414e:  jmp 8094127

08094150 <fread_unlocked>:
 8094150:  push ebp
 8094151:  mov ebp, esp
 8094153:  sub esp, 0x14
 8094156:  mov DWORD PTR [ebp-0x8], ebx
 8094159:  mov ebx, DWORD PTR [ebp+0xc]
 809415c:  mov DWORD PTR [ebp-0x4], esi
 809415f:  mov esi, DWORD PTR [ebp+0x10]
 8094162:  imul ebx, esi
 8094165:  test ebx, ebx
 8094167:  jne 8094178
 8094169:  xor esi, esi
 809416b:  mov eax, esi
 809416d:  mov ebx, DWORD PTR [ebp-0x8]
 8094170:  mov esi, DWORD PTR [ebp-0x4]
 8094173:  mov esp, ebp
 8094175:  pop ebp
 8094176:  ret
 8094177:  nop
 8094178:  mov DWORD PTR [esp+0x8], ebx
 809417c:  mov eax, DWORD PTR [ebp+0x8]
 809417f:  mov DWORD PTR [esp+0x4], eax
 8094183:  mov eax, DWORD PTR [ebp+0x14]
 8094186:  mov DWORD PTR [esp], eax
 8094189:  call 80684e0
 809418e:  cmp ebx, eax
 8094190:  je 809416b
 8094192:  xor edx, edx
 8094194:  mov ebx, DWORD PTR [ebp-0x8]
 8094197:  div DWORD PTR [ebp+0xc]
 809419a:  mov esi, eax
 809419c:  mov eax, esi
 809419e:  mov esi, DWORD PTR [ebp-0x4]
 80941a1:  mov esp, ebp
 80941a3:  pop ebp
 80941a4:  ret
 80941a5:  nop
 80941a6:  nop
 80941a7:  nop
 80941a8:  nop
 80941a9:  nop
 80941aa:  nop
 80941ab:  nop
 80941ac:  nop
 80941ad:  nop
 80941ae:  nop
 80941af:  nop

080941b0 <__strndup>:
 80941b0:  push ebp
 80941b1:  mov ebp, esp
 80941b3:  sub esp, 0x14
 80941b6:  mov DWORD PTR [ebp-0x4], esi
 80941b9:  mov eax, DWORD PTR [ebp+0xc]
 80941bc:  mov esi, DWORD PTR [ebp+0x8]
 80941bf:  mov DWORD PTR [ebp-0x8], ebx
 80941c2:  mov DWORD PTR [esp+0x4], eax
 80941c6:  mov DWORD PTR [esp], esi
 80941c9:  call 806b180
 80941ce:  mov ebx, eax
 80941d0:  lea eax, [eax+0x1]
 80941d3:  mov DWORD PTR [esp], eax
 80941d6:  call 804d6f0
 80941db:  xor edx, edx
 80941dd:  test eax, eax
 80941df:  je 80941f7
 80941e1:  mov BYTE PTR [eax+ebx], 0x0
 80941e5:  mov DWORD PTR [esp+0x8], ebx
 80941e9:  mov DWORD PTR [esp+0x4], esi
 80941ed:  mov DWORD PTR [esp], eax
 80941f0:  call 804efc0
 80941f5:  mov edx, eax
 80941f7:  mov ebx, DWORD PTR [ebp-0x8]
 80941fa:  mov eax, edx
 80941fc:  mov esi, DWORD PTR [ebp-0x4]
 80941ff:  mov esp, ebp
 8094201:  pop ebp
 8094202:  ret
 8094203:  nop
 8094204:  nop
 8094205:  nop
 8094206:  nop
 8094207:  nop
 8094208:  nop
 8094209:  nop
 809420a:  nop
 809420b:  nop
 809420c:  nop
 809420d:  nop
 809420e:  nop
 809420f:  nop

08094210 <__strcasecmp_l>:
 8094210:  push ebp
 8094211:  xor eax, eax
 8094213:  mov ebp, esp
 8094215:  push edi
 8094216:  mov edi, DWORD PTR [ebp+0xc]
 8094219:  cmp DWORD PTR [ebp+0x8], edi
 809421c:  push esi
 809421d:  push ebx
 809421e:  je 8094249
 8094220:  mov eax, DWORD PTR [ebp+0x10]
 8094223:  xor ecx, ecx
 8094225:  mov ebx, DWORD PTR [eax+0x38]
 8094228:  mov eax, DWORD PTR [ebp+0x8]
 809422b:  movzx esi, BYTE PTR [eax+ecx]
 809422f:  mov edx, esi
 8094231:  movzx eax, dl
 8094234:  movzx edx, BYTE PTR [edi+ecx]
 8094238:  mov eax, DWORD PTR [ebx+eax*4]
 809423b:  sub eax, DWORD PTR [ebx+edx*4]
 809423e:  jne 8094249
 8094240:  mov edx, esi
 8094242:  add ecx, 0x1
 8094245:  test dl, dl
 8094247:  jne 8094228
 8094249:  pop ebx
 809424a:  pop esi
 809424b:  pop edi
 809424c:  pop ebp
 809424d:  ret
 809424e:  nop
 809424f:  nop

08094250 <__strsep>:
 8094250:  push ebp
 8094251:  mov ebp, esp
 8094253:  sub esp, 0x10
 8094256:  mov DWORD PTR [ebp-0x4], esi
 8094259:  mov esi, DWORD PTR [ebp+0x8]
 809425c:  mov DWORD PTR [ebp-0x8], ebx
 809425f:  mov eax, DWORD PTR [ebp+0xc]
 8094262:  mov ebx, DWORD PTR [esi]
 8094264:  test ebx, ebx
 8094266:  je 8094288
 8094268:  movzx edx, BYTE PTR [eax]
 809426b:  test dl, dl
 809426d:  je 8094282
 809426f:  cmp BYTE PTR [eax+0x1], 0x0
 8094273:  jne 80942c8
 8094275:  movzx ecx, BYTE PTR [ebx]
 8094278:  mov eax, ebx
 809427a:  cmp dl, cl
 809427c:  je 80942ae
 809427e:  test cl, cl
 8094280:  jne 8094298
 8094282:  mov DWORD PTR [esi], 0x0
 8094288:  mov eax, ebx
 809428a:  mov esi, DWORD PTR [ebp-0x4]
 809428d:  mov ebx, DWORD PTR [ebp-0x8]
 8094290:  mov esp, ebp
 8094292:  pop ebp
 8094293:  ret
 8094294:  lea esi, [esi]
 8094298:  movsx eax, dl
 809429b:  mov DWORD PTR [esp+0x4], eax
 809429f:  lea eax, [ebx+0x1]
 80942a2:  mov DWORD PTR [esp], eax
 80942a5:  call 806ae20
 80942aa:  test eax, eax
 80942ac:  je 8094282
 80942ae:  mov BYTE PTR [eax], 0x0
 80942b1:  add eax, 0x1
 80942b4:  mov DWORD PTR [esi], eax
 80942b6:  mov eax, ebx
 80942b8:  mov esi, DWORD PTR [ebp-0x4]
 80942bb:  mov ebx, DWORD PTR [ebp-0x8]
 80942be:  mov esp, ebp
 80942c0:  pop ebp
 80942c1:  ret
 80942c2:  lea esi, [esi]
 80942c8:  mov DWORD PTR [esp+0x4], eax
 80942cc:  mov DWORD PTR [esp], ebx
 80942cf:  call 80a0710
 80942d4:  jmp 80942aa
 80942d6:  nop
 80942d7:  nop
 80942d8:  nop
 80942d9:  nop
 80942da:  nop
 80942db:  nop
 80942dc:  nop
 80942dd:  nop
 80942de:  nop
 80942df:  nop

080942e0 <__argz_create_sep>:
 80942e0:  push ebp
 80942e1:  mov ebp, esp
 80942e3:  push edi
 80942e4:  push esi
 80942e5:  push ebx
 80942e6:  sub esp, 0x4
 80942e9:  mov ebx, DWORD PTR [ebp+0x8]
 80942ec:  mov edi, DWORD PTR [ebp+0x10]
 80942ef:  mov DWORD PTR [esp], ebx
 80942f2:  call 804eea0
 80942f7:  lea esi, [eax+0x1]
 80942fa:  cmp esi, 0x1
 80942fd:  jbe 8094398
 8094303:  mov DWORD PTR [esp], esi
 8094306:  call 804d6f0
 809430b:  mov ecx, eax
 809430d:  test ecx, ecx
 809430f:  mov DWORD PTR [edi], eax
 8094311:  mov eax, 0xc
 8094316:  jne 809432c
 8094318:  jmp 8094359
 809431a:  lea esi, [esi]
 8094320:  mov BYTE PTR [ecx], dl
 8094322:  add ecx, 0x1
 8094325:  test dl, dl
 8094327:  je 809434a
 8094329:  add ebx, 0x1
 809432c:  movzx edx, BYTE PTR [ebx]
 809432f:  movsx eax, dl
 8094332:  cmp eax, DWORD PTR [ebp+0xc]
 8094335:  jne 8094320
 8094337:  cmp ecx, DWORD PTR [edi]
 8094339:  jbe 8094341
 809433b:  cmp BYTE PTR [ecx-0x1], 0x0
 809433f:  jne 8094368
 8094341:  sub esi, 0x1
 8094344:  test dl, dl
 8094346:  xchg ax, ax
 8094348:  jne 8094329
 809434a:  test esi, esi
 809434c:  lea esi, [esi]
 8094350:  je 8094370
 8094352:  mov eax, DWORD PTR [ebp+0x14]
 8094355:  mov DWORD PTR [eax], esi
 8094357:  xor eax, eax
 8094359:  add esp, 0x4
 809435c:  pop ebx
 809435d:  pop esi
 809435e:  pop edi
 809435f:  pop ebp
 8094360:  ret
 8094361:  lea esi, [esi]
 8094368:  mov BYTE PTR [ecx], 0x0
 809436b:  add ecx, 0x1
 809436e:  jmp 8094325
 8094370:  mov eax, DWORD PTR [edi]
 8094372:  mov DWORD PTR [esp], eax
 8094375:  call 804b4a0
 809437a:  mov eax, DWORD PTR [ebp+0x14]
 809437d:  mov DWORD PTR [edi], 0x0
 8094383:  mov DWORD PTR [eax], 0x0
 8094389:  mov eax, DWORD PTR [ebp+0x14]
 809438c:  mov DWORD PTR [eax], esi
 809438e:  xor eax, eax
 8094390:  jmp 8094359
 8094392:  lea esi, [esi]
 8094398:  mov eax, DWORD PTR [ebp+0x14]
 809439b:  mov DWORD PTR [edi], 0x0
 80943a1:  mov DWORD PTR [eax], 0x0
 80943a7:  add esp, 0x4
 80943aa:  xor eax, eax
 80943ac:  pop ebx
 80943ad:  pop esi
 80943ae:  pop edi
 80943af:  pop ebp
 80943b0:  ret
 80943b1:  nop
 80943b2:  nop
 80943b3:  nop
 80943b4:  nop
 80943b5:  nop
 80943b6:  nop
 80943b7:  nop
 80943b8:  nop
 80943b9:  nop
 80943ba:  nop
 80943bb:  nop
 80943bc:  nop
 80943bd:  nop
 80943be:  nop
 80943bf:  nop

080943c0 <__argz_add_sep>:
 80943c0:  push ebp
 80943c1:  mov ebp, esp
 80943c3:  push edi
 80943c4:  push esi
 80943c5:  push ebx
 80943c6:  sub esp, 0x8
 80943c9:  mov ebx, DWORD PTR [ebp+0x10]
 80943cc:  mov edi, DWORD PTR [ebp+0x8]
 80943cf:  mov DWORD PTR [esp], ebx
 80943d2:  call 804eea0
 80943d7:  xor edx, edx
 80943d9:  lea esi, [eax+0x1]
 80943dc:  cmp esi, 0x1
 80943df:  jbe 8094449
 80943e1:  mov edx, DWORD PTR [ebp+0xc]
 80943e4:  mov eax, esi
 80943e6:  add eax, DWORD PTR [edx]
 80943e8:  mov DWORD PTR [esp+0x4], eax
 80943ec:  mov eax, DWORD PTR [edi]
 80943ee:  mov DWORD PTR [esp], eax
 80943f1:  call 804db10
 80943f6:  mov edx, 0xc
 80943fb:  test eax, eax
 80943fd:  mov DWORD PTR [edi], eax
 80943ff:  je 8094449
 8094401:  mov edx, DWORD PTR [ebp+0xc]
 8094404:  mov ecx, eax
 8094406:  add ecx, DWORD PTR [edx]
 8094408:  jmp 809441f
 809440a:  lea esi, [esi]
 8094410:  mov BYTE PTR [ecx], dl
 8094412:  movzx edx, BYTE PTR [ebx]
 8094415:  add ecx, 0x1
 8094418:  test dl, dl
 809441a:  je 8094442
 809441c:  add ebx, 0x1
 809441f:  movzx edx, BYTE PTR [ebx]
 8094422:  movsx eax, dl
 8094425:  cmp eax, DWORD PTR [ebp+0x14]
 8094428:  jne 8094410
 809442a:  cmp ecx, DWORD PTR [edi]
 809442c:  jbe 8094434
 809442e:  cmp BYTE PTR [ecx-0x1], 0x0
 8094432:  jne 8094458
 8094434:  sub esi, 0x1
 8094437:  test dl, dl
 8094439:  lea esi, [esi]
 8094440:  jne 809441c
 8094442:  mov eax, DWORD PTR [ebp+0xc]
 8094445:  xor edx, edx
 8094447:  add DWORD PTR [eax], esi
 8094449:  add esp, 0x8
 809444c:  mov eax, edx
 809444e:  pop ebx
 809444f:  pop esi
 8094450:  pop edi
 8094451:  pop ebp
 8094452:  ret
 8094453:  nop
 8094454:  lea esi, [esi]
 8094458:  mov BYTE PTR [ecx], 0x0
 809445b:  add ecx, 0x1
 809445e:  movzx edx, BYTE PTR [ebx]
 8094461:  jmp 8094418
 8094463:  nop
 8094464:  nop
 8094465:  nop
 8094466:  nop
 8094467:  nop
 8094468:  nop
 8094469:  nop
 809446a:  nop
 809446b:  nop
 809446c:  nop
 809446d:  nop
 809446e:  nop
 809446f:  nop

08094470 <wcschr>:
 8094470:  push ebp
 8094471:  mov ebp, esp
 8094473:  mov eax, DWORD PTR [ebp+0x8]
 8094476:  mov ecx, DWORD PTR [ebp+0xc]
 8094479:  jmp 8094483
 809447b:  nop
 809447c:  lea esi, [esi]
 8094480:  add eax, 0x4
 8094483:  mov edx, DWORD PTR [eax]
 8094485:  cmp edx, ecx
 8094487:  je 809448f
 8094489:  test edx, edx
 809448b:  jne 8094480
 809448d:  xor eax, eax
 809448f:  pop ebp
 8094490:  ret
 8094491:  nop
 8094492:  nop
 8094493:  nop
 8094494:  nop
 8094495:  nop
 8094496:  nop
 8094497:  nop
 8094498:  nop
 8094499:  nop
 809449a:  nop
 809449b:  nop
 809449c:  nop
 809449d:  nop
 809449e:  nop
 809449f:  nop

080944a0 <__wcslen>:
 80944a0:  push ebp
 80944a1:  xor edx, edx
 80944a3:  mov ebp, esp
 80944a5:  mov ecx, DWORD PTR [ebp+0x8]
 80944a8:  mov eax, DWORD PTR [ecx]
 80944aa:  test eax, eax
 80944ac:  je 8094502
 80944ae:  mov eax, DWORD PTR [ecx+0x4]
 80944b1:  mov edx, 0x1
 80944b6:  test eax, eax
 80944b8:  je 8094502
 80944ba:  mov eax, DWORD PTR [ecx+0x8]
 80944bd:  mov edx, 0x2
 80944c2:  test eax, eax
 80944c4:  je 8094502
 80944c6:  cmp DWORD PTR [ecx+0xc], 0x0
 80944ca:  mov eax, 0x3
 80944cf:  mov edx, 0x3
 80944d4:  jne 80944f8
 80944d6:  jmp 8094502
 80944d8:  cmp DWORD PTR [ecx+eax*4+0x8], 0x0
 80944dd:  lea edx, [eax+0x2]
 80944e0:  je 8094502
 80944e2:  cmp DWORD PTR [ecx+eax*4+0xc], 0x0
 80944e7:  lea edx, [eax+0x3]
 80944ea:  je 8094502
 80944ec:  lea edx, [eax+0x4]
 80944ef:  mov eax, DWORD PTR [ecx+edx*4]
 80944f2:  test eax, eax
 80944f4:  je 8094502
 80944f6:  mov eax, edx
 80944f8:  cmp DWORD PTR [ecx+eax*4+0x4], 0x0
 80944fd:  lea edx, [eax+0x1]
 8094500:  jne 80944d8
 8094502:  mov eax, edx
 8094504:  pop ebp
 8094505:  ret
 8094506:  nop
 8094507:  nop
 8094508:  nop
 8094509:  nop
 809450a:  nop
 809450b:  nop
 809450c:  nop
 809450d:  nop
 809450e:  nop
 809450f:  nop

08094510 <__btowc>:
 8094510:  push ebp
 8094511:  mov ebp, esp
 8094513:  sub esp, 0x60
 8094516:  mov DWORD PTR [ebp-0x8], esi
 8094519:  mov esi, DWORD PTR [ebp+0x8]
 809451c:  mov DWORD PTR [ebp-0xc], ebx
 809451f:  mov DWORD PTR [ebp-0x4], edi
 8094522:  lea eax, [esi+0x80]
 8094528:  mov edx, esi
 809452a:  cmp eax, 0x17f
 809452f:  ja 80945a0
 8094531:  cmp esi, 0xff
 8094534:  je 80945a0
 8094536:  test esi, 0xffffff80
 809453c:  je 809458f
 809453e:  mov eax, 0xffffffd8
 8094543:  mov edx, DWORD PTR gs:0x0
 809454a:  mov eax, DWORD PTR [edx+eax]
 809454d:  mov ebx, DWORD PTR [eax]
 809454f:  mov edi, DWORD PTR [ebx+0x14]
 8094552:  test edi, edi
 8094554:  je 80945a8
 8094556:  mov eax, DWORD PTR [edi]
 8094558:  cmp DWORD PTR [edi+0x4], 0x1
 809455c:  mov ebx, DWORD PTR [eax+0x18]
 809455f:  jne 80945c1
 8094561:  test ebx, ebx
 8094563:  je 80945c1
 8094565:  mov edx, DWORD PTR [eax]
 8094567:  test edx, edx
 8094569:  je 8094575
 809456b:  ror ebx, 0x9
 809456e:  xor ebx, DWORD PTR gs:0x18
 8094575:  mov DWORD PTR [esp], ebx
 8094578:  call 807f350
 809457d:  mov edx, esi
 809457f:  movzx eax, dl
 8094582:  mov DWORD PTR [esp+0x4], eax
 8094586:  mov eax, DWORD PTR [edi]
 8094588:  mov DWORD PTR [esp], eax
 809458b:  call ebx
 809458d:  mov edx, eax
 809458f:  mov ebx, DWORD PTR [ebp-0xc]
 8094592:  mov eax, edx
 8094594:  mov esi, DWORD PTR [ebp-0x8]
 8094597:  mov edi, DWORD PTR [ebp-0x4]
 809459a:  mov esp, ebp
 809459c:  pop ebp
 809459d:  ret
 809459e:  xchg ax, ax
 80945a0:  mov edx, 0xffffffff
 80945a5:  jmp 809458f
 80945a7:  nop
 80945a8:  cmp ebx, 0x80b8880
 80945ae:  mov edi, 0x80b1e20
 80945b3:  je 8094556
 80945b5:  mov eax, ebx
 80945b7:  call 806d110
 80945bc:  mov edi, DWORD PTR [ebx+0x14]
 80945bf:  jmp 8094556
 80945c1:  lea eax, [ebp-0xd]
 80945c4:  mov DWORD PTR [ebp-0x18], eax
 80945c7:  lea eax, [ebp-0x14]
 80945ca:  mov DWORD PTR [ebp-0x40], eax
 80945cd:  lea eax, [ebp-0x10]
 80945d0:  mov DWORD PTR [ebp-0x3c], eax
 80945d3:  lea eax, [ebp-0x28]
 80945d6:  mov DWORD PTR [ebp-0x2c], eax
 80945d9:  mov eax, esi
 80945db:  mov DWORD PTR [ebp-0x28], 0x0
 80945e2:  mov DWORD PTR [ebp-0x24], 0x0
 80945e9:  mov BYTE PTR [ebp-0xd], al
 80945ec:  mov eax, DWORD PTR [edi]
 80945ee:  mov DWORD PTR [ebp-0x34], 0x0
 80945f5:  mov DWORD PTR [ebp-0x30], 0x1
 80945fc:  mov DWORD PTR [ebp-0x38], 0x1
 8094603:  mov ebx, DWORD PTR [eax+0x14]
 8094606:  mov eax, DWORD PTR [eax]
 8094608:  mov DWORD PTR [ebp-0x20], 0x0
 809460f:  test eax, eax
 8094611:  je 809461d
 8094613:  ror ebx, 0x9
 8094616:  xor ebx, DWORD PTR gs:0x18
 809461d:  mov DWORD PTR [esp], ebx
 8094620:  call 807f350
 8094625:  lea eax, [ebp-0x1c]
 8094628:  mov DWORD PTR [esp+0x14], eax
 809462c:  mov eax, DWORD PTR [ebp-0x18]
 809462f:  mov DWORD PTR [esp+0x1c], 0x1
 8094637:  mov DWORD PTR [esp+0x18], 0x0
 809463f:  mov DWORD PTR [esp+0x10], 0x0
 8094647:  add eax, 0x1
 809464a:  mov DWORD PTR [esp+0xc], eax
 809464e:  lea eax, [ebp-0x18]
 8094651:  mov DWORD PTR [esp+0x8], eax
 8094655:  lea eax, [ebp-0x40]
 8094658:  mov DWORD PTR [esp+0x4], eax
 809465c:  mov eax, DWORD PTR [edi]
 809465e:  mov DWORD PTR [esp], eax
 8094661:  call ebx
 8094663:  test eax, eax
 8094665:  je 8094679
 8094667:  cmp eax, 0x5
 809466a:  je 8094679
 809466c:  cmp eax, 0x4
 809466f:  nop
 8094670:  je 8094679
 8094672:  mov DWORD PTR [ebp-0x14], 0xffffffff
 8094679:  mov edx, DWORD PTR [ebp-0x14]
 809467c:  lea esi, [esi]
 8094680:  jmp 809458f
 8094685:  nop
 8094686:  nop
 8094687:  nop
 8094688:  nop
 8094689:  nop
 809468a:  nop
 809468b:  nop
 809468c:  nop
 809468d:  nop
 809468e:  nop
 809468f:  nop

08094690 <__mbsrtowcs>:
 8094690:  push ebp
 8094691:  mov eax, gs:0x0
 8094697:  mov ebp, esp
 8094699:  sub esp, 0x14
 809469c:  mov edx, 0xffffffe4
 80946a2:  mov ecx, DWORD PTR [ebp+0x14]
 80946a5:  mov eax, DWORD PTR [eax+edx]
 80946a8:  test ecx, ecx
 80946aa:  je 80946d0
 80946ac:  mov DWORD PTR [esp+0x10], eax
 80946b0:  mov eax, DWORD PTR [ebp+0x10]
 80946b3:  mov DWORD PTR [esp+0xc], ecx
 80946b7:  mov DWORD PTR [esp+0x8], eax
 80946bb:  mov eax, DWORD PTR [ebp+0xc]
 80946be:  mov DWORD PTR [esp+0x4], eax
 80946c2:  mov eax, DWORD PTR [ebp+0x8]
 80946c5:  mov DWORD PTR [esp], eax
 80946c8:  call 8094720
 80946cd:  leave
 80946ce:  ret
 80946cf:  nop
 80946d0:  mov ecx, 0x80d2b24
 80946d5:  jmp 80946ac
 80946d7:  nop
 80946d8:  nop
 80946d9:  nop
 80946da:  nop
 80946db:  nop
 80946dc:  nop
 80946dd:  nop
 80946de:  nop
 80946df:  nop

080946e0 <__wcschrnul>:
 80946e0:  push ebp
 80946e1:  mov ebp, esp
 80946e3:  mov eax, DWORD PTR [ebp+0x8]
 80946e6:  mov ecx, DWORD PTR [ebp+0xc]
 80946e9:  mov edx, DWORD PTR [eax]
 80946eb:  test edx, edx
 80946ed:  jne 8094701
 80946ef:  jmp 809470a
 80946f1:  lea esi, [esi]
 80946f8:  add eax, 0x4
 80946fb:  mov edx, DWORD PTR [eax]
 80946fd:  test edx, edx
 80946ff:  je 809470a
 8094701:  cmp edx, ecx
 8094703:  nop
 8094704:  lea esi, [esi]
 8094708:  jne 80946f8
 809470a:  pop ebp
 809470b:  nop
 809470c:  lea esi, [esi]
 8094710:  ret
 8094711:  nop
 8094712:  nop
 8094713:  nop
 8094714:  nop
 8094715:  nop
 8094716:  nop
 8094717:  nop
 8094718:  nop
 8094719:  nop
 809471a:  nop
 809471b:  nop
 809471c:  nop
 809471d:  nop
 809471e:  nop
 809471f:  nop

08094720 <__mbsrtowcs_l>:
 8094720:  push ebp
 8094721:  mov ebp, esp
 8094723:  push edi
 8094724:  push esi
 8094725:  push ebx
 8094726:  sub esp, 0x16c
 809472c:  mov eax, DWORD PTR [ebp+0x14]
 809472f:  mov DWORD PTR [ebp-0x34], 0x0
 8094736:  mov ebx, DWORD PTR [ebp+0x10]
 8094739:  mov DWORD PTR [ebp-0x30], 0x1
 8094740:  mov DWORD PTR [ebp-0x38], 0x1
 8094747:  mov DWORD PTR [ebp-0x2c], eax
 809474a:  mov eax, DWORD PTR [ebp+0x18]
 809474d:  mov DWORD PTR [ebp-0x20], 0x0
 8094754:  mov esi, DWORD PTR [eax]
 8094756:  mov eax, DWORD PTR [esi+0x14]
 8094759:  test eax, eax
 809475b:  je 8094960
 8094761:  mov eax, DWORD PTR [eax]
 8094763:  mov DWORD PTR [ebp-0x14c], eax
 8094769:  mov edi, DWORD PTR [eax+0x14]
 809476c:  mov eax, DWORD PTR [eax]
 809476e:  test eax, eax
 8094770:  je 809477c
 8094772:  ror edi, 0x9
 8094775:  xor edi, DWORD PTR gs:0x18
 809477c:  mov eax, DWORD PTR [ebp+0x8]
 809477f:  test eax, eax
 8094781:  je 8094980
 8094787:  mov ecx, DWORD PTR [ebp+0xc]
 809478a:  test ebx, ebx
 809478c:  mov eax, DWORD PTR [ebp+0x8]
 809478f:  mov edx, DWORD PTR [ecx]
 8094791:  mov DWORD PTR [ebp-0x40], eax
 8094794:  lea eax, [eax+ebx*4]
 8094797:  mov DWORD PTR [ebp-0x3c], eax
 809479a:  mov DWORD PTR [ebp-0x14], edx
 809479d:  je 8094a7d
 80947a3:  lea eax, [ebp-0x40]
 80947a6:  mov esi, edx
 80947a8:  mov DWORD PTR [ebp-0x158], eax
 80947ae:  lea ecx, [ebp-0x10]
 80947b1:  lea eax, [ebp-0x14]
 80947b4:  mov DWORD PTR [ebp-0x154], ecx
 80947ba:  mov DWORD PTR [ebp-0x150], eax
 80947c0:  mov DWORD PTR [esp+0x4], ebx
 80947c4:  mov DWORD PTR [esp], esi
 80947c7:  call 806b180
 80947cc:  mov DWORD PTR [esp], edi
 80947cf:  lea ebx, [esi+eax+0x1]
 80947d3:  call 807f350
 80947d8:  mov DWORD PTR [esp+0x1c], 0x1
 80947e0:  mov DWORD PTR [esp+0x18], 0x0
 80947e8:  mov ecx, DWORD PTR [ebp-0x154]
 80947ee:  mov DWORD PTR [esp+0x10], 0x0
 80947f6:  mov DWORD PTR [esp+0xc], ebx
 80947fa:  mov DWORD PTR [esp+0x14], ecx
 80947fe:  mov eax, DWORD PTR [ebp-0x150]
 8094804:  mov DWORD PTR [esp+0x8], eax
 8094808:  mov ecx, DWORD PTR [ebp-0x158]
 809480e:  mov DWORD PTR [esp+0x4], ecx
 8094812:  mov eax, DWORD PTR [ebp-0x14c]
 8094818:  mov DWORD PTR [esp], eax
 809481b:  call edi
 809481d:  cmp eax, 0x4
 8094820:  mov edx, eax
 8094822:  setne BYTE PTR [ebp-0x141]
 8094829:  je 80948c8
 809482f:  cmp eax, 0x7
 8094832:  je 80948c8
 8094838:  mov eax, DWORD PTR [ebp-0x40]
 809483b:  mov esi, DWORD PTR [ebp-0x14]
 809483e:  mov BYTE PTR [ebp-0x141], 0x1
 8094845:  mov ecx, DWORD PTR [ebp+0xc]
 8094848:  mov DWORD PTR [ecx], esi
 809484a:  mov ecx, eax
 809484c:  sub ecx, DWORD PTR [ebp+0x8]
 809484f:  sar ecx, 0x2
 8094852:  test edx, edx
 8094854:  mov esi, ecx
 8094856:  jne 80948f8
 809485c:  mov eax, DWORD PTR [ebp+0x8]
 809485f:  mov ebx, DWORD PTR [eax+ecx*4-0x4]
 8094863:  test ebx, ebx
 8094865:  jne 8094888
 8094867:  test ecx, ecx
 8094869:  je 8094a89
 809486f:  mov eax, DWORD PTR [ebp-0x2c]
 8094872:  mov eax, DWORD PTR [eax]
 8094874:  test eax, eax
 8094876:  jne 8094aad
 809487c:  mov eax, DWORD PTR [ebp+0xc]
 809487f:  lea esi, [ecx-0x1]
 8094882:  mov DWORD PTR [eax], 0x0
 8094888:  test edx, edx
 809488a:  setne al
 809488d:  cmp BYTE PTR [ebp-0x141], 0x0
 8094894:  je 8094908
 8094896:  test al, al
 8094898:  je 8094908
 809489a:  cmp edx, 0x6
 809489d:  je 8094908
 809489f:  cmp edx, 0x7
 80948a2:  lea esi, [esi]
 80948a8:  je 8094908
 80948aa:  cmp edx, 0x5
 80948ad:  lea esi, [esi]
 80948b0:  jne 8094ad1
 80948b6:  add esp, 0x16c
 80948bc:  mov eax, esi
 80948be:  pop ebx
 80948bf:  pop esi
 80948c0:  pop edi
 80948c1:  pop ebp
 80948c2:  ret
 80948c3:  nop
 80948c4:  lea esi, [esi]
 80948c8:  mov esi, DWORD PTR [ebp-0x14]
 80948cb:  cmp esi, ebx
 80948cd:  jne 8094958
 80948d3:  cmp BYTE PTR [ebx-0x1], 0x0
 80948d7:  je 8094958
 80948d9:  mov eax, DWORD PTR [ebp-0x40]
 80948dc:  mov ebx, DWORD PTR [ebp-0x3c]
 80948df:  sub ebx, eax
 80948e1:  sar ebx, 0x2
 80948e4:  test ebx, ebx
 80948e6:  jne 80947c0
 80948ec:  jmp 8094845
 80948f1:  lea esi, [esi]
 80948f8:  cmp edx, 0x4
 80948fb:  jne 8094888
 80948fd:  lea esi, [esi]
 8094900:  jmp 809485c
 8094905:  lea esi, [esi]
 8094908:  cmp edx, 0x5
 809490b:  nop
 809490c:  lea esi, [esi]
 8094910:  je 80948b6
 8094912:  test al, al
 8094914:  lea esi, [esi]
 8094918:  je 80948b6
 809491a:  cmp edx, 0x7
 809491d:  lea esi, [esi]
 8094920:  je 80948b6
 8094922:  cmp BYTE PTR [ebp-0x141], 0x0
 8094929:  lea esi, [esi]
 8094930:  je 80948b6
 8094932:  mov edx, 0xffffffe8
 8094938:  mov esi, 0xffffffff
 809493d:  mov eax, gs:0x0
 8094943:  mov DWORD PTR [eax+edx], 0x54
 809494a:  add esp, 0x16c
 8094950:  mov eax, esi
 8094952:  pop ebx
 8094953:  pop esi
 8094954:  pop edi
 8094955:  pop ebp
 8094956:  ret
 8094957:  nop
 8094958:  mov eax, DWORD PTR [ebp-0x40]
 809495b:  jmp 8094845
 8094960:  cmp esi, 0x80b8880
 8094966:  mov eax, 0x80b1e20
 809496b:  je 8094761
 8094971:  mov eax, esi
 8094973:  call 806d110
 8094978:  mov eax, DWORD PTR [esi+0x14]
 809497b:  jmp 8094761
 8094980:  mov eax, DWORD PTR [ebp+0xc]
 8094983:  xor esi, esi
 8094985:  mov ebx, DWORD PTR [eax]
 8094987:  mov DWORD PTR [ebp-0x14], ebx
 809498a:  mov DWORD PTR [esp], ebx
 809498d:  call 804eea0
 8094992:  lea ecx, [ebp-0x40]
 8094995:  lea eax, [ebx+eax+0x1]
 8094999:  mov DWORD PTR [ebp-0x148], eax
 809499f:  mov eax, DWORD PTR [ebp-0x2c]
 80949a2:  lea ebx, [ebp-0x140]
 80949a8:  mov edx, DWORD PTR [eax+0x4]
 80949ab:  mov eax, DWORD PTR [eax]
 80949ad:  mov DWORD PTR [ebp-0x158], ecx
 80949b3:  mov DWORD PTR [ebp-0x3c], ecx
 80949b6:  lea ecx, [ebp-0x14]
 80949b9:  mov DWORD PTR [ebp-0x18], edx
 80949bc:  mov DWORD PTR [ebp-0x1c], eax
 80949bf:  lea eax, [ebp-0x1c]
 80949c2:  mov DWORD PTR [ebp-0x2c], eax
 80949c5:  lea eax, [ebp-0x10]
 80949c8:  mov DWORD PTR [ebp-0x154], eax
 80949ce:  mov DWORD PTR [ebp-0x150], ecx
 80949d4:  lea esi, [esi]
 80949d8:  mov DWORD PTR [ebp-0x40], ebx
 80949db:  mov DWORD PTR [esp], edi
 80949de:  call 807f350
 80949e3:  mov DWORD PTR [esp+0x1c], 0x1
 80949eb:  mov DWORD PTR [esp+0x18], 0x0
 80949f3:  mov eax, DWORD PTR [ebp-0x154]
 80949f9:  mov DWORD PTR [esp+0x10], 0x0
 8094a01:  mov DWORD PTR [esp+0x14], eax
 8094a05:  mov ecx, DWORD PTR [ebp-0x148]
 8094a0b:  mov DWORD PTR [esp+0xc], ecx
 8094a0f:  mov eax, DWORD PTR [ebp-0x150]
 8094a15:  mov DWORD PTR [esp+0x8], eax
 8094a19:  mov ecx, DWORD PTR [ebp-0x158]
 8094a1f:  mov DWORD PTR [esp+0x4], ecx
 8094a23:  mov eax, DWORD PTR [ebp-0x14c]
 8094a29:  mov DWORD PTR [esp], eax
 8094a2c:  call edi
 8094a2e:  mov ecx, DWORD PTR [ebp-0x40]
 8094a31:  mov edx, eax
 8094a33:  mov eax, ecx
 8094a35:  sub eax, ebx
 8094a37:  sar eax, 0x2
 8094a3a:  add esi, eax
 8094a3c:  cmp edx, 0x5
 8094a3f:  je 80949d8
 8094a41:  test edx, edx
 8094a43:  jne 8094a67
 8094a45:  mov edi, DWORD PTR [ecx-0x4]
 8094a48:  test edi, edi
 8094a4a:  jne 8094af5
 8094a50:  sub esi, 0x1
 8094a53:  test edx, edx
 8094a55:  setne al
 8094a58:  cmp edx, 0x4
 8094a5b:  setne BYTE PTR [ebp-0x141]
 8094a62:  jmp 809488d
 8094a67:  cmp edx, 0x4
 8094a6a:  je 8094a45
 8094a6c:  test edx, edx
 8094a6e:  setne al
 8094a71:  mov BYTE PTR [ebp-0x141], 0x1
 8094a78:  jmp 8094896
 8094a7d:  mov ecx, DWORD PTR [ebp+0xc]
 8094a80:  xor esi, esi
 8094a82:  mov DWORD PTR [ecx], edx
 8094a84:  jmp 80948b6
 8094a89:  mov DWORD PTR [esp+0xc], 0x80c62e6
 8094a91:  mov DWORD PTR [esp+0x8], 0x93
 8094a99:  mov DWORD PTR [esp+0x4], 0x80c62d8
 8094aa1:  mov DWORD PTR [esp], 0x80b1de1
 8094aa8:  call 8051490
 8094aad:  mov DWORD PTR [esp+0xc], 0x80c62e6
 8094ab5:  mov DWORD PTR [esp+0x8], 0x94
 8094abd:  mov DWORD PTR [esp+0x4], 0x80c62d8
 8094ac5:  mov DWORD PTR [esp], 0x80b1db4
 8094acc:  call 8051490
 8094ad1:  mov DWORD PTR [esp+0xc], 0x80c62e6
 8094ad9:  mov DWORD PTR [esp+0x8], 0x9f
 8094ae1:  mov DWORD PTR [esp+0x4], 0x80c62d8
 8094ae9:  mov DWORD PTR [esp], 0x80b1cb8
 8094af0:  call 8051490
 8094af5:  mov DWORD PTR [esp+0xc], 0x80c62e6
 8094afd:  mov DWORD PTR [esp+0x8], 0x64
 8094b05:  mov DWORD PTR [esp+0x4], 0x80c62d8
 8094b0d:  mov DWORD PTR [esp], 0x80c62f4
 8094b14:  call 8051490
 8094b19:  nop
 8094b1a:  nop
 8094b1b:  nop
 8094b1c:  nop
 8094b1d:  nop
 8094b1e:  nop
 8094b1f:  nop

08094b20 <__offtime>:
 8094b20:  push ebp
 8094b21:  mov ebp, esp
 8094b23:  push edi
 8094b24:  push esi
 8094b25:  mov esi, 0xc22e4507
 8094b2a:  push ebx
 8094b2b:  sub esp, 0x1c
 8094b2e:  mov eax, DWORD PTR [ebp+0x8]
 8094b31:  mov ecx, DWORD PTR [eax]
 8094b33:  mov eax, ecx
 8094b35:  imul esi
 8094b37:  lea ebx, [edx+ecx]
 8094b3a:  mov edx, ecx
 8094b3c:  sar edx, 0x1f
 8094b3f:  sar ebx, 0x10
 8094b42:  sub ebx, edx
 8094b44:  imul edx, ebx, 0x15180
 8094b4a:  sub ecx, edx
 8094b4c:  add ecx, DWORD PTR [ebp+0xc]
 8094b4f:  jns 8094b6e
 8094b51:  mov edx, ecx
 8094b53:  sub ebx, 0x1
 8094b56:  not edx
 8094b58:  mov eax, edx
 8094b5a:  mul esi
 8094b5c:  shr edx, 0x10
 8094b5f:  sub ebx, edx
 8094b61:  imul edx, edx, 0x15180
 8094b67:  lea ecx, [ecx+edx+0x15180]
 8094b6e:  cmp ecx, 0x1517f
 8094b74:  mov DWORD PTR [ebp-0x10], ebx
 8094b77:  jle 8094b9a
 8094b79:  sub ecx, 0x15180
 8094b7f:  mov edx, 0xc22e4507
 8094b84:  mov eax, ecx
 8094b86:  mul edx
 8094b88:  shr edx, 0x10
 8094b8b:  lea ebx, [edx+ebx+0x1]
 8094b8f:  imul edx, edx, 0xfffeae80
 8094b95:  mov DWORD PTR [ebp-0x10], ebx
 8094b98:  add ecx, edx
 8094b9a:  mov eax, ecx
 8094b9c:  mov edx, 0x91a2b3c5
 8094ba1:  imul edx
 8094ba3:  mov eax, ecx
 8094ba5:  sar eax, 0x1f
 8094ba8:  add edx, ecx
 8094baa:  sar edx, 0xb
 8094bad:  sub edx, eax
 8094baf:  mov eax, DWORD PTR [ebp+0x10]
 8094bb2:  mov DWORD PTR [eax+0x8], edx
 8094bb5:  imul edx, edx, 0xe10
 8094bbb:  sub ecx, edx
 8094bbd:  mov edx, 0x88888889
 8094bc2:  mov eax, ecx
 8094bc4:  imul edx
 8094bc6:  mov eax, ecx
 8094bc8:  sar eax, 0x1f
 8094bcb:  add edx, ecx
 8094bcd:  sar edx, 0x5
 8094bd0:  sub edx, eax
 8094bd2:  mov eax, DWORD PTR [ebp+0x10]
 8094bd5:  mov DWORD PTR [eax+0x4], edx
 8094bd8:  imul edx, edx, 0x3c
 8094bdb:  sub ecx, edx
 8094bdd:  mov edx, 0x92492493
 8094be2:  mov DWORD PTR [eax], ecx
 8094be4:  lea ecx, [ebx+0x4]
 8094be7:  mov eax, ecx
 8094be9:  imul edx
 8094beb:  mov eax, ecx
 8094bed:  sar eax, 0x1f
 8094bf0:  add edx, ecx
 8094bf2:  sar edx, 0x2
 8094bf5:  sub edx, eax
 8094bf7:  lea eax, [edx*8]
 8094bfe:  sub eax, edx
 8094c00:  mov edx, ecx
 8094c02:  mov ecx, DWORD PTR [ebp+0x10]
 8094c05:  sub edx, eax
 8094c07:  test edx, edx
 8094c09:  mov DWORD PTR [ecx+0x18], edx
 8094c0c:  js 8094e28
 8094c12:  mov DWORD PTR [ebp-0x18], 0x7b2
 8094c19:  jmp 8094d6e
 8094c1e:  xchg ax, ax
 8094c20:  mov eax, 0x51eb851f
 8094c25:  mov ecx, DWORD PTR [ebp-0x18]
 8094c28:  imul DWORD PTR [ebp-0x18]
 8094c2b:  sar ecx, 0x1f
 8094c2e:  mov eax, edx
 8094c30:  sar eax, 0x5
 8094c33:  sub eax, ecx
 8094c35:  imul eax, eax, 0x64
 8094c38:  cmp DWORD PTR [ebp-0x18], eax
 8094c3b:  jne 8094c51
 8094c3d:  sar edx, 0x7
 8094c40:  sub edx, ecx
 8094c42:  imul edx, edx, 0x190
 8094c48:  cmp DWORD PTR [ebp-0x18], edx
 8094c4b:  jne 8094d85
 8094c51:  mov eax, 0x16e
 8094c56:  cmp eax, DWORD PTR [ebp-0x10]
 8094c59:  jg 8094d93
 8094c5f:  mov eax, 0xb38cf9b1
 8094c64:  mov ecx, DWORD PTR [ebp-0x10]
 8094c67:  imul DWORD PTR [ebp-0x10]
 8094c6a:  mov eax, DWORD PTR [ebp-0x10]
 8094c6d:  add edx, DWORD PTR [ebp-0x10]
 8094c70:  mov esi, DWORD PTR [ebp-0x18]
 8094c73:  sar eax, 0x1f
 8094c76:  sar edx, 0x8
 8094c79:  sub edx, eax
 8094c7b:  sub esi, 0x1
 8094c7e:  imul eax, edx, 0x16d
 8094c84:  sub ecx, eax
 8094c86:  mov eax, ecx
 8094c88:  shr eax, 0x1f
 8094c8b:  sub edx, eax
 8094c8d:  mov eax, esi
 8094c8f:  add edx, DWORD PTR [ebp-0x18]
 8094c92:  sar eax, 0x1f
 8094c95:  mov DWORD PTR [ebp-0x20], eax
 8094c98:  shr eax, 0x1e
 8094c9b:  mov DWORD PTR [ebp-0x14], edx
 8094c9e:  mov edi, eax
 8094ca0:  sub edx, 0x1
 8094ca3:  mov DWORD PTR [ebp-0x24], eax
 8094ca6:  mov eax, 0x51eb851f
 8094cab:  add edi, esi
 8094cad:  mov DWORD PTR [ebp-0x1c], edx
 8094cb0:  imul esi
 8094cb2:  mov eax, DWORD PTR [ebp-0x20]
 8094cb5:  mov ecx, edi
 8094cb7:  sar ecx, 0x2
 8094cba:  mov ebx, edx
 8094cbc:  sar ebx, 0x5
 8094cbf:  sub eax, ebx
 8094cc1:  sub ebx, DWORD PTR [ebp-0x20]
 8094cc4:  add ecx, eax
 8094cc6:  sar edx, 0x7
 8094cc9:  mov eax, esi
 8094ccb:  add ecx, DWORD PTR [ebp-0x10]
 8094cce:  sub edx, DWORD PTR [ebp-0x20]
 8094cd1:  imul ebx, ebx, 0x64
 8094cd4:  add ecx, edx
 8094cd6:  imul edx, edx, 0x190
 8094cdc:  sub eax, ebx
 8094cde:  shr eax, 0x1f
 8094ce1:  add ecx, eax
 8094ce3:  mov eax, 0x51eb851f
 8094ce8:  sub esi, edx
 8094cea:  shr esi, 0x1f
 8094ced:  sub ecx, esi
 8094cef:  and edi, 0x3
 8094cf2:  mov esi, DWORD PTR [ebp-0x1c]
 8094cf5:  imul DWORD PTR [ebp-0x1c]
 8094cf8:  sub edi, DWORD PTR [ebp-0x24]
 8094cfb:  sar esi, 0x1f
 8094cfe:  mov ebx, edx
 8094d00:  mov eax, esi
 8094d02:  shr edi, 0x1f
 8094d05:  sar ebx, 0x7
 8094d08:  sub ecx, edi
 8094d0a:  sub eax, ebx
 8094d0c:  mov edi, esi
 8094d0e:  add ecx, eax
 8094d10:  mov eax, DWORD PTR [ebp-0x1c]
 8094d13:  sub ebx, esi
 8094d15:  sar edx, 0x5
 8094d18:  sub edx, esi
 8094d1a:  shr edi, 0x1e
 8094d1d:  add ecx, edx
 8094d1f:  mov DWORD PTR [ebp-0x28], edx
 8094d22:  lea edx, [edi+eax]
 8094d25:  mov eax, edx
 8094d27:  and edx, 0x3
 8094d2a:  sar eax, 0x2
 8094d2d:  sub edx, edi
 8094d2f:  sub ecx, eax
 8094d31:  mov eax, DWORD PTR [ebp-0x14]
 8094d34:  sub DWORD PTR [ebp-0x18], eax
 8094d37:  imul eax, DWORD PTR [ebp-0x18], 0x16d
 8094d3e:  imul ebx, ebx, 0x190
 8094d44:  shr edx, 0x1f
 8094d47:  add ecx, eax
 8094d49:  mov eax, DWORD PTR [ebp-0x1c]
 8094d4c:  sub eax, ebx
 8094d4e:  shr eax, 0x1f
 8094d51:  add ecx, eax
 8094d53:  imul eax, DWORD PTR [ebp-0x28], 0x64
 8094d57:  add ecx, edx
 8094d59:  sub DWORD PTR [ebp-0x1c], eax
 8094d5c:  shr DWORD PTR [ebp-0x1c], 0x1f
 8094d60:  mov edx, DWORD PTR [ebp-0x1c]
 8094d63:  sub ecx, edx
 8094d65:  mov DWORD PTR [ebp-0x10], ecx
 8094d68:  mov ecx, DWORD PTR [ebp-0x14]
 8094d6b:  mov DWORD PTR [ebp-0x18], ecx
 8094d6e:  mov eax, DWORD PTR [ebp-0x10]
 8094d71:  test eax, eax
 8094d73:  js 8094c5f
 8094d79:  mov ebx, DWORD PTR [ebp-0x18]
 8094d7c:  and ebx, 0x3
 8094d7f:  je 8094c20
 8094d85:  mov eax, 0x16d
 8094d8a:  cmp eax, DWORD PTR [ebp-0x10]
 8094d8d:  jle 8094c5f
 8094d93:  mov eax, DWORD PTR [ebp-0x18]
 8094d96:  mov edx, DWORD PTR [ebp+0x10]
 8094d99:  mov ecx, DWORD PTR [ebp-0x10]
 8094d9c:  sub eax, 0x76c
 8094da1:  test ebx, ebx
 8094da3:  mov DWORD PTR [edx+0x14], eax
 8094da6:  mov DWORD PTR [edx+0x1c], ecx
 8094da9:  jne 8094de0
 8094dab:  mov eax, 0x51eb851f
 8094db0:  mov ecx, DWORD PTR [ebp-0x18]
 8094db3:  imul DWORD PTR [ebp-0x18]
 8094db6:  sar ecx, 0x1f
 8094db9:  mov eax, edx
 8094dbb:  sar eax, 0x5
 8094dbe:  sub eax, ecx
 8094dc0:  imul eax, eax, 0x64
 8094dc3:  cmp DWORD PTR [ebp-0x18], eax
 8094dc6:  je 8094dd0
 8094dc8:  mov eax, 0x1a
 8094dcd:  jmp 8094de2
 8094dcf:  nop
 8094dd0:  sar edx, 0x7
 8094dd3:  sub edx, ecx
 8094dd5:  imul edx, edx, 0x190
 8094ddb:  cmp DWORD PTR [ebp-0x18], edx
 8094dde:  je 8094dc8
 8094de0:  xor eax, eax
 8094de2:  lea ecx, [eax+0x80c6320]
 8094de8:  mov eax, 0xb
 8094ded:  movzx edx, WORD PTR [ecx+0x16]
 8094df1:  cmp edx, DWORD PTR [ebp-0x10]
 8094df4:  jle 8094e04
 8094df6:  xchg ax, ax
 8094df8:  sub eax, 0x1
 8094dfb:  movzx edx, WORD PTR [ecx+eax*2]
 8094dff:  cmp edx, DWORD PTR [ebp-0x10]
 8094e02:  jg 8094df8
 8094e04:  mov ecx, DWORD PTR [ebp+0x10]
 8094e07:  mov DWORD PTR [ecx+0x10], eax
 8094e0a:  mov eax, DWORD PTR [ebp-0x10]
 8094e0d:  add eax, 0x1
 8094e10:  sub eax, edx
 8094e12:  mov DWORD PTR [ecx+0xc], eax
 8094e15:  add esp, 0x1c
 8094e18:  mov eax, 0x1
 8094e1d:  pop ebx
 8094e1e:  pop esi
 8094e1f:  pop edi
 8094e20:  pop ebp
 8094e21:  ret
 8094e22:  lea esi, [esi]
 8094e28:  lea eax, [edx+0x7]
 8094e2b:  mov DWORD PTR [ecx+0x18], eax
 8094e2e:  jmp 8094c12
 8094e33:  nop
 8094e34:  nop
 8094e35:  nop
 8094e36:  nop
 8094e37:  nop
 8094e38:  nop
 8094e39:  nop
 8094e3a:  nop
 8094e3b:  nop
 8094e3c:  nop
 8094e3d:  nop
 8094e3e:  nop
 8094e3f:  nop

08094e40 <__mktime_internal>:
 8094e40:  push ebp
 8094e41:  mov ebp, esp
 8094e43:  push edi
 8094e44:  push esi
 8094e45:  push ebx
 8094e46:  sub esp, 0xcc
 8094e4c:  mov eax, DWORD PTR [ebp+0x8]
 8094e4f:  mov ecx, DWORD PTR [ebp+0x8]
 8094e52:  mov edx, DWORD PTR [ebp+0x8]
 8094e55:  mov esi, DWORD PTR [ebp+0x8]
 8094e58:  mov eax, DWORD PTR [eax]
 8094e5a:  mov ecx, DWORD PTR [ecx+0x8]
 8094e5d:  mov edx, DWORD PTR [edx+0x4]
 8094e60:  mov esi, DWORD PTR [esi+0xc]
 8094e63:  mov DWORD PTR [ebp-0x7c], eax
 8094e66:  mov eax, DWORD PTR [ebp+0x8]
 8094e69:  mov DWORD PTR [ebp-0xb8], ecx
 8094e6f:  mov DWORD PTR [ebp-0xbc], edx
 8094e75:  xor edx, edx
 8094e77:  mov DWORD PTR [ebp-0xb4], esi
 8094e7d:  mov ecx, DWORD PTR [eax+0x10]
 8094e80:  mov edi, DWORD PTR [eax+0x14]
 8094e83:  mov eax, DWORD PTR [eax+0x20]
 8094e86:  test eax, eax
 8094e88:  setne dl
 8094e8b:  sar eax, 0x1f
 8094e8e:  or edx, eax
 8094e90:  mov eax, ecx
 8094e92:  mov DWORD PTR [ebp-0xb0], edx
 8094e98:  mov edx, 0x2aaaaaab
 8094e9d:  imul edx
 8094e9f:  mov eax, ecx
 8094ea1:  sar eax, 0x1f
 8094ea4:  sar edx, 1
 8094ea6:  sub edx, eax
 8094ea8:  lea eax, [edx+edx*2]
 8094eab:  add edx, edi
 8094ead:  shl eax, 0x2
 8094eb0:  sub ecx, eax
 8094eb2:  mov esi, ecx
 8094eb4:  shr esi, 0x1f
 8094eb7:  sub edx, esi
 8094eb9:  mov DWORD PTR [ebp-0xa8], edx
 8094ebf:  and edx, 0x3
 8094ec2:  mov DWORD PTR [ebp-0x98], edx
 8094ec8:  je 8095340
 8094ece:  xor ebx, ebx
 8094ed0:  lea edx, [ebx+ebx]
 8094ed3:  add edx, ebx
 8094ed5:  lea eax, [esi+esi]
 8094ed8:  add eax, esi
 8094eda:  lea edx, [ebx+edx*4]
 8094edd:  lea eax, [edx+eax*4]
 8094ee0:  mov edx, DWORD PTR [ebp-0xb4]
 8094ee6:  add eax, ecx
 8094ee8:  mov ecx, DWORD PTR [ebp+0x10]
 8094eeb:  movzx eax, WORD PTR [eax+eax+0x80c6320]
 8094ef3:  mov DWORD PTR [ebp-0xc0], 0x0
 8094efd:  mov ecx, DWORD PTR [ecx]
 8094eff:  lea eax, [edx+eax-0x1]
 8094f03:  mov DWORD PTR [ebp-0xa4], eax
 8094f09:  mov eax, DWORD PTR [ebp-0x7c]
 8094f0c:  mov DWORD PTR [ebp-0xa0], ecx
 8094f12:  test eax, eax
 8094f14:  js 8094f2e
 8094f16:  mov esi, DWORD PTR [ebp-0x7c]
 8094f19:  cmp esi, 0x3b
 8094f1c:  mov DWORD PTR [ebp-0xc0], esi
 8094f22:  jle 8094f2e
 8094f24:  mov DWORD PTR [ebp-0xc0], 0x3b
 8094f2e:  mov eax, DWORD PTR [ebp-0xa8]
 8094f34:  mov edx, 0x51eb851f
 8094f39:  mov esi, DWORD PTR [ebp-0xa4]
 8094f3f:  sar eax, 0x2
 8094f42:  add eax, 0x1db
 8094f47:  mov DWORD PTR [ebp-0x88], eax
 8094f4d:  xor eax, eax
 8094f4f:  cmp DWORD PTR [ebp-0x98], 0x0
 8094f56:  sete al
 8094f59:  sub DWORD PTR [ebp-0x88], eax
 8094f5f:  mov eax, DWORD PTR [ebp-0x88]
 8094f65:  sar edi, 1
 8094f67:  mov ecx, DWORD PTR [ebp-0x88]
 8094f6d:  sar DWORD PTR [ebp-0xb4], 0xa
 8094f74:  imul edx
 8094f76:  mov eax, DWORD PTR [ebp-0x88]
 8094f7c:  sar edx, 0x3
 8094f7f:  sar eax, 0x1f
 8094f82:  sub edx, eax
 8094f84:  lea eax, [edx+edx*4]
 8094f87:  lea eax, [eax+eax*4]
 8094f8a:  sub ecx, eax
 8094f8c:  mov eax, ecx
 8094f8e:  mov ecx, DWORD PTR [ebp-0xb4]
 8094f94:  shr eax, 0x1f
 8094f97:  sub edx, eax
 8094f99:  mov eax, DWORD PTR [ebp-0xa8]
 8094f9f:  mov DWORD PTR [ebp-0x8c], edx
 8094fa5:  sar edx, 0x2
 8094fa8:  mov DWORD PTR [ebp-0x90], edx
 8094fae:  sub eax, 0x46
 8094fb1:  imul eax, eax, 0x16d
 8094fb7:  lea eax, [esi+eax-0x1dd]
 8094fbe:  add eax, DWORD PTR [ebp-0x88]
 8094fc4:  add eax, edx
 8094fc6:  mov edx, DWORD PTR [ebp-0xb8]
 8094fcc:  sub eax, DWORD PTR [ebp-0x8c]
 8094fd2:  lea eax, [eax+eax*2]
 8094fd5:  lea eax, [edx+eax*8]
 8094fd8:  imul eax, eax, 0x3c
 8094fdb:  add eax, DWORD PTR [ebp-0xbc]
 8094fe1:  sar edx, 0xe
 8094fe4:  imul eax, eax, 0x3c
 8094fe7:  add eax, DWORD PTR [ebp-0xa0]
 8094fed:  add eax, DWORD PTR [ebp-0xc0]
 8094ff3:  mov DWORD PTR [ebp-0xc8], eax
 8094ff9:  lea eax, [edi+ecx-0x23]
 8094ffd:  add eax, edx
 8094fff:  mov edx, DWORD PTR [ebp-0xbc]
 8095005:  sar edx, 0x14
 8095008:  lea ecx, [eax+edx]
 809500b:  mov eax, DWORD PTR [ebp-0xc8]
 8095011:  sar eax, 0x1a
 8095014:  sub eax, ecx
 8095016:  mov edx, eax
 8095018:  sar edx, 0x1f
 809501b:  xor eax, edx
 809501d:  sub eax, edx
 809501f:  cmp eax, 0x15
 8095022:  jg 80955be
 8095028:  mov esi, DWORD PTR [ebp-0xc8]
 809502e:  mov DWORD PTR [ebp-0xac], 0x0
 8095038:  mov DWORD PTR [ebp-0x80], 0x0
 809503f:  mov DWORD PTR [ebp-0x14], esi
 8095042:  mov DWORD PTR [ebp-0x10], esi
 8095045:  mov DWORD PTR [ebp-0xc4], esi
 809504b:  lea eax, [ebp-0x10]
 809504e:  lea esi, [ebp-0x44]
 8095051:  mov DWORD PTR [esp+0x4], esi
 8095055:  mov DWORD PTR [esp], eax
 8095058:  call DWORD PTR [ebp+0xc]
 809505b:  test eax, eax
 809505d:  mov DWORD PTR [ebp-0x94], eax
 8095063:  je 80951e8
 8095069:  mov ecx, DWORD PTR [ebp-0x94]
 809506f:  xor eax, eax
 8095071:  mov ebx, DWORD PTR [ecx+0x14]
 8095074:  mov edx, ebx
 8095076:  sar edx, 0x2
 8095079:  add edx, 0x1db
 809507f:  test bl, 0x3
 8095082:  sete al
 8095085:  sub edx, eax
 8095087:  mov eax, 0x51eb851f
 809508c:  mov DWORD PTR [ebp-0xd0], edx
 8095092:  imul edx
 8095094:  mov eax, DWORD PTR [ebp-0xd0]
 809509a:  mov esi, DWORD PTR [ebp-0xd0]
 80950a0:  mov ecx, edx
 80950a2:  mov edx, DWORD PTR [ebp-0xa8]
 80950a8:  sar eax, 0x1f
 80950ab:  sar ecx, 0x3
 80950ae:  sub ecx, eax
 80950b0:  lea eax, [ecx+ecx*4]
 80950b3:  mov edi, ecx
 80950b5:  mov ecx, DWORD PTR [ebp-0xbc]
 80950bb:  lea eax, [eax+eax*4]
 80950be:  sub edx, ebx
 80950c0:  sub esi, eax
 80950c2:  mov eax, esi
 80950c4:  mov esi, DWORD PTR [ebp-0xb8]
 80950ca:  shr eax, 0x1f
 80950cd:  sub edi, eax
 80950cf:  mov eax, DWORD PTR [ebp-0x94]
 80950d5:  imul edx, edx, 0x16d
 80950db:  sub esi, DWORD PTR [eax+0x8]
 80950de:  sub ecx, DWORD PTR [eax+0x4]
 80950e1:  mov eax, DWORD PTR [eax+0x1c]
 80950e4:  neg eax
 80950e6:  sub eax, DWORD PTR [ebp-0xd0]
 80950ec:  add eax, edx
 80950ee:  add eax, DWORD PTR [ebp-0xa4]
 80950f4:  add eax, edi
 80950f6:  add eax, DWORD PTR [ebp-0x88]
 80950fc:  sar edi, 0x2
 80950ff:  sub eax, edi
 8095101:  add eax, DWORD PTR [ebp-0x90]
 8095107:  sub eax, DWORD PTR [ebp-0x8c]
 809510d:  lea eax, [eax+eax*2]
 8095110:  lea eax, [esi+eax*8]
 8095113:  mov esi, DWORD PTR [ebp-0x94]
 8095119:  imul eax, eax, 0x3c
 809511c:  add ecx, eax
 809511e:  mov eax, DWORD PTR [ebp-0x10]
 8095121:  imul ecx, ecx, 0x3c
 8095124:  sub ecx, DWORD PTR [esi]
 8095126:  add ecx, DWORD PTR [ebp-0xc0]
 809512c:  mov DWORD PTR [ebp-0xcc], eax
 8095132:  lea ebx, [ecx+eax]
 8095135:  cmp eax, ebx
 8095137:  setle al
 809513a:  shr ecx, 0x1f
 809513d:  cmp al, cl
 809513f:  jne 8095168
 8095141:  mov edi, DWORD PTR [ebp-0xcc]
 8095147:  test edi, edi
 8095149:  js 8095208
 809514f:  cmp DWORD PTR [ebp-0xcc], 0x7ffffffd
 8095159:  jle 80951fb
 809515f:  mov ebx, DWORD PTR [ebp-0xcc]
 8095165:  sub ebx, 0x1
 8095168:  cmp DWORD PTR [ebp-0xcc], ebx
 809516e:  je 80953c8
 8095174:  mov eax, DWORD PTR [ebp-0xcc]
 809517a:  cmp DWORD PTR [ebp-0xc4], eax
 8095180:  jne 80951b1
 8095182:  cmp eax, DWORD PTR [ebp-0x14]
 8095185:  je 80951b1
 8095187:  mov eax, DWORD PTR [ebp-0x24]
 809518a:  test eax, eax
 809518c:  js 8095248
 8095192:  cmp DWORD PTR [ebp-0xb0], 0x0
 8095199:  jl 8095230
 809519f:  setne dl
 80951a2:  test eax, eax
 80951a4:  setne al
 80951a7:  xor eax, edx
 80951a9:  test al, 0x1
 80951ab:  jne 8095248
 80951b1:  add DWORD PTR [ebp-0x80], 0x1
 80951b5:  cmp DWORD PTR [ebp-0x80], 0x6
 80951b9:  je 8095330
 80951bf:  mov edx, DWORD PTR [ebp-0x14]
 80951c2:  xor eax, eax
 80951c4:  mov ecx, DWORD PTR [ebp-0xcc]
 80951ca:  cmp DWORD PTR [ebp-0x24], 0x0
 80951ce:  mov DWORD PTR [ebp-0x10], ebx
 80951d1:  mov DWORD PTR [ebp-0xc4], edx
 80951d7:  setne al
 80951da:  mov DWORD PTR [ebp-0x14], ecx
 80951dd:  mov DWORD PTR [ebp-0xac], eax
 80951e3:  jmp 809504b
 80951e8:  mov esi, DWORD PTR [ebp-0x10]
 80951eb:  xor edi, edi
 80951ed:  test esi, esi
 80951ef:  mov DWORD PTR [ebp-0xcc], esi
 80951f5:  jne 80952d8
 80951fb:  mov ebx, 0x7fffffff
 8095200:  jmp 8095168
 8095205:  lea esi, [esi]
 8095208:  cmp DWORD PTR [ebp-0xcc], 0x80000002
 8095212:  mov ebx, 0x80000000
 8095217:  jge 8095168
 809521d:  mov ebx, DWORD PTR [ebp-0xcc]
 8095223:  add ebx, 0x1
 8095226:  jmp 8095168
 809522b:  nop
 809522c:  lea esi, [esi]
 8095230:  test eax, eax
 8095232:  setne al
 8095235:  movzx eax, al
 8095238:  cmp DWORD PTR [ebp-0xac], eax
 809523e:  jg 80951b1
 8095244:  lea esi, [esi]
 8095248:  mov esi, DWORD PTR [ebp-0x10]
 809524b:  add DWORD PTR [ebp-0xa0], esi
 8095251:  mov eax, DWORD PTR [ebp-0xc8]
 8095257:  sub DWORD PTR [ebp-0xa0], eax
 809525d:  mov edx, DWORD PTR [ebp+0x10]
 8095260:  mov ecx, DWORD PTR [ebp-0xa0]
 8095266:  mov DWORD PTR [edx], ecx
 8095268:  mov edx, DWORD PTR [ebp-0x44]
 809526b:  cmp DWORD PTR [ebp-0x7c], edx
 809526e:  jne 80954a1
 8095274:  mov eax, DWORD PTR [ebp-0x44]
 8095277:  mov ecx, DWORD PTR [ebp+0x8]
 809527a:  mov DWORD PTR [ecx], eax
 809527c:  mov eax, DWORD PTR [ebp-0x40]
 809527f:  mov DWORD PTR [ecx+0x4], eax
 8095282:  mov eax, DWORD PTR [ebp-0x3c]
 8095285:  mov DWORD PTR [ecx+0x8], eax
 8095288:  mov eax, DWORD PTR [ebp-0x38]
 809528b:  mov DWORD PTR [ecx+0xc], eax
 809528e:  mov eax, DWORD PTR [ebp-0x34]
 8095291:  mov DWORD PTR [ecx+0x10], eax
 8095294:  mov eax, DWORD PTR [ebp-0x30]
 8095297:  mov DWORD PTR [ecx+0x14], eax
 809529a:  mov eax, DWORD PTR [ebp-0x2c]
 809529d:  mov DWORD PTR [ecx+0x18], eax
 80952a0:  mov eax, DWORD PTR [ebp-0x28]
 80952a3:  mov DWORD PTR [ecx+0x1c], eax
 80952a6:  mov eax, DWORD PTR [ebp-0x24]
 80952a9:  mov DWORD PTR [ecx+0x20], eax
 80952ac:  mov eax, DWORD PTR [ebp-0x20]
 80952af:  mov DWORD PTR [ecx+0x24], eax
 80952b2:  mov eax, DWORD PTR [ebp-0x1c]
 80952b5:  mov DWORD PTR [ecx+0x28], eax
 80952b8:  mov eax, DWORD PTR [ebp-0xcc]
 80952be:  add esp, 0xcc
 80952c4:  pop ebx
 80952c5:  pop esi
 80952c6:  pop edi
 80952c7:  pop ebp
 80952c8:  ret
 80952c9:  lea esi, [esi]
 80952d0:  mov esi, ebx
 80952d2:  lea esi, [esi]
 80952d8:  mov eax, esi
 80952da:  sar eax, 0x1f
 80952dd:  or eax, 0x1
 80952e0:  add eax, edi
 80952e2:  cmp esi, eax
 80952e4:  je 8095380
 80952ea:  test esi, esi
 80952ec:  js 8095320
 80952ee:  mov eax, esi
 80952f0:  sub eax, edi
 80952f2:  sar eax, 1
 80952f4:  lea ebx, [eax+edi]
 80952f7:  lea edx, [ebp-0x44]
 80952fa:  lea ecx, [ebp-0x10]
 80952fd:  mov DWORD PTR [ebp-0x10], ebx
 8095300:  mov DWORD PTR [esp+0x4], edx
 8095304:  mov DWORD PTR [esp], ecx
 8095307:  call DWORD PTR [ebp+0xc]
 809530a:  test eax, eax
 809530c:  mov DWORD PTR [ebp-0x94], eax
 8095312:  je 80952d0
 8095314:  mov edi, ebx
 8095316:  mov ebx, esi
 8095318:  mov esi, ebx
 809531a:  jmp 80952d8
 809531c:  lea esi, [esi]
 8095320:  mov eax, edi
 8095322:  sub eax, esi
 8095324:  sar eax, 1
 8095326:  lea ebx, [eax+esi]
 8095329:  jmp 80952f7
 809532b:  nop
 809532c:  lea esi, [esi]
 8095330:  add esp, 0xcc
 8095336:  mov eax, 0xffffffff
 809533b:  pop ebx
 809533c:  pop esi
 809533d:  pop edi
 809533e:  pop ebp
 809533f:  ret
 8095340:  mov eax, 0x51eb851f
 8095345:  mov ebx, 0x1
 809534a:  imul DWORD PTR [ebp-0xa8]
 8095350:  mov eax, DWORD PTR [ebp-0xa8]
 8095356:  sar edx, 0x5
 8095359:  sar eax, 0x1f
 809535c:  sub edx, eax
 809535e:  imul eax, edx, 0x64
 8095361:  cmp DWORD PTR [ebp-0xa8], eax
 8095367:  jne 8094ed0
 809536d:  and edx, 0x3
 8095370:  xor ebx, ebx
 8095372:  cmp edx, 0x1
 8095375:  sete bl
 8095378:  jmp 8094ed0
 809537d:  lea esi, [esi]
 8095380:  mov eax, DWORD PTR [ebp-0x94]
 8095386:  test eax, eax
 8095388:  jne 8095069
 809538e:  test edi, edi
 8095390:  je 80953b3
 8095392:  lea eax, [ebp-0x10]
 8095395:  lea esi, [ebp-0x44]
 8095398:  mov DWORD PTR [ebp-0x10], edi
 809539b:  mov DWORD PTR [esp+0x4], esi
 809539f:  mov DWORD PTR [esp], eax
 80953a2:  call DWORD PTR [ebp+0xc]
 80953a5:  test eax, eax
 80953a7:  mov DWORD PTR [ebp-0x94], eax
 80953ad:  jne 8095069
 80953b3:  mov edx, DWORD PTR [ebp-0x10]
 80953b6:  mov DWORD PTR [ebp-0xcc], edx
 80953bc:  jmp 8095141
 80953c1:  lea esi, [esi]
 80953c8:  mov eax, DWORD PTR [ebp-0x24]
 80953cb:  cmp eax, DWORD PTR [ebp-0xb0]
 80953d1:  je 8095248
 80953d7:  mov esi, DWORD PTR [ebp-0xb0]
 80953dd:  test esi, esi
 80953df:  js 8095248
 80953e5:  test eax, eax
 80953e7:  js 8095248
 80953ed:  mov DWORD PTR [ebp-0x9c], 0x92c70
 80953f7:  jmp 809542b
 80953f9:  lea esi, [esi]
 8095400:  add edi, 0x2
 8095403:  mov eax, DWORD PTR [ebp-0x74]
 8095406:  add DWORD PTR [ebp-0x84], eax
 809540c:  cmp edi, 0x3
 809540f:  jne 8095449
 8095411:  add DWORD PTR [ebp-0x9c], 0x92c70
 809541b:  cmp DWORD PTR [ebp-0x9c], 0x100dc400
 8095425:  je 8095248
 809542b:  mov edx, DWORD PTR [ebp-0x9c]
 8095431:  mov edi, 0xffffffff
 8095436:  mov ecx, DWORD PTR [ebp-0x9c]
 809543c:  add edx, edx
 809543e:  neg ecx
 8095440:  mov DWORD PTR [ebp-0x74], edx
 8095443:  mov DWORD PTR [ebp-0x84], ecx
 8095449:  mov eax, DWORD PTR [ebp-0xcc]
 809544f:  add eax, DWORD PTR [ebp-0x84]
 8095455:  cmp DWORD PTR [ebp-0xcc], eax
 809545b:  mov DWORD PTR [ebp-0x18], eax
 809545e:  mov eax, edi
 8095460:  setle dl
 8095463:  shr eax, 0x1f
 8095466:  cmp dl, al
 8095468:  je 8095400
 809546a:  lea edx, [ebp-0x70]
 809546d:  lea ecx, [ebp-0x18]
 8095470:  mov DWORD PTR [esp+0x4], edx
 8095474:  mov DWORD PTR [esp], ecx
 8095477:  call DWORD PTR [ebp+0xc]
 809547a:  test eax, eax
 809547c:  mov edx, eax
 809547e:  je 8095520
 8095484:  mov eax, DWORD PTR [ebp-0xb0]
 809548a:  cmp DWORD PTR [ebp-0x50], eax
 809548d:  je 80955f8
 8095493:  mov edx, DWORD PTR [ebp-0x10]
 8095496:  mov DWORD PTR [ebp-0xcc], edx
 809549c:  jmp 8095400
 80954a1:  mov ecx, DWORD PTR [ebp-0xc0]
 80954a7:  xor eax, eax
 80954a9:  test ecx, ecx
 80954ab:  jne 80954b5
 80954ad:  xor eax, eax
 80954af:  cmp edx, 0x3c
 80954b2:  sete al
 80954b5:  mov esi, DWORD PTR [ebp-0xcc]
 80954bb:  mov ebx, eax
 80954bd:  add esi, DWORD PTR [ebp-0x7c]
 80954c0:  sub ebx, DWORD PTR [ebp-0xc0]
 80954c6:  lea eax, [ebp-0x44]
 80954c9:  lea edi, [ebx+esi]
 80954cc:  mov DWORD PTR [ebp-0x14], edi
 80954cf:  mov DWORD PTR [esp+0x4], eax
 80954d3:  lea eax, [ebp-0x14]
 80954d6:  mov DWORD PTR [esp], eax
 80954d9:  call DWORD PTR [ebp+0xc]
 80954dc:  cmp esi, edi
 80954de:  setg cl
 80954e1:  shr ebx, 0x1f
 80954e4:  xor ecx, ebx
 80954e6:  cmp DWORD PTR [ebp-0xcc], esi
 80954ec:  setg dl
 80954ef:  shr DWORD PTR [ebp-0x7c], 0x1f
 80954f3:  xor dl, BYTE PTR [ebp-0x7c]
 80954f6:  or edx, ecx
 80954f8:  test eax, eax
 80954fa:  sete al
 80954fd:  movzx edx, dl
 8095500:  movzx eax, al
 8095503:  or edx, eax
 8095505:  jne 8095330
 809550b:  mov edx, DWORD PTR [ebp-0x14]
 809550e:  mov DWORD PTR [ebp-0xcc], edx
 8095514:  jmp 8095274
 8095519:  lea esi, [esi]
 8095520:  mov esi, DWORD PTR [ebp-0x18]
 8095523:  mov DWORD PTR [ebp-0x78], 0x0
 809552a:  test esi, esi
 809552c:  je 8095484
 8095532:  lea esi, [esi]
 8095538:  mov eax, esi
 809553a:  sar eax, 0x1f
 809553d:  or eax, 0x1
 8095540:  add eax, DWORD PTR [ebp-0x78]
 8095543:  cmp esi, eax
 8095545:  je 8095590
 8095547:  test esi, esi
 8095549:  js 8095580
 809554b:  mov eax, esi
 809554d:  mov edx, DWORD PTR [ebp-0x78]
 8095550:  sub eax, DWORD PTR [ebp-0x78]
 8095553:  sar eax, 1
 8095555:  lea ebx, [eax+edx]
 8095558:  lea ecx, [ebp-0x70]
 809555b:  lea eax, [ebp-0x18]
 809555e:  mov DWORD PTR [ebp-0x18], ebx
 8095561:  mov DWORD PTR [esp+0x4], ecx
 8095565:  mov DWORD PTR [esp], eax
 8095568:  call DWORD PTR [ebp+0xc]
 809556b:  test eax, eax
 809556d:  mov edx, eax
 809556f:  je 8095576
 8095571:  mov DWORD PTR [ebp-0x78], ebx
 8095574:  mov ebx, esi
 8095576:  mov esi, ebx
 8095578:  jmp 8095538
 809557a:  lea esi, [esi]
 8095580:  mov eax, DWORD PTR [ebp-0x78]
 8095583:  sub eax, esi
 8095585:  sar eax, 1
 8095587:  lea ebx, [eax+esi]
 809558a:  jmp 8095558
 809558c:  lea esi, [esi]
 8095590:  test edx, edx
 8095592:  jne 8095484
 8095598:  mov ebx, DWORD PTR [ebp-0x78]
 809559b:  test ebx, ebx
 809559d:  je 8095484
 80955a3:  mov edx, DWORD PTR [ebp-0x78]
 80955a6:  lea ecx, [ebp-0x70]
 80955a9:  lea esi, [ebp-0x18]
 80955ac:  mov DWORD PTR [ebp-0x18], edx
 80955af:  mov DWORD PTR [esp+0x4], ecx
 80955b3:  mov DWORD PTR [esp], esi
 80955b6:  call DWORD PTR [ebp+0xc]
 80955b9:  jmp 8095484
 80955be:  mov ebx, DWORD PTR [ebp-0xc8]
 80955c4:  not ebx
 80955c6:  mov eax, ebx
 80955c8:  sar eax, 0x1a
 80955cb:  sub eax, ecx
 80955cd:  mov edx, eax
 80955cf:  sar edx, 0x1f
 80955d2:  xor eax, edx
 80955d4:  sub eax, edx
 80955d6:  cmp eax, 0x15
 80955d9:  jg 8095330
 80955df:  mov eax, ebx
 80955e1:  sub eax, DWORD PTR [ebp-0xc8]
 80955e7:  mov DWORD PTR [ebp-0xc8], ebx
 80955ed:  add DWORD PTR [ebp-0xa0], eax
 80955f3:  jmp 8095028
 80955f8:  mov ebx, DWORD PTR [ebp-0x5c]
 80955fb:  xor eax, eax
 80955fd:  mov edx, 0x51eb851f
 8095602:  mov ecx, ebx
 8095604:  sar ecx, 0x2
 8095607:  add ecx, 0x1db
 809560d:  test bl, 0x3
 8095610:  sete al
 8095613:  sub ecx, eax
 8095615:  mov eax, ecx
 8095617:  mov esi, ecx
 8095619:  imul edx
 809561b:  mov eax, ecx
 809561d:  sar eax, 0x1f
 8095620:  sub DWORD PTR [ebp-0xa8], ebx
 8095626:  sar edx, 0x3
 8095629:  sub edx, eax
 809562b:  lea eax, [edx+edx*4]
 809562e:  lea eax, [eax+eax*4]
 8095631:  sub esi, eax
 8095633:  mov eax, esi
 8095635:  mov esi, DWORD PTR [ebp-0x68]
 8095638:  shr eax, 0x1f
 809563b:  sub edx, eax
 809563d:  mov eax, DWORD PTR [ebp-0x6c]
 8095640:  sub DWORD PTR [ebp-0xbc], eax
 8095646:  mov eax, DWORD PTR [ebp-0x54]
 8095649:  sub DWORD PTR [ebp-0xb8], esi
 809564f:  neg eax
 8095651:  sub eax, ecx
 8095653:  imul ecx, DWORD PTR [ebp-0xa8], 0x16d
 809565d:  add eax, ecx
 809565f:  mov ecx, DWORD PTR [ebp-0x18]
 8095662:  add eax, DWORD PTR [ebp-0xa4]
 8095668:  add eax, edx
 809566a:  add eax, DWORD PTR [ebp-0x88]
 8095670:  sar edx, 0x2
 8095673:  sub eax, edx
 8095675:  mov edx, DWORD PTR [ebp-0xb8]
 809567b:  add eax, DWORD PTR [ebp-0x90]
 8095681:  sub eax, DWORD PTR [ebp-0x8c]
 8095687:  lea eax, [eax+eax*2]
 809568a:  lea eax, [edx+eax*8]
 809568d:  imul eax, eax, 0x3c
 8095690:  add eax, DWORD PTR [ebp-0xbc]
 8095696:  imul eax, eax, 0x3c
 8095699:  sub eax, DWORD PTR [ebp-0x70]
 809569c:  add eax, DWORD PTR [ebp-0xc0]
 80956a2:  lea ebx, [eax+ecx]
 80956a5:  cmp ecx, ebx
 80956a7:  setle dl
 80956aa:  shr eax, 0x1f
 80956ad:  cmp dl, al
 80956af:  jne 80956c9
 80956b1:  test ecx, ecx
 80956b3:  js 809574a
 80956b9:  cmp ecx, 0x7ffffffd
 80956bf:  mov ebx, 0x7fffffff
 80956c4:  jle 80956c9
 80956c6:  lea ebx, [ecx-0x1]
 80956c9:  lea ecx, [ebp-0x44]
 80956cc:  lea esi, [ebp-0x10]
 80956cf:  mov DWORD PTR [ebp-0x10], ebx
 80956d2:  mov DWORD PTR [esp+0x4], ecx
 80956d6:  mov DWORD PTR [esp], esi
 80956d9:  call DWORD PTR [ebp+0xc]
 80956dc:  test eax, eax
 80956de:  mov edx, eax
 80956e0:  je 80956f0
 80956e2:  mov eax, DWORD PTR [ebp-0x10]
 80956e5:  mov DWORD PTR [ebp-0xcc], eax
 80956eb:  jmp 8095248
 80956f0:  mov ebx, DWORD PTR [ebp-0x10]
 80956f3:  xor edi, edi
 80956f5:  test ebx, ebx
 80956f7:  mov DWORD PTR [ebp-0xcc], ebx
 80956fd:  je 8095248
 8095703:  mov eax, ebx
 8095705:  sar eax, 0x1f
 8095708:  or eax, 0x1
 809570b:  add eax, edi
 809570d:  cmp ebx, eax
 809570f:  je 8095763
 8095711:  test ebx, ebx
 8095713:  js 809573f
 8095715:  mov eax, ebx
 8095717:  sub eax, edi
 8095719:  sar eax, 1
 809571b:  lea esi, [eax+edi]
 809571e:  lea edx, [ebp-0x44]
 8095721:  lea ecx, [ebp-0x10]
 8095724:  mov DWORD PTR [ebp-0x10], esi
 8095727:  mov DWORD PTR [esp+0x4], edx
 809572b:  mov DWORD PTR [esp], ecx
 809572e:  call DWORD PTR [ebp+0xc]
 8095731:  test eax, eax
 8095733:  mov edx, eax
 8095735:  je 809573b
 8095737:  mov edi, esi
 8095739:  mov esi, ebx
 809573b:  mov ebx, esi
 809573d:  jmp 8095703
 809573f:  mov eax, edi
 8095741:  sub eax, ebx
 8095743:  sar eax, 1
 8095745:  lea esi, [eax+ebx]
 8095748:  jmp 809571e
 809574a:  cmp ecx, 0x80000002
 8095750:  mov ebx, 0x80000000
 8095755:  jge 80956c9
 809575b:  lea ebx, [ecx+0x1]
 809575e:  jmp 80956c9
 8095763:  test edx, edx
 8095765:  lea esi, [esi]
 8095768:  je 8095778
 809576a:  mov esi, DWORD PTR [ebp-0x10]
 809576d:  mov DWORD PTR [ebp-0xcc], esi
 8095773:  jmp 8095248
 8095778:  test edi, edi
 809577a:  je 80956e2
 8095780:  lea edx, [ebp-0x44]
 8095783:  lea ecx, [ebp-0x10]
 8095786:  mov DWORD PTR [ebp-0x10], edi
 8095789:  mov DWORD PTR [esp+0x4], edx
 809578d:  mov DWORD PTR [esp], ecx
 8095790:  call DWORD PTR [ebp+0xc]
 8095793:  jmp 809576a
 8095795:  lea esi, [esi]
 8095799:  lea edi, [edi]

080957a0 <mktime>:
 80957a0:  push ebp
 80957a1:  mov ebp, esp
 80957a3:  sub esp, 0xc
 80957a6:  call 806e1f0
 80957ab:  mov eax, DWORD PTR [ebp+0x8]
 80957ae:  mov DWORD PTR [esp+0x8], 0x80d2b2c
 80957b6:  mov DWORD PTR [esp+0x4], 0x806d430
 80957be:  mov DWORD PTR [esp], eax
 80957c1:  call 8094e40
 80957c6:  leave
 80957c7:  ret
 80957c8:  nop
 80957c9:  nop
 80957ca:  nop
 80957cb:  nop
 80957cc:  nop
 80957cd:  nop
 80957ce:  nop
 80957cf:  nop

080957d0 <__alloc_dir>:
 80957d0:  push ebp
 80957d1:  mov ebp, esp
 80957d3:  sub esp, 0x1c
 80957d6:  test dl, dl
 80957d8:  mov DWORD PTR [ebp-0x8], esi
 80957db:  mov esi, eax
 80957dd:  mov DWORD PTR [ebp-0x4], edi
 80957e0:  mov edi, ecx
 80957e2:  mov DWORD PTR [ebp-0xc], ebx
 80957e5:  mov BYTE PTR [ebp-0xd], dl
 80957e8:  je 8095850
 80957ea:  mov edx, DWORD PTR ds:0x80d2f34
 80957f0:  test edx, edx
 80957f2:  je 8095870
 80957f4:  mov eax, ds:0x80d2f34
 80957f9:  test eax, eax
 80957fb:  jle 8095850
 80957fd:  mov ebx, DWORD PTR [edi+0x34]
 8095800:  cmp ebx, 0x113
 8095806:  lea eax, [ebx+0x18]
 8095809:  jbe 8095910
 809580f:  mov DWORD PTR [esp], eax
 8095812:  call 804d6f0
 8095817:  test eax, eax
 8095819:  je 80958a8
 809581f:  mov DWORD PTR [eax], esi
 8095821:  mov DWORD PTR [eax+0x4], 0x0
 8095828:  mov DWORD PTR [eax+0x8], ebx
 809582b:  mov DWORD PTR [eax+0xc], 0x0
 8095832:  mov DWORD PTR [eax+0x10], 0x0
 8095839:  mov DWORD PTR [eax+0x14], 0x0
 8095840:  mov ebx, DWORD PTR [ebp-0xc]
 8095843:  mov esi, DWORD PTR [ebp-0x8]
 8095846:  mov edi, DWORD PTR [ebp-0x4]
 8095849:  mov esp, ebp
 809584b:  pop ebp
 809584c:  ret
 809584d:  lea esi, [esi]
 8095850:  mov DWORD PTR [esp+0x8], 0x1
 8095858:  mov DWORD PTR [esp+0x4], 0x2
 8095860:  mov DWORD PTR [esp], esi
 8095863:  call 804f350
 8095868:  test eax, eax
 809586a:  jns 80957fd
 809586c:  jmp 80958ad
 809586e:  xchg ax, ax
 8095870:  mov DWORD PTR [esp+0x8], 0x0
 8095878:  mov DWORD PTR [esp+0x4], 0x1
 8095880:  mov DWORD PTR [esp], eax
 8095883:  call 804f350
 8095888:  and eax, 0x1
 809588b:  cmp eax, 0x1
 809588e:  sbb eax, eax
 8095890:  or eax, 0x1
 8095893:  mov ds:0x80d2f34, eax
 8095898:  mov eax, ds:0x80d2f34
 809589d:  test eax, eax
 809589f:  jg 80957fd
 80958a5:  jmp 8095850
 80958a7:  nop
 80958a8:  cmp DWORD PTR [edi+0x34], ebx
 80958ab:  je 80958e0
 80958ad:  xor eax, eax
 80958af:  cmp BYTE PTR [ebp-0xd], 0x0
 80958b3:  nop
 80958b4:  lea esi, [esi]
 80958b8:  je 8095840
 80958ba:  mov edi, DWORD PTR gs:0x0
 80958c1:  mov ebx, esi
 80958c3:  mov edx, 0xffffffe8
 80958c9:  mov ecx, DWORD PTR [edi+edx]
 80958cc:  mov eax, 0x6
 80958d1:  int 0x80
 80958d3:  xor eax, eax
 80958d5:  mov DWORD PTR [edi+edx], ecx
 80958d8:  jmp 8095840
 80958dd:  lea esi, [esi]
 80958e0:  cmp ebx, 0x2000
 80958e6:  je 80958ad
 80958e8:  mov DWORD PTR [esp], 0x2018
 80958ef:  mov ebx, 0x2000
 80958f4:  call 804d6f0
 80958f9:  test eax, eax
 80958fb:  jne 809581f
 8095901:  lea esi, [esi]
 8095908:  jmp 80958ad
 809590a:  lea esi, [esi]
 8095910:  mov ebx, 0x2000
 8095915:  mov eax, 0x2018
 809591a:  lea esi, [esi]
 8095920:  jmp 809580f
 8095925:  lea esi, [esi]
 8095929:  lea edi, [edi]

08095930 <__opendir>:
 8095930:  push ebp
 8095931:  mov ebp, esp
 8095933:  push edi
 8095934:  push esi
 8095935:  push ebx
 8095936:  sub esp, 0x6c
 8095939:  mov eax, DWORD PTR [ebp+0x8]
 809593c:  cmp BYTE PTR [eax], 0x0
 809593f:  je 8095a98
 8095945:  mov DWORD PTR [esp+0x4], 0x98800
 809594d:  mov DWORD PTR [esp], eax
 8095950:  call 804f1fa
 8095955:  mov esi, eax
 8095957:  xor eax, eax
 8095959:  test esi, esi
 809595b:  js 80959d7
 809595d:  lea eax, [ebp-0x6c]
 8095960:  mov DWORD PTR [esp+0x8], eax
 8095964:  mov DWORD PTR [esp+0x4], esi
 8095968:  mov DWORD PTR [esp], 0x3
 809596f:  call 804f1b0
 8095974:  test eax, eax
 8095976:  js 8095ab2
 809597c:  mov ebx, DWORD PTR ds:0x80d2f34
 8095982:  test ebx, ebx
 8095984:  je 80959e0
 8095986:  mov ecx, DWORD PTR ds:0x80d2f34
 809598c:  test ecx, ecx
 809598e:  jle 8095a16
 8095994:  mov ebx, DWORD PTR [ebp-0x38]
 8095997:  cmp ebx, 0x113
 809599d:  lea eax, [ebx+0x18]
 80959a0:  jbe 8095ac2
 80959a6:  mov DWORD PTR [esp], eax
 80959a9:  call 804d6f0
 80959ae:  test eax, eax
 80959b0:  je 8095a38
 80959b6:  mov DWORD PTR [eax], esi
 80959b8:  mov DWORD PTR [eax+0x4], 0x0
 80959bf:  mov DWORD PTR [eax+0x8], ebx
 80959c2:  mov DWORD PTR [eax+0xc], 0x0
 80959c9:  mov DWORD PTR [eax+0x10], 0x0
 80959d0:  mov DWORD PTR [eax+0x14], 0x0
 80959d7:  add esp, 0x6c
 80959da:  pop ebx
 80959db:  pop esi
 80959dc:  pop edi
 80959dd:  pop ebp
 80959de:  ret
 80959df:  nop
 80959e0:  mov DWORD PTR [esp+0x8], 0x0
 80959e8:  mov DWORD PTR [esp+0x4], 0x1
 80959f0:  mov DWORD PTR [esp], esi
 80959f3:  call 804f350
 80959f8:  and eax, 0x1
 80959fb:  cmp eax, 0x1
 80959fe:  sbb eax, eax
 8095a00:  or eax, 0x1
 8095a03:  mov ds:0x80d2f34, eax
 8095a08:  mov ecx, DWORD PTR ds:0x80d2f34
 8095a0e:  test ecx, ecx
 8095a10:  jg 8095994
 8095a16:  mov DWORD PTR [esp+0x8], 0x1
 8095a1e:  mov DWORD PTR [esp+0x4], 0x2
 8095a26:  mov DWORD PTR [esp], esi
 8095a29:  call 804f350
 8095a2e:  test eax, eax
 8095a30:  jns 8095994
 8095a36:  jmp 8095a42
 8095a38:  cmp ebx, DWORD PTR [ebp-0x38]
 8095a3b:  nop
 8095a3c:  lea esi, [esi]
 8095a40:  je 8095a68
 8095a42:  mov edi, DWORD PTR gs:0x0
 8095a49:  mov ebx, esi
 8095a4b:  mov edx, 0xffffffe8
 8095a51:  mov ecx, DWORD PTR [edi+edx]
 8095a54:  mov eax, 0x6
 8095a59:  int 0x80
 8095a5b:  xor eax, eax
 8095a5d:  mov DWORD PTR [edi+edx], ecx
 8095a60:  jmp 80959d7
 8095a65:  lea esi, [esi]
 8095a68:  cmp ebx, 0x2000
 8095a6e:  je 8095a42
 8095a70:  mov DWORD PTR [esp], 0x2018
 8095a77:  mov ebx, 0x2000
 8095a7c:  call 804d6f0
 8095a81:  test eax, eax
 8095a83:  jne 80959b6
 8095a89:  lea esi, [esi]
 8095a90:  jmp 8095a42
 8095a92:  lea esi, [esi]
 8095a98:  mov eax, gs:0x0
 8095a9e:  mov edx, 0xffffffe8
 8095aa4:  mov DWORD PTR [eax+edx], 0x2
 8095aab:  xor eax, eax
 8095aad:  jmp 80959d7
 8095ab2:  mov ebx, esi
 8095ab4:  mov eax, 0x6
 8095ab9:  int 0x80
 8095abb:  xor eax, eax
 8095abd:  jmp 80959d7
 8095ac2:  mov ebx, 0x2000
 8095ac7:  mov eax, 0x2018
 8095acc:  jmp 80959a6
 8095ad1:  nop
 8095ad2:  nop
 8095ad3:  nop
 8095ad4:  nop
 8095ad5:  nop
 8095ad6:  nop
 8095ad7:  nop
 8095ad8:  nop
 8095ad9:  nop
 8095ada:  nop
 8095adb:  nop
 8095adc:  nop
 8095add:  nop
 8095ade:  nop
 8095adf:  nop

08095ae0 <__closedir>:
 8095ae0:  push ebp
 8095ae1:  mov ebp, esp
 8095ae3:  push ebx
 8095ae4:  sub esp, 0x4
 8095ae7:  mov eax, DWORD PTR [ebp+0x8]
 8095aea:  test eax, eax
 8095aec:  je 8095b08
 8095aee:  mov ebx, DWORD PTR [eax]
 8095af0:  mov DWORD PTR [esp], eax
 8095af3:  call 804b4a0
 8095af8:  mov DWORD PTR [ebp+0x8], ebx
 8095afb:  add esp, 0x4
 8095afe:  pop ebx
 8095aff:  pop ebp
 8095b00:  jmp 807314a
 8095b05:  lea esi, [esi]
 8095b08:  mov edx, 0xffffffe8
 8095b0e:  mov eax, gs:0x0
 8095b14:  mov DWORD PTR [eax+edx], 0x16
 8095b1b:  add esp, 0x4
 8095b1e:  mov eax, 0xffffffff
 8095b23:  pop ebx
 8095b24:  pop ebp
 8095b25:  ret
 8095b26:  nop
 8095b27:  nop
 8095b28:  nop
 8095b29:  nop
 8095b2a:  nop
 8095b2b:  nop
 8095b2c:  nop
 8095b2d:  nop
 8095b2e:  nop
 8095b2f:  nop

08095b30 <__readdir64>:
 8095b30:  push ebp
 8095b31:  mov eax, gs:0x0
 8095b37:  mov ecx, 0x1
 8095b3c:  mov ebp, esp
 8095b3e:  push edi
 8095b3f:  push esi
 8095b40:  push ebx
 8095b41:  sub esp, 0x8
 8095b44:  mov edi, 0xffffffe8
 8095b4a:  mov DWORD PTR [ebp-0x14], eax
 8095b4d:  mov ebx, DWORD PTR [ebp+0x8]
 8095b50:  mov edx, DWORD PTR [eax+edi]
 8095b53:  xor eax, eax
 8095b55:  mov DWORD PTR [ebp-0x10], edx
 8095b58:  cmp DWORD PTR gs:0xc, 0x0
 8095b60:  je 8095b63
 8095b62:  cmpxchg DWORD PTR [ebx+0x4], ecx
 8095b67:  jne 8095bf8
 8095b6d:  lea esi, [ebx+0x18]
 8095b70:  jmp 8095b92
 8095b72:  lea esi, [esi]
 8095b78:  lea ecx, [esi+edx]
 8095b7b:  movzx eax, WORD PTR [ecx+0x10]
 8095b7f:  lea eax, [edx+eax]
 8095b82:  mov DWORD PTR [ebx+0x10], eax
 8095b85:  mov eax, DWORD PTR [ecx+0x8]
 8095b88:  mov DWORD PTR [ebx+0x14], eax
 8095b8b:  mov eax, DWORD PTR [ecx+0x4]
 8095b8e:  or eax, DWORD PTR [ecx]
 8095b90:  jne 8095bd0
 8095b92:  mov edx, DWORD PTR [ebx+0x10]
 8095b95:  cmp edx, DWORD PTR [ebx+0xc]
 8095b98:  jb 8095b78
 8095b9a:  mov ecx, DWORD PTR [ebx+0x8]
 8095b9d:  mov edx, esi
 8095b9f:  mov eax, DWORD PTR [ebx]
 8095ba1:  call 80a0a40
 8095ba6:  cmp eax, 0x0
 8095ba9:  jle 8095bc0
 8095bab:  mov DWORD PTR [ebx+0xc], eax
 8095bae:  xor edx, edx
 8095bb0:  mov DWORD PTR [ebx+0x10], 0x0
 8095bb7:  jmp 8095b78
 8095bb9:  lea esi, [esi]
 8095bc0:  jne 8095beb
 8095bc2:  mov eax, DWORD PTR [ebp-0x10]
 8095bc5:  xor ecx, ecx
 8095bc7:  mov edx, DWORD PTR [ebp-0x14]
 8095bca:  mov DWORD PTR [edx+edi], eax
 8095bcd:  lea esi, [esi]
 8095bd0:  cmp DWORD PTR gs:0xc, 0x0
 8095bd8:  je 8095bdb
 8095bda:  sub DWORD PTR [ebx+0x4], 0x1
 8095bdf:  jne 8095c05
 8095be1:  add esp, 0x8
 8095be4:  mov eax, ecx
 8095be6:  pop ebx
 8095be7:  pop esi
 8095be8:  pop edi
 8095be9:  pop ebp
 8095bea:  ret
 8095beb:  mov eax, DWORD PTR [ebp-0x14]
 8095bee:  xor ecx, ecx
 8095bf0:  cmp DWORD PTR [eax+edi], 0x2
 8095bf4:  jne 8095bd0
 8095bf6:  jmp 8095bc2

08095bf8 <_L_lock_28>:
 8095bf8:  lea ecx, [ebx+0x4]
 8095bfb:  call 8050230
 8095c00:  jmp 8095b6d

08095c05 <_L_unlock_99>:
 8095c05:  lea eax, [ebx+0x4]
 8095c08:  call 8050260
 8095c0d:  jmp 8095be1
 8095c0f:  nop

08095c10 <__libc_lseek>:
 8095c10:  push ebx
 8095c11:  mov edx, DWORD PTR [esp+0x10]
 8095c15:  mov ecx, DWORD PTR [esp+0xc]
 8095c19:  mov ebx, DWORD PTR [esp+0x8]
 8095c1d:  mov eax, 0x13
 8095c22:  int 0x80
 8095c24:  pop ebx
 8095c25:  cmp eax, 0xfffff001
 8095c2a:  jae 8051470
 8095c30:  ret
 8095c31:  nop
 8095c32:  nop
 8095c33:  nop
 8095c34:  nop
 8095c35:  nop
 8095c36:  nop
 8095c37:  nop
 8095c38:  nop
 8095c39:  nop
 8095c3a:  nop
 8095c3b:  nop
 8095c3c:  nop
 8095c3d:  nop
 8095c3e:  nop
 8095c3f:  nop

08095c40 <__isatty>:
 8095c40:  push ebp
 8095c41:  mov ebp, esp
 8095c43:  sub esp, 0x44
 8095c46:  lea eax, [ebp-0x3c]
 8095c49:  mov DWORD PTR [esp+0x4], eax
 8095c4d:  mov eax, DWORD PTR [ebp+0x8]
 8095c50:  mov DWORD PTR [esp], eax
 8095c53:  call 8095c70
 8095c58:  leave
 8095c59:  test eax, eax
 8095c5b:  sete al
 8095c5e:  movzx eax, al
 8095c61:  ret
 8095c62:  nop
 8095c63:  nop
 8095c64:  nop
 8095c65:  nop
 8095c66:  nop
 8095c67:  nop
 8095c68:  nop
 8095c69:  nop
 8095c6a:  nop
 8095c6b:  nop
 8095c6c:  nop
 8095c6d:  nop
 8095c6e:  nop
 8095c6f:  nop

08095c70 <__tcgetattr>:
 8095c70:  push ebp
 8095c71:  mov ecx, 0x5401
 8095c76:  mov ebp, esp
 8095c78:  push esi
 8095c79:  push ebx
 8095c7a:  sub esp, 0x24
 8095c7d:  mov esi, DWORD PTR [ebp+0xc]
 8095c80:  lea edx, [ebp-0x2c]
 8095c83:  mov ebx, DWORD PTR [ebp+0x8]
 8095c86:  mov eax, 0x36
 8095c8b:  int 0x80
 8095c8d:  cmp eax, 0xfffff000
 8095c92:  mov ecx, eax
 8095c94:  ja 8095d13
 8095c96:  test eax, eax
 8095c98:  jne 8095d0a
 8095c9a:  mov eax, DWORD PTR [ebp-0x2c]
 8095c9d:  mov DWORD PTR [esi], eax
 8095c9f:  mov eax, DWORD PTR [ebp-0x28]
 8095ca2:  mov DWORD PTR [esi+0x4], eax
 8095ca5:  mov edx, DWORD PTR [ebp-0x24]
 8095ca8:  mov DWORD PTR [esi+0x8], edx
 8095cab:  mov eax, DWORD PTR [ebp-0x20]
 8095cae:  and edx, 0x100f
 8095cb4:  mov DWORD PTR [esi+0xc], eax
 8095cb7:  movzx eax, BYTE PTR [ebp-0x1c]
 8095cbb:  mov DWORD PTR [esi+0x34], edx
 8095cbe:  mov DWORD PTR [esi+0x38], edx
 8095cc1:  lea edx, [esi+0x11]
 8095cc4:  mov BYTE PTR [esi+0x10], al
 8095cc7:  mov eax, DWORD PTR [ebp-0x1b]
 8095cca:  mov DWORD PTR [esi+0x11], eax
 8095ccd:  mov eax, DWORD PTR [ebp-0x17]
 8095cd0:  mov DWORD PTR [edx+0x4], eax
 8095cd3:  mov eax, DWORD PTR [ebp-0x13]
 8095cd6:  mov DWORD PTR [edx+0x8], eax
 8095cd9:  mov eax, DWORD PTR [ebp-0xf]
 8095cdc:  mov DWORD PTR [edx+0xc], eax
 8095cdf:  movzx eax, WORD PTR [ebp-0xb]
 8095ce3:  mov WORD PTR [edx+0x10], ax
 8095ce7:  movzx eax, BYTE PTR [ebp-0x9]
 8095ceb:  mov BYTE PTR [edx+0x12], al
 8095cee:  lea eax, [esi+0x24]
 8095cf1:  mov DWORD PTR [esi+0x24], 0x0
 8095cf8:  mov DWORD PTR [eax+0x4], 0x0
 8095cff:  mov DWORD PTR [eax+0x8], 0x0
 8095d06:  mov BYTE PTR [eax+0xc], 0x0
 8095d0a:  add esp, 0x24
 8095d0d:  mov eax, ecx
 8095d0f:  pop ebx
 8095d10:  pop esi
 8095d11:  pop ebp
 8095d12:  ret
 8095d13:  mov edx, 0xffffffe8
 8095d19:  neg ecx
 8095d1b:  mov eax, gs:0x0
 8095d21:  mov DWORD PTR [eax+edx], ecx
 8095d24:  mov ecx, 0xffffffff
 8095d29:  jmp 8095d0a
 8095d2b:  nop
 8095d2c:  nop
 8095d2d:  nop
 8095d2e:  nop
 8095d2f:  nop

08095d30 <openaux>:
 8095d30:  push ebp
 8095d31:  mov ecx, 0x1
 8095d36:  mov ebp, esp
 8095d38:  sub esp, 0x24
 8095d3b:  mov DWORD PTR [ebp-0x8], esi
 8095d3e:  mov esi, DWORD PTR [ebp+0x8]
 8095d41:  mov DWORD PTR [ebp-0xc], ebx
 8095d44:  mov DWORD PTR [ebp-0x4], edi
 8095d47:  mov ebx, DWORD PTR [esi]
 8095d49:  mov edi, DWORD PTR [esi+0x4]
 8095d4c:  mov eax, DWORD PTR [ebx+0x18]
 8095d4f:  mov DWORD PTR [ebp-0x14], eax
 8095d52:  mov eax, DWORD PTR [esi+0x8]
 8095d55:  mov DWORD PTR [ebp-0x10], eax
 8095d58:  movzx eax, BYTE PTR [ebx+0x194]
 8095d5f:  and eax, 0x3
 8095d62:  je 8095d67
 8095d64:  movzx ecx, al
 8095d67:  mov eax, DWORD PTR [ebp-0x14]
 8095d6a:  mov edx, DWORD PTR [esi+0x10]
 8095d6d:  mov DWORD PTR [esp], ecx
 8095d70:  xor ecx, ecx
 8095d72:  mov DWORD PTR [esp+0x4], edi
 8095d76:  mov DWORD PTR [esp+0xc], eax
 8095d7a:  mov eax, DWORD PTR [ebp-0x10]
 8095d7d:  mov DWORD PTR [esp+0x8], eax
 8095d81:  mov eax, ebx
 8095d83:  call 80776f0
 8095d88:  mov DWORD PTR [esi+0x14], eax
 8095d8b:  sub esp, 0x10
 8095d8e:  mov ebx, DWORD PTR [ebp-0xc]
 8095d91:  mov esi, DWORD PTR [ebp-0x8]
 8095d94:  mov edi, DWORD PTR [ebp-0x4]
 8095d97:  mov esp, ebp
 8095d99:  pop ebp
 8095d9a:  ret
 8095d9b:  nop
 8095d9c:  lea esi, [esi]

08095da0 <_dl_build_local_scope>:
 8095da0:  push ebp
 8095da1:  mov ebp, esp
 8095da3:  push edi
 8095da4:  push esi
 8095da5:  push ebx
 8095da6:  sub esp, 0x40
 8095da9:  mov DWORD PTR [ebp-0x4c], eax
 8095dac:  mov DWORD PTR [eax], edx
 8095dae:  add eax, 0x4
 8095db1:  mov DWORD PTR [ebp-0x48], eax
 8095db4:  movzx eax, BYTE PTR [edx+0x194]
 8095dbb:  and eax, 0x9f
 8095dbe:  or eax, 0x20
 8095dc1:  mov BYTE PTR [edx+0x194], al
 8095dc7:  mov eax, DWORD PTR [edx+0x1f0]
 8095dcd:  test eax, eax
 8095dcf:  je 80961ac
 8095dd5:  lea edx, [eax+0x4]
 8095dd8:  mov DWORD PTR [ebp-0x44], edx
 8095ddb:  mov edx, DWORD PTR [eax+0x4]
 8095dde:  test edx, edx
 8095de0:  jne 8095df9
 8095de2:  jmp 80961ac
 8095de7:  nop
 8095de8:  add DWORD PTR [ebp-0x44], 0x4
 8095dec:  mov eax, DWORD PTR [ebp-0x44]
 8095def:  mov edx, DWORD PTR [eax]
 8095df1:  test edx, edx
 8095df3:  je 80961ac
 8095df9:  test BYTE PTR [edx+0x194], 0x60
 8095e00:  jne 8095de8
 8095e02:  mov eax, DWORD PTR [ebp-0x48]
 8095e05:  mov DWORD PTR [eax], edx
 8095e07:  add eax, 0x4
 8095e0a:  mov DWORD PTR [ebp-0x40], eax
 8095e0d:  movzx eax, BYTE PTR [edx+0x194]
 8095e14:  and eax, 0x9f
 8095e17:  or eax, 0x20
 8095e1a:  mov BYTE PTR [edx+0x194], al
 8095e20:  mov eax, DWORD PTR [edx+0x1f0]
 8095e26:  test eax, eax
 8095e28:  je 8096195
 8095e2e:  lea edx, [eax+0x4]
 8095e31:  mov DWORD PTR [ebp-0x3c], edx
 8095e34:  mov edx, DWORD PTR [eax+0x4]
 8095e37:  test edx, edx
 8095e39:  jne 8095e51
 8095e3b:  jmp 8096195
 8095e40:  add DWORD PTR [ebp-0x3c], 0x4
 8095e44:  mov eax, DWORD PTR [ebp-0x3c]
 8095e47:  mov edx, DWORD PTR [eax]
 8095e49:  test edx, edx
 8095e4b:  je 8096195
 8095e51:  test BYTE PTR [edx+0x194], 0x60
 8095e58:  jne 8095e40
 8095e5a:  mov eax, DWORD PTR [ebp-0x40]
 8095e5d:  mov DWORD PTR [eax], edx
 8095e5f:  add eax, 0x4
 8095e62:  mov DWORD PTR [ebp-0x38], eax
 8095e65:  movzx eax, BYTE PTR [edx+0x194]
 8095e6c:  and eax, 0x9f
 8095e6f:  or eax, 0x20
 8095e72:  mov BYTE PTR [edx+0x194], al
 8095e78:  mov eax, DWORD PTR [edx+0x1f0]
 8095e7e:  test eax, eax
 8095e80:  je 809617e
 8095e86:  lea edx, [eax+0x4]
 8095e89:  mov DWORD PTR [ebp-0x34], edx
 8095e8c:  mov edx, DWORD PTR [eax+0x4]
 8095e8f:  test edx, edx
 8095e91:  jne 8095ea9
 8095e93:  jmp 809617e
 8095e98:  add DWORD PTR [ebp-0x34], 0x4
 8095e9c:  mov eax, DWORD PTR [ebp-0x34]
 8095e9f:  mov edx, DWORD PTR [eax]
 8095ea1:  test edx, edx
 8095ea3:  je 809617e
 8095ea9:  test BYTE PTR [edx+0x194], 0x60
 8095eb0:  jne 8095e98
 8095eb2:  mov eax, DWORD PTR [ebp-0x38]
 8095eb5:  mov DWORD PTR [eax], edx
 8095eb7:  add eax, 0x4
 8095eba:  mov DWORD PTR [ebp-0x30], eax
 8095ebd:  movzx eax, BYTE PTR [edx+0x194]
 8095ec4:  and eax, 0x9f
 8095ec7:  or eax, 0x20
 8095eca:  mov BYTE PTR [edx+0x194], al
 8095ed0:  mov eax, DWORD PTR [edx+0x1f0]
 8095ed6:  test eax, eax
 8095ed8:  je 809615b
 8095ede:  lea edx, [eax+0x4]
 8095ee1:  mov DWORD PTR [ebp-0x2c], edx
 8095ee4:  mov edx, DWORD PTR [eax+0x4]
 8095ee7:  test edx, edx
 8095ee9:  jne 8095f01
 8095eeb:  jmp 809615b
 8095ef0:  add DWORD PTR [ebp-0x2c], 0x4
 8095ef4:  mov eax, DWORD PTR [ebp-0x2c]
 8095ef7:  mov edx, DWORD PTR [eax]
 8095ef9:  test edx, edx
 8095efb:  je 809615b
 8095f01:  test BYTE PTR [edx+0x194], 0x60
 8095f08:  jne 8095ef0
 8095f0a:  mov eax, DWORD PTR [ebp-0x30]
 8095f0d:  mov DWORD PTR [eax], edx
 8095f0f:  add eax, 0x4
 8095f12:  mov DWORD PTR [ebp-0x28], eax
 8095f15:  movzx eax, BYTE PTR [edx+0x194]
 8095f1c:  and eax, 0x9f
 8095f1f:  or eax, 0x20
 8095f22:  mov BYTE PTR [edx+0x194], al
 8095f28:  mov eax, DWORD PTR [edx+0x1f0]
 8095f2e:  test eax, eax
 8095f30:  je 8096138
 8095f36:  lea edx, [eax+0x4]
 8095f39:  mov DWORD PTR [ebp-0x24], edx
 8095f3c:  mov edx, DWORD PTR [eax+0x4]
 8095f3f:  test edx, edx
 8095f41:  jne 8095f59
 8095f43:  jmp 8096138
 8095f48:  add DWORD PTR [ebp-0x24], 0x4
 8095f4c:  mov eax, DWORD PTR [ebp-0x24]
 8095f4f:  mov edx, DWORD PTR [eax]
 8095f51:  test edx, edx
 8095f53:  je 8096138
 8095f59:  test BYTE PTR [edx+0x194], 0x60
 8095f60:  jne 8095f48
 8095f62:  mov eax, DWORD PTR [ebp-0x28]
 8095f65:  mov DWORD PTR [eax], edx
 8095f67:  add eax, 0x4
 8095f6a:  mov DWORD PTR [ebp-0x20], eax
 8095f6d:  movzx eax, BYTE PTR [edx+0x194]
 8095f74:  and eax, 0x9f
 8095f77:  or eax, 0x20
 8095f7a:  mov BYTE PTR [edx+0x194], al
 8095f80:  mov eax, DWORD PTR [edx+0x1f0]
 8095f86:  test eax, eax
 8095f88:  je 8096115
 8095f8e:  lea edx, [eax+0x4]
 8095f91:  mov DWORD PTR [ebp-0x1c], edx
 8095f94:  mov edx, DWORD PTR [eax+0x4]
 8095f97:  test edx, edx
 8095f99:  jne 8095fb1
 8095f9b:  jmp 8096115
 8095fa0:  add DWORD PTR [ebp-0x1c], 0x4
 8095fa4:  mov eax, DWORD PTR [ebp-0x1c]
 8095fa7:  mov edx, DWORD PTR [eax]
 8095fa9:  test edx, edx
 8095fab:  je 8096115
 8095fb1:  test BYTE PTR [edx+0x194], 0x60
 8095fb8:  jne 8095fa0
 8095fba:  mov eax, DWORD PTR [ebp-0x20]
 8095fbd:  mov DWORD PTR [eax], edx
 8095fbf:  add eax, 0x4
 8095fc2:  mov DWORD PTR [ebp-0x18], eax
 8095fc5:  movzx eax, BYTE PTR [edx+0x194]
 8095fcc:  and eax, 0x9f
 8095fcf:  or eax, 0x20
 8095fd2:  mov BYTE PTR [edx+0x194], al
 8095fd8:  mov eax, DWORD PTR [edx+0x1f0]
 8095fde:  test eax, eax
 8095fe0:  je 80960f2
 8095fe6:  lea edx, [eax+0x4]
 8095fe9:  mov DWORD PTR [ebp-0x14], edx
 8095fec:  mov edx, DWORD PTR [eax+0x4]
 8095fef:  test edx, edx
 8095ff1:  jne 8096009
 8095ff3:  jmp 80960f2
 8095ff8:  add DWORD PTR [ebp-0x14], 0x4
 8095ffc:  mov eax, DWORD PTR [ebp-0x14]
 8095fff:  mov edx, DWORD PTR [eax]
 8096001:  test edx, edx
 8096003:  je 80960f2
 8096009:  test BYTE PTR [edx+0x194], 0x60
 8096010:  jne 8095ff8
 8096012:  mov eax, DWORD PTR [ebp-0x18]
 8096015:  mov DWORD PTR [eax], edx
 8096017:  add eax, 0x4
 809601a:  mov DWORD PTR [ebp-0x10], eax
 809601d:  movzx eax, BYTE PTR [edx+0x194]
 8096024:  and eax, 0x9f
 8096027:  or eax, 0x20
 809602a:  mov BYTE PTR [edx+0x194], al
 8096030:  mov eax, DWORD PTR [edx+0x1f0]
 8096036:  test eax, eax
 8096038:  je 80960cf
 809603e:  mov edx, DWORD PTR [eax+0x4]
 8096041:  lea edi, [eax+0x4]
 8096044:  test edx, edx
 8096046:  jne 8096059
 8096048:  jmp 80960cf
 809604d:  lea esi, [esi]
 8096050:  add edi, 0x4
 8096053:  mov edx, DWORD PTR [edi]
 8096055:  test edx, edx
 8096057:  je 80960cf
 8096059:  test BYTE PTR [edx+0x194], 0x60
 8096060:  jne 8096050
 8096062:  mov eax, DWORD PTR [ebp-0x10]
 8096065:  mov DWORD PTR [eax], edx
 8096067:  mov esi, eax
 8096069:  movzx eax, BYTE PTR [edx+0x194]
 8096070:  add esi, 0x4
 8096073:  and eax, 0x9f
 8096076:  or eax, 0x20
 8096079:  mov BYTE PTR [edx+0x194], al
 809607f:  mov eax, DWORD PTR [edx+0x1f0]
 8096085:  test eax, eax
 8096087:  je 80960bd
 8096089:  mov edx, DWORD PTR [eax+0x4]
 809608c:  lea ebx, [eax+0x4]
 809608f:  test edx, edx
 8096091:  jne 80960a1
 8096093:  jmp 80960bd
 8096095:  lea esi, [esi]
 8096098:  add ebx, 0x4
 809609b:  mov edx, DWORD PTR [ebx]
 809609d:  test edx, edx
 809609f:  je 80960bd
 80960a1:  test BYTE PTR [edx+0x194], 0x60
 80960a8:  jne 8096098
 80960aa:  mov eax, esi
 80960ac:  add ebx, 0x4
 80960af:  call 8095da0
 80960b4:  mov edx, DWORD PTR [ebx]
 80960b6:  test edx, edx
 80960b8:  lea esi, [esi+eax*4]
 80960bb:  jne 80960a1
 80960bd:  add edi, 0x4
 80960c0:  mov edx, DWORD PTR [edi]
 80960c2:  sub esi, DWORD PTR [ebp-0x10]
 80960c5:  and esi, 0xfc
 80960c8:  add DWORD PTR [ebp-0x10], esi
 80960cb:  test edx, edx
 80960cd:  jne 8096059
 80960cf:  mov edx, DWORD PTR [ebp-0x18]
 80960d2:  sub DWORD PTR [ebp-0x10], edx
 80960d5:  and DWORD PTR [ebp-0x10], 0xfc
 80960d9:  mov eax, DWORD PTR [ebp-0x10]
 80960dc:  add DWORD PTR [ebp-0x14], 0x4
 80960e0:  add edx, eax
 80960e2:  mov eax, DWORD PTR [ebp-0x14]
 80960e5:  mov DWORD PTR [ebp-0x18], edx
 80960e8:  mov edx, DWORD PTR [eax]
 80960ea:  test edx, edx
 80960ec:  jne 8096009
 80960f2:  mov edx, DWORD PTR [ebp-0x20]
 80960f5:  sub DWORD PTR [ebp-0x18], edx
 80960f8:  and DWORD PTR [ebp-0x18], 0xfc
 80960fc:  mov eax, DWORD PTR [ebp-0x18]
 80960ff:  add DWORD PTR [ebp-0x1c], 0x4
 8096103:  add edx, eax
 8096105:  mov eax, DWORD PTR [ebp-0x1c]
 8096108:  mov DWORD PTR [ebp-0x20], edx
 809610b:  mov edx, DWORD PTR [eax]
 809610d:  test edx, edx
 809610f:  jne 8095fb1
 8096115:  mov edx, DWORD PTR [ebp-0x28]
 8096118:  sub DWORD PTR [ebp-0x20], edx
 809611b:  and DWORD PTR [ebp-0x20], 0xfc
 809611f:  mov eax, DWORD PTR [ebp-0x20]
 8096122:  add DWORD PTR [ebp-0x24], 0x4
 8096126:  add edx, eax
 8096128:  mov eax, DWORD PTR [ebp-0x24]
 809612b:  mov DWORD PTR [ebp-0x28], edx
 809612e:  mov edx, DWORD PTR [eax]
 8096130:  test edx, edx
 8096132:  jne 8095f59
 8096138:  mov edx, DWORD PTR [ebp-0x30]
 809613b:  sub DWORD PTR [ebp-0x28], edx
 809613e:  and DWORD PTR [ebp-0x28], 0xfc
 8096142:  mov eax, DWORD PTR [ebp-0x28]
 8096145:  add DWORD PTR [ebp-0x2c], 0x4
 8096149:  add edx, eax
 809614b:  mov eax, DWORD PTR [ebp-0x2c]
 809614e:  mov DWORD PTR [ebp-0x30], edx
 8096151:  mov edx, DWORD PTR [eax]
 8096153:  test edx, edx
 8096155:  jne 8095f01
 809615b:  mov edx, DWORD PTR [ebp-0x38]
 809615e:  sub DWORD PTR [ebp-0x30], edx
 8096161:  and DWORD PTR [ebp-0x30], 0xfc
 8096165:  mov eax, DWORD PTR [ebp-0x30]
 8096168:  add DWORD PTR [ebp-0x34], 0x4
 809616c:  add edx, eax
 809616e:  mov eax, DWORD PTR [ebp-0x34]
 8096171:  mov DWORD PTR [ebp-0x38], edx
 8096174:  mov edx, DWORD PTR [eax]
 8096176:  test edx, edx
 8096178:  jne 8095ea9
 809617e:  mov edx, DWORD PTR [ebp-0x40]
 8096181:  sub DWORD PTR [ebp-0x38], edx
 8096184:  and DWORD PTR [ebp-0x38], 0xfc
 8096188:  mov eax, DWORD PTR [ebp-0x38]
 809618b:  add edx, eax
 809618d:  mov DWORD PTR [ebp-0x40], edx
 8096190:  jmp 8095e40
 8096195:  mov edx, DWORD PTR [ebp-0x48]
 8096198:  sub DWORD PTR [ebp-0x40], edx
 809619b:  and DWORD PTR [ebp-0x40], 0xfc
 809619f:  mov eax, DWORD PTR [ebp-0x40]
 80961a2:  add edx, eax
 80961a4:  mov DWORD PTR [ebp-0x48], edx
 80961a7:  jmp 8095de8
 80961ac:  mov edx, DWORD PTR [ebp-0x4c]
 80961af:  sub DWORD PTR [ebp-0x48], edx
 80961b2:  sar DWORD PTR [ebp-0x48], 0x2
 80961b6:  mov eax, DWORD PTR [ebp-0x48]
 80961b9:  add esp, 0x40
 80961bc:  pop ebx
 80961bd:  pop esi
 80961be:  pop edi
 80961bf:  pop ebp
 80961c0:  ret
 80961c1:  jmp 80961d0
 80961c3:  nop
 80961c4:  nop
 80961c5:  nop
 80961c6:  nop
 80961c7:  nop
 80961c8:  nop
 80961c9:  nop
 80961ca:  nop
 80961cb:  nop
 80961cc:  nop
 80961cd:  nop
 80961ce:  nop
 80961cf:  nop

080961d0 <_dl_map_object_deps>:
 80961d0:  push ebp
 80961d1:  mov ebp, esp
 80961d3:  push edi
 80961d4:  push esi
 80961d5:  push ebx
 80961d6:  sub esp, 0xac
 80961dc:  mov DWORD PTR [ebp-0x98], eax
 80961e2:  lea eax, [ecx+ecx*2]
 80961e5:  lea eax, [eax*4+0x28]
 80961ec:  sub esp, eax
 80961ee:  mov eax, DWORD PTR [ebp-0x98]
 80961f4:  mov DWORD PTR [ebp-0x9c], edx
 80961fa:  mov edx, DWORD PTR [ebp-0x98]
 8096200:  lea edi, [esp+0x1f]
 8096204:  and edi, 0xf0
 8096207:  mov DWORD PTR [ebp-0x80], edi
 809620a:  mov DWORD PTR [edi+0x4], eax
 809620d:  lea eax, [edi+0xc]
 8096210:  mov DWORD PTR [edi], 0x0
 8096216:  mov DWORD PTR [edi+0x8], eax
 8096219:  movzx eax, BYTE PTR [edx+0x194]
 8096220:  and eax, 0x9f
 8096223:  or eax, 0x20
 8096226:  test ecx, ecx
 8096228:  mov BYTE PTR [edx+0x194], al
 809622e:  mov eax, 0x1
 8096233:  mov DWORD PTR [ebp-0x4c], 0x1
 809623a:  je 8096281
 809623c:  lea ebx, [edi+0x18]
 809623f:  xor esi, esi
 8096241:  lea esi, [esi]
 8096248:  mov eax, DWORD PTR [ebp-0x9c]
 809624e:  mov DWORD PTR [ebx-0xc], 0x0
 8096255:  mov DWORD PTR [ebx-0x4], ebx
 8096258:  mov edx, DWORD PTR [eax+esi*4]
 809625b:  add esi, 0x1
 809625e:  mov DWORD PTR [ebx-0x8], edx
 8096261:  movzx eax, BYTE PTR [edx+0x194]
 8096268:  add ebx, 0xc
 809626b:  and eax, 0x9f
 809626e:  or eax, 0x20
 8096271:  cmp ecx, esi
 8096273:  mov BYTE PTR [edx+0x194], al
 8096279:  ja 8096248
 809627b:  lea eax, [ecx+0x1]
 809627e:  mov DWORD PTR [ebp-0x4c], eax
 8096281:  mov edx, DWORD PTR gs:0x0
 8096288:  lea eax, [eax+eax*2]
 809628b:  mov ecx, 0xffffffe8
 8096291:  lea eax, [edi+eax*4-0xc]
 8096295:  mov esi, 0xffffffe8
 809629b:  mov DWORD PTR [ebp-0x7c], eax
 809629e:  mov DWORD PTR [ebp-0xa8], edx
 80962a4:  mov ecx, DWORD PTR [edx+ecx]
 80962a7:  mov DWORD PTR [eax+0x8], 0x0
 80962ae:  mov DWORD PTR [edx+esi], 0x0
 80962b5:  mov edx, edi
 80962b7:  mov DWORD PTR [ebp-0x14], 0x0
 80962be:  mov DWORD PTR [ebp-0x78], ecx
 80962c1:  mov DWORD PTR [ebp-0x40], edi
 80962c4:  mov eax, DWORD PTR [ebp-0x40]
 80962c7:  mov DWORD PTR [edx], 0x1
 80962cd:  mov eax, DWORD PTR [eax+0x4]
 80962d0:  mov edi, DWORD PTR [eax+0x15c]
 80962d6:  mov DWORD PTR [ebp-0x6c], eax
 80962d9:  test edi, edi
 80962db:  je 8096bac
 80962e1:  mov edx, DWORD PTR [ebp-0x6c]
 80962e4:  mov DWORD PTR [ebp-0x68], 0x0
 80962eb:  mov ebx, DWORD PTR [edx+0x24]
 80962ee:  test ebx, ebx
 80962f0:  je 8096c01
 80962f6:  mov ecx, DWORD PTR [ebp-0x6c]
 80962f9:  mov esi, DWORD PTR [ebp+0x8]
 80962fc:  mov eax, DWORD PTR [ecx+0x34]
 80962ff:  mov eax, DWORD PTR [eax+0x4]
 8096302:  mov DWORD PTR [ebp-0x2c], esi
 8096305:  mov esi, DWORD PTR [ecx+0x8]
 8096308:  mov DWORD PTR [ebp-0x30], ecx
 809630b:  mov DWORD PTR [ebp-0x60], eax
 809630e:  mov DWORD PTR [ebp-0x24], eax
 8096311:  mov eax, DWORD PTR [ebp+0xc]
 8096314:  mov DWORD PTR [ebp-0x28], eax
 8096317:  mov eax, DWORD PTR [esi]
 8096319:  test eax, eax
 809631b:  je 8096c1d
 8096321:  mov edx, DWORD PTR [ebp-0x40]
 8096324:  mov DWORD PTR [ebp-0x64], 0x0
 809632b:  mov DWORD PTR [ebp-0x5c], edx
 809632e:  xchg ax, ax
 8096330:  cmp eax, 0x1
 8096333:  jne 8096595
 8096339:  mov ebx, DWORD PTR [ebp-0x60]
 809633c:  add ebx, DWORD PTR [esi+0x4]
 809633f:  mov DWORD PTR [esp+0x4], 0x24
 8096347:  mov DWORD PTR [esp], ebx
 809634a:  call 806ae20
 809634f:  test eax, eax
 8096351:  jne 8096457
 8096357:  mov eax, ebx
 8096359:  lea edx, [ebp-0x30]
 809635c:  mov DWORD PTR [ebp-0x20], eax
 809635f:  lea ecx, [ebp-0xd]
 8096362:  mov DWORD PTR [esp+0x4], edx
 8096366:  lea eax, [ebp-0x18]
 8096369:  lea edx, [ebp-0x14]
 809636c:  mov DWORD PTR [esp], 0x8095d30
 8096373:  call 807bf90
 8096378:  mov ebx, DWORD PTR [ebp-0x14]
 809637b:  sub esp, 0x8
 809637e:  test ebx, ebx
 8096380:  mov edi, eax
 8096382:  jne 80966e0
 8096388:  mov ecx, DWORD PTR [ebp-0x1c]
 809638b:  test BYTE PTR [ecx+0x194], 0x60
 8096392:  je 8096518
 8096398:  mov eax, DWORD PTR [ebp-0x68]
 809639b:  test eax, eax
 809639d:  je 80963ae
 809639f:  mov edx, DWORD PTR [ebp-0x64]
 80963a2:  mov eax, DWORD PTR [ebp-0x68]
 80963a5:  mov DWORD PTR [eax+edx*4], ecx
 80963a8:  add edx, 0x1
 80963ab:  mov DWORD PTR [ebp-0x64], edx
 80963ae:  add esi, 0x8
 80963b1:  mov eax, DWORD PTR [esi]
 80963b3:  test eax, eax
 80963b5:  jne 8096330
 80963bb:  mov eax, DWORD PTR [ebp-0x68]
 80963be:  test eax, eax
 80963c0:  je 809642b
 80963c2:  mov edx, DWORD PTR [ebp-0x64]
 80963c5:  mov ecx, DWORD PTR [ebp-0x68]
 80963c8:  mov ebx, edx
 80963ca:  add ebx, 0x1
 80963cd:  mov DWORD PTR [ecx+edx*4], 0x0
 80963d4:  lea eax, [ebx*8+0x4]
 80963db:  mov DWORD PTR [esp], eax
 80963de:  call 804d6f0
 80963e3:  test eax, eax
 80963e5:  mov esi, eax
 80963e7:  je 80970e0
 80963ed:  mov eax, DWORD PTR [ebp-0x6c]
 80963f0:  shl ebx, 0x2
 80963f3:  mov edx, DWORD PTR [ebp-0x68]
 80963f6:  mov DWORD PTR [esi], eax
 80963f8:  lea eax, [esi+0x4]
 80963fb:  mov DWORD PTR [esp+0x4], edx
 80963ff:  mov DWORD PTR [esp+0x8], ebx
 8096403:  mov DWORD PTR [esp], eax
 8096406:  call 804efc0
 809640b:  mov ecx, DWORD PTR [ebp-0x64]
 809640e:  mov DWORD PTR [esp+0x8], ebx
 8096412:  mov DWORD PTR [esp+0x4], esi
 8096416:  lea eax, [esi+ecx*4+0x8]
 809641a:  mov DWORD PTR [esp], eax
 809641d:  call 804efc0
 8096422:  mov eax, DWORD PTR [ebp-0x6c]
 8096425:  mov DWORD PTR [eax+0x1f0], esi
 809642b:  mov edx, DWORD PTR [ebp-0x40]
 809642e:  mov edi, DWORD PTR [edx]
 8096430:  test edi, edi
 8096432:  je 80962c4
 8096438:  mov ecx, DWORD PTR [ebp-0x40]
 809643b:  mov ecx, DWORD PTR [ecx+0x8]
 809643e:  test ecx, ecx
 8096440:  mov DWORD PTR [ebp-0x40], ecx
 8096443:  je 8096c29
 8096449:  mov esi, DWORD PTR [ecx]
 809644b:  test esi, esi
 809644d:  jne 8096438
 809644f:  mov edx, DWORD PTR [ebp-0x40]
 8096452:  jmp 80962c4
 8096457:  mov DWORD PTR [esp+0x4], 0x0
 809645f:  mov DWORD PTR [esp], eax
 8096462:  call 8075b30
 8096467:  test eax, eax
 8096469:  mov DWORD PTR [ebp-0x58], eax
 809646c:  je 8096357
 8096472:  mov eax, ds:0x80d0cd8
 8096477:  test eax, eax
 8096479:  jne 8096b9a
 809647f:  mov DWORD PTR [esp], ebx
 8096482:  call 804eea0
 8096487:  mov ecx, DWORD PTR [ebp-0x6c]
 809648a:  mov edi, eax
 809648c:  mov eax, DWORD PTR [ecx+0x1a8]
 8096492:  test eax, eax
 8096494:  je 8096557
 809649a:  cmp eax, 0xff
 809649d:  je 809657b
 80964a3:  mov DWORD PTR [esp], eax
 80964a6:  call 804eea0
 80964ab:  mov edx, DWORD PTR ds:0x80d2dcc
 80964b1:  cmp eax, edx
 80964b3:  jae 80964b7
 80964b5:  mov eax, edx
 80964b7:  sub eax, 0x7
 80964ba:  mov edx, DWORD PTR [ebp-0x6c]
 80964bd:  imul eax, DWORD PTR [ebp-0x58]
 80964c1:  lea eax, [edi+eax+0x12]
 80964c5:  and eax, 0xfc
 80964c8:  sub esp, eax
 80964ca:  lea eax, [esp+0x1f]
 80964ce:  and eax, 0xf0
 80964d1:  mov DWORD PTR [esp+0xc], 0x0
 80964d9:  mov DWORD PTR [esp+0x8], eax
 80964dd:  mov DWORD PTR [esp+0x4], ebx
 80964e1:  mov DWORD PTR [esp], edx
 80964e4:  call 80759b0
 80964e9:  cmp BYTE PTR [eax], 0x0
 80964ec:  jne 8096359
 80964f2:  test BYTE PTR ds:0x80d2dd0, 0x1
 80964f9:  je 80963ae
 80964ff:  mov DWORD PTR [esp+0x4], ebx
 8096503:  mov DWORD PTR [esp], 0x80c637c
 809650a:  call 807c8d0
 809650f:  jmp 80963ae
 8096514:  lea esi, [esi]
 8096518:  mov eax, DWORD PTR [ebp-0x7c]
 809651b:  sub esp, 0x1c
 809651e:  lea edx, [esp+0x1f]
 8096522:  and edx, 0xf0
 8096525:  add DWORD PTR [ebp-0x4c], 0x1
 8096529:  mov DWORD PTR [edx+0x8], 0x0
 8096530:  mov DWORD PTR [edx+0x4], ecx
 8096533:  mov DWORD PTR [edx], 0x0
 8096539:  mov DWORD PTR [eax+0x8], edx
 809653c:  movzx eax, BYTE PTR [ecx+0x194]
 8096543:  and eax, 0x9f
 8096546:  or eax, 0x20
 8096549:  mov BYTE PTR [ecx+0x194], al
 809654f:  mov DWORD PTR [ebp-0x7c], edx
 8096552:  jmp 8096398
 8096557:  mov eax, DWORD PTR [ecx+0x4]
 809655a:  cmp BYTE PTR [eax], 0x0
 809655d:  jne 80970bc
 8096563:  call 807d000
 8096568:  mov edx, eax
 809656a:  mov eax, DWORD PTR [ebp-0x6c]
 809656d:  mov DWORD PTR [eax+0x1a8], edx
 8096573:  lea eax, [edx-0x1]
 8096576:  cmp eax, 0xfd
 8096579:  jbe 8096582
 809657b:  xor eax, eax
 809657d:  jmp 80964ab
 8096582:  mov DWORD PTR [esp], edx
 8096585:  call 804eea0
 809658a:  lea esi, [esi]
 8096590:  jmp 80964ab
 8096595:  cmp eax, 0x7ffffffd
 809659a:  lea esi, [esi]
 80965a0:  je 80965ae
 80965a2:  cmp eax, 0x7fffffff
 80965a7:  nop
 80965a8:  jne 80963ae
 80965ae:  mov ebx, DWORD PTR [ebp-0x60]
 80965b1:  add ebx, DWORD PTR [esi+0x4]
 80965b4:  mov DWORD PTR [esp+0x4], 0x24
 80965bc:  mov DWORD PTR [esp], ebx
 80965bf:  call 806ae20
 80965c4:  test eax, eax
 80965c6:  jne 8096df2
 80965cc:  mov edx, ebx
 80965ce:  cmp DWORD PTR [esi], 0x7ffffffd
 80965d4:  mov DWORD PTR [ebp-0x20], edx
 80965d7:  je 8096ce8
 80965dd:  test BYTE PTR ds:0x80d2dd0, 0x1
 80965e4:  jne 8096f44
 80965ea:  lea edx, [ebp-0x30]
 80965ed:  mov DWORD PTR [esp+0x4], edx
 80965f1:  lea eax, [ebp-0x18]
 80965f4:  lea ecx, [ebp-0xd]
 80965f7:  lea edx, [ebp-0x14]
 80965fa:  mov DWORD PTR [esp], 0x8095d30
 8096601:  call 807bf90
 8096606:  mov ebx, DWORD PTR [ebp-0x14]
 8096609:  sub esp, 0x8
 809660c:  test ebx, ebx
 809660e:  mov edi, eax
 8096610:  jne 8096dab
 8096616:  mov edx, DWORD PTR [ebp-0x5c]
 8096619:  sub esp, 0x1c
 809661c:  lea ebx, [esp+0x1f]
 8096620:  and ebx, 0xf0
 8096623:  mov eax, DWORD PTR [edx]
 8096625:  mov DWORD PTR [ebx], eax
 8096627:  mov eax, DWORD PTR [edx+0x4]
 809662a:  mov DWORD PTR [ebx+0x4], eax
 809662d:  mov eax, DWORD PTR [edx+0x8]
 8096630:  mov DWORD PTR [ebx+0x8], eax
 8096633:  mov eax, DWORD PTR [ebp-0x68]
 8096636:  mov DWORD PTR [edx], 0x0
 809663c:  mov ecx, DWORD PTR [ebp-0x5c]
 809663f:  mov edx, DWORD PTR [ebp-0x1c]
 8096642:  test eax, eax
 8096644:  mov DWORD PTR [ecx+0x4], edx
 8096647:  je 8096658
 8096649:  mov eax, DWORD PTR [ebp-0x64]
 809664c:  mov ecx, DWORD PTR [ebp-0x68]
 809664f:  mov DWORD PTR [ecx+eax*4], edx
 8096652:  add eax, 0x1
 8096655:  mov DWORD PTR [ebp-0x64], eax
 8096658:  test BYTE PTR [edx+0x194], 0x60
 809665f:  mov ecx, ebx
 8096661:  jne 8096c40
 8096667:  mov ecx, DWORD PTR [ebp-0x5c]
 809666a:  mov DWORD PTR [ecx+0x8], ebx
 809666d:  movzx eax, BYTE PTR [edx+0x194]
 8096674:  and eax, 0x9f
 8096677:  or eax, 0x20
 809667a:  mov BYTE PTR [edx+0x194], al
 8096680:  mov edx, DWORD PTR [ebp-0x1c]
 8096683:  mov ecx, DWORD PTR [edx+0x10]
 8096686:  test ecx, ecx
 8096688:  je 8096693
 809668a:  mov eax, DWORD PTR [edx+0xc]
 809668d:  mov DWORD PTR [ecx+0xc], eax
 8096690:  mov edx, DWORD PTR [ebp-0x1c]
 8096693:  mov ecx, DWORD PTR [edx+0xc]
 8096696:  test ecx, ecx
 8096698:  je 80966a3
 809669a:  mov eax, DWORD PTR [edx+0x10]
 809669d:  mov DWORD PTR [ecx+0x10], eax
 80966a0:  mov edx, DWORD PTR [ebp-0x1c]
 80966a3:  mov eax, DWORD PTR [ebx+0x4]
 80966a6:  mov eax, DWORD PTR [eax+0x10]
 80966a9:  mov DWORD PTR [edx+0x10], eax
 80966ac:  mov edx, DWORD PTR [ebp-0x1c]
 80966af:  mov eax, DWORD PTR [ebx+0x4]
 80966b2:  mov DWORD PTR [eax+0x10], edx
 80966b5:  mov eax, DWORD PTR [edx+0x10]
 80966b8:  test eax, eax
 80966ba:  je 80966c2
 80966bc:  mov DWORD PTR [eax+0xc], edx
 80966bf:  mov edx, DWORD PTR [ebp-0x1c]
 80966c2:  add DWORD PTR [ebp-0x4c], 0x1
 80966c6:  mov eax, DWORD PTR [ebx+0x4]
 80966c9:  mov DWORD PTR [edx+0xc], eax
 80966cc:  mov eax, DWORD PTR [ebp-0x7c]
 80966cf:  cmp DWORD PTR [ebp-0x5c], eax
 80966d2:  je 8096de7
 80966d8:  mov DWORD PTR [ebp-0x5c], ebx
 80966db:  jmp 80963ae
 80966e0:  mov DWORD PTR [esp], ebx
 80966e3:  call 804eea0
 80966e8:  lea edx, [eax+0x1]
 80966eb:  add eax, 0x13
 80966ee:  and eax, 0xfc
 80966f1:  sub esp, eax
 80966f3:  lea eax, [esp+0x1f]
 80966f7:  and eax, 0xf0
 80966fa:  mov DWORD PTR [esp+0x4], ebx
 80966fe:  mov DWORD PTR [esp+0x8], edx
 8096702:  mov DWORD PTR [esp], eax
 8096705:  call 804efc0
 809670a:  mov ebx, DWORD PTR [ebp-0x18]
 809670d:  mov DWORD PTR [esp], ebx
 8096710:  mov esi, eax
 8096712:  call 804eea0
 8096717:  lea edx, [eax+0x1]
 809671a:  add eax, 0x13
 809671d:  and eax, 0xfc
 8096720:  sub esp, eax
 8096722:  lea eax, [esp+0x1f]
 8096726:  and eax, 0xf0
 8096729:  mov DWORD PTR [esp+0x8], edx
 809672d:  mov DWORD PTR [esp+0x4], ebx
 8096731:  mov DWORD PTR [esp], eax
 8096734:  call 804efc0
 8096739:  cmp BYTE PTR [ebp-0xd], 0x0
 809673d:  mov DWORD PTR [ebp-0x18], eax
 8096740:  jne 8096b18
 8096746:  test edi, edi
 8096748:  mov DWORD PTR [ebp-0x14], esi
 809674b:  mov DWORD PTR [ebp-0x74], edi
 809674e:  jne 8096757
 8096750:  mov DWORD PTR [ebp-0x74], 0xffffffff
 8096757:  mov edx, DWORD PTR [ebp-0xa8]
 809675d:  mov eax, 0xffffffe8
 8096762:  mov ebx, DWORD PTR [edx+eax]
 8096765:  test ebx, ebx
 8096767:  je 8096acc
 809676d:  mov esi, DWORD PTR [ebp-0x98]
 8096773:  mov esi, DWORD PTR [esi+0x1f0]
 8096779:  test esi, esi
 809677b:  mov DWORD PTR [ebp-0x70], esi
 809677e:  je 809679f
 8096780:  mov edx, DWORD PTR [ebp-0x98]
 8096786:  movzx eax, BYTE PTR [edx+0x194]
 809678d:  and eax, 0x3
 8096790:  cmp al, 0x2
 8096792:  je 8096ae2
 8096798:  mov DWORD PTR [ebp-0x70], 0x0
 809679f:  mov ecx, DWORD PTR [ebp-0x4c]
 80967a2:  lea eax, [ecx*8+0x4]
 80967a9:  mov DWORD PTR [esp], eax
 80967ac:  call 804d6f0
 80967b1:  test eax, eax
 80967b3:  mov DWORD PTR [ebp-0x94], eax
 80967b9:  je 8096f6f
 80967bf:  mov edx, DWORD PTR [ebp-0x4c]
 80967c2:  mov ecx, DWORD PTR [ebp-0x94]
 80967c8:  mov esi, DWORD PTR [ebp-0x98]
 80967ce:  mov DWORD PTR [ebp-0x34], 0x0
 80967d5:  lea eax, [ecx+edx*4+0x4]
 80967d9:  mov DWORD PTR [esi+0x15c], eax
 80967df:  mov eax, DWORD PTR [ebp+0x8]
 80967e2:  mov DWORD PTR [esi+0x160], edx
 80967e8:  test eax, eax
 80967ea:  jne 8096c84
 80967f0:  mov ecx, DWORD PTR [ebp-0x80]
 80967f3:  mov eax, DWORD PTR [ebp-0x98]
 80967f9:  mov esi, DWORD PTR [ebp-0x34]
 80967fc:  mov edx, DWORD PTR [eax+0x15c]
 8096802:  mov eax, DWORD PTR [ecx+0x4]
 8096805:  mov DWORD PTR [edx+esi*4], eax
 8096808:  mov eax, DWORD PTR [ecx+0x4]
 809680b:  add esi, 0x1
 809680e:  mov DWORD PTR [ebp-0x34], esi
 8096811:  and BYTE PTR [eax+0x194], 0x9f
 8096818:  mov eax, DWORD PTR [ecx+0x8]
 809681b:  test eax, eax
 809681d:  mov DWORD PTR [ebp-0x80], eax
 8096820:  jne 80967f0
 8096822:  test BYTE PTR ds:0x80d2dd1, 0x4
 8096829:  jne 8096f88
 809682f:  mov edx, DWORD PTR [ebp-0x98]
 8096835:  mov eax, DWORD PTR [edx+0x15c]
 809683b:  mov ecx, DWORD PTR [eax]
 809683d:  cmp ecx, edx
 809683f:  mov DWORD PTR [ebp-0x88], ecx
 8096845:  jne 8096d3d
 809684b:  mov esi, DWORD PTR [ebp-0x98]
 8096851:  mov esi, DWORD PTR [esi+0x1f8]
 8096857:  test esi, esi
 8096859:  mov DWORD PTR [ebp-0x38], esi
 809685c:  je 8096cb3
 8096862:  cmp DWORD PTR [ebp-0x34], 0x1
 8096866:  jbe 80968a6
 8096868:  mov ecx, 0x1
 809686d:  mov edx, DWORD PTR [ebp-0x88]
 8096873:  mov eax, DWORD PTR [edx+0x15c]
 8096879:  mov edx, DWORD PTR [eax+ecx*4]
 809687c:  add ecx, 0x1
 809687f:  movzx eax, BYTE PTR [edx+0x194]
 8096886:  and eax, 0x9f
 8096889:  or eax, 0x20
 809688c:  mov BYTE PTR [edx+0x194], al
 8096892:  cmp ecx, DWORD PTR [ebp-0x34]
 8096895:  jb 809686d
 8096897:  mov ecx, DWORD PTR [ebp-0x88]
 809689d:  mov ecx, DWORD PTR [ecx+0x1f8]
 80968a3:  mov DWORD PTR [ebp-0x38], ecx
 80968a6:  mov eax, DWORD PTR [ebp-0x38]
 80968a9:  mov esi, DWORD PTR [ebp-0x38]
 80968ac:  mov ebx, DWORD PTR [eax]
 80968ae:  add esi, 0x4
 80968b1:  mov DWORD PTR [ebp-0x54], esi
 80968b4:  test ebx, ebx
 80968b6:  je 809697f
 80968bc:  mov edx, eax
 80968be:  xor esi, esi
 80968c0:  jmp 80968cd
 80968c2:  lea esi, [ecx+0x1]
 80968c5:  cmp DWORD PTR [edx], esi
 80968c7:  jbe 809697f
 80968cd:  mov ecx, DWORD PTR [ebp-0x38]
 80968d0:  mov eax, DWORD PTR [ecx+esi*4+0x4]
 80968d4:  mov ecx, esi
 80968d6:  test BYTE PTR [eax+0x194], 0x60
 80968dd:  je 80968c2
 80968df:  mov edx, DWORD PTR [ebp-0x88]
 80968e5:  mov eax, DWORD PTR [edx+0x1f4]
 80968eb:  lea eax, [eax*4+0x4]
 80968f2:  mov DWORD PTR [esp], eax
 80968f5:  call 804d6f0
 80968fa:  test eax, eax
 80968fc:  mov DWORD PTR [ebp-0xa4], eax
 8096902:  je 8096b28
 8096908:  mov edx, eax
 809690a:  mov ebx, esi
 809690c:  lea eax, [esi*4]
 8096913:  add edx, 0x4
 8096916:  mov DWORD PTR [esp+0x8], eax
 809691a:  mov eax, DWORD PTR [ebp-0x54]
 809691d:  mov DWORD PTR [esp], edx
 8096920:  mov DWORD PTR [esp+0x4], eax
 8096924:  call 804efc0
 8096929:  mov edx, DWORD PTR [ebp-0x88]
 809692f:  lea ecx, [esi+0x1]
 8096932:  mov edi, DWORD PTR [edx+0x1f8]
 8096938:  cmp DWORD PTR [edi], ecx
 809693a:  jbe 809696a
 809693c:  mov eax, DWORD PTR [ebp-0x38]
 809693f:  mov ebx, esi
 8096941:  lea edx, [eax+ecx*4+0x4]
 8096945:  lea esi, [esi]
 8096948:  mov eax, DWORD PTR [edx]
 809694a:  test BYTE PTR [eax+0x194], 0x60
 8096951:  jne 8096960
 8096953:  mov esi, DWORD PTR [ebp-0xa4]
 8096959:  mov DWORD PTR [esi+ebx*4+0x4], eax
 809695d:  add ebx, 0x1
 8096960:  add ecx, 0x1
 8096963:  add edx, 0x4
 8096966:  cmp DWORD PTR [edi], ecx
 8096968:  ja 8096948
 809696a:  mov eax, DWORD PTR [ebp-0xa4]
 8096970:  mov edx, edi
 8096972:  lea esi, [ecx+0x1]
 8096975:  mov DWORD PTR [eax], ebx
 8096977:  cmp DWORD PTR [edx], esi
 8096979:  ja 80968cd
 809697f:  cmp DWORD PTR [ebp-0x34], 0x1
 8096983:  jbe 8096f11
 8096989:  mov edx, 0x1
 809698e:  mov ecx, DWORD PTR [ebp-0x88]
 8096994:  mov eax, DWORD PTR [ecx+0x15c]
 809699a:  mov eax, DWORD PTR [eax+edx*4]
 809699d:  add edx, 0x1
 80969a0:  and BYTE PTR [eax+0x194], 0x9f
 80969a7:  cmp edx, DWORD PTR [ebp-0x34]
 80969aa:  jb 809698e
 80969ac:  mov ecx, DWORD PTR [ebp-0x88]
 80969b2:  mov edx, DWORD PTR [ebp-0x34]
 80969b5:  mov esi, DWORD PTR [ebp-0x94]
 80969bb:  mov eax, DWORD PTR [ecx+0x15c]
 80969c1:  shl edx, 0x2
 80969c4:  mov DWORD PTR [ebp-0x90], edx
 80969ca:  mov DWORD PTR [esp+0x8], edx
 80969ce:  mov DWORD PTR [esp+0x4], eax
 80969d2:  mov DWORD PTR [esp], esi
 80969d5:  call 804efc0
 80969da:  mov eax, DWORD PTR [ebp-0x94]
 80969e0:  mov DWORD PTR [ebp-0x3c], 0x1
 80969e7:  mov ecx, DWORD PTR [ebp-0x3c]
 80969ea:  add eax, 0x4
 80969ed:  mov DWORD PTR [ebp-0x48], eax
 80969f0:  mov edx, DWORD PTR [ebp-0x88]
 80969f6:  mov DWORD PTR [ebp-0x50], 0x1
 80969fd:  mov eax, DWORD PTR [edx+0x15c]
 8096a03:  mov edx, DWORD PTR [ebp-0x48]
 8096a06:  mov esi, DWORD PTR [eax+ecx*4]
 8096a09:  mov eax, 0x1
 8096a0e:  cmp DWORD PTR [edx], esi
 8096a10:  je 8096a29
 8096a12:  lea esi, [esi]
 8096a18:  mov ecx, DWORD PTR [ebp-0x94]
 8096a1e:  add eax, 0x1
 8096a21:  cmp DWORD PTR [ecx+eax*4], esi
 8096a24:  jne 8096a18
 8096a26:  mov DWORD PTR [ebp-0x50], eax
 8096a29:  lea edi, [eax+0x1]
 8096a2c:  cmp DWORD PTR [ebp-0x34], edi
 8096a2f:  jbe 8096a76
 8096a31:  mov eax, DWORD PTR [ebp-0x94]
 8096a37:  lea eax, [eax+edi*4]
 8096a3a:  mov DWORD PTR [ebp-0x44], eax
 8096a3d:  lea esi, [esi]
 8096a40:  mov edx, DWORD PTR [ebp-0x44]
 8096a43:  mov edx, DWORD PTR [edx]
 8096a45:  mov DWORD PTR [ebp-0x84], edx
 8096a4b:  mov edx, DWORD PTR [edx+0x1f0]
 8096a51:  test edx, edx
 8096a53:  jne 8096a63
 8096a55:  jmp 8096a6a
 8096a57:  nop
 8096a58:  cmp esi, eax
 8096a5a:  je 8096b40
 8096a60:  add edx, 0x4
 8096a63:  mov eax, DWORD PTR [edx]
 8096a65:  test eax, eax
 8096a67:  nop
 8096a68:  jne 8096a58
 8096a6a:  add edi, 0x1
 8096a6d:  add DWORD PTR [ebp-0x44], 0x4
 8096a71:  cmp DWORD PTR [ebp-0x34], edi
 8096a74:  ja 8096a40
 8096a76:  add DWORD PTR [ebp-0x3c], 0x1
 8096a7a:  mov ecx, DWORD PTR [ebp-0x3c]
 8096a7d:  cmp DWORD PTR [ebp-0x34], ecx
 8096a80:  ja 80969f0
 8096a86:  mov eax, DWORD PTR [ebp-0x94]
 8096a8c:  mov esi, DWORD PTR [ebp-0x90]
 8096a92:  mov DWORD PTR [eax+esi], 0x0
 8096a99:  mov ecx, DWORD PTR [ebp-0x70]
 8096a9c:  mov edx, DWORD PTR [ebp-0x88]
 8096aa2:  test ecx, ecx
 8096aa4:  mov DWORD PTR [edx+0x1f0], eax
 8096aaa:  je 8096ab7
 8096aac:  mov ecx, DWORD PTR [ebp-0x70]
 8096aaf:  mov DWORD PTR [esp], ecx
 8096ab2:  call 807d650
 8096ab7:  mov edx, DWORD PTR [ebp-0x74]
 8096aba:  test edx, edx
 8096abc:  jne 8096d61
 8096ac2:  lea esp, [ebp-0xc]
 8096ac5:  pop ebx
 8096ac6:  pop esi
 8096ac7:  pop edi
 8096ac8:  pop ebp
 8096ac9:  ret 0x8
 8096acc:  mov ecx, DWORD PTR [ebp-0x78]
 8096acf:  test ecx, ecx
 8096ad1:  je 809676d
 8096ad7:  mov ecx, DWORD PTR [ebp-0x78]
 8096ada:  mov DWORD PTR [edx+eax], ecx
 8096add:  jmp 809676d
 8096ae2:  mov eax, DWORD PTR [edx+0x15c]
 8096ae8:  test eax, eax
 8096aea:  je 809679f
 8096af0:  mov DWORD PTR [esp+0xc], 0x80c6502
 8096af8:  mov DWORD PTR [esp+0x8], 0x1f3
 8096b00:  mov DWORD PTR [esp+0x4], 0x80c64eb
 8096b08:  mov DWORD PTR [esp], 0x80c644c
 8096b0f:  call 8051490
 8096b14:  lea esi, [esi]
 8096b18:  mov eax, DWORD PTR [ebp-0x14]
 8096b1b:  mov DWORD PTR [esp], eax
 8096b1e:  call 804b4a0
 8096b23:  jmp 8096746
 8096b28:  mov ecx, DWORD PTR [ebp-0x88]
 8096b2e:  mov edx, DWORD PTR [ecx+0x1f8]
 8096b34:  mov ecx, esi
 8096b36:  jmp 80968c2
 8096b3b:  nop
 8096b3c:  lea esi, [esi]
 8096b40:  mov eax, edi
 8096b42:  mov ebx, DWORD PTR [ebp-0x50]
 8096b45:  add edi, 0x1
 8096b48:  sub eax, DWORD PTR [ebp-0x50]
 8096b4b:  add DWORD PTR [ebp-0x50], 0x1
 8096b4f:  mov edx, DWORD PTR [ebp-0x50]
 8096b52:  shl eax, 0x2
 8096b55:  mov ecx, DWORD PTR [ebp-0x94]
 8096b5b:  mov DWORD PTR [esp+0x8], eax
 8096b5f:  mov eax, DWORD PTR [ebp-0x94]
 8096b65:  shl ebx, 0x2
 8096b68:  add eax, ebx
 8096b6a:  mov DWORD PTR [esp+0x4], eax
 8096b6e:  lea eax, [ecx+edx*4]
 8096b71:  mov DWORD PTR [esp], eax
 8096b74:  call 806c260
 8096b79:  mov edx, DWORD PTR [ebp-0x84]
 8096b7f:  mov eax, DWORD PTR [ebp-0x94]
 8096b85:  add DWORD PTR [ebp-0x44], 0x4
 8096b89:  cmp DWORD PTR [ebp-0x34], edi
 8096b8c:  mov DWORD PTR [eax+ebx], edx
 8096b8f:  ja 8096a40
 8096b95:  jmp 8096a76
 8096b9a:  xor ecx, ecx
 8096b9c:  mov edx, ebx
 8096b9e:  xor eax, eax
 8096ba0:  mov DWORD PTR [esp], 0x80c6354
 8096ba7:  call 807c080
 8096bac:  mov esi, DWORD PTR [eax+0x1f0]
 8096bb2:  test esi, esi
 8096bb4:  jne 80962e1
 8096bba:  mov ecx, DWORD PTR [ebp-0x98]
 8096bc0:  cmp eax, ecx
 8096bc2:  je 80962e1
 8096bc8:  movzx eax, WORD PTR [eax+0x15a]
 8096bcf:  test ax, ax
 8096bd2:  je 80962e1
 8096bd8:  mov edx, DWORD PTR [ebp-0x6c]
 8096bdb:  movzx eax, ax
 8096bde:  lea eax, [eax*4+0x12]
 8096be5:  and eax, 0xffffc
 8096bea:  sub esp, eax
 8096bec:  mov ebx, DWORD PTR [edx+0x24]
 8096bef:  lea eax, [esp+0x1f]
 8096bf3:  and eax, 0xf0
 8096bf6:  mov DWORD PTR [ebp-0x68], eax
 8096bf9:  test ebx, ebx
 8096bfb:  jne 80962f6
 8096c01:  mov ecx, DWORD PTR [edx+0xf0]
 8096c07:  test ecx, ecx
 8096c09:  jne 80962f6
 8096c0f:  mov eax, DWORD PTR [edx+0xe8]
 8096c15:  test eax, eax
 8096c17:  jne 80962f6
 8096c1d:  mov DWORD PTR [ebp-0x64], 0x0
 8096c24:  jmp 80963bb
 8096c29:  mov DWORD PTR [ebp-0x74], 0x0
 8096c30:  jmp 8096757
 8096c35:  cmp edx, DWORD PTR [eax+0x4]
 8096c38:  je 80970fc
 8096c3e:  mov ecx, eax
 8096c40:  mov eax, DWORD PTR [ecx+0x8]
 8096c43:  test eax, eax
 8096c45:  jne 8096c35
 8096c47:  mov eax, DWORD PTR [ebx]
 8096c49:  mov edx, DWORD PTR [ebp-0x5c]
 8096c4c:  mov DWORD PTR [edx], eax
 8096c4e:  mov eax, DWORD PTR [ebx+0x4]
 8096c51:  mov DWORD PTR [edx+0x4], eax
 8096c54:  mov eax, DWORD PTR [ebx+0x8]
 8096c57:  mov DWORD PTR [edx+0x8], eax
 8096c5a:  jmp 80963ae
 8096c5f:  mov ecx, DWORD PTR [ebp-0x98]
 8096c65:  sub DWORD PTR [ecx+0x160], 0x1
 8096c6c:  and BYTE PTR [edx+0x194], 0x9f
 8096c73:  mov esi, DWORD PTR [ebp-0x80]
 8096c76:  mov esi, DWORD PTR [esi+0x8]
 8096c79:  test esi, esi
 8096c7b:  mov DWORD PTR [ebp-0x80], esi
 8096c7e:  je 8096822
 8096c84:  mov eax, DWORD PTR [ebp-0x80]
 8096c87:  mov edx, DWORD PTR [eax+0x4]
 8096c8a:  test BYTE PTR [edx+0x195], 0x2
 8096c91:  jne 8096c5f
 8096c93:  mov ecx, DWORD PTR [ebp-0x98]
 8096c99:  mov esi, DWORD PTR [ebp-0x34]
 8096c9c:  mov eax, DWORD PTR [ecx+0x15c]
 8096ca2:  mov DWORD PTR [eax+esi*4], edx
 8096ca5:  mov eax, DWORD PTR [ebp-0x80]
 8096ca8:  add esi, 0x1
 8096cab:  mov DWORD PTR [ebp-0x34], esi
 8096cae:  mov edx, DWORD PTR [eax+0x4]
 8096cb1:  jmp 8096c6c
 8096cb3:  mov esi, DWORD PTR [ebp-0x34]
 8096cb6:  mov DWORD PTR [esp+0x4], eax
 8096cba:  mov eax, DWORD PTR [ebp-0x94]
 8096cc0:  shl esi, 0x2
 8096cc3:  mov DWORD PTR [ebp-0x90], esi
 8096cc9:  mov DWORD PTR [esp+0x8], esi
 8096ccd:  mov DWORD PTR [esp], eax
 8096cd0:  call 804efc0
 8096cd5:  cmp DWORD PTR [ebp-0x34], 0x1
 8096cd9:  jbe 8096a86
 8096cdf:  jmp 80969da
 8096ce4:  lea esi, [esi]
 8096ce8:  test BYTE PTR ds:0x80d2dd0, 0x1
 8096cef:  nop
 8096cf0:  jne 8096d80
 8096cf6:  lea edx, [ebp-0x30]
 8096cf9:  mov DWORD PTR [esp+0x4], edx
 8096cfd:  lea eax, [ebp-0x18]
 8096d00:  lea ecx, [ebp-0xd]
 8096d03:  lea edx, [ebp-0x14]
 8096d06:  mov DWORD PTR [esp], 0x8095d30
 8096d0d:  call 807bf90
 8096d12:  mov eax, DWORD PTR [ebp-0x14]
 8096d15:  sub esp, 0x8
 8096d18:  test eax, eax
 8096d1a:  je 8096616
 8096d20:  cmp BYTE PTR [ebp-0xd], 0x0
 8096d24:  je 80963ae
 8096d2a:  mov DWORD PTR [esp], eax
 8096d2d:  call 804b4a0
 8096d32:  lea esi, [esi]
 8096d38:  jmp 80963ae
 8096d3d:  mov DWORD PTR [esp+0xc], 0x80c6502
 8096d45:  mov DWORD PTR [esp+0x8], 0x23f
 8096d4d:  mov DWORD PTR [esp+0x4], 0x80c64eb
 8096d55:  mov DWORD PTR [esp], 0x80c64c8
 8096d5c:  call 8051490
 8096d61:  xor eax, eax
 8096d63:  mov ecx, DWORD PTR [ebp-0x14]
 8096d66:  cmp DWORD PTR [ebp-0x74], 0xff
 8096d6a:  mov edx, DWORD PTR [ebp-0x18]
 8096d6d:  sete al
 8096d70:  sub eax, 0x1
 8096d73:  and eax, DWORD PTR [ebp-0x74]
 8096d76:  mov DWORD PTR [esp], ecx
 8096d79:  xor ecx, ecx
 8096d7b:  call 807c080
 8096d80:  mov ecx, DWORD PTR [ebp-0x6c]
 8096d83:  mov eax, DWORD PTR [ecx+0x4]
 8096d86:  cmp BYTE PTR [eax], 0x0
 8096d89:  jne 8096d92
 8096d8b:  mov eax, ds:0x80d0cd0
 8096d90:  mov eax, DWORD PTR [eax]
 8096d92:  mov DWORD PTR [esp+0x8], eax
 8096d96:  mov DWORD PTR [esp+0x4], edx
 8096d9a:  mov DWORD PTR [esp], 0x80c63cc
 8096da1:  call 807c8d0
 8096da6:  jmp 8096cf6
 8096dab:  mov DWORD PTR [esp], ebx
 8096dae:  call 804eea0
 8096db3:  lea edx, [eax+0x1]
 8096db6:  add eax, 0x13
 8096db9:  and eax, 0xfc
 8096dbc:  sub esp, eax
 8096dbe:  lea eax, [esp+0x1f]
 8096dc2:  and eax, 0xf0
 8096dc5:  mov DWORD PTR [esp+0x4], ebx
 8096dc9:  mov DWORD PTR [esp+0x8], edx
 8096dcd:  mov DWORD PTR [esp], eax
 8096dd0:  call 804efc0
 8096dd5:  mov ebx, DWORD PTR [ebp-0x18]
 8096dd8:  mov DWORD PTR [esp], ebx
 8096ddb:  mov esi, eax
 8096ddd:  call 804eea0
 8096de2:  jmp 8096717
 8096de7:  mov DWORD PTR [ebp-0x7c], ebx
 8096dea:  mov DWORD PTR [ebp-0x5c], ebx
 8096ded:  jmp 80963ae
 8096df2:  mov DWORD PTR [esp+0x4], 0x0
 8096dfa:  mov DWORD PTR [esp], eax
 8096dfd:  call 8075b30
 8096e02:  test eax, eax
 8096e04:  mov edi, eax
 8096e06:  je 80965cc
 8096e0c:  mov eax, ds:0x80d0cd8
 8096e11:  test eax, eax
 8096e13:  jne 8096b9a
 8096e19:  mov DWORD PTR [esp], ebx
 8096e1c:  call 804eea0
 8096e21:  mov edx, DWORD PTR [ebp-0x6c]
 8096e24:  mov DWORD PTR [ebp-0xa0], eax
 8096e2a:  mov eax, DWORD PTR [edx+0x1a8]
 8096e30:  test eax, eax
 8096e32:  je 8096ebc
 8096e38:  cmp eax, 0xff
 8096e3b:  je 8096eb8
 8096e3d:  mov DWORD PTR [esp], eax
 8096e40:  call 804eea0
 8096e45:  mov edx, DWORD PTR ds:0x80d2dcc
 8096e4b:  cmp eax, edx
 8096e4d:  jae 8096e51
 8096e4f:  mov eax, edx
 8096e51:  sub eax, 0x7
 8096e54:  mov edx, DWORD PTR [ebp-0xa0]
 8096e5a:  imul eax, edi
 8096e5d:  mov ecx, DWORD PTR [ebp-0x6c]
 8096e60:  lea eax, [edx+eax+0x12]
 8096e64:  and eax, 0xfc
 8096e67:  sub esp, eax
 8096e69:  lea eax, [esp+0x1f]
 8096e6d:  and eax, 0xf0
 8096e70:  mov DWORD PTR [esp+0xc], 0x0
 8096e78:  mov DWORD PTR [esp+0x8], eax
 8096e7c:  mov DWORD PTR [esp+0x4], ebx
 8096e80:  mov DWORD PTR [esp], ecx
 8096e83:  call 80759b0
 8096e88:  cmp BYTE PTR [eax], 0x0
 8096e8b:  mov edx, eax
 8096e8d:  jne 80965ce
 8096e93:  cmp DWORD PTR [esi], 0x7ffffffd
 8096e99:  jne 80964f2
 8096e9f:  xor ecx, ecx
 8096ea1:  mov edx, ebx
 8096ea3:  xor eax, eax
 8096ea5:  mov DWORD PTR [esp], 0x80b5134
 8096eac:  call 807c080
 8096eb1:  lea esi, [esi]
 8096eb8:  xor eax, eax
 8096eba:  jmp 8096e45
 8096ebc:  mov eax, DWORD PTR [edx+0x4]
 8096ebf:  cmp BYTE PTR [eax], 0x0
 8096ec2:  jne 8096eed
 8096ec4:  lea esi, [esi]
 8096ec8:  call 807d000
 8096ecd:  mov ecx, DWORD PTR [ebp-0x6c]
 8096ed0:  mov edx, eax
 8096ed2:  mov DWORD PTR [ecx+0x1a8], eax
 8096ed8:  lea eax, [eax-0x1]
 8096edb:  cmp eax, 0xfd
 8096ede:  ja 8096eb8
 8096ee0:  mov DWORD PTR [esp], edx
 8096ee3:  call 804eea0
 8096ee8:  jmp 8096e45
 8096eed:  mov DWORD PTR [esp+0xc], 0x80c6502
 8096ef5:  mov DWORD PTR [esp+0x8], 0x126
 8096efd:  mov DWORD PTR [esp+0x4], 0x80c64eb
 8096f05:  mov DWORD PTR [esp], 0x80b41e3
 8096f0c:  call 8051490
 8096f11:  mov esi, DWORD PTR [ebp-0x88]
 8096f17:  mov ecx, DWORD PTR [ebp-0x34]
 8096f1a:  mov eax, DWORD PTR [esi+0x15c]
 8096f20:  shl ecx, 0x2
 8096f23:  mov DWORD PTR [ebp-0x90], ecx
 8096f29:  mov DWORD PTR [esp+0x8], ecx
 8096f2d:  mov DWORD PTR [esp+0x4], eax
 8096f31:  mov eax, DWORD PTR [ebp-0x94]
 8096f37:  mov DWORD PTR [esp], eax
 8096f3a:  call 804efc0
 8096f3f:  jmp 8096a86
 8096f44:  mov ecx, DWORD PTR [ebp-0x6c]
 8096f47:  mov eax, DWORD PTR [ecx+0x4]
 8096f4a:  cmp BYTE PTR [eax], 0x0
 8096f4d:  jne 8096f56
 8096f4f:  mov eax, ds:0x80d0cd0
 8096f54:  mov eax, DWORD PTR [eax]
 8096f56:  mov DWORD PTR [esp+0x8], eax
 8096f5a:  mov DWORD PTR [esp+0x4], edx
 8096f5e:  mov DWORD PTR [esp], 0x80c63fc
 8096f65:  call 807c8d0
 8096f6a:  jmp 80965ea
 8096f6f:  mov esi, DWORD PTR [ebp-0x98]
 8096f75:  mov edx, DWORD PTR [esi+0x4]
 8096f78:  xor ecx, ecx
 8096f7a:  mov al, 0xc
 8096f7c:  mov DWORD PTR [esp], 0x80c6474
 8096f83:  call 807c080
 8096f88:  mov edx, DWORD PTR ds:0x80d2e40
 8096f8e:  mov ecx, DWORD PTR [ebp-0x98]
 8096f94:  mov DWORD PTR [ebp-0x8c], edx
 8096f9a:  cmp edx, ecx
 8096f9c:  jne 809682f
 8096fa2:  mov eax, DWORD PTR [ebp-0x34]
 8096fa5:  test eax, eax
 8096fa7:  je 809682f
 8096fad:  xor edi, edi
 8096faf:  mov esi, DWORD PTR [ebp-0x8c]
 8096fb5:  mov eax, DWORD PTR [esi+0x15c]
 8096fbb:  mov ebx, DWORD PTR [eax+edi*4]
 8096fbe:  cmp esi, ebx
 8096fc0:  je 8097066
 8096fc6:  mov eax, DWORD PTR [ebx+0x1d0]
 8096fcc:  test eax, eax
 8096fce:  je 8096fdb
 8096fd0:  mov eax, DWORD PTR [eax+0x4]
 8096fd3:  test eax, eax
 8096fd5:  jne 8097066
 8096fdb:  mov eax, DWORD PTR [ebx+0xf0]
 8096fe1:  test eax, eax
 8096fe3:  jne 809709b
 8096fe9:  mov esi, DWORD PTR [ebx+0xe8]
 8096fef:  test esi, esi
 8096ff1:  jne 809709b
 8096ff7:  mov eax, DWORD PTR [ebp-0x94]
 8096ffd:  mov edx, ebx
 8096fff:  call 8095da0
 8097004:  cmp eax, DWORD PTR [ebp-0x34]
 8097007:  mov esi, eax
 8097009:  ja 8097077
 809700b:  xor edx, edx
 809700d:  test eax, eax
 809700f:  je 8097028
 8097011:  mov ecx, DWORD PTR [ebp-0x94]
 8097017:  mov eax, DWORD PTR [ecx+edx*4]
 809701a:  add edx, 0x1
 809701d:  and BYTE PTR [eax+0x194], 0x9f
 8097024:  cmp esi, edx
 8097026:  ja 8097011
 8097028:  lea eax, [esi*4+0x8]
 809702f:  mov DWORD PTR [esp], eax
 8097032:  call 804d6f0
 8097037:  test eax, eax
 8097039:  mov DWORD PTR [ebx+0x1d0], eax
 809703f:  je 80970b1
 8097041:  lea edx, [eax+0x8]
 8097044:  mov DWORD PTR [eax+0x4], esi
 8097047:  mov DWORD PTR [eax], edx
 8097049:  lea eax, [esi*4]
 8097050:  mov DWORD PTR [esp+0x8], eax
 8097054:  mov eax, DWORD PTR [ebp-0x94]
 809705a:  mov DWORD PTR [esp], edx
 809705d:  mov DWORD PTR [esp+0x4], eax
 8097061:  call 804efc0
 8097066:  add edi, 0x1
 8097069:  cmp edi, DWORD PTR [ebp-0x34]
 809706c:  jb 8096faf
 8097072:  jmp 809682f
 8097077:  mov DWORD PTR [esp+0xc], 0x80c6502
 809707f:  mov DWORD PTR [esp+0x8], 0x22b
 8097087:  mov DWORD PTR [esp+0x4], 0x80c64eb
 809708f:  mov DWORD PTR [esp], 0x80c64f5
 8097096:  call 8051490
 809709b:  mov edx, DWORD PTR [ebx+0x4]
 809709e:  xor ecx, ecx
 80970a0:  mov eax, 0x16
 80970a5:  mov DWORD PTR [esp], 0x80c6498
 80970ac:  call 807c080
 80970b1:  mov esi, DWORD PTR [ebp-0x8c]
 80970b7:  jmp 8096f75
 80970bc:  mov DWORD PTR [esp+0xc], 0x80c6502
 80970c4:  mov DWORD PTR [esp+0x8], 0xf2
 80970cc:  mov DWORD PTR [esp+0x4], 0x80c64eb
 80970d4:  mov DWORD PTR [esp], 0x80b41e3
 80970db:  call 8051490
 80970e0:  mov esi, DWORD PTR [ebp-0x98]
 80970e6:  xor ecx, ecx
 80970e8:  mov eax, 0xc
 80970ed:  mov edx, DWORD PTR [esi+0x4]
 80970f0:  mov DWORD PTR [esp], 0x80c642c
 80970f7:  call 807c080
 80970fc:  mov eax, DWORD PTR [ebp-0x5c]
 80970ff:  mov DWORD PTR [eax+0x8], ebx
 8097102:  mov eax, DWORD PTR [ecx+0x8]
 8097105:  cmp eax, DWORD PTR [ebp-0x7c]
 8097108:  jne 809710d
 809710a:  mov DWORD PTR [ebp-0x7c], ecx
 809710d:  mov eax, DWORD PTR [eax+0x8]
 8097110:  mov DWORD PTR [ecx+0x8], eax
 8097113:  mov ecx, DWORD PTR [edx+0x10]
 8097116:  test ecx, ecx
 8097118:  je 8097123
 809711a:  mov eax, DWORD PTR [edx+0xc]
 809711d:  mov DWORD PTR [ecx+0xc], eax
 8097120:  mov edx, DWORD PTR [ebp-0x1c]
 8097123:  mov ecx, DWORD PTR [edx+0xc]
 8097126:  test ecx, ecx
 8097128:  je 8097133
 809712a:  mov eax, DWORD PTR [edx+0x10]
 809712d:  mov DWORD PTR [ecx+0x10], eax
 8097130:  mov edx, DWORD PTR [ebp-0x1c]
 8097133:  mov eax, DWORD PTR [ebx+0x4]
 8097136:  mov eax, DWORD PTR [eax+0x10]
 8097139:  mov DWORD PTR [edx+0x10], eax
 809713c:  mov edx, DWORD PTR [ebp-0x1c]
 809713f:  mov eax, DWORD PTR [ebx+0x4]
 8097142:  mov DWORD PTR [eax+0x10], edx
 8097145:  mov eax, DWORD PTR [edx+0x10]
 8097148:  test eax, eax
 809714a:  je 80966c6
 8097150:  mov DWORD PTR [eax+0xc], edx
 8097153:  mov edx, DWORD PTR [ebp-0x1c]
 8097156:  jmp 80966c6
 809715b:  nop
 809715c:  nop
 809715d:  nop
 809715e:  nop
 809715f:  nop

08097160 <_dl_call_pltexit>:
 8097160:  push ebp
 8097161:  mov ebp, esp
 8097163:  pop ebp
 8097164:  ret 0x4
 8097167:  mov esi, esi
 8097169:  lea edi, [edi]

08097170 <_dl_profile_fixup>:
 8097170:  push ebp
 8097171:  mov ebp, esp
 8097173:  push edi
 8097174:  push esi
 8097175:  push ebx
 8097176:  mov ebx, eax
 8097178:  mov eax, edx
 809717a:  sub esp, 0x28
 809717d:  shr eax, 0x3
 8097180:  lea eax, [eax+eax*4]
 8097183:  shl eax, 0x2
 8097186:  mov DWORD PTR [ebp-0x18], eax
 8097189:  mov eax, DWORD PTR [ebx+0x1a0]
 809718f:  add DWORD PTR [ebp-0x18], eax
 8097192:  mov eax, DWORD PTR [ebp-0x18]
 8097195:  mov DWORD PTR [ebp-0x20], ecx
 8097198:  mov edi, DWORD PTR [eax]
 809719a:  test edi, edi
 809719c:  jne 8097288
 80971a2:  mov eax, DWORD PTR [ebx+0x34]
 80971a5:  mov eax, DWORD PTR [eax+0x4]
 80971a8:  mov DWORD PTR [ebp-0x1c], eax
 80971ab:  mov eax, DWORD PTR [ebx+0x7c]
 80971ae:  mov eax, DWORD PTR [eax+0x4]
 80971b1:  mov edx, DWORD PTR [edx+eax+0x4]
 80971b5:  mov eax, DWORD PTR [ebx+0x38]
 80971b8:  mov ecx, edx
 80971ba:  shr ecx, 0x8
 80971bd:  mov esi, ecx
 80971bf:  shl esi, 0x4
 80971c2:  add esi, DWORD PTR [eax+0x4]
 80971c5:  cmp dl, 0x7
 80971c8:  mov DWORD PTR [ebp-0x10], esi
 80971cb:  jne 80972b7
 80971d1:  test BYTE PTR [esi+0xd], 0x3
 80971d5:  jne 80972db
 80971db:  mov eax, DWORD PTR [ebx+0xe4]
 80971e1:  test eax, eax
 80971e3:  je 80972b0
 80971e9:  mov eax, DWORD PTR [eax+0x4]
 80971ec:  movzx eax, WORD PTR [eax+ecx*2]
 80971f0:  mov edx, eax
 80971f2:  and edx, 0x7fff
 80971f8:  shl edx, 0x4
 80971fb:  add edx, DWORD PTR [ebx+0x170]
 8097201:  mov ecx, DWORD PTR [edx+0x4]
 8097204:  test ecx, ecx
 8097206:  je 80972b0
 809720c:  mov eax, gs:0xc
 8097212:  test eax, eax
 8097214:  mov DWORD PTR [ebp-0x14], 0x1
 809721b:  jne 8097316
 8097221:  mov eax, DWORD PTR [esi]
 8097223:  lea ecx, [ebp-0x10]
 8097226:  add DWORD PTR [ebp-0x1c], eax
 8097229:  mov eax, DWORD PTR [ebp-0x14]
 809722c:  mov DWORD PTR [esp+0x4], edx
 8097230:  mov edx, ebx
 8097232:  mov DWORD PTR [esp+0x10], 0x0
 809723a:  mov DWORD PTR [esp+0x8], 0x1
 8097242:  mov DWORD PTR [esp+0xc], eax
 8097246:  mov eax, DWORD PTR [ebx+0x1cc]
 809724c:  mov DWORD PTR [esp], eax
 809724f:  mov eax, DWORD PTR [ebp-0x1c]
 8097252:  call 80791b0
 8097257:  sub esp, 0x14
 809725a:  mov esi, eax
 809725c:  mov eax, gs:0xc
 8097262:  test eax, eax
 8097264:  jne 80972e2
 8097266:  mov edx, DWORD PTR [ebp-0x10]
 8097269:  test edx, edx
 809726b:  je 809727a
 809726d:  xor eax, eax
 809726f:  test esi, esi
 8097271:  je 8097275
 8097273:  mov eax, DWORD PTR [esi]
 8097275:  mov edi, eax
 8097277:  add edi, DWORD PTR [edx+0x4]
 809727a:  mov eax, ds:0x80d2de8
 809727f:  test eax, eax
 8097281:  jne 8097288
 8097283:  mov eax, DWORD PTR [ebp-0x18]
 8097286:  mov DWORD PTR [eax], edi
 8097288:  mov eax, DWORD PTR [ebp+0xc]
 809728b:  mov DWORD PTR [eax], 0xffffffff
 8097291:  mov eax, DWORD PTR [ebp-0x20]
 8097294:  mov DWORD PTR [esp+0x4], edi
 8097298:  mov DWORD PTR [esp], eax
 809729b:  call 8098490
 80972a0:  lea esp, [ebp-0xc]
 80972a3:  mov eax, edi
 80972a5:  pop ebx
 80972a6:  pop esi
 80972a7:  pop edi
 80972a8:  pop ebp
 80972a9:  ret 0x8
 80972ac:  lea esi, [esi]
 80972b0:  xor edx, edx
 80972b2:  jmp 809720c
 80972b7:  mov DWORD PTR [esp+0xc], 0x80c6541
 80972bf:  mov DWORD PTR [esp+0x8], 0xaf
 80972c7:  mov DWORD PTR [esp+0x4], 0x80c6516
 80972cf:  mov DWORD PTR [esp], 0x80c6523
 80972d6:  call 8051490
 80972db:  mov edi, DWORD PTR [esi+0x4]
 80972de:  add edi, DWORD PTR [ebx]
 80972e0:  jmp 809727a
 80972e2:  xor eax, eax
 80972e4:  xchg DWORD PTR gs:0x1c, eax
 80972eb:  cmp eax, 0x2
 80972ee:  jne 8097266
 80972f4:  mov edx, 0x1
 80972f9:  mov ebx, DWORD PTR gs:0x8
 8097300:  mov ecx, DWORD PTR gs:0x20
 8097307:  add ebx, 0x1c
 809730a:  or ecx, 0x1
 809730d:  mov al, 0xf0
 809730f:  int 0x80
 8097311:  jmp 8097266
 8097316:  mov DWORD PTR gs:0x1c, 0x1
 8097321:  mov DWORD PTR [ebp-0x14], 0x5
 8097328:  jmp 8097221
 809732d:  lea esi, [esi]

08097330 <_dl_fixup>:
 8097330:  push ebp
 8097331:  mov ebp, esp
 8097333:  push edi
 8097334:  push esi
 8097335:  push ebx
 8097336:  mov ebx, eax
 8097338:  sub esp, 0x24
 809733b:  mov eax, DWORD PTR [eax+0x34]
 809733e:  mov eax, DWORD PTR [eax+0x4]
 8097341:  mov DWORD PTR [ebp-0x1c], eax
 8097344:  mov eax, DWORD PTR [ebx+0x7c]
 8097347:  add edx, DWORD PTR [eax+0x4]
 809734a:  mov eax, DWORD PTR [ebx+0x38]
 809734d:  mov ecx, DWORD PTR [edx+0x4]
 8097350:  mov edx, DWORD PTR [edx]
 8097352:  mov edi, ecx
 8097354:  shr edi, 0x8
 8097357:  mov esi, edi
 8097359:  shl esi, 0x4
 809735c:  add esi, DWORD PTR [eax+0x4]
 809735f:  cmp cl, 0x7
 8097362:  mov eax, DWORD PTR [ebx]
 8097364:  mov DWORD PTR [ebp-0x14], edx
 8097367:  mov DWORD PTR [ebp-0x10], esi
 809736a:  mov DWORD PTR [ebp-0x18], eax
 809736d:  jne 809743f
 8097373:  test BYTE PTR [esi+0xd], 0x3
 8097377:  jne 8097463
 809737d:  mov eax, DWORD PTR [ebx+0xe4]
 8097383:  test eax, eax
 8097385:  je 8097438
 809738b:  mov eax, DWORD PTR [eax+0x4]
 809738e:  movzx eax, WORD PTR [eax+edi*2]
 8097392:  mov edx, eax
 8097394:  and edx, 0x7fff
 809739a:  shl edx, 0x4
 809739d:  add edx, DWORD PTR [ebx+0x170]
 80973a3:  mov edi, DWORD PTR [edx+0x4]
 80973a6:  test edi, edi
 80973a8:  je 8097438
 80973ae:  mov eax, gs:0xc
 80973b4:  test eax, eax
 80973b6:  mov edi, 0x1
 80973bb:  jne 809749b
 80973c1:  mov eax, DWORD PTR [esi]
 80973c3:  lea ecx, [ebp-0x10]
 80973c6:  add DWORD PTR [ebp-0x1c], eax
 80973c9:  mov DWORD PTR [esp+0xc], edi
 80973cd:  mov DWORD PTR [esp+0x4], edx
 80973d1:  mov edx, ebx
 80973d3:  mov DWORD PTR [esp+0x10], 0x0
 80973db:  mov DWORD PTR [esp+0x8], 0x1
 80973e3:  mov eax, DWORD PTR [ebx+0x1cc]
 80973e9:  mov DWORD PTR [esp], eax
 80973ec:  mov eax, DWORD PTR [ebp-0x1c]
 80973ef:  call 80791b0
 80973f4:  sub esp, 0x14
 80973f7:  mov esi, eax
 80973f9:  mov eax, gs:0xc
 80973ff:  test eax, eax
 8097401:  jne 809746b
 8097403:  mov edx, DWORD PTR [ebp-0x10]
 8097406:  xor eax, eax
 8097408:  test edx, edx
 809740a:  je 8097417
 809740c:  xor eax, eax
 809740e:  test esi, esi
 8097410:  je 8097414
 8097412:  mov eax, DWORD PTR [esi]
 8097414:  add eax, DWORD PTR [edx+0x4]
 8097417:  mov ebx, DWORD PTR ds:0x80d2de8
 809741d:  test ebx, ebx
 809741f:  jne 809742a
 8097421:  mov ecx, DWORD PTR [ebp-0x14]
 8097424:  mov edx, DWORD PTR [ebp-0x18]
 8097427:  mov DWORD PTR [ecx+edx], eax
 809742a:  lea esp, [ebp-0xc]
 809742d:  pop ebx
 809742e:  pop esi
 809742f:  pop edi
 8097430:  pop ebp
 8097431:  ret
 8097432:  lea esi, [esi]
 8097438:  xor edx, edx
 809743a:  jmp 80973ae
 809743f:  mov DWORD PTR [esp+0xc], 0x80c6553
 8097447:  mov DWORD PTR [esp+0x8], 0x50
 809744f:  mov DWORD PTR [esp+0x4], 0x80c6516
 8097457:  mov DWORD PTR [esp], 0x80c6523
 809745e:  call 8051490
 8097463:  mov eax, DWORD PTR [ebp-0x18]
 8097466:  add eax, DWORD PTR [esi+0x4]
 8097469:  jmp 8097417
 809746b:  xor eax, eax
 809746d:  xchg DWORD PTR gs:0x1c, eax
 8097474:  cmp eax, 0x2
 8097477:  jne 8097403
 8097479:  mov edx, 0x1
 809747e:  mov ebx, DWORD PTR gs:0x8
 8097485:  mov ecx, DWORD PTR gs:0x20
 809748c:  add ebx, 0x1c
 809748f:  or ecx, 0x1
 8097492:  mov al, 0xf0
 8097494:  int 0x80
 8097496:  jmp 8097403
 809749b:  mov DWORD PTR gs:0x1c, 0x1
 80974a6:  mov edi, 0x5
 80974ab:  jmp 80973c1

080974b0 <_dl_init>:
 80974b0:  push ebp
 80974b1:  mov ebp, esp
 80974b3:  push edi
 80974b4:  push esi
 80974b5:  push ebx
 80974b6:  sub esp, 0x2c
 80974b9:  mov ebx, DWORD PTR ds:0x80d2e1c
 80974bf:  mov DWORD PTR [ebp-0x20], eax
 80974c2:  mov eax, DWORD PTR [eax+0xa0]
 80974c8:  mov DWORD PTR [ebp-0x24], edx
 80974cb:  mov edx, DWORD PTR [ebp-0x20]
 80974ce:  mov DWORD PTR [ebp-0x28], ecx
 80974d1:  test ebx, ebx
 80974d3:  mov DWORD PTR [ebp-0x1c], eax
 80974d6:  mov esi, DWORD PTR [edx+0xa4]
 80974dc:  jne 8097689
 80974e2:  mov edi, DWORD PTR [ebp-0x1c]
 80974e5:  test edi, edi
 80974e7:  je 80974fb
 80974e9:  test esi, esi
 80974eb:  je 80974fb
 80974ed:  mov edi, DWORD PTR [esi+0x4]
 80974f0:  shr edi, 0x2
 80974f3:  test edi, edi
 80974f5:  jne 8097610
 80974fb:  mov edx, DWORD PTR [ebp-0x20]
 80974fe:  mov edx, DWORD PTR [edx+0x160]
 8097504:  lea eax, [edx*4-0x4]
 809750b:  mov DWORD PTR [ebp-0x18], edx
 809750e:  mov DWORD PTR [ebp-0x10], eax
 8097511:  jmp 809751c
 8097513:  nop
 8097514:  lea esi, [esi]
 8097518:  sub DWORD PTR [ebp-0x10], 0x4
 809751c:  mov eax, DWORD PTR [ebp-0x18]
 809751f:  test eax, eax
 8097521:  je 80975e8
 8097527:  mov edx, DWORD PTR [ebp-0x20]
 809752a:  sub DWORD PTR [ebp-0x18], 0x1
 809752e:  mov eax, DWORD PTR [edx+0x1f0]
 8097534:  mov edx, DWORD PTR [ebp-0x10]
 8097537:  mov ebx, DWORD PTR [eax+edx]
 809753a:  movzx eax, BYTE PTR [ebx+0x194]
 8097541:  test al, 0x8
 8097543:  jne 8097518
 8097545:  mov edx, eax
 8097547:  mov eax, DWORD PTR [ebx+0x4]
 809754a:  or edx, 0x8
 809754d:  mov BYTE PTR [ebx+0x194], dl
 8097553:  movzx ecx, BYTE PTR [eax]
 8097556:  test cl, cl
 8097558:  je 8097653
 809755e:  mov edx, DWORD PTR [ebx+0x50]
 8097561:  test edx, edx
 8097563:  je 80975f8
 8097569:  test BYTE PTR ds:0x80d2dd0, 0x2
 8097570:  jne 8097665
 8097576:  test edx, edx
 8097578:  je 8097595
 809757a:  mov eax, DWORD PTR [edx+0x4]
 809757d:  mov edx, DWORD PTR [ebp+0x8]
 8097580:  add eax, DWORD PTR [ebx]
 8097582:  mov DWORD PTR [esp+0x8], edx
 8097586:  mov edx, DWORD PTR [ebp-0x28]
 8097589:  mov DWORD PTR [esp+0x4], edx
 809758d:  mov edx, DWORD PTR [ebp-0x24]
 8097590:  mov DWORD PTR [esp], edx
 8097593:  call eax
 8097595:  mov edx, DWORD PTR [ebx+0x84]
 809759b:  test edx, edx
 809759d:  je 8097518
 80975a3:  mov eax, DWORD PTR [ebx+0x8c]
 80975a9:  mov esi, DWORD PTR [ebx]
 80975ab:  add esi, DWORD PTR [edx+0x4]
 80975ae:  mov edi, DWORD PTR [eax+0x4]
 80975b1:  shr edi, 0x2
 80975b4:  test edi, edi
 80975b6:  je 8097518
 80975bc:  xor ebx, ebx
 80975be:  xchg ax, ax
 80975c0:  mov eax, DWORD PTR [ebp+0x8]
 80975c3:  mov edx, DWORD PTR [ebp-0x28]
 80975c6:  mov DWORD PTR [esp+0x8], eax
 80975ca:  mov eax, DWORD PTR [ebp-0x24]
 80975cd:  mov DWORD PTR [esp+0x4], edx
 80975d1:  mov DWORD PTR [esp], eax
 80975d4:  call DWORD PTR [esi+ebx*4]
 80975d7:  add ebx, 0x1
 80975da:  cmp edi, ebx
 80975dc:  ja 80975c0
 80975de:  jmp 8097518
 80975e3:  nop
 80975e4:  lea esi, [esi]
 80975e8:  add esp, 0x2c
 80975eb:  pop ebx
 80975ec:  pop esi
 80975ed:  pop edi
 80975ee:  pop ebp
 80975ef:  ret 0x4
 80975f2:  lea esi, [esi]
 80975f8:  mov esi, DWORD PTR [ebx+0x84]
 80975fe:  test esi, esi
 8097600:  je 8097518
 8097606:  jmp 8097569
 809760b:  nop
 809760c:  lea esi, [esi]
 8097610:  test BYTE PTR ds:0x80d2dd0, 0x2
 8097617:  jne 80976a3
 809761d:  mov eax, DWORD PTR [ebp-0x20]
 8097620:  xor ebx, ebx
 8097622:  mov edx, DWORD PTR [ebp-0x1c]
 8097625:  mov esi, DWORD PTR [eax]
 8097627:  add esi, DWORD PTR [edx+0x4]
 809762a:  lea esi, [esi]
 8097630:  mov eax, DWORD PTR [ebp+0x8]
 8097633:  mov edx, DWORD PTR [ebp-0x28]
 8097636:  mov DWORD PTR [esp+0x8], eax
 809763a:  mov eax, DWORD PTR [ebp-0x24]
 809763d:  mov DWORD PTR [esp+0x4], edx
 8097641:  mov DWORD PTR [esp], eax
 8097644:  call DWORD PTR [esi+ebx*4]
 8097647:  add ebx, 0x1
 809764a:  cmp edi, ebx
 809764c:  ja 8097630
 809764e:  jmp 80974fb
 8097653:  and edx, 0x3
 8097656:  xchg ax, ax
 8097658:  jne 809755e
 809765e:  xchg ax, ax
 8097660:  jmp 8097518
 8097665:  test cl, cl
 8097667:  nop
 8097668:  jne 8097671
 809766a:  mov eax, ds:0x80d0cd0
 809766f:  mov eax, DWORD PTR [eax]
 8097671:  mov DWORD PTR [esp+0x4], eax
 8097675:  mov DWORD PTR [esp], 0x80c655d
 809767c:  call 807c8d0
 8097681:  mov edx, DWORD PTR [ebx+0x50]
 8097684:  jmp 8097576
 8097689:  movzx eax, BYTE PTR [ebx+0x194]
 8097690:  test al, 0x8
 8097692:  je 80976ca
 8097694:  mov DWORD PTR ds:0x80d2e1c, 0x0
 809769e:  jmp 80974e2
 80976a3:  mov edx, DWORD PTR [ebp-0x20]
 80976a6:  mov eax, DWORD PTR [edx+0x4]
 80976a9:  cmp BYTE PTR [eax], 0x0
 80976ac:  jne 80976b5
 80976ae:  mov eax, ds:0x80d0cd0
 80976b3:  mov eax, DWORD PTR [eax]
 80976b5:  mov DWORD PTR [esp+0x4], eax
 80976b9:  mov DWORD PTR [esp], 0x80c6571
 80976c0:  call 807c8d0
 80976c5:  jmp 809761d
 80976ca:  mov edx, eax
 80976cc:  mov eax, DWORD PTR [ebx+0x4]
 80976cf:  or edx, 0x8
 80976d2:  mov BYTE PTR [ebx+0x194], dl
 80976d8:  movzx ecx, BYTE PTR [eax]
 80976db:  test cl, cl
 80976dd:  je 809779d
 80976e3:  mov edx, DWORD PTR [ebx+0x50]
 80976e6:  test edx, edx
 80976e8:  je 8097789
 80976ee:  test BYTE PTR ds:0x80d2dd0, 0x2
 80976f5:  jne 8097766
 80976f7:  test edx, edx
 80976f9:  je 8097716
 80976fb:  mov eax, DWORD PTR [edx+0x4]
 80976fe:  mov edx, DWORD PTR [ebp+0x8]
 8097701:  add eax, DWORD PTR [ebx]
 8097703:  mov DWORD PTR [esp+0x8], edx
 8097707:  mov edx, DWORD PTR [ebp-0x28]
 809770a:  mov DWORD PTR [esp+0x4], edx
 809770e:  mov edx, DWORD PTR [ebp-0x24]
 8097711:  mov DWORD PTR [esp], edx
 8097714:  call eax
 8097716:  mov edx, DWORD PTR [ebx+0x84]
 809771c:  test edx, edx
 809771e:  je 8097694
 8097724:  mov eax, DWORD PTR [ebx+0x8c]
 809772a:  mov edi, DWORD PTR [ebx]
 809772c:  mov eax, DWORD PTR [eax+0x4]
 809772f:  shr eax, 0x2
 8097732:  mov DWORD PTR [ebp-0x14], eax
 8097735:  add edi, DWORD PTR [edx+0x4]
 8097738:  test eax, eax
 809773a:  je 8097694
 8097740:  xor ebx, ebx
 8097742:  mov eax, DWORD PTR [ebp+0x8]
 8097745:  mov edx, DWORD PTR [ebp-0x28]
 8097748:  mov DWORD PTR [esp+0x8], eax
 809774c:  mov eax, DWORD PTR [ebp-0x24]
 809774f:  mov DWORD PTR [esp+0x4], edx
 8097753:  mov DWORD PTR [esp], eax
 8097756:  call DWORD PTR [edi+ebx*4]
 8097759:  add ebx, 0x1
 809775c:  cmp DWORD PTR [ebp-0x14], ebx
 809775f:  ja 8097742
 8097761:  jmp 8097694
 8097766:  test cl, cl
 8097768:  jne 8097771
 809776a:  mov eax, ds:0x80d0cd0
 809776f:  mov eax, DWORD PTR [eax]
 8097771:  mov DWORD PTR [esp+0x4], eax
 8097775:  mov DWORD PTR [esp], 0x80c655d
 809777c:  call 807c8d0
 8097781:  mov edx, DWORD PTR [ebx+0x50]
 8097784:  jmp 80976f7
 8097789:  mov edi, DWORD PTR [ebx+0x84]
 809778f:  test edi, edi
 8097791:  je 8097694
 8097797:  nop
 8097798:  jmp 80976ee
 809779d:  and edx, 0x3
 80977a0:  jne 80976e3
 80977a6:  xchg ax, ax
 80977a8:  jmp 8097694
 80977ad:  nop
 80977ae:  nop
 80977af:  nop

080977b0 <_dl_sort_fini>:
 80977b0:  push ebp
 80977b1:  mov ebp, esp
 80977b3:  push edi
 80977b4:  push esi
 80977b5:  push ebx
 80977b6:  sub esp, 0x4c
 80977b9:  mov DWORD PTR [ebp-0x30], eax
 80977bc:  mov eax, DWORD PTR [ebp+0xc]
 80977bf:  mov DWORD PTR [ebp-0x34], edx
 80977c2:  mov DWORD PTR [ebp-0x38], ecx
 80977c5:  test eax, eax
 80977c7:  jne 80977d2
 80977c9:  mov edx, DWORD PTR [ebp-0x30]
 80977cc:  mov edx, DWORD PTR [edx+0xc]
 80977cf:  mov DWORD PTR [ebp-0x30], edx
 80977d2:  mov ecx, DWORD PTR [ebp-0x30]
 80977d5:  test ecx, ecx
 80977d7:  je 80979e8
 80977dd:  mov ecx, DWORD PTR [ebp-0x34]
 80977e0:  test eax, eax
 80977e2:  sete al
 80977e5:  movzx eax, al
 80977e8:  mov DWORD PTR [ebp-0x14], eax
 80977eb:  lea ecx, [ecx+eax*4]
 80977ee:  add eax, 0x1
 80977f1:  shl eax, 0x2
 80977f4:  mov DWORD PTR [ebp-0x10], ecx
 80977f7:  mov DWORD PTR [ebp-0x3c], eax
 80977fa:  jmp 8097811
 80977fc:  lea esi, [esi]
 8097800:  mov ecx, DWORD PTR [ebp-0x30]
 8097803:  mov ecx, DWORD PTR [ecx+0xc]
 8097806:  test ecx, ecx
 8097808:  mov DWORD PTR [ebp-0x30], ecx
 809780b:  je 80979e8
 8097811:  mov eax, DWORD PTR [ebp-0x30]
 8097814:  mov esi, DWORD PTR [eax+0x14]
 8097817:  cmp esi, eax
 8097819:  jne 8097800
 809781b:  cmp DWORD PTR [eax+0x208], 0xff
 8097822:  je 8097800
 8097824:  mov ecx, DWORD PTR [ebp-0x10]
 8097827:  mov edx, DWORD PTR [ebp-0x14]
 809782a:  cmp eax, DWORD PTR [ecx]
 809782c:  mov edi, edx
 809782e:  je 809785d
 8097830:  mov eax, DWORD PTR [ebp-0x38]
 8097833:  cmp DWORD PTR [ebp-0x14], eax
 8097836:  jae 80979f2
 809783c:  mov eax, DWORD PTR [ebp-0x34]
 809783f:  add eax, DWORD PTR [ebp-0x3c]
 8097842:  mov edx, DWORD PTR [ebp-0x14]
 8097845:  jmp 8097854
 8097847:  nop
 8097848:  add eax, 0x4
 809784b:  cmp DWORD PTR [ebp-0x38], edx
 809784e:  jbe 80979f2
 8097854:  add edx, 0x1
 8097857:  cmp esi, DWORD PTR [eax]
 8097859:  jne 8097848
 809785b:  mov edi, edx
 809785d:  lea ecx, [edx+0x1]
 8097860:  cmp DWORD PTR [ebp-0x38], ecx
 8097863:  mov DWORD PTR [ebp-0x20], ecx
 8097866:  jbe 8097800
 8097868:  mov eax, DWORD PTR [ebp-0x34]
 809786b:  add edx, DWORD PTR [ebp+0x8]
 809786e:  lea eax, [eax+ecx*4]
 8097871:  mov DWORD PTR [ebp-0x18], edx
 8097874:  mov edx, eax
 8097876:  mov DWORD PTR [ebp-0x1c], eax
 8097879:  lea esi, [esi]
 8097880:  mov ebx, DWORD PTR [edx]
 8097882:  mov edx, DWORD PTR [ebx+0x1f0]
 8097888:  test edx, edx
 809788a:  jne 8097897
 809788c:  jmp 80978a2
 809788e:  xchg ax, ax
 8097890:  cmp esi, eax
 8097892:  je 80978d8
 8097894:  add edx, 0x4
 8097897:  mov eax, DWORD PTR [edx]
 8097899:  test eax, eax
 809789b:  nop
 809789c:  lea esi, [esi]
 80978a0:  jne 8097890
 80978a2:  mov eax, DWORD PTR [ebx+0x1f8]
 80978a8:  mov DWORD PTR [ebp-0x24], edi
 80978ab:  test eax, eax
 80978ad:  jne 8097952
 80978b3:  add DWORD PTR [ebp-0x20], 0x1
 80978b7:  mov edx, DWORD PTR [ebp-0x20]
 80978ba:  add DWORD PTR [ebp-0x1c], 0x4
 80978be:  add DWORD PTR [ebp-0x18], 0x1
 80978c2:  cmp DWORD PTR [ebp-0x38], edx
 80978c5:  jbe 8097800
 80978cb:  mov edi, DWORD PTR [ebp-0x24]
 80978ce:  mov edx, DWORD PTR [ebp-0x1c]
 80978d1:  jmp 8097880
 80978d3:  nop
 80978d4:  lea esi, [esi]
 80978d8:  mov ecx, DWORD PTR [ebp-0x20]
 80978db:  lea eax, [edi+0x1]
 80978de:  mov edx, DWORD PTR [ebp-0x34]
 80978e1:  mov DWORD PTR [ebp-0x24], eax
 80978e4:  sub ecx, edi
 80978e6:  mov DWORD PTR [ebp-0x2c], ecx
 80978e9:  mov eax, ecx
 80978eb:  mov ecx, DWORD PTR [ebp-0x24]
 80978ee:  shl eax, 0x2
 80978f1:  mov DWORD PTR [esp+0x8], eax
 80978f5:  lea eax, [edx+edi*4]
 80978f8:  mov DWORD PTR [esp+0x4], eax
 80978fc:  lea eax, [edx+ecx*4]
 80978ff:  mov DWORD PTR [esp], eax
 8097902:  call 806c260
 8097907:  mov edx, DWORD PTR [ebp+0x8]
 809790a:  mov eax, DWORD PTR [ebp-0x34]
 809790d:  test edx, edx
 809790f:  mov DWORD PTR [eax+edi*4], ebx
 8097912:  je 809793f
 8097914:  mov eax, DWORD PTR [ebp+0x8]
 8097917:  mov edx, DWORD PTR [ebp-0x18]
 809791a:  mov ecx, DWORD PTR [ebp-0x2c]
 809791d:  add eax, edi
 809791f:  movzx ebx, BYTE PTR [edx+0x1]
 8097923:  mov DWORD PTR [esp+0x4], eax
 8097927:  mov eax, DWORD PTR [ebp+0x8]
 809792a:  add eax, DWORD PTR [ebp-0x24]
 809792d:  mov DWORD PTR [esp+0x8], ecx
 8097931:  mov DWORD PTR [esp], eax
 8097934:  call 806c260
 8097939:  mov eax, DWORD PTR [ebp+0x8]
 809793c:  mov BYTE PTR [eax+edi], bl
 809793f:  mov edx, DWORD PTR [ebp-0x1c]
 8097942:  mov ebx, DWORD PTR [edx]
 8097944:  mov eax, DWORD PTR [ebx+0x1f8]
 809794a:  test eax, eax
 809794c:  je 80978b3
 8097952:  mov ecx, DWORD PTR [eax]
 8097954:  lea edx, [eax+ecx*4]
 8097957:  test ecx, ecx
 8097959:  je 80978b3
 809795f:  mov eax, DWORD PTR [edx]
 8097961:  sub ecx, 0x1
 8097964:  sub edx, 0x4
 8097967:  cmp esi, eax
 8097969:  jne 8097957
 809796b:  mov ecx, DWORD PTR [ebp-0x24]
 809796e:  mov edi, DWORD PTR [ebp-0x20]
 8097971:  sub edi, DWORD PTR [ebp-0x24]
 8097974:  mov edx, DWORD PTR [ebp-0x24]
 8097977:  add ecx, 0x1
 809797a:  mov DWORD PTR [ebp-0x28], ecx
 809797d:  mov ecx, DWORD PTR [ebp-0x34]
 8097980:  lea eax, [edi*4]
 8097987:  mov DWORD PTR [esp+0x8], eax
 809798b:  lea eax, [ecx+edx*4]
 809798e:  mov edx, DWORD PTR [ebp-0x28]
 8097991:  mov DWORD PTR [esp+0x4], eax
 8097995:  lea eax, [ecx+edx*4]
 8097998:  mov DWORD PTR [esp], eax
 809799b:  call 806c260
 80979a0:  mov eax, DWORD PTR [ebp-0x34]
 80979a3:  mov ecx, DWORD PTR [ebp-0x24]
 80979a6:  mov DWORD PTR [eax+ecx*4], ebx
 80979a9:  mov eax, DWORD PTR [ebp+0x8]
 80979ac:  test eax, eax
 80979ae:  je 80978b3
 80979b4:  mov eax, DWORD PTR [ebp+0x8]
 80979b7:  mov edx, DWORD PTR [ebp-0x18]
 80979ba:  add eax, ecx
 80979bc:  movzx ebx, BYTE PTR [edx+0x1]
 80979c0:  mov DWORD PTR [esp+0x4], eax
 80979c4:  mov eax, DWORD PTR [ebp+0x8]
 80979c7:  add eax, DWORD PTR [ebp-0x28]
 80979ca:  mov DWORD PTR [esp+0x8], edi
 80979ce:  mov DWORD PTR [esp], eax
 80979d1:  call 806c260
 80979d6:  mov eax, DWORD PTR [ebp+0x8]
 80979d9:  mov ecx, DWORD PTR [ebp-0x24]
 80979dc:  mov BYTE PTR [eax+ecx], bl
 80979df:  jmp 80978b3
 80979e4:  lea esi, [esi]
 80979e8:  add esp, 0x4c
 80979eb:  pop ebx
 80979ec:  pop esi
 80979ed:  pop edi
 80979ee:  pop ebp
 80979ef:  ret 0x8
 80979f2:  mov DWORD PTR [esp+0xc], 0x80c65c9
 80979fa:  mov DWORD PTR [esp+0x8], 0x2f
 8097a02:  mov DWORD PTR [esp+0x4], 0x80c6588
 8097a0a:  mov DWORD PTR [esp], 0x80c6592
 8097a11:  call 8051490
 8097a16:  lea esi, [esi]
 8097a19:  lea edi, [edi]

08097a20 <_dl_fini>:
 8097a20:  push ebp
 8097a21:  mov eax, 0x0
 8097a26:  mov ebp, esp
 8097a28:  push edi
 8097a29:  push esi
 8097a2a:  push ebx
 8097a2b:  sub esp, 0x1c
 8097a2e:  test eax, eax
 8097a30:  je 8097a3e
 8097a32:  mov DWORD PTR [esp], 0x80d0d7c
 8097a39:  call 0
 8097a3e:  mov ecx, DWORD PTR ds:0x80d2e44
 8097a44:  mov DWORD PTR [ebp-0x18], 0x0
 8097a4b:  mov DWORD PTR [ebp-0x14], 0x0
 8097a52:  test ecx, ecx
 8097a54:  jne 8097b28
 8097a5a:  mov eax, 0x0
 8097a5f:  test eax, eax
 8097a61:  je 8097a6f
 8097a63:  mov DWORD PTR [esp], 0x80d0d7c
 8097a6a:  call 0
 8097a6f:  mov esi, DWORD PTR [ebp-0x14]
 8097a72:  test esi, esi
 8097a74:  je 8097b0f
 8097a7a:  mov DWORD PTR [ebp-0x10], 0x0
 8097a81:  lea esi, [esi]
 8097a88:  mov eax, DWORD PTR [ebp-0x10]
 8097a8b:  mov edx, DWORD PTR [ebp-0x18]
 8097a8e:  mov edi, DWORD PTR [edx+eax*4]
 8097a91:  movzx eax, BYTE PTR [edi+0x194]
 8097a98:  test al, 0x8
 8097a9a:  je 8097af8
 8097a9c:  and eax, 0xf7
 8097a9f:  mov BYTE PTR [edi+0x194], al
 8097aa5:  mov eax, DWORD PTR [edi+0x88]
 8097aab:  test eax, eax
 8097aad:  je 8097b18
 8097aaf:  test BYTE PTR ds:0x80d2dd0, 0x2
 8097ab6:  jne 8097bb8
 8097abc:  test eax, eax
 8097abe:  je 8097aea
 8097ac0:  mov edx, DWORD PTR [eax+0x4]
 8097ac3:  mov eax, DWORD PTR [edi+0x90]
 8097ac9:  add edx, DWORD PTR [edi]
 8097acb:  mov esi, DWORD PTR [eax+0x4]
 8097ace:  shr esi, 0x2
 8097ad1:  test esi, esi
 8097ad3:  je 8097aea
 8097ad5:  lea ebx, [edx+esi*4-0x4]
 8097ad9:  lea esi, [esi]
 8097ae0:  call DWORD PTR [ebx]
 8097ae2:  sub ebx, 0x4
 8097ae5:  sub esi, 0x1
 8097ae8:  jne 8097ae0
 8097aea:  mov eax, DWORD PTR [edi+0x54]
 8097aed:  test eax, eax
 8097aef:  je 8097af8
 8097af1:  mov eax, DWORD PTR [eax+0x4]
 8097af4:  add eax, DWORD PTR [edi]
 8097af6:  call eax
 8097af8:  add DWORD PTR [ebp-0x10], 0x1
 8097afc:  mov esi, DWORD PTR [ebp-0x10]
 8097aff:  sub DWORD PTR [edi+0x190], 0x1
 8097b06:  cmp DWORD PTR [ebp-0x14], esi
 8097b09:  ja 8097a88
 8097b0f:  lea esp, [ebp-0xc]
 8097b12:  pop ebx
 8097b13:  pop esi
 8097b14:  pop edi
 8097b15:  pop ebp
 8097b16:  ret
 8097b17:  nop
 8097b18:  mov ebx, DWORD PTR [edi+0x54]
 8097b1b:  test ebx, ebx
 8097b1d:  jne 8097aaf
 8097b1f:  nop
 8097b20:  jmp 8097af8
 8097b22:  lea esi, [esi]
 8097b28:  lea eax, [ecx*4]
 8097b2f:  test eax, eax
 8097b31:  mov DWORD PTR [ebp-0x18], 0x0
 8097b38:  je 8097b4c
 8097b3a:  add eax, 0x1e
 8097b3d:  and eax, 0xf0
 8097b40:  sub esp, eax
 8097b42:  lea eax, [esp+0x1f]
 8097b46:  and eax, 0xf0
 8097b49:  mov DWORD PTR [ebp-0x18], eax
 8097b4c:  mov eax, ds:0x80d2e40
 8097b51:  test eax, eax
 8097b53:  je 8097c0e
 8097b59:  mov edx, eax
 8097b5b:  xor ebx, ebx
 8097b5d:  jmp 8097b67
 8097b5f:  nop
 8097b60:  mov edx, DWORD PTR [edx+0xc]
 8097b63:  test edx, edx
 8097b65:  je 8097b90
 8097b67:  cmp DWORD PTR [edx+0x14], edx
 8097b6a:  jne 8097b60
 8097b6c:  cmp ecx, ebx
 8097b6e:  xchg ax, ax
 8097b70:  jbe 8097bea
 8097b72:  mov esi, DWORD PTR [ebp-0x18]
 8097b75:  mov DWORD PTR [edx+0x208], ebx
 8097b7b:  add DWORD PTR [edx+0x190], 0x1
 8097b82:  mov DWORD PTR [esi+ebx*4], edx
 8097b85:  mov edx, DWORD PTR [edx+0xc]
 8097b88:  add ebx, 0x1
 8097b8b:  test edx, edx
 8097b8d:  jne 8097b67
 8097b8f:  nop
 8097b90:  cmp ebx, ecx
 8097b92:  jne 8097c0e
 8097b94:  mov edx, DWORD PTR [ebp-0x18]
 8097b97:  mov ecx, ebx
 8097b99:  mov DWORD PTR [esp+0x4], 0x0
 8097ba1:  mov DWORD PTR [esp], 0x0
 8097ba8:  call 80977b0
 8097bad:  mov DWORD PTR [ebp-0x14], ebx
 8097bb0:  sub esp, 0x8
 8097bb3:  jmp 8097a5a
 8097bb8:  mov eax, DWORD PTR [edi+0x4]
 8097bbb:  cmp BYTE PTR [eax], 0x0
 8097bbe:  jne 8097bc7
 8097bc0:  mov eax, ds:0x80d0cd0
 8097bc5:  mov eax, DWORD PTR [eax]
 8097bc7:  mov DWORD PTR [esp+0x4], eax
 8097bcb:  mov DWORD PTR [esp+0x8], 0x0
 8097bd3:  mov DWORD PTR [esp], 0x80b521c
 8097bda:  call 807c8d0
 8097bdf:  mov eax, DWORD PTR [edi+0x88]
 8097be5:  jmp 8097abc
 8097bea:  mov DWORD PTR [esp+0xc], 0x80c65c0
 8097bf2:  mov DWORD PTR [esp+0x8], 0xb9
 8097bfa:  mov DWORD PTR [esp+0x4], 0x80c6588
 8097c02:  mov DWORD PTR [esp], 0x80c659c
 8097c09:  call 8051490
 8097c0e:  mov DWORD PTR [esp+0xc], 0x80c65c0
 8097c16:  mov DWORD PTR [esp+0x8], 0xc3
 8097c1e:  mov DWORD PTR [esp+0x4], 0x80c6588
 8097c26:  mov DWORD PTR [esp], 0x80c65a8
 8097c2d:  call 8051490
 8097c32:  nop
 8097c33:  nop
 8097c34:  nop
 8097c35:  nop
 8097c36:  nop
 8097c37:  nop
 8097c38:  nop
 8097c39:  nop
 8097c3a:  nop
 8097c3b:  nop
 8097c3c:  nop
 8097c3d:  nop
 8097c3e:  nop
 8097c3f:  nop

08097c40 <match_symbol>:
 8097c40:  push ebp
 8097c41:  mov ebp, esp
 8097c43:  push edi
 8097c44:  push esi
 8097c45:  mov esi, ecx
 8097c47:  push ebx
 8097c48:  sub esp, 0x50
 8097c4b:  mov ecx, DWORD PTR [ebp+0xc]
 8097c4e:  mov DWORD PTR [ebp-0x44], eax
 8097c51:  test BYTE PTR ds:0x80d2dd0, 0x10
 8097c58:  mov eax, DWORD PTR [ecx+0x34]
 8097c5b:  mov edi, DWORD PTR [eax+0x4]
 8097c5e:  jne 8097ed9
 8097c64:  mov ebx, DWORD PTR [ebp+0xc]
 8097c67:  mov eax, DWORD PTR [ebx+0xb4]
 8097c6d:  test eax, eax
 8097c6f:  je 8097e81
 8097c75:  mov eax, DWORD PTR [eax+0x4]
 8097c78:  test eax, eax
 8097c7a:  je 8097f18
 8097c80:  mov edx, DWORD PTR [ebp+0xc]
 8097c83:  mov ebx, eax
 8097c85:  add ebx, DWORD PTR [edx]
 8097c87:  cmp WORD PTR [ebx], 0x1
 8097c8b:  je 8097cae
 8097c8d:  jmp 8097dd1
 8097c92:  lea esi, [esi]
 8097c98:  mov eax, DWORD PTR [ebx+0x10]
 8097c9b:  test eax, eax
 8097c9d:  je 8097ce0
 8097c9f:  add ebx, eax
 8097ca1:  cmp WORD PTR [ebx], 0x1
 8097ca5:  lea esi, [esi]
 8097ca8:  jne 8097dd1
 8097cae:  cmp DWORD PTR [ebx+0x8], esi
 8097cb1:  jne 8097c98
 8097cb3:  mov eax, DWORD PTR [ebx+0xc]
 8097cb6:  mov ecx, DWORD PTR [ebx+eax]
 8097cb9:  lea eax, [edi+ecx]
 8097cbc:  mov DWORD PTR [esp+0x4], eax
 8097cc0:  mov eax, DWORD PTR [ebp+0x8]
 8097cc3:  mov DWORD PTR [esp], eax
 8097cc6:  call 806af90
 8097ccb:  test eax, eax
 8097ccd:  jne 8097c98
 8097ccf:  xor esi, esi
 8097cd1:  lea esp, [ebp-0xc]
 8097cd4:  mov eax, esi
 8097cd6:  pop ebx
 8097cd7:  pop esi
 8097cd8:  pop edi
 8097cd9:  pop ebp
 8097cda:  ret 0x10
 8097cdd:  lea esi, [esi]
 8097ce0:  mov edx, DWORD PTR [ebp+0x14]
 8097ce3:  test edx, edx
 8097ce5:  je 8097f3c
 8097ceb:  mov eax, DWORD PTR [ebp+0x10]
 8097cee:  test eax, eax
 8097cf0:  je 8097ccf
 8097cf2:  mov edx, DWORD PTR [ebp+0x8]
 8097cf5:  mov ecx, DWORD PTR [ebp-0x44]
 8097cf8:  mov DWORD PTR [ebp-0x40], 0x80c66bc
 8097cff:  mov DWORD PTR [ebp-0x38], 0x80c66cb
 8097d06:  mov DWORD PTR [ebp-0x3c], edx
 8097d09:  mov DWORD PTR [ebp-0x34], ecx
 8097d0c:  mov DWORD PTR [ebp-0x30], 0x80b4faf
 8097d13:  mov DWORD PTR [esp], 0x80c66bc
 8097d1a:  call 804eea0
 8097d1f:  mov ebx, DWORD PTR [ebp+0x8]
 8097d22:  mov DWORD PTR [esp], ebx
 8097d25:  mov edi, eax
 8097d27:  call 804eea0
 8097d2c:  mov DWORD PTR [esp], 0x80c66cb
 8097d33:  mov esi, eax
 8097d35:  call 804eea0
 8097d3a:  mov ebx, eax
 8097d3c:  mov eax, DWORD PTR [ebp-0x44]
 8097d3f:  mov DWORD PTR [esp], eax
 8097d42:  call 804eea0
 8097d47:  lea edx, [edi+esi+0x1]
 8097d4b:  add edx, ebx
 8097d4d:  lea eax, [edx+eax+0x13]
 8097d51:  and eax, 0xfc
 8097d54:  sub esp, eax
 8097d56:  lea ebx, [esp+0x27]
 8097d5a:  and ebx, 0xf0
 8097d5d:  mov DWORD PTR [esp+0x4], 0x80c66bc
 8097d65:  mov DWORD PTR [esp], ebx
 8097d68:  call 806c360
 8097d6d:  mov edx, DWORD PTR [ebp+0x8]
 8097d70:  mov DWORD PTR [esp+0x4], edx
 8097d74:  mov DWORD PTR [esp], eax
 8097d77:  call 806c360
 8097d7c:  mov DWORD PTR [esp+0x4], 0x80c66cb
 8097d84:  mov DWORD PTR [esp], eax
 8097d87:  call 806c360
 8097d8c:  mov ecx, DWORD PTR [ebp-0x44]
 8097d8f:  xor esi, esi
 8097d91:  mov DWORD PTR [esp+0x4], ecx
 8097d95:  mov DWORD PTR [esp], eax
 8097d98:  call 806c360
 8097d9d:  mov ecx, ebx
 8097d9f:  mov WORD PTR [eax], 0x29
 8097da4:  mov ebx, DWORD PTR [ebp+0xc]
 8097da7:  mov edx, DWORD PTR [ebx+0x4]
 8097daa:  cmp BYTE PTR [edx], 0x0
 8097dad:  jne 8097db6
 8097daf:  mov eax, ds:0x80d0cd0
 8097db4:  mov edx, DWORD PTR [eax]
 8097db6:  mov DWORD PTR [esp], ecx
 8097db9:  xor eax, eax
 8097dbb:  xor ecx, ecx
 8097dbd:  call 807c240
 8097dc2:  mov eax, esi
 8097dc4:  sub esp, 0x4
 8097dc7:  lea esp, [ebp-0xc]
 8097dca:  pop ebx
 8097dcb:  pop esi
 8097dcc:  pop edi
 8097dcd:  pop ebp
 8097dce:  ret 0x10
 8097dd1:  lea eax, [ebp-0x19]
 8097dd4:  mov BYTE PTR [ebp-0x19], 0x0
 8097dd8:  mov DWORD PTR [esp+0x10], 0x0
 8097de0:  mov DWORD PTR [esp+0xc], 0xa
 8097de8:  mov DWORD PTR [esp+0x8], eax
 8097dec:  movzx eax, WORD PTR [ebx]
 8097def:  mov DWORD PTR [esp+0x4], 0x0
 8097df7:  mov DWORD PTR [esp], eax
 8097dfa:  call 80577b0
 8097dff:  mov DWORD PTR [ebp-0x18], 0x80c6695
 8097e06:  mov DWORD PTR [ebp-0x10], 0x80c66aa
 8097e0d:  mov DWORD PTR [ebp-0x14], eax
 8097e10:  mov esi, eax
 8097e12:  mov DWORD PTR [esp], 0x80c6695
 8097e19:  call 804eea0
 8097e1e:  mov DWORD PTR [esp], esi
 8097e21:  mov ebx, eax
 8097e23:  call 804eea0
 8097e28:  lea eax, [ebx+eax+0x24]
 8097e2c:  and eax, 0xfc
 8097e2f:  sub esp, eax
 8097e31:  lea ebx, [esp+0x27]
 8097e35:  and ebx, 0xf0
 8097e38:  mov DWORD PTR [esp+0x4], 0x80c6695
 8097e40:  mov DWORD PTR [esp], ebx
 8097e43:  call 806c360
 8097e48:  mov DWORD PTR [esp+0x4], esi
 8097e4c:  mov esi, 0x1
 8097e51:  mov DWORD PTR [esp], eax
 8097e54:  call 806c360
 8097e59:  mov ecx, ebx
 8097e5b:  mov DWORD PTR [eax], 0x20666f20
 8097e61:  mov DWORD PTR [eax+0x4], 0x64726556
 8097e68:  mov DWORD PTR [eax+0x8], 0x72206665
 8097e6f:  mov DWORD PTR [eax+0xc], 0x726f6365
 8097e76:  mov WORD PTR [eax+0x10], 0x64
 8097e7c:  jmp 8097da4
 8097e81:  mov ecx, DWORD PTR [ebp+0x10]
 8097e84:  test ecx, ecx
 8097e86:  je 8097ccf
 8097e8c:  mov eax, DWORD PTR [ebp-0x44]
 8097e8f:  mov DWORD PTR [ebp-0x18], 0x80c6620
 8097e96:  mov DWORD PTR [ebp-0x10], 0x80b4faf
 8097e9d:  mov DWORD PTR [ebp-0x14], eax
 8097ea0:  mov DWORD PTR [esp], 0x80c6620
 8097ea7:  call 804eea0
 8097eac:  mov edx, DWORD PTR [ebp-0x44]
 8097eaf:  mov DWORD PTR [esp], edx
 8097eb2:  mov ebx, eax
 8097eb4:  call 804eea0
 8097eb9:  lea eax, [ebx+eax+0x14]
 8097ebd:  and eax, 0xfc
 8097ec0:  sub esp, eax
 8097ec2:  lea ebx, [esp+0x27]
 8097ec6:  and ebx, 0xf0
 8097ec9:  mov DWORD PTR [esp+0x4], 0x80c6620
 8097ed1:  mov DWORD PTR [esp], ebx
 8097ed4:  jmp 8097d87
 8097ed9:  mov ebx, ecx
 8097edb:  mov ecx, DWORD PTR [ecx+0x18]
 8097ede:  mov eax, DWORD PTR [ebx+0x4]
 8097ee1:  cmp BYTE PTR [eax], 0x0
 8097ee4:  jne 8097eed
 8097ee6:  mov eax, ds:0x80d0cd0
 8097eeb:  mov eax, DWORD PTR [eax]
 8097eed:  mov DWORD PTR [esp+0x14], edx
 8097ef1:  mov edx, DWORD PTR [ebp-0x44]
 8097ef4:  mov DWORD PTR [esp+0xc], ecx
 8097ef8:  mov DWORD PTR [esp+0x8], eax
 8097efc:  mov DWORD PTR [esp+0x10], edx
 8097f00:  mov ecx, DWORD PTR [ebp+0x8]
 8097f03:  mov DWORD PTR [esp], 0x80c65d8
 8097f0a:  mov DWORD PTR [esp+0x4], ecx
 8097f0e:  call 807c8d0
 8097f13:  jmp 8097c64
 8097f18:  mov DWORD PTR [esp+0xc], 0x80c6726
 8097f20:  mov DWORD PTR [esp+0x8], 0x71
 8097f28:  mov DWORD PTR [esp+0x4], 0x80c6678
 8097f30:  mov DWORD PTR [esp], 0x80c6685
 8097f37:  call 8051490
 8097f3c:  mov ebx, DWORD PTR [ebp+0x8]
 8097f3f:  mov eax, DWORD PTR [ebp-0x44]
 8097f42:  mov DWORD PTR [ebp-0x40], 0x80c66c1
 8097f49:  mov DWORD PTR [ebp-0x38], 0x80c66cb
 8097f50:  mov DWORD PTR [ebp-0x3c], ebx
 8097f53:  mov DWORD PTR [ebp-0x34], eax
 8097f56:  mov DWORD PTR [ebp-0x30], 0x80b4faf
 8097f5d:  mov DWORD PTR [esp], 0x80c66c1
 8097f64:  call 804eea0
 8097f69:  mov DWORD PTR [esp], ebx
 8097f6c:  mov edi, eax
 8097f6e:  call 804eea0
 8097f73:  mov DWORD PTR [esp], 0x80c66cb
 8097f7a:  mov esi, eax
 8097f7c:  call 804eea0
 8097f81:  mov edx, DWORD PTR [ebp-0x44]
 8097f84:  mov DWORD PTR [esp], edx
 8097f87:  mov ebx, eax
 8097f89:  call 804eea0
 8097f8e:  lea edx, [edi+esi+0x1]
 8097f92:  mov esi, 0x1
 8097f97:  add edx, ebx
 8097f99:  lea eax, [edx+eax+0x13]
 8097f9d:  and eax, 0xfc
 8097fa0:  sub esp, eax
 8097fa2:  lea ebx, [esp+0x27]
 8097fa6:  and ebx, 0xf0
 8097fa9:  mov DWORD PTR [esp+0x4], 0x80c66c1
 8097fb1:  mov DWORD PTR [esp], ebx
 8097fb4:  call 806c360
 8097fb9:  mov ecx, DWORD PTR [ebp+0x8]
 8097fbc:  mov DWORD PTR [esp+0x4], ecx
 8097fc0:  mov DWORD PTR [esp], eax
 8097fc3:  call 806c360
 8097fc8:  mov DWORD PTR [esp+0x4], 0x80c66cb
 8097fd0:  mov DWORD PTR [esp], eax
 8097fd3:  call 806c360
 8097fd8:  mov edx, DWORD PTR [ebp-0x44]
 8097fdb:  mov DWORD PTR [esp+0x4], edx
 8097fdf:  mov DWORD PTR [esp], eax
 8097fe2:  call 806c360
 8097fe7:  mov ecx, ebx
 8097fe9:  mov WORD PTR [eax], 0x29
 8097fee:  jmp 8097da4
 8097ff3:  lea esi, [esi]
 8097ff9:  lea edi, [edi]

08098000 <_dl_check_map_versions>:
 8098000:  push ebp
 8098001:  mov ebp, esp
 8098003:  push edi
 8098004:  push esi
 8098005:  push ebx
 8098006:  sub esp, 0x64
 8098009:  mov DWORD PTR [ebp-0x54], eax
 809800c:  mov DWORD PTR [ebp-0x58], edx
 809800f:  mov edx, eax
 8098011:  mov eax, DWORD PTR [eax+0x34]
 8098014:  mov DWORD PTR [ebp-0x5c], ecx
 8098017:  test eax, eax
 8098019:  je 809834a
 809801f:  mov eax, DWORD PTR [eax+0x4]
 8098022:  mov ecx, DWORD PTR [edx+0xac]
 8098028:  mov DWORD PTR [ebp-0x40], eax
 809802b:  mov eax, DWORD PTR [edx+0xb4]
 8098031:  test ecx, ecx
 8098033:  mov DWORD PTR [ebp-0x3c], ecx
 8098036:  mov DWORD PTR [ebp-0x38], eax
 8098039:  je 80981cc
 809803f:  mov edx, DWORD PTR [ecx+0x4]
 8098042:  mov ecx, DWORD PTR [ebp-0x54]
 8098045:  mov DWORD PTR [ebp-0x44], 0x0
 809804c:  mov DWORD PTR [ebp-0x34], 0x0
 8098053:  mov ecx, DWORD PTR [ecx]
 8098055:  add edx, ecx
 8098057:  cmp WORD PTR [edx], 0x1
 809805b:  mov DWORD PTR [ebp-0x30], edx
 809805e:  jne 809836e
 8098064:  lea esi, [esi]
 8098068:  mov ecx, DWORD PTR [ebp-0x54]
 809806b:  mov esi, DWORD PTR [ebp-0x40]
 809806e:  add esi, DWORD PTR [edx+0x4]
 8098071:  mov eax, DWORD PTR [ecx+0x18]
 8098074:  lea eax, [eax+eax*8]
 8098077:  mov edi, DWORD PTR [eax*4+0x80d2e40]
 809807e:  test edi, edi
 8098080:  jne 8098093
 8098082:  jmp 8098150
 8098087:  nop
 8098088:  mov edi, DWORD PTR [edi+0xc]
 809808b:  test edi, edi
 809808d:  je 8098150
 8098093:  mov edx, edi
 8098095:  mov eax, esi
 8098097:  call 807c340
 809809c:  test eax, eax
 809809e:  je 8098088
 80980a0:  mov eax, DWORD PTR [ebp-0x5c]
 80980a3:  test eax, eax
 80980a5:  jne 809835c
 80980ab:  mov ebx, DWORD PTR [ebp-0x30]
 80980ae:  add ebx, DWORD PTR [ebx+0x8]
 80980b1:  jmp 80980ba
 80980b3:  nop
 80980b4:  lea esi, [esi]
 80980b8:  add ebx, eax
 80980ba:  mov eax, DWORD PTR [ebx]
 80980bc:  mov ecx, DWORD PTR [edi+0x14]
 80980bf:  movzx edx, WORD PTR [ebx+0x4]
 80980c3:  mov DWORD PTR [ebp-0x4c], eax
 80980c6:  mov eax, DWORD PTR [ebp-0x54]
 80980c9:  mov DWORD PTR [ebp-0x50], ecx
 80980cc:  mov ecx, DWORD PTR [ebx+0x8]
 80980cf:  mov eax, DWORD PTR [eax+0x18]
 80980d2:  mov DWORD PTR [ebp-0x48], eax
 80980d5:  mov eax, DWORD PTR [ebp-0x54]
 80980d8:  mov esi, DWORD PTR [eax+0x4]
 80980db:  cmp BYTE PTR [esi], 0x0
 80980de:  jne 80980e7
 80980e0:  mov eax, ds:0x80d0cd0
 80980e5:  mov esi, DWORD PTR [eax]
 80980e7:  mov eax, edx
 80980e9:  and eax, 0x2
 80980ec:  mov DWORD PTR [esp+0xc], eax
 80980f0:  mov edx, DWORD PTR [ebp-0x58]
 80980f3:  mov DWORD PTR [esp+0x8], edx
 80980f7:  mov eax, DWORD PTR [ebp-0x50]
 80980fa:  mov DWORD PTR [esp+0x4], eax
 80980fe:  mov eax, DWORD PTR [ebp-0x40]
 8098101:  add eax, ecx
 8098103:  mov DWORD PTR [esp], eax
 8098106:  mov ecx, DWORD PTR [ebp-0x4c]
 8098109:  mov eax, esi
 809810b:  mov edx, DWORD PTR [ebp-0x48]
 809810e:  call 8097c40
 8098113:  or DWORD PTR [ebp-0x44], eax
 8098116:  movzx eax, WORD PTR [ebx+0x6]
 809811a:  sub esp, 0x10
 809811d:  and eax, 0x7fff
 8098122:  cmp DWORD PTR [ebp-0x34], eax
 8098125:  jae 809812a
 8098127:  mov DWORD PTR [ebp-0x34], eax
 809812a:  mov eax, DWORD PTR [ebx+0xc]
 809812d:  test eax, eax
 809812f:  jne 80980b8
 8098131:  mov edx, DWORD PTR [ebp-0x30]
 8098134:  mov eax, DWORD PTR [edx+0xc]
 8098137:  test eax, eax
 8098139:  je 80981da
 809813f:  add edx, eax
 8098141:  mov DWORD PTR [ebp-0x30], edx
 8098144:  jmp 8098068
 8098149:  lea esi, [esi]
 8098150:  mov eax, DWORD PTR [ebp-0x54]
 8098153:  mov eax, DWORD PTR [eax+0x160]
 8098159:  test eax, eax
 809815b:  je 80981a8
 809815d:  xor ebx, ebx
 809815f:  jmp 8098176
 8098161:  lea esi, [esi]
 8098168:  mov eax, DWORD PTR [ebp-0x54]
 809816b:  add ebx, 0x1
 809816e:  cmp ebx, DWORD PTR [eax+0x160]
 8098174:  jae 80981a8
 8098176:  mov edx, DWORD PTR [ebp-0x54]
 8098179:  lea edi, [ebx*4]
 8098180:  mov eax, DWORD PTR [edx+0x15c]
 8098186:  mov edx, DWORD PTR [eax+ebx*4]
 8098189:  mov eax, esi
 809818b:  call 807c340
 8098190:  test eax, eax
 8098192:  je 8098168
 8098194:  mov ecx, DWORD PTR [ebp-0x54]
 8098197:  mov eax, DWORD PTR [ecx+0x15c]
 809819d:  mov edi, DWORD PTR [eax+edi]
 80981a0:  test edi, edi
 80981a2:  jne 80980a0
 80981a8:  mov DWORD PTR [esp+0xc], 0x80c670f
 80981b0:  mov DWORD PTR [esp+0x8], 0xe6
 80981b8:  mov DWORD PTR [esp+0x4], 0x80c6678
 80981c0:  mov DWORD PTR [esp], 0x80c66f9
 80981c7:  call 8051490
 80981cc:  mov DWORD PTR [ebp-0x44], 0x0
 80981d3:  mov DWORD PTR [ebp-0x34], 0x0
 80981da:  mov eax, DWORD PTR [ebp-0x38]
 80981dd:  test eax, eax
 80981df:  je 8098221
 80981e1:  mov ecx, DWORD PTR [ebp-0x38]
 80981e4:  mov eax, DWORD PTR [ebp-0x54]
 80981e7:  mov edx, DWORD PTR [ecx+0x4]
 80981ea:  add edx, DWORD PTR [eax]
 80981ec:  movzx eax, WORD PTR [edx+0x4]
 80981f0:  and eax, 0x7fff
 80981f5:  cmp DWORD PTR [ebp-0x34], eax
 80981f8:  jb 8098217
 80981fa:  lea esi, [esi]
 8098200:  mov eax, DWORD PTR [edx+0x10]
 8098203:  test eax, eax
 8098205:  je 8098221
 8098207:  add edx, eax
 8098209:  movzx eax, WORD PTR [edx+0x4]
 809820d:  and eax, 0x7fff
 8098212:  cmp DWORD PTR [ebp-0x34], eax
 8098215:  jae 8098200
 8098217:  mov DWORD PTR [ebp-0x34], eax
 809821a:  mov eax, DWORD PTR [edx+0x10]
 809821d:  test eax, eax
 809821f:  jne 8098207
 8098221:  mov edi, DWORD PTR [ebp-0x34]
 8098224:  test edi, edi
 8098226:  jne 8098233
 8098228:  mov eax, DWORD PTR [ebp-0x44]
 809822b:  lea esp, [ebp-0xc]
 809822e:  pop ebx
 809822f:  pop esi
 8098230:  pop edi
 8098231:  pop ebp
 8098232:  ret
 8098233:  mov esi, DWORD PTR [ebp-0x34]
 8098236:  mov edi, 0xc
 809823b:  mov DWORD PTR [esp+0x4], 0x10
 8098243:  add esi, 0x1
 8098246:  mov DWORD PTR [esp], esi
 8098249:  call 804d3c0
 809824e:  mov ecx, DWORD PTR [ebp-0x54]
 8098251:  test eax, eax
 8098253:  mov edx, eax
 8098255:  mov DWORD PTR [ecx+0x170], eax
 809825b:  mov ecx, 0x80c6650
 8098260:  je 8098417
 8098266:  mov eax, DWORD PTR [ebp-0x54]
 8098269:  mov DWORD PTR [eax+0x174], esi
 809826f:  mov ecx, eax
 8098271:  mov eax, DWORD PTR [eax+0xe4]
 8098277:  mov esi, DWORD PTR [ebp-0x3c]
 809827a:  mov eax, DWORD PTR [eax+0x4]
 809827d:  test esi, esi
 809827f:  mov DWORD PTR [ecx+0x1a4], eax
 8098285:  je 80982e7
 8098287:  mov eax, DWORD PTR [ebp-0x3c]
 809828a:  mov ebx, edx
 809828c:  mov esi, DWORD PTR [eax+0x4]
 809828f:  add esi, DWORD PTR [ecx]
 8098291:  lea esi, [esi]
 8098298:  mov ecx, esi
 809829a:  add ecx, DWORD PTR [esi+0x8]
 809829d:  jmp 80982a2
 809829f:  nop
 80982a0:  add ecx, eax
 80982a2:  movzx edx, WORD PTR [ecx+0x6]
 80982a6:  mov eax, DWORD PTR [ecx]
 80982a8:  and edx, 0x7fff
 80982ae:  shl edx, 0x4
 80982b1:  mov DWORD PTR [ebx+edx+0x4], eax
 80982b5:  movzx eax, WORD PTR [ecx+0x6]
 80982b9:  and eax, 0x8000
 80982be:  mov DWORD PTR [ebx+edx+0x8], eax
 80982c2:  mov eax, DWORD PTR [ebp-0x40]
 80982c5:  add eax, DWORD PTR [ecx+0x8]
 80982c8:  mov DWORD PTR [ebx+edx], eax
 80982cb:  mov eax, DWORD PTR [ebp-0x40]
 80982ce:  add eax, DWORD PTR [esi+0x4]
 80982d1:  mov DWORD PTR [ebx+edx+0xc], eax
 80982d5:  mov eax, DWORD PTR [ecx+0xc]
 80982d8:  test eax, eax
 80982da:  jne 80982a0
 80982dc:  mov eax, DWORD PTR [esi+0xc]
 80982df:  test eax, eax
 80982e1:  je 80982e7
 80982e3:  add esi, eax
 80982e5:  jmp 8098298
 80982e7:  mov ebx, DWORD PTR [ebp-0x38]
 80982ea:  test ebx, ebx
 80982ec:  je 8098228
 80982f2:  mov edx, DWORD PTR [ebp-0x38]
 80982f5:  mov ecx, DWORD PTR [ebp-0x54]
 80982f8:  mov ebx, DWORD PTR [edx+0x4]
 80982fb:  add ebx, DWORD PTR [ecx]
 80982fd:  jmp 8098302
 80982ff:  nop
 8098300:  add ebx, eax
 8098302:  test BYTE PTR [ebx+0x2], 0x1
 8098306:  mov esi, DWORD PTR [ebx+0xc]
 8098309:  jne 8098338
 809830b:  mov edx, DWORD PTR [ebp-0x54]
 809830e:  movzx eax, WORD PTR [ebx+0x4]
 8098312:  mov ecx, DWORD PTR [edx+0x170]
 8098318:  mov edx, DWORD PTR [ebx+0x8]
 809831b:  and eax, 0x7fff
 8098320:  shl eax, 0x4
 8098323:  mov DWORD PTR [ecx+eax+0xc], 0x0
 809832b:  mov DWORD PTR [ecx+eax+0x4], edx
 809832f:  mov edx, DWORD PTR [ebp-0x40]
 8098332:  add edx, DWORD PTR [ebx+esi]
 8098335:  mov DWORD PTR [ecx+eax], edx
 8098338:  mov eax, DWORD PTR [ebx+0x10]
 809833b:  test eax, eax
 809833d:  jne 8098300
 809833f:  mov eax, DWORD PTR [ebp-0x44]
 8098342:  lea esp, [ebp-0xc]
 8098345:  pop ebx
 8098346:  pop esi
 8098347:  pop edi
 8098348:  pop ebp
 8098349:  ret
 809834a:  mov DWORD PTR [ebp-0x44], 0x0
 8098351:  mov eax, DWORD PTR [ebp-0x44]
 8098354:  lea esp, [ebp-0xc]
 8098357:  pop ebx
 8098358:  pop esi
 8098359:  pop edi
 809835a:  pop ebp
 809835b:  ret
 809835c:  test BYTE PTR [edi+0x195], 0x2
 8098363:  je 80980ab
 8098369:  jmp 8098131
 809836e:  lea eax, [ebp-0x19]
 8098371:  xor edi, edi
 8098373:  mov BYTE PTR [ebp-0x19], 0x0
 8098377:  mov DWORD PTR [esp+0x10], 0x0
 809837f:  mov DWORD PTR [esp+0xc], 0xa
 8098387:  mov DWORD PTR [esp+0x8], eax
 809838b:  movzx eax, WORD PTR [edx]
 809838e:  mov DWORD PTR [esp+0x4], 0x0
 8098396:  mov DWORD PTR [esp], eax
 8098399:  call 80577b0
 809839e:  mov DWORD PTR [ebp-0x18], 0x80c6695
 80983a5:  mov DWORD PTR [ebp-0x10], 0x80c66e5
 80983ac:  mov DWORD PTR [ebp-0x14], eax
 80983af:  mov esi, eax
 80983b1:  mov DWORD PTR [esp], 0x80c6695
 80983b8:  call 804eea0
 80983bd:  mov DWORD PTR [esp], esi
 80983c0:  mov ebx, eax
 80983c2:  call 804eea0
 80983c7:  lea eax, [ebx+eax+0x26]
 80983cb:  and eax, 0xfc
 80983ce:  sub esp, eax
 80983d0:  lea ebx, [esp+0x23]
 80983d4:  and ebx, 0xf0
 80983d7:  mov DWORD PTR [esp+0x4], 0x80c6695
 80983df:  mov DWORD PTR [esp], ebx
 80983e2:  call 806c360
 80983e7:  mov DWORD PTR [esp+0x4], esi
 80983eb:  mov DWORD PTR [esp], eax
 80983ee:  call 806c360
 80983f3:  mov ecx, ebx
 80983f5:  mov DWORD PTR [eax], 0x20666f20
 80983fb:  mov DWORD PTR [eax+0x4], 0x6e726556
 8098402:  mov DWORD PTR [eax+0x8], 0x20646565
 8098409:  mov DWORD PTR [eax+0xc], 0x6f636572
 8098410:  mov DWORD PTR [eax+0x10], 0xa6472
 8098417:  mov eax, DWORD PTR [ebp-0x54]
 809841a:  mov edx, DWORD PTR [eax+0x4]
 809841d:  cmp BYTE PTR [edx], 0x0
 8098420:  jne 8098429
 8098422:  mov eax, ds:0x80d0cd0
 8098427:  mov edx, DWORD PTR [eax]
 8098429:  mov DWORD PTR [esp], ecx
 809842c:  mov eax, edi
 809842e:  xor ecx, ecx
 8098430:  call 807c080
 8098435:  lea esi, [esi]
 8098439:  lea edi, [edi]

08098440 <_dl_check_all_versions>:
 8098440:  push ebp
 8098441:  mov ebp, esp
 8098443:  push edi
 8098444:  mov edi, ecx
 8098446:  push esi
 8098447:  xor esi, esi
 8098449:  push ebx
 809844a:  mov ebx, eax
 809844c:  sub esp, 0x4
 809844f:  test eax, eax
 8098451:  mov DWORD PTR [ebp-0x10], edx
 8098454:  je 809846c
 8098456:  xchg ax, ax
 8098458:  test BYTE PTR [ebx+0x195], 0x2
 809845f:  je 8098478
 8098461:  xor edx, edx
 8098463:  mov ebx, DWORD PTR [ebx+0xc]
 8098466:  or esi, edx
 8098468:  test ebx, ebx
 809846a:  jne 8098458
 809846c:  add esp, 0x4
 809846f:  mov eax, esi
 8098471:  pop ebx
 8098472:  pop esi
 8098473:  pop edi
 8098474:  pop ebp
 8098475:  ret
 8098476:  xchg ax, ax
 8098478:  mov edx, DWORD PTR [ebp-0x10]
 809847b:  mov ecx, edi
 809847d:  mov eax, ebx
 809847f:  call 8098000
 8098484:  mov edx, 0x1
 8098489:  test eax, eax
 809848b:  jne 8098463
 809848d:  jmp 8098461
 809848f:  nop

08098490 <_dl_mcount>:
 8098490:  push ebp
 8098491:  mov ebp, esp
 8098493:  push edi
 8098494:  push esi
 8098495:  push ebx
 8098496:  sub esp, 0x20
 8098499:  mov eax, ds:0x80d2b34
 809849e:  test eax, eax
 80984a0:  je 8098650
 80984a6:  mov ecx, DWORD PTR ds:0x80d2b50
 80984ac:  mov eax, DWORD PTR [ebp+0x8]
 80984af:  mov edx, DWORD PTR ds:0x80d2b54
 80984b5:  sub eax, ecx
 80984b7:  cmp eax, edx
 80984b9:  mov DWORD PTR [ebp-0x1c], eax
 80984bc:  sbb eax, eax
 80984be:  and DWORD PTR [ebp-0x1c], eax
 80984c1:  mov eax, DWORD PTR [ebp+0xc]
 80984c4:  sub eax, ecx
 80984c6:  cmp edx, eax
 80984c8:  mov DWORD PTR [ebp-0x18], eax
 80984cb:  jbe 8098650
 80984d1:  mov ecx, DWORD PTR ds:0x80d2b58
 80984d7:  mov edx, DWORD PTR ds:0x80d2b40
 80984dd:  shr eax, cl
 80984df:  lea eax, [edx+eax*2]
 80984e2:  mov DWORD PTR [ebp-0x20], eax
 80984e5:  movzx eax, WORD PTR [eax]
 80984e8:  mov DWORD PTR [ebp-0x2c], edx
 80984eb:  movzx eax, ax
 80984ee:  test eax, eax
 80984f0:  jne 809865e
 80984f6:  mov eax, ds:0x80d2b3c
 80984fb:  mov edx, DWORD PTR ds:0x80d2b38
 8098501:  mov DWORD PTR [ebp-0x28], eax
 8098504:  mov eax, DWORD PTR [eax]
 8098506:  cmp eax, edx
 8098508:  je 809859d
 809850e:  mov ecx, DWORD PTR ds:0x80d2b48
 8098514:  cmp ecx, edx
 8098516:  mov DWORD PTR [ebp-0x24], ecx
 8098519:  jbe 809859d
 809851f:  mov eax, ds:0x80d2b44
 8098524:  mov edi, DWORD PTR ds:0x80d2b30
 809852a:  mov DWORD PTR [ebp-0x14], eax
 809852d:  jmp 8098535
 809852f:  nop
 8098530:  cmp edx, DWORD PTR [ebp-0x24]
 8098533:  jae 809859d
 8098535:  lea edx, [edx+edx*2]
 8098538:  mov eax, 0x1
 809853d:  shl edx, 0x2
 8098540:  mov ebx, DWORD PTR [edi+edx+0x4]
 8098544:  shr ebx, 0x2
 8098547:  cmp DWORD PTR gs:0xc, 0x0
 809854f:  je 8098552
 8098551:  xadd DWORD PTR ds:0x80d2b4c, eax
 8098559:  mov DWORD PTR [ebp-0x10], eax
 809855c:  mov ecx, DWORD PTR [ebp-0x10]
 809855f:  lea edx, [edi+edx]
 8098562:  mov eax, DWORD PTR [ebp-0x14]
 8098565:  add ecx, 0x1
 8098568:  lea esi, [eax+ecx*8]
 809856b:  mov DWORD PTR [esi], edx
 809856d:  mov edx, DWORD PTR [ebp-0x2c]
 8098570:  lea ebx, [edx+ebx*2]
 8098573:  movzx eax, WORD PTR [ebx]
 8098576:  mov WORD PTR [esi+0x4], ax
 809857a:  mov WORD PTR [ebx], cx
 809857d:  cmp DWORD PTR gs:0xc, 0x0
 8098585:  je 8098588
 8098587:  inc DWORD PTR ds:0x80d2b38
 809858e:  mov ecx, DWORD PTR [ebp-0x28]
 8098591:  mov edx, DWORD PTR ds:0x80d2b38
 8098597:  mov eax, DWORD PTR [ecx]
 8098599:  cmp eax, edx
 809859b:  jne 8098530
 809859d:  mov edx, DWORD PTR [ebp-0x20]
 80985a0:  movzx eax, WORD PTR [edx]
 80985a3:  test ax, ax
 80985a6:  jne 8098658
 80985ac:  mov edx, 0x1
 80985b1:  mov ecx, DWORD PTR [ebp-0x28]
 80985b4:  mov eax, edx
 80985b6:  cmp DWORD PTR gs:0xc, 0x0
 80985be:  je 80985c1
 80985c0:  xadd DWORD PTR [ecx], eax
 80985c4:  mov DWORD PTR [ebp-0x10], eax
 80985c7:  mov ecx, DWORD PTR [ebp-0x10]
 80985ca:  cmp ecx, DWORD PTR ds:0x80d2b48
 80985d0:  jae 8098650
 80985d2:  mov eax, edx
 80985d4:  cmp DWORD PTR gs:0xc, 0x0
 80985dc:  je 80985df
 80985de:  xadd DWORD PTR ds:0x80d2b4c, eax
 80985e6:  mov DWORD PTR [ebp-0x10], eax
 80985e9:  mov eax, DWORD PTR [ebp-0x10]
 80985ec:  mov edx, DWORD PTR [ebp-0x20]
 80985ef:  add eax, 0x1
 80985f2:  mov WORD PTR [edx], ax
 80985f5:  lea eax, [ecx+ecx*2]
 80985f8:  movzx edx, WORD PTR [edx]
 80985fb:  mov ecx, DWORD PTR [ebp-0x1c]
 80985fe:  shl eax, 0x2
 8098601:  add eax, DWORD PTR ds:0x80d2b30
 8098607:  movzx edx, dx
 809860a:  mov DWORD PTR [eax], ecx
 809860c:  mov ecx, DWORD PTR [ebp-0x18]
 809860f:  shl edx, 0x3
 8098612:  add edx, DWORD PTR ds:0x80d2b44
 8098618:  mov DWORD PTR [eax+0x8], 0x0
 809861f:  mov DWORD PTR [edx], eax
 8098621:  mov DWORD PTR [eax+0x4], ecx
 8098624:  mov WORD PTR [edx+0x4], 0x0
 809862a:  cmp DWORD PTR gs:0xc, 0x0
 8098632:  je 8098635
 8098634:  inc DWORD PTR ds:0x80d2b38
 809863b:  mov ecx, eax
 809863d:  cmp DWORD PTR gs:0xc, 0x0
 8098645:  je 8098648
 8098647:  inc DWORD PTR [ecx+0x8]
 809864b:  nop
 809864c:  lea esi, [esi]
 8098650:  add esp, 0x20
 8098653:  pop ebx
 8098654:  pop esi
 8098655:  pop edi
 8098656:  pop ebp
 8098657:  ret
 8098658:  movzx eax, WORD PTR [edx]
 809865b:  movzx eax, ax
 809865e:  lea edx, [eax*8]
 8098665:  add edx, DWORD PTR ds:0x80d2b44
 809866b:  mov ecx, DWORD PTR [edx]
 809866d:  mov eax, DWORD PTR [ecx]
 809866f:  cmp eax, DWORD PTR [ebp-0x1c]
 8098672:  je 809863d
 8098674:  movzx ebx, WORD PTR [edx+0x4]
 8098678:  test bx, bx
 809867b:  je 80986a0
 809867d:  mov esi, DWORD PTR ds:0x80d2b44
 8098683:  nop
 8098684:  lea esi, [esi]
 8098688:  movzx eax, bx
 809868b:  lea edx, [esi+eax*8]
 809868e:  movzx ebx, WORD PTR [edx+0x4]
 8098692:  test bx, bx
 8098695:  je 80986b8
 8098697:  mov ecx, DWORD PTR [edx]
 8098699:  mov eax, DWORD PTR [ecx]
 809869b:  cmp eax, DWORD PTR [ebp-0x1c]
 809869e:  jne 8098688
 80986a0:  mov eax, DWORD PTR [ecx]
 80986a2:  cmp eax, DWORD PTR [ebp-0x1c]
 80986a5:  je 809863d
 80986a7:  add edx, 0x4
 80986aa:  mov DWORD PTR [ebp-0x20], edx
 80986ad:  jmp 80984f6
 80986b2:  lea esi, [esi]
 80986b8:  mov ecx, DWORD PTR [edx]
 80986ba:  jmp 80986a0
 80986bc:  lea esi, [esi]

080986c0 <_dl_start_profile>:
 80986c0:  push ebp
 80986c1:  mov ebp, esp
 80986c3:  push edi
 80986c4:  push esi
 80986c5:  push ebx
 80986c6:  sub esp, 0x284
 80986cc:  mov eax, ds:0x80d2e18
 80986d1:  mov ecx, DWORD PTR [eax+0x150]
 80986d7:  mov DWORD PTR [ebp-0x260], eax
 80986dd:  movzx eax, WORD PTR [eax+0x158]
 80986e4:  shl eax, 0x5
 80986e7:  lea edx, [ecx+eax]
 80986ea:  cmp ecx, edx
 80986ec:  jae 8098c59
 80986f2:  mov ebx, DWORD PTR ds:0x80d2e2c
 80986f8:  xor edi, edi
 80986fa:  mov DWORD PTR [ebp-0x278], 0xffffffff
 8098704:  mov DWORD PTR [ebp-0x258], ebx
 809870a:  neg ebx
 809870c:  mov DWORD PTR [ebp-0x254], ebx
 8098712:  jmp 809871f
 8098714:  lea esi, [esi]
 8098718:  add ecx, 0x20
 809871b:  cmp ecx, edx
 809871d:  jae 8098768
 809871f:  cmp DWORD PTR [ecx], 0x1
 8098722:  jne 8098718
 8098724:  test BYTE PTR [ecx+0x18], 0x1
 8098728:  je 8098718
 809872a:  mov eax, DWORD PTR [ecx+0x8]
 809872d:  mov ebx, DWORD PTR [ebp-0x258]
 8098733:  lea esi, [ebx+eax-0x1]
 8098737:  and eax, DWORD PTR [ebp-0x254]
 809873d:  add esi, DWORD PTR [ecx+0x14]
 8098740:  and esi, DWORD PTR [ebp-0x254]
 8098746:  cmp DWORD PTR [ebp-0x278], eax
 809874c:  jbe 8098754
 809874e:  mov DWORD PTR [ebp-0x278], eax
 8098754:  cmp edi, esi
 8098756:  jae 8098718
 8098758:  add ecx, 0x20
 809875b:  mov edi, esi
 809875d:  cmp ecx, edx
 809875f:  jb 809871f
 8098761:  lea esi, [esi]
 8098768:  mov esi, DWORD PTR [ebp-0x278]
 809876e:  mov ecx, edi
 8098770:  mov edx, esi
 8098772:  mov eax, DWORD PTR [ebp-0x260]
 8098778:  mov DWORD PTR ds:0x80d2b34, 0x0
 8098782:  add edx, DWORD PTR [eax]
 8098784:  mov eax, DWORD PTR [eax]
 8098786:  mov DWORD PTR ds:0x80d2b58, 0x4
 8098790:  and edx, 0xfc
 8098793:  mov DWORD PTR ds:0x80d2b50, edx
 8098799:  lea eax, [edi+eax+0x3]
 809879d:  and eax, 0xfc
 80987a0:  mov DWORD PTR [ebp-0x23c], eax
 80987a6:  sub eax, edx
 80987a8:  mov DWORD PTR [ebp-0x250], eax
 80987ae:  mov edi, DWORD PTR [ebp-0x250]
 80987b4:  mov ds:0x80d2b54, eax
 80987b9:  shr eax, 1
 80987bb:  mov DWORD PTR [ebp-0x234], eax
 80987c1:  mov eax, 0x51eb851f
 80987c6:  lea edx, [edi+edi*2]
 80987c9:  mul edx
 80987cb:  shr edx, 0x5
 80987ce:  cmp edx, 0x31
 80987d1:  mov DWORD PTR ds:0x80d2b48, edx
 80987d7:  ja 8098948
 80987dd:  mov DWORD PTR ds:0x80d2b48, 0x32
 80987e7:  mov eax, ds:0x80d2b48
 80987ec:  lea edx, [ebp-0x20]
 80987ef:  lea ebx, [ebp-0x40]
 80987f2:  mov DWORD PTR [ebp-0x3c], ecx
 80987f5:  mov DWORD PTR [ebp-0x264], edx
 80987fb:  mov DWORD PTR [ebp-0x24c], eax
 8098801:  mov eax, DWORD PTR [ebp-0x234]
 8098807:  mov DWORD PTR [ebp-0x268], ebx
 809880d:  mov DWORD PTR [ebp-0x18], 0x0
 8098814:  mov DWORD PTR [ebp-0x14], 0x0
 809881b:  shr eax, 1
 809881d:  mov DWORD PTR [ebp-0x10], 0x0
 8098824:  mov DWORD PTR [ebp-0x20], 0x6e6f6d67
 809882b:  mov DWORD PTR [ebp-0x1c], 0x1ffff
 8098832:  mov DWORD PTR [ebp-0x40], esi
 8098835:  mov DWORD PTR [ebp-0x38], eax
 8098838:  call 80a0c60
 809883d:  mov DWORD PTR [ebp-0x30], 0x6f636573
 8098844:  mov DWORD PTR [ebp-0x2c], 0x73646e
 809884b:  mov DWORD PTR [ebp-0x28], 0x0
 8098852:  mov WORD PTR [ebp-0x24], 0x0
 8098858:  mov BYTE PTR [ebp-0x22], 0x0
 809885c:  mov DWORD PTR [ebp-0x34], eax
 809885f:  mov eax, ds:0x80d2dc0
 8098864:  mov BYTE PTR [ebp-0x21], 0x73
 8098868:  mov DWORD PTR [esp], eax
 809886b:  call 804eea0
 8098870:  mov ebx, eax
 8098872:  mov eax, ds:0x80d2de4
 8098877:  mov DWORD PTR [esp], eax
 809887a:  call 804eea0
 809887f:  lea eax, [ebx+eax+0x1c]
 8098883:  and eax, 0xfc
 8098886:  sub esp, eax
 8098888:  mov eax, ds:0x80d2dc0
 809888d:  lea edi, [esp+0x27]
 8098891:  and edi, 0xf0
 8098894:  mov DWORD PTR [ebp-0x25c], edi
 809889a:  mov DWORD PTR [esp], edi
 809889d:  mov DWORD PTR [esp+0x4], eax
 80988a1:  call 806c360
 80988a6:  mov BYTE PTR [eax], 0x2f
 80988a9:  mov edx, DWORD PTR ds:0x80d2de4
 80988af:  add eax, 0x1
 80988b2:  mov DWORD PTR [esp], eax
 80988b5:  mov DWORD PTR [esp+0x4], edx
 80988b9:  call 806c360
 80988be:  mov DWORD PTR [eax], 0x6f72702e
 80988c4:  mov DWORD PTR [eax+0x4], 0x656c6966
 80988cb:  mov BYTE PTR [eax+0x8], 0x0
 80988cf:  mov DWORD PTR [esp], edi
 80988d2:  mov DWORD PTR [esp+0x8], 0x1b6
 80988da:  mov DWORD PTR [esp+0x4], 0x20042
 80988e2:  call 804f1f0
 80988e7:  cmp eax, 0xff
 80988ea:  mov edi, eax
 80988ec:  jne 8098968
 80988ee:  mov edx, 0xffffffe8
 80988f4:  mov esi, 0x80c6733
 80988f9:  mov eax, gs:0x0
 80988ff:  mov ebx, DWORD PTR [eax+edx]
 8098902:  lea eax, [ebp-0x230]
 8098908:  mov DWORD PTR [esp+0x8], 0x190
 8098910:  mov DWORD PTR [esp+0x4], eax
 8098914:  mov DWORD PTR [esp], ebx
 8098917:  call 806b060
 809891c:  mov DWORD PTR [esp+0xc], eax
 8098920:  mov eax, DWORD PTR [ebp-0x25c]
 8098926:  mov DWORD PTR [esp+0x4], esi
 809892a:  mov DWORD PTR [esp], 0x2
 8098931:  mov DWORD PTR [esp+0x8], eax
 8098935:  call 807c890
 809893a:  lea esp, [ebp-0xc]
 809893d:  pop ebx
 809893e:  pop esi
 809893f:  pop edi
 8098940:  pop ebp
 8098941:  ret
 8098942:  lea esi, [esi]
 8098948:  cmp edx, 0x100000
 809894e:  jbe 80987e7
 8098954:  mov DWORD PTR ds:0x80d2b48, 0x100000
 809895e:  jmp 80987e7
 8098963:  nop
 8098964:  lea esi, [esi]
 8098968:  lea eax, [ebp-0xa0]
 809896e:  mov DWORD PTR [esp+0x8], eax
 8098972:  mov DWORD PTR [esp+0x4], edi
 8098976:  mov DWORD PTR [esp], 0x3
 809897d:  call 804f1b0
 8098982:  test eax, eax
 8098984:  js 8098998
 8098986:  mov eax, DWORD PTR [ebp-0x90]
 809898c:  and eax, 0xf000
 8098991:  cmp eax, 0x8000
 8098996:  je 80989c0
 8098998:  mov edx, DWORD PTR gs:0x0
 809899f:  mov esi, 0x80c6782
 80989a4:  mov eax, 0xffffffe8
 80989a9:  mov ebx, DWORD PTR [edx+eax]
 80989ac:  mov DWORD PTR [esp], edi
 80989af:  call 8073140
 80989b4:  jmp 8098902
 80989b9:  lea esi, [esi]
 80989c0:  mov edx, DWORD PTR [ebp-0x24c]
 80989c6:  shl DWORD PTR [ebp-0x24c], 0x4
 80989cd:  mov eax, DWORD PTR [ebp-0x24c]
 80989d3:  mov ebx, DWORD PTR [ebp-0x234]
 80989d9:  shl edx, 0x3
 80989dc:  mov ecx, DWORD PTR [ebp-0x70]
 80989df:  mov DWORD PTR [ebp-0x240], edx
 80989e5:  add eax, edx
 80989e7:  lea eax, [ebx+eax*4+0x40]
 80989eb:  mov ebx, DWORD PTR [ebp-0x74]
 80989ee:  mov DWORD PTR [ebp-0x248], eax
 80989f4:  mov eax, ecx
 80989f6:  or eax, ebx
 80989f8:  je 8098c8d
 80989fe:  mov eax, DWORD PTR [ebp-0x248]
 8098a04:  mov edx, eax
 8098a06:  xor ebx, eax
 8098a08:  sar edx, 0x1f
 8098a0b:  xor ecx, edx
 8098a0d:  or ecx, ebx
 8098a0f:  je 8098a53
 8098a11:  mov DWORD PTR [esp], edi
 8098a14:  call 8073140
 8098a19:  mov eax, ds:0x80d2de4
 8098a1e:  mov DWORD PTR [esp+0xc], eax
 8098a22:  mov ebx, DWORD PTR [ebp-0x25c]
 8098a28:  mov DWORD PTR [esp+0x4], 0x80c679c
 8098a30:  mov DWORD PTR [esp], 0x2
 8098a37:  mov DWORD PTR [esp+0x8], ebx
 8098a3b:  call 807c890
 8098a40:  jmp 809893a
 8098a45:  test eax, eax
 8098a47:  js 8098d6b
 8098a4d:  mov esp, DWORD PTR [ebp-0x244]
 8098a53:  mov DWORD PTR [esp+0x14], 0x0
 8098a5b:  mov DWORD PTR [esp+0x10], edi
 8098a5f:  mov DWORD PTR [esp+0xc], 0x1
 8098a67:  mov DWORD PTR [esp+0x8], 0x3
 8098a6f:  mov eax, DWORD PTR [ebp-0x248]
 8098a75:  mov DWORD PTR [esp], 0x0
 8098a7c:  mov DWORD PTR [esp+0x4], eax
 8098a80:  call 8050000
 8098a85:  cmp eax, 0xff
 8098a88:  mov ebx, eax
 8098a8a:  je 8098c77
 8098a90:  mov DWORD PTR [esp], edi
 8098a93:  call 8073140
 8098a98:  mov edi, DWORD PTR [ebp-0x234]
 8098a9e:  lea edx, [ebx+0x38]
 8098aa1:  mov DWORD PTR [ebp-0x238], edx
 8098aa7:  lea edi, [edx+edi+0x4]
 8098aab:  mov eax, edi
 8098aad:  add eax, 0x4
 8098ab0:  mov ds:0x80d2b30, eax
 8098ab5:  mov eax, DWORD PTR [ebp-0x70]
 8098ab8:  or eax, DWORD PTR [ebp-0x74]
 8098abb:  mov DWORD PTR [ebp-0x26c], edi
 8098ac1:  mov DWORD PTR ds:0x80d2b3c, edi
 8098ac7:  jne 8098d34
 8098acd:  mov eax, DWORD PTR [ebp-0x20]
 8098ad0:  lea edx, [ebx+0x18]
 8098ad3:  mov DWORD PTR [ebx], eax
 8098ad5:  mov eax, DWORD PTR [ebp-0x1c]
 8098ad8:  mov DWORD PTR [ebx+0x4], eax
 8098adb:  mov eax, DWORD PTR [ebp-0x18]
 8098ade:  mov DWORD PTR [ebx+0x8], eax
 8098ae1:  mov eax, DWORD PTR [ebp-0x14]
 8098ae4:  mov DWORD PTR [ebx+0xc], eax
 8098ae7:  mov eax, DWORD PTR [ebp-0x10]
 8098aea:  mov DWORD PTR [ebx+0x14], 0x0
 8098af1:  mov DWORD PTR [ebx+0x10], eax
 8098af4:  mov eax, DWORD PTR [ebp-0x40]
 8098af7:  mov DWORD PTR [ebx+0x18], eax
 8098afa:  mov eax, DWORD PTR [ebp-0x3c]
 8098afd:  mov DWORD PTR [edx+0x4], eax
 8098b00:  mov eax, DWORD PTR [ebp-0x38]
 8098b03:  mov DWORD PTR [edx+0x8], eax
 8098b06:  mov eax, DWORD PTR [ebp-0x34]
 8098b09:  mov DWORD PTR [edx+0xc], eax
 8098b0c:  mov eax, DWORD PTR [ebp-0x30]
 8098b0f:  mov DWORD PTR [edx+0x10], eax
 8098b12:  mov eax, DWORD PTR [ebp-0x2c]
 8098b15:  mov DWORD PTR [edx+0x14], eax
 8098b18:  mov eax, DWORD PTR [ebp-0x28]
 8098b1b:  mov DWORD PTR [edx+0x18], eax
 8098b1e:  mov eax, DWORD PTR [ebp-0x24]
 8098b21:  mov DWORD PTR [edx+0x1c], eax
 8098b24:  mov eax, ds:0x80d2b3c
 8098b29:  mov DWORD PTR [eax-0x4], 0x1
 8098b30:  mov esi, DWORD PTR [ebp-0x250]
 8098b36:  mov DWORD PTR [esp+0x4], 0x1
 8098b3e:  mov eax, DWORD PTR [ebp-0x240]
 8098b44:  shr esi, 1
 8098b46:  add eax, esi
 8098b48:  mov DWORD PTR [esp], eax
 8098b4b:  call 804d3c0
 8098b50:  test eax, eax
 8098b52:  mov ds:0x80d2b40, eax
 8098b57:  je 8098de4
 8098b5d:  mov edx, DWORD PTR ds:0x80d2b3c
 8098b63:  add eax, esi
 8098b65:  mov ds:0x80d2b44, eax
 8098b6a:  mov esi, DWORD PTR ds:0x80d2b48
 8098b70:  mov DWORD PTR ds:0x80d2b4c, 0x0
 8098b7a:  mov eax, DWORD PTR [edx]
 8098b7c:  cmp eax, esi
 8098b7e:  jae 8098b82
 8098b80:  mov esi, DWORD PTR [edx]
 8098b82:  test esi, esi
 8098b84:  mov DWORD PTR ds:0x80d2b38, esi
 8098b8a:  je 8098be1
 8098b8c:  mov edi, DWORD PTR ds:0x80d2b44
 8098b92:  lea eax, [esi+esi*2]
 8098b95:  lea ebx, [eax*4-0xc]
 8098b9c:  lea esi, [esi]
 8098ba0:  mov eax, ds:0x80d2b30
 8098ba5:  mov ecx, DWORD PTR ds:0x80d2b4c
 8098bab:  mov eax, DWORD PTR [eax+ebx+0x4]
 8098baf:  lea edx, [ecx+0x1]
 8098bb2:  mov DWORD PTR ds:0x80d2b4c, edx
 8098bb8:  mov edx, ebx
 8098bba:  sub ebx, 0xc
 8098bbd:  add edx, DWORD PTR ds:0x80d2b30
 8098bc3:  shr eax, 0x2
 8098bc6:  add eax, eax
 8098bc8:  add eax, DWORD PTR ds:0x80d2b40
 8098bce:  sub esi, 0x1
 8098bd1:  mov DWORD PTR [edi+ecx*8], edx
 8098bd4:  movzx edx, WORD PTR [eax]
 8098bd7:  mov WORD PTR [edi+ecx*8+0x4], dx
 8098bdc:  mov WORD PTR [eax], cx
 8098bdf:  jne 8098ba0
 8098be1:  mov ebx, DWORD PTR ds:0x80d2b50
 8098be7:  mov eax, 0x10000
 8098bec:  mov esi, DWORD PTR [ebp-0x23c]
 8098bf2:  sub esi, ebx
 8098bf4:  cmp DWORD PTR [ebp-0x234], esi
 8098bfa:  jae 8098c2a
 8098bfc:  xor edx, edx
 8098bfe:  mov eax, esi
 8098c00:  div DWORD PTR [ebp-0x234]
 8098c06:  mov ecx, eax
 8098c08:  mov eax, 0x1
 8098c0d:  cmp ecx, 0xffff
 8098c13:  ja 8098c2a
 8098c15:  cmp ecx, 0xff
 8098c1b:  jbe 8098da0
 8098c21:  mov eax, 0x10000
 8098c26:  xor edx, edx
 8098c28:  div ecx
 8098c2a:  mov DWORD PTR [esp+0xc], eax
 8098c2e:  mov DWORD PTR [esp+0x8], ebx
 8098c32:  mov ebx, DWORD PTR [ebp-0x234]
 8098c38:  mov DWORD PTR [esp+0x4], ebx
 8098c3c:  mov edi, DWORD PTR [ebp-0x238]
 8098c42:  mov DWORD PTR [esp], edi
 8098c45:  call 80a0ad0
 8098c4a:  mov DWORD PTR ds:0x80d2b34, 0x1
 8098c54:  jmp 809893a
 8098c59:  mov DWORD PTR [ebp-0x278], 0xffffffff
 8098c63:  xor edi, edi
 8098c65:  mov esi, 0xffffffff
 8098c6a:  xor ecx, ecx
 8098c6c:  mov edx, DWORD PTR [ebp-0x278]
 8098c72:  jmp 8098772
 8098c77:  mov esi, 0x80c6769
 8098c7c:  mov edx, DWORD PTR gs:0x0
 8098c83:  mov eax, 0xffffffe8
 8098c88:  jmp 80989a9
 8098c8d:  mov edx, DWORD PTR ds:0x80d2e2c
 8098c93:  mov DWORD PTR [ebp-0x244], esp
 8098c99:  mov esi, DWORD PTR gs:0x0
 8098ca0:  lea eax, [edx+0x12]
 8098ca3:  and eax, 0xfc
 8098ca6:  sub esp, eax
 8098ca8:  lea ebx, [esp+0x27]
 8098cac:  and ebx, 0xf0
 8098caf:  mov DWORD PTR [esp+0x8], edx
 8098cb3:  mov DWORD PTR [esp+0x4], 0x0
 8098cbb:  mov DWORD PTR [esp], ebx
 8098cbe:  call 804ef50
 8098cc3:  mov DWORD PTR [esp+0x8], 0x0
 8098ccb:  mov eax, ds:0x80d2e2c
 8098cd0:  neg eax
 8098cd2:  and eax, DWORD PTR [ebp-0x248]
 8098cd8:  mov DWORD PTR [esp], edi
 8098cdb:  mov DWORD PTR [esp+0x4], eax
 8098cdf:  call 8095c10
 8098ce4:  add eax, 0x1
 8098ce7:  je 8098d6b
 8098ced:  lea esi, [esi]
 8098cf0:  mov eax, ds:0x80d2e2c
 8098cf5:  sub eax, 0x1
 8098cf8:  and eax, DWORD PTR [ebp-0x248]
 8098cfe:  mov DWORD PTR [esp+0x4], ebx
 8098d02:  mov DWORD PTR [esp], edi
 8098d05:  mov DWORD PTR [esp+0x8], eax
 8098d09:  call 804f2b0
 8098d0e:  cmp eax, 0xff
 8098d11:  jne 8098a45
 8098d17:  mov eax, 0xffffffe8
 8098d1c:  mov edx, esi
 8098d1e:  cmp DWORD PTR [esi+eax], 0x4
 8098d22:  je 8098cf0
 8098d24:  mov esi, 0x80c674d
 8098d29:  mov esp, DWORD PTR [ebp-0x244]
 8098d2f:  jmp 80989a9
 8098d34:  mov edi, DWORD PTR [ebp-0x264]
 8098d3a:  mov ecx, 0x14
 8098d3f:  mov esi, ebx
 8098d41:  repz cmpsb
 8098d43:  jne 8098d4c
 8098d45:  mov edx, DWORD PTR [ebx+0x14]
 8098d48:  test edx, edx
 8098d4a:  je 8098d79
 8098d4c:  test ebx, ebx
 8098d4e:  je 8098a19
 8098d54:  mov edx, DWORD PTR [ebp-0x248]
 8098d5a:  mov DWORD PTR [esp], ebx
 8098d5d:  mov DWORD PTR [esp+0x4], edx
 8098d61:  call 8050050
 8098d66:  jmp 8098a19
 8098d6b:  mov edx, DWORD PTR gs:0x0
 8098d72:  mov eax, 0xffffffe8
 8098d77:  jmp 8098d24
 8098d79:  mov edi, DWORD PTR [ebp-0x268]
 8098d7f:  lea esi, [ebx+0x18]
 8098d82:  mov ecx, 0x20
 8098d87:  repz cmpsb
 8098d89:  jne 8098d4c
 8098d8b:  mov edx, DWORD PTR [ebp-0x26c]
 8098d91:  mov eax, DWORD PTR [edx-0x4]
 8098d94:  sub eax, 0x1
 8098d97:  jne 8098d4c
 8098d99:  jmp 8098b30
 8098d9e:  xchg ax, ax
 8098da0:  cmp esi, 0xffffff
 8098da6:  jbe 8098dc7
 8098da8:  mov edi, DWORD PTR [ebp-0x234]
 8098dae:  mov eax, esi
 8098db0:  xor edx, edx
 8098db2:  shr edi, 0x8
 8098db5:  div edi
 8098db7:  xor edx, edx
 8098db9:  mov esi, eax
 8098dbb:  mov eax, 0x1000000
 8098dc0:  div esi
 8098dc2:  jmp 8098c2a
 8098dc7:  shl esi, 0x8
 8098dca:  xor edx, edx
 8098dcc:  mov eax, esi
 8098dce:  div DWORD PTR [ebp-0x234]
 8098dd4:  xor edx, edx
 8098dd6:  mov esi, eax
 8098dd8:  mov eax, 0x1000000
 8098ddd:  div esi
 8098ddf:  jmp 8098c2a
 8098de4:  mov edi, DWORD PTR [ebp-0x248]
 8098dea:  mov DWORD PTR [esp], ebx
 8098ded:  mov DWORD PTR [esp+0x4], edi
 8098df1:  call 8050050
 8098df6:  mov DWORD PTR [esp+0x4], 0x80c67d0
 8098dfe:  mov DWORD PTR [esp], 0x2
 8098e05:  call 807c890
 8098e0a:  mov DWORD PTR [esp], 0x7f
 8098e11:  call 804f170
 8098e16:  nop
 8098e17:  nop
 8098e18:  nop
 8098e19:  nop
 8098e1a:  nop
 8098e1b:  nop
 8098e1c:  nop
 8098e1d:  nop
 8098e1e:  nop
 8098e1f:  nop

08098e20 <do_dlclose>:
 8098e20:  push ebp
 8098e21:  mov ebp, esp
 8098e23:  pop ebp
 8098e24:  jmp 807f1c0
 8098e29:  lea esi, [esi]

08098e30 <do_dlsym>:
 8098e30:  push ebp
 8098e31:  mov ebp, esp
 8098e33:  sub esp, 0x1c
 8098e36:  mov DWORD PTR [ebp-0x4], esi
 8098e39:  mov esi, DWORD PTR [ebp+0x8]
 8098e3c:  mov DWORD PTR [ebp-0x8], ebx
 8098e3f:  mov edx, DWORD PTR [esi]
 8098e41:  lea ecx, [esi+0xc]
 8098e44:  mov eax, DWORD PTR [esi+0x4]
 8098e47:  mov DWORD PTR [esi+0xc], 0x0
 8098e4e:  mov DWORD PTR [esp+0x10], 0x0
 8098e56:  lea ebx, [edx+0x1d0]
 8098e5c:  mov DWORD PTR [esp], ebx
 8098e5f:  mov DWORD PTR [esp+0xc], 0x2
 8098e67:  mov DWORD PTR [esp+0x8], 0x0
 8098e6f:  mov DWORD PTR [esp+0x4], 0x0
 8098e77:  call 80791b0
 8098e7c:  mov DWORD PTR [esi+0x8], eax
 8098e7f:  sub esp, 0x14
 8098e82:  mov ebx, DWORD PTR [ebp-0x8]
 8098e85:  mov esi, DWORD PTR [ebp-0x4]
 8098e88:  mov esp, ebp
 8098e8a:  pop ebp
 8098e8b:  ret
 8098e8c:  lea esi, [esi]

08098e90 <do_dlsym_private>:
 8098e90:  push ebp
 8098e91:  mov ebp, esp
 8098e93:  push esi
 8098e94:  push ebx
 8098e95:  sub esp, 0x24
 8098e98:  mov esi, DWORD PTR [ebp+0x8]
 8098e9b:  lea ebx, [ebp-0x18]
 8098e9e:  mov DWORD PTR [ebp-0x18], 0x80c67fb
 8098ea5:  mov DWORD PTR [ebp-0xc], 0x0
 8098eac:  mov edx, DWORD PTR [esi]
 8098eae:  lea ecx, [esi+0xc]
 8098eb1:  mov DWORD PTR [esi+0xc], 0x0
 8098eb8:  mov eax, DWORD PTR [esi+0x4]
 8098ebb:  mov DWORD PTR [esp+0x10], 0x0
 8098ec3:  mov DWORD PTR [esp+0xc], 0x0
 8098ecb:  mov DWORD PTR [esp+0x8], 0x0
 8098ed3:  mov DWORD PTR [esp+0x4], ebx
 8098ed7:  mov ebx, DWORD PTR [edx+0x1cc]
 8098edd:  mov DWORD PTR [ebp-0x10], 0x1
 8098ee4:  mov DWORD PTR [ebp-0x14], 0x963cf85
 8098eeb:  mov DWORD PTR [esp], ebx
 8098eee:  call 80791b0
 8098ef3:  mov DWORD PTR [esi+0x8], eax
 8098ef6:  sub esp, 0x14
 8098ef9:  lea esp, [ebp-0x8]
 8098efc:  pop ebx
 8098efd:  pop esi
 8098efe:  pop ebp
 8098eff:  ret

08098f00 <do_dlopen>:
 8098f00:  push ebp
 8098f01:  mov ebp, esp
 8098f03:  push ebx
 8098f04:  sub esp, 0x1c
 8098f07:  mov eax, ds:0x80d2218
 8098f0c:  mov ebx, DWORD PTR [ebp+0x8]
 8098f0f:  mov DWORD PTR [esp+0xc], 0xfffffffe
 8098f17:  mov DWORD PTR [esp+0x8], 0x0
 8098f1f:  mov DWORD PTR [esp+0x18], eax
 8098f23:  mov eax, ds:0x80d2e6c
 8098f28:  mov DWORD PTR [esp+0x14], eax
 8098f2c:  mov eax, ds:0x80d2e68
 8098f31:  mov DWORD PTR [esp+0x10], eax
 8098f35:  mov eax, DWORD PTR [ebx+0x4]
 8098f38:  mov DWORD PTR [esp+0x4], eax
 8098f3c:  mov eax, DWORD PTR [ebx]
 8098f3e:  mov DWORD PTR [esp], eax
 8098f41:  call 807d200
 8098f46:  mov DWORD PTR [ebx+0x8], eax
 8098f49:  add esp, 0x1c
 8098f4c:  pop ebx
 8098f4d:  pop ebp
 8098f4e:  ret
 8098f4f:  nop

08098f50 <__libc_dlclose>:
 8098f50:  push ebp
 8098f51:  mov ebp, esp
 8098f53:  push ebx
 8098f54:  sub esp, 0x14
 8098f57:  mov ebx, DWORD PTR [ebp+0x8]
 8098f5a:  mov DWORD PTR [ebp-0x10], 0x0
 8098f61:  lea edx, [ebp-0x10]
 8098f64:  lea ecx, [ebp-0x5]
 8098f67:  lea eax, [ebp-0xc]
 8098f6a:  mov DWORD PTR [esp+0x4], ebx
 8098f6e:  xor ebx, ebx
 8098f70:  mov DWORD PTR [esp], 0x8098e20
 8098f77:  call 807bf90
 8098f7c:  mov edx, DWORD PTR [ebp-0x10]
 8098f7f:  sub esp, 0x8
 8098f82:  test edx, edx
 8098f84:  setne bl
 8098f87:  test ebx, ebx
 8098f89:  je 8098f91
 8098f8b:  cmp BYTE PTR [ebp-0x5], 0x0
 8098f8f:  jne 8098f98
 8098f91:  mov eax, ebx
 8098f93:  mov ebx, DWORD PTR [ebp-0x4]
 8098f96:  leave
 8098f97:  ret
 8098f98:  mov DWORD PTR [esp], edx
 8098f9b:  call 804b4a0
 8098fa0:  mov eax, ebx
 8098fa2:  mov ebx, DWORD PTR [ebp-0x4]
 8098fa5:  leave
 8098fa6:  ret
 8098fa7:  mov esi, esi
 8098fa9:  lea edi, [edi]

08098fb0 <__libc_dlsym_private>:
 8098fb0:  push ebp
 8098fb1:  mov ebp, esp
 8098fb3:  push ebx
 8098fb4:  sub esp, 0x24
 8098fb7:  mov eax, DWORD PTR [ebp+0x8]
 8098fba:  lea ebx, [ebp-0x20]
 8098fbd:  mov DWORD PTR [ebp-0x10], 0x0
 8098fc4:  lea edx, [ebp-0x10]
 8098fc7:  lea ecx, [ebp-0x5]
 8098fca:  mov DWORD PTR [ebp-0x20], eax
 8098fcd:  mov eax, DWORD PTR [ebp+0xc]
 8098fd0:  mov DWORD PTR [ebp-0x1c], eax
 8098fd3:  lea eax, [ebp-0xc]
 8098fd6:  mov DWORD PTR [esp+0x4], ebx
 8098fda:  mov DWORD PTR [esp], 0x8098e90
 8098fe1:  call 807bf90
 8098fe6:  mov edx, DWORD PTR [ebp-0x10]
 8098fe9:  sub esp, 0x8
 8098fec:  test edx, edx
 8098fee:  je 8099000
 8098ff0:  xor eax, eax
 8098ff2:  cmp BYTE PTR [ebp-0x5], 0x0
 8098ff6:  jne 8099018
 8098ff8:  mov ebx, DWORD PTR [ebp-0x4]
 8098ffb:  leave
 8098ffc:  ret
 8098ffd:  lea esi, [esi]
 8099000:  mov eax, DWORD PTR [ebp-0x18]
 8099003:  xor edx, edx
 8099005:  test eax, eax
 8099007:  je 809900b
 8099009:  mov edx, DWORD PTR [eax]
 809900b:  mov eax, DWORD PTR [ebp-0x14]
 809900e:  mov ebx, DWORD PTR [ebp-0x4]
 8099011:  add edx, DWORD PTR [eax+0x4]
 8099014:  leave
 8099015:  mov eax, edx
 8099017:  ret
 8099018:  mov DWORD PTR [esp], edx
 809901b:  call 804b4a0
 8099020:  xor eax, eax
 8099022:  mov ebx, DWORD PTR [ebp-0x4]
 8099025:  leave
 8099026:  ret
 8099027:  mov esi, esi
 8099029:  lea edi, [edi]

08099030 <__libc_dlopen_mode>:
 8099030:  push ebp
 8099031:  mov ebp, esp
 8099033:  sub esp, 0x3c
 8099036:  mov eax, DWORD PTR [ebp+0x8]
 8099039:  mov DWORD PTR [ebp-0xc], ebx
 809903c:  lea ebx, [ebp-0x18]
 809903f:  mov DWORD PTR [ebp-0x8], esi
 8099042:  lea esi, [ebp-0xd]
 8099045:  mov DWORD PTR [ebp-0x4], edi
 8099048:  lea edi, [ebp-0x14]
 809904b:  mov ecx, esi
 809904d:  mov DWORD PTR [ebp-0x24], eax
 8099050:  mov eax, DWORD PTR [ebp+0xc]
 8099053:  mov edx, edi
 8099055:  mov DWORD PTR [ebp-0x14], 0x0
 809905c:  mov DWORD PTR [esp], 0x8098f00
 8099063:  mov DWORD PTR [ebp-0x20], eax
 8099066:  lea eax, [ebp-0x24]
 8099069:  mov DWORD PTR [esp+0x4], eax
 809906d:  mov eax, ebx
 809906f:  call 807bf90
 8099074:  mov edx, DWORD PTR [ebp-0x14]
 8099077:  sub esp, 0x8
 809907a:  test edx, edx
 809907c:  je 8099098
 809907e:  xor eax, eax
 8099080:  cmp BYTE PTR [ebp-0xd], 0x0
 8099084:  jne 80990e8
 8099086:  mov ebx, DWORD PTR [ebp-0xc]
 8099089:  mov esi, DWORD PTR [ebp-0x8]
 809908c:  mov edi, DWORD PTR [ebp-0x4]
 809908f:  mov esp, ebp
 8099091:  pop ebp
 8099092:  ret
 8099093:  nop
 8099094:  lea esi, [esi]
 8099098:  mov eax, DWORD PTR [ebp-0x1c]
 809909b:  mov ecx, esi
 809909d:  mov edx, ebx
 809909f:  mov DWORD PTR [ebp-0x30], 0x80c6809
 80990a6:  mov DWORD PTR [ebp-0x18], 0x0
 80990ad:  mov DWORD PTR [esp], 0x8098e90
 80990b4:  mov DWORD PTR [ebp-0x34], eax
 80990b7:  lea eax, [ebp-0x34]
 80990ba:  mov DWORD PTR [esp+0x4], eax
 80990be:  mov eax, edi
 80990c0:  call 807bf90
 80990c5:  mov eax, DWORD PTR [ebp-0x18]
 80990c8:  sub esp, 0x8
 80990cb:  test eax, eax
 80990cd:  je 8099110
 80990cf:  cmp BYTE PTR [ebp-0xd], 0x0
 80990d3:  jne 8099100
 80990d5:  mov eax, DWORD PTR [ebp-0x1c]
 80990d8:  mov DWORD PTR [esp], eax
 80990db:  call 809fe80
 80990e0:  mov eax, DWORD PTR [ebp-0x1c]
 80990e3:  jmp 8099086
 80990e5:  lea esi, [esi]
 80990e8:  mov DWORD PTR [esp], edx
 80990eb:  call 804b4a0
 80990f0:  xor eax, eax
 80990f2:  lea esi, [esi]
 80990f8:  jmp 8099086
 80990fa:  lea esi, [esi]
 8099100:  mov DWORD PTR [esp], eax
 8099103:  call 804b4a0
 8099108:  jmp 80990d5
 809910a:  lea esi, [esi]
 8099110:  mov eax, DWORD PTR [ebp-0x2c]
 8099113:  xor edx, edx
 8099115:  test eax, eax
 8099117:  je 809911b
 8099119:  mov edx, DWORD PTR [eax]
 809911b:  mov eax, DWORD PTR [ebp-0x28]
 809911e:  add edx, DWORD PTR [eax+0x4]
 8099121:  je 80990d5
 8099123:  mov eax, DWORD PTR [ebp-0x1c]
 8099126:  mov DWORD PTR [edx], 0x80d13f4
 809912c:  mov DWORD PTR [esp], eax
 809912f:  call 809fe80
 8099134:  mov eax, DWORD PTR [ebp-0x1c]
 8099137:  jmp 8099086
 809913c:  lea esi, [esi]

08099140 <__libc_dlsym>:
 8099140:  push ebp
 8099141:  mov ebp, esp
 8099143:  push ebx
 8099144:  sub esp, 0x24
 8099147:  mov eax, DWORD PTR [ebp+0x8]
 809914a:  lea ebx, [ebp-0x20]
 809914d:  mov DWORD PTR [ebp-0x10], 0x0
 8099154:  lea edx, [ebp-0x10]
 8099157:  lea ecx, [ebp-0x5]
 809915a:  mov DWORD PTR [ebp-0x20], eax
 809915d:  mov eax, DWORD PTR [ebp+0xc]
 8099160:  mov DWORD PTR [ebp-0x1c], eax
 8099163:  lea eax, [ebp-0xc]
 8099166:  mov DWORD PTR [esp+0x4], ebx
 809916a:  mov DWORD PTR [esp], 0x8098e30
 8099171:  call 807bf90
 8099176:  mov edx, DWORD PTR [ebp-0x10]
 8099179:  sub esp, 0x8
 809917c:  test edx, edx
 809917e:  je 8099190
 8099180:  xor eax, eax
 8099182:  cmp BYTE PTR [ebp-0x5], 0x0
 8099186:  jne 80991a8
 8099188:  mov ebx, DWORD PTR [ebp-0x4]
 809918b:  leave
 809918c:  ret
 809918d:  lea esi, [esi]
 8099190:  mov eax, DWORD PTR [ebp-0x18]
 8099193:  xor edx, edx
 8099195:  test eax, eax
 8099197:  je 809919b
 8099199:  mov edx, DWORD PTR [eax]
 809919b:  mov eax, DWORD PTR [ebp-0x14]
 809919e:  mov ebx, DWORD PTR [ebp-0x4]
 80991a1:  add edx, DWORD PTR [eax+0x4]
 80991a4:  leave
 80991a5:  mov eax, edx
 80991a7:  ret
 80991a8:  mov DWORD PTR [esp], edx
 80991ab:  call 804b4a0
 80991b0:  xor eax, eax
 80991b2:  mov ebx, DWORD PTR [ebp-0x4]
 80991b5:  leave
 80991b6:  ret
 80991b7:  mov esi, esi
 80991b9:  lea edi, [edi]

080991c0 <__libc_register_dl_open_hook>:
 80991c0:  push ebp
 80991c1:  mov ebp, esp
 80991c3:  push ebx
 80991c4:  sub esp, 0x24
 80991c7:  mov eax, DWORD PTR [ebp+0x8]
 80991ca:  lea ebx, [ebp-0x20]
 80991cd:  mov DWORD PTR [ebp-0x1c], 0x80c6809
 80991d4:  lea ecx, [ebp-0x5]
 80991d7:  mov DWORD PTR [ebp-0x10], 0x0
 80991de:  lea edx, [ebp-0x10]
 80991e1:  mov DWORD PTR [ebp-0x20], eax
 80991e4:  lea eax, [ebp-0xc]
 80991e7:  mov DWORD PTR [esp+0x4], ebx
 80991eb:  mov DWORD PTR [esp], 0x8098e90
 80991f2:  call 807bf90
 80991f7:  mov eax, DWORD PTR [ebp-0x10]
 80991fa:  sub esp, 0x8
 80991fd:  test eax, eax
 80991ff:  je 8099210
 8099201:  cmp BYTE PTR [ebp-0x5], 0x0
 8099205:  jne 8099230
 8099207:  mov ebx, DWORD PTR [ebp-0x4]
 809920a:  leave
 809920b:  ret
 809920c:  lea esi, [esi]
 8099210:  mov eax, DWORD PTR [ebp-0x18]
 8099213:  xor edx, edx
 8099215:  test eax, eax
 8099217:  je 809921b
 8099219:  mov edx, DWORD PTR [eax]
 809921b:  mov eax, DWORD PTR [ebp-0x14]
 809921e:  add edx, DWORD PTR [eax+0x4]
 8099221:  je 8099207
 8099223:  mov DWORD PTR [edx], 0x80d13f4
 8099229:  mov ebx, DWORD PTR [ebp-0x4]
 809922c:  leave
 809922d:  ret
 809922e:  xchg ax, ax
 8099230:  mov DWORD PTR [esp], eax
 8099233:  call 804b4a0
 8099238:  mov ebx, DWORD PTR [ebp-0x4]
 809923b:  leave
 809923c:  ret
 809923d:  nop
 809923e:  nop
 809923f:  nop

08099240 <__mpn_add_n>:
 8099240:  push edi
 8099241:  push esi
 8099242:  mov edi, DWORD PTR [esp+0xc]
 8099246:  mov esi, DWORD PTR [esp+0x10]
 809924a:  mov edx, DWORD PTR [esp+0x14]
 809924e:  mov ecx, DWORD PTR [esp+0x18]
 8099252:  mov eax, ecx
 8099254:  shr ecx, 0x3
 8099257:  neg eax
 8099259:  and eax, 0x7
 809925c:  je 8099278
 809925e:  inc ecx
 809925f:  shl eax, 0x2
 8099262:  sub edi, eax
 8099264:  sub esi, eax
 8099266:  sub edx, eax
 8099268:  shr eax, 0x2
 809926b:  lea eax, [eax+eax*8+0x8099275]
 8099272:  jmp eax
 8099274:  lea esi, [esi]
 8099278:  mov eax, DWORD PTR [esi]
 809927a:  adc eax, DWORD PTR [edx]
 809927c:  mov DWORD PTR [edi], eax
 809927e:  mov eax, DWORD PTR [esi+0x4]
 8099281:  adc eax, DWORD PTR [edx+0x4]
 8099284:  mov DWORD PTR [edi+0x4], eax
 8099287:  mov eax, DWORD PTR [esi+0x8]
 809928a:  adc eax, DWORD PTR [edx+0x8]
 809928d:  mov DWORD PTR [edi+0x8], eax
 8099290:  mov eax, DWORD PTR [esi+0xc]
 8099293:  adc eax, DWORD PTR [edx+0xc]
 8099296:  mov DWORD PTR [edi+0xc], eax
 8099299:  mov eax, DWORD PTR [esi+0x10]
 809929c:  adc eax, DWORD PTR [edx+0x10]
 809929f:  mov DWORD PTR [edi+0x10], eax
 80992a2:  mov eax, DWORD PTR [esi+0x14]
 80992a5:  adc eax, DWORD PTR [edx+0x14]
 80992a8:  mov DWORD PTR [edi+0x14], eax
 80992ab:  mov eax, DWORD PTR [esi+0x18]
 80992ae:  adc eax, DWORD PTR [edx+0x18]
 80992b1:  mov DWORD PTR [edi+0x18], eax
 80992b4:  mov eax, DWORD PTR [esi+0x1c]
 80992b7:  adc eax, DWORD PTR [edx+0x1c]
 80992ba:  mov DWORD PTR [edi+0x1c], eax
 80992bd:  lea edi, [edi+0x20]
 80992c0:  lea esi, [esi+0x20]
 80992c3:  lea edx, [edx+0x20]
 80992c6:  dec ecx
 80992c7:  jne 8099278
 80992c9:  sbb eax, eax
 80992cb:  neg eax
 80992cd:  pop esi
 80992ce:  pop edi
 80992cf:  ret

080992d0 <__mpn_addmul_1>:
 80992d0:  push edi
 80992d1:  push esi
 80992d2:  push ebp
 80992d3:  push ebx
 80992d4:  mov edi, DWORD PTR [esp+0x14]
 80992d8:  mov esi, DWORD PTR [esp+0x18]
 80992dc:  mov ecx, DWORD PTR [esp+0x1c]
 80992e0:  mov ebx, DWORD PTR [esp+0x20]
 80992e4:  lea edi, [edi+ecx*4]
 80992e7:  lea esi, [esi+ecx*4]
 80992ea:  neg ecx
 80992ec:  xor ebp, ebp
 80992ee:  xchg ax, ax
 80992f0:  mov eax, DWORD PTR [esi+ecx*4]
 80992f3:  mul ebx
 80992f5:  add eax, ebp
 80992f7:  adc edx, 0x0
 80992fa:  add DWORD PTR [edi+ecx*4], eax
 80992fd:  adc edx, 0x0
 8099300:  mov ebp, edx
 8099302:  inc ecx
 8099303:  jne 80992f0
 8099305:  mov eax, ebp
 8099307:  pop ebx
 8099308:  pop ebp
 8099309:  pop esi
 809930a:  pop edi
 809930b:  ret
 809930c:  nop
 809930d:  nop
 809930e:  nop
 809930f:  nop

08099310 <_IO_vfscanf>:
 8099310:  push ebp
 8099311:  mov eax, gs:0x0
 8099317:  mov ebp, esp
 8099319:  push edi
 809931a:  push esi
 809931b:  push ebx
 809931c:  sub esp, 0x2ec
 8099322:  mov ebx, DWORD PTR [ebp+0x8]
 8099325:  mov DWORD PTR [ebp-0x2e0], eax
 809932b:  mov eax, 0xffffffe4
 8099330:  mov edx, DWORD PTR [ebp-0x2e0]
 8099336:  mov eax, DWORD PTR [edx+eax]
 8099339:  mov ecx, DWORD PTR [eax]
 809933b:  mov DWORD PTR [ebp-0x2ac], eax
 8099341:  mov eax, DWORD PTR [ebx+0x68]
 8099344:  mov DWORD PTR [ebp-0x2a8], ecx
 809934a:  test eax, eax
 809934c:  jne 8099568
 8099352:  mov DWORD PTR [ebx+0x68], 0xffffffff
 8099359:  mov esi, DWORD PTR [ebp+0x8]
 809935c:  mov edx, DWORD PTR [esi]
 809935e:  test dl, 0x4
 8099361:  jne 809b1ec
 8099367:  mov eax, DWORD PTR [ebp+0xc]
 809936a:  test eax, eax
 809936c:  je 809dd20
 8099372:  mov ebx, DWORD PTR [ebp-0x2ac]
 8099378:  mov eax, DWORD PTR [ebx+0x4]
 809937b:  mov esi, DWORD PTR [eax+0x24]
 809937e:  mov DWORD PTR [ebp-0x298], esi
 8099384:  mov eax, DWORD PTR [eax+0x28]
 8099387:  mov DWORD PTR [ebp-0x294], eax
 809938d:  cmp BYTE PTR [eax], 0x1
 8099390:  sbb eax, eax
 8099392:  not eax
 8099394:  and DWORD PTR [ebp-0x294], eax
 809939a:  mov eax, 0x0
 809939f:  test eax, eax
 80993a1:  setne al
 80993a4:  movzx eax, al
 80993a7:  test eax, eax
 80993a9:  mov DWORD PTR [ebp-0x27c], eax
 80993af:  jne 8099da8
 80993b5:  mov ebx, DWORD PTR [ebp+0x8]
 80993b8:  mov DWORD PTR [ebp-0x54], 0x8061830
 80993bf:  mov DWORD PTR [ebp-0x50], ebx
 80993c2:  test dx, dx
 80993c5:  jns 8099972
 80993cb:  mov ecx, DWORD PTR [ebp+0xc]
 80993ce:  xor edi, edi
 80993d0:  mov ebx, DWORD PTR [ebp+0x10]
 80993d3:  mov DWORD PTR [ebp-0x1c], 0x0
 80993da:  mov DWORD PTR [ebp-0x18], 0x0
 80993e1:  mov DWORD PTR [ebp-0x220], ecx
 80993e7:  mov DWORD PTR [ebp-0x2c0], ebx
 80993ed:  mov ebx, ecx
 80993ef:  mov DWORD PTR [ebp-0x2bc], 0x0
 80993f9:  mov DWORD PTR [ebp-0x21c], 0x0
 8099403:  mov DWORD PTR [ebp-0x2b8], 0x0
 809940d:  mov DWORD PTR [ebp-0x2a4], 0x0
 8099417:  mov DWORD PTR [ebp-0x290], 0x0
 8099421:  mov DWORD PTR [ebp-0x28c], 0x0
 809942b:  mov DWORD PTR [ebp-0x288], 0x0
 8099435:  mov DWORD PTR [ebp-0x284], 0x0
 809943f:  mov DWORD PTR [ebp-0x218], 0x0
 8099449:  mov DWORD PTR [ebp-0x214], 0x0
 8099453:  mov DWORD PTR [ebp-0x20c], 0x0
 809945d:  lea esi, [esi]
 8099460:  movzx eax, BYTE PTR [ebx]
 8099463:  test al, al
 8099465:  je 809b6b6
 809946b:  test al, 0x80
 809946d:  mov ebx, eax
 809946f:  jne 80995c8
 8099475:  add DWORD PTR [ebp-0x220], 0x1
 809947c:  cmp bl, 0x25
 809947f:  je 8099640
 8099485:  mov ecx, DWORD PTR [ebp-0x2ac]
 809948b:  movzx eax, bl
 809948e:  mov edx, DWORD PTR [ecx+0x34]
 8099491:  test BYTE PTR [edx+eax*2+0x1], 0x20
 8099496:  jne 8099618
 809949c:  cmp DWORD PTR [ebp-0x2b8], 0xff
 80994a3:  je 8099590
 80994a9:  mov edx, DWORD PTR [ebp+0x8]
 80994ac:  mov eax, DWORD PTR [edx+0x4]
 80994af:  cmp eax, DWORD PTR [edx+0x8]
 80994b2:  jae 809d310
 80994b8:  movzx ecx, BYTE PTR [eax]
 80994bb:  add eax, 0x1
 80994be:  mov DWORD PTR [edx+0x4], eax
 80994c1:  mov eax, DWORD PTR [ebp-0x21c]
 80994c7:  mov DWORD PTR [ebp-0x200], ecx
 80994cd:  add eax, 0x1
 80994d0:  mov DWORD PTR [ebp-0x1cc], eax
 80994d6:  test edi, edi
 80994d8:  je 8099531
 80994da:  mov ecx, DWORD PTR [ebp-0x2ac]
 80994e0:  mov eax, DWORD PTR [ebp-0x200]
 80994e6:  mov edx, DWORD PTR [ecx+0x34]
 80994e9:  test BYTE PTR [edx+eax*2+0x1], 0x20
 80994ee:  je 8099531
 80994f0:  cmp DWORD PTR [ebp-0x200], 0xff
 80994f7:  je 8099590
 80994fd:  mov ecx, DWORD PTR [ebp+0x8]
 8099500:  mov eax, DWORD PTR [ecx+0x4]
 8099503:  cmp eax, DWORD PTR [ecx+0x8]
 8099506:  jae 809ba63
 809950c:  mov esi, ecx
 809950e:  movzx ecx, BYTE PTR [eax]
 8099511:  add eax, 0x1
 8099514:  mov DWORD PTR [esi+0x4], eax
 8099517:  mov DWORD PTR [ebp-0x200], ecx
 809951d:  mov eax, DWORD PTR [ebp-0x200]
 8099523:  add DWORD PTR [ebp-0x1cc], 0x1
 809952a:  test BYTE PTR [edx+eax*2+0x1], 0x20
 809952f:  jne 80994f0
 8099531:  movzx eax, bl
 8099534:  cmp eax, DWORD PTR [ebp-0x200]
 809953a:  jne 809b20d
 8099540:  xor edi, edi
 8099542:  mov edx, DWORD PTR [ebp-0x1cc]
 8099548:  mov ecx, DWORD PTR [ebp-0x200]
 809954e:  mov ebx, DWORD PTR [ebp-0x220]
 8099554:  mov DWORD PTR [ebp-0x21c], edx
 809955a:  mov DWORD PTR [ebp-0x2b8], ecx
 8099560:  jmp 8099460
 8099565:  lea esi, [esi]
 8099568:  add eax, 0x1
 809956b:  je 8099359
 8099571:  mov DWORD PTR [ebp-0x2bc], 0xffffffff
 809957b:  mov eax, DWORD PTR [ebp-0x2bc]
 8099581:  lea esp, [ebp-0xc]
 8099584:  pop ebx
 8099585:  pop esi
 8099586:  pop edi
 8099587:  pop ebp
 8099588:  ret
 8099589:  lea esi, [esi]
 8099590:  mov eax, 0xffffffe8
 8099595:  mov esi, DWORD PTR [ebp-0x2a4]
 809959b:  mov ebx, DWORD PTR [ebp-0x2e0]
 80995a1:  mov DWORD PTR [ebx+eax], esi
 80995a4:  mov eax, DWORD PTR [ebp-0x2bc]
 80995aa:  test eax, eax
 80995ac:  jne 80999b5
 80995b2:  mov DWORD PTR [ebp-0x2bc], 0xffffffff
 80995bc:  mov ebx, 0x1
 80995c1:  jmp 80997f5
 80995c6:  xchg ax, ax
 80995c8:  mov esi, DWORD PTR [ebp-0x220]
 80995ce:  mov DWORD PTR [esp], esi
 80995d1:  call 804eea0
 80995d6:  lea edx, [ebp-0x1c]
 80995d9:  mov DWORD PTR [esp+0x8], edx
 80995dd:  mov DWORD PTR [esp], esi
 80995e0:  mov DWORD PTR [esp+0x4], eax
 80995e4:  call 80a07d0
 80995e9:  test eax, eax
 80995eb:  mov ebx, eax
 80995ed:  jle 8099d58
 80995f3:  cmp DWORD PTR [ebp-0x2b8], 0xff
 80995fa:  jne 809e873
 8099600:  mov eax, 0xffffffe8
 8099605:  mov ebx, DWORD PTR [ebp-0x2a4]
 809960b:  mov ecx, DWORD PTR [ebp-0x2e0]
 8099611:  mov DWORD PTR [ecx+eax], ebx
 8099614:  jmp 80995a4
 8099616:  xchg ax, ax
 8099618:  mov esi, DWORD PTR [ebp-0x21c]
 809961e:  mov edi, 0x1
 8099623:  mov eax, DWORD PTR [ebp-0x2b8]
 8099629:  mov DWORD PTR [ebp-0x1cc], esi
 809962f:  mov DWORD PTR [ebp-0x200], eax
 8099635:  jmp 8099542
 809963a:  lea esi, [esi]
 8099640:  mov ecx, DWORD PTR [ebp-0x220]
 8099646:  movzx edx, BYTE PTR [ecx]
 8099649:  mov DWORD PTR [ebp-0x1c4], 0x0
 8099653:  movzx eax, dl
 8099656:  sub eax, 0x30
 8099659:  cmp eax, 0x9
 809965c:  ja 80998a5
 8099662:  mov esi, ecx
 8099664:  add ecx, 0x1
 8099667:  movzx ebx, BYTE PTR [esi+0x1]
 809966b:  movzx edx, bl
 809966e:  sub edx, 0x30
 8099671:  cmp edx, 0x9
 8099674:  ja 809968f
 8099676:  xchg ax, ax
 8099678:  add ecx, 0x1
 809967b:  movzx ebx, BYTE PTR [ecx]
 809967e:  lea eax, [eax+eax*4]
 8099681:  lea eax, [edx+eax*2]
 8099684:  movzx edx, bl
 8099687:  sub edx, 0x30
 809968a:  cmp edx, 0x9
 809968d:  jbe 8099678
 809968f:  cmp bl, 0x24
 8099692:  mov DWORD PTR [ebp-0x1c4], eax
 8099698:  je 8099898
 809969e:  mov DWORD PTR [ebp-0x2b4], eax
 80996a4:  mov DWORD PTR [ebp-0x2b0], 0x0
 80996ae:  mov DWORD PTR [ebp-0x1c4], 0x0
 80996b8:  cmp DWORD PTR [ebp-0x2b4], 0x1
 80996bf:  sbb eax, eax
 80996c1:  or DWORD PTR [ebp-0x2b4], eax
 80996c7:  lea eax, [ebx-0x4c]
 80996ca:  lea esi, [ecx+0x1]
 80996cd:  cmp al, 0x2e
 80996cf:  mov DWORD PTR [ebp-0x2d8], esi
 80996d5:  mov DWORD PTR [ebp-0x220], esi
 80996db:  jbe 8099968
 80996e1:  mov eax, ebx
 80996e3:  nop
 80996e4:  lea esi, [esi]
 80996e8:  test al, al
 80996ea:  je 80997f0
 80996f0:  add ecx, 0x1
 80996f3:  mov ebx, eax
 80996f5:  mov DWORD PTR [ebp-0x2d8], ecx
 80996fb:  mov eax, DWORD PTR [ebp-0x2d8]
 8099701:  mov esi, ebx
 8099703:  mov DWORD PTR [ebp-0x220], eax
 8099709:  test edi, edi
 809970b:  jne 809973e
 809970d:  mov edx, esi
 809970f:  cmp dl, 0x5b
 8099712:  je 80997cb
 8099718:  cmp dl, 0x63
 809971b:  je 80997cb
 8099721:  cmp dl, 0x43
 8099724:  lea esi, [esi]
 8099728:  je 80997cb
 809972e:  cmp dl, 0x6e
 8099731:  lea esi, [esi]
 8099738:  je 80997cb
 809973e:  mov edi, 0xffffffe8
 8099744:  mov ecx, DWORD PTR [ebp-0x2e0]
 809974a:  mov ebx, DWORD PTR [ecx+edi]
 809974d:  mov DWORD PTR [ecx+edi], 0x0
 8099754:  lea esi, [esi]
 8099758:  cmp DWORD PTR [ebp-0x2b8], 0xff
 809975f:  je 809bb8b
 8099765:  mov edx, DWORD PTR [ebp+0x8]
 8099768:  mov eax, DWORD PTR [edx+0x4]
 809976b:  cmp eax, DWORD PTR [edx+0x8]
 809976e:  jae 809bb65
 8099774:  movzx ecx, BYTE PTR [eax]
 8099777:  add eax, 0x1
 809977a:  mov DWORD PTR [edx+0x4], eax
 809977d:  mov DWORD PTR [ebp-0x2b8], ecx
 8099783:  add DWORD PTR [ebp-0x21c], 0x1
 809978a:  mov ecx, DWORD PTR [ebp-0x2ac]
 8099790:  mov eax, DWORD PTR [ebp-0x2b8]
 8099796:  mov edx, DWORD PTR [ecx+0x34]
 8099799:  test BYTE PTR [edx+eax*2+0x1], 0x20
 809979e:  jne 8099758
 80997a0:  mov edx, DWORD PTR [ebp-0x2e0]
 80997a6:  add eax, 0x1
 80997a9:  mov DWORD PTR [edx+edi], ebx
 80997ac:  je 80997cb
 80997ae:  movzx eax, BYTE PTR [ebp-0x2b8]
 80997b5:  mov ecx, DWORD PTR [ebp+0x8]
 80997b8:  sub DWORD PTR [ebp-0x21c], 0x1
 80997bf:  mov DWORD PTR [esp+0x4], eax
 80997c3:  mov DWORD PTR [esp], ecx
 80997c6:  call 8068600
 80997cb:  lea eax, [esi-0x25]
 80997ce:  cmp al, 0x53
 80997d0:  jbe 8099aa0
 80997d6:  jmp 80997f0
 80997d8:  fstp st(0)
 80997da:  lea esi, [esi]
 80997e0:  jmp 80997f0
 80997e2:  fstp st(0)
 80997e4:  lea esi, [esi]
 80997e8:  jmp 80997f0
 80997ea:  fstp st(0)
 80997ec:  lea esi, [esi]
 80997f0:  mov ebx, 0x2
 80997f5:  mov esi, DWORD PTR [ebp+0x8]
 80997f8:  cmp WORD PTR [esi], 0x0
 80997fc:  js 8099829
 80997fe:  mov edx, DWORD PTR [esi+0x48]
 8099801:  mov eax, DWORD PTR [edx+0x4]
 8099804:  sub eax, 0x1
 8099807:  test eax, eax
 8099809:  mov DWORD PTR [edx+0x4], eax
 809980c:  jne 8099829
 809980e:  mov DWORD PTR [edx+0x8], 0x0
 8099815:  cmp DWORD PTR gs:0xc, 0x0
 809981d:  je 8099820
 809981f:  sub DWORD PTR [edx], 0x1
 8099823:  jne 809fe59
 8099829:  mov edi, DWORD PTR [ebp-0x27c]
 809982f:  test edi, edi
 8099831:  jne 8099d90
 8099837:  mov esi, DWORD PTR [ebp+0x14]
 809983a:  test esi, esi
 809983c:  je 8099843
 809983e:  mov eax, DWORD PTR [ebp+0x14]
 8099841:  or DWORD PTR [eax], ebx
 8099843:  cmp DWORD PTR [ebp-0x2bc], 0xff
 809984a:  jne 8099d60
 8099850:  mov esi, DWORD PTR [ebp-0x290]
 8099856:  test esi, esi
 8099858:  je 8099571
 809985e:  mov ecx, DWORD PTR [esi]
 8099860:  xor ebx, ebx
 8099862:  test ecx, ecx
 8099864:  je 8099887
 8099866:  xchg ax, ax
 8099868:  mov eax, DWORD PTR [esi+ebx*4+0x8]
 809986c:  mov eax, DWORD PTR [eax]
 809986e:  mov DWORD PTR [esp], eax
 8099871:  call 804b4a0
 8099876:  mov eax, DWORD PTR [esi+ebx*4+0x8]
 809987a:  add ebx, 0x1
 809987d:  cmp DWORD PTR [esi], ebx
 809987f:  mov DWORD PTR [eax], 0x0
 8099885:  ja 8099868
 8099887:  mov esi, DWORD PTR [esi+0x4]
 809988a:  test esi, esi
 809988c:  jne 809985e
 809988e:  jmp 8099571
 8099893:  nop
 8099894:  lea esi, [esi]
 8099898:  lea eax, [ecx+0x1]
 809989b:  mov DWORD PTR [ebp-0x220], eax
 80998a1:  movzx edx, BYTE PTR [ecx+0x1]
 80998a5:  mov eax, DWORD PTR [ebp-0x294]
 80998ab:  test eax, eax
 80998ad:  je 809a548
 80998b3:  mov eax, DWORD PTR [ebp-0x220]
 80998b9:  mov DWORD PTR [ebp-0x2b0], 0x0
 80998c3:  add eax, 0x1
 80998c6:  jmp 80998e2
 80998c8:  cmp dl, 0x27
 80998cb:  je 80998ea
 80998cd:  cmp dl, 0x49
 80998d0:  jne 8099920
 80998d2:  or DWORD PTR [ebp-0x2b0], 0x400
 80998dc:  movzx edx, BYTE PTR [eax]
 80998df:  add eax, 0x1
 80998e2:  cmp dl, 0x2a
 80998e5:  lea ecx, [eax-0x1]
 80998e8:  jne 80998c8
 80998ea:  cmp dl, 0x2a
 80998ed:  je 8099910
 80998ef:  cmp dl, 0x49
 80998f2:  je 80998d2
 80998f4:  cmp dl, 0x27
 80998f7:  nop
 80998f8:  jne 80998dc
 80998fa:  or DWORD PTR [ebp-0x2b0], 0x80
 8099904:  lea esi, [esi]
 8099908:  jmp 80998dc
 809990a:  lea esi, [esi]
 8099910:  or DWORD PTR [ebp-0x2b0], 0x8
 8099917:  jmp 80998dc
 8099919:  lea esi, [esi]
 8099920:  movzx eax, dl
 8099923:  lea edx, [eax-0x30]
 8099926:  cmp edx, 0x9
 8099929:  ja 809bb0e
 809992f:  mov DWORD PTR [ebp-0x2b4], 0x0
 8099939:  lea esi, [esi]
 8099940:  mov ebx, DWORD PTR [ebp-0x2b4]
 8099946:  add ecx, 0x1
 8099949:  lea eax, [ebx+ebx*4]
 809994c:  lea edx, [edx+eax*2]
 809994f:  mov DWORD PTR [ebp-0x2b4], edx
 8099955:  movzx ebx, BYTE PTR [ecx]
 8099958:  movzx eax, bl
 809995b:  lea edx, [eax-0x30]
 809995e:  cmp edx, 0x9
 8099961:  jbe 8099940
 8099963:  jmp 80996b8
 8099968:  movzx eax, al
 809996b:  jmp DWORD PTR [eax*4+0x80c68a8]
 8099972:  mov eax, DWORD PTR [ebp+0x8]
 8099975:  mov ebx, DWORD PTR gs:0x8
 809997c:  mov esi, DWORD PTR [eax+0x48]
 809997f:  cmp DWORD PTR [esi+0x8], ebx
 8099982:  je 80999ac
 8099984:  xor edx, edx
 8099986:  mov ecx, 0x1
 809998b:  mov eax, edx
 809998d:  cmp DWORD PTR gs:0xc, 0x0
 8099995:  je 8099998
 8099997:  cmpxchg DWORD PTR [esi], ecx
 809999b:  jne 809fe65
 80999a1:  mov edx, DWORD PTR [ebp+0x8]
 80999a4:  mov eax, DWORD PTR [edx+0x48]
 80999a7:  mov DWORD PTR [eax+0x8], ebx
 80999aa:  mov esi, eax
 80999ac:  add DWORD PTR [esi+0x4], 0x1
 80999b0:  jmp 80993cb
 80999b5:  mov ebx, 0x1
 80999ba:  jmp 80997f5
 80999bf:  or DWORD PTR [ebp-0x2b0], 0x3
 80999c6:  mov edx, DWORD PTR [ebp-0x2d8]
 80999cc:  movzx eax, BYTE PTR [edx]
 80999cf:  mov ecx, edx
 80999d1:  jmp 80996e8
 80999d6:  mov edx, DWORD PTR [ebp-0x2d8]
 80999dc:  or DWORD PTR [ebp-0x2b0], 0x2000
 80999e6:  movzx eax, BYTE PTR [edx]
 80999e9:  mov ecx, edx
 80999eb:  cmp al, 0x6c
 80999ed:  jne 80996e8
 80999f3:  mov ecx, edx
 80999f5:  or DWORD PTR [ebp-0x2b0], 0x1
 80999fc:  add ecx, 0x1
 80999ff:  movzx eax, BYTE PTR [edx+0x1]
 8099a03:  jmp 80996e8
 8099a08:  mov esi, DWORD PTR [ebp-0x2d8]
 8099a0e:  movzx eax, BYTE PTR [esi]
 8099a11:  cmp al, 0x6c
 8099a13:  je 809a817
 8099a19:  mov ecx, esi
 8099a1b:  or DWORD PTR [ebp-0x2b0], 0x1
 8099a22:  jmp 80996e8
 8099a27:  mov esi, DWORD PTR [ebp-0x2d8]
 8099a2d:  or DWORD PTR [ebp-0x2b0], 0x2
 8099a34:  movzx eax, BYTE PTR [esi]
 8099a37:  mov ecx, esi
 8099a39:  jmp 80996e8
 8099a3e:  mov ecx, DWORD PTR [ebp-0x2d8]
 8099a44:  movzx eax, BYTE PTR [ecx]
 8099a47:  cmp al, 0x68
 8099a49:  je 809a82c
 8099a4f:  or DWORD PTR [ebp-0x2b0], 0x4
 8099a56:  jmp 80996e8
 8099a5b:  mov ecx, DWORD PTR [ebp-0x2d8]
 8099a61:  movzx eax, BYTE PTR [ecx]
 8099a64:  cmp al, 0x73
 8099a66:  je 8099a79
 8099a68:  cmp al, 0x53
 8099a6a:  je 8099a79
 8099a6c:  cmp al, 0x5b
 8099a6e:  mov esi, 0x61
 8099a73:  jne 8099709
 8099a79:  mov esi, DWORD PTR [ebp+0x8]
 8099a7c:  test BYTE PTR [esi+0x3c], 0x10
 8099a80:  jne 80996fb
 8099a86:  or DWORD PTR [ebp-0x2b0], 0x100
 8099a90:  mov ecx, DWORD PTR [ebp-0x2d8]
 8099a96:  jmp 80996e8
 8099a9b:  nop
 8099a9c:  lea esi, [esi]
 8099aa0:  movzx eax, al
 8099aa3:  jmp DWORD PTR [eax*4+0x80c6964]
 8099aaa:  or DWORD PTR [ebp-0x2b0], 0x40
 8099ab1:  mov DWORD PTR [ebp-0x29c], 0xa
 8099abb:  cmp DWORD PTR [ebp-0x2b8], 0xff
 8099ac2:  jne 8099dcc
 8099ac8:  mov eax, 0xffffffe8
 8099acd:  mov edx, DWORD PTR [ebp-0x2a4]
 8099ad3:  mov esi, DWORD PTR [ebp-0x2e0]
 8099ad9:  mov DWORD PTR [esi+eax], edx
 8099adc:  jmp 80995a4
 8099ae1:  and DWORD PTR [ebp-0x2b0], 0xf9
 8099ae8:  or DWORD PTR [ebp-0x2b0], 0x1000
 8099af2:  mov DWORD PTR [ebp-0x29c], 0x10
 8099afc:  jmp 8099abb
 8099afe:  mov eax, DWORD PTR [ebp-0x2b0]
 8099b04:  and eax, 0x8
 8099b07:  mov DWORD PTR [ebp-0x1e8], eax
 8099b0d:  je 809a6a2
 8099b13:  cmp DWORD PTR [ebp-0x2b8], 0xff
 8099b1a:  je 809b468
 8099b20:  mov ebx, DWORD PTR [ebp+0x8]
 8099b23:  mov eax, DWORD PTR [ebx+0x4]
 8099b26:  cmp eax, DWORD PTR [ebx+0x8]
 8099b29:  jae 809f8cb
 8099b2f:  movzx esi, BYTE PTR [eax]
 8099b32:  add eax, 0x1
 8099b35:  mov DWORD PTR [ebx+0x4], eax
 8099b38:  mov DWORD PTR [ebp-0x200], esi
 8099b3e:  mov ecx, DWORD PTR [ebp-0x21c]
 8099b44:  lea edi, [ebp-0x2c]
 8099b47:  mov ebx, DWORD PTR [ebp-0x2b0]
 8099b4d:  mov DWORD PTR [ebp-0x2c], 0x0
 8099b54:  mov DWORD PTR [ebp-0x28], 0x0
 8099b5b:  add ecx, 0x1
 8099b5e:  and ebx, 0x2100
 8099b64:  mov DWORD PTR [ebp-0x1cc], ecx
 8099b6a:  mov DWORD PTR [ebp-0x1e4], ebx
 8099b70:  mov esi, DWORD PTR [ebp-0x2ac]
 8099b76:  mov edx, DWORD PTR [ebp-0x200]
 8099b7c:  mov eax, DWORD PTR [esi+0x34]
 8099b7f:  test BYTE PTR [eax+edx*2+0x1], 0x20
 8099b84:  jne 809d120
 8099b8a:  mov eax, DWORD PTR [ebp-0x1e8]
 8099b90:  movzx ebx, BYTE PTR [ebp-0x200]
 8099b97:  test eax, eax
 8099b99:  mov BYTE PTR [ebp-0xd], bl
 8099b9c:  je 809a638
 8099ba2:  lea esi, [esi]
 8099ba8:  lea esi, [ebp-0xd]
 8099bab:  mov DWORD PTR [esp+0xc], edi
 8099baf:  mov DWORD PTR [esp+0x8], 0x1
 8099bb7:  mov DWORD PTR [esp+0x4], esi
 8099bbb:  mov DWORD PTR [esp], 0x0
 8099bc2:  call 80a0810
 8099bc7:  cmp eax, 0xfe
 8099bca:  mov ebx, eax
 8099bcc:  jne 809b290
 8099bd2:  cmp DWORD PTR [ebp-0x200], 0xff
 8099bd9:  je 809b268
 8099bdf:  mov edx, DWORD PTR [ebp+0x8]
 8099be2:  mov eax, DWORD PTR [edx+0x4]
 8099be5:  cmp eax, DWORD PTR [edx+0x8]
 8099be8:  jae 809cbd0
 8099bee:  movzx ecx, BYTE PTR [eax]
 8099bf1:  add eax, 0x1
 8099bf4:  mov DWORD PTR [edx+0x4], eax
 8099bf7:  mov DWORD PTR [ebp-0x200], ecx
 8099bfd:  movzx eax, BYTE PTR [ebp-0x200]
 8099c04:  add DWORD PTR [ebp-0x1cc], 0x1
 8099c0b:  mov BYTE PTR [ebp-0xd], al
 8099c0e:  jmp 8099ba8
 8099c10:  cmp DWORD PTR [ebp-0x2b4], 0xff
 8099c17:  je 809b162
 8099c1d:  mov esi, DWORD PTR [ebp-0x2b0]
 8099c23:  and esi, 0x8
 8099c26:  mov DWORD PTR [ebp-0x1fc], esi
 8099c2c:  je 809a750
 8099c32:  cmp DWORD PTR [ebp-0x2b8], 0xff
 8099c39:  je 809b468
 8099c3f:  mov ebx, DWORD PTR [ebp+0x8]
 8099c42:  mov eax, DWORD PTR [ebx+0x4]
 8099c45:  cmp eax, DWORD PTR [ebx+0x8]
 8099c48:  jae 809f932
 8099c4e:  mov ecx, DWORD PTR [ebp-0x21c]
 8099c54:  movzx esi, BYTE PTR [eax]
 8099c57:  add eax, 0x1
 8099c5a:  mov DWORD PTR [ebx+0x4], eax
 8099c5d:  add ecx, 0x1
 8099c60:  mov DWORD PTR [ebp-0x200], esi
 8099c66:  mov DWORD PTR [ebp-0x1cc], ecx
 8099c6c:  mov ebx, DWORD PTR [ebp-0x2b0]
 8099c72:  lea esi, [ebp-0x24]
 8099c75:  mov DWORD PTR [ebp-0x24], 0x0
 8099c7c:  lea edi, [ebp-0xd]
 8099c7f:  mov DWORD PTR [ebp-0x20], 0x0
 8099c86:  and ebx, 0x2100
 8099c8c:  mov DWORD PTR [ebp-0x1f8], ebx
 8099c92:  mov ebx, DWORD PTR [ebp-0x200]
 8099c98:  mov ecx, DWORD PTR [ebp-0x1fc]
 8099c9e:  movzx eax, BYTE PTR [ebp-0x200]
 8099ca5:  test ecx, ecx
 8099ca7:  mov BYTE PTR [ebp-0xd], al
 8099caa:  jne 809a5e0
 8099cb0:  mov edx, DWORD PTR [ebp-0x1f8]
 8099cb6:  test edx, edx
 8099cb8:  je 8099cda
 8099cba:  mov ecx, DWORD PTR [ebp-0x284]
 8099cc0:  mov ebx, DWORD PTR [ebp-0x218]
 8099cc6:  mov edx, DWORD PTR [ecx]
 8099cc8:  shl ebx, 0x2
 8099ccb:  lea eax, [edx+ebx]
 8099cce:  cmp DWORD PTR [ebp-0x288], eax
 8099cd4:  je 809cf10
 8099cda:  mov edx, DWORD PTR [ebp-0x218]
 8099ce0:  mov eax, DWORD PTR [ebp-0x288]
 8099ce6:  mov DWORD PTR [ebp-0x1f4], edx
 8099cec:  lea esi, [esi]
 8099cf0:  mov DWORD PTR [esp+0xc], esi
 8099cf4:  mov DWORD PTR [esp+0x8], 0x1
 8099cfc:  mov DWORD PTR [esp+0x4], edi
 8099d00:  mov DWORD PTR [esp], eax
 8099d03:  call 80a0810
 8099d08:  cmp eax, 0xfe
 8099d0b:  jne 809b481
 8099d11:  cmp DWORD PTR [ebp-0x200], 0xff
 8099d18:  je 809b240
 8099d1e:  mov ebx, DWORD PTR [ebp+0x8]
 8099d21:  mov eax, DWORD PTR [ebx+0x4]
 8099d24:  cmp eax, DWORD PTR [ebx+0x8]
 8099d27:  jae 809cb8e
 8099d2d:  movzx edx, BYTE PTR [eax]
 8099d30:  add eax, 0x1
 8099d33:  mov DWORD PTR [ebx+0x4], eax
 8099d36:  mov DWORD PTR [ebp-0x200], edx
 8099d3c:  movzx ebx, BYTE PTR [ebp-0x200]
 8099d43:  add DWORD PTR [ebp-0x1cc], 0x1
 8099d4a:  mov eax, DWORD PTR [ebp-0x288]
 8099d50:  mov BYTE PTR [ebp-0xd], bl
 8099d53:  jmp 8099cf0
 8099d55:  lea esi, [esi]
 8099d58:  movzx ebx, BYTE PTR [esi]
 8099d5b:  jmp 8099475
 8099d60:  mov edx, DWORD PTR [ebp-0x284]
 8099d66:  test edx, edx
 8099d68:  je 809957b
 8099d6e:  mov edx, DWORD PTR [ebp-0x284]
 8099d74:  mov eax, DWORD PTR [edx]
 8099d76:  mov DWORD PTR [esp], eax
 8099d79:  call 804b4a0
 8099d7e:  mov ecx, DWORD PTR [ebp-0x284]
 8099d84:  mov DWORD PTR [ecx], 0x0
 8099d8a:  jmp 809957b
 8099d8f:  nop
 8099d90:  lea eax, [ebp-0x54]
 8099d93:  mov DWORD PTR [esp+0x4], 0x0
 8099d9b:  mov DWORD PTR [esp], eax
 8099d9e:  call 0
 8099da3:  jmp 8099837
 8099da8:  mov eax, DWORD PTR [ebp+0x8]
 8099dab:  mov DWORD PTR [esp+0x4], 0x8061830
 8099db3:  mov DWORD PTR [esp+0x8], eax
 8099db7:  lea eax, [ebp-0x54]
 8099dba:  mov DWORD PTR [esp], eax
 8099dbd:  call 0
 8099dc2:  mov ecx, DWORD PTR [ebp+0x8]
 8099dc5:  mov edx, DWORD PTR [ecx]
 8099dc7:  jmp 80993c2
 8099dcc:  mov ecx, DWORD PTR [ebp+0x8]
 8099dcf:  mov eax, DWORD PTR [ecx+0x4]
 8099dd2:  cmp eax, DWORD PTR [ecx+0x8]
 8099dd5:  jae 809d71f
 8099ddb:  movzx ebx, BYTE PTR [eax]
 8099dde:  add eax, 0x1
 8099de1:  mov DWORD PTR [ecx+0x4], eax
 8099de4:  mov eax, DWORD PTR [ebp-0x21c]
 8099dea:  mov DWORD PTR [ebp-0x200], ebx
 8099df0:  add eax, 0x1
 8099df3:  mov DWORD PTR [ebp-0x1cc], eax
 8099df9:  cmp DWORD PTR [ebp-0x200], 0x2d
 8099e00:  je 809a456
 8099e06:  cmp DWORD PTR [ebp-0x200], 0x2b
 8099e0d:  mov esi, 0x1
 8099e12:  mov DWORD PTR [ebp-0x280], 0x0
 8099e1c:  je 809a456
 8099e22:  mov eax, DWORD PTR [ebp-0x2b4]
 8099e28:  test eax, eax
 8099e2a:  je 8099e39
 8099e2c:  cmp DWORD PTR [ebp-0x200], 0x30
 8099e33:  je 8099fd4
 8099e39:  mov ebx, DWORD PTR [ebp-0x29c]
 8099e3f:  test ebx, ebx
 8099e41:  jne 809a071
 8099e47:  mov DWORD PTR [ebp-0x29c], 0xa
 8099e51:  test DWORD PTR [ebp-0x2b0], 0x400
 8099e5b:  jne 809e8f2
 8099e61:  mov edx, DWORD PTR [ebp-0x2b0]
 8099e67:  mov ecx, DWORD PTR [ebp-0x280]
 8099e6d:  mov esi, DWORD PTR [ebp-0x200]
 8099e73:  and edx, 0x80
 8099e79:  mov DWORD PTR [ebp-0x1d0], edx
 8099e7f:  mov DWORD PTR [ebp-0x208], ecx
 8099e85:  lea esi, [esi]
 8099e88:  cmp esi, 0xff
 8099e8b:  je 8099e9b
 8099e8d:  mov eax, DWORD PTR [ebp-0x2b4]
 8099e93:  test eax, eax
 8099e95:  jne 809a088
 8099e9b:  mov ebx, DWORD PTR [ebp-0x208]
 8099ea1:  mov DWORD PTR [ebp-0x200], esi
 8099ea7:  mov DWORD PTR [ebp-0x280], ebx
 8099ead:  mov eax, DWORD PTR [ebp-0x280]
 8099eb3:  test eax, eax
 8099eb5:  je 809a500
 8099ebb:  cmp DWORD PTR [ebp-0x280], 0x1
 8099ec2:  je 809b71f
 8099ec8:  cmp DWORD PTR [ebp-0x200], 0xff
 8099ecf:  je 8099eee
 8099ed1:  movzx eax, BYTE PTR [ebp-0x200]
 8099ed8:  sub DWORD PTR [ebp-0x1cc], 0x1
 8099edf:  mov DWORD PTR [esp+0x4], eax
 8099ee3:  mov eax, DWORD PTR [ebp+0x8]
 8099ee6:  mov DWORD PTR [esp], eax
 8099ee9:  call 8068600
 8099eee:  mov edx, DWORD PTR [ebp-0x20c]
 8099ef4:  cmp DWORD PTR [ebp-0x280], edx
 8099efa:  mov ebx, DWORD PTR [ebp-0x214]
 8099f00:  je 809ba88
 8099f06:  mov edx, DWORD PTR [ebp-0x280]
 8099f0c:  mov BYTE PTR [ebx+edx], 0x0
 8099f10:  mov esi, DWORD PTR [ebp-0x2b0]
 8099f16:  and esi, 0x2
 8099f19:  je 809a4be
 8099f1f:  mov ecx, DWORD PTR [ebp-0x2b0]
 8099f25:  and ecx, 0x40
 8099f28:  mov DWORD PTR [ebp-0x240], ecx
 8099f2e:  je 809b683
 8099f34:  mov eax, DWORD PTR [ebp-0x2b0]
 8099f3a:  mov DWORD PTR [esp], ebx
 8099f3d:  and eax, 0x80
 8099f42:  mov DWORD PTR [esp+0xc], eax
 8099f46:  mov eax, DWORD PTR [ebp-0x29c]
 8099f4c:  mov DWORD PTR [esp+0x8], eax
 8099f50:  lea eax, [ebp-0x14]
 8099f53:  mov DWORD PTR [esp+0x4], eax
 8099f57:  call 80a0cb0
 8099f5c:  mov DWORD PTR [ebp-0x2d4], edx
 8099f62:  cmp ebx, DWORD PTR [ebp-0x14]
 8099f65:  je 80997f0
 8099f6b:  xor edi, edi
 8099f6d:  test BYTE PTR [ebp-0x2b0], 0x8
 8099f74:  mov DWORD PTR [ebp-0x214], ebx
 8099f7a:  jne 8099542
 8099f80:  mov ecx, DWORD PTR [ebp-0x240]
 8099f86:  test ecx, ecx
 8099f88:  jne 809a5a2
 8099f8e:  test esi, esi
 8099f90:  je 809b622
 8099f96:  mov edi, DWORD PTR [ebp-0x1c4]
 8099f9c:  test edi, edi
 8099f9e:  jne 809c7a0
 8099fa4:  mov esi, DWORD PTR [ebp-0x2c0]
 8099faa:  mov edx, DWORD PTR [esi]
 8099fac:  add esi, 0x4
 8099faf:  mov DWORD PTR [ebp-0x2c0], esi
 8099fb5:  mov DWORD PTR [edx], eax
 8099fb7:  mov eax, DWORD PTR [ebp-0x2d4]
 8099fbd:  mov DWORD PTR [edx+0x4], eax
 8099fc0:  add DWORD PTR [ebp-0x2bc], 0x1
 8099fc7:  xor edi, edi
 8099fc9:  mov DWORD PTR [ebp-0x214], ebx
 8099fcf:  jmp 8099542
 8099fd4:  xor eax, eax
 8099fd6:  mov ebx, DWORD PTR [ebp-0x214]
 8099fdc:  cmp DWORD PTR [ebp-0x2b4], 0x0
 8099fe3:  setg al
 8099fe6:  sub DWORD PTR [ebp-0x2b4], eax
 8099fec:  mov eax, DWORD PTR [ebp-0x20c]
 8099ff2:  cmp DWORD PTR [ebp-0x280], eax
 8099ff8:  je 809bdf7
 8099ffe:  mov eax, DWORD PTR [ebp-0x280]
 809a004:  mov BYTE PTR [ebx+eax], 0x30
 809a008:  mov edx, DWORD PTR [ebp+0x8]
 809a00b:  mov eax, DWORD PTR [edx+0x4]
 809a00e:  cmp eax, DWORD PTR [edx+0x8]
 809a011:  jae 809f89a
 809a017:  movzx ecx, BYTE PTR [eax]
 809a01a:  add eax, 0x1
 809a01d:  mov DWORD PTR [edx+0x4], eax
 809a020:  mov DWORD PTR [ebp-0x200], ecx
 809a026:  add DWORD PTR [ebp-0x1cc], 0x1
 809a02d:  mov eax, DWORD PTR [ebp-0x2b4]
 809a033:  test eax, eax
 809a035:  je 809a051
 809a037:  mov ecx, DWORD PTR [ebp-0x2ac]
 809a03d:  movzx edx, BYTE PTR [ebp-0x200]
 809a044:  mov eax, DWORD PTR [ecx+0x38]
 809a047:  cmp DWORD PTR [eax+edx*4], 0x78
 809a04b:  je 809c206
 809a051:  mov edi, DWORD PTR [ebp-0x29c]
 809a057:  test edi, edi
 809a059:  jne 809a065
 809a05b:  mov DWORD PTR [ebp-0x29c], 0x8
 809a065:  mov DWORD PTR [ebp-0x214], ebx
 809a06b:  mov DWORD PTR [ebp-0x280], esi
 809a071:  cmp DWORD PTR [ebp-0x29c], 0xa
 809a078:  jne 8099e61
 809a07e:  jmp 8099e51
 809a083:  nop
 809a084:  lea esi, [esi]
 809a088:  cmp DWORD PTR [ebp-0x29c], 0x10
 809a08f:  je 809a310
 809a095:  lea eax, [esi-0x30]
 809a098:  cmp eax, 0x9
 809a09b:  nop
 809a09c:  lea esi, [esi]
 809a0a0:  ja 809a0b3
 809a0a2:  lea eax, [esi-0x2f]
 809a0a5:  mov edi, esi
 809a0a7:  cmp eax, DWORD PTR [ebp-0x29c]
 809a0ad:  jle 809a285
 809a0b3:  cmp DWORD PTR [ebp-0x29c], 0xa
 809a0ba:  jne 8099e9b
 809a0c0:  mov edx, DWORD PTR [ebp-0x1d0]
 809a0c6:  test edx, edx
 809a0c8:  je 8099e9b
 809a0ce:  mov ecx, DWORD PTR [ebp-0x2b4]
 809a0d4:  test ecx, ecx
 809a0d6:  mov DWORD PTR [ebp-0x254], ecx
 809a0dc:  jle 809a398
 809a0e2:  mov ebx, DWORD PTR [ebp-0x294]
 809a0e8:  movzx ecx, BYTE PTR [ebx]
 809a0eb:  movzx eax, cl
 809a0ee:  cmp esi, eax
 809a0f0:  jne 809a246
 809a0f6:  mov eax, DWORD PTR [ebp-0x208]
 809a0fc:  add DWORD PTR [ebp-0x1cc], 0x1
 809a103:  mov edx, DWORD PTR [ebp-0x1cc]
 809a109:  add eax, eax
 809a10b:  mov DWORD PTR [ebp-0x228], eax
 809a111:  jmp 809a191
 809a113:  nop
 809a114:  lea esi, [esi]
 809a118:  mov edx, DWORD PTR [ebp-0x208]
 809a11e:  mov eax, esi
 809a120:  add ebx, 0x1
 809a123:  mov ecx, DWORD PTR [ebp-0x214]
 809a129:  mov edi, esi
 809a12b:  mov BYTE PTR [ecx+edx], al
 809a12e:  add edx, 0x1
 809a131:  mov DWORD PTR [ebp-0x208], edx
 809a137:  cmp BYTE PTR [ebx], 0x0
 809a13a:  je 809a25c
 809a140:  mov eax, DWORD PTR [ebp-0x254]
 809a146:  test eax, eax
 809a148:  je 809a3a8
 809a14e:  mov edx, DWORD PTR [ebp+0x8]
 809a151:  mov eax, DWORD PTR [edx+0x4]
 809a154:  cmp eax, DWORD PTR [edx+0x8]
 809a157:  jae 809a20f
 809a15d:  movzx esi, BYTE PTR [eax]
 809a160:  add eax, 0x1
 809a163:  mov DWORD PTR [edx+0x4], eax
 809a166:  sub DWORD PTR [ebp-0x254], 0x1
 809a16d:  movzx ecx, BYTE PTR [ebx]
 809a170:  mov edx, DWORD PTR [ebp-0x1cc]
 809a176:  add DWORD PTR [ebp-0x228], 0x2
 809a17d:  movzx eax, cl
 809a180:  add edx, 0x1
 809a183:  cmp eax, esi
 809a185:  jne 809a246
 809a18b:  mov DWORD PTR [ebp-0x1cc], edx
 809a191:  mov ecx, DWORD PTR [ebp-0x20c]
 809a197:  sub edx, 0x1
 809a19a:  cmp DWORD PTR [ebp-0x208], ecx
 809a1a0:  mov DWORD PTR [ebp-0x1c8], edx
 809a1a6:  jne 809a118
 809a1ac:  mov eax, DWORD PTR [ebp-0x228]
 809a1b2:  cmp eax, 0x100
 809a1b7:  mov DWORD PTR [ebp-0x20c], eax
 809a1bd:  jae 809a1cf
 809a1bf:  mov DWORD PTR [ebp-0x20c], 0x100
 809a1c9:  mov eax, DWORD PTR [ebp-0x20c]
 809a1cf:  add eax, 0x12
 809a1d2:  and eax, 0xfc
 809a1d5:  sub esp, eax
 809a1d7:  mov eax, DWORD PTR [ebp-0x214]
 809a1dd:  lea edi, [esp+0x1f]
 809a1e1:  and edi, 0xf0
 809a1e4:  test eax, eax
 809a1e6:  je 809a204
 809a1e8:  mov edx, DWORD PTR [ebp-0x208]
 809a1ee:  mov ecx, DWORD PTR [ebp-0x214]
 809a1f4:  mov DWORD PTR [esp], edi
 809a1f7:  mov DWORD PTR [esp+0x8], edx
 809a1fb:  mov DWORD PTR [esp+0x4], ecx
 809a1ff:  call 804efc0
 809a204:  mov DWORD PTR [ebp-0x214], edi
 809a20a:  jmp 809a118
 809a20f:  mov DWORD PTR [esp], edx
 809a212:  call 8068f50
 809a217:  cmp eax, 0xff
 809a21a:  mov esi, eax
 809a21c:  jne 809a166
 809a222:  mov edi, 0xffffffe8
 809a228:  mov eax, DWORD PTR [ebp-0x2e0]
 809a22e:  mov edx, DWORD PTR [ebp-0x1c8]
 809a234:  mov edi, DWORD PTR [eax+edi]
 809a237:  mov DWORD PTR [ebp-0x2a4], edi
 809a23d:  movzx ecx, BYTE PTR [ebx]
 809a240:  mov DWORD PTR [ebp-0x1cc], edx
 809a246:  test cl, cl
 809a248:  jne 809f8e7
 809a24e:  mov edx, DWORD PTR [ebp-0x1cc]
 809a254:  mov edi, esi
 809a256:  mov DWORD PTR [ebp-0x1c8], edx
 809a25c:  mov eax, DWORD PTR [ebp-0x2b4]
 809a262:  test eax, eax
 809a264:  jle 809a272
 809a266:  mov ecx, DWORD PTR [ebp-0x254]
 809a26c:  mov DWORD PTR [ebp-0x2b4], ecx
 809a272:  mov ebx, DWORD PTR [ebp-0x1c8]
 809a278:  sub DWORD PTR [ebp-0x208], 0x1
 809a27f:  mov DWORD PTR [ebp-0x1cc], ebx
 809a285:  mov eax, DWORD PTR [ebp-0x20c]
 809a28b:  cmp DWORD PTR [ebp-0x208], eax
 809a291:  mov ebx, DWORD PTR [ebp-0x214]
 809a297:  je 809a330
 809a29d:  mov ecx, DWORD PTR [ebp-0x208]
 809a2a3:  mov edx, edi
 809a2a5:  xor eax, eax
 809a2a7:  mov BYTE PTR [ebx+ecx], dl
 809a2aa:  cmp DWORD PTR [ebp-0x2b4], 0x0
 809a2b1:  setg al
 809a2b4:  sub DWORD PTR [ebp-0x2b4], eax
 809a2ba:  cmp esi, 0xff
 809a2bd:  jne 809a2e8
 809a2bf:  mov edi, 0xffffffe8
 809a2c5:  mov edx, DWORD PTR [ebp-0x2a4]
 809a2cb:  mov eax, DWORD PTR [ebp-0x2e0]
 809a2d1:  mov DWORD PTR [eax+edi], edx
 809a2d4:  add DWORD PTR [ebp-0x208], 0x1
 809a2db:  mov DWORD PTR [ebp-0x214], ebx
 809a2e1:  jmp 8099e88
 809a2e6:  xchg ax, ax
 809a2e8:  mov ecx, DWORD PTR [ebp+0x8]
 809a2eb:  mov eax, DWORD PTR [ecx+0x4]
 809a2ee:  cmp eax, DWORD PTR [ecx+0x8]
 809a2f1:  jae 809bdca
 809a2f7:  movzx esi, BYTE PTR [eax]
 809a2fa:  add eax, 0x1
 809a2fd:  mov DWORD PTR [ecx+0x4], eax
 809a300:  add DWORD PTR [ebp-0x1cc], 0x1
 809a307:  jmp 809a2d4
 809a309:  lea esi, [esi]
 809a310:  mov edx, DWORD PTR [ebp-0x2ac]
 809a316:  mov eax, DWORD PTR [edx+0x34]
 809a319:  test BYTE PTR [eax+esi*2+0x1], 0x10
 809a31e:  je 8099e9b
 809a324:  mov edi, esi
 809a326:  jmp 809a285
 809a32b:  nop
 809a32c:  lea esi, [esi]
 809a330:  mov edx, DWORD PTR [ebp-0x208]
 809a336:  add edx, edx
 809a338:  cmp edx, 0x100
 809a33e:  mov DWORD PTR [ebp-0x20c], edx
 809a344:  jae 809a350
 809a346:  mov DWORD PTR [ebp-0x20c], 0x100
 809a350:  mov eax, DWORD PTR [ebp-0x20c]
 809a356:  add eax, 0x12
 809a359:  and eax, 0xfc
 809a35c:  sub esp, eax
 809a35e:  mov eax, DWORD PTR [ebp-0x214]
 809a364:  lea ebx, [esp+0x1f]
 809a368:  and ebx, 0xf0
 809a36b:  test eax, eax
 809a36d:  je 809a29d
 809a373:  mov ecx, DWORD PTR [ebp-0x208]
 809a379:  mov eax, DWORD PTR [ebp-0x214]
 809a37f:  mov DWORD PTR [esp], ebx
 809a382:  mov DWORD PTR [esp+0x8], ecx
 809a386:  mov DWORD PTR [esp+0x4], eax
 809a38a:  call 804efc0
 809a38f:  jmp 809a29d
 809a394:  lea esi, [esi]
 809a398:  mov DWORD PTR [ebp-0x254], 0x7fffffff
 809a3a2:  jmp 809a0e2
 809a3a7:  nop
 809a3a8:  mov eax, DWORD PTR [ebp-0x1c8]
 809a3ae:  mov DWORD PTR [ebp-0x200], esi
 809a3b4:  mov DWORD PTR [ebp-0x280], edx
 809a3ba:  mov DWORD PTR [ebp-0x1cc], eax
 809a3c0:  cmp DWORD PTR [ebp-0x294], ebx
 809a3c6:  jae 8099ead
 809a3cc:  cmp esi, 0xff
 809a3cf:  je 809a3f4
 809a3d1:  mov edx, DWORD PTR [ebp-0x1c8]
 809a3d7:  mov ecx, esi
 809a3d9:  mov esi, DWORD PTR [ebp+0x8]
 809a3dc:  movzx eax, cl
 809a3df:  mov DWORD PTR [esp+0x4], eax
 809a3e3:  sub edx, 0x1
 809a3e6:  mov DWORD PTR [ebp-0x1cc], edx
 809a3ec:  mov DWORD PTR [esp], esi
 809a3ef:  call 8068600
 809a3f4:  lea edi, [ebx-0x1]
 809a3f7:  cmp DWORD PTR [ebp-0x294], edi
 809a3fd:  jae 809a434
 809a3ff:  mov esi, edi
 809a401:  movzx eax, BYTE PTR [esi]
 809a404:  sub esi, 0x1
 809a407:  mov DWORD PTR [esp+0x4], eax
 809a40b:  mov eax, DWORD PTR [ebp+0x8]
 809a40e:  mov DWORD PTR [esp], eax
 809a411:  call 8068600
 809a416:  cmp DWORD PTR [ebp-0x294], esi
 809a41c:  jb 809a401
 809a41e:  mov eax, DWORD PTR [ebp-0x294]
 809a424:  lea edx, [ebx-0x2]
 809a427:  sub eax, 0x1
 809a42a:  sub eax, edx
 809a42c:  add DWORD PTR [ebp-0x1cc], eax
 809a432:  add edi, eax
 809a434:  mov eax, DWORD PTR [ebp-0x294]
 809a43a:  sub eax, ebx
 809a43c:  add eax, DWORD PTR [ebp-0x208]
 809a442:  mov DWORD PTR [ebp-0x280], eax
 809a448:  movzx edi, BYTE PTR [edi]
 809a44b:  mov DWORD PTR [ebp-0x200], edi
 809a451:  jmp 8099ead
 809a456:  mov eax, DWORD PTR [ebp-0x20c]
 809a45c:  test eax, eax
 809a45e:  je 809baec
 809a464:  movzx ecx, BYTE PTR [ebp-0x200]
 809a46b:  xor eax, eax
 809a46d:  mov ebx, DWORD PTR [ebp-0x214]
 809a473:  mov BYTE PTR [ebx], cl
 809a475:  mov esi, DWORD PTR [ebp+0x8]
 809a478:  cmp DWORD PTR [ebp-0x2b4], 0x0
 809a47f:  setg al
 809a482:  sub DWORD PTR [ebp-0x2b4], eax
 809a488:  mov eax, DWORD PTR [esi+0x4]
 809a48b:  cmp eax, DWORD PTR [esi+0x8]
 809a48e:  jae 809fd31
 809a494:  movzx edx, BYTE PTR [eax]
 809a497:  add eax, 0x1
 809a49a:  mov DWORD PTR [esi+0x4], eax
 809a49d:  mov DWORD PTR [ebp-0x200], edx
 809a4a3:  add DWORD PTR [ebp-0x1cc], 0x1
 809a4aa:  mov esi, 0x2
 809a4af:  mov DWORD PTR [ebp-0x280], 0x1
 809a4b9:  jmp 8099e22
 809a4be:  mov ecx, DWORD PTR [ebp-0x2b0]
 809a4c4:  and ecx, 0x40
 809a4c7:  mov DWORD PTR [ebp-0x240], ecx
 809a4cd:  je 809b656
 809a4d3:  mov eax, DWORD PTR [ebp-0x2b0]
 809a4d9:  mov DWORD PTR [esp], ebx
 809a4dc:  and eax, 0x80
 809a4e1:  mov DWORD PTR [esp+0xc], eax
 809a4e5:  mov eax, DWORD PTR [ebp-0x29c]
 809a4eb:  mov DWORD PTR [esp+0x8], eax
 809a4ef:  lea eax, [ebp-0x14]
 809a4f2:  mov DWORD PTR [esp+0x4], eax
 809a4f6:  call 8056a40
 809a4fb:  jmp 8099f62
 809a500:  test DWORD PTR [ebp-0x2b0], 0x1000
 809a50a:  je 809a519
 809a50c:  cmp DWORD PTR [ebp-0x200], 0x28
 809a513:  je 809b387
 809a519:  cmp DWORD PTR [ebp-0x200], 0xff
 809a520:  je 80997f0
 809a526:  movzx eax, BYTE PTR [ebp-0x200]
 809a52d:  mov ebx, 0x2
 809a532:  mov esi, DWORD PTR [ebp+0x8]
 809a535:  mov DWORD PTR [esp+0x4], eax
 809a539:  mov DWORD PTR [esp], esi
 809a53c:  call 8068600
 809a541:  jmp 80997f5
 809a546:  xchg ax, ax
 809a548:  mov eax, DWORD PTR [ebp-0x220]
 809a54e:  mov DWORD PTR [ebp-0x2b0], 0x0
 809a558:  add eax, 0x1
 809a55b:  jmp 809a57e
 809a55d:  lea esi, [esi]
 809a560:  cmp dl, 0x27
 809a563:  je 809a586
 809a565:  cmp dl, 0x49
 809a568:  jne 8099920
 809a56e:  or DWORD PTR [ebp-0x2b0], 0x400
 809a578:  movzx edx, BYTE PTR [eax]
 809a57b:  add eax, 0x1
 809a57e:  cmp dl, 0x2a
 809a581:  lea ecx, [eax-0x1]
 809a584:  jne 809a560
 809a586:  cmp dl, 0x2a
 809a589:  je 809a592
 809a58b:  cmp dl, 0x49
 809a58e:  jne 809a578
 809a590:  jmp 809a56e
 809a592:  or DWORD PTR [ebp-0x2b0], 0x8
 809a599:  lea esi, [esi]
 809a5a0:  jmp 809a578
 809a5a2:  test esi, esi
 809a5a4:  lea esi, [esi]
 809a5a8:  je 809b622
 809a5ae:  mov edx, DWORD PTR [ebp-0x1c4]
 809a5b4:  test edx, edx
 809a5b6:  jne 809c7c0
 809a5bc:  mov ecx, DWORD PTR [ebp-0x2c0]
 809a5c2:  mov edx, DWORD PTR [ecx]
 809a5c4:  add ecx, 0x4
 809a5c7:  mov DWORD PTR [ebp-0x2c0], ecx
 809a5cd:  mov esi, DWORD PTR [ebp-0x2d4]
 809a5d3:  mov DWORD PTR [edx], eax
 809a5d5:  mov DWORD PTR [edx+0x4], esi
 809a5d8:  jmp 8099fc0
 809a5dd:  lea esi, [esi]
 809a5e0:  mov DWORD PTR [esp+0xc], esi
 809a5e4:  mov DWORD PTR [esp+0x8], 0x1
 809a5ec:  mov DWORD PTR [esp+0x4], edi
 809a5f0:  mov DWORD PTR [esp], 0x0
 809a5f7:  call 80a0810
 809a5fc:  cmp eax, 0xfe
 809a5ff:  jne 809b4f1
 809a605:  add ebx, 0x1
 809a608:  je 809b240
 809a60e:  mov ecx, DWORD PTR [ebp+0x8]
 809a611:  mov eax, DWORD PTR [ecx+0x4]
 809a614:  cmp eax, DWORD PTR [ecx+0x8]
 809a617:  jae 809cb67
 809a61d:  movzx ebx, BYTE PTR [eax]
 809a620:  add eax, 0x1
 809a623:  mov DWORD PTR [ecx+0x4], eax
 809a626:  add DWORD PTR [ebp-0x1cc], 0x1
 809a62d:  mov BYTE PTR [ebp-0xd], bl
 809a630:  jmp 809a5e0
 809a632:  lea esi, [esi]
 809a638:  mov ecx, DWORD PTR [ebp-0x288]
 809a63e:  lea edx, [ebp-0xd]
 809a641:  mov DWORD PTR [esp+0xc], edi
 809a645:  mov DWORD PTR [esp+0x8], 0x1
 809a64d:  mov DWORD PTR [esp+0x4], edx
 809a651:  mov DWORD PTR [esp], ecx
 809a654:  call 80a0810
 809a659:  cmp eax, 0xfe
 809a65c:  mov ebx, eax
 809a65e:  jne 809b290
 809a664:  cmp DWORD PTR [ebp-0x200], 0xff
 809a66b:  je 809b268
 809a671:  mov edx, DWORD PTR [ebp+0x8]
 809a674:  mov eax, DWORD PTR [edx+0x4]
 809a677:  cmp eax, DWORD PTR [edx+0x8]
 809a67a:  jae 809cba8
 809a680:  movzx ecx, BYTE PTR [eax]
 809a683:  add eax, 0x1
 809a686:  mov DWORD PTR [edx+0x4], eax
 809a689:  mov DWORD PTR [ebp-0x200], ecx
 809a68f:  movzx eax, BYTE PTR [ebp-0x200]
 809a696:  add DWORD PTR [ebp-0x1cc], 0x1
 809a69d:  mov BYTE PTR [ebp-0xd], al
 809a6a0:  jmp 809a638
 809a6a2:  test DWORD PTR [ebp-0x2b0], 0x2100
 809a6ac:  je 809c4c0
 809a6b2:  mov edx, DWORD PTR [ebp-0x1c4]
 809a6b8:  test edx, edx
 809a6ba:  jne 809d3b8
 809a6c0:  mov edx, DWORD PTR [ebp-0x2c0]
 809a6c6:  mov ecx, DWORD PTR [ebp-0x2c0]
 809a6cc:  mov edx, DWORD PTR [edx]
 809a6ce:  add ecx, 0x4
 809a6d1:  mov DWORD PTR [ebp-0x2c0], ecx
 809a6d7:  mov DWORD PTR [ebp-0x284], edx
 809a6dd:  mov eax, DWORD PTR [ebp-0x284]
 809a6e3:  test eax, eax
 809a6e5:  je 80997f0
 809a6eb:  mov DWORD PTR [esp], 0x190
 809a6f2:  call 804d6f0
 809a6f7:  mov edx, DWORD PTR [ebp-0x284]
 809a6fd:  test eax, eax
 809a6ff:  mov DWORD PTR [edx], eax
 809a701:  mov DWORD PTR [ebp-0x288], eax
 809a707:  je 809d39f
 809a70d:  mov eax, DWORD PTR [ebp-0x290]
 809a713:  test eax, eax
 809a715:  je 809d376
 809a71b:  mov ecx, DWORD PTR [ebp-0x290]
 809a721:  mov edx, DWORD PTR [ecx]
 809a723:  cmp edx, 0x20
 809a726:  je 809d376
 809a72c:  mov eax, DWORD PTR [ebp-0x284]
 809a732:  mov esi, DWORD PTR [ebp-0x290]
 809a738:  mov DWORD PTR [ebp-0x218], 0x64
 809a742:  mov DWORD PTR [esi+edx*4+0x8], eax
 809a746:  lea eax, [edx+0x1]
 809a749:  mov DWORD PTR [esi], eax
 809a74b:  jmp 8099b13
 809a750:  test DWORD PTR [ebp-0x2b0], 0x2100
 809a75a:  je 809c47c
 809a760:  mov eax, DWORD PTR [ebp-0x1c4]
 809a766:  test eax, eax
 809a768:  jne 809d0b8
 809a76e:  mov eax, DWORD PTR [ebp-0x2c0]
 809a774:  mov edx, DWORD PTR [ebp-0x2c0]
 809a77a:  mov eax, DWORD PTR [eax]
 809a77c:  add edx, 0x4
 809a77f:  mov DWORD PTR [ebp-0x2c0], edx
 809a785:  mov DWORD PTR [ebp-0x284], eax
 809a78b:  mov eax, DWORD PTR [ebp-0x284]
 809a791:  test eax, eax
 809a793:  je 80997f0
 809a799:  mov esi, DWORD PTR [ebp-0x2b4]
 809a79f:  cmp esi, 0x400
 809a7a5:  mov DWORD PTR [ebp-0x218], esi
 809a7ab:  jle 809a7b7
 809a7ad:  mov DWORD PTR [ebp-0x218], 0x400
 809a7b7:  mov eax, DWORD PTR [ebp-0x218]
 809a7bd:  shl eax, 0x2
 809a7c0:  mov DWORD PTR [esp], eax
 809a7c3:  call 804d6f0
 809a7c8:  mov edx, DWORD PTR [ebp-0x284]
 809a7ce:  test eax, eax
 809a7d0:  mov DWORD PTR [edx], eax
 809a7d2:  mov DWORD PTR [ebp-0x288], eax
 809a7d8:  je 809d39f
 809a7de:  mov edi, DWORD PTR [ebp-0x290]
 809a7e4:  test edi, edi
 809a7e6:  je 809d1c4
 809a7ec:  mov ecx, DWORD PTR [ebp-0x290]
 809a7f2:  mov edx, DWORD PTR [ecx]
 809a7f4:  cmp edx, 0x20
 809a7f7:  je 809d1c4
 809a7fd:  mov eax, DWORD PTR [ebp-0x284]
 809a803:  mov esi, DWORD PTR [ebp-0x290]
 809a809:  mov DWORD PTR [esi+edx*4+0x8], eax
 809a80d:  lea eax, [edx+0x1]
 809a810:  mov DWORD PTR [esi], eax
 809a812:  jmp 8099c32
 809a817:  mov ecx, esi
 809a819:  or DWORD PTR [ebp-0x2b0], 0x3
 809a820:  add ecx, 0x1
 809a823:  movzx eax, BYTE PTR [esi+0x1]
 809a827:  jmp 80996e8
 809a82c:  mov ebx, ecx
 809a82e:  add ecx, 0x1
 809a831:  or DWORD PTR [ebp-0x2b0], 0x200
 809a83b:  movzx eax, BYTE PTR [ebx+0x1]
 809a83f:  jmp 80996e8
 809a844:  test BYTE PTR [ebp-0x2b0], 0x8
 809a84b:  jne 809bdab
 809a851:  test BYTE PTR [ebp-0x2b0], 0x2
 809a858:  je 809c6e2
 809a85e:  mov eax, DWORD PTR [ebp-0x1c4]
 809a864:  test eax, eax
 809a866:  jne 809d92a
 809a86c:  mov ebx, DWORD PTR [ebp-0x2c0]
 809a872:  mov eax, DWORD PTR [ebx]
 809a874:  add ebx, 0x4
 809a877:  mov DWORD PTR [ebp-0x2c0], ebx
 809a87d:  mov ecx, DWORD PTR [ebp-0x21c]
 809a883:  xor edi, edi
 809a885:  mov ebx, DWORD PTR [ebp-0x2b8]
 809a88b:  mov DWORD PTR [eax+0x4], 0x0
 809a892:  mov DWORD PTR [eax], ecx
 809a894:  mov DWORD PTR [ebp-0x1cc], ecx
 809a89a:  mov DWORD PTR [ebp-0x200], ebx
 809a8a0:  jmp 8099542
 809a8a5:  or DWORD PTR [ebp-0x2b0], 0x40
 809a8ac:  mov DWORD PTR [ebp-0x29c], 0x0
 809a8b6:  jmp 8099abb
 809a8bb:  mov ebx, DWORD PTR [ebp-0x2b0]
 809a8c1:  and ebx, 0x1
 809a8c4:  je 809c2a6
 809a8ca:  mov edx, DWORD PTR [ebp-0x2b0]
 809a8d0:  and edx, 0x8
 809a8d3:  mov DWORD PTR [ebp-0x244], edx
 809a8d9:  jne 809a988
 809a8df:  test DWORD PTR [ebp-0x2b0], 0x2100
 809a8e9:  je 809d460
 809a8ef:  mov eax, DWORD PTR [ebp-0x1c4]
 809a8f5:  test eax, eax
 809a8f7:  jne 809d9f8
 809a8fd:  mov ecx, DWORD PTR [ebp-0x2c0]
 809a903:  mov esi, DWORD PTR [ebp-0x2c0]
 809a909:  mov ecx, DWORD PTR [ecx]
 809a90b:  add esi, 0x4
 809a90e:  mov DWORD PTR [ebp-0x2c0], esi
 809a914:  mov DWORD PTR [ebp-0x284], ecx
 809a91a:  mov eax, DWORD PTR [ebp-0x284]
 809a920:  test eax, eax
 809a922:  je 80997f0
 809a928:  mov DWORD PTR [esp], 0x190
 809a92f:  call 804d6f0
 809a934:  mov esi, DWORD PTR [ebp-0x284]
 809a93a:  test eax, eax
 809a93c:  mov DWORD PTR [esi], eax
 809a93e:  mov DWORD PTR [ebp-0x288], eax
 809a944:  je 809d39f
 809a94a:  mov eax, DWORD PTR [ebp-0x290]
 809a950:  test eax, eax
 809a952:  je 809c341
 809a958:  mov eax, DWORD PTR [ebp-0x290]
 809a95e:  mov edx, DWORD PTR [eax]
 809a960:  cmp edx, 0x20
 809a963:  je 809c341
 809a969:  mov ecx, DWORD PTR [ebp-0x290]
 809a96f:  lea eax, [edx+0x1]
 809a972:  mov esi, DWORD PTR [ebp-0x284]
 809a978:  mov DWORD PTR [ebp-0x218], 0x64
 809a982:  mov DWORD PTR [ecx], eax
 809a984:  mov DWORD PTR [ecx+edx*4+0x8], esi
 809a988:  mov eax, DWORD PTR [ebp-0x2d8]
 809a98e:  mov BYTE PTR [ebp-0x29d], 0x0
 809a995:  cmp BYTE PTR [eax], 0x5e
 809a998:  jne 809a9b0
 809a99a:  mov edx, DWORD PTR [ebp-0x2d8]
 809a9a0:  mov BYTE PTR [ebp-0x29d], 0x1
 809a9a7:  add edx, 0x1
 809a9aa:  mov DWORD PTR [ebp-0x220], edx
 809a9b0:  mov eax, DWORD PTR [ebp-0x2b4]
 809a9b6:  test eax, eax
 809a9b8:  js 809c5eb
 809a9be:  cmp DWORD PTR [ebp-0x20c], 0xff
 809a9c8:  ja 809a9e7
 809a9ca:  sub esp, 0x110
 809a9d0:  lea ecx, [esp+0x1f]
 809a9d4:  and ecx, 0xf0
 809a9d7:  mov DWORD PTR [ebp-0x214], ecx
 809a9dd:  mov DWORD PTR [ebp-0x20c], 0x100
 809a9e7:  mov edi, DWORD PTR [ebp-0x214]
 809a9ed:  xor eax, eax
 809a9ef:  mov ecx, 0x40
 809a9f4:  rep stosd
 809a9f6:  mov esi, DWORD PTR [ebp-0x220]
 809a9fc:  movzx eax, BYTE PTR [esi]
 809a9ff:  cmp al, 0x5d
 809aa01:  je 809c284
 809aa07:  cmp al, 0x2d
 809aa09:  je 809c284
 809aa0f:  nop
 809aa10:  test al, al
 809aa12:  je 80997f0
 809aa18:  add DWORD PTR [ebp-0x220], 0x1
 809aa1f:  cmp al, 0x5d
 809aa21:  je 809bec4
 809aa27:  cmp al, 0x2d
 809aa29:  je 809b334
 809aa2f:  mov edx, DWORD PTR [ebp-0x214]
 809aa35:  movzx eax, al
 809aa38:  mov BYTE PTR [edx+eax], 0x1
 809aa3c:  mov esi, DWORD PTR [ebp-0x220]
 809aa42:  movzx ecx, BYTE PTR [esi]
 809aa45:  mov eax, ecx
 809aa47:  jmp 809aa10
 809aa49:  cmp DWORD PTR [ebp-0x2b8], 0xff
 809aa50:  je 8099590
 809aa56:  mov edx, DWORD PTR [ebp+0x8]
 809aa59:  mov eax, DWORD PTR [edx+0x4]
 809aa5c:  cmp eax, DWORD PTR [edx+0x8]
 809aa5f:  jae 809f7ed
 809aa65:  mov esi, DWORD PTR [ebp-0x21c]
 809aa6b:  movzx ecx, BYTE PTR [eax]
 809aa6e:  add eax, 0x1
 809aa71:  mov ebx, DWORD PTR [ebp+0x8]
 809aa74:  add esi, 0x1
 809aa77:  mov DWORD PTR [ebp-0x200], ecx
 809aa7d:  mov DWORD PTR [ebx+0x4], eax
 809aa80:  mov DWORD PTR [ebp-0x1cc], esi
 809aa86:  cmp DWORD PTR [ebp-0x200], 0x25
 809aa8d:  je 8099540
 809aa93:  movzx eax, BYTE PTR [ebp-0x200]
 809aa9a:  mov DWORD PTR [esp+0x4], eax
 809aa9e:  mov eax, DWORD PTR [ebp+0x8]
 809aaa1:  mov DWORD PTR [esp], eax
 809aaa4:  call 8068600
 809aaa9:  jmp 80997f0
 809aaae:  test BYTE PTR [ebp-0x2b0], 0x1
 809aab5:  jne 8099c10
 809aabb:  cmp DWORD PTR [ebp-0x2b4], 0xff
 809aac2:  jne 809aace
 809aac4:  mov DWORD PTR [ebp-0x2b4], 0x1
 809aace:  mov ebx, DWORD PTR [ebp-0x2b0]
 809aad4:  and ebx, 0x8
 809aad7:  jne 809ab9b
 809aadd:  test DWORD PTR [ebp-0x2b0], 0x2100
 809aae7:  je 809d41d
 809aaed:  mov edi, DWORD PTR [ebp-0x1c4]
 809aaf3:  test edi, edi
 809aaf5:  jne 809dad5
 809aafb:  mov eax, DWORD PTR [ebp-0x2c0]
 809ab01:  mov edx, DWORD PTR [ebp-0x2c0]
 809ab07:  mov eax, DWORD PTR [eax]
 809ab09:  add edx, 0x4
 809ab0c:  mov DWORD PTR [ebp-0x2c0], edx
 809ab12:  mov DWORD PTR [ebp-0x284], eax
 809ab18:  mov esi, DWORD PTR [ebp-0x284]
 809ab1e:  test esi, esi
 809ab20:  je 80997f0
 809ab26:  mov eax, DWORD PTR [ebp-0x2b4]
 809ab2c:  cmp eax, 0x400
 809ab31:  mov DWORD PTR [ebp-0x218], eax
 809ab37:  jle 809ab43
 809ab39:  mov DWORD PTR [ebp-0x218], 0x400
 809ab43:  mov edx, DWORD PTR [ebp-0x218]
 809ab49:  mov DWORD PTR [esp], edx
 809ab4c:  call 804d6f0
 809ab51:  mov ecx, DWORD PTR [ebp-0x284]
 809ab57:  test eax, eax
 809ab59:  mov DWORD PTR [ebp-0x28c], eax
 809ab5f:  mov DWORD PTR [ecx], eax
 809ab61:  je 809d39f
 809ab67:  mov ecx, DWORD PTR [ebp-0x290]
 809ab6d:  test ecx, ecx
 809ab6f:  je 809da44
 809ab75:  mov esi, DWORD PTR [ebp-0x290]
 809ab7b:  mov edx, DWORD PTR [esi]
 809ab7d:  cmp edx, 0x20
 809ab80:  je 809da44
 809ab86:  mov ecx, DWORD PTR [ebp-0x290]
 809ab8c:  lea eax, [edx+0x1]
 809ab8f:  mov esi, DWORD PTR [ebp-0x284]
 809ab95:  mov DWORD PTR [ecx], eax
 809ab97:  mov DWORD PTR [ecx+edx*4+0x8], esi
 809ab9b:  cmp DWORD PTR [ebp-0x2b8], 0xff
 809aba2:  je 809b468
 809aba8:  mov esi, DWORD PTR [ebp+0x8]
 809abab:  mov eax, DWORD PTR [esi+0x4]
 809abae:  cmp eax, DWORD PTR [esi+0x8]
 809abb1:  jae 809f499
 809abb7:  movzx edx, BYTE PTR [eax]
 809abba:  add eax, 0x1
 809abbd:  mov ecx, DWORD PTR [ebp+0x8]
 809abc0:  mov DWORD PTR [ebp-0x200], edx
 809abc6:  mov DWORD PTR [ecx+0x4], eax
 809abc9:  mov eax, DWORD PTR [ebp-0x21c]
 809abcf:  add eax, 0x1
 809abd2:  test ebx, ebx
 809abd4:  jne 809c737
 809abda:  mov ebx, DWORD PTR [ebp-0x2b0]
 809abe0:  and ebx, 0x2100
 809abe6:  mov DWORD PTR [ebp-0x2cc], ebx
 809abec:  je 809cf5f
 809abf2:  mov ebx, DWORD PTR [ebp-0x218]
 809abf8:  lea esi, [eax+0x1]
 809abfb:  mov ecx, DWORD PTR [ebp-0x284]
 809ac01:  lea edx, [esi-0x1]
 809ac04:  mov DWORD PTR [ebp-0x1cc], edx
 809ac0a:  mov edx, DWORD PTR [ecx]
 809ac0c:  mov ecx, DWORD PTR [ebp-0x218]
 809ac12:  lea eax, [edx+ecx]
 809ac15:  cmp DWORD PTR [ebp-0x28c], eax
 809ac1b:  je 809d4e2
 809ac21:  mov eax, DWORD PTR [ebp-0x28c]
 809ac27:  movzx ebx, BYTE PTR [ebp-0x200]
 809ac2e:  mov BYTE PTR [eax], bl
 809ac30:  add eax, 0x1
 809ac33:  sub DWORD PTR [ebp-0x2b4], 0x1
 809ac3a:  mov DWORD PTR [ebp-0x28c], eax
 809ac40:  mov eax, DWORD PTR [ebp-0x2b4]
 809ac46:  test eax, eax
 809ac48:  jle 809c630
 809ac4e:  cmp DWORD PTR [ebp-0x200], 0xff
 809ac55:  je 809d7e0
 809ac5b:  mov ebx, DWORD PTR [ebp+0x8]
 809ac5e:  mov eax, DWORD PTR [ebx+0x4]
 809ac61:  cmp eax, DWORD PTR [ebx+0x8]
 809ac64:  jae 809c5fa
 809ac6a:  movzx edx, BYTE PTR [eax]
 809ac6d:  add eax, 0x1
 809ac70:  mov DWORD PTR [ebx+0x4], eax
 809ac73:  mov DWORD PTR [ebp-0x200], edx
 809ac79:  add esi, 0x1
 809ac7c:  mov ebx, DWORD PTR [ebp-0x218]
 809ac82:  jmp 809abfb
 809ac87:  cmp DWORD PTR [ebp-0x2b8], 0xff
 809ac8e:  jne 809c257
 809ac94:  mov edi, 0xffffffe8
 809ac9a:  mov esi, DWORD PTR [ebp-0x2a4]
 809aca0:  mov ebx, DWORD PTR [ebp-0x2e0]
 809aca6:  mov DWORD PTR [ebx+edi], esi
 809aca9:  xor eax, eax
 809acab:  cmp DWORD PTR [ebp-0x2b4], 0x0
 809acb2:  setg al
 809acb5:  sub DWORD PTR [ebp-0x2b4], eax
 809acbb:  cmp DWORD PTR [ebp-0x2b8], 0xff
 809acc2:  je 80995a4
 809acc8:  cmp DWORD PTR [ebp-0x2b8], 0x2d
 809accf:  je 809c590
 809acd5:  cmp DWORD PTR [ebp-0x2b8], 0x2b
 809acdc:  mov BYTE PTR [ebp-0x29e], 0x0
 809ace3:  je 809c590
 809ace9:  mov esi, DWORD PTR [ebp-0x2ac]
 809acef:  movzx edx, BYTE PTR [ebp-0x2b8]
 809acf6:  mov eax, DWORD PTR [esi+0x38]
 809acf9:  mov eax, DWORD PTR [eax+edx*4]
 809acfc:  cmp eax, 0x6e
 809acff:  je 809c526
 809ad05:  cmp eax, 0x69
 809ad08:  je 809c800
 809ad0e:  mov eax, DWORD PTR [ebp-0x2b4]
 809ad14:  test eax, eax
 809ad16:  je 809ad25
 809ad18:  cmp DWORD PTR [ebp-0x2b8], 0x30
 809ad1f:  je 809cbf0
 809ad25:  mov eax, DWORD PTR [ebp-0x214]
 809ad2b:  mov BYTE PTR [ebp-0x1bd], 0x65
 809ad32:  mov DWORD PTR [ebp-0x204], 0x0
 809ad3c:  mov DWORD PTR [ebp-0x210], eax
 809ad42:  mov ecx, DWORD PTR [ebp-0x2b0]
 809ad48:  movzx ebx, BYTE PTR [ebp-0x2b0]
 809ad4f:  mov esi, DWORD PTR [ebp-0x298]
 809ad55:  mov BYTE PTR [ebp-0x2a0], 0x0
 809ad5c:  mov eax, DWORD PTR [ebp-0x2b8]
 809ad62:  and ecx, 0x800
 809ad68:  and ebx, 0x80
 809ad6b:  add esi, 0x1
 809ad6e:  mov DWORD PTR [ebp-0x2c4], ecx
 809ad74:  mov BYTE PTR [ebp-0x29f], 0x0
 809ad7b:  mov BYTE PTR [ebp-0x2e1], bl
 809ad81:  mov DWORD PTR [ebp-0x2e8], esi
 809ad87:  jmp 809ae41
 809ad8c:  mov eax, DWORD PTR [ebp-0x20c]
 809ad92:  cmp DWORD PTR [ebp-0x204], eax
 809ad98:  mov ebx, DWORD PTR [ebp-0x210]
 809ad9e:  je 809bd47
 809ada4:  mov edx, DWORD PTR [ebp-0x204]
 809adaa:  movzx eax, BYTE PTR [ebp-0x2b8]
 809adb1:  mov BYTE PTR [ebx+edx], al
 809adb4:  mov ecx, DWORD PTR [ebp-0x21c]
 809adba:  add edx, 0x1
 809adbd:  mov esi, DWORD PTR [ebp-0x2b8]
 809adc3:  mov DWORD PTR [ebp-0x204], edx
 809adc9:  mov DWORD PTR [ebp-0x1cc], ecx
 809adcf:  mov DWORD PTR [ebp-0x200], esi
 809add5:  mov edi, DWORD PTR [ebp-0x2b4]
 809addb:  test edi, edi
 809addd:  je 809d08b
 809ade3:  cmp DWORD PTR [ebp-0x200], 0xff
 809adea:  je 809cfc8
 809adf0:  mov ecx, DWORD PTR [ebp+0x8]
 809adf3:  mov eax, DWORD PTR [ecx+0x4]
 809adf6:  cmp eax, DWORD PTR [ecx+0x8]
 809adf9:  jae 809d592
 809adff:  movzx esi, BYTE PTR [eax]
 809ae02:  add eax, 0x1
 809ae05:  mov DWORD PTR [ecx+0x4], eax
 809ae08:  mov ecx, DWORD PTR [ebp-0x1cc]
 809ae0e:  mov DWORD PTR [ebp-0x200], esi
 809ae14:  add ecx, 0x1
 809ae17:  mov DWORD PTR [ebp-0x21c], ecx
 809ae1d:  xor eax, eax
 809ae1f:  cmp DWORD PTR [ebp-0x2b4], 0x0
 809ae26:  mov DWORD PTR [ebp-0x210], ebx
 809ae2c:  setg al
 809ae2f:  sub DWORD PTR [ebp-0x2b4], eax
 809ae35:  mov eax, DWORD PTR [ebp-0x200]
 809ae3b:  mov DWORD PTR [ebp-0x2b8], eax
 809ae41:  sub eax, 0x30
 809ae44:  cmp eax, 0x9
 809ae47:  jbe 809ad8c
 809ae4d:  cmp BYTE PTR [ebp-0x29f], 0x0
 809ae54:  je 809b4f9
 809ae5a:  mov ecx, DWORD PTR [ebp-0x210]
 809ae60:  mov edx, DWORD PTR [ebp-0x204]
 809ae66:  movzx eax, BYTE PTR [ebp-0x1bd]
 809ae6d:  cmp BYTE PTR [ecx+edx-0x1], al
 809ae71:  je 809c19b
 809ae77:  mov eax, DWORD PTR [ebp-0x2b4]
 809ae7d:  test eax, eax
 809ae7f:  mov DWORD PTR [ebp-0x250], eax
 809ae85:  jle 809bb56
 809ae8b:  cmp BYTE PTR [ebp-0x2a0], 0x0
 809ae92:  je 809b7e5
 809ae98:  mov ecx, DWORD PTR [ebp-0x298]
 809ae9e:  movzx edx, BYTE PTR [ecx]
 809aea1:  mov ebx, ecx
 809aea3:  mov ecx, DWORD PTR [ebp-0x2b8]
 809aea9:  test dl, dl
 809aeab:  jne 809b887
 809aeb1:  mov eax, DWORD PTR [ebp-0x298]
 809aeb7:  movzx edx, BYTE PTR [eax]
 809aeba:  mov DWORD PTR [ebp-0x2b8], ecx
 809aec0:  test dl, dl
 809aec2:  je 809b749
 809aec8:  mov ecx, DWORD PTR [ebp-0x204]
 809aece:  mov esi, DWORD PTR [ebp-0x298]
 809aed4:  mov ebx, DWORD PTR [ebp-0x210]
 809aeda:  mov edi, DWORD PTR [ebp-0x20c]
 809aee0:  add ecx, ecx
 809aee2:  mov DWORD PTR [ebp-0x230], ecx
 809aee8:  jmp 809af23
 809aeea:  lea esi, [esi]
 809aef0:  mov ecx, DWORD PTR [ebp-0x204]
 809aef6:  add esi, 0x1
 809aef9:  mov BYTE PTR [ebx+ecx], dl
 809aefc:  add ecx, 0x1
 809aeff:  mov DWORD PTR [ebp-0x204], ecx
 809af05:  movzx edx, BYTE PTR [esi]
 809af08:  add DWORD PTR [ebp-0x230], 0x2
 809af0f:  test dl, dl
 809af11:  je 809b73d
 809af17:  mov DWORD PTR [ebp-0x210], ebx
 809af1d:  mov DWORD PTR [ebp-0x20c], edi
 809af23:  cmp DWORD PTR [ebp-0x204], edi
 809af29:  jne 809aef0
 809af2b:  mov edi, DWORD PTR [ebp-0x230]
 809af31:  cmp edi, 0x100
 809af37:  jae 809af3e
 809af39:  mov edi, 0x100
 809af3e:  lea eax, [edi+0x12]
 809af41:  and eax, 0xfc
 809af44:  sub esp, eax
 809af46:  mov eax, DWORD PTR [ebp-0x210]
 809af4c:  lea ebx, [esp+0x1f]
 809af50:  and ebx, 0xf0
 809af53:  test eax, eax
 809af55:  je 809af73
 809af57:  mov eax, DWORD PTR [ebp-0x20c]
 809af5d:  mov edx, DWORD PTR [ebp-0x210]
 809af63:  mov DWORD PTR [esp], ebx
 809af66:  mov DWORD PTR [esp+0x8], eax
 809af6a:  mov DWORD PTR [esp+0x4], edx
 809af6e:  call 804efc0
 809af73:  movzx edx, BYTE PTR [esi]
 809af76:  jmp 809aef0
 809af7b:  test BYTE PTR [ebp-0x2b0], 0x1
 809af82:  jne 8099afe
 809af88:  mov ecx, DWORD PTR [ebp-0x2b0]
 809af8e:  and ecx, 0x8
 809af91:  mov DWORD PTR [ebp-0x1f0], ecx
 809af97:  jne 809b046
 809af9d:  test DWORD PTR [ebp-0x2b0], 0x2100
 809afa7:  je 809d0de
 809afad:  mov eax, DWORD PTR [ebp-0x1c4]
 809afb3:  test eax, eax
 809afb5:  jne 809d84e
 809afbb:  mov ebx, DWORD PTR [ebp-0x2c0]
 809afc1:  mov esi, DWORD PTR [ebp-0x2c0]
 809afc7:  mov ebx, DWORD PTR [ebx]
 809afc9:  add esi, 0x4
 809afcc:  mov DWORD PTR [ebp-0x2c0], esi
 809afd2:  mov DWORD PTR [ebp-0x284], ebx
 809afd8:  mov eax, DWORD PTR [ebp-0x284]
 809afde:  test eax, eax
 809afe0:  je 80997f0
 809afe6:  mov DWORD PTR [esp], 0x64
 809afed:  call 804d6f0
 809aff2:  mov ebx, DWORD PTR [ebp-0x284]
 809aff8:  test eax, eax
 809affa:  mov DWORD PTR [ebp-0x28c], eax
 809b000:  mov DWORD PTR [ebx], eax
 809b002:  je 809d39f
 809b008:  mov eax, DWORD PTR [ebp-0x290]
 809b00e:  test eax, eax
 809b010:  je 809d874
 809b016:  mov esi, DWORD PTR [ebp-0x290]
 809b01c:  mov edx, DWORD PTR [esi]
 809b01e:  cmp edx, 0x20
 809b021:  je 809d874
 809b027:  mov ecx, DWORD PTR [ebp-0x290]
 809b02d:  lea eax, [edx+0x1]
 809b030:  mov ebx, DWORD PTR [ebp-0x284]
 809b036:  mov DWORD PTR [ebp-0x218], 0x64
 809b040:  mov DWORD PTR [ecx], eax
 809b042:  mov DWORD PTR [ecx+edx*4+0x8], ebx
 809b046:  cmp DWORD PTR [ebp-0x2b8], 0xff
 809b04d:  je 8099590
 809b053:  mov edx, DWORD PTR [ebp+0x8]
 809b056:  mov eax, DWORD PTR [edx+0x4]
 809b059:  cmp eax, DWORD PTR [edx+0x8]
 809b05c:  jae 809e857
 809b062:  movzx ecx, BYTE PTR [eax]
 809b065:  add eax, 0x1
 809b068:  mov ebx, DWORD PTR [ebp+0x8]
 809b06b:  mov DWORD PTR [ebp-0x200], ecx
 809b071:  mov DWORD PTR [ebx+0x4], eax
 809b074:  mov eax, DWORD PTR [ebp-0x21c]
 809b07a:  mov esi, DWORD PTR [ebp-0x2b0]
 809b080:  mov ebx, DWORD PTR [ebp-0x1f0]
 809b086:  add eax, 0x1
 809b089:  and esi, 0x2100
 809b08f:  test ebx, ebx
 809b091:  mov DWORD PTR [ebp-0x1ec], esi
 809b097:  jne 809be47
 809b09d:  test esi, esi
 809b09f:  lea ebx, [eax+0x1]
 809b0a2:  je 809b171
 809b0a8:  lea esi, [eax+0x1]
 809b0ab:  mov edx, DWORD PTR [ebp-0x2ac]
 809b0b1:  lea ebx, [esi-0x1]
 809b0b4:  mov ecx, DWORD PTR [ebp-0x200]
 809b0ba:  mov DWORD PTR [ebp-0x1cc], ebx
 809b0c0:  mov eax, DWORD PTR [edx+0x34]
 809b0c3:  test BYTE PTR [eax+ecx*2+0x1], 0x20
 809b0c8:  jne 809dbda
 809b0ce:  mov edx, DWORD PTR [ebp-0x28c]
 809b0d4:  movzx eax, BYTE PTR [ebp-0x200]
 809b0db:  mov BYTE PTR [edx], al
 809b0dd:  mov ecx, DWORD PTR [ebp-0x284]
 809b0e3:  add edx, 0x1
 809b0e6:  mov DWORD PTR [ebp-0x28c], edx
 809b0ec:  mov ebx, DWORD PTR [ebp-0x218]
 809b0f2:  mov edx, DWORD PTR [ecx]
 809b0f4:  lea eax, [edx+ebx]
 809b0f7:  cmp DWORD PTR [ebp-0x28c], eax
 809b0fd:  je 809d9a1
 809b103:  mov edi, DWORD PTR [ebp-0x2b4]
 809b109:  test edi, edi
 809b10b:  jle 809b11a
 809b10d:  sub DWORD PTR [ebp-0x2b4], 0x1
 809b114:  je 809d8a3
 809b11a:  cmp DWORD PTR [ebp-0x200], 0xff
 809b121:  je 809d64c
 809b127:  mov edx, DWORD PTR [ebp+0x8]
 809b12a:  mov eax, DWORD PTR [edx+0x4]
 809b12d:  cmp eax, DWORD PTR [edx+0x8]
 809b130:  jae 809fd15
 809b136:  movzx ecx, BYTE PTR [eax]
 809b139:  add eax, 0x1
 809b13c:  mov DWORD PTR [edx+0x4], eax
 809b13f:  mov DWORD PTR [ebp-0x200], ecx
 809b145:  add esi, 0x1
 809b148:  mov DWORD PTR [ebp-0x218], ebx
 809b14e:  jmp 809b0ab
 809b153:  mov DWORD PTR [ebp-0x29c], 0x8
 809b15d:  jmp 8099abb
 809b162:  mov DWORD PTR [ebp-0x2b4], 0x1
 809b16c:  jmp 8099c1d
 809b171:  mov edx, DWORD PTR [ebp-0x2ac]
 809b177:  lea eax, [ebx-0x1]
 809b17a:  mov DWORD PTR [ebp-0x1cc], eax
 809b180:  mov ecx, DWORD PTR [ebp-0x200]
 809b186:  mov eax, DWORD PTR [edx+0x34]
 809b189:  test BYTE PTR [eax+ecx*2+0x1], 0x20
 809b18e:  jne 809dbda
 809b194:  mov esi, DWORD PTR [ebp-0x28c]
 809b19a:  mov BYTE PTR [esi], cl
 809b19c:  mov ecx, DWORD PTR [ebp-0x2b4]
 809b1a2:  add esi, 0x1
 809b1a5:  mov DWORD PTR [ebp-0x28c], esi
 809b1ab:  test ecx, ecx
 809b1ad:  jle 809b1bc
 809b1af:  sub DWORD PTR [ebp-0x2b4], 0x1
 809b1b6:  je 809d89d
 809b1bc:  cmp DWORD PTR [ebp-0x200], 0xff
 809b1c3:  je 809d646
 809b1c9:  mov edx, DWORD PTR [ebp+0x8]
 809b1cc:  mov eax, DWORD PTR [edx+0x4]
 809b1cf:  cmp DWORD PTR [edx+0x8], eax
 809b1d2:  jbe 809fda6
 809b1d8:  movzx ecx, BYTE PTR [eax]
 809b1db:  add eax, 0x1
 809b1de:  mov DWORD PTR [edx+0x4], eax
 809b1e1:  mov DWORD PTR [ebp-0x200], ecx
 809b1e7:  add ebx, 0x1
 809b1ea:  jmp 809b171
 809b1ec:  mov eax, 0xffffffe8
 809b1f1:  mov edx, DWORD PTR [ebp-0x2e0]
 809b1f7:  mov DWORD PTR [ebp-0x2bc], 0xffffffff
 809b201:  mov DWORD PTR [edx+eax], 0x9
 809b208:  jmp 809957b
 809b20d:  cmp DWORD PTR [ebp-0x200], 0xff
 809b214:  je 80997f0
 809b21a:  movzx eax, BYTE PTR [ebp-0x200]
 809b221:  mov ebx, 0x2
 809b226:  mov edx, DWORD PTR [ebp+0x8]
 809b229:  mov DWORD PTR [esp+0x4], eax
 809b22d:  mov DWORD PTR [esp], edx
 809b230:  call 8068600
 809b235:  jmp 80997f5
 809b23a:  lea esi, [esi]
 809b240:  mov edx, DWORD PTR [ebp-0x2e0]
 809b246:  mov edi, 0xffffffe8
 809b24c:  mov ecx, DWORD PTR [ebp-0x2a4]
 809b252:  mov esi, edx
 809b254:  mov DWORD PTR [edx+edi], ecx
 809b257:  mov DWORD PTR [esi+edi], 0x54
 809b25e:  mov ebx, 0x4
 809b263:  jmp 80997f5
 809b268:  mov ebx, DWORD PTR [ebp-0x2e0]
 809b26e:  mov edi, 0xffffffe8
 809b274:  mov esi, DWORD PTR [ebp-0x2a4]
 809b27a:  mov edx, ebx
 809b27c:  mov DWORD PTR [ebx+edi], esi
 809b27f:  mov DWORD PTR [edx+edi], 0x54
 809b286:  mov ebx, 0x4
 809b28b:  jmp 80997f5
 809b290:  cmp ebx, 0x1
 809b293:  jne 809d1a8
 809b299:  mov eax, DWORD PTR [ebp-0x1e8]
 809b29f:  add DWORD PTR [ebp-0x288], 0x4
 809b2a6:  test eax, eax
 809b2a8:  jne 809b2da
 809b2aa:  mov esi, DWORD PTR [ebp-0x1e4]
 809b2b0:  test esi, esi
 809b2b2:  je 809b2da
 809b2b4:  mov esi, DWORD PTR [ebp-0x284]
 809b2ba:  mov eax, DWORD PTR [ebp-0x218]
 809b2c0:  mov edx, DWORD PTR [esi]
 809b2c2:  shl eax, 0x2
 809b2c5:  mov DWORD PTR [ebp-0x1e0], eax
 809b2cb:  lea eax, [edx+eax]
 809b2ce:  cmp DWORD PTR [ebp-0x288], eax
 809b2d4:  je 809d52e
 809b2da:  mov esi, DWORD PTR [ebp-0x218]
 809b2e0:  mov ecx, DWORD PTR [ebp-0x2b4]
 809b2e6:  test ecx, ecx
 809b2e8:  jle 809b2f7
 809b2ea:  sub DWORD PTR [ebp-0x2b4], 0x1
 809b2f1:  je 809b9e2
 809b2f7:  cmp DWORD PTR [ebp-0x200], 0xff
 809b2fe:  je 809da8f
 809b304:  mov edx, DWORD PTR [ebp+0x8]
 809b307:  mov eax, DWORD PTR [edx+0x4]
 809b30a:  cmp eax, DWORD PTR [edx+0x8]
 809b30d:  jae 809b9b6
 809b313:  movzx ecx, BYTE PTR [eax]
 809b316:  add eax, 0x1
 809b319:  add DWORD PTR [ebp-0x1cc], 0x1
 809b320:  mov DWORD PTR [edx+0x4], eax
 809b323:  mov DWORD PTR [ebp-0x200], ecx
 809b329:  mov DWORD PTR [ebp-0x218], esi
 809b32f:  jmp 8099b70
 809b334:  mov esi, DWORD PTR [ebp-0x220]
 809b33a:  movzx ecx, BYTE PTR [esi]
 809b33d:  test cl, cl
 809b33f:  je 809aa2f
 809b345:  cmp cl, 0x5d
 809b348:  je 809aa2f
 809b34e:  movzx edx, BYTE PTR [esi-0x2]
 809b352:  cmp dl, cl
 809b354:  ja 809aa2f
 809b35a:  lea esi, [esi]
 809b360:  jae 809aa45
 809b366:  xchg ax, ax
 809b368:  mov ecx, DWORD PTR [ebp-0x214]
 809b36e:  movzx eax, dl
 809b371:  add edx, 0x1
 809b374:  mov BYTE PTR [ecx+eax], 0x1
 809b378:  mov esi, DWORD PTR [ebp-0x220]
 809b37e:  cmp BYTE PTR [esi], dl
 809b380:  ja 809b368
 809b382:  jmp 809aa42
 809b387:  mov eax, DWORD PTR [ebp-0x2ac]
 809b38d:  mov edx, DWORD PTR [ebp+0x8]
 809b390:  mov ebx, DWORD PTR [eax+0x38]
 809b393:  mov eax, DWORD PTR [edx+0x4]
 809b396:  cmp eax, DWORD PTR [edx+0x8]
 809b399:  jae 809e213
 809b39f:  movzx ecx, BYTE PTR [eax]
 809b3a2:  add eax, 0x1
 809b3a5:  mov DWORD PTR [edx+0x4], eax
 809b3a8:  mov DWORD PTR [ebp-0x200], ecx
 809b3ae:  movzx eax, BYTE PTR [ebp-0x200]
 809b3b5:  add DWORD PTR [ebp-0x1cc], 0x1
 809b3bc:  shl eax, 0x2
 809b3bf:  cmp DWORD PTR [ebx+eax], 0x6e
 809b3c3:  jne 809a519
 809b3c9:  mov edx, DWORD PTR [ebp-0x2ac]
 809b3cf:  cmp DWORD PTR [ebp-0x200], 0xff
 809b3d6:  mov ebx, DWORD PTR [edx+0x38]
 809b3d9:  jne 809bcdf
 809b3df:  mov edi, 0xffffffe8
 809b3e5:  mov eax, 0x3fc
 809b3ea:  mov esi, DWORD PTR [ebp-0x2a4]
 809b3f0:  mov ecx, DWORD PTR [ebp-0x2e0]
 809b3f6:  mov DWORD PTR [ecx+edi], esi
 809b3f9:  cmp DWORD PTR [ebx+eax], 0x69
 809b3fd:  jne 809a519
 809b403:  mov edx, DWORD PTR [ebp-0x2ac]
 809b409:  cmp DWORD PTR [ebp-0x200], 0xff
 809b410:  mov ebx, DWORD PTR [edx+0x38]
 809b413:  jne 809bd13
 809b419:  mov edi, 0xffffffe8
 809b41f:  mov eax, 0x3fc
 809b424:  mov esi, DWORD PTR [ebp-0x2a4]
 809b42a:  mov ecx, DWORD PTR [ebp-0x2e0]
 809b430:  mov DWORD PTR [ecx+edi], esi
 809b433:  cmp DWORD PTR [ebx+eax], 0x6c
 809b437:  jne 809a519
 809b43d:  cmp DWORD PTR [ebp-0x200], 0xff
 809b444:  jne 809b78d
 809b44a:  mov eax, 0xffffffe8
 809b44f:  mov ebx, 0x2
 809b454:  mov ecx, DWORD PTR [ebp-0x2a4]
 809b45a:  mov edx, DWORD PTR [ebp-0x2e0]
 809b460:  mov DWORD PTR [edx+eax], ecx
 809b463:  jmp 80997f5
 809b468:  mov eax, 0xffffffe8
 809b46d:  mov ecx, DWORD PTR [ebp-0x2a4]
 809b473:  mov edx, DWORD PTR [ebp-0x2e0]
 809b479:  mov DWORD PTR [edx+eax], ecx
 809b47c:  jmp 80995a4
 809b481:  mov edx, DWORD PTR [ebp-0x1f4]
 809b487:  mov ebx, DWORD PTR [ebp-0x200]
 809b48d:  mov DWORD PTR [ebp-0x218], edx
 809b493:  sub eax, 0x1
 809b496:  jne 809d1a8
 809b49c:  sub DWORD PTR [ebp-0x2b4], 0x1
 809b4a3:  mov eax, DWORD PTR [ebp-0x2b4]
 809b4a9:  add DWORD PTR [ebp-0x288], 0x4
 809b4b0:  test eax, eax
 809b4b2:  jle 809d922
 809b4b8:  cmp DWORD PTR [ebp-0x200], 0xff
 809b4bf:  je 809d8ae
 809b4c5:  mov edx, DWORD PTR [ebp+0x8]
 809b4c8:  mov eax, DWORD PTR [edx+0x4]
 809b4cb:  cmp eax, DWORD PTR [edx+0x8]
 809b4ce:  jae 809dba9
 809b4d4:  movzx ecx, BYTE PTR [eax]
 809b4d7:  add eax, 0x1
 809b4da:  mov DWORD PTR [edx+0x4], eax
 809b4dd:  add DWORD PTR [ebp-0x1cc], 0x1
 809b4e4:  mov DWORD PTR [ebp-0x200], ecx
 809b4ea:  mov ebx, ecx
 809b4ec:  jmp 8099c98
 809b4f1:  mov DWORD PTR [ebp-0x200], ebx
 809b4f7:  jmp 809b493
 809b4f9:  mov eax, DWORD PTR [ebp-0x2c4]
 809b4ff:  test eax, eax
 809b501:  je 809b598
 809b507:  mov edx, DWORD PTR [ebp-0x2ac]
 809b50d:  mov ecx, DWORD PTR [ebp-0x2b8]
 809b513:  mov eax, DWORD PTR [edx+0x34]
 809b516:  test BYTE PTR [eax+ecx*2+0x1], 0x10
 809b51b:  je 809b598
 809b51d:  mov esi, DWORD PTR [ebp-0x20c]
 809b523:  cmp DWORD PTR [ebp-0x204], esi
 809b529:  mov ebx, DWORD PTR [ebp-0x210]
 809b52f:  jne 809ada4
 809b535:  mov eax, DWORD PTR [ebp-0x204]
 809b53b:  add eax, eax
 809b53d:  cmp eax, 0x100
 809b542:  mov DWORD PTR [ebp-0x20c], eax
 809b548:  jae 809b554
 809b54a:  mov DWORD PTR [ebp-0x20c], 0x100
 809b554:  mov eax, DWORD PTR [ebp-0x20c]
 809b55a:  mov edi, DWORD PTR [ebp-0x210]
 809b560:  add eax, 0x12
 809b563:  and eax, 0xfc
 809b566:  sub esp, eax
 809b568:  lea ebx, [esp+0x1f]
 809b56c:  and ebx, 0xf0
 809b56f:  test edi, edi
 809b571:  je 809ada4
 809b577:  mov edx, DWORD PTR [ebp-0x204]
 809b57d:  mov ecx, DWORD PTR [ebp-0x210]
 809b583:  mov DWORD PTR [esp], ebx
 809b586:  mov DWORD PTR [esp+0x8], edx
 809b58a:  mov DWORD PTR [esp+0x4], ecx
 809b58e:  call 804efc0
 809b593:  jmp 809ada4
 809b598:  mov ebx, DWORD PTR [ebp-0x204]
 809b59e:  test ebx, ebx
 809b5a0:  je 809ae77
 809b5a6:  mov ecx, DWORD PTR [ebp-0x2ac]
 809b5ac:  movzx edx, BYTE PTR [ebp-0x2b8]
 809b5b3:  movzx ebx, BYTE PTR [ebp-0x1bd]
 809b5ba:  mov eax, DWORD PTR [ecx+0x38]
 809b5bd:  cmp bl, BYTE PTR [eax+edx*4]
 809b5c0:  jne 809ae77
 809b5c6:  mov esi, DWORD PTR [ebp-0x20c]
 809b5cc:  cmp DWORD PTR [ebp-0x204], esi
 809b5d2:  mov ebx, DWORD PTR [ebp-0x210]
 809b5d8:  je 809d6bc
 809b5de:  mov edx, DWORD PTR [ebp-0x204]
 809b5e4:  movzx eax, BYTE PTR [ebp-0x1bd]
 809b5eb:  mov BYTE PTR [ebx+edx], al
 809b5ee:  mov ecx, DWORD PTR [ebp-0x21c]
 809b5f4:  add edx, 0x1
 809b5f7:  mov esi, DWORD PTR [ebp-0x2b8]
 809b5fd:  mov DWORD PTR [ebp-0x204], edx
 809b603:  mov BYTE PTR [ebp-0x2a0], 0x1
 809b60a:  mov DWORD PTR [ebp-0x1cc], ecx
 809b610:  mov DWORD PTR [ebp-0x200], esi
 809b616:  mov BYTE PTR [ebp-0x29f], 0x1
 809b61d:  jmp 809add5
 809b622:  test BYTE PTR [ebp-0x2b0], 0x4
 809b629:  je 809bb20
 809b62f:  mov esi, DWORD PTR [ebp-0x1c4]
 809b635:  test esi, esi
 809b637:  jne 809c7e0
 809b63d:  mov ecx, DWORD PTR [ebp-0x2c0]
 809b643:  mov edx, DWORD PTR [ecx]
 809b645:  add ecx, 0x4
 809b648:  mov DWORD PTR [ebp-0x2c0], ecx
 809b64e:  mov WORD PTR [edx], ax
 809b651:  jmp 8099fc0
 809b656:  mov eax, DWORD PTR [ebp-0x2b0]
 809b65c:  mov edx, DWORD PTR [ebp-0x29c]
 809b662:  mov DWORD PTR [esp], ebx
 809b665:  and eax, 0x80
 809b66a:  mov DWORD PTR [esp+0xc], eax
 809b66e:  lea eax, [ebp-0x14]
 809b671:  mov DWORD PTR [esp+0x8], edx
 809b675:  mov DWORD PTR [esp+0x4], eax
 809b679:  call 8056ac0
 809b67e:  jmp 8099f62
 809b683:  mov eax, DWORD PTR [ebp-0x2b0]
 809b689:  mov edx, DWORD PTR [ebp-0x29c]
 809b68f:  mov DWORD PTR [esp], ebx
 809b692:  and eax, 0x80
 809b697:  mov DWORD PTR [esp+0xc], eax
 809b69b:  lea eax, [ebp-0x14]
 809b69e:  mov DWORD PTR [esp+0x8], edx
 809b6a2:  mov DWORD PTR [esp+0x4], eax
 809b6a6:  call 80a0d30
 809b6ab:  mov DWORD PTR [ebp-0x2d4], edx
 809b6b1:  jmp 8099f62
 809b6b6:  test edi, edi
 809b6b8:  jne 809b6f2
 809b6ba:  xor ebx, ebx
 809b6bc:  lea esi, [esi]
 809b6c0:  jmp 80997f5
 809b6c5:  mov edx, DWORD PTR [ebp-0x2a4]
 809b6cb:  mov eax, 0xffffffe8
 809b6d0:  mov esi, DWORD PTR [ebp-0x2e0]
 809b6d6:  mov DWORD PTR [esi+eax], edx
 809b6d9:  mov edx, 0xfffffffe
 809b6de:  mov ecx, DWORD PTR [ebp-0x2ac]
 809b6e4:  mov eax, DWORD PTR [ecx+0x34]
 809b6e7:  test BYTE PTR [eax+edx+0x1], 0x20
 809b6ec:  je 809bbaa
 809b6f2:  cmp DWORD PTR [ebp-0x2b8], 0xff
 809b6f9:  je 809b6c5
 809b6fb:  mov ecx, DWORD PTR [ebp+0x8]
 809b6fe:  mov eax, DWORD PTR [ecx+0x4]
 809b701:  cmp eax, DWORD PTR [ecx+0x8]
 809b704:  jae 809f77c
 809b70a:  movzx ebx, BYTE PTR [eax]
 809b70d:  add eax, 0x1
 809b710:  mov DWORD PTR [ecx+0x4], eax
 809b713:  mov edx, ebx
 809b715:  mov DWORD PTR [ebp-0x2b8], ebx
 809b71b:  add edx, edx
 809b71d:  jmp 809b6de
 809b71f:  mov esi, DWORD PTR [ebp-0x214]
 809b725:  movzx eax, BYTE PTR [esi]
 809b728:  cmp al, 0x2b
 809b72a:  je 809a519
 809b730:  cmp al, 0x2d
 809b732:  jne 8099ec8
 809b738:  jmp 809a519
 809b73d:  mov DWORD PTR [ebp-0x210], ebx
 809b743:  mov DWORD PTR [ebp-0x20c], edi
 809b749:  mov edi, DWORD PTR [ebp-0x2b4]
 809b74f:  test edi, edi
 809b751:  jle 809c452
 809b757:  mov eax, DWORD PTR [ebp-0x21c]
 809b75d:  mov edx, DWORD PTR [ebp-0x2b8]
 809b763:  mov ecx, DWORD PTR [ebp-0x250]
 809b769:  mov ebx, DWORD PTR [ebp-0x210]
 809b76f:  mov DWORD PTR [ebp-0x1cc], eax
 809b775:  mov DWORD PTR [ebp-0x200], edx
 809b77b:  mov DWORD PTR [ebp-0x2b4], ecx
 809b781:  mov BYTE PTR [ebp-0x2a0], 0x1
 809b788:  jmp 809add5
 809b78d:  mov ebx, DWORD PTR [ebp+0x8]
 809b790:  mov eax, DWORD PTR [ebx+0x4]
 809b793:  cmp eax, DWORD PTR [ebx+0x8]
 809b796:  jae 809f34f
 809b79c:  movzx esi, BYTE PTR [eax]
 809b79f:  add eax, 0x1
 809b7a2:  mov DWORD PTR [ebx+0x4], eax
 809b7a5:  mov DWORD PTR [ebp-0x200], esi
 809b7ab:  cmp DWORD PTR [ebp-0x200], 0x29
 809b7b2:  jne 809a526
 809b7b8:  mov edi, DWORD PTR [ebp-0x20c]
 809b7be:  test edi, edi
 809b7c0:  je 809c413
 809b7c6:  mov ebx, DWORD PTR [ebp-0x214]
 809b7cc:  add DWORD PTR [ebp-0x1cc], 0x1
 809b7d3:  mov BYTE PTR [ebx], 0x30
 809b7d6:  mov DWORD PTR [ebp-0x280], 0x1
 809b7e0:  jmp 8099eee
 809b7e5:  mov ebx, DWORD PTR [ebp-0x298]
 809b7eb:  mov ecx, DWORD PTR [ebp-0x2b8]
 809b7f1:  movzx edx, BYTE PTR [ebx]
 809b7f4:  movzx eax, dl
 809b7f7:  cmp ecx, eax
 809b7f9:  jne 809aea9
 809b7ff:  mov ebx, DWORD PTR [ebp-0x2e8]
 809b805:  cmp BYTE PTR [ebx], 0x0
 809b808:  je 809aec0
 809b80e:  add DWORD PTR [ebp-0x21c], 0x1
 809b815:  mov esi, DWORD PTR [ebp-0x21c]
 809b81b:  jmp 809b83b
 809b81d:  lea esi, [esi]
 809b820:  mov eax, DWORD PTR [ebp-0x21c]
 809b826:  mov edx, DWORD PTR [ebp-0x250]
 809b82c:  add eax, 0x1
 809b82f:  test edx, edx
 809b831:  je 809b88d
 809b833:  mov DWORD PTR [ebp-0x21c], eax
 809b839:  mov esi, eax
 809b83b:  mov edx, DWORD PTR [ebp+0x8]
 809b83e:  sub esi, 0x1
 809b841:  mov eax, DWORD PTR [edx+0x4]
 809b844:  cmp eax, DWORD PTR [edx+0x8]
 809b847:  jae 809d340
 809b84d:  movzx ecx, BYTE PTR [eax]
 809b850:  add eax, 0x1
 809b853:  mov DWORD PTR [edx+0x4], eax
 809b856:  sub DWORD PTR [ebp-0x250], 0x1
 809b85d:  movzx edx, BYTE PTR [ebx]
 809b860:  movzx esi, dl
 809b863:  cmp esi, ecx
 809b865:  mov DWORD PTR [ebp-0x2b8], esi
 809b86b:  jne 809aea9
 809b871:  add ebx, 0x1
 809b874:  cmp BYTE PTR [ebx], 0x0
 809b877:  jne 809b820
 809b879:  mov esi, DWORD PTR [ebp-0x298]
 809b87f:  movzx edx, BYTE PTR [esi]
 809b882:  jmp 809aec0
 809b887:  mov DWORD PTR [ebp-0x2b8], ecx
 809b88d:  cmp BYTE PTR [ebp-0x2e1], 0x0
 809b894:  jne 809bbd4
 809b89a:  mov edx, DWORD PTR [ebp-0x21c]
 809b8a0:  mov ecx, DWORD PTR [ebp-0x2b8]
 809b8a6:  mov ebx, DWORD PTR [ebp-0x294]
 809b8ac:  mov DWORD PTR [ebp-0x1cc], edx
 809b8b2:  mov DWORD PTR [ebp-0x200], ecx
 809b8b8:  test ebx, ebx
 809b8ba:  je 809dcf0
 809b8c0:  cmp BYTE PTR [ebx], 0x0
 809b8c3:  jne 809dcf0
 809b8c9:  mov ecx, DWORD PTR [ebp-0x294]
 809b8cf:  movzx eax, BYTE PTR [ecx]
 809b8d2:  test al, al
 809b8d4:  je 809b98b
 809b8da:  mov ebx, DWORD PTR [ebp-0x204]
 809b8e0:  mov esi, ecx
 809b8e2:  mov edi, DWORD PTR [ebp-0x20c]
 809b8e8:  add ebx, ebx
 809b8ea:  mov DWORD PTR [ebp-0x22c], ebx
 809b8f0:  mov ebx, DWORD PTR [ebp-0x210]
 809b8f6:  jmp 809b927
 809b8f8:  mov ecx, DWORD PTR [ebp-0x204]
 809b8fe:  add esi, 0x1
 809b901:  mov BYTE PTR [ebx+ecx], al
 809b904:  add ecx, 0x1
 809b907:  mov DWORD PTR [ebp-0x204], ecx
 809b90d:  movzx eax, BYTE PTR [esi]
 809b910:  add DWORD PTR [ebp-0x22c], 0x2
 809b917:  test al, al
 809b919:  je 809b97f
 809b91b:  mov DWORD PTR [ebp-0x210], ebx
 809b921:  mov DWORD PTR [ebp-0x20c], edi
 809b927:  cmp DWORD PTR [ebp-0x204], edi
 809b92d:  jne 809b8f8
 809b92f:  mov edi, DWORD PTR [ebp-0x22c]
 809b935:  cmp edi, 0x100
 809b93b:  jae 809b942
 809b93d:  mov edi, 0x100
 809b942:  lea eax, [edi+0x12]
 809b945:  and eax, 0xfc
 809b948:  sub esp, eax
 809b94a:  mov eax, DWORD PTR [ebp-0x210]
 809b950:  lea ebx, [esp+0x1f]
 809b954:  and ebx, 0xf0
 809b957:  test eax, eax
 809b959:  je 809b977
 809b95b:  mov eax, DWORD PTR [ebp-0x20c]
 809b961:  mov edx, DWORD PTR [ebp-0x210]
 809b967:  mov DWORD PTR [esp], ebx
 809b96a:  mov DWORD PTR [esp+0x8], eax
 809b96e:  mov DWORD PTR [esp+0x4], edx
 809b972:  call 804efc0
 809b977:  movzx eax, BYTE PTR [esi]
 809b97a:  jmp 809b8f8
 809b97f:  mov DWORD PTR [ebp-0x210], ebx
 809b985:  mov DWORD PTR [ebp-0x20c], edi
 809b98b:  mov eax, DWORD PTR [ebp-0x2b4]
 809b991:  mov ebx, DWORD PTR [ebp-0x210]
 809b997:  test eax, eax
 809b999:  jle 809add5
 809b99f:  mov esi, DWORD PTR [ebp-0x250]
 809b9a5:  mov ebx, DWORD PTR [ebp-0x210]
 809b9ab:  mov DWORD PTR [ebp-0x2b4], esi
 809b9b1:  jmp 809add5
 809b9b6:  mov DWORD PTR [esp], edx
 809b9b9:  call 8068f50
 809b9be:  mov DWORD PTR [ebp-0x200], eax
 809b9c4:  add eax, 0x1
 809b9c7:  jne 809f704
 809b9cd:  mov edi, 0xffffffe8
 809b9d3:  mov eax, DWORD PTR [ebp-0x2e0]
 809b9d9:  mov edi, DWORD PTR [eax+edi]
 809b9dc:  mov DWORD PTR [ebp-0x2a4], edi
 809b9e2:  mov DWORD PTR [ebp-0x218], esi
 809b9e8:  mov edx, DWORD PTR [ebp-0x1e8]
 809b9ee:  test edx, edx
 809b9f0:  jne 8099540
 809b9f6:  mov edx, DWORD PTR [ebp-0x288]
 809b9fc:  mov eax, DWORD PTR [ebp-0x1e4]
 809ba02:  mov DWORD PTR [edx], 0x0
 809ba08:  add edx, 0x4
 809ba0b:  test eax, eax
 809ba0d:  mov DWORD PTR [ebp-0x288], edx
 809ba13:  je 809ba4b
 809ba15:  mov ecx, DWORD PTR [ebp-0x284]
 809ba1b:  mov eax, DWORD PTR [ebp-0x288]
 809ba21:  mov edx, DWORD PTR [ecx]
 809ba23:  sub eax, edx
 809ba25:  sar eax, 0x2
 809ba28:  cmp eax, DWORD PTR [ebp-0x218]
 809ba2e:  je 809ba4b
 809ba30:  shl eax, 0x2
 809ba33:  mov DWORD PTR [esp+0x4], eax
 809ba37:  mov DWORD PTR [esp], edx
 809ba3a:  call 804db10
 809ba3f:  test eax, eax
 809ba41:  je 809ba4b
 809ba43:  mov ebx, DWORD PTR [ebp-0x284]
 809ba49:  mov DWORD PTR [ebx], eax
 809ba4b:  add DWORD PTR [ebp-0x2bc], 0x1
 809ba52:  xor edi, edi
 809ba54:  mov DWORD PTR [ebp-0x284], 0x0
 809ba5e:  jmp 8099542
 809ba63:  mov DWORD PTR [esp], ecx
 809ba66:  call 8068f50
 809ba6b:  mov DWORD PTR [ebp-0x200], eax
 809ba71:  add eax, 0x1
 809ba74:  je 80995a4
 809ba7a:  mov esi, DWORD PTR [ebp-0x2ac]
 809ba80:  mov edx, DWORD PTR [esi+0x34]
 809ba83:  jmp 809951d
 809ba88:  mov ecx, DWORD PTR [ebp-0x280]
 809ba8e:  add ecx, ecx
 809ba90:  cmp ecx, 0x100
 809ba96:  mov DWORD PTR [ebp-0x20c], ecx
 809ba9c:  jae 809baa8
 809ba9e:  mov DWORD PTR [ebp-0x20c], 0x100
 809baa8:  mov eax, DWORD PTR [ebp-0x20c]
 809baae:  mov esi, DWORD PTR [ebp-0x214]
 809bab4:  add eax, 0x12
 809bab7:  and eax, 0xfc
 809baba:  sub esp, eax
 809babc:  lea ebx, [esp+0x1f]
 809bac0:  and ebx, 0xf0
 809bac3:  test esi, esi
 809bac5:  je 8099f06
 809bacb:  mov esi, DWORD PTR [ebp-0x280]
 809bad1:  mov eax, DWORD PTR [ebp-0x214]
 809bad7:  mov DWORD PTR [esp], ebx
 809bada:  mov DWORD PTR [esp+0x8], esi
 809bade:  mov DWORD PTR [esp+0x4], eax
 809bae2:  call 804efc0
 809bae7:  jmp 8099f06
 809baec:  sub esp, 0x110
 809baf2:  lea edx, [esp+0x1f]
 809baf6:  and edx, 0xf0
 809baf9:  mov DWORD PTR [ebp-0x214], edx
 809baff:  mov DWORD PTR [ebp-0x20c], 0x100
 809bb09:  jmp 809a464
 809bb0e:  movzx ebx, BYTE PTR [ecx]
 809bb11:  mov DWORD PTR [ebp-0x2b4], 0xffffffff
 809bb1b:  jmp 80996c7
 809bb20:  test DWORD PTR [ebp-0x2b0], 0x200
 809bb2a:  jne 809c500
 809bb30:  mov ecx, DWORD PTR [ebp-0x1c4]
 809bb36:  test ecx, ecx
 809bb38:  jne 809d4a0
 809bb3e:  mov esi, DWORD PTR [ebp-0x2c0]
 809bb44:  mov edx, DWORD PTR [esi]
 809bb46:  add esi, 0x4
 809bb49:  mov DWORD PTR [ebp-0x2c0], esi
 809bb4f:  mov DWORD PTR [edx], eax
 809bb51:  jmp 8099fc0
 809bb56:  mov DWORD PTR [ebp-0x250], 0x7fffffff
 809bb60:  jmp 809ae8b
 809bb65:  mov DWORD PTR [esp], edx
 809bb68:  call 8068f50
 809bb6d:  mov DWORD PTR [ebp-0x2b8], eax
 809bb73:  add eax, 0x1
 809bb76:  jne 8099783
 809bb7c:  mov ecx, DWORD PTR [ebp-0x2e0]
 809bb82:  mov ecx, DWORD PTR [ecx+edi]
 809bb85:  mov DWORD PTR [ebp-0x2a4], ecx
 809bb8b:  mov eax, DWORD PTR [ebp-0x2e0]
 809bb91:  cmp DWORD PTR [eax+edi], 0x4
 809bb95:  je 80995a4
 809bb9b:  mov DWORD PTR [ebp-0x2b8], 0xffffffff
 809bba5:  jmp 809978a
 809bbaa:  cmp DWORD PTR [ebp-0x2b8], 0xff
 809bbb1:  je 809b6ba
 809bbb7:  mov ebx, DWORD PTR [ebp+0x8]
 809bbba:  movzx eax, BYTE PTR [ebp-0x2b8]
 809bbc1:  mov DWORD PTR [esp], ebx
 809bbc4:  xor ebx, ebx
 809bbc6:  mov DWORD PTR [esp+0x4], eax
 809bbca:  call 8068600
 809bbcf:  jmp 80997f5
 809bbd4:  cmp BYTE PTR [ebp-0x2a0], 0x0
 809bbdb:  jne 809b89a
 809bbe1:  mov ecx, ebx
 809bbe3:  sub ecx, DWORD PTR [ebp-0x298]
 809bbe9:  test ecx, ecx
 809bbeb:  jle 809dc83
 809bbf1:  mov ebx, DWORD PTR [ebp-0x294]
 809bbf7:  mov esi, DWORD PTR [ebp-0x298]
 809bbfd:  movzx eax, BYTE PTR [ebx]
 809bc00:  cmp al, BYTE PTR [esi]
 809bc02:  jne 809b89a
 809bc08:  mov edx, 0x1
 809bc0d:  jmp 809bc25
 809bc0f:  nop
 809bc10:  mov esi, DWORD PTR [ebp-0x298]
 809bc16:  movzx eax, BYTE PTR [esi+edx]
 809bc1a:  add edx, 0x1
 809bc1d:  cmp BYTE PTR [ebx], al
 809bc1f:  jne 809c435
 809bc25:  add ebx, 0x1
 809bc28:  cmp ecx, edx
 809bc2a:  mov eax, edx
 809bc2c:  jg 809bc10
 809bc2e:  cmp ecx, eax
 809bc30:  jne 809c435
 809bc36:  movzx eax, BYTE PTR [ebx]
 809bc39:  mov edx, DWORD PTR [ebp-0x2b8]
 809bc3f:  mov DWORD PTR [ebp-0x200], eax
 809bc45:  cmp eax, edx
 809bc47:  jne 809c435
 809bc4d:  add ebx, 0x1
 809bc50:  cmp BYTE PTR [ebx], 0x0
 809bc53:  je 809ddbf
 809bc59:  mov esi, DWORD PTR [ebp-0x250]
 809bc5f:  test esi, esi
 809bc61:  je 809ddbf
 809bc67:  mov ecx, DWORD PTR [ebp-0x21c]
 809bc6d:  add ecx, 0x1
 809bc70:  mov DWORD PTR [ebp-0x1cc], ecx
 809bc76:  mov esi, ecx
 809bc78:  jmp 809bc95
 809bc7a:  mov eax, DWORD PTR [ebp-0x1cc]
 809bc80:  mov ecx, DWORD PTR [ebp-0x250]
 809bc86:  add eax, 0x1
 809bc89:  test ecx, ecx
 809bc8b:  je 809bcd4
 809bc8d:  mov DWORD PTR [ebp-0x1cc], eax
 809bc93:  mov esi, eax
 809bc95:  mov edx, DWORD PTR [ebp+0x8]
 809bc98:  sub esi, 0x1
 809bc9b:  mov eax, DWORD PTR [edx+0x4]
 809bc9e:  cmp eax, DWORD PTR [edx+0x8]
 809bca1:  jae 809e1dc
 809bca7:  movzx ecx, BYTE PTR [eax]
 809bcaa:  add eax, 0x1
 809bcad:  mov DWORD PTR [edx+0x4], eax
 809bcb0:  mov DWORD PTR [ebp-0x200], ecx
 809bcb6:  sub DWORD PTR [ebp-0x250], 0x1
 809bcbd:  movzx edx, BYTE PTR [ebx]
 809bcc0:  cmp edx, DWORD PTR [ebp-0x200]
 809bcc6:  jne 809b8b8
 809bccc:  add ebx, 0x1
 809bccf:  cmp BYTE PTR [ebx], 0x0
 809bcd2:  jne 809bc7a
 809bcd4:  mov DWORD PTR [ebp-0x200], edx
 809bcda:  jmp 809b8b8
 809bcdf:  mov edx, DWORD PTR [ebp+0x8]
 809bce2:  mov eax, DWORD PTR [edx+0x4]
 809bce5:  cmp eax, DWORD PTR [edx+0x8]
 809bce8:  jae 809e27a
 809bcee:  movzx ecx, BYTE PTR [eax]
 809bcf1:  add eax, 0x1
 809bcf4:  mov DWORD PTR [edx+0x4], eax
 809bcf7:  mov DWORD PTR [ebp-0x200], ecx
 809bcfd:  movzx eax, BYTE PTR [ebp-0x200]
 809bd04:  add DWORD PTR [ebp-0x1cc], 0x1
 809bd0b:  shl eax, 0x2
 809bd0e:  jmp 809b3f9
 809bd13:  mov edx, DWORD PTR [ebp+0x8]
 809bd16:  mov eax, DWORD PTR [edx+0x4]
 809bd19:  cmp eax, DWORD PTR [edx+0x8]
 809bd1c:  jae 809f4b5
 809bd22:  movzx ecx, BYTE PTR [eax]
 809bd25:  add eax, 0x1
 809bd28:  mov DWORD PTR [edx+0x4], eax
 809bd2b:  mov DWORD PTR [ebp-0x200], ecx
 809bd31:  movzx eax, BYTE PTR [ebp-0x200]
 809bd38:  add DWORD PTR [ebp-0x1cc], 0x1
 809bd3f:  shl eax, 0x2
 809bd42:  jmp 809b433
 809bd47:  mov edx, DWORD PTR [ebp-0x204]
 809bd4d:  add edx, edx
 809bd4f:  cmp edx, 0x100
 809bd55:  mov DWORD PTR [ebp-0x20c], edx
 809bd5b:  jae 809bd67
 809bd5d:  mov DWORD PTR [ebp-0x20c], 0x100
 809bd67:  mov eax, DWORD PTR [ebp-0x20c]
 809bd6d:  add eax, 0x12
 809bd70:  and eax, 0xfc
 809bd73:  sub esp, eax
 809bd75:  mov eax, DWORD PTR [ebp-0x210]
 809bd7b:  lea ebx, [esp+0x1f]
 809bd7f:  and ebx, 0xf0
 809bd82:  test eax, eax
 809bd84:  je 809ada4
 809bd8a:  mov ecx, DWORD PTR [ebp-0x204]
 809bd90:  mov esi, DWORD PTR [ebp-0x210]
 809bd96:  mov DWORD PTR [esp], ebx
 809bd99:  mov DWORD PTR [esp+0x8], ecx
 809bd9d:  mov DWORD PTR [esp+0x4], esi
 809bda1:  call 804efc0
 809bda6:  jmp 809ada4
 809bdab:  mov edx, DWORD PTR [ebp-0x21c]
 809bdb1:  xor edi, edi
 809bdb3:  mov ecx, DWORD PTR [ebp-0x2b8]
 809bdb9:  mov DWORD PTR [ebp-0x1cc], edx
 809bdbf:  mov DWORD PTR [ebp-0x200], ecx
 809bdc5:  jmp 8099542
 809bdca:  mov DWORD PTR [esp], ecx
 809bdcd:  call 8068f50
 809bdd2:  cmp eax, 0xff
 809bdd5:  mov esi, eax
 809bdd7:  jne 809a300
 809bddd:  mov edi, 0xffffffe8
 809bde3:  mov ecx, DWORD PTR [ebp-0x2e0]
 809bde9:  mov edi, DWORD PTR [ecx+edi]
 809bdec:  mov DWORD PTR [ebp-0x2a4], edi
 809bdf2:  jmp 809a2d4
 809bdf7:  mov eax, DWORD PTR [ebp-0x214]
 809bdfd:  sub esp, 0x110
 809be03:  lea ebx, [esp+0x1f]
 809be07:  and ebx, 0xf0
 809be0a:  mov DWORD PTR [ebp-0x20c], 0x100
 809be14:  test eax, eax
 809be16:  je 8099ffe
 809be1c:  mov edx, DWORD PTR [ebp-0x280]
 809be22:  mov ecx, DWORD PTR [ebp-0x214]
 809be28:  mov DWORD PTR [esp], ebx
 809be2b:  mov DWORD PTR [esp+0x8], edx
 809be2f:  mov DWORD PTR [esp+0x4], ecx
 809be33:  call 804efc0
 809be38:  mov DWORD PTR [ebp-0x20c], 0x100
 809be42:  jmp 8099ffe
 809be47:  mov edx, DWORD PTR [ebp-0x1ec]
 809be4d:  test edx, edx
 809be4f:  jne 809c675
 809be55:  lea ebx, [eax+0x1]
 809be58:  mov eax, DWORD PTR [ebp-0x2ac]
 809be5e:  mov edx, DWORD PTR [eax+0x34]
 809be61:  mov esi, DWORD PTR [ebp-0x200]
 809be67:  lea ecx, [ebx-0x1]
 809be6a:  mov DWORD PTR [ebp-0x1cc], ecx
 809be70:  test BYTE PTR [edx+esi*2+0x1], 0x20
 809be75:  jne 809dbda
 809be7b:  mov eax, DWORD PTR [ebp-0x2b4]
 809be81:  test eax, eax
 809be83:  jle 809be92
 809be85:  sub DWORD PTR [ebp-0x2b4], 0x1
 809be8c:  je 809d89d
 809be92:  cmp DWORD PTR [ebp-0x200], 0xff
 809be99:  je 809d646
 809be9f:  mov ecx, DWORD PTR [ebp+0x8]
 809bea2:  mov eax, DWORD PTR [ecx+0x4]
 809bea5:  cmp DWORD PTR [ecx+0x8], eax
 809bea8:  jbe 809f818
 809beae:  mov esi, ecx
 809beb0:  movzx ecx, BYTE PTR [eax]
 809beb3:  add eax, 0x1
 809beb6:  mov DWORD PTR [esi+0x4], eax
 809beb9:  mov DWORD PTR [ebp-0x200], ecx
 809bebf:  add ebx, 0x1
 809bec2:  jmp 809be61
 809bec4:  test ebx, ebx
 809bec6:  je 809c048
 809becc:  cmp DWORD PTR [ebp-0x2b8], 0xff
 809bed3:  je 809b468
 809bed9:  mov ebx, DWORD PTR [ebp+0x8]
 809bedc:  mov eax, DWORD PTR [ebx+0x4]
 809bedf:  cmp eax, DWORD PTR [ebx+0x8]
 809bee2:  jae 809f3f3
 809bee8:  movzx esi, BYTE PTR [eax]
 809beeb:  add eax, 0x1
 809beee:  mov edx, DWORD PTR [ebp+0x8]
 809bef1:  mov DWORD PTR [ebp-0x200], esi
 809bef7:  mov DWORD PTR [edx+0x4], eax
 809befa:  mov ecx, DWORD PTR [ebp-0x2b0]
 809bf00:  mov eax, DWORD PTR [ebp-0x244]
 809bf06:  mov DWORD PTR [ebp-0x44], 0x0
 809bf0d:  mov DWORD PTR [ebp-0x40], 0x0
 809bf14:  and ecx, 0x2100
 809bf1a:  test eax, eax
 809bf1c:  mov DWORD PTR [ebp-0x1bc], ecx
 809bf22:  je 809cdd2
 809bf28:  mov edi, DWORD PTR [ebp-0x1bc]
 809bf2e:  test edi, edi
 809bf30:  jne 809cd62
 809bf36:  mov esi, DWORD PTR [ebp-0x21c]
 809bf3c:  mov ebx, DWORD PTR [ebp-0x2b4]
 809bf42:  add esi, 0x2
 809bf45:  sub ebx, 0x1
 809bf48:  jmp 809bf71
 809bf4a:  mov edx, DWORD PTR [ebp+0x8]
 809bf4d:  mov eax, DWORD PTR [edx+0x4]
 809bf50:  cmp eax, DWORD PTR [edx+0x8]
 809bf53:  jae 809f42b
 809bf59:  movzx ecx, BYTE PTR [eax]
 809bf5c:  add eax, 0x1
 809bf5f:  mov edx, DWORD PTR [ebp+0x8]
 809bf62:  mov DWORD PTR [ebp-0x200], ecx
 809bf68:  mov DWORD PTR [edx+0x4], eax
 809bf6b:  add esi, 0x1
 809bf6e:  sub ebx, 0x1
 809bf71:  lea eax, [esi-0x1]
 809bf74:  mov ecx, DWORD PTR [ebp-0x200]
 809bf7a:  mov DWORD PTR [ebp-0x1cc], eax
 809bf80:  mov eax, DWORD PTR [ebp-0x214]
 809bf86:  movzx edx, BYTE PTR [ebp-0x29d]
 809bf8d:  cmp BYTE PTR [eax+ecx], dl
 809bf90:  je 809d804
 809bf96:  test ebx, ebx
 809bf98:  jle 809db98
 809bf9e:  add ecx, 0x1
 809bfa1:  jne 809bf4a
 809bfa3:  xor ebx, ebx
 809bfa5:  mov edi, 0xffffffe8
 809bfab:  mov eax, DWORD PTR [ebp-0x2a4]
 809bfb1:  mov esi, DWORD PTR [ebp-0x2e0]
 809bfb7:  mov DWORD PTR [ebp-0x200], 0xffffffff
 809bfc1:  mov DWORD PTR [esi+edi], eax
 809bfc4:  test ebx, ebx
 809bfc6:  jne 809f40f
 809bfcc:  mov ecx, DWORD PTR [ebp-0x1cc]
 809bfd2:  cmp DWORD PTR [ebp-0x21c], ecx
 809bfd8:  je 80997f0
 809bfde:  mov ecx, DWORD PTR [ebp-0x244]
 809bfe4:  test ecx, ecx
 809bfe6:  jne 8099540
 809bfec:  mov ebx, DWORD PTR [ebp-0x288]
 809bff2:  mov edx, DWORD PTR [ebp-0x1bc]
 809bff8:  mov DWORD PTR [ebx], 0x0
 809bffe:  add ebx, 0x4
 809c001:  test edx, edx
 809c003:  mov DWORD PTR [ebp-0x288], ebx
 809c009:  je 809ba4b
 809c00f:  mov esi, DWORD PTR [ebp-0x284]
 809c015:  mov eax, ebx
 809c017:  mov edx, DWORD PTR [esi]
 809c019:  sub eax, edx
 809c01b:  sar eax, 0x2
 809c01e:  cmp eax, DWORD PTR [ebp-0x218]
 809c024:  je 809ba4b
 809c02a:  shl eax, 0x2
 809c02d:  mov DWORD PTR [esp+0x4], eax
 809c031:  mov DWORD PTR [esp], edx
 809c034:  call 804db10
 809c039:  test eax, eax
 809c03b:  je 809ba4b
 809c041:  mov DWORD PTR [esi], eax
 809c043:  jmp 809ba4b
 809c048:  cmp DWORD PTR [ebp-0x2b8], 0xff
 809c04f:  nop
 809c050:  je 809b468
 809c056:  mov ebx, DWORD PTR [ebp+0x8]
 809c059:  mov eax, DWORD PTR [ebx+0x4]
 809c05c:  cmp eax, DWORD PTR [ebx+0x8]
 809c05f:  jae 809ddd0
 809c065:  movzx esi, BYTE PTR [eax]
 809c068:  add eax, 0x1
 809c06b:  mov edx, DWORD PTR [ebp+0x8]
 809c06e:  mov DWORD PTR [ebp-0x200], esi
 809c074:  mov DWORD PTR [edx+0x4], eax
 809c077:  mov ecx, DWORD PTR [ebp-0x2b0]
 809c07d:  mov esi, DWORD PTR [ebp-0x21c]
 809c083:  and ecx, 0x2100
 809c089:  mov DWORD PTR [ebp-0x1b8], ecx
 809c08f:  add esi, 0x2
 809c092:  jmp 809c0db
 809c094:  lea esi, [esi]
 809c098:  sub DWORD PTR [ebp-0x2b4], 0x1
 809c09f:  mov eax, DWORD PTR [ebp-0x2b4]
 809c0a5:  test eax, eax
 809c0a7:  jle 809c396
 809c0ad:  cmp DWORD PTR [ebp-0x200], 0xff
 809c0b4:  je 809dc69
 809c0ba:  mov edx, DWORD PTR [ebp+0x8]
 809c0bd:  mov eax, DWORD PTR [edx+0x4]
 809c0c0:  cmp eax, DWORD PTR [edx+0x8]
 809c0c3:  jae 809c36a
 809c0c9:  movzx ecx, BYTE PTR [eax]
 809c0cc:  add eax, 0x1
 809c0cf:  mov DWORD PTR [edx+0x4], eax
 809c0d2:  mov DWORD PTR [ebp-0x200], ecx
 809c0d8:  add esi, 0x1
 809c0db:  mov ecx, DWORD PTR [ebp-0x214]
 809c0e1:  lea ebx, [esi-0x1]
 809c0e4:  mov edx, DWORD PTR [ebp-0x200]
 809c0ea:  movzx eax, BYTE PTR [ebp-0x29d]
 809c0f1:  mov DWORD PTR [ebp-0x1cc], ebx
 809c0f7:  cmp BYTE PTR [ecx+edx], al
 809c0fa:  je 809dd41
 809c100:  mov eax, DWORD PTR [ebp-0x244]
 809c106:  test eax, eax
 809c108:  jne 809c098
 809c10a:  mov edx, DWORD PTR [ebp-0x28c]
 809c110:  movzx eax, BYTE PTR [ebp-0x200]
 809c117:  mov BYTE PTR [edx], al
 809c119:  mov eax, DWORD PTR [ebp-0x1b8]
 809c11f:  add edx, 0x1
 809c122:  mov DWORD PTR [ebp-0x28c], edx
 809c128:  test eax, eax
 809c12a:  je 809c098
 809c130:  mov ecx, DWORD PTR [ebp-0x284]
 809c136:  mov ebx, DWORD PTR [ebp-0x218]
 809c13c:  mov edx, DWORD PTR [ecx]
 809c13e:  lea eax, [edx+ebx]
 809c141:  cmp DWORD PTR [ebp-0x28c], eax
 809c147:  jne 809c098
 809c14d:  mov edi, DWORD PTR [ebp-0x218]
 809c153:  add ebx, ebx
 809c155:  add edi, 0x1
 809c158:  jmp 809c16c
 809c15a:  cmp ebx, edi
 809c15c:  jbe 809dd61
 809c162:  mov eax, DWORD PTR [ebp-0x284]
 809c168:  mov ebx, edi
 809c16a:  mov edx, DWORD PTR [eax]
 809c16c:  mov DWORD PTR [esp+0x4], ebx
 809c170:  mov DWORD PTR [esp], edx
 809c173:  call 804db10
 809c178:  test eax, eax
 809c17a:  je 809c15a
 809c17c:  mov edx, DWORD PTR [ebp-0x284]
 809c182:  mov DWORD PTR [edx], eax
 809c184:  add eax, DWORD PTR [ebp-0x218]
 809c18a:  mov DWORD PTR [ebp-0x218], ebx
 809c190:  mov DWORD PTR [ebp-0x28c], eax
 809c196:  jmp 809c098
 809c19b:  cmp DWORD PTR [ebp-0x2b8], 0x2d
 809c1a2:  je 809c1b1
 809c1a4:  cmp DWORD PTR [ebp-0x2b8], 0x2b
 809c1ab:  jne 809ae77
 809c1b1:  mov esi, DWORD PTR [ebp-0x20c]
 809c1b7:  cmp DWORD PTR [ebp-0x204], esi
 809c1bd:  mov ebx, DWORD PTR [ebp-0x210]
 809c1c3:  je 809d750
 809c1c9:  mov edx, DWORD PTR [ebp-0x204]
 809c1cf:  movzx eax, BYTE PTR [ebp-0x2b8]
 809c1d6:  mov BYTE PTR [ebx+edx], al
 809c1d9:  mov ecx, DWORD PTR [ebp-0x21c]
 809c1df:  add edx, 0x1
 809c1e2:  mov esi, DWORD PTR [ebp-0x2b8]
 809c1e8:  mov DWORD PTR [ebp-0x204], edx
 809c1ee:  mov BYTE PTR [ebp-0x29f], 0x1
 809c1f5:  mov DWORD PTR [ebp-0x1cc], ecx
 809c1fb:  mov DWORD PTR [ebp-0x200], esi
 809c201:  jmp 809add5
 809c206:  mov eax, DWORD PTR [ebp-0x29c]
 809c20c:  test eax, eax
 809c20e:  jne 809c788
 809c214:  mov DWORD PTR [ebp-0x29c], 0x10
 809c21e:  xor eax, eax
 809c220:  cmp DWORD PTR [ebp-0x2b4], 0x0
 809c227:  setg al
 809c22a:  sub DWORD PTR [ebp-0x2b4], eax
 809c230:  cmp DWORD PTR [ebp-0x200], 0xff
 809c237:  jne 809d7b3
 809c23d:  mov edi, 0xffffffe8
 809c243:  mov edx, DWORD PTR [ebp-0x2a4]
 809c249:  mov eax, DWORD PTR [ebp-0x2e0]
 809c24f:  mov DWORD PTR [eax+edi], edx
 809c252:  jmp 809a065
 809c257:  mov edx, DWORD PTR [ebp+0x8]
 809c25a:  mov eax, DWORD PTR [edx+0x4]
 809c25d:  cmp eax, DWORD PTR [edx+0x8]
 809c260:  jae 809f85b
 809c266:  movzx ecx, BYTE PTR [eax]
 809c269:  add eax, 0x1
 809c26c:  mov ebx, DWORD PTR [ebp+0x8]
 809c26f:  mov DWORD PTR [ebp-0x2b8], ecx
 809c275:  mov DWORD PTR [ebx+0x4], eax
 809c278:  add DWORD PTR [ebp-0x21c], 0x1
 809c27f:  jmp 809aca9
 809c284:  mov edx, DWORD PTR [ebp-0x214]
 809c28a:  movzx eax, al
 809c28d:  mov BYTE PTR [edx+eax], 0x1
 809c291:  add DWORD PTR [ebp-0x220], 0x1
 809c298:  mov ecx, DWORD PTR [ebp-0x220]
 809c29e:  movzx eax, BYTE PTR [ecx]
 809c2a1:  jmp 809aa10
 809c2a6:  mov eax, DWORD PTR [ebp-0x2b0]
 809c2ac:  and eax, 0x8
 809c2af:  mov DWORD PTR [ebp-0x244], eax
 809c2b5:  jne 809a988
 809c2bb:  test DWORD PTR [ebp-0x2b0], 0x2100
 809c2c5:  je 809d164
 809c2cb:  mov esi, DWORD PTR [ebp-0x1c4]
 809c2d1:  test esi, esi
 809c2d3:  jne 809d56c
 809c2d9:  mov edx, DWORD PTR [ebp-0x2c0]
 809c2df:  mov ecx, DWORD PTR [ebp-0x2c0]
 809c2e5:  mov edx, DWORD PTR [edx]
 809c2e7:  add ecx, 0x4
 809c2ea:  mov DWORD PTR [ebp-0x2c0], ecx
 809c2f0:  mov DWORD PTR [ebp-0x284], edx
 809c2f6:  mov ecx, DWORD PTR [ebp-0x284]
 809c2fc:  test ecx, ecx
 809c2fe:  je 80997f0
 809c304:  mov DWORD PTR [esp], 0x64
 809c30b:  call 804d6f0
 809c310:  mov ecx, DWORD PTR [ebp-0x284]
 809c316:  test eax, eax
 809c318:  mov DWORD PTR [ebp-0x28c], eax
 809c31e:  mov DWORD PTR [ecx], eax
 809c320:  je 809d39f
 809c326:  mov edx, DWORD PTR [ebp-0x290]
 809c32c:  test edx, edx
 809c32e:  je 809c341
 809c330:  mov esi, DWORD PTR [ebp-0x290]
 809c336:  mov edx, DWORD PTR [esi]
 809c338:  cmp edx, 0x20
 809c33b:  jne 809a969
 809c341:  mov edx, DWORD PTR [ebp-0x290]
 809c347:  sub esp, 0x98
 809c34d:  lea eax, [esp+0x1f]
 809c351:  and eax, 0xf0
 809c354:  mov DWORD PTR [eax], 0x0
 809c35a:  mov DWORD PTR [eax+0x4], edx
 809c35d:  xor edx, edx
 809c35f:  mov DWORD PTR [ebp-0x290], eax
 809c365:  jmp 809a969
 809c36a:  mov DWORD PTR [esp], edx
 809c36d:  call 8068f50
 809c372:  mov DWORD PTR [ebp-0x200], eax
 809c378:  add eax, 0x1
 809c37b:  jne 809c0d8
 809c381:  mov edi, 0xffffffe8
 809c387:  mov esi, DWORD PTR [ebp-0x2e0]
 809c38d:  mov edi, DWORD PTR [esi+edi]
 809c390:  mov DWORD PTR [ebp-0x2a4], edi
 809c396:  mov eax, DWORD PTR [ebp-0x1cc]
 809c39c:  cmp DWORD PTR [ebp-0x21c], eax
 809c3a2:  je 80997f0
 809c3a8:  mov eax, DWORD PTR [ebp-0x244]
 809c3ae:  test eax, eax
 809c3b0:  jne 8099540
 809c3b6:  mov edx, DWORD PTR [ebp-0x28c]
 809c3bc:  mov BYTE PTR [edx], 0x0
 809c3bf:  mov eax, DWORD PTR [ebp-0x1b8]
 809c3c5:  add edx, 0x1
 809c3c8:  mov DWORD PTR [ebp-0x28c], edx
 809c3ce:  test eax, eax
 809c3d0:  je 809ba4b
 809c3d6:  mov ecx, DWORD PTR [ebp-0x284]
 809c3dc:  mov eax, DWORD PTR [ebp-0x28c]
 809c3e2:  mov edx, DWORD PTR [ecx]
 809c3e4:  sub eax, edx
 809c3e6:  cmp eax, DWORD PTR [ebp-0x218]
 809c3ec:  je 809ba4b
 809c3f2:  mov DWORD PTR [esp+0x4], eax
 809c3f6:  mov DWORD PTR [esp], edx
 809c3f9:  call 804db10
 809c3fe:  test eax, eax
 809c400:  je 809ba4b
 809c406:  mov ebx, DWORD PTR [ebp-0x284]
 809c40c:  mov DWORD PTR [ebx], eax
 809c40e:  jmp 809ba4b
 809c413:  sub esp, 0x110
 809c419:  lea ecx, [esp+0x1f]
 809c41d:  and ecx, 0xf0
 809c420:  mov DWORD PTR [ebp-0x214], ecx
 809c426:  mov DWORD PTR [ebp-0x20c], 0x100
 809c430:  jmp 809b7c6
 809c435:  mov esi, DWORD PTR [ebp-0x21c]
 809c43b:  mov eax, DWORD PTR [ebp-0x2b8]
 809c441:  mov DWORD PTR [ebp-0x1cc], esi
 809c447:  mov DWORD PTR [ebp-0x200], eax
 809c44d:  jmp 809b8b8
 809c452:  mov ebx, DWORD PTR [ebp-0x21c]
 809c458:  mov esi, DWORD PTR [ebp-0x2b8]
 809c45e:  mov BYTE PTR [ebp-0x2a0], 0x1
 809c465:  mov DWORD PTR [ebp-0x1cc], ebx
 809c46b:  mov ebx, DWORD PTR [ebp-0x210]
 809c471:  mov DWORD PTR [ebp-0x200], esi
 809c477:  jmp 809add5
 809c47c:  mov esi, DWORD PTR [ebp-0x1c4]
 809c482:  test esi, esi
 809c484:  jne 809d3de
 809c48a:  mov edx, DWORD PTR [ebp-0x2c0]
 809c490:  mov ecx, DWORD PTR [ebp-0x2c0]
 809c496:  mov edx, DWORD PTR [edx]
 809c498:  add ecx, 0x4
 809c49b:  mov DWORD PTR [ebp-0x2c0], ecx
 809c4a1:  mov DWORD PTR [ebp-0x288], edx
 809c4a7:  mov ebx, DWORD PTR [ebp-0x288]
 809c4ad:  test ebx, ebx
 809c4af:  jne 8099c32
 809c4b5:  jmp 80997f0
 809c4ba:  lea esi, [esi]
 809c4c0:  mov eax, DWORD PTR [ebp-0x1c4]
 809c4c6:  test eax, eax
 809c4c8:  jne 809d13e
 809c4ce:  mov edx, DWORD PTR [ebp-0x2c0]
 809c4d4:  mov ecx, DWORD PTR [ebp-0x2c0]
 809c4da:  mov edx, DWORD PTR [edx]
 809c4dc:  add ecx, 0x4
 809c4df:  mov DWORD PTR [ebp-0x2c0], ecx
 809c4e5:  mov DWORD PTR [ebp-0x288], edx
 809c4eb:  mov eax, DWORD PTR [ebp-0x288]
 809c4f1:  test eax, eax
 809c4f3:  jne 8099b13
 809c4f9:  jmp 80997f0
 809c4fe:  xchg ax, ax
 809c500:  mov edx, DWORD PTR [ebp-0x1c4]
 809c506:  test edx, edx
 809c508:  jne 809d096
 809c50e:  mov ecx, DWORD PTR [ebp-0x2c0]
 809c514:  mov edx, DWORD PTR [ecx]
 809c516:  add ecx, 0x4
 809c519:  mov DWORD PTR [ebp-0x2c0], ecx
 809c51f:  mov BYTE PTR [edx], al
 809c521:  jmp 8099fc0
 809c526:  mov eax, DWORD PTR [ebp-0x20c]
 809c52c:  test eax, eax
 809c52e:  jne 809c54d
 809c530:  sub esp, 0x110
 809c536:  lea eax, [esp+0x1f]
 809c53a:  and eax, 0xf0
 809c53d:  mov DWORD PTR [ebp-0x214], eax
 809c543:  mov DWORD PTR [ebp-0x20c], 0x100
 809c54d:  movzx edx, BYTE PTR [ebp-0x2b8]
 809c554:  mov ecx, DWORD PTR [ebp-0x214]
 809c55a:  mov BYTE PTR [ecx], dl
 809c55c:  mov eax, DWORD PTR [ebp-0x2b4]
 809c562:  test eax, eax
 809c564:  je 80997f0
 809c56a:  cmp DWORD PTR [ebp-0x2b8], 0xff
 809c571:  jne 809cc7f
 809c577:  mov eax, 0xffffffe8
 809c57c:  mov esi, DWORD PTR [ebp-0x2a4]
 809c582:  mov ebx, DWORD PTR [ebp-0x2e0]
 809c588:  mov DWORD PTR [ebx+eax], esi
 809c58b:  jmp 80997f0
 809c590:  mov eax, DWORD PTR [ebp-0x2b4]
 809c596:  cmp DWORD PTR [ebp-0x2b8], 0x2d
 809c59d:  sete BYTE PTR [ebp-0x29e]
 809c5a4:  test eax, eax
 809c5a6:  je 80997f0
 809c5ac:  mov edx, DWORD PTR [ebp+0x8]
 809c5af:  mov eax, DWORD PTR [edx+0x4]
 809c5b2:  cmp eax, DWORD PTR [edx+0x8]
 809c5b5:  jae 809f324
 809c5bb:  movzx ecx, BYTE PTR [eax]
 809c5be:  add eax, 0x1
 809c5c1:  mov ebx, DWORD PTR [ebp+0x8]
 809c5c4:  mov DWORD PTR [ebp-0x2b8], ecx
 809c5ca:  mov DWORD PTR [ebx+0x4], eax
 809c5cd:  xor eax, eax
 809c5cf:  add DWORD PTR [ebp-0x21c], 0x1
 809c5d6:  cmp DWORD PTR [ebp-0x2b4], 0x0
 809c5dd:  setg al
 809c5e0:  sub DWORD PTR [ebp-0x2b4], eax
 809c5e6:  jmp 809ace9
 809c5eb:  mov DWORD PTR [ebp-0x2b4], 0x7fffffff
 809c5f5:  jmp 809a9be
 809c5fa:  mov DWORD PTR [esp], ebx
 809c5fd:  call 8068f50
 809c602:  mov DWORD PTR [ebp-0x200], eax
 809c608:  add eax, 0x1
 809c60b:  jne 809ac79
 809c611:  mov edi, 0xffffffe8
 809c617:  mov ebx, DWORD PTR [ebp-0x2e0]
 809c61d:  mov DWORD PTR [ebp-0x200], 0xffffffff
 809c627:  mov edi, DWORD PTR [ebx+edi]
 809c62a:  mov DWORD PTR [ebp-0x2a4], edi
 809c630:  mov eax, DWORD PTR [ebp-0x2cc]
 809c636:  test eax, eax
 809c638:  je 809ba4b
 809c63e:  mov ebx, DWORD PTR [ebp-0x284]
 809c644:  mov eax, DWORD PTR [ebp-0x28c]
 809c64a:  mov edx, DWORD PTR [ebx]
 809c64c:  sub eax, edx
 809c64e:  cmp DWORD PTR [ebp-0x218], eax
 809c654:  je 809ba4b
 809c65a:  mov DWORD PTR [esp+0x4], eax
 809c65e:  mov DWORD PTR [esp], edx
 809c661:  call 804db10
 809c666:  test eax, eax
 809c668:  je 809ba4b
 809c66e:  mov DWORD PTR [ebx], eax
 809c670:  jmp 809ba4b
 809c675:  lea ebx, [eax+0x1]
 809c678:  mov eax, DWORD PTR [ebp-0x2ac]
 809c67e:  mov edx, DWORD PTR [eax+0x34]
 809c681:  mov esi, DWORD PTR [ebp-0x200]
 809c687:  lea ecx, [ebx-0x1]
 809c68a:  mov DWORD PTR [ebp-0x1cc], ecx
 809c690:  test BYTE PTR [edx+esi*2+0x1], 0x20
 809c695:  jne 809dbda
 809c69b:  mov eax, DWORD PTR [ebp-0x2b4]
 809c6a1:  test eax, eax
 809c6a3:  jle 809c6b2
 809c6a5:  sub DWORD PTR [ebp-0x2b4], 0x1
 809c6ac:  je 809d89d
 809c6b2:  cmp DWORD PTR [ebp-0x200], 0xff
 809c6b9:  je 809d646
 809c6bf:  mov ecx, DWORD PTR [ebp+0x8]
 809c6c2:  mov eax, DWORD PTR [ecx+0x4]
 809c6c5:  cmp DWORD PTR [ecx+0x8], eax
 809c6c8:  jbe 809f90a
 809c6ce:  movzx esi, BYTE PTR [eax]
 809c6d1:  add eax, 0x1
 809c6d4:  mov DWORD PTR [ecx+0x4], eax
 809c6d7:  mov DWORD PTR [ebp-0x200], esi
 809c6dd:  add ebx, 0x1
 809c6e0:  jmp 809c681
 809c6e2:  test BYTE PTR [ebp-0x2b0], 0x4
 809c6e9:  je 809d1ed
 809c6ef:  mov eax, DWORD PTR [ebp-0x1c4]
 809c6f5:  test eax, eax
 809c6f7:  jne 809d4c2
 809c6fd:  mov esi, DWORD PTR [ebp-0x2c0]
 809c703:  mov eax, DWORD PTR [esi]
 809c705:  add esi, 0x4
 809c708:  mov DWORD PTR [ebp-0x2c0], esi
 809c70e:  movzx ebx, WORD PTR [ebp-0x21c]
 809c715:  xor edi, edi
 809c717:  mov esi, DWORD PTR [ebp-0x21c]
 809c71d:  mov WORD PTR [eax], bx
 809c720:  mov eax, DWORD PTR [ebp-0x2b8]
 809c726:  mov DWORD PTR [ebp-0x1cc], esi
 809c72c:  mov DWORD PTR [ebp-0x200], eax
 809c732:  jmp 8099542
 809c737:  lea ebx, [eax+0x1]
 809c73a:  sub DWORD PTR [ebp-0x2b4], 0x1
 809c741:  mov eax, DWORD PTR [ebp-0x2b4]
 809c747:  lea esi, [ebx-0x1]
 809c74a:  mov DWORD PTR [ebp-0x1cc], esi
 809c750:  test eax, eax
 809c752:  jle 8099540
 809c758:  cmp DWORD PTR [ebp-0x200], 0xff
 809c75f:  je 809daaf
 809c765:  mov ecx, DWORD PTR [ebp+0x8]
 809c768:  mov eax, DWORD PTR [ecx+0x4]
 809c76b:  cmp eax, DWORD PTR [ecx+0x8]
 809c76e:  jae 809f710
 809c774:  movzx esi, BYTE PTR [eax]
 809c777:  add eax, 0x1
 809c77a:  mov DWORD PTR [ecx+0x4], eax
 809c77d:  mov DWORD PTR [ebp-0x200], esi
 809c783:  add ebx, 0x1
 809c786:  jmp 809c73a
 809c788:  cmp DWORD PTR [ebp-0x29c], 0x10
 809c78f:  jne 809a065
 809c795:  jmp 809c21e
 809c79a:  lea esi, [esi]
 809c7a0:  cmp DWORD PTR [ebp-0x1c4], 0x1
 809c7a7:  mov edx, DWORD PTR [ebp+0x10]
 809c7aa:  je 809c7b9
 809c7ac:  mov ecx, DWORD PTR [ebp-0x1c4]
 809c7b2:  mov esi, DWORD PTR [ebp+0x10]
 809c7b5:  lea edx, [esi+ecx*4-0x4]
 809c7b9:  mov edx, DWORD PTR [edx]
 809c7bb:  jmp 8099fb5
 809c7c0:  cmp DWORD PTR [ebp-0x1c4], 0x1
 809c7c7:  mov edx, DWORD PTR [ebp+0x10]
 809c7ca:  je 809c7d9
 809c7cc:  mov esi, DWORD PTR [ebp-0x1c4]
 809c7d2:  mov ecx, DWORD PTR [ebp+0x10]
 809c7d5:  lea edx, [ecx+esi*4-0x4]
 809c7d9:  mov edx, DWORD PTR [edx]
 809c7db:  jmp 809a5cd
 809c7e0:  cmp DWORD PTR [ebp-0x1c4], 0x1
 809c7e7:  mov edx, DWORD PTR [ebp+0x10]
 809c7ea:  je 809c7f9
 809c7ec:  mov esi, DWORD PTR [ebp-0x1c4]
 809c7f2:  mov ecx, DWORD PTR [ebp+0x10]
 809c7f5:  lea edx, [ecx+esi*4-0x4]
 809c7f9:  mov edx, DWORD PTR [edx]
 809c7fb:  jmp 809b64e
 809c800:  mov eax, DWORD PTR [ebp-0x20c]
 809c806:  test eax, eax
 809c808:  je 809d9d6
 809c80e:  movzx ebx, BYTE PTR [ebp-0x2b8]
 809c815:  mov esi, DWORD PTR [ebp-0x214]
 809c81b:  mov BYTE PTR [esi], bl
 809c81d:  mov eax, DWORD PTR [ebp-0x2b4]
 809c823:  test eax, eax
 809c825:  je 80997f0
 809c82b:  cmp DWORD PTR [ebp-0x2b8], 0xff
 809c832:  je 809d404
 809c838:  mov ebx, DWORD PTR [ebp+0x8]
 809c83b:  mov eax, DWORD PTR [ebx+0x4]
 809c83e:  cmp eax, DWORD PTR [ebx+0x8]
 809c841:  jae 809f7d2
 809c847:  mov esi, DWORD PTR [ebp+0x8]
 809c84a:  movzx ecx, BYTE PTR [eax]
 809c84d:  add eax, 0x1
 809c850:  mov DWORD PTR [esi+0x4], eax
 809c853:  mov ebx, DWORD PTR [ebp-0x2ac]
 809c859:  movzx edx, cl
 809c85c:  mov eax, DWORD PTR [ebx+0x38]
 809c85f:  cmp DWORD PTR [eax+edx*4], 0x6e
 809c863:  jne 80997f0
 809c869:  xor eax, eax
 809c86b:  mov ebx, DWORD PTR [ebp-0x214]
 809c871:  cmp DWORD PTR [ebp-0x2b4], 0x0
 809c878:  setg al
 809c87b:  sub DWORD PTR [ebp-0x2b4], eax
 809c881:  cmp DWORD PTR [ebp-0x20c], 0x1
 809c888:  je 809d978
 809c88e:  mov BYTE PTR [ebx+0x1], cl
 809c891:  mov edi, DWORD PTR [ebp-0x2b4]
 809c897:  test edi, edi
 809c899:  je 80997f0
 809c89f:  mov edx, DWORD PTR [ebp+0x8]
 809c8a2:  mov eax, DWORD PTR [edx+0x4]
 809c8a5:  cmp eax, DWORD PTR [edx+0x8]
 809c8a8:  jae 809f7ad
 809c8ae:  movzx ecx, BYTE PTR [eax]
 809c8b1:  add eax, 0x1
 809c8b4:  mov esi, DWORD PTR [ebp+0x8]
 809c8b7:  mov DWORD PTR [ebp-0x200], ecx
 809c8bd:  mov DWORD PTR [esi+0x4], eax
 809c8c0:  mov ecx, DWORD PTR [ebp-0x2ac]
 809c8c6:  movzx edx, BYTE PTR [ebp-0x200]
 809c8cd:  mov eax, DWORD PTR [ecx+0x38]
 809c8d0:  cmp DWORD PTR [eax+edx*4], 0x66
 809c8d4:  jne 80997f0
 809c8da:  xor eax, eax
 809c8dc:  cmp DWORD PTR [ebp-0x2b4], 0x0
 809c8e3:  mov DWORD PTR [ebp-0x210], ebx
 809c8e9:  setg al
 809c8ec:  sub DWORD PTR [ebp-0x2b4], eax
 809c8f2:  cmp DWORD PTR [ebp-0x20c], 0x2
 809c8f9:  je 809d94a
 809c8ff:  movzx eax, BYTE PTR [ebp-0x200]
 809c906:  mov edx, DWORD PTR [ebp-0x210]
 809c90c:  mov ebx, DWORD PTR [ebp-0x21c]
 809c912:  mov BYTE PTR [edx+0x2], al
 809c915:  mov esi, DWORD PTR [ebp-0x2b4]
 809c91b:  add ebx, 0x2
 809c91e:  mov DWORD PTR [ebp-0x1cc], ebx
 809c924:  mov DWORD PTR [ebp-0x204], 0x3
 809c92e:  test esi, esi
 809c930:  je 809c9ae
 809c932:  mov ecx, DWORD PTR [ebp+0x8]
 809c935:  mov eax, DWORD PTR [ecx+0x4]
 809c938:  cmp eax, DWORD PTR [ecx+0x8]
 809c93b:  jae 809fcb5
 809c941:  mov ecx, DWORD PTR [ebp-0x21c]
 809c947:  movzx esi, BYTE PTR [eax]
 809c94a:  add eax, 0x1
 809c94d:  mov edx, DWORD PTR [ebp+0x8]
 809c950:  add ecx, 0x3
 809c953:  mov DWORD PTR [ebp-0x200], esi
 809c959:  mov DWORD PTR [edx+0x4], eax
 809c95c:  mov DWORD PTR [ebp-0x1cc], ecx
 809c962:  mov ecx, DWORD PTR [ebp-0x2ac]
 809c968:  movzx edx, BYTE PTR [ebp-0x200]
 809c96f:  mov eax, DWORD PTR [ecx+0x38]
 809c972:  cmp DWORD PTR [eax+edx*4], 0x69
 809c976:  je 809f9a0
 809c97c:  cmp DWORD PTR [ebp-0x200], 0xff
 809c983:  mov DWORD PTR [ebp-0x204], 0x3
 809c98d:  je 809c9ae
 809c98f:  mov esi, DWORD PTR [ebp+0x8]
 809c992:  mov DWORD PTR [esp+0x4], edx
 809c996:  mov DWORD PTR [esp], esi
 809c999:  call 8068600
 809c99e:  mov DWORD PTR [ebp-0x1cc], ebx
 809c9a4:  mov DWORD PTR [ebp-0x204], 0x3
 809c9ae:  mov esi, DWORD PTR [ebp-0x210]
 809c9b4:  mov eax, DWORD PTR [ebp-0x20c]
 809c9ba:  cmp DWORD PTR [ebp-0x204], eax
 809c9c0:  mov DWORD PTR [ebp-0x214], esi
 809c9c6:  je 809d021
 809c9cc:  mov edx, DWORD PTR [ebp-0x214]
 809c9d2:  mov eax, DWORD PTR [ebp-0x204]
 809c9d8:  mov BYTE PTR [edx+eax], 0x0
 809c9dc:  test BYTE PTR [ebp-0x2b0], 0x2
 809c9e3:  jne 809cafa
 809c9e9:  test BYTE PTR [ebp-0x2b0], 0x3
 809c9f0:  je 809ca91
 809c9f6:  mov eax, DWORD PTR [ebp-0x2b0]
 809c9fc:  mov ebx, DWORD PTR [ebp-0x214]
 809ca02:  and eax, 0x80
 809ca07:  mov DWORD PTR [esp+0x8], eax
 809ca0b:  lea eax, [ebp-0x14]
 809ca0e:  mov DWORD PTR [esp+0x4], eax
 809ca12:  mov DWORD PTR [esp], ebx
 809ca15:  call 80a1b80
 809ca1a:  mov edx, DWORD PTR [ebp-0x2b0]
 809ca20:  and edx, 0x8
 809ca23:  jne 809ca5c
 809ca25:  cmp DWORD PTR [ebp-0x14], ebx
 809ca28:  je 80997d8
 809ca2e:  mov eax, DWORD PTR [ebp-0x1c4]
 809ca34:  test eax, eax
 809ca36:  jne 809dcb0
 809ca3c:  mov esi, DWORD PTR [ebp-0x2c0]
 809ca42:  mov eax, DWORD PTR [esi]
 809ca44:  add esi, 0x4
 809ca47:  mov DWORD PTR [ebp-0x2c0], esi
 809ca4d:  cmp BYTE PTR [ebp-0x29e], 0x0
 809ca54:  je 809ca58
 809ca56:  fchs
 809ca58:  fstp QWORD PTR [eax]
 809ca5a:  jmp 809ca6c
 809ca5c:  fstp st(0)
 809ca5e:  jmp 809ca6c
 809ca60:  fstp st(0)
 809ca62:  lea esi, [esi]
 809ca68:  jmp 809ca6c
 809ca6a:  fstp st(0)
 809ca6c:  mov eax, DWORD PTR [ebp-0x214]
 809ca72:  cmp DWORD PTR [ebp-0x14], eax
 809ca75:  je 80997f0
 809ca7b:  test edx, edx
 809ca7d:  jne 8099540
 809ca83:  add DWORD PTR [ebp-0x2bc], 0x1
 809ca8a:  xor edi, edi
 809ca8c:  jmp 8099542
 809ca91:  mov eax, DWORD PTR [ebp-0x2b0]
 809ca97:  mov esi, DWORD PTR [ebp-0x214]
 809ca9d:  and eax, 0x80
 809caa2:  mov DWORD PTR [esp+0x8], eax
 809caa6:  lea eax, [ebp-0x14]
 809caa9:  mov DWORD PTR [esp+0x4], eax
 809caad:  mov DWORD PTR [esp], esi
 809cab0:  call 80a1b00
 809cab5:  mov edx, DWORD PTR [ebp-0x2b0]
 809cabb:  and edx, 0x8
 809cabe:  jne 809ca60
 809cac0:  cmp DWORD PTR [ebp-0x14], esi
 809cac3:  je 80997e2
 809cac9:  mov eax, DWORD PTR [ebp-0x1c4]
 809cacf:  test eax, eax
 809cad1:  jne 809dc90
 809cad7:  mov ecx, DWORD PTR [ebp-0x2c0]
 809cadd:  mov eax, DWORD PTR [ecx]
 809cadf:  add ecx, 0x4
 809cae2:  mov DWORD PTR [ebp-0x2c0], ecx
 809cae8:  cmp BYTE PTR [ebp-0x29e], 0x0
 809caef:  je 809caf3
 809caf1:  fchs
 809caf3:  fstp DWORD PTR [eax]
 809caf5:  jmp 809ca6c
 809cafa:  mov eax, DWORD PTR [ebp-0x2b0]
 809cb00:  mov DWORD PTR [esp], edx
 809cb03:  and eax, 0x80
 809cb08:  mov DWORD PTR [esp+0x8], eax
 809cb0c:  lea eax, [ebp-0x14]
 809cb0f:  mov DWORD PTR [esp+0x4], eax
 809cb13:  call 80a1c00
 809cb18:  mov edx, DWORD PTR [ebp-0x2b0]
 809cb1e:  and edx, 0x8
 809cb21:  jne 809ca6a
 809cb27:  mov ecx, DWORD PTR [ebp-0x214]
 809cb2d:  cmp DWORD PTR [ebp-0x14], ecx
 809cb30:  je 80997ea
 809cb36:  mov ecx, DWORD PTR [ebp-0x1c4]
 809cb3c:  test ecx, ecx
 809cb3e:  jne 809dcd0
 809cb44:  mov ebx, DWORD PTR [ebp-0x2c0]
 809cb4a:  mov eax, DWORD PTR [ebx]
 809cb4c:  add ebx, 0x4
 809cb4f:  mov DWORD PTR [ebp-0x2c0], ebx
 809cb55:  cmp BYTE PTR [ebp-0x29e], 0x0
 809cb5c:  je 809cb60
 809cb5e:  fchs
 809cb60:  fstp TBYTE PTR [eax]
 809cb62:  jmp 809ca6c
 809cb67:  mov ebx, DWORD PTR [ebp+0x8]
 809cb6a:  mov DWORD PTR [esp], ebx
 809cb6d:  call 8068f50
 809cb72:  cmp eax, 0xff
 809cb75:  mov ebx, eax
 809cb77:  jne 809a626
 809cb7d:  mov edi, 0xffffffe8
 809cb83:  mov esi, DWORD PTR [ebp-0x2e0]
 809cb89:  jmp 809b257
 809cb8e:  mov DWORD PTR [esp], ebx
 809cb91:  call 8068f50
 809cb96:  mov DWORD PTR [ebp-0x200], eax
 809cb9c:  add eax, 0x1
 809cb9f:  je 809cb7d
 809cba1:  jmp 8099d3c
 809cba6:  xchg ax, ax
 809cba8:  mov DWORD PTR [esp], edx
 809cbab:  call 8068f50
 809cbb0:  mov DWORD PTR [ebp-0x200], eax
 809cbb6:  add eax, 0x1
 809cbb9:  jne 809a68f
 809cbbf:  mov edi, 0xffffffe8
 809cbc5:  mov edx, DWORD PTR [ebp-0x2e0]
 809cbcb:  jmp 809b27f
 809cbd0:  mov ebx, DWORD PTR [ebp+0x8]
 809cbd3:  mov DWORD PTR [esp], ebx
 809cbd6:  call 8068f50
 809cbdb:  mov DWORD PTR [ebp-0x200], eax
 809cbe1:  add eax, 0x1
 809cbe4:  je 809cbbf
 809cbe6:  jmp 8099bfd
 809cbeb:  nop
 809cbec:  lea esi, [esi]
 809cbf0:  mov eax, DWORD PTR [ebp-0x20c]
 809cbf6:  test eax, eax
 809cbf8:  je 809da6d
 809cbfe:  mov ecx, DWORD PTR [ebp-0x214]
 809cc04:  mov BYTE PTR [ecx], 0x30
 809cc07:  mov ebx, DWORD PTR [ebp+0x8]
 809cc0a:  mov eax, DWORD PTR [ebx+0x4]
 809cc0d:  cmp eax, DWORD PTR [ebx+0x8]
 809cc10:  jae 809f695
 809cc16:  movzx esi, BYTE PTR [eax]
 809cc19:  add eax, 0x1
 809cc1c:  mov edx, DWORD PTR [ebp+0x8]
 809cc1f:  mov DWORD PTR [ebp-0x2b8], esi
 809cc25:  mov DWORD PTR [edx+0x4], eax
 809cc28:  add DWORD PTR [ebp-0x21c], 0x1
 809cc2f:  xor eax, eax
 809cc31:  cmp DWORD PTR [ebp-0x2b4], 0x0
 809cc38:  setg al
 809cc3b:  sub DWORD PTR [ebp-0x2b4], eax
 809cc41:  je 809cc5d
 809cc43:  mov ebx, DWORD PTR [ebp-0x2ac]
 809cc49:  movzx edx, BYTE PTR [ebp-0x2b8]
 809cc50:  mov eax, DWORD PTR [ebx+0x38]
 809cc53:  cmp DWORD PTR [eax+edx*4], 0x78
 809cc57:  je 809dafb
 809cc5d:  mov edx, DWORD PTR [ebp-0x214]
 809cc63:  mov BYTE PTR [ebp-0x1bd], 0x65
 809cc6a:  mov DWORD PTR [ebp-0x204], 0x1
 809cc74:  mov DWORD PTR [ebp-0x210], edx
 809cc7a:  jmp 809ad42
 809cc7f:  mov edx, DWORD PTR [ebp+0x8]
 809cc82:  mov eax, DWORD PTR [edx+0x4]
 809cc85:  cmp eax, DWORD PTR [edx+0x8]
 809cc88:  jae 809fdf5
 809cc8e:  mov ebx, DWORD PTR [ebp+0x8]
 809cc91:  movzx ecx, BYTE PTR [eax]
 809cc94:  add eax, 0x1
 809cc97:  mov DWORD PTR [ebx+0x4], eax
 809cc9a:  mov esi, DWORD PTR [ebp-0x2ac]
 809cca0:  movzx edx, cl
 809cca3:  mov eax, DWORD PTR [esi+0x38]
 809cca6:  cmp DWORD PTR [eax+edx*4], 0x61
 809ccaa:  jne 80997f0
 809ccb0:  xor eax, eax
 809ccb2:  mov ebx, DWORD PTR [ebp-0x214]
 809ccb8:  cmp DWORD PTR [ebp-0x2b4], 0x0
 809ccbf:  setg al
 809ccc2:  sub DWORD PTR [ebp-0x2b4], eax
 809ccc8:  cmp DWORD PTR [ebp-0x20c], 0x1
 809cccf:  je 809d5f7
 809ccd5:  mov BYTE PTR [ebx+0x1], cl
 809ccd8:  mov eax, DWORD PTR [ebp-0x2b4]
 809ccde:  test eax, eax
 809cce0:  je 80997f0
 809cce6:  mov ecx, DWORD PTR [ebp+0x8]
 809cce9:  mov eax, DWORD PTR [ecx+0x4]
 809ccec:  cmp eax, DWORD PTR [ecx+0x8]
 809ccef:  jae 809fdc5
 809ccf5:  movzx esi, BYTE PTR [eax]
 809ccf8:  add eax, 0x1
 809ccfb:  mov edx, DWORD PTR [ebp+0x8]
 809ccfe:  mov DWORD PTR [ebp-0x200], esi
 809cd04:  mov DWORD PTR [edx+0x4], eax
 809cd07:  mov ecx, DWORD PTR [ebp-0x2ac]
 809cd0d:  movzx edx, BYTE PTR [ebp-0x200]
 809cd14:  mov eax, DWORD PTR [ecx+0x38]
 809cd17:  cmp DWORD PTR [eax+edx*4], 0x6e
 809cd1b:  jne 80997f0
 809cd21:  cmp DWORD PTR [ebp-0x20c], 0x2
 809cd28:  mov DWORD PTR [ebp-0x210], ebx
 809cd2e:  je 809d5c9
 809cd34:  mov esi, DWORD PTR [ebp-0x21c]
 809cd3a:  movzx eax, BYTE PTR [ebp-0x200]
 809cd41:  mov edx, DWORD PTR [ebp-0x210]
 809cd47:  add esi, 0x2
 809cd4a:  mov DWORD PTR [ebp-0x1cc], esi
 809cd50:  mov BYTE PTR [edx+0x2], al
 809cd53:  mov DWORD PTR [ebp-0x204], 0x3
 809cd5d:  jmp 809c9ae
 809cd62:  mov esi, DWORD PTR [ebp-0x21c]
 809cd68:  mov ebx, DWORD PTR [ebp-0x2b4]
 809cd6e:  add esi, 0x2
 809cd71:  sub ebx, 0x1
 809cd74:  jmp 809cd9a
 809cd76:  mov edx, DWORD PTR [ebp+0x8]
 809cd79:  mov eax, DWORD PTR [edx+0x4]
 809cd7c:  cmp eax, DWORD PTR [edx+0x8]
 809cd7f:  jae 809f5b3
 809cd85:  movzx ecx, BYTE PTR [eax]
 809cd88:  add eax, 0x1
 809cd8b:  mov DWORD PTR [edx+0x4], eax
 809cd8e:  mov DWORD PTR [ebp-0x200], ecx
 809cd94:  add esi, 0x1
 809cd97:  sub ebx, 0x1
 809cd9a:  lea ecx, [esi-0x1]
 809cd9d:  mov edx, DWORD PTR [ebp-0x200]
 809cda3:  mov DWORD PTR [ebp-0x1cc], ecx
 809cda9:  mov ecx, DWORD PTR [ebp-0x214]
 809cdaf:  movzx eax, BYTE PTR [ebp-0x29d]
 809cdb6:  cmp BYTE PTR [ecx+edx], al
 809cdb9:  je 809d804
 809cdbf:  test ebx, ebx
 809cdc1:  jle 809db98
 809cdc7:  add edx, 0x1
 809cdca:  je 809bfa3
 809cdd0:  jmp 809cd76
 809cdd2:  mov eax, DWORD PTR [ebp-0x1bc]
 809cdd8:  test eax, eax
 809cdda:  lea esi, [esi]
 809cde0:  je 809d23d
 809cde6:  mov edi, DWORD PTR [ebp-0x21c]
 809cdec:  xor ebx, ebx
 809cdee:  add edi, 0x2
 809cdf1:  jmp 809ce6e
 809cdf3:  mov ebx, DWORD PTR [ebp-0x284]
 809cdf9:  mov esi, DWORD PTR [ebp-0x218]
 809cdff:  add DWORD PTR [ebp-0x288], 0x4
 809ce06:  mov edx, DWORD PTR [ebx]
 809ce08:  shl esi, 0x2
 809ce0b:  mov ebx, DWORD PTR [ebp-0x218]
 809ce11:  lea eax, [edx+esi]
 809ce14:  cmp DWORD PTR [ebp-0x288], eax
 809ce1a:  je 809e7ce
 809ce20:  sub DWORD PTR [ebp-0x2b4], 0x1
 809ce27:  mov esi, DWORD PTR [ebp-0x2b4]
 809ce2d:  test esi, esi
 809ce2f:  jle 809db9e
 809ce35:  mov DWORD PTR [ebp-0x218], ebx
 809ce3b:  xor ebx, ebx
 809ce3d:  cmp DWORD PTR [ebp-0x200], 0xff
 809ce44:  je 809bfa5
 809ce4a:  mov edx, DWORD PTR [ebp+0x8]
 809ce4d:  mov eax, DWORD PTR [edx+0x4]
 809ce50:  cmp eax, DWORD PTR [edx+0x8]
 809ce53:  jae 809f741
 809ce59:  movzx ecx, BYTE PTR [eax]
 809ce5c:  add eax, 0x1
 809ce5f:  mov esi, DWORD PTR [ebp+0x8]
 809ce62:  mov DWORD PTR [ebp-0x200], ecx
 809ce68:  mov DWORD PTR [esi+0x4], eax
 809ce6b:  add edi, 0x1
 809ce6e:  mov eax, DWORD PTR [ebp-0x214]
 809ce74:  lea edx, [edi-0x1]
 809ce77:  mov esi, DWORD PTR [ebp-0x200]
 809ce7d:  movzx ecx, BYTE PTR [ebp-0x29d]
 809ce84:  mov DWORD PTR [ebp-0x1cc], edx
 809ce8a:  cmp BYTE PTR [eax+esi], cl
 809ce8d:  je 809d806
 809ce93:  movzx ecx, BYTE PTR [ebp-0x200]
 809ce9a:  lea eax, [ebp-0x64]
 809ce9d:  mov edx, DWORD PTR [ebp-0x288]
 809cea3:  lea esi, [ebp-0x44]
 809cea6:  mov DWORD PTR [esp+0xc], esi
 809ceaa:  mov DWORD PTR [esp+0x8], 0x1
 809ceb2:  mov BYTE PTR [ebp-0x64], cl
 809ceb5:  mov DWORD PTR [esp+0x4], eax
 809ceb9:  mov DWORD PTR [esp], edx
 809cebc:  call 80a0810
 809cec1:  cmp eax, 0xfe
 809cec4:  jne 809cdf3
 809ceca:  mov eax, 0xffffffd8
 809cecf:  add ebx, 0x1
 809ced2:  mov ecx, DWORD PTR [ebp-0x2e0]
 809ced8:  mov eax, DWORD PTR [ecx+eax]
 809cedb:  mov eax, DWORD PTR [eax]
 809cedd:  cmp ebx, DWORD PTR [eax+0x58]
 809cee0:  jb 809ce3d
 809cee6:  mov DWORD PTR [esp+0xc], 0x80c682c
 809ceee:  mov DWORD PTR [esp+0x8], 0x9bf
 809cef6:  mov DWORD PTR [esp+0x4], 0x80c6822
 809cefe:  mov DWORD PTR [esp], 0x80c6844
 809cf05:  call 8051490
 809cf0a:  lea esi, [esi]
 809cf10:  mov eax, DWORD PTR [ebp-0x218]
 809cf16:  cmp DWORD PTR [ebp-0x2b4], eax
 809cf1c:  jge 809cf27
 809cf1e:  mov eax, DWORD PTR [ebp-0x2b4]
 809cf24:  sub eax, 0x1
 809cf27:  add eax, DWORD PTR [ebp-0x218]
 809cf2d:  mov DWORD PTR [esp], edx
 809cf30:  mov DWORD PTR [ebp-0x1f4], eax
 809cf36:  shl eax, 0x2
 809cf39:  mov DWORD PTR [esp+0x4], eax
 809cf3d:  call 804db10
 809cf42:  test eax, eax
 809cf44:  je 809f95d
 809cf4a:  mov edx, DWORD PTR [ebp-0x284]
 809cf50:  mov DWORD PTR [edx], eax
 809cf52:  add eax, ebx
 809cf54:  mov DWORD PTR [ebp-0x288], eax
 809cf5a:  jmp 8099cf0
 809cf5f:  lea ebx, [eax+0x1]
 809cf62:  mov edx, DWORD PTR [ebp-0x28c]
 809cf68:  lea esi, [ebx-0x1]
 809cf6b:  movzx eax, BYTE PTR [ebp-0x200]
 809cf72:  mov DWORD PTR [ebp-0x1cc], esi
 809cf78:  mov BYTE PTR [edx], al
 809cf7a:  add edx, 0x1
 809cf7d:  sub DWORD PTR [ebp-0x2b4], 0x1
 809cf84:  mov eax, DWORD PTR [ebp-0x2b4]
 809cf8a:  mov DWORD PTR [ebp-0x28c], edx
 809cf90:  test eax, eax
 809cf92:  jle 809ba4b
 809cf98:  cmp DWORD PTR [ebp-0x200], 0xff
 809cf9f:  je 809d7e0
 809cfa5:  mov ecx, DWORD PTR [ebp+0x8]
 809cfa8:  mov eax, DWORD PTR [ecx+0x4]
 809cfab:  cmp eax, DWORD PTR [ecx+0x8]
 809cfae:  jae 809fcf6
 809cfb4:  movzx esi, BYTE PTR [eax]
 809cfb7:  add eax, 0x1
 809cfba:  mov DWORD PTR [ecx+0x4], eax
 809cfbd:  mov DWORD PTR [ebp-0x200], esi
 809cfc3:  add ebx, 0x1
 809cfc6:  jmp 809cf62
 809cfc8:  mov edi, 0xffffffe8
 809cfce:  mov edx, DWORD PTR [ebp-0x2a4]
 809cfd4:  mov eax, DWORD PTR [ebp-0x2e0]
 809cfda:  mov DWORD PTR [ebp-0x210], ebx
 809cfe0:  mov DWORD PTR [eax+edi], edx
 809cfe3:  test DWORD PTR [ebp-0x2b0], 0x400
 809cfed:  jne 809ddec
 809cff3:  mov edi, DWORD PTR [ebp-0x204]
 809cff9:  test edi, edi
 809cffb:  je 80997f0
 809d001:  mov esi, DWORD PTR [ebp-0x2c4]
 809d007:  test esi, esi
 809d009:  je 809c9ae
 809d00f:  cmp DWORD PTR [ebp-0x204], 0x2
 809d016:  jne 809c9ae
 809d01c:  jmp 80997f0
 809d021:  mov edx, DWORD PTR [ebp-0x204]
 809d027:  add edx, edx
 809d029:  cmp edx, 0x100
 809d02f:  mov DWORD PTR [ebp-0x20c], edx
 809d035:  jae 809d041
 809d037:  mov DWORD PTR [ebp-0x20c], 0x100
 809d041:  mov eax, DWORD PTR [ebp-0x20c]
 809d047:  mov ebx, DWORD PTR [ebp-0x210]
 809d04d:  add eax, 0x12
 809d050:  and eax, 0xfc
 809d053:  sub esp, eax
 809d055:  lea ecx, [esp+0x1f]
 809d059:  and ecx, 0xf0
 809d05c:  test ebx, ebx
 809d05e:  mov DWORD PTR [ebp-0x214], ecx
 809d064:  je 809c9cc
 809d06a:  mov ebx, DWORD PTR [ebp-0x204]
 809d070:  mov esi, DWORD PTR [ebp-0x210]
 809d076:  mov DWORD PTR [esp], ecx
 809d079:  mov DWORD PTR [esp+0x8], ebx
 809d07d:  mov DWORD PTR [esp+0x4], esi
 809d081:  call 804efc0
 809d086:  jmp 809c9cc
 809d08b:  mov DWORD PTR [ebp-0x210], ebx
 809d091:  jmp 809cfe3
 809d096:  cmp DWORD PTR [ebp-0x1c4], 0x1
 809d09d:  mov edx, DWORD PTR [ebp+0x10]
 809d0a0:  je 809d0af
 809d0a2:  mov esi, DWORD PTR [ebp-0x1c4]
 809d0a8:  mov ecx, DWORD PTR [ebp+0x10]
 809d0ab:  lea edx, [ecx+esi*4-0x4]
 809d0af:  mov edx, DWORD PTR [edx]
 809d0b1:  mov BYTE PTR [edx], al
 809d0b3:  jmp 8099fc0
 809d0b8:  cmp DWORD PTR [ebp-0x1c4], 0x1
 809d0bf:  mov eax, DWORD PTR [ebp+0x10]
 809d0c2:  je 809d0d1
 809d0c4:  mov ecx, DWORD PTR [ebp-0x1c4]
 809d0ca:  mov ebx, DWORD PTR [ebp+0x10]
 809d0cd:  lea eax, [ebx+ecx*4-0x4]
 809d0d1:  mov eax, DWORD PTR [eax]
 809d0d3:  mov DWORD PTR [ebp-0x284], eax
 809d0d9:  jmp 809a78b
 809d0de:  mov edi, DWORD PTR [ebp-0x1c4]
 809d0e4:  test edi, edi
 809d0e6:  jne 809d828
 809d0ec:  mov esi, DWORD PTR [ebp-0x2c0]
 809d0f2:  mov eax, DWORD PTR [ebp-0x2c0]
 809d0f8:  mov esi, DWORD PTR [esi]
 809d0fa:  add eax, 0x4
 809d0fd:  mov DWORD PTR [ebp-0x2c0], eax
 809d103:  mov DWORD PTR [ebp-0x28c], esi
 809d109:  mov esi, DWORD PTR [ebp-0x28c]
 809d10f:  test esi, esi
 809d111:  jne 809b046
 809d117:  jmp 80997f0
 809d11c:  lea esi, [esi]
 809d120:  mov ecx, DWORD PTR [ebp+0x8]
 809d123:  movzx eax, dl
 809d126:  sub DWORD PTR [ebp-0x1cc], 0x1
 809d12d:  mov DWORD PTR [esp+0x4], eax
 809d131:  mov DWORD PTR [esp], ecx
 809d134:  call 8068600
 809d139:  jmp 809b9e8
 809d13e:  cmp DWORD PTR [ebp-0x1c4], 0x1
 809d145:  mov eax, DWORD PTR [ebp+0x10]
 809d148:  je 809d157
 809d14a:  mov ebx, DWORD PTR [ebp-0x1c4]
 809d150:  mov esi, DWORD PTR [ebp+0x10]
 809d153:  lea eax, [esi+ebx*4-0x4]
 809d157:  mov eax, DWORD PTR [eax]
 809d159:  mov DWORD PTR [ebp-0x288], eax
 809d15f:  jmp 809c4eb
 809d164:  mov eax, DWORD PTR [ebp-0x1c4]
 809d16a:  test eax, eax
 809d16c:  jne 809d620
 809d172:  mov eax, DWORD PTR [ebp-0x2c0]
 809d178:  mov edx, DWORD PTR [ebp-0x2c0]
 809d17e:  mov eax, DWORD PTR [eax]
 809d180:  add edx, 0x4
 809d183:  mov DWORD PTR [ebp-0x2c0], edx
 809d189:  mov DWORD PTR [ebp-0x28c], eax
 809d18f:  mov eax, DWORD PTR [ebp-0x28c]
 809d195:  test eax, eax
 809d197:  jne 809a988
 809d19d:  jmp 80997f0
 809d1a2:  lea esi, [esi]
 809d1a8:  mov eax, 0xffffffe8
 809d1ad:  mov ebx, 0x4
 809d1b2:  mov ecx, DWORD PTR [ebp-0x2e0]
 809d1b8:  mov DWORD PTR [ecx+eax], 0x54
 809d1bf:  jmp 80997f5
 809d1c4:  mov ebx, DWORD PTR [ebp-0x290]
 809d1ca:  sub esp, 0x98
 809d1d0:  xor edx, edx
 809d1d2:  lea eax, [esp+0x1f]
 809d1d6:  and eax, 0xf0
 809d1d9:  mov DWORD PTR [eax], 0x0
 809d1df:  mov DWORD PTR [eax+0x4], ebx
 809d1e2:  mov DWORD PTR [ebp-0x290], eax
 809d1e8:  jmp 809a7fd
 809d1ed:  test DWORD PTR [ebp-0x2b0], 0x200
 809d1f7:  jne 809dc22
 809d1fd:  mov eax, DWORD PTR [ebp-0x1c4]
 809d203:  test eax, eax
 809d205:  jne 809dd9f
 809d20b:  mov edx, DWORD PTR [ebp-0x2c0]
 809d211:  mov eax, DWORD PTR [edx]
 809d213:  add edx, 0x4
 809d216:  mov DWORD PTR [ebp-0x2c0], edx
 809d21c:  mov edx, DWORD PTR [ebp-0x21c]
 809d222:  xor edi, edi
 809d224:  mov ecx, DWORD PTR [ebp-0x2b8]
 809d22a:  mov DWORD PTR [eax], edx
 809d22c:  mov DWORD PTR [ebp-0x1cc], edx
 809d232:  mov DWORD PTR [ebp-0x200], ecx
 809d238:  jmp 8099542
 809d23d:  mov esi, DWORD PTR [ebp-0x21c]
 809d243:  xor ebx, ebx
 809d245:  lea edi, [ebp-0x64]
 809d248:  add esi, 0x2
 809d24b:  jmp 809d299
 809d24d:  sub DWORD PTR [ebp-0x2b4], 0x1
 809d254:  mov eax, DWORD PTR [ebp-0x2b4]
 809d25a:  add DWORD PTR [ebp-0x288], 0x4
 809d261:  test eax, eax
 809d263:  jle 809db98
 809d269:  xor ebx, ebx
 809d26b:  cmp DWORD PTR [ebp-0x200], 0xff
 809d272:  je 809bfa5
 809d278:  mov ecx, DWORD PTR [ebp+0x8]
 809d27b:  mov eax, DWORD PTR [ecx+0x4]
 809d27e:  cmp eax, DWORD PTR [ecx+0x8]
 809d281:  jae 809f75d
 809d287:  movzx edx, BYTE PTR [eax]
 809d28a:  add eax, 0x1
 809d28d:  mov DWORD PTR [ecx+0x4], eax
 809d290:  mov DWORD PTR [ebp-0x200], edx
 809d296:  add esi, 0x1
 809d299:  lea eax, [esi-0x1]
 809d29c:  mov ecx, DWORD PTR [ebp-0x200]
 809d2a2:  mov DWORD PTR [ebp-0x1cc], eax
 809d2a8:  mov eax, DWORD PTR [ebp-0x214]
 809d2ae:  movzx edx, BYTE PTR [ebp-0x29d]
 809d2b5:  cmp BYTE PTR [eax+ecx], dl
 809d2b8:  je 809d806
 809d2be:  mov BYTE PTR [ebp-0x64], cl
 809d2c1:  mov ecx, DWORD PTR [ebp-0x288]
 809d2c7:  lea edx, [ebp-0x44]
 809d2ca:  mov DWORD PTR [esp+0xc], edx
 809d2ce:  mov DWORD PTR [esp+0x8], 0x1
 809d2d6:  mov DWORD PTR [esp+0x4], edi
 809d2da:  mov DWORD PTR [esp], ecx
 809d2dd:  call 80a0810
 809d2e2:  cmp eax, 0xfe
 809d2e5:  jne 809d24d
 809d2eb:  mov eax, 0xffffffd8
 809d2f0:  add ebx, 0x1
 809d2f3:  mov edx, DWORD PTR [ebp-0x2e0]
 809d2f9:  mov eax, DWORD PTR [edx+eax]
 809d2fc:  mov eax, DWORD PTR [eax]
 809d2fe:  cmp ebx, DWORD PTR [eax+0x58]
 809d301:  jb 809d26b
 809d307:  jmp 809cee6
 809d30c:  lea esi, [esi]
 809d310:  mov DWORD PTR [esp], edx
 809d313:  call 8068f50
 809d318:  mov DWORD PTR [ebp-0x200], eax
 809d31e:  add eax, 0x1
 809d321:  je 80995a4
 809d327:  mov esi, DWORD PTR [ebp-0x21c]
 809d32d:  add esi, 0x1
 809d330:  mov DWORD PTR [ebp-0x1cc], esi
 809d336:  jmp 80994d6
 809d33b:  nop
 809d33c:  lea esi, [esi]
 809d340:  mov DWORD PTR [esp], edx
 809d343:  call 8068f50
 809d348:  cmp eax, 0xff
 809d34b:  mov ecx, eax
 809d34d:  jne 809b856
 809d353:  mov edi, 0xffffffe8
 809d359:  mov eax, DWORD PTR [ebp-0x2e0]
 809d35f:  mov edi, DWORD PTR [eax+edi]
 809d362:  mov DWORD PTR [ebp-0x2a4], edi
 809d368:  movzx edx, BYTE PTR [ebx]
 809d36b:  mov DWORD PTR [ebp-0x21c], esi
 809d371:  jmp 809aea9
 809d376:  mov ebx, DWORD PTR [ebp-0x290]
 809d37c:  sub esp, 0x98
 809d382:  xor edx, edx
 809d384:  lea eax, [esp+0x1f]
 809d388:  and eax, 0xf0
 809d38b:  mov DWORD PTR [eax], 0x0
 809d391:  mov DWORD PTR [eax+0x4], ebx
 809d394:  mov DWORD PTR [ebp-0x290], eax
 809d39a:  jmp 809a72c
 809d39f:  test DWORD PTR [ebp-0x2b0], 0x2000
 809d3a9:  je 80997f0
 809d3af:  jmp 8099850
 809d3b4:  lea esi, [esi]
 809d3b8:  cmp DWORD PTR [ebp-0x1c4], 0x1
 809d3bf:  mov eax, DWORD PTR [ebp+0x10]
 809d3c2:  je 809d3d1
 809d3c4:  mov ebx, DWORD PTR [ebp-0x1c4]
 809d3ca:  mov esi, DWORD PTR [ebp+0x10]
 809d3cd:  lea eax, [esi+ebx*4-0x4]
 809d3d1:  mov eax, DWORD PTR [eax]
 809d3d3:  mov DWORD PTR [ebp-0x284], eax
 809d3d9:  jmp 809a6dd
 809d3de:  cmp DWORD PTR [ebp-0x1c4], 0x1
 809d3e5:  mov eax, DWORD PTR [ebp+0x10]
 809d3e8:  je 809d3f7
 809d3ea:  mov ebx, DWORD PTR [ebp-0x1c4]
 809d3f0:  mov esi, DWORD PTR [ebp+0x10]
 809d3f3:  lea eax, [esi+ebx*4-0x4]
 809d3f7:  mov eax, DWORD PTR [eax]
 809d3f9:  mov DWORD PTR [ebp-0x288], eax
 809d3ff:  jmp 809c4a7
 809d404:  mov eax, 0xffffffe8
 809d409:  mov ecx, DWORD PTR [ebp-0x2a4]
 809d40f:  mov edx, DWORD PTR [ebp-0x2e0]
 809d415:  mov DWORD PTR [edx+eax], ecx
 809d418:  jmp 80997f0
 809d41d:  mov edx, DWORD PTR [ebp-0x1c4]
 809d423:  test edx, edx
 809d425:  jne 809da1e
 809d42b:  mov eax, DWORD PTR [ebp-0x2c0]
 809d431:  mov edx, DWORD PTR [ebp-0x2c0]
 809d437:  mov eax, DWORD PTR [eax]
 809d439:  add edx, 0x4
 809d43c:  mov DWORD PTR [ebp-0x2c0], edx
 809d442:  mov DWORD PTR [ebp-0x28c], eax
 809d448:  mov eax, DWORD PTR [ebp-0x28c]
 809d44e:  test eax, eax
 809d450:  jne 809ab9b
 809d456:  jmp 80997f0
 809d45b:  nop
 809d45c:  lea esi, [esi]
 809d460:  mov eax, DWORD PTR [ebp-0x1c4]
 809d466:  test eax, eax
 809d468:  jne 809dbfc
 809d46e:  mov eax, DWORD PTR [ebp-0x2c0]
 809d474:  mov edx, DWORD PTR [ebp-0x2c0]
 809d47a:  mov eax, DWORD PTR [eax]
 809d47c:  add edx, 0x4
 809d47f:  mov DWORD PTR [ebp-0x2c0], edx
 809d485:  mov DWORD PTR [ebp-0x288], eax
 809d48b:  mov edi, DWORD PTR [ebp-0x288]
 809d491:  test edi, edi
 809d493:  jne 809a988
 809d499:  jmp 80997f0
 809d49e:  xchg ax, ax
 809d4a0:  cmp DWORD PTR [ebp-0x1c4], 0x1
 809d4a7:  mov edx, DWORD PTR [ebp+0x10]
 809d4aa:  je 809d4b9
 809d4ac:  mov ecx, DWORD PTR [ebp-0x1c4]
 809d4b2:  mov esi, DWORD PTR [ebp+0x10]
 809d4b5:  lea edx, [esi+ecx*4-0x4]
 809d4b9:  mov edx, DWORD PTR [edx]
 809d4bb:  mov DWORD PTR [edx], eax
 809d4bd:  jmp 8099fc0
 809d4c2:  cmp DWORD PTR [ebp-0x1c4], 0x1
 809d4c9:  mov eax, DWORD PTR [ebp+0x10]
 809d4cc:  je 809d4db
 809d4ce:  mov edx, DWORD PTR [ebp-0x1c4]
 809d4d4:  mov ecx, DWORD PTR [ebp+0x10]
 809d4d7:  lea eax, [ecx+edx*4-0x4]
 809d4db:  mov eax, DWORD PTR [eax]
 809d4dd:  jmp 809c70e
 809d4e2:  mov eax, DWORD PTR [ebp-0x218]
 809d4e8:  cmp DWORD PTR [ebp-0x2b4], eax
 809d4ee:  jg 809d4f9
 809d4f0:  mov eax, DWORD PTR [ebp-0x2b4]
 809d4f6:  sub eax, 0x1
 809d4f9:  add DWORD PTR [ebp-0x218], eax
 809d4ff:  mov eax, DWORD PTR [ebp-0x218]
 809d505:  mov DWORD PTR [esp], edx
 809d508:  mov DWORD PTR [esp+0x4], eax
 809d50c:  call 804db10
 809d511:  test eax, eax
 809d513:  je 809fd6c
 809d519:  mov ecx, DWORD PTR [ebp-0x284]
 809d51f:  mov DWORD PTR [ecx], eax
 809d521:  add eax, ebx
 809d523:  mov DWORD PTR [ebp-0x28c], eax
 809d529:  jmp 809ac21
 809d52e:  mov eax, DWORD PTR [ebp-0x218]
 809d534:  mov DWORD PTR [esp], edx
 809d537:  shl eax, 0x3
 809d53a:  mov DWORD PTR [esp+0x4], eax
 809d53e:  call 804db10
 809d543:  test eax, eax
 809d545:  je 809f4eb
 809d54b:  mov ecx, DWORD PTR [ebp-0x284]
 809d551:  mov esi, DWORD PTR [ebp-0x218]
 809d557:  mov DWORD PTR [ecx], eax
 809d559:  add eax, DWORD PTR [ebp-0x1e0]
 809d55f:  add esi, esi
 809d561:  mov DWORD PTR [ebp-0x288], eax
 809d567:  jmp 809b2e0
 809d56c:  cmp DWORD PTR [ebp-0x1c4], 0x1
 809d573:  mov eax, DWORD PTR [ebp+0x10]
 809d576:  je 809d585
 809d578:  mov esi, DWORD PTR [ebp-0x1c4]
 809d57e:  mov edx, DWORD PTR [ebp+0x10]
 809d581:  lea eax, [edx+esi*4-0x4]
 809d585:  mov eax, DWORD PTR [eax]
 809d587:  mov DWORD PTR [ebp-0x284], eax
 809d58d:  jmp 809c2f6
 809d592:  mov DWORD PTR [esp], ecx
 809d595:  call 8068f50
 809d59a:  mov DWORD PTR [ebp-0x200], eax
 809d5a0:  add eax, 0x1
 809d5a3:  jne 809fde1
 809d5a9:  mov edi, 0xffffffe8
 809d5af:  mov esi, DWORD PTR [ebp-0x2e0]
 809d5b5:  mov DWORD PTR [ebp-0x210], ebx
 809d5bb:  mov edi, DWORD PTR [esi+edi]
 809d5be:  mov DWORD PTR [ebp-0x2a4], edi
 809d5c4:  jmp 809cfe3
 809d5c9:  sub esp, 0x110
 809d5cf:  lea eax, [esp+0x1f]
 809d5d3:  and eax, 0xf0
 809d5d6:  mov DWORD PTR [ebp-0x210], eax
 809d5dc:  movzx eax, WORD PTR [ebx]
 809d5df:  mov ebx, DWORD PTR [ebp-0x210]
 809d5e5:  mov WORD PTR [ebx], ax
 809d5e8:  mov DWORD PTR [ebp-0x20c], 0x100
 809d5f2:  jmp 809cd34
 809d5f7:  mov edx, DWORD PTR [ebp-0x214]
 809d5fd:  sub esp, 0x110
 809d603:  lea eax, [esp+0x1f]
 809d607:  and eax, 0xf0
 809d60a:  mov ebx, eax
 809d60c:  movzx eax, BYTE PTR [edx]
 809d60f:  mov BYTE PTR [ebx], al
 809d611:  mov DWORD PTR [ebp-0x20c], 0x100
 809d61b:  jmp 809ccd5
 809d620:  cmp DWORD PTR [ebp-0x1c4], 0x1
 809d627:  mov eax, DWORD PTR [ebp+0x10]
 809d62a:  je 809d639
 809d62c:  mov ecx, DWORD PTR [ebp-0x1c4]
 809d632:  mov esi, DWORD PTR [ebp+0x10]
 809d635:  lea eax, [esi+ecx*4-0x4]
 809d639:  mov eax, DWORD PTR [eax]
 809d63b:  mov DWORD PTR [ebp-0x28c], eax
 809d641:  jmp 809d18f
 809d646:  mov ebx, DWORD PTR [ebp-0x218]
 809d64c:  mov edi, 0xffffffe8
 809d652:  mov eax, DWORD PTR [ebp-0x2a4]
 809d658:  mov esi, DWORD PTR [ebp-0x2e0]
 809d65e:  mov DWORD PTR [ebp-0x218], ebx
 809d664:  mov DWORD PTR [ebp-0x200], 0xffffffff
 809d66e:  mov DWORD PTR [esi+edi], eax
 809d671:  mov ebx, DWORD PTR [ebp-0x1f0]
 809d677:  test ebx, ebx
 809d679:  jne 8099540
 809d67f:  mov ebx, DWORD PTR [ebp-0x28c]
 809d685:  mov BYTE PTR [ebx], 0x0
 809d688:  mov ecx, DWORD PTR [ebp-0x1ec]
 809d68e:  add ebx, 0x1
 809d691:  mov DWORD PTR [ebp-0x28c], ebx
 809d697:  test ecx, ecx
 809d699:  je 809ba4b
 809d69f:  mov esi, DWORD PTR [ebp-0x284]
 809d6a5:  mov eax, ebx
 809d6a7:  mov edx, DWORD PTR [esi]
 809d6a9:  sub eax, edx
 809d6ab:  cmp eax, DWORD PTR [ebp-0x218]
 809d6b1:  je 809ba4b
 809d6b7:  jmp 809c02d
 809d6bc:  mov eax, DWORD PTR [ebp-0x204]
 809d6c2:  add eax, eax
 809d6c4:  cmp eax, 0x100
 809d6c9:  mov DWORD PTR [ebp-0x20c], eax
 809d6cf:  jae 809d6db
 809d6d1:  mov DWORD PTR [ebp-0x20c], 0x100
 809d6db:  mov eax, DWORD PTR [ebp-0x20c]
 809d6e1:  mov ecx, DWORD PTR [ebp-0x210]
 809d6e7:  add eax, 0x12
 809d6ea:  and eax, 0xfc
 809d6ed:  sub esp, eax
 809d6ef:  lea ebx, [esp+0x1f]
 809d6f3:  and ebx, 0xf0
 809d6f6:  test ecx, ecx
 809d6f8:  je 809b5de
 809d6fe:  mov edx, DWORD PTR [ebp-0x204]
 809d704:  mov ecx, DWORD PTR [ebp-0x210]
 809d70a:  mov DWORD PTR [esp], ebx
 809d70d:  mov DWORD PTR [esp+0x8], edx
 809d711:  mov DWORD PTR [esp+0x4], ecx
 809d715:  call 804efc0
 809d71a:  jmp 809b5de
 809d71f:  mov DWORD PTR [esp], ecx
 809d722:  call 8068f50
 809d727:  mov DWORD PTR [ebp-0x200], eax
 809d72d:  add eax, 0x1
 809d730:  je 80995a4
 809d736:  mov ebx, DWORD PTR [ebp-0x21c]
 809d73c:  add ebx, 0x1
 809d73f:  mov DWORD PTR [ebp-0x1cc], ebx
 809d745:  jmp 8099df9
 809d74a:  lea esi, [esi]
 809d750:  mov eax, DWORD PTR [ebp-0x204]
 809d756:  add eax, eax
 809d758:  cmp eax, 0x100
 809d75d:  mov DWORD PTR [ebp-0x20c], eax
 809d763:  jae 809d76f
 809d765:  mov DWORD PTR [ebp-0x20c], 0x100
 809d76f:  mov eax, DWORD PTR [ebp-0x20c]
 809d775:  mov esi, DWORD PTR [ebp-0x210]
 809d77b:  add eax, 0x12
 809d77e:  and eax, 0xfc
 809d781:  sub esp, eax
 809d783:  lea ebx, [esp+0x1f]
 809d787:  and ebx, 0xf0
 809d78a:  test esi, esi
 809d78c:  je 809c1c9
 809d792:  mov edx, DWORD PTR [ebp-0x204]
 809d798:  mov ecx, DWORD PTR [ebp-0x210]
 809d79e:  mov DWORD PTR [esp], ebx
 809d7a1:  mov DWORD PTR [esp+0x8], edx
 809d7a5:  mov DWORD PTR [esp+0x4], ecx
 809d7a9:  call 804efc0
 809d7ae:  jmp 809c1c9
 809d7b3:  mov ecx, DWORD PTR [ebp+0x8]
 809d7b6:  mov eax, DWORD PTR [ecx+0x4]
 809d7b9:  cmp eax, DWORD PTR [ecx+0x8]
 809d7bc:  jae 809f468
 809d7c2:  movzx edx, BYTE PTR [eax]
 809d7c5:  add eax, 0x1
 809d7c8:  mov ecx, DWORD PTR [ebp+0x8]
 809d7cb:  mov DWORD PTR [ebp-0x200], edx
 809d7d1:  mov DWORD PTR [ecx+0x4], eax
 809d7d4:  add DWORD PTR [ebp-0x1cc], 0x1
 809d7db:  jmp 809a065
 809d7e0:  mov edi, 0xffffffe8
 809d7e6:  mov ecx, DWORD PTR [ebp-0x2a4]
 809d7ec:  mov edx, DWORD PTR [ebp-0x2e0]
 809d7f2:  mov DWORD PTR [ebp-0x200], 0xffffffff
 809d7fc:  mov DWORD PTR [edx+edi], ecx
 809d7ff:  jmp 809c630
 809d804:  xor ebx, ebx
 809d806:  movzx eax, BYTE PTR [ebp-0x200]
 809d80d:  mov edx, DWORD PTR [ebp+0x8]
 809d810:  sub DWORD PTR [ebp-0x1cc], 0x1
 809d817:  mov DWORD PTR [esp+0x4], eax
 809d81b:  mov DWORD PTR [esp], edx
 809d81e:  call 8068600
 809d823:  jmp 809bfc4
 809d828:  cmp DWORD PTR [ebp-0x1c4], 0x1
 809d82f:  mov eax, DWORD PTR [ebp+0x10]
 809d832:  je 809d841
 809d834:  mov edx, DWORD PTR [ebp-0x1c4]
 809d83a:  mov ecx, DWORD PTR [ebp+0x10]
 809d83d:  lea eax, [ecx+edx*4-0x4]
 809d841:  mov eax, DWORD PTR [eax]
 809d843:  mov DWORD PTR [ebp-0x28c], eax
 809d849:  jmp 809d109
 809d84e:  cmp DWORD PTR [ebp-0x1c4], 0x1
 809d855:  mov eax, DWORD PTR [ebp+0x10]
 809d858:  je 809d867
 809d85a:  mov edx, DWORD PTR [ebp-0x1c4]
 809d860:  mov ecx, DWORD PTR [ebp+0x10]
 809d863:  lea eax, [ecx+edx*4-0x4]
 809d867:  mov eax, DWORD PTR [eax]
 809d869:  mov DWORD PTR [ebp-0x284], eax
 809d86f:  jmp 809afd8
 809d874:  mov edx, DWORD PTR [ebp-0x290]
 809d87a:  sub esp, 0x98
 809d880:  lea eax, [esp+0x1f]
 809d884:  and eax, 0xf0
 809d887:  mov DWORD PTR [eax], 0x0
 809d88d:  mov DWORD PTR [eax+0x4], edx
 809d890:  xor edx, edx
 809d892:  mov DWORD PTR [ebp-0x290], eax
 809d898:  jmp 809b027
 809d89d:  mov ebx, DWORD PTR [ebp-0x218]
 809d8a3:  mov DWORD PTR [ebp-0x218], ebx
 809d8a9:  jmp 809d671
 809d8ae:  mov edi, 0xffffffe8
 809d8b4:  mov esi, DWORD PTR [ebp-0x2a4]
 809d8ba:  mov ebx, DWORD PTR [ebp-0x2e0]
 809d8c0:  mov DWORD PTR [ebx+edi], esi
 809d8c3:  mov eax, DWORD PTR [ebp-0x1fc]
 809d8c9:  test eax, eax
 809d8cb:  jne 8099540
 809d8d1:  mov eax, DWORD PTR [ebp-0x1f8]
 809d8d7:  test eax, eax
 809d8d9:  je 809ba4b
 809d8df:  mov eax, DWORD PTR [ebp-0x284]
 809d8e5:  mov edx, DWORD PTR [eax]
 809d8e7:  mov eax, DWORD PTR [ebp-0x288]
 809d8ed:  sub eax, edx
 809d8ef:  sar eax, 0x2
 809d8f2:  cmp eax, DWORD PTR [ebp-0x218]
 809d8f8:  je 809ba4b
 809d8fe:  shl eax, 0x2
 809d901:  mov DWORD PTR [esp+0x4], eax
 809d905:  mov DWORD PTR [esp], edx
 809d908:  call 804db10
 809d90d:  test eax, eax
 809d90f:  je 809ba4b
 809d915:  mov edx, DWORD PTR [ebp-0x284]
 809d91b:  mov DWORD PTR [edx], eax
 809d91d:  jmp 809ba4b
 809d922:  mov DWORD PTR [ebp-0x200], ebx
 809d928:  jmp 809d8c3
 809d92a:  cmp DWORD PTR [ebp-0x1c4], 0x1
 809d931:  mov eax, DWORD PTR [ebp+0x10]
 809d934:  je 809d943
 809d936:  mov esi, DWORD PTR [ebp-0x1c4]
 809d93c:  mov edx, DWORD PTR [ebp+0x10]
 809d93f:  lea eax, [edx+esi*4-0x4]
 809d943:  mov eax, DWORD PTR [eax]
 809d945:  jmp 809a87d
 809d94a:  sub esp, 0x110
 809d950:  lea eax, [esp+0x1f]
 809d954:  and eax, 0xf0
 809d957:  mov DWORD PTR [ebp-0x210], eax
 809d95d:  movzx eax, WORD PTR [ebx]
 809d960:  mov ebx, DWORD PTR [ebp-0x210]
 809d966:  mov WORD PTR [ebx], ax
 809d969:  mov DWORD PTR [ebp-0x20c], 0x100
 809d973:  jmp 809c8ff
 809d978:  mov esi, DWORD PTR [ebp-0x214]
 809d97e:  sub esp, 0x110
 809d984:  lea eax, [esp+0x1f]
 809d988:  and eax, 0xf0
 809d98b:  mov ebx, eax
 809d98d:  movzx eax, BYTE PTR [esi]
 809d990:  mov BYTE PTR [ebx], al
 809d992:  mov DWORD PTR [ebp-0x20c], 0x100
 809d99c:  jmp 809c88e
 809d9a1:  mov ebx, DWORD PTR [ebp-0x218]
 809d9a7:  mov DWORD PTR [esp], edx
 809d9aa:  add ebx, ebx
 809d9ac:  mov DWORD PTR [esp+0x4], ebx
 809d9b0:  call 804db10
 809d9b5:  test eax, eax
 809d9b7:  je 809f65b
 809d9bd:  mov ecx, DWORD PTR [ebp-0x284]
 809d9c3:  mov DWORD PTR [ecx], eax
 809d9c5:  add eax, DWORD PTR [ebp-0x218]
 809d9cb:  mov DWORD PTR [ebp-0x28c], eax
 809d9d1:  jmp 809b103
 809d9d6:  sub esp, 0x110
 809d9dc:  lea ecx, [esp+0x1f]
 809d9e0:  and ecx, 0xf0
 809d9e3:  mov DWORD PTR [ebp-0x214], ecx
 809d9e9:  mov DWORD PTR [ebp-0x20c], 0x100
 809d9f3:  jmp 809c80e
 809d9f8:  cmp DWORD PTR [ebp-0x1c4], 0x1
 809d9ff:  mov eax, DWORD PTR [ebp+0x10]
 809da02:  je 809da11
 809da04:  mov edx, DWORD PTR [ebp-0x1c4]
 809da0a:  mov ecx, DWORD PTR [ebp+0x10]
 809da0d:  lea eax, [ecx+edx*4-0x4]
 809da11:  mov eax, DWORD PTR [eax]
 809da13:  mov DWORD PTR [ebp-0x284], eax
 809da19:  jmp 809a91a
 809da1e:  cmp DWORD PTR [ebp-0x1c4], 0x1
 809da25:  mov eax, DWORD PTR [ebp+0x10]
 809da28:  je 809da37
 809da2a:  mov ecx, DWORD PTR [ebp-0x1c4]
 809da30:  mov esi, DWORD PTR [ebp+0x10]
 809da33:  lea eax, [esi+ecx*4-0x4]
 809da37:  mov eax, DWORD PTR [eax]
 809da39:  mov DWORD PTR [ebp-0x28c], eax
 809da3f:  jmp 809d448
 809da44:  mov edx, DWORD PTR [ebp-0x290]
 809da4a:  sub esp, 0x98
 809da50:  lea eax, [esp+0x1f]
 809da54:  and eax, 0xf0
 809da57:  mov DWORD PTR [eax], 0x0
 809da5d:  mov DWORD PTR [eax+0x4], edx
 809da60:  xor edx, edx
 809da62:  mov DWORD PTR [ebp-0x290], eax
 809da68:  jmp 809ab86
 809da6d:  sub esp, 0x110
 809da73:  lea edx, [esp+0x1f]
 809da77:  and edx, 0xf0
 809da7a:  mov DWORD PTR [ebp-0x214], edx
 809da80:  mov DWORD PTR [ebp-0x20c], 0x100
 809da8a:  jmp 809cbfe
 809da8f:  mov edi, 0xffffffe8
 809da95:  mov eax, DWORD PTR [ebp-0x2a4]
 809da9b:  mov ebx, DWORD PTR [ebp-0x2e0]
 809daa1:  mov DWORD PTR [ebp-0x218], esi
 809daa7:  mov DWORD PTR [ebx+edi], eax
 809daaa:  jmp 809b9e8
 809daaf:  mov edi, 0xffffffe8
 809dab5:  mov edx, DWORD PTR [ebp-0x2a4]
 809dabb:  mov eax, DWORD PTR [ebp-0x2e0]
 809dac1:  mov DWORD PTR [eax+edi], edx
 809dac4:  mov DWORD PTR [ebp-0x200], 0xffffffff
 809dace:  xor edi, edi
 809dad0:  jmp 8099542
 809dad5:  cmp DWORD PTR [ebp-0x1c4], 0x1
 809dadc:  mov eax, DWORD PTR [ebp+0x10]
 809dadf:  je 809daee
 809dae1:  mov ecx, DWORD PTR [ebp-0x1c4]
 809dae7:  mov esi, DWORD PTR [ebp+0x10]
 809daea:  lea eax, [esi+ecx*4-0x4]
 809daee:  mov eax, DWORD PTR [eax]
 809daf0:  mov DWORD PTR [ebp-0x284], eax
 809daf6:  jmp 809ab18
 809dafb:  mov esi, DWORD PTR [ebp-0x214]
 809db01:  cmp DWORD PTR [ebp-0x20c], 0x1
 809db08:  mov DWORD PTR [ebp-0x210], esi
 809db0e:  je 809f5fb
 809db14:  movzx ebx, BYTE PTR [ebp-0x2b8]
 809db1b:  mov esi, DWORD PTR [ebp-0x210]
 809db21:  mov BYTE PTR [esi+0x1], bl
 809db24:  or DWORD PTR [ebp-0x2b0], 0x800
 809db2e:  and DWORD PTR [ebp-0x2b0], 0xffffff7f
 809db38:  cmp DWORD PTR [ebp-0x2b8], 0xff
 809db3f:  jne 809f5d2
 809db45:  mov edi, 0xffffffe8
 809db4b:  mov edx, DWORD PTR [ebp-0x2a4]
 809db51:  mov eax, DWORD PTR [ebp-0x2e0]
 809db57:  mov DWORD PTR [eax+edi], edx
 809db5a:  mov eax, DWORD PTR [ebp-0x2b4]
 809db60:  mov BYTE PTR [ebp-0x1bd], 0x70
 809db67:  mov DWORD PTR [ebp-0x204], 0x2
 809db71:  test eax, eax
 809db73:  jle 809ad42
 809db79:  sub DWORD PTR [ebp-0x2b4], 0x1
 809db80:  mov BYTE PTR [ebp-0x1bd], 0x70
 809db87:  mov DWORD PTR [ebp-0x204], 0x2
 809db91:  jmp 809ad42
 809db96:  xchg ax, ax
 809db98:  mov ebx, DWORD PTR [ebp-0x218]
 809db9e:  mov DWORD PTR [ebp-0x218], ebx
 809dba4:  jmp 809bfcc
 809dba9:  mov DWORD PTR [esp], edx
 809dbac:  call 8068f50
 809dbb1:  mov DWORD PTR [ebp-0x200], eax
 809dbb7:  add eax, 0x1
 809dbba:  jne 809e804
 809dbc0:  mov edi, 0xffffffe8
 809dbc6:  mov esi, DWORD PTR [ebp-0x2e0]
 809dbcc:  mov edi, DWORD PTR [esi+edi]
 809dbcf:  mov DWORD PTR [ebp-0x2a4], edi
 809dbd5:  jmp 809d8c3
 809dbda:  movzx eax, BYTE PTR [ebp-0x200]
 809dbe1:  mov ebx, DWORD PTR [ebp+0x8]
 809dbe4:  sub DWORD PTR [ebp-0x1cc], 0x1
 809dbeb:  mov DWORD PTR [esp+0x4], eax
 809dbef:  mov DWORD PTR [esp], ebx
 809dbf2:  call 8068600
 809dbf7:  jmp 809d671
 809dbfc:  cmp DWORD PTR [ebp-0x1c4], 0x1
 809dc03:  mov eax, DWORD PTR [ebp+0x10]
 809dc06:  je 809dc15
 809dc08:  mov ecx, DWORD PTR [ebp-0x1c4]
 809dc0e:  mov esi, DWORD PTR [ebp+0x10]
 809dc11:  lea eax, [esi+ecx*4-0x4]
 809dc15:  mov eax, DWORD PTR [eax]
 809dc17:  mov DWORD PTR [ebp-0x288], eax
 809dc1d:  jmp 809d48b
 809dc22:  mov eax, DWORD PTR [ebp-0x1c4]
 809dc28:  test eax, eax
 809dc2a:  jne 809f36b
 809dc30:  mov ebx, DWORD PTR [ebp-0x2c0]
 809dc36:  mov eax, DWORD PTR [ebx]
 809dc38:  add ebx, 0x4
 809dc3b:  mov DWORD PTR [ebp-0x2c0], ebx
 809dc41:  movzx ecx, BYTE PTR [ebp-0x21c]
 809dc48:  xor edi, edi
 809dc4a:  mov BYTE PTR [eax], cl
 809dc4c:  mov ebx, DWORD PTR [ebp-0x21c]
 809dc52:  mov esi, DWORD PTR [ebp-0x2b8]
 809dc58:  mov DWORD PTR [ebp-0x1cc], ebx
 809dc5e:  mov DWORD PTR [ebp-0x200], esi
 809dc64:  jmp 8099542
 809dc69:  mov edi, 0xffffffe8
 809dc6f:  mov ebx, DWORD PTR [ebp-0x2a4]
 809dc75:  mov ecx, DWORD PTR [ebp-0x2e0]
 809dc7b:  mov DWORD PTR [ecx+edi], ebx
 809dc7e:  jmp 809c396
 809dc83:  mov ebx, DWORD PTR [ebp-0x294]
 809dc89:  xor eax, eax
 809dc8b:  jmp 809bc2e
 809dc90:  cmp DWORD PTR [ebp-0x1c4], 0x1
 809dc97:  mov eax, DWORD PTR [ebp+0x10]
 809dc9a:  je 809dca9
 809dc9c:  mov ebx, DWORD PTR [ebp-0x1c4]
 809dca2:  mov esi, DWORD PTR [ebp+0x10]
 809dca5:  lea eax, [esi+ebx*4-0x4]
 809dca9:  mov eax, DWORD PTR [eax]
 809dcab:  jmp 809cae8
 809dcb0:  cmp DWORD PTR [ebp-0x1c4], 0x1
 809dcb7:  mov eax, DWORD PTR [ebp+0x10]
 809dcba:  je 809dcc9
 809dcbc:  mov ecx, DWORD PTR [ebp-0x1c4]
 809dcc2:  mov ebx, DWORD PTR [ebp+0x10]
 809dcc5:  lea eax, [ebx+ecx*4-0x4]
 809dcc9:  mov eax, DWORD PTR [eax]
 809dccb:  jmp 809ca4d
 809dcd0:  cmp DWORD PTR [ebp-0x1c4], 0x1
 809dcd7:  mov eax, DWORD PTR [ebp+0x10]
 809dcda:  je 809dce9
 809dcdc:  mov esi, DWORD PTR [ebp-0x1c4]
 809dce2:  mov ecx, DWORD PTR [ebp+0x10]
 809dce5:  lea eax, [ecx+esi*4-0x4]
 809dce9:  mov eax, DWORD PTR [eax]
 809dceb:  jmp 809cb55
 809dcf0:  cmp DWORD PTR [ebp-0x200], 0xff
 809dcf7:  je 809cfe3
 809dcfd:  movzx eax, BYTE PTR [ebp-0x200]
 809dd04:  mov ebx, DWORD PTR [ebp+0x8]
 809dd07:  sub DWORD PTR [ebp-0x1cc], 0x1
 809dd0e:  mov DWORD PTR [esp+0x4], eax
 809dd12:  mov DWORD PTR [esp], ebx
 809dd15:  call 8068600
 809dd1a:  jmp 809cfe3
 809dd1f:  nop
 809dd20:  mov eax, 0xffffffe8
 809dd25:  mov ecx, DWORD PTR [ebp-0x2e0]
 809dd2b:  mov DWORD PTR [ebp-0x2bc], 0xffffffff
 809dd35:  mov DWORD PTR [ecx+eax], 0x16
 809dd3c:  jmp 809957b
 809dd41:  mov ebx, DWORD PTR [ebp+0x8]
 809dd44:  sub esi, 0x2
 809dd47:  movzx eax, dl
 809dd4a:  mov DWORD PTR [ebp-0x1cc], esi
 809dd50:  mov DWORD PTR [esp+0x4], eax
 809dd54:  mov DWORD PTR [esp], ebx
 809dd57:  call 8068600
 809dd5c:  jmp 809c396
 809dd61:  test DWORD PTR [ebp-0x2b0], 0x2000
 809dd6b:  jne 8099850
 809dd71:  mov edx, DWORD PTR [ebp-0x284]
 809dd77:  mov ebx, 0x2
 809dd7c:  mov ecx, DWORD PTR [ebp-0x218]
 809dd82:  mov eax, DWORD PTR [edx]
 809dd84:  mov BYTE PTR [eax+ecx-0x1], 0x0
 809dd89:  mov DWORD PTR [ebp-0x284], 0x0
 809dd93:  add DWORD PTR [ebp-0x2bc], 0x1
 809dd9a:  jmp 80997f5
 809dd9f:  cmp DWORD PTR [ebp-0x1c4], 0x1
 809dda6:  mov eax, DWORD PTR [ebp+0x10]
 809dda9:  je 809ddb8
 809ddab:  mov ecx, DWORD PTR [ebp-0x1c4]
 809ddb1:  mov ebx, DWORD PTR [ebp+0x10]
 809ddb4:  lea eax, [ebx+ecx*4-0x4]
 809ddb8:  mov eax, DWORD PTR [eax]
 809ddba:  jmp 809d21c
 809ddbf:  mov edx, DWORD PTR [ebp-0x21c]
 809ddc5:  mov DWORD PTR [ebp-0x1cc], edx
 809ddcb:  jmp 809b8b8
 809ddd0:  mov DWORD PTR [esp], ebx
 809ddd3:  call 8068f50
 809ddd8:  mov DWORD PTR [ebp-0x200], eax
 809ddde:  add eax, 0x1
 809dde1:  je 80995a4
 809dde7:  jmp 809c077
 809ddec:  mov esi, DWORD PTR [ebp-0x2c4]
 809ddf2:  test esi, esi
 809ddf4:  jne 809cff3
 809ddfa:  mov ebx, DWORD PTR [ebp-0x204]
 809de00:  test ebx, ebx
 809de02:  sete BYTE PTR [ebp-0x1bf]
 809de09:  je 809de18
 809de0b:  cmp BYTE PTR [ebp-0x2a0], 0x0
 809de12:  je 809c9ae
 809de18:  mov DWORD PTR [esp], 0x80c6817
 809de1f:  call 8074460
 809de24:  test eax, eax
 809de26:  mov DWORD PTR [ebp-0x278], eax
 809de2c:  je 809cff3
 809de32:  cmp DWORD PTR [ebp-0x200], 0xff
 809de39:  jne 809e1af
 809de3f:  mov edi, 0xffffffe8
 809de45:  mov ecx, DWORD PTR [ebp-0x2a4]
 809de4b:  mov edx, DWORD PTR [ebp-0x2e0]
 809de51:  mov DWORD PTR [edx+edi], ecx
 809de54:  mov ebx, DWORD PTR [ebp-0x278]
 809de5a:  lea esi, [ebp-0x3c]
 809de5d:  mov DWORD PTR [esp], 0x2e
 809de64:  mov DWORD PTR [esp+0x4], ebx
 809de68:  call 80744e0
 809de6d:  mov DWORD PTR [esp+0x8], esi
 809de71:  lea esi, [ebp-0xf5]
 809de77:  mov DWORD PTR [ebp-0x3c], 0x0
 809de7e:  mov DWORD PTR [ebp-0x38], 0x0
 809de85:  mov DWORD PTR [esp], esi
 809de88:  mov DWORD PTR [ebp-0xb8], eax
 809de8e:  mov DWORD PTR [esp+0x4], eax
 809de92:  call 806c600
 809de97:  cmp eax, 0xff
 809de9a:  je 809e0ca
 809dea0:  mov BYTE PTR [ebp+eax-0xf5], 0x0
 809dea8:  mov eax, DWORD PTR [ebp-0x298]
 809deae:  mov DWORD PTR [esp], eax
 809deb1:  call 804eea0
 809deb6:  xor edx, edx
 809deb8:  cmp eax, DWORD PTR [ebp-0x204]
 809debe:  jne 809ded9
 809dec0:  mov edx, DWORD PTR [ebp-0x298]
 809dec6:  mov DWORD PTR [esp+0x4], esi
 809deca:  mov DWORD PTR [esp], edx
 809decd:  call 806af90
 809ded2:  xor edx, edx
 809ded4:  test eax, eax
 809ded6:  sete dl
 809ded9:  movzx ebx, BYTE PTR [ebp-0x1bf]
 809dee0:  or ebx, edx
 809dee2:  test bl, bl
 809dee4:  je 809cff3
 809deea:  mov eax, DWORD PTR [ebp-0x2b0]
 809def0:  lea esi, [ebp-0x1b0]
 809def6:  xor ebx, ebx
 809def8:  shr eax, 0x7
 809defb:  and eax, 0x1
 809defe:  mov BYTE PTR [ebp-0x1be], al
 809df04:  mov edi, eax
 809df06:  cmp ebx, 0xa
 809df09:  jne 809e3bb
 809df0f:  mov ecx, DWORD PTR [ebp-0x278]
 809df15:  mov DWORD PTR [esp], 0x2c
 809df1c:  mov DWORD PTR [esp+0x4], ecx
 809df20:  call 80744e0
 809df25:  test eax, eax
 809df27:  mov DWORD PTR [ebp-0xbc], eax
 809df2d:  setne al
 809df30:  and edi, eax
 809df32:  lea eax, [ebp-0x3c]
 809df35:  mov DWORD PTR [esp+0x8], eax
 809df39:  mov eax, DWORD PTR [ebp+ebx*4-0xe4]
 809df40:  mov DWORD PTR [ebp-0x3c], 0x0
 809df47:  mov DWORD PTR [ebp-0x38], 0x0
 809df4e:  mov DWORD PTR [esp], esi
 809df51:  mov DWORD PTR [esp+0x4], eax
 809df55:  call 806c600
 809df5a:  cmp eax, 0xff
 809df5d:  mov edx, eax
 809df5f:  je 809e36d
 809df65:  mov eax, ebx
 809df67:  add esi, 0x11
 809df6a:  shl eax, 0x4
 809df6d:  add eax, ebx
 809df6f:  add ebx, 0x1
 809df72:  lea ecx, [ebp-0xc]
 809df75:  cmp ebx, 0xb
 809df78:  lea eax, [ecx+eax]
 809df7b:  mov BYTE PTR [edx+eax-0x1a4], 0x0
 809df83:  jne 809df06
 809df85:  cmp BYTE PTR [ebp-0x29f], 0x0
 809df8c:  je 809e3dc
 809df92:  mov eax, DWORD PTR [ebp-0x210]
 809df98:  mov esi, DWORD PTR [ebp-0x204]
 809df9e:  movzx ebx, BYTE PTR [ebp-0x1bd]
 809dfa5:  cmp BYTE PTR [eax+esi-0x1], bl
 809dfa9:  je 809e10e
 809dfaf:  lea edx, [ebp-0x1b0]
 809dfb5:  mov DWORD PTR [ebp-0x234], edx
 809dfbb:  mov DWORD PTR [ebp-0x24c], 0x0
 809dfc5:  mov ebx, DWORD PTR [ebp-0x2b4]
 809dfcb:  test ebx, ebx
 809dfcd:  jg 809dfd4
 809dfcf:  mov ebx, 0x7fffffff
 809dfd4:  mov eax, DWORD PTR [ebp-0x234]
 809dfda:  mov ecx, DWORD PTR [ebp-0x234]
 809dfe0:  movzx edx, BYTE PTR [eax]
 809dfe3:  mov DWORD PTR [ebp-0x248], ecx
 809dfe9:  movzx eax, dl
 809dfec:  cmp eax, DWORD PTR [ebp-0x200]
 809dff2:  jne 809e58d
 809dff8:  mov esi, DWORD PTR [ebp-0x234]
 809dffe:  mov eax, DWORD PTR [ebp-0x234]
 809e004:  add esi, 0x1
 809e007:  mov DWORD PTR [ebp-0x248], esi
 809e00d:  cmp BYTE PTR [eax+0x1], 0x0
 809e011:  je 809e595
 809e017:  add DWORD PTR [ebp-0x1cc], 0x1
 809e01e:  jmp 809e076
 809e020:  mov esi, DWORD PTR [ebp+0x8]
 809e023:  movzx ecx, BYTE PTR [eax]
 809e026:  add eax, 0x1
 809e029:  mov DWORD PTR [esi+0x4], eax
 809e02c:  mov esi, DWORD PTR [ebp-0x248]
 809e032:  sub ebx, 0x1
 809e035:  movzx edx, BYTE PTR [esi]
 809e038:  movzx eax, dl
 809e03b:  cmp eax, ecx
 809e03d:  mov DWORD PTR [ebp-0x200], eax
 809e043:  jne 809e587
 809e049:  add DWORD PTR [ebp-0x248], 0x1
 809e050:  mov edx, DWORD PTR [ebp-0x248]
 809e056:  cmp BYTE PTR [edx], 0x0
 809e059:  je 809e595
 809e05f:  mov eax, DWORD PTR [ebp-0x1cc]
 809e065:  add eax, 0x1
 809e068:  test ebx, ebx
 809e06a:  je 809e44e
 809e070:  mov DWORD PTR [ebp-0x1cc], eax
 809e076:  mov ecx, DWORD PTR [ebp+0x8]
 809e079:  mov esi, DWORD PTR [ebp-0x1cc]
 809e07f:  mov eax, DWORD PTR [ecx+0x4]
 809e082:  sub esi, 0x1
 809e085:  cmp eax, DWORD PTR [ecx+0x8]
 809e088:  jb 809e020
 809e08a:  mov DWORD PTR [esp], ecx
 809e08d:  call 8068f50
 809e092:  mov DWORD PTR [ebp-0x200], eax
 809e098:  add eax, 0x1
 809e09b:  jne 809e6e6
 809e0a1:  mov edi, 0xffffffe8
 809e0a7:  mov eax, DWORD PTR [ebp-0x2e0]
 809e0ad:  mov ecx, DWORD PTR [ebp-0x248]
 809e0b3:  mov edi, DWORD PTR [eax+edi]
 809e0b6:  mov DWORD PTR [ebp-0x2a4], edi
 809e0bc:  movzx edx, BYTE PTR [ecx]
 809e0bf:  mov DWORD PTR [ebp-0x1cc], esi
 809e0c5:  jmp 809e58d
 809e0ca:  mov ecx, DWORD PTR [ebp-0x298]
 809e0d0:  mov DWORD PTR [esp], ecx
 809e0d3:  call 804eea0
 809e0d8:  cmp eax, 0x10
 809e0db:  ja 809cff3
 809e0e1:  cmp DWORD PTR [ebp-0x204], eax
 809e0e7:  mov DWORD PTR [esp], esi
 809e0ea:  sete bl
 809e0ed:  add eax, 0x1
 809e0f0:  mov DWORD PTR [esp+0x8], eax
 809e0f4:  mov eax, DWORD PTR [ebp-0x298]
 809e0fa:  or bl, BYTE PTR [ebp-0x1bf]
 809e100:  mov DWORD PTR [esp+0x4], eax
 809e104:  call 804efc0
 809e109:  jmp 809dee2
 809e10e:  cmp DWORD PTR [ebp-0x200], 0x2d
 809e115:  je 809e124
 809e117:  cmp DWORD PTR [ebp-0x200], 0x2b
 809e11e:  jne 809dfaf
 809e124:  mov ecx, DWORD PTR [ebp-0x20c]
 809e12a:  cmp DWORD PTR [ebp-0x204], ecx
 809e130:  je 809e2ed
 809e136:  mov ecx, DWORD PTR [ebp-0x204]
 809e13c:  movzx edx, BYTE PTR [ebp-0x200]
 809e143:  mov ebx, DWORD PTR [ebp-0x210]
 809e149:  mov BYTE PTR [ebx+ecx], dl
 809e14c:  add ecx, 0x1
 809e14f:  mov DWORD PTR [ebp-0x204], ecx
 809e155:  mov eax, DWORD PTR [ebp-0x2b4]
 809e15b:  test eax, eax
 809e15d:  je 809cff3
 809e163:  cmp DWORD PTR [ebp-0x200], 0xff
 809e16a:  je 809e2d3
 809e170:  mov esi, DWORD PTR [ebp+0x8]
 809e173:  mov eax, DWORD PTR [esi+0x4]
 809e176:  cmp eax, DWORD PTR [esi+0x8]
 809e179:  jae 809e2b0
 809e17f:  movzx edx, BYTE PTR [eax]
 809e182:  add eax, 0x1
 809e185:  mov ecx, DWORD PTR [ebp+0x8]
 809e188:  add DWORD PTR [ebp-0x1cc], 0x1
 809e18f:  mov DWORD PTR [ebp-0x200], edx
 809e195:  mov DWORD PTR [ecx+0x4], eax
 809e198:  xor eax, eax
 809e19a:  cmp DWORD PTR [ebp-0x2b4], 0x0
 809e1a1:  setg al
 809e1a4:  sub DWORD PTR [ebp-0x2b4], eax
 809e1aa:  jmp 809df85
 809e1af:  mov ebx, DWORD PTR [ebp+0x8]
 809e1b2:  mov eax, DWORD PTR [ebx+0x4]
 809e1b5:  cmp eax, DWORD PTR [ebx+0x8]
 809e1b8:  jae 809e249
 809e1be:  movzx esi, BYTE PTR [eax]
 809e1c1:  add eax, 0x1
 809e1c4:  mov edx, DWORD PTR [ebp+0x8]
 809e1c7:  mov DWORD PTR [ebp-0x200], esi
 809e1cd:  mov DWORD PTR [edx+0x4], eax
 809e1d0:  add DWORD PTR [ebp-0x1cc], 0x1
 809e1d7:  jmp 809de54
 809e1dc:  mov DWORD PTR [esp], edx
 809e1df:  call 8068f50
 809e1e4:  mov DWORD PTR [ebp-0x200], eax
 809e1ea:  add eax, 0x1
 809e1ed:  jne 809bcb6
 809e1f3:  mov edi, 0xffffffe8
 809e1f9:  mov eax, DWORD PTR [ebp-0x2e0]
 809e1ff:  mov DWORD PTR [ebp-0x1cc], esi
 809e205:  mov edi, DWORD PTR [eax+edi]
 809e208:  mov DWORD PTR [ebp-0x2a4], edi
 809e20e:  jmp 809b8b8
 809e213:  mov DWORD PTR [esp], edx
 809e216:  call 8068f50
 809e21b:  mov DWORD PTR [ebp-0x200], eax
 809e221:  add eax, 0x1
 809e224:  jne 809b3ae
 809e22a:  mov eax, DWORD PTR [ebp-0x2e0]
 809e230:  mov edi, 0xffffffe8
 809e236:  mov edi, DWORD PTR [eax+edi]
 809e239:  mov eax, 0x3fc
 809e23e:  mov DWORD PTR [ebp-0x2a4], edi
 809e244:  jmp 809b3bf
 809e249:  mov DWORD PTR [esp], ebx
 809e24c:  call 8068f50
 809e251:  mov DWORD PTR [ebp-0x200], eax
 809e257:  add eax, 0x1
 809e25a:  jne 809e1d0
 809e260:  mov edi, 0xffffffe8
 809e266:  mov ecx, DWORD PTR [ebp-0x2e0]
 809e26c:  mov edi, DWORD PTR [ecx+edi]
 809e26f:  mov DWORD PTR [ebp-0x2a4], edi
 809e275:  jmp 809de54
 809e27a:  mov DWORD PTR [esp], edx
 809e27d:  call 8068f50
 809e282:  mov DWORD PTR [ebp-0x200], eax
 809e288:  add eax, 0x1
 809e28b:  jne 809bcfd
 809e291:  mov eax, DWORD PTR [ebp-0x2e0]
 809e297:  mov edi, 0xffffffe8
 809e29d:  mov edi, DWORD PTR [eax+edi]
 809e2a0:  mov eax, 0x3fc
 809e2a5:  mov DWORD PTR [ebp-0x2a4], edi
 809e2ab:  jmp 809b3f9
 809e2b0:  mov DWORD PTR [esp], esi
 809e2b3:  call 8068f50
 809e2b8:  mov DWORD PTR [ebp-0x200], eax
 809e2be:  add eax, 0x1
 809e2c1:  je 809e353
 809e2c7:  add DWORD PTR [ebp-0x1cc], 0x1
 809e2ce:  jmp 809e198
 809e2d3:  mov edi, 0xffffffe8
 809e2d9:  mov ebx, DWORD PTR [ebp-0x2a4]
 809e2df:  mov ecx, DWORD PTR [ebp-0x2e0]
 809e2e5:  mov DWORD PTR [ecx+edi], ebx
 809e2e8:  jmp 809cff3
 809e2ed:  mov ebx, DWORD PTR [ebp-0x204]
 809e2f3:  add ebx, ebx
 809e2f5:  cmp ebx, 0x100
 809e2fb:  mov DWORD PTR [ebp-0x20c], ebx
 809e301:  jae 809e30d
 809e303:  mov DWORD PTR [ebp-0x20c], 0x100
 809e30d:  mov eax, DWORD PTR [ebp-0x20c]
 809e313:  mov ecx, DWORD PTR [ebp-0x210]
 809e319:  add eax, 0x12
 809e31c:  and eax, 0xfc
 809e31f:  sub esp, eax
 809e321:  lea ebx, [esp+0x1f]
 809e325:  and ebx, 0xf0
 809e328:  test ecx, ecx
 809e32a:  je 809e348
 809e32c:  mov esi, DWORD PTR [ebp-0x204]
 809e332:  mov eax, DWORD PTR [ebp-0x210]
 809e338:  mov DWORD PTR [esp], ebx
 809e33b:  mov DWORD PTR [esp+0x8], esi
 809e33f:  mov DWORD PTR [esp+0x4], eax
 809e343:  call 804efc0
 809e348:  mov DWORD PTR [ebp-0x210], ebx
 809e34e:  jmp 809e136
 809e353:  mov edi, 0xffffffe8
 809e359:  mov ebx, DWORD PTR [ebp-0x2e0]
 809e35f:  mov edi, DWORD PTR [ebx+edi]
 809e362:  mov DWORD PTR [ebp-0x2a4], edi
 809e368:  jmp 809cff3
 809e36d:  cmp ebx, 0xa
 809e370:  jne 809cff3
 809e376:  mov edx, edi
 809e378:  test dl, dl
 809e37a:  je 809df85
 809e380:  mov ecx, DWORD PTR [ebp-0x294]
 809e386:  mov DWORD PTR [esp], ecx
 809e389:  call 804eea0
 809e38e:  cmp eax, 0x10
 809e391:  ja 809df85
 809e397:  mov ebx, DWORD PTR [ebp-0x294]
 809e39d:  add eax, 0x1
 809e3a0:  lea esi, [ebp-0x106]
 809e3a6:  mov DWORD PTR [esp+0x8], eax
 809e3aa:  mov DWORD PTR [esp], esi
 809e3ad:  mov DWORD PTR [esp+0x4], ebx
 809e3b1:  call 804efc0
 809e3b6:  jmp 809df85
 809e3bb:  mov edx, DWORD PTR [ebp-0x278]
 809e3c1:  lea eax, [ebx+0x30]
 809e3c4:  mov DWORD PTR [esp], eax
 809e3c7:  mov DWORD PTR [esp+0x4], edx
 809e3cb:  call 80744e0
 809e3d0:  mov DWORD PTR [ebp+ebx*4-0xe4], eax
 809e3d7:  jmp 809df32
 809e3dc:  mov edx, DWORD PTR [ebp-0x204]
 809e3e2:  test edx, edx
 809e3e4:  je 809dfaf
 809e3ea:  mov esi, DWORD PTR [ebp-0x2ac]
 809e3f0:  movzx edx, BYTE PTR [ebp-0x200]
 809e3f7:  movzx ecx, BYTE PTR [ebp-0x1bd]
 809e3fe:  mov eax, DWORD PTR [esi+0x38]
 809e401:  cmp cl, BYTE PTR [eax+edx*4]
 809e404:  jne 809dfaf
 809e40a:  mov ebx, DWORD PTR [ebp-0x20c]
 809e410:  cmp DWORD PTR [ebp-0x204], ebx
 809e416:  je 809e521
 809e41c:  mov ebx, DWORD PTR [ebp-0x204]
 809e422:  movzx ecx, BYTE PTR [ebp-0x1bd]
 809e429:  mov esi, DWORD PTR [ebp-0x210]
 809e42f:  mov BYTE PTR [esi+ebx], cl
 809e432:  add ebx, 0x1
 809e435:  mov DWORD PTR [ebp-0x204], ebx
 809e43b:  mov BYTE PTR [ebp-0x2a0], 0x1
 809e442:  mov BYTE PTR [ebp-0x29f], 0x1
 809e449:  jmp 809e155
 809e44e:  mov ebx, DWORD PTR [ebp-0x248]
 809e454:  cmp DWORD PTR [ebp-0x234], ebx
 809e45a:  jae 809e4d7
 809e45c:  cmp DWORD PTR [ebp-0x200], 0xff
 809e463:  je 809e482
 809e465:  movzx eax, BYTE PTR [ebp-0x200]
 809e46c:  mov esi, DWORD PTR [ebp+0x8]
 809e46f:  sub DWORD PTR [ebp-0x1cc], 0x1
 809e476:  mov DWORD PTR [esp+0x4], eax
 809e47a:  mov DWORD PTR [esp], esi
 809e47d:  call 8068600
 809e482:  mov esi, DWORD PTR [ebp-0x248]
 809e488:  sub esi, 0x1
 809e48b:  cmp DWORD PTR [ebp-0x234], esi
 809e491:  jae 809e4ce
 809e493:  mov ebx, esi
 809e495:  movzx eax, BYTE PTR [ebx]
 809e498:  sub ebx, 0x1
 809e49b:  mov DWORD PTR [esp+0x4], eax
 809e49f:  mov eax, DWORD PTR [ebp+0x8]
 809e4a2:  mov DWORD PTR [esp], eax
 809e4a5:  call 8068600
 809e4aa:  cmp DWORD PTR [ebp-0x234], ebx
 809e4b0:  jb 809e495
 809e4b2:  mov edx, DWORD PTR [ebp-0x248]
 809e4b8:  mov eax, DWORD PTR [ebp-0x234]
 809e4be:  sub edx, 0x2
 809e4c1:  sub eax, 0x1
 809e4c4:  sub eax, edx
 809e4c6:  add DWORD PTR [ebp-0x1cc], eax
 809e4cc:  add esi, eax
 809e4ce:  movzx esi, BYTE PTR [esi]
 809e4d1:  mov DWORD PTR [ebp-0x200], esi
 809e4d7:  add DWORD PTR [ebp-0x24c], 0x1
 809e4de:  add DWORD PTR [ebp-0x234], 0x11
 809e4e5:  cmp DWORD PTR [ebp-0x24c], 0xc
 809e4ec:  jne 809dfc5
 809e4f2:  cmp DWORD PTR [ebp-0x200], 0xff
 809e4f9:  je 809cff3
 809e4ff:  movzx eax, BYTE PTR [ebp-0x200]
 809e506:  mov edx, DWORD PTR [ebp+0x8]
 809e509:  sub DWORD PTR [ebp-0x1cc], 0x1
 809e510:  mov DWORD PTR [esp+0x4], eax
 809e514:  mov DWORD PTR [esp], edx
 809e517:  call 8068600
 809e51c:  jmp 809cff3
 809e521:  mov esi, DWORD PTR [ebp-0x204]
 809e527:  add esi, esi
 809e529:  cmp esi, 0x100
 809e52f:  mov DWORD PTR [ebp-0x20c], esi
 809e535:  jae 809e541
 809e537:  mov DWORD PTR [ebp-0x20c], 0x100
 809e541:  mov eax, DWORD PTR [ebp-0x20c]
 809e547:  add eax, 0x12
 809e54a:  and eax, 0xfc
 809e54d:  sub esp, eax
 809e54f:  mov eax, DWORD PTR [ebp-0x210]
 809e555:  lea ebx, [esp+0x1f]
 809e559:  and ebx, 0xf0
 809e55c:  test eax, eax
 809e55e:  je 809e57c
 809e560:  mov eax, DWORD PTR [ebp-0x204]
 809e566:  mov edx, DWORD PTR [ebp-0x210]
 809e56c:  mov DWORD PTR [esp], ebx
 809e56f:  mov DWORD PTR [esp+0x8], eax
 809e573:  mov DWORD PTR [esp+0x4], edx
 809e577:  call 804efc0
 809e57c:  mov DWORD PTR [ebp-0x210], ebx
 809e582:  jmp 809e41c
 809e587:  mov DWORD PTR [ebp-0x200], ecx
 809e58d:  test dl, dl
 809e58f:  jne 809e44e
 809e595:  mov eax, DWORD PTR [ebp-0x2b4]
 809e59b:  test eax, eax
 809e59d:  jle 809e5a5
 809e59f:  mov DWORD PTR [ebp-0x2b4], ebx
 809e5a5:  cmp DWORD PTR [ebp-0x24c], 0x9
 809e5ac:  jg 809e64d
 809e5b2:  mov edx, DWORD PTR [ebp-0x20c]
 809e5b8:  cmp DWORD PTR [ebp-0x204], edx
 809e5be:  je 809e5e7
 809e5c0:  movzx eax, BYTE PTR [ebp-0x24c]
 809e5c7:  mov edx, DWORD PTR [ebp-0x204]
 809e5cd:  mov ecx, DWORD PTR [ebp-0x210]
 809e5d3:  add eax, 0x30
 809e5d6:  mov BYTE PTR [ecx+edx], al
 809e5d9:  add edx, 0x1
 809e5dc:  mov DWORD PTR [ebp-0x204], edx
 809e5e2:  jmp 809e155
 809e5e7:  mov ecx, DWORD PTR [ebp-0x204]
 809e5ed:  add ecx, ecx
 809e5ef:  cmp ecx, 0x100
 809e5f5:  mov DWORD PTR [ebp-0x20c], ecx
 809e5fb:  jae 809e607
 809e5fd:  mov DWORD PTR [ebp-0x20c], 0x100
 809e607:  mov eax, DWORD PTR [ebp-0x20c]
 809e60d:  add eax, 0x12
 809e610:  and eax, 0xfc
 809e613:  sub esp, eax
 809e615:  mov eax, DWORD PTR [ebp-0x210]
 809e61b:  lea ebx, [esp+0x1f]
 809e61f:  and ebx, 0xf0
 809e622:  test eax, eax
 809e624:  je 809e642
 809e626:  mov esi, DWORD PTR [ebp-0x204]
 809e62c:  mov eax, DWORD PTR [ebp-0x210]
 809e632:  mov DWORD PTR [esp], ebx
 809e635:  mov DWORD PTR [esp+0x8], esi
 809e639:  mov DWORD PTR [esp+0x4], eax
 809e63d:  call 804efc0
 809e642:  mov DWORD PTR [ebp-0x210], ebx
 809e648:  jmp 809e5c0
 809e64d:  movzx eax, BYTE PTR [ebp-0x2a0]
 809e654:  xor eax, 0x1
 809e657:  cmp DWORD PTR [ebp-0x24c], 0xb
 809e65e:  je 809e74d
 809e664:  cmp DWORD PTR [ebp-0x24c], 0xa
 809e66b:  jne 809e4f2
 809e671:  cmp BYTE PTR [ebp-0x1be], 0x0
 809e678:  je 809e4f2
 809e67e:  test al, al
 809e680:  je 809e4f2
 809e686:  mov ebx, DWORD PTR [ebp-0x294]
 809e68c:  movzx eax, BYTE PTR [ebx]
 809e68f:  test al, al
 809e691:  je 809e6da
 809e693:  mov esi, DWORD PTR [ebp-0x204]
 809e699:  mov edi, ebx
 809e69b:  add esi, esi
 809e69d:  mov DWORD PTR [ebp-0x238], esi
 809e6a3:  mov edx, DWORD PTR [ebp-0x20c]
 809e6a9:  cmp DWORD PTR [ebp-0x204], edx
 809e6af:  je 809e6f1
 809e6b1:  mov edx, DWORD PTR [ebp-0x204]
 809e6b7:  add edi, 0x1
 809e6ba:  mov ecx, DWORD PTR [ebp-0x210]
 809e6c0:  mov BYTE PTR [ecx+edx], al
 809e6c3:  add edx, 0x1
 809e6c6:  mov DWORD PTR [ebp-0x204], edx
 809e6cc:  movzx eax, BYTE PTR [edi]
 809e6cf:  add DWORD PTR [ebp-0x238], 0x2
 809e6d6:  test al, al
 809e6d8:  jne 809e6a3
 809e6da:  mov BYTE PTR [ebp-0x2a0], 0x0
 809e6e1:  jmp 809e155
 809e6e6:  mov ecx, DWORD PTR [ebp-0x200]
 809e6ec:  jmp 809e02c
 809e6f1:  mov esi, DWORD PTR [ebp-0x238]
 809e6f7:  cmp esi, 0x100
 809e6fd:  jae 809e704
 809e6ff:  mov esi, 0x100
 809e704:  lea eax, [esi+0x12]
 809e707:  and eax, 0xfc
 809e70a:  sub esp, eax
 809e70c:  mov eax, DWORD PTR [ebp-0x210]
 809e712:  lea ebx, [esp+0x1f]
 809e716:  and ebx, 0xf0
 809e719:  test eax, eax
 809e71b:  je 809e739
 809e71d:  mov ecx, DWORD PTR [ebp-0x20c]
 809e723:  mov eax, DWORD PTR [ebp-0x210]
 809e729:  mov DWORD PTR [esp], ebx
 809e72c:  mov DWORD PTR [esp+0x8], ecx
 809e730:  mov DWORD PTR [esp+0x4], eax
 809e734:  call 804efc0
 809e739:  movzx eax, BYTE PTR [edi]
 809e73c:  mov DWORD PTR [ebp-0x210], ebx
 809e742:  mov DWORD PTR [ebp-0x20c], esi
 809e748:  jmp 809e6b1
 809e74d:  test al, al
 809e74f:  je 809e4f2
 809e755:  mov ebx, DWORD PTR [ebp-0x298]
 809e75b:  movzx eax, BYTE PTR [ebx]
 809e75e:  mov BYTE PTR [ebp-0x2a0], 0x1
 809e765:  test al, al
 809e767:  je 809e155
 809e76d:  mov esi, DWORD PTR [ebp-0x204]
 809e773:  add esi, esi
 809e775:  mov DWORD PTR [ebp-0x23c], esi
 809e77b:  mov esi, DWORD PTR [ebp-0x298]
 809e781:  mov edi, DWORD PTR [ebp-0x20c]
 809e787:  cmp DWORD PTR [ebp-0x204], edi
 809e78d:  mov ebx, DWORD PTR [ebp-0x210]
 809e793:  je 809f3a3
 809e799:  mov ecx, DWORD PTR [ebp-0x204]
 809e79f:  add esi, 0x1
 809e7a2:  mov BYTE PTR [ebx+ecx], al
 809e7a5:  add ecx, 0x1
 809e7a8:  mov DWORD PTR [ebp-0x204], ecx
 809e7ae:  movzx eax, BYTE PTR [esi]
 809e7b1:  add DWORD PTR [ebp-0x23c], 0x2
 809e7b8:  test al, al
 809e7ba:  je 809f38b
 809e7c0:  mov DWORD PTR [ebp-0x210], ebx
 809e7c6:  mov DWORD PTR [ebp-0x20c], edi
 809e7cc:  jmp 809e781
 809e7ce:  mov eax, DWORD PTR [ebp-0x218]
 809e7d4:  mov DWORD PTR [esp], edx
 809e7d7:  shl eax, 0x3
 809e7da:  mov DWORD PTR [esp+0x4], eax
 809e7de:  call 804db10
 809e7e3:  test eax, eax
 809e7e5:  je 809e816
 809e7e7:  mov ecx, DWORD PTR [ebp-0x284]
 809e7ed:  mov ebx, DWORD PTR [ebp-0x218]
 809e7f3:  mov DWORD PTR [ecx], eax
 809e7f5:  add eax, esi
 809e7f7:  mov DWORD PTR [ebp-0x288], eax
 809e7fd:  add ebx, ebx
 809e7ff:  jmp 809ce20
 809e804:  add DWORD PTR [ebp-0x1cc], 0x1
 809e80b:  mov ebx, DWORD PTR [ebp-0x200]
 809e811:  jmp 8099c98
 809e816:  mov ebx, DWORD PTR [ebp-0x218]
 809e81c:  mov edx, DWORD PTR [ebp-0x284]
 809e822:  add ebx, 0x1
 809e825:  lea eax, [ebx*4]
 809e82c:  mov DWORD PTR [esp+0x4], eax
 809e830:  mov eax, DWORD PTR [edx]
 809e832:  mov DWORD PTR [esp], eax
 809e835:  call 804db10
 809e83a:  test eax, eax
 809e83c:  je 809f52c
 809e842:  mov edx, DWORD PTR [ebp-0x284]
 809e848:  mov DWORD PTR [edx], eax
 809e84a:  add eax, esi
 809e84c:  mov DWORD PTR [ebp-0x288], eax
 809e852:  jmp 809ce20
 809e857:  mov DWORD PTR [esp], edx
 809e85a:  call 8068f50
 809e85f:  mov DWORD PTR [ebp-0x200], eax
 809e865:  add eax, 0x1
 809e868:  je 80995a4
 809e86e:  jmp 809b074
 809e873:  mov esi, DWORD PTR [ebp-0x21c]
 809e879:  add esi, 0x1
 809e87c:  mov DWORD PTR [ebp-0x1cc], esi
 809e882:  jmp 809e8a9
 809e884:  lea esi, [esi]
 809e888:  mov eax, DWORD PTR [ebp-0x1cc]
 809e88e:  sub ebx, 0x1
 809e891:  add DWORD PTR [ebp-0x220], 0x1
 809e898:  add eax, 0x1
 809e89b:  test ebx, ebx
 809e89d:  jle 8099542
 809e8a3:  mov DWORD PTR [ebp-0x1cc], eax
 809e8a9:  mov edx, DWORD PTR [ebp+0x8]
 809e8ac:  mov eax, DWORD PTR [edx+0x4]
 809e8af:  cmp eax, DWORD PTR [edx+0x8]
 809e8b2:  jae 809e8da
 809e8b4:  mov ecx, edx
 809e8b6:  movzx edx, BYTE PTR [eax]
 809e8b9:  add eax, 0x1
 809e8bc:  mov DWORD PTR [ecx+0x4], eax
 809e8bf:  mov esi, DWORD PTR [ebp-0x220]
 809e8c5:  movzx esi, BYTE PTR [esi]
 809e8c8:  cmp esi, edx
 809e8ca:  mov DWORD PTR [ebp-0x200], esi
 809e8d0:  je 809e888
 809e8d2:  movzx eax, dl
 809e8d5:  jmp 809aa9a
 809e8da:  mov DWORD PTR [esp], edx
 809e8dd:  call 8068f50
 809e8e2:  cmp eax, 0xff
 809e8e5:  mov edx, eax
 809e8e7:  je 80995a4
 809e8ed:  lea esi, [esi]
 809e8f0:  jmp 809e8bf
 809e8f2:  mov DWORD PTR [esp], 0x80c6817
 809e8f9:  call 8074460
 809e8fe:  mov ebx, DWORD PTR [ebp-0x2a8]
 809e904:  mov DWORD PTR [ebp-0x26c], eax
 809e90a:  mov ebx, DWORD PTR [ebx+0x70]
 809e90d:  mov DWORD PTR [ebp-0x2d0], ebx
 809e913:  sub ebx, 0x1
 809e916:  test eax, eax
 809e918:  mov DWORD PTR [ebp-0x270], ebx
 809e91e:  jne 809f21f
 809e924:  mov ebx, DWORD PTR [ebp-0x2b0]
 809e92a:  mov DWORD PTR [ebp-0x274], 0x0
 809e934:  and ebx, 0x80
 809e93a:  mov DWORD PTR [ebp-0x2c8], ebx
 809e940:  cmp DWORD PTR [ebp-0x200], 0xff
 809e947:  je 8099ead
 809e94d:  mov ecx, DWORD PTR [ebp-0x2b4]
 809e953:  test ecx, ecx
 809e955:  je 8099ead
 809e95b:  lea ebx, [ebp-0x8c]
 809e961:  mov DWORD PTR [ebp-0x268], 0x0
 809e96b:  mov DWORD PTR [ebp-0x2dc], ebx
 809e971:  mov esi, DWORD PTR [ebp-0x2b4]
 809e977:  test esi, esi
 809e979:  mov DWORD PTR [ebp-0x260], esi
 809e97f:  jle 809ee08
 809e985:  mov ebx, DWORD PTR [ebp-0x26c]
 809e98b:  test ebx, ebx
 809e98d:  jne 809f204
 809e993:  mov ebx, DWORD PTR [ebp-0x268]
 809e999:  mov esi, DWORD PTR [ebp-0x2a8]
 809e99f:  mov edx, DWORD PTR [ebp-0x2dc]
 809e9a5:  mov eax, DWORD PTR [esi+ebx*4+0x74]
 809e9a9:  mov DWORD PTR [edx+ebx*4], eax
 809e9ac:  mov ecx, DWORD PTR [ebp-0x274]
 809e9b2:  test ecx, ecx
 809e9b4:  je 809e9f5
 809e9b6:  mov ebx, DWORD PTR [ebp-0x2dc]
 809e9bc:  mov ecx, DWORD PTR [ebp-0x268]
 809e9c2:  mov eax, DWORD PTR [ebx+ecx*4]
 809e9c5:  xor ebx, ebx
 809e9c7:  nop
 809e9c8:  mov DWORD PTR [esp+0x4], 0x0
 809e9d0:  add ebx, 0x1
 809e9d3:  mov DWORD PTR [esp], eax
 809e9d6:  call 806c400
 809e9db:  add eax, 0x1
 809e9de:  cmp DWORD PTR [ebp-0x274], ebx
 809e9e4:  jg 809e9c8
 809e9e6:  mov esi, DWORD PTR [ebp-0x268]
 809e9ec:  mov edx, DWORD PTR [ebp-0x2dc]
 809e9f2:  mov DWORD PTR [edx+esi*4], eax
 809e9f5:  mov ecx, DWORD PTR [ebp-0x268]
 809e9fb:  mov ebx, DWORD PTR [ebp-0x2dc]
 809ea01:  mov ecx, DWORD PTR [ebx+ecx*4]
 809ea04:  mov DWORD PTR [ebp-0x1dc], ecx
 809ea0a:  movzx edx, BYTE PTR [ecx]
 809ea0d:  mov esi, ecx
 809ea0f:  movzx eax, dl
 809ea12:  cmp eax, DWORD PTR [ebp-0x200]
 809ea18:  jne 809ea95
 809ea1a:  mov esi, ecx
 809ea1c:  add esi, 0x1
 809ea1f:  cmp BYTE PTR [ecx+0x1], 0x0
 809ea23:  je 809ee1d
 809ea29:  add DWORD PTR [ebp-0x1cc], 0x1
 809ea30:  mov ebx, DWORD PTR [ebp-0x1cc]
 809ea36:  jmp 809ea5f
 809ea38:  add esi, 0x1
 809ea3b:  cmp BYTE PTR [esi], 0x0
 809ea3e:  je 809ee17
 809ea44:  mov eax, DWORD PTR [ebp-0x1cc]
 809ea4a:  mov edx, DWORD PTR [ebp-0x260]
 809ea50:  add eax, 0x1
 809ea53:  test edx, edx
 809ea55:  je 809ea9d
 809ea57:  mov DWORD PTR [ebp-0x1cc], eax
 809ea5d:  mov ebx, eax
 809ea5f:  mov edx, DWORD PTR [ebp+0x8]
 809ea62:  sub ebx, 0x1
 809ea65:  mov eax, DWORD PTR [edx+0x4]
 809ea68:  cmp eax, DWORD PTR [edx+0x8]
 809ea6b:  jae 809ee68
 809ea71:  movzx ecx, BYTE PTR [eax]
 809ea74:  add eax, 0x1
 809ea77:  mov DWORD PTR [edx+0x4], eax
 809ea7a:  mov DWORD PTR [ebp-0x200], ecx
 809ea80:  sub DWORD PTR [ebp-0x260], 0x1
 809ea87:  movzx edx, BYTE PTR [esi]
 809ea8a:  movzx eax, dl
 809ea8d:  cmp DWORD PTR [ebp-0x200], eax
 809ea93:  je 809ea38
 809ea95:  test dl, dl
 809ea97:  je 809ee23
 809ea9d:  cmp DWORD PTR [ebp-0x1dc], esi
 809eaa3:  jae 809eb14
 809eaa5:  cmp DWORD PTR [ebp-0x200], 0xff
 809eaac:  je 809eacb
 809eaae:  movzx eax, BYTE PTR [ebp-0x200]
 809eab5:  mov ecx, DWORD PTR [ebp+0x8]
 809eab8:  sub DWORD PTR [ebp-0x1cc], 0x1
 809eabf:  mov DWORD PTR [esp+0x4], eax
 809eac3:  mov DWORD PTR [esp], ecx
 809eac6:  call 8068600
 809eacb:  lea edi, [esi-0x1]
 809eace:  cmp DWORD PTR [ebp-0x1dc], edi
 809ead4:  jae 809eb0b
 809ead6:  mov ebx, edi
 809ead8:  movzx eax, BYTE PTR [ebx]
 809eadb:  sub ebx, 0x1
 809eade:  mov DWORD PTR [esp+0x4], eax
 809eae2:  mov eax, DWORD PTR [ebp+0x8]
 809eae5:  mov DWORD PTR [esp], eax
 809eae8:  call 8068600
 809eaed:  cmp DWORD PTR [ebp-0x1dc], ebx
 809eaf3:  jb 809ead8
 809eaf5:  mov eax, DWORD PTR [ebp-0x1dc]
 809eafb:  lea edx, [esi-0x2]
 809eafe:  sub eax, 0x1
 809eb01:  sub eax, edx
 809eb03:  add DWORD PTR [ebp-0x1cc], eax
 809eb09:  add edi, eax
 809eb0b:  movzx edi, BYTE PTR [edi]
 809eb0e:  mov DWORD PTR [ebp-0x200], edi
 809eb14:  mov edx, DWORD PTR [ebp-0x1dc]
 809eb1a:  mov DWORD PTR [esp+0x4], 0x0
 809eb22:  mov DWORD PTR [esp], edx
 809eb25:  call 806c400
 809eb2a:  mov ecx, DWORD PTR [ebp-0x268]
 809eb30:  mov ebx, DWORD PTR [ebp-0x2dc]
 809eb36:  add eax, 0x1
 809eb39:  mov DWORD PTR [ebx+ecx*4], eax
 809eb3c:  add ecx, 0x1
 809eb3f:  cmp ecx, 0xa
 809eb42:  mov DWORD PTR [ebp-0x268], ecx
 809eb48:  jne 809e971
 809eb4e:  mov edx, DWORD PTR [ebp-0x274]
 809eb54:  mov ecx, DWORD PTR [ebp-0x270]
 809eb5a:  add edx, 0x1
 809eb5d:  cmp edx, ecx
 809eb5f:  mov DWORD PTR [ebp-0x1d8], edx
 809eb65:  jg 809eea2
 809eb6b:  mov DWORD PTR [ebp-0x268], 0x0
 809eb75:  mov ebx, DWORD PTR [ebp-0x2b4]
 809eb7b:  test ebx, ebx
 809eb7d:  jle 809ed83
 809eb83:  mov eax, DWORD PTR [ebp-0x2dc]
 809eb89:  mov esi, DWORD PTR [ebp-0x268]
 809eb8f:  mov esi, DWORD PTR [eax+esi*4]
 809eb92:  mov DWORD PTR [ebp-0x1d4], esi
 809eb98:  movzx edx, BYTE PTR [esi]
 809eb9b:  movzx eax, dl
 809eb9e:  cmp eax, DWORD PTR [ebp-0x200]
 809eba4:  jne 809ec28
 809ebaa:  mov edx, esi
 809ebac:  add esi, 0x1
 809ebaf:  cmp BYTE PTR [edx+0x1], 0x0
 809ebb3:  je 809ed8d
 809ebb9:  add DWORD PTR [ebp-0x1cc], 0x1
 809ebc0:  mov ecx, DWORD PTR [ebp-0x1cc]
 809ebc6:  jmp 809ebe9
 809ebc8:  add esi, 0x1
 809ebcb:  cmp BYTE PTR [esi], 0x0
 809ebce:  je 809ed8d
 809ebd4:  mov edx, DWORD PTR [ebp-0x1cc]
 809ebda:  add edx, 0x1
 809ebdd:  test ebx, ebx
 809ebdf:  je 809ec36
 809ebe1:  mov DWORD PTR [ebp-0x1cc], edx
 809ebe7:  mov ecx, edx
 809ebe9:  mov edx, DWORD PTR [ebp+0x8]
 809ebec:  sub ecx, 0x1
 809ebef:  mov DWORD PTR [ebp-0x1b4], ecx
 809ebf5:  mov eax, DWORD PTR [edx+0x4]
 809ebf8:  cmp eax, DWORD PTR [edx+0x8]
 809ebfb:  jae 809edc8
 809ec01:  movzx ecx, BYTE PTR [eax]
 809ec04:  add eax, 0x1
 809ec07:  mov DWORD PTR [edx+0x4], eax
 809ec0a:  mov DWORD PTR [ebp-0x200], ecx
 809ec10:  movzx edx, BYTE PTR [esi]
 809ec13:  sub ebx, 0x1
 809ec16:  movzx eax, dl
 809ec19:  cmp eax, DWORD PTR [ebp-0x200]
 809ec1f:  je 809ebc8
 809ec21:  lea esi, [esi]
 809ec28:  test dl, dl
 809ec2a:  je 809ed93
 809ec30:  mov eax, DWORD PTR [ebp-0x200]
 809ec36:  cmp DWORD PTR [ebp-0x1d4], esi
 809ec3c:  mov DWORD PTR [ebp-0x200], eax
 809ec42:  jae 809ecac
 809ec44:  cmp eax, 0xff
 809ec47:  je 809ec62
 809ec49:  mov edx, DWORD PTR [ebp+0x8]
 809ec4c:  movzx eax, al
 809ec4f:  sub DWORD PTR [ebp-0x1cc], 0x1
 809ec56:  mov DWORD PTR [esp+0x4], eax
 809ec5a:  mov DWORD PTR [esp], edx
 809ec5d:  call 8068600
 809ec62:  lea edi, [esi-0x1]
 809ec65:  cmp DWORD PTR [ebp-0x1d4], edi
 809ec6b:  jae 809eca3
 809ec6d:  mov ebx, edi
 809ec6f:  nop
 809ec70:  movzx eax, BYTE PTR [ebx]
 809ec73:  sub ebx, 0x1
 809ec76:  mov ecx, DWORD PTR [ebp+0x8]
 809ec79:  mov DWORD PTR [esp+0x4], eax
 809ec7d:  mov DWORD PTR [esp], ecx
 809ec80:  call 8068600
 809ec85:  cmp DWORD PTR [ebp-0x1d4], ebx
 809ec8b:  jb 809ec70
 809ec8d:  mov eax, DWORD PTR [ebp-0x1d4]
 809ec93:  lea edx, [esi-0x2]
 809ec96:  sub eax, 0x1
 809ec99:  sub eax, edx
 809ec9b:  add DWORD PTR [ebp-0x1cc], eax
 809eca1:  add edi, eax
 809eca3:  movzx edi, BYTE PTR [edi]
 809eca6:  mov DWORD PTR [ebp-0x200], edi
 809ecac:  mov ebx, DWORD PTR [ebp-0x1d4]
 809ecb2:  mov DWORD PTR [esp+0x4], 0x0
 809ecba:  mov DWORD PTR [esp], ebx
 809ecbd:  call 806c400
 809ecc2:  mov esi, DWORD PTR [ebp-0x268]
 809ecc8:  mov edx, DWORD PTR [ebp-0x2dc]
 809ecce:  add eax, 0x1
 809ecd1:  mov DWORD PTR [edx+esi*4], eax
 809ecd4:  add esi, 0x1
 809ecd7:  cmp esi, 0xa
 809ecda:  mov DWORD PTR [ebp-0x268], esi
 809ece0:  jne 809eb75
 809ece6:  add DWORD PTR [ebp-0x1d8], 0x1
 809eced:  mov ebx, DWORD PTR [ebp-0x270]
 809ecf3:  cmp DWORD PTR [ebp-0x1d8], ebx
 809ecf9:  jle 809eb6b
 809ecff:  cmp DWORD PTR [ebp-0x268], 0x9
 809ed06:  jg 809eea2
 809ed0c:  mov esi, DWORD PTR [ebp-0x268]
 809ed12:  add esi, 0x30
 809ed15:  mov DWORD PTR [ebp-0x200], esi
 809ed1b:  movzx ebx, BYTE PTR [ebp-0x200]
 809ed22:  mov ecx, DWORD PTR [ebp-0x20c]
 809ed28:  cmp DWORD PTR [ebp-0x280], ecx
 809ed2e:  je 809f075
 809ed34:  mov esi, DWORD PTR [ebp-0x214]
 809ed3a:  xor eax, eax
 809ed3c:  mov ecx, DWORD PTR [ebp-0x280]
 809ed42:  mov BYTE PTR [esi+ecx], bl
 809ed45:  cmp DWORD PTR [ebp-0x2b4], 0x0
 809ed4c:  setg al
 809ed4f:  sub DWORD PTR [ebp-0x2b4], eax
 809ed55:  cmp DWORD PTR [ebp-0x200], 0xff
 809ed5c:  jne 809f048
 809ed62:  mov edi, 0xffffffe8
 809ed68:  mov edx, DWORD PTR [ebp-0x2a4]
 809ed6e:  mov eax, DWORD PTR [ebp-0x2e0]
 809ed74:  mov DWORD PTR [eax+edi], edx
 809ed77:  add DWORD PTR [ebp-0x280], 0x1
 809ed7e:  jmp 809e940
 809ed83:  mov ebx, 0x7fffffff
 809ed88:  jmp 809eb83
 809ed8d:  mov DWORD PTR [ebp-0x200], eax
 809ed93:  mov eax, DWORD PTR [ebp-0x2b4]
 809ed99:  test eax, eax
 809ed9b:  jle 809eda3
 809ed9d:  mov DWORD PTR [ebp-0x2b4], ebx
 809eda3:  cmp DWORD PTR [ebp-0x268], 0x9
 809edaa:  jg 809ece6
 809edb0:  mov ecx, DWORD PTR [ebp-0x1d8]
 809edb6:  mov DWORD PTR [ebp-0x274], ecx
 809edbc:  mov DWORD PTR [ebp-0x270], ecx
 809edc2:  jmp 809ed0c
 809edc7:  nop
 809edc8:  mov DWORD PTR [esp], edx
 809edcb:  call 8068f50
 809edd0:  mov DWORD PTR [ebp-0x200], eax
 809edd6:  add eax, 0x1
 809edd9:  jne 809ec10
 809eddf:  mov edi, 0xffffffe8
 809ede5:  mov ecx, DWORD PTR [ebp-0x2e0]
 809edeb:  mov eax, DWORD PTR [ebp-0x1b4]
 809edf1:  mov edi, DWORD PTR [ecx+edi]
 809edf4:  mov DWORD PTR [ebp-0x2a4], edi
 809edfa:  movzx edx, BYTE PTR [esi]
 809edfd:  mov DWORD PTR [ebp-0x1cc], eax
 809ee03:  jmp 809ec28
 809ee08:  mov DWORD PTR [ebp-0x260], 0x7fffffff
 809ee12:  jmp 809e985
 809ee17:  mov eax, DWORD PTR [ebp-0x200]
 809ee1d:  mov DWORD PTR [ebp-0x200], eax
 809ee23:  mov eax, DWORD PTR [ebp-0x2b4]
 809ee29:  test eax, eax
 809ee2b:  jle 809ee39
 809ee2d:  mov edx, DWORD PTR [ebp-0x260]
 809ee33:  mov DWORD PTR [ebp-0x2b4], edx
 809ee39:  mov esi, DWORD PTR [ebp-0x274]
 809ee3f:  cmp DWORD PTR [ebp-0x268], 0xa
 809ee46:  mov DWORD PTR [ebp-0x270], esi
 809ee4c:  jne 809ecff
 809ee52:  mov eax, DWORD PTR [ebp-0x274]
 809ee58:  mov DWORD PTR [ebp-0x270], eax
 809ee5e:  jmp 809eb4e
 809ee63:  nop
 809ee64:  lea esi, [esi]
 809ee68:  mov DWORD PTR [esp], edx
 809ee6b:  call 8068f50
 809ee70:  mov DWORD PTR [ebp-0x200], eax
 809ee76:  add eax, 0x1
 809ee79:  jne 809ea80
 809ee7f:  mov edi, 0xffffffe8
 809ee85:  mov eax, DWORD PTR [ebp-0x2e0]
 809ee8b:  mov edi, DWORD PTR [eax+edi]
 809ee8e:  mov DWORD PTR [ebp-0x2a4], edi
 809ee94:  movzx edx, BYTE PTR [esi]
 809ee97:  mov DWORD PTR [ebp-0x1cc], ebx
 809ee9d:  jmp 809ea95
 809eea2:  mov eax, DWORD PTR [ebp-0x2c8]
 809eea8:  test eax, eax
 809eeaa:  je 8099ead
 809eeb0:  mov eax, DWORD PTR [ebp-0x2b4]
 809eeb6:  test eax, eax
 809eeb8:  mov DWORD PTR [ebp-0x258], eax
 809eebe:  jle 809f1f5
 809eec4:  mov ecx, DWORD PTR [ebp-0x294]
 809eeca:  movzx edx, BYTE PTR [ecx]
 809eecd:  movzx eax, dl
 809eed0:  cmp DWORD PTR [ebp-0x200], eax
 809eed6:  jne 809f00b
 809eedc:  mov ebx, DWORD PTR [ebp-0x280]
 809eee2:  mov esi, DWORD PTR [ebp-0x1cc]
 809eee8:  mov DWORD PTR [ebp-0x25c], ecx
 809eeee:  add ebx, ebx
 809eef0:  add esi, 0x1
 809eef3:  mov DWORD PTR [ebp-0x224], ebx
 809eef9:  jmp 809ef8c
 809eefe:  xchg ax, ax
 809ef00:  mov ecx, DWORD PTR [ebp-0x280]
 809ef06:  movzx ebx, BYTE PTR [ebp-0x200]
 809ef0d:  mov eax, DWORD PTR [ebp-0x214]
 809ef13:  mov BYTE PTR [eax+ecx], bl
 809ef16:  add ecx, 0x1
 809ef19:  add DWORD PTR [ebp-0x25c], 0x1
 809ef20:  mov edx, DWORD PTR [ebp-0x25c]
 809ef26:  mov DWORD PTR [ebp-0x280], ecx
 809ef2c:  cmp BYTE PTR [edx], 0x0
 809ef2f:  je 809f026
 809ef35:  mov eax, DWORD PTR [ebp-0x258]
 809ef3b:  test eax, eax
 809ef3d:  je 809f10c
 809ef43:  mov ecx, DWORD PTR [ebp+0x8]
 809ef46:  mov eax, DWORD PTR [ecx+0x4]
 809ef49:  cmp eax, DWORD PTR [ecx+0x8]
 809ef4c:  jae 809f1bb
 809ef52:  movzx ebx, BYTE PTR [eax]
 809ef55:  add eax, 0x1
 809ef58:  mov DWORD PTR [ecx+0x4], eax
 809ef5b:  mov DWORD PTR [ebp-0x200], ebx
 809ef61:  mov eax, DWORD PTR [ebp-0x25c]
 809ef67:  lea ecx, [esi+0x1]
 809ef6a:  sub DWORD PTR [ebp-0x258], 0x1
 809ef71:  movzx edx, BYTE PTR [eax]
 809ef74:  add DWORD PTR [ebp-0x224], 0x2
 809ef7b:  movzx eax, dl
 809ef7e:  cmp eax, DWORD PTR [ebp-0x200]
 809ef84:  jne 809f1b0
 809ef8a:  mov esi, ecx
 809ef8c:  mov edx, DWORD PTR [ebp-0x20c]
 809ef92:  lea eax, [esi-0x1]
 809ef95:  cmp DWORD PTR [ebp-0x280], edx
 809ef9b:  mov DWORD PTR [ebp-0x1cc], eax
 809efa1:  jne 809ef00
 809efa7:  mov ecx, DWORD PTR [ebp-0x224]
 809efad:  cmp ecx, 0x100
 809efb3:  mov DWORD PTR [ebp-0x20c], ecx
 809efb9:  jae 809efc5
 809efbb:  mov DWORD PTR [ebp-0x20c], 0x100
 809efc5:  mov eax, DWORD PTR [ebp-0x20c]
 809efcb:  add eax, 0x12
 809efce:  and eax, 0xfc
 809efd1:  sub esp, eax
 809efd3:  mov eax, DWORD PTR [ebp-0x214]
 809efd9:  lea edi, [esp+0x1f]
 809efdd:  and edi, 0xf0
 809efe0:  test eax, eax
 809efe2:  je 809f000
 809efe4:  mov ebx, DWORD PTR [ebp-0x280]
 809efea:  mov eax, DWORD PTR [ebp-0x214]
 809eff0:  mov DWORD PTR [esp], edi
 809eff3:  mov DWORD PTR [esp+0x8], ebx
 809eff7:  mov DWORD PTR [esp+0x4], eax
 809effb:  call 804efc0
 809f000:  mov DWORD PTR [ebp-0x214], edi
 809f006:  jmp 809ef00
 809f00b:  mov ecx, DWORD PTR [ebp-0x294]
 809f011:  mov DWORD PTR [ebp-0x25c], ecx
 809f017:  test dl, dl
 809f019:  jne 809f10c
 809f01f:  movzx ebx, BYTE PTR [ebp-0x200]
 809f026:  mov edi, DWORD PTR [ebp-0x2b4]
 809f02c:  test edi, edi
 809f02e:  jle 809f03c
 809f030:  mov edx, DWORD PTR [ebp-0x258]
 809f036:  mov DWORD PTR [ebp-0x2b4], edx
 809f03c:  sub DWORD PTR [ebp-0x280], 0x1
 809f043:  jmp 809ed22
 809f048:  mov ecx, DWORD PTR [ebp+0x8]
 809f04b:  mov eax, DWORD PTR [ecx+0x4]
 809f04e:  cmp eax, DWORD PTR [ecx+0x8]
 809f051:  jae 809f0db
 809f057:  movzx ebx, BYTE PTR [eax]
 809f05a:  add eax, 0x1
 809f05d:  mov esi, DWORD PTR [ebp+0x8]
 809f060:  mov DWORD PTR [ebp-0x200], ebx
 809f066:  mov DWORD PTR [esi+0x4], eax
 809f069:  add DWORD PTR [ebp-0x1cc], 0x1
 809f070:  jmp 809ed77
 809f075:  mov esi, DWORD PTR [ebp-0x280]
 809f07b:  add esi, esi
 809f07d:  cmp esi, 0x100
 809f083:  mov DWORD PTR [ebp-0x20c], esi
 809f089:  jae 809f095
 809f08b:  mov DWORD PTR [ebp-0x20c], 0x100
 809f095:  mov eax, DWORD PTR [ebp-0x20c]
 809f09b:  mov esi, DWORD PTR [ebp-0x214]
 809f0a1:  add eax, 0x12
 809f0a4:  and eax, 0xfc
 809f0a7:  sub esp, eax
 809f0a9:  lea edi, [esp+0x1f]
 809f0ad:  and edi, 0xf0
 809f0b0:  test esi, esi
 809f0b2:  je 809f0d0
 809f0b4:  mov eax, DWORD PTR [ebp-0x280]
 809f0ba:  mov edx, DWORD PTR [ebp-0x214]
 809f0c0:  mov DWORD PTR [esp], edi
 809f0c3:  mov DWORD PTR [esp+0x8], eax
 809f0c7:  mov DWORD PTR [esp+0x4], edx
 809f0cb:  call 804efc0
 809f0d0:  mov DWORD PTR [ebp-0x214], edi
 809f0d6:  jmp 809ed34
 809f0db:  mov DWORD PTR [esp], ecx
 809f0de:  call 8068f50
 809f0e3:  mov DWORD PTR [ebp-0x200], eax
 809f0e9:  add eax, 0x1
 809f0ec:  jne 809f069
 809f0f2:  mov edi, 0xffffffe8
 809f0f8:  mov eax, DWORD PTR [ebp-0x2e0]
 809f0fe:  mov edi, DWORD PTR [eax+edi]
 809f101:  mov DWORD PTR [ebp-0x2a4], edi
 809f107:  jmp 809ed77
 809f10c:  mov ebx, DWORD PTR [ebp-0x25c]
 809f112:  cmp DWORD PTR [ebp-0x294], ebx
 809f118:  jae 8099ead
 809f11e:  cmp DWORD PTR [ebp-0x200], 0xff
 809f125:  je 809f144
 809f127:  movzx eax, BYTE PTR [ebp-0x200]
 809f12e:  mov esi, DWORD PTR [ebp+0x8]
 809f131:  sub DWORD PTR [ebp-0x1cc], 0x1
 809f138:  mov DWORD PTR [esp+0x4], eax
 809f13c:  mov DWORD PTR [esp], esi
 809f13f:  call 8068600
 809f144:  mov esi, DWORD PTR [ebp-0x25c]
 809f14a:  sub esi, 0x1
 809f14d:  cmp esi, DWORD PTR [ebp-0x294]
 809f153:  jbe 809f190
 809f155:  mov ebx, esi
 809f157:  movzx eax, BYTE PTR [ebx]
 809f15a:  sub ebx, 0x1
 809f15d:  mov DWORD PTR [esp+0x4], eax
 809f161:  mov eax, DWORD PTR [ebp+0x8]
 809f164:  mov DWORD PTR [esp], eax
 809f167:  call 8068600
 809f16c:  cmp DWORD PTR [ebp-0x294], ebx
 809f172:  jb 809f157
 809f174:  mov edx, DWORD PTR [ebp-0x25c]
 809f17a:  mov eax, DWORD PTR [ebp-0x294]
 809f180:  sub edx, 0x2
 809f183:  sub eax, 0x1
 809f186:  sub eax, edx
 809f188:  add DWORD PTR [ebp-0x1cc], eax
 809f18e:  add esi, eax
 809f190:  mov eax, DWORD PTR [ebp-0x294]
 809f196:  sub eax, DWORD PTR [ebp-0x25c]
 809f19c:  add DWORD PTR [ebp-0x280], eax
 809f1a2:  movzx esi, BYTE PTR [esi]
 809f1a5:  mov DWORD PTR [ebp-0x200], esi
 809f1ab:  jmp 8099ead
 809f1b0:  mov DWORD PTR [ebp-0x1cc], esi
 809f1b6:  jmp 809f017
 809f1bb:  mov DWORD PTR [esp], ecx
 809f1be:  call 8068f50
 809f1c3:  mov DWORD PTR [ebp-0x200], eax
 809f1c9:  add eax, 0x1
 809f1cc:  jne 809ef61
 809f1d2:  mov edi, 0xffffffe8
 809f1d8:  mov ecx, DWORD PTR [ebp-0x2e0]
 809f1de:  mov ebx, DWORD PTR [ebp-0x25c]
 809f1e4:  mov edi, DWORD PTR [ecx+edi]
 809f1e7:  mov DWORD PTR [ebp-0x2a4], edi
 809f1ed:  movzx edx, BYTE PTR [ebx]
 809f1f0:  jmp 809f017
 809f1f5:  mov DWORD PTR [ebp-0x258], 0x7fffffff
 809f1ff:  jmp 809eec4
 809f204:  mov edx, DWORD PTR [ebp-0x268]
 809f20a:  mov ecx, DWORD PTR [ebp-0x2dc]
 809f210:  mov eax, DWORD PTR [ebp+edx*4-0xb4]
 809f217:  mov DWORD PTR [ecx+edx*4], eax
 809f21a:  jmp 809e9ac
 809f21f:  mov esi, DWORD PTR [ebp-0x2d0]
 809f225:  lea eax, [ebp-0x8c]
 809f22b:  mov DWORD PTR [ebp-0x2dc], eax
 809f231:  mov DWORD PTR [ebp-0x270], esi
 809f237:  mov esi, 0x30
 809f23c:  mov edx, DWORD PTR [ebp-0x2a8]
 809f242:  mov ecx, DWORD PTR [ebp-0x2dc]
 809f248:  mov ebx, DWORD PTR [ebp-0x26c]
 809f24e:  mov edi, DWORD PTR [edx+esi*4-0x4c]
 809f252:  mov DWORD PTR [ecx+esi*4-0xc0], edi
 809f259:  mov DWORD PTR [esp+0x4], ebx
 809f25d:  mov DWORD PTR [esp], esi
 809f260:  call 80744e0
 809f265:  lea edx, [ebp-0x34]
 809f268:  lea ecx, [ebp-0x64]
 809f26b:  mov DWORD PTR [ebp-0x34], 0x0
 809f272:  mov DWORD PTR [ebp-0x30], 0x0
 809f279:  mov DWORD PTR [esp+0x8], edx
 809f27d:  mov DWORD PTR [esp], ecx
 809f280:  mov DWORD PTR [esp+0x4], eax
 809f284:  call 806c600
 809f289:  mov DWORD PTR [ebp-0x264], eax
 809f28f:  add eax, 0x1
 809f292:  je 809f340
 809f298:  mov ecx, DWORD PTR [ebp-0x2d0]
 809f29e:  xor ebx, ebx
 809f2a0:  xor edx, edx
 809f2a2:  mov eax, edi
 809f2a4:  test ecx, ecx
 809f2a6:  jle 809f2ca
 809f2a8:  mov DWORD PTR [esp+0x4], 0x0
 809f2b0:  add ebx, 0x1
 809f2b3:  mov DWORD PTR [esp], eax
 809f2b6:  call 806c400
 809f2bb:  add eax, 0x1
 809f2be:  cmp DWORD PTR [ebp-0x2d0], ebx
 809f2c4:  jg 809f2a8
 809f2c6:  mov edx, eax
 809f2c8:  sub edx, edi
 809f2ca:  mov ecx, DWORD PTR [ebp-0x264]
 809f2d0:  lea eax, [edx+ecx+0x13]
 809f2d4:  and eax, 0xfc
 809f2d7:  sub esp, eax
 809f2d9:  lea ebx, [esp+0x1f]
 809f2dd:  and ebx, 0xf0
 809f2e0:  mov DWORD PTR [esp+0x8], edx
 809f2e4:  mov DWORD PTR [esp+0x4], edi
 809f2e8:  mov DWORD PTR [esp], ebx
 809f2eb:  call 806c310
 809f2f0:  mov edx, DWORD PTR [ebp-0x264]
 809f2f6:  lea ecx, [ebp-0x64]
 809f2f9:  mov DWORD PTR [esp+0x4], ecx
 809f2fd:  mov DWORD PTR [esp+0x8], edx
 809f301:  mov DWORD PTR [esp], eax
 809f304:  call 806c310
 809f309:  mov BYTE PTR [eax], 0x0
 809f30c:  mov DWORD PTR [ebp+esi*4-0x174], ebx
 809f313:  add esi, 0x1
 809f316:  cmp esi, 0x3a
 809f319:  jne 809f23c
 809f31f:  jmp 809e924
 809f324:  mov DWORD PTR [esp], edx
 809f327:  call 8068f50
 809f32c:  mov DWORD PTR [ebp-0x2b8], eax
 809f332:  add eax, 0x1
 809f335:  je 80997f0
 809f33b:  jmp 809c5cd
 809f340:  mov DWORD PTR [ebp-0x26c], 0x0
 809f34a:  jmp 809e924
 809f34f:  mov DWORD PTR [esp], ebx
 809f352:  call 8068f50
 809f357:  mov DWORD PTR [ebp-0x200], eax
 809f35d:  add eax, 0x1
 809f360:  je 80997f0
 809f366:  jmp 809b7ab
 809f36b:  cmp DWORD PTR [ebp-0x1c4], 0x1
 809f372:  mov eax, DWORD PTR [ebp+0x10]
 809f375:  je 809f384
 809f377:  mov esi, DWORD PTR [ebp-0x1c4]
 809f37d:  mov edx, DWORD PTR [ebp+0x10]
 809f380:  lea eax, [edx+esi*4-0x4]
 809f384:  mov eax, DWORD PTR [eax]
 809f386:  jmp 809dc41
 809f38b:  mov DWORD PTR [ebp-0x210], ebx
 809f391:  mov DWORD PTR [ebp-0x20c], edi
 809f397:  mov BYTE PTR [ebp-0x2a0], 0x1
 809f39e:  jmp 809e155
 809f3a3:  mov edi, DWORD PTR [ebp-0x23c]
 809f3a9:  cmp edi, 0x100
 809f3af:  jae 809f3b6
 809f3b1:  mov edi, 0x100
 809f3b6:  lea eax, [edi+0x12]
 809f3b9:  and eax, 0xfc
 809f3bc:  sub esp, eax
 809f3be:  mov eax, DWORD PTR [ebp-0x210]
 809f3c4:  lea ebx, [esp+0x1f]
 809f3c8:  and ebx, 0xf0
 809f3cb:  test eax, eax
 809f3cd:  je 809f3eb
 809f3cf:  mov eax, DWORD PTR [ebp-0x20c]
 809f3d5:  mov edx, DWORD PTR [ebp-0x210]
 809f3db:  mov DWORD PTR [esp], ebx
 809f3de:  mov DWORD PTR [esp+0x8], eax
 809f3e2:  mov DWORD PTR [esp+0x4], edx
 809f3e6:  call 804efc0
 809f3eb:  movzx eax, BYTE PTR [esi]
 809f3ee:  jmp 809e799
 809f3f3:  mov DWORD PTR [esp], ebx
 809f3f6:  call 8068f50
 809f3fb:  mov DWORD PTR [ebp-0x200], eax
 809f401:  add eax, 0x1
 809f404:  je 80995a4
 809f40a:  jmp 809befa
 809f40f:  mov eax, 0xffffffe8
 809f414:  mov ebx, 0x4
 809f419:  mov edx, DWORD PTR [ebp-0x2e0]
 809f41f:  mov DWORD PTR [edx+eax], 0x54
 809f426:  jmp 80997f5
 809f42b:  mov DWORD PTR [esp], edx
 809f42e:  call 8068f50
 809f433:  mov DWORD PTR [ebp-0x200], eax
 809f439:  add eax, 0x1
 809f43c:  jne 809bf6b
 809f442:  xor ebx, ebx
 809f444:  mov edi, 0xffffffe8
 809f44a:  mov eax, DWORD PTR [ebp-0x2e0]
 809f450:  mov DWORD PTR [ebp-0x200], 0xffffffff
 809f45a:  mov edi, DWORD PTR [eax+edi]
 809f45d:  mov DWORD PTR [ebp-0x2a4], edi
 809f463:  jmp 809bfc4
 809f468:  mov DWORD PTR [esp], ecx
 809f46b:  call 8068f50
 809f470:  mov DWORD PTR [ebp-0x200], eax
 809f476:  add eax, 0x1
 809f479:  jne 809d7d4
 809f47f:  mov edi, 0xffffffe8
 809f485:  mov eax, DWORD PTR [ebp-0x2e0]
 809f48b:  mov edi, DWORD PTR [eax+edi]
 809f48e:  mov DWORD PTR [ebp-0x2a4], edi
 809f494:  jmp 809a065
 809f499:  mov DWORD PTR [esp], esi
 809f49c:  call 8068f50
 809f4a1:  mov DWORD PTR [ebp-0x200], eax
 809f4a7:  add eax, 0x1
 809f4aa:  je 80995a4
 809f4b0:  jmp 809abc9
 809f4b5:  mov DWORD PTR [esp], edx
 809f4b8:  call 8068f50
 809f4bd:  mov DWORD PTR [ebp-0x200], eax
 809f4c3:  add eax, 0x1
 809f4c6:  jne 809bd31
 809f4cc:  mov eax, DWORD PTR [ebp-0x2e0]
 809f4d2:  mov edi, 0xffffffe8
 809f4d8:  mov edi, DWORD PTR [eax+edi]
 809f4db:  mov eax, 0x3fc
 809f4e0:  mov DWORD PTR [ebp-0x2a4], edi
 809f4e6:  jmp 809b433
 809f4eb:  mov esi, DWORD PTR [ebp-0x218]
 809f4f1:  mov edx, DWORD PTR [ebp-0x284]
 809f4f7:  add esi, 0x1
 809f4fa:  lea eax, [esi*4]
 809f501:  mov DWORD PTR [esp+0x4], eax
 809f505:  mov eax, DWORD PTR [edx]
 809f507:  mov DWORD PTR [esp], eax
 809f50a:  call 804db10
 809f50f:  test eax, eax
 809f511:  je 809f56d
 809f513:  mov edx, DWORD PTR [ebp-0x284]
 809f519:  mov DWORD PTR [edx], eax
 809f51b:  add eax, DWORD PTR [ebp-0x1e0]
 809f521:  mov DWORD PTR [ebp-0x288], eax
 809f527:  jmp 809b2e0
 809f52c:  test DWORD PTR [ebp-0x2b0], 0x2000
 809f536:  jne 8099850
 809f53c:  mov ecx, DWORD PTR [ebp-0x284]
 809f542:  mov ebx, DWORD PTR [ebp-0x218]
 809f548:  add DWORD PTR [ebp-0x2bc], 0x1
 809f54f:  mov eax, DWORD PTR [ecx]
 809f551:  mov DWORD PTR [ebp-0x284], 0x0
 809f55b:  mov DWORD PTR [eax+ebx*4-0x4], 0x0
 809f563:  mov ebx, 0x2
 809f568:  jmp 80997f5
 809f56d:  test DWORD PTR [ebp-0x2b0], 0x2000
 809f577:  jne 8099850
 809f57d:  mov ecx, DWORD PTR [ebp-0x284]
 809f583:  sub DWORD PTR [ebp-0x218], ebx
 809f589:  mov ebx, DWORD PTR [ebp-0x218]
 809f58f:  add DWORD PTR [ebp-0x2bc], 0x1
 809f596:  mov eax, DWORD PTR [ecx]
 809f598:  mov DWORD PTR [ebp-0x284], 0x0
 809f5a2:  mov DWORD PTR [eax+ebx*4], 0x0
 809f5a9:  mov ebx, 0x2
 809f5ae:  jmp 80997f5
 809f5b3:  mov eax, DWORD PTR [ebp+0x8]
 809f5b6:  mov DWORD PTR [esp], eax
 809f5b9:  call 8068f50
 809f5be:  mov DWORD PTR [ebp-0x200], eax
 809f5c4:  add eax, 0x1
 809f5c7:  je 809f442
 809f5cd:  jmp 809cd94
 809f5d2:  mov ecx, DWORD PTR [ebp+0x8]
 809f5d5:  mov eax, DWORD PTR [ecx+0x4]
 809f5d8:  cmp eax, DWORD PTR [ecx+0x8]
 809f5db:  jae 809f62e
 809f5dd:  movzx ebx, BYTE PTR [eax]
 809f5e0:  add eax, 0x1
 809f5e3:  mov esi, DWORD PTR [ebp+0x8]
 809f5e6:  mov DWORD PTR [ebp-0x2b8], ebx
 809f5ec:  mov DWORD PTR [esi+0x4], eax
 809f5ef:  add DWORD PTR [ebp-0x21c], 0x1
 809f5f6:  jmp 809db5a
 809f5fb:  mov edx, DWORD PTR [ebp-0x214]
 809f601:  sub esp, 0x110
 809f607:  lea eax, [esp+0x1f]
 809f60b:  and eax, 0xf0
 809f60e:  mov DWORD PTR [ebp-0x210], eax
 809f614:  mov ecx, DWORD PTR [ebp-0x210]
 809f61a:  movzx eax, BYTE PTR [edx]
 809f61d:  mov BYTE PTR [ecx], al
 809f61f:  mov DWORD PTR [ebp-0x20c], 0x100
 809f629:  jmp 809db14
 809f62e:  mov DWORD PTR [esp], ecx
 809f631:  call 8068f50
 809f636:  mov DWORD PTR [ebp-0x2b8], eax
 809f63c:  add eax, 0x1
 809f63f:  jne 809f5ef
 809f641:  mov edi, 0xffffffe8
 809f647:  mov eax, DWORD PTR [ebp-0x2e0]
 809f64d:  mov edi, DWORD PTR [eax+edi]
 809f650:  mov DWORD PTR [ebp-0x2a4], edi
 809f656:  jmp 809db5a
 809f65b:  mov ebx, DWORD PTR [ebp-0x218]
 809f661:  mov edx, DWORD PTR [ebp-0x284]
 809f667:  add ebx, 0x1
 809f66a:  mov DWORD PTR [esp+0x4], ebx
 809f66e:  mov eax, DWORD PTR [edx]
 809f670:  mov DWORD PTR [esp], eax
 809f673:  call 804db10
 809f678:  test eax, eax
 809f67a:  je 809f6c6
 809f67c:  mov edx, DWORD PTR [ebp-0x284]
 809f682:  mov DWORD PTR [edx], eax
 809f684:  add eax, DWORD PTR [ebp-0x218]
 809f68a:  mov DWORD PTR [ebp-0x28c], eax
 809f690:  jmp 809b103
 809f695:  mov DWORD PTR [esp], ebx
 809f698:  call 8068f50
 809f69d:  mov DWORD PTR [ebp-0x2b8], eax
 809f6a3:  add eax, 0x1
 809f6a6:  jne 809cc28
 809f6ac:  mov edi, 0xffffffe8
 809f6b2:  mov ecx, DWORD PTR [ebp-0x2e0]
 809f6b8:  mov edi, DWORD PTR [ecx+edi]
 809f6bb:  mov DWORD PTR [ebp-0x2a4], edi
 809f6c1:  jmp 809cc2f
 809f6c6:  test DWORD PTR [ebp-0x2b0], 0x2000
 809f6d0:  jne 8099850
 809f6d6:  mov ecx, DWORD PTR [ebp-0x284]
 809f6dc:  mov ebx, DWORD PTR [ebp-0x218]
 809f6e2:  mov eax, DWORD PTR [ecx]
 809f6e4:  mov BYTE PTR [eax+ebx-0x1], 0x0
 809f6e9:  mov ebx, 0x2
 809f6ee:  add DWORD PTR [ebp-0x2bc], 0x1
 809f6f5:  mov DWORD PTR [ebp-0x284], 0x0
 809f6ff:  jmp 80997f5
 809f704:  add DWORD PTR [ebp-0x1cc], 0x1
 809f70b:  jmp 809b329
 809f710:  mov DWORD PTR [esp], ecx
 809f713:  call 8068f50
 809f718:  mov DWORD PTR [ebp-0x200], eax
 809f71e:  add eax, 0x1
 809f721:  jne 809c783
 809f727:  mov edi, 0xffffffe8
 809f72d:  mov ecx, DWORD PTR [ebp-0x2e0]
 809f733:  mov edi, DWORD PTR [ecx+edi]
 809f736:  mov DWORD PTR [ebp-0x2a4], edi
 809f73c:  jmp 809dac4
 809f741:  mov DWORD PTR [esp], edx
 809f744:  call 8068f50
 809f749:  mov DWORD PTR [ebp-0x200], eax
 809f74f:  add eax, 0x1
 809f752:  je 809f444
 809f758:  jmp 809ce6b
 809f75d:  mov ecx, DWORD PTR [ebp+0x8]
 809f760:  mov DWORD PTR [esp], ecx
 809f763:  call 8068f50
 809f768:  mov DWORD PTR [ebp-0x200], eax
 809f76e:  add eax, 0x1
 809f771:  je 809f444
 809f777:  jmp 809d296
 809f77c:  mov DWORD PTR [esp], ecx
 809f77f:  call 8068f50
 809f784:  cmp eax, 0xff
 809f787:  mov DWORD PTR [ebp-0x2b8], eax
 809f78d:  jne 809f7c9
 809f78f:  mov edx, DWORD PTR [ebp-0x2e0]
 809f795:  mov eax, 0xffffffe8
 809f79a:  mov eax, DWORD PTR [edx+eax]
 809f79d:  mov edx, 0xfffffffe
 809f7a2:  mov DWORD PTR [ebp-0x2a4], eax
 809f7a8:  jmp 809b6de
 809f7ad:  mov DWORD PTR [esp], edx
 809f7b0:  call 8068f50
 809f7b5:  mov DWORD PTR [ebp-0x200], eax
 809f7bb:  add eax, 0x1
 809f7be:  je 80997f0
 809f7c4:  jmp 809c8c0
 809f7c9:  mov edx, eax
 809f7cb:  add edx, edx
 809f7cd:  jmp 809b6de
 809f7d2:  mov DWORD PTR [esp], ebx
 809f7d5:  lea esi, [esi]
 809f7d8:  call 8068f50
 809f7dd:  cmp eax, 0xff
 809f7e0:  mov ecx, eax
 809f7e2:  je 80997f0
 809f7e8:  jmp 809c853
 809f7ed:  mov DWORD PTR [esp], edx
 809f7f0:  call 8068f50
 809f7f5:  mov DWORD PTR [ebp-0x200], eax
 809f7fb:  add eax, 0x1
 809f7fe:  je 80995a4
 809f804:  mov eax, DWORD PTR [ebp-0x21c]
 809f80a:  add eax, 0x1
 809f80d:  mov DWORD PTR [ebp-0x1cc], eax
 809f813:  jmp 809aa86
 809f818:  mov DWORD PTR [esp], ecx
 809f81b:  call 8068f50
 809f820:  mov DWORD PTR [ebp-0x200], eax
 809f826:  add eax, 0x1
 809f829:  jne 809f88c
 809f82b:  mov ebx, DWORD PTR [ebp-0x218]
 809f831:  mov edi, 0xffffffe8
 809f837:  mov ecx, DWORD PTR [ebp-0x2e0]
 809f83d:  mov DWORD PTR [ebp-0x218], ebx
 809f843:  mov DWORD PTR [ebp-0x200], 0xffffffff
 809f84d:  mov edi, DWORD PTR [ecx+edi]
 809f850:  mov DWORD PTR [ebp-0x2a4], edi
 809f856:  jmp 809d671
 809f85b:  mov DWORD PTR [esp], edx
 809f85e:  call 8068f50
 809f863:  mov DWORD PTR [ebp-0x2b8], eax
 809f869:  add eax, 0x1
 809f86c:  jne 809c278
 809f872:  mov edi, 0xffffffe8
 809f878:  mov esi, DWORD PTR [ebp-0x2e0]
 809f87e:  mov edi, DWORD PTR [esi+edi]
 809f881:  mov DWORD PTR [ebp-0x2a4], edi
 809f887:  jmp 809aca9
 809f88c:  mov esi, DWORD PTR [ebp-0x2ac]
 809f892:  mov edx, DWORD PTR [esi+0x34]
 809f895:  jmp 809bebf
 809f89a:  mov DWORD PTR [esp], edx
 809f89d:  call 8068f50
 809f8a2:  mov DWORD PTR [ebp-0x200], eax
 809f8a8:  add eax, 0x1
 809f8ab:  jne 809a026
 809f8b1:  mov edi, 0xffffffe8
 809f8b7:  mov ecx, DWORD PTR [ebp-0x2e0]
 809f8bd:  mov edi, DWORD PTR [ecx+edi]
 809f8c0:  mov DWORD PTR [ebp-0x2a4], edi
 809f8c6:  jmp 809a02d
 809f8cb:  mov DWORD PTR [esp], ebx
 809f8ce:  call 8068f50
 809f8d3:  mov DWORD PTR [ebp-0x200], eax
 809f8d9:  add eax, 0x1
 809f8dc:  je 80995a4
 809f8e2:  jmp 8099b3e
 809f8e7:  mov ecx, DWORD PTR [ebp-0x1cc]
 809f8ed:  mov eax, DWORD PTR [ebp-0x208]
 809f8f3:  mov DWORD PTR [ebp-0x200], esi
 809f8f9:  mov DWORD PTR [ebp-0x1c8], ecx
 809f8ff:  mov DWORD PTR [ebp-0x280], eax
 809f905:  jmp 809a3c0
 809f90a:  mov eax, DWORD PTR [ebp+0x8]
 809f90d:  mov DWORD PTR [esp], eax
 809f910:  call 8068f50
 809f915:  mov DWORD PTR [ebp-0x200], eax
 809f91b:  add eax, 0x1
 809f91e:  je 809f82b
 809f924:  mov ecx, DWORD PTR [ebp-0x2ac]
 809f92a:  mov edx, DWORD PTR [ecx+0x34]
 809f92d:  jmp 809c6dd
 809f932:  mov DWORD PTR [esp], ebx
 809f935:  call 8068f50
 809f93a:  mov DWORD PTR [ebp-0x200], eax
 809f940:  add eax, 0x1
 809f943:  je 80995a4
 809f949:  mov edx, DWORD PTR [ebp-0x21c]
 809f94f:  add edx, 0x1
 809f952:  mov DWORD PTR [ebp-0x1cc], edx
 809f958:  jmp 8099c6c
 809f95d:  mov eax, DWORD PTR [ebp-0x218]
 809f963:  mov edx, DWORD PTR [ebp-0x284]
 809f969:  add eax, 0x1
 809f96c:  mov DWORD PTR [ebp-0x1f4], eax
 809f972:  shl eax, 0x2
 809f975:  mov DWORD PTR [esp+0x4], eax
 809f979:  mov eax, DWORD PTR [edx]
 809f97b:  mov DWORD PTR [esp], eax
 809f97e:  call 804db10
 809f983:  test eax, eax
 809f985:  je 8099850
 809f98b:  mov ecx, DWORD PTR [ebp-0x284]
 809f991:  mov DWORD PTR [ecx], eax
 809f993:  add eax, ebx
 809f995:  mov DWORD PTR [ebp-0x288], eax
 809f99b:  jmp 8099cf0
 809f9a0:  xor eax, eax
 809f9a2:  mov esi, DWORD PTR [ebp-0x210]
 809f9a8:  cmp DWORD PTR [ebp-0x2b4], 0x0
 809f9af:  setg al
 809f9b2:  sub DWORD PTR [ebp-0x2b4], eax
 809f9b8:  cmp DWORD PTR [ebp-0x20c], 0x3
 809f9bf:  jne 809f9ed
 809f9c1:  mov ebx, DWORD PTR [ebp-0x210]
 809f9c7:  sub esp, 0x110
 809f9cd:  lea eax, [esp+0x1f]
 809f9d1:  and eax, 0xf0
 809f9d4:  mov esi, eax
 809f9d6:  movzx eax, WORD PTR [ebx]
 809f9d9:  mov WORD PTR [esi], ax
 809f9dc:  movzx eax, BYTE PTR [ebx+0x2]
 809f9e0:  mov BYTE PTR [esi+0x2], al
 809f9e3:  mov DWORD PTR [ebp-0x20c], 0x100
 809f9ed:  movzx eax, BYTE PTR [ebp-0x200]
 809f9f4:  mov BYTE PTR [esi+0x3], al
 809f9f7:  mov ebx, DWORD PTR [ebp-0x2b4]
 809f9fd:  test ebx, ebx
 809f9ff:  je 80997f0
 809fa05:  cmp DWORD PTR [ebp-0x200], 0xff
 809fa0c:  je 809d404
 809fa12:  mov ebx, DWORD PTR [ebp+0x8]
 809fa15:  mov eax, DWORD PTR [ebx+0x4]
 809fa18:  cmp eax, DWORD PTR [ebx+0x8]
 809fa1b:  jae 809fc95
 809fa21:  mov edx, DWORD PTR [ebp+0x8]
 809fa24:  movzx ecx, BYTE PTR [eax]
 809fa27:  add eax, 0x1
 809fa2a:  mov DWORD PTR [edx+0x4], eax
 809fa2d:  mov ebx, DWORD PTR [ebp-0x2ac]
 809fa33:  movzx edx, cl
 809fa36:  mov eax, DWORD PTR [ebx+0x38]
 809fa39:  cmp DWORD PTR [eax+edx*4], 0x6e
 809fa3d:  jne 80997f0
 809fa43:  xor eax, eax
 809fa45:  mov ebx, esi
 809fa47:  cmp DWORD PTR [ebp-0x2b4], 0x0
 809fa4e:  setg al
 809fa51:  sub DWORD PTR [ebp-0x2b4], eax
 809fa57:  cmp DWORD PTR [ebp-0x20c], 0x4
 809fa5e:  jne 809fa7d
 809fa60:  sub esp, 0x110
 809fa66:  lea eax, [esp+0x1f]
 809fa6a:  and eax, 0xf0
 809fa6d:  mov ebx, eax
 809fa6f:  mov eax, DWORD PTR [esi]
 809fa71:  mov DWORD PTR [ebx], eax
 809fa73:  mov DWORD PTR [ebp-0x20c], 0x100
 809fa7d:  mov BYTE PTR [ebx+0x4], cl
 809fa80:  mov ecx, DWORD PTR [ebp-0x2b4]
 809fa86:  test ecx, ecx
 809fa88:  je 80997f0
 809fa8e:  mov esi, DWORD PTR [ebp+0x8]
 809fa91:  mov eax, DWORD PTR [esi+0x4]
 809fa94:  cmp eax, DWORD PTR [esi+0x8]
 809fa97:  jae 809fc75
 809fa9d:  mov edx, DWORD PTR [ebp+0x8]
 809faa0:  movzx ecx, BYTE PTR [eax]
 809faa3:  add eax, 0x1
 809faa6:  mov DWORD PTR [edx+0x4], eax
 809faa9:  mov esi, DWORD PTR [ebp-0x2ac]
 809faaf:  movzx edx, cl
 809fab2:  mov eax, DWORD PTR [esi+0x38]
 809fab5:  cmp DWORD PTR [eax+edx*4], 0x69
 809fab9:  jne 80997f0
 809fabf:  xor eax, eax
 809fac1:  mov esi, ebx
 809fac3:  cmp DWORD PTR [ebp-0x2b4], 0x0
 809faca:  setg al
 809facd:  sub DWORD PTR [ebp-0x2b4], eax
 809fad3:  cmp DWORD PTR [ebp-0x20c], 0x5
 809fada:  jne 809fb00
 809fadc:  sub esp, 0x110
 809fae2:  lea eax, [esp+0x1f]
 809fae6:  and eax, 0xf0
 809fae9:  mov esi, eax
 809faeb:  mov eax, DWORD PTR [ebx]
 809faed:  mov DWORD PTR [esi], eax
 809faef:  movzx eax, BYTE PTR [ebx+0x4]
 809faf3:  mov BYTE PTR [esi+0x4], al
 809faf6:  mov DWORD PTR [ebp-0x20c], 0x100
 809fb00:  mov BYTE PTR [esi+0x5], cl
 809fb03:  mov edx, DWORD PTR [ebp-0x2b4]
 809fb09:  test edx, edx
 809fb0b:  je 80997f0
 809fb11:  mov edx, DWORD PTR [ebp+0x8]
 809fb14:  mov eax, DWORD PTR [edx+0x4]
 809fb17:  cmp eax, DWORD PTR [edx+0x8]
 809fb1a:  jae 809fc57
 809fb20:  mov ebx, DWORD PTR [ebp+0x8]
 809fb23:  movzx ecx, BYTE PTR [eax]
 809fb26:  add eax, 0x1
 809fb29:  mov DWORD PTR [ebx+0x4], eax
 809fb2c:  mov ebx, DWORD PTR [ebp-0x2ac]
 809fb32:  movzx edx, cl
 809fb35:  mov eax, DWORD PTR [ebx+0x38]
 809fb38:  cmp DWORD PTR [eax+edx*4], 0x74
 809fb3c:  jne 80997f0
 809fb42:  xor eax, eax
 809fb44:  mov ebx, esi
 809fb46:  cmp DWORD PTR [ebp-0x2b4], 0x0
 809fb4d:  setg al
 809fb50:  sub DWORD PTR [ebp-0x2b4], eax
 809fb56:  cmp DWORD PTR [ebp-0x20c], 0x6
 809fb5d:  jne 809fb84
 809fb5f:  sub esp, 0x110
 809fb65:  lea eax, [esp+0x1f]
 809fb69:  and eax, 0xf0
 809fb6c:  mov ebx, eax
 809fb6e:  mov eax, DWORD PTR [esi]
 809fb70:  mov DWORD PTR [ebx], eax
 809fb72:  movzx eax, WORD PTR [esi+0x4]
 809fb76:  mov WORD PTR [ebx+0x4], ax
 809fb7a:  mov DWORD PTR [ebp-0x20c], 0x100
 809fb84:  mov BYTE PTR [ebx+0x6], cl
 809fb87:  mov eax, DWORD PTR [ebp-0x2b4]
 809fb8d:  test eax, eax
 809fb8f:  je 80997f0
 809fb95:  mov esi, DWORD PTR [ebp+0x8]
 809fb98:  mov eax, DWORD PTR [esi+0x4]
 809fb9b:  cmp eax, DWORD PTR [esi+0x8]
 809fb9e:  jae 809fc3b
 809fba4:  movzx edx, BYTE PTR [eax]
 809fba7:  add eax, 0x1
 809fbaa:  mov ecx, DWORD PTR [ebp+0x8]
 809fbad:  mov DWORD PTR [ebp-0x200], edx
 809fbb3:  mov DWORD PTR [ecx+0x4], eax
 809fbb6:  mov esi, DWORD PTR [ebp-0x2ac]
 809fbbc:  movzx edx, BYTE PTR [ebp-0x200]
 809fbc3:  mov eax, DWORD PTR [esi+0x38]
 809fbc6:  cmp DWORD PTR [eax+edx*4], 0x79
 809fbca:  jne 80997f0
 809fbd0:  cmp DWORD PTR [ebp-0x20c], 0x7
 809fbd7:  mov DWORD PTR [ebp-0x210], ebx
 809fbdd:  jne 809fc15
 809fbdf:  sub esp, 0x110
 809fbe5:  lea eax, [esp+0x1f]
 809fbe9:  and eax, 0xf0
 809fbec:  mov DWORD PTR [ebp-0x210], eax
 809fbf2:  mov eax, DWORD PTR [ebx]
 809fbf4:  mov edx, DWORD PTR [ebp-0x210]
 809fbfa:  mov DWORD PTR [edx], eax
 809fbfc:  movzx eax, WORD PTR [ebx+0x4]
 809fc00:  mov WORD PTR [edx+0x4], ax
 809fc04:  movzx eax, BYTE PTR [ebx+0x6]
 809fc08:  mov BYTE PTR [edx+0x6], al
 809fc0b:  mov DWORD PTR [ebp-0x20c], 0x100
 809fc15:  movzx ecx, BYTE PTR [ebp-0x200]
 809fc1c:  mov ebx, DWORD PTR [ebp-0x210]
 809fc22:  add DWORD PTR [ebp-0x1cc], 0x4
 809fc29:  mov BYTE PTR [ebx+0x7], cl
 809fc2c:  mov DWORD PTR [ebp-0x204], 0x8
 809fc36:  jmp 809c9ae
 809fc3b:  mov DWORD PTR [esp], esi
 809fc3e:  call 8068f50
 809fc43:  mov DWORD PTR [ebp-0x200], eax
 809fc49:  add eax, 0x1
 809fc4c:  jne 809fbb6
 809fc52:  jmp 80997f0
 809fc57:  mov DWORD PTR [esp], edx
 809fc5a:  call 8068f50
 809fc5f:  cmp eax, 0xff
 809fc62:  mov ecx, eax
 809fc64:  lea esi, [esi]
 809fc68:  jne 809fb2c
 809fc6e:  xchg ax, ax
 809fc70:  jmp 80997f0
 809fc75:  mov DWORD PTR [esp], esi
 809fc78:  call 8068f50
 809fc7d:  cmp eax, 0xff
 809fc80:  mov ecx, eax
 809fc82:  lea esi, [esi]
 809fc88:  jne 809faa9
 809fc8e:  xchg ax, ax
 809fc90:  jmp 80997f0
 809fc95:  mov DWORD PTR [esp], ebx
 809fc98:  call 8068f50
 809fc9d:  cmp eax, 0xff
 809fca0:  mov ecx, eax
 809fca2:  lea esi, [esi]
 809fca8:  jne 809fa2d
 809fcae:  xchg ax, ax
 809fcb0:  jmp 80997f0
 809fcb5:  mov DWORD PTR [esp], ecx
 809fcb8:  call 8068f50
 809fcbd:  mov DWORD PTR [ebp-0x200], eax
 809fcc3:  add eax, 0x1
 809fcc6:  jne 809fe0d
 809fccc:  mov edi, 0xffffffe8
 809fcd2:  mov esi, DWORD PTR [ebp-0x2e0]
 809fcd8:  mov DWORD PTR [ebp-0x1cc], ebx
 809fcde:  mov DWORD PTR [ebp-0x204], 0x3
 809fce8:  mov edi, DWORD PTR [esi+edi]
 809fceb:  mov DWORD PTR [ebp-0x2a4], edi
 809fcf1:  jmp 809c9ae
 809fcf6:  mov eax, DWORD PTR [ebp+0x8]
 809fcf9:  mov DWORD PTR [esp], eax
 809fcfc:  call 8068f50
 809fd01:  mov DWORD PTR [ebp-0x200], eax
 809fd07:  add eax, 0x1
 809fd0a:  je 809c611
 809fd10:  jmp 809cfc3
 809fd15:  mov DWORD PTR [esp], edx
 809fd18:  call 8068f50
 809fd1d:  mov DWORD PTR [ebp-0x200], eax
 809fd23:  add eax, 0x1
 809fd26:  je 809f831
 809fd2c:  jmp 809b145
 809fd31:  mov DWORD PTR [esp], esi
 809fd34:  call 8068f50
 809fd39:  mov DWORD PTR [ebp-0x200], eax
 809fd3f:  add eax, 0x1
 809fd42:  jne 809a4a3
 809fd48:  mov edi, 0xffffffe8
 809fd4e:  mov ebx, DWORD PTR [ebp-0x2e0]
 809fd54:  mov DWORD PTR [ebp-0x280], 0x1
 809fd5e:  mov edi, DWORD PTR [ebx+edi]
 809fd61:  mov DWORD PTR [ebp-0x2a4], edi
 809fd67:  jmp 8099e39
 809fd6c:  mov ecx, DWORD PTR [ebp-0x284]
 809fd72:  lea edx, [ebx+0x1]
 809fd75:  mov DWORD PTR [esp+0x4], edx
 809fd79:  mov DWORD PTR [ebp-0x218], edx
 809fd7f:  mov eax, DWORD PTR [ecx]
 809fd81:  mov DWORD PTR [esp], eax
 809fd84:  call 804db10
 809fd89:  test eax, eax
 809fd8b:  je 8099850
 809fd91:  mov edx, DWORD PTR [ebp-0x284]
 809fd97:  mov DWORD PTR [edx], eax
 809fd99:  add eax, ebx
 809fd9b:  mov DWORD PTR [ebp-0x28c], eax
 809fda1:  jmp 809ac21
 809fda6:  mov esi, DWORD PTR [ebp+0x8]
 809fda9:  mov DWORD PTR [esp], esi
 809fdac:  call 8068f50
 809fdb1:  mov DWORD PTR [ebp-0x200], eax
 809fdb7:  add eax, 0x1
 809fdba:  je 809f82b
 809fdc0:  jmp 809b1e7
 809fdc5:  mov DWORD PTR [esp], ecx
 809fdc8:  call 8068f50
 809fdcd:  mov DWORD PTR [ebp-0x200], eax
 809fdd3:  add eax, 0x1
 809fdd6:  je 80997f0
 809fddc:  jmp 809cd07
 809fde1:  mov eax, DWORD PTR [ebp-0x1cc]
 809fde7:  add eax, 0x1
 809fdea:  mov DWORD PTR [ebp-0x21c], eax
 809fdf0:  jmp 809ae1d
 809fdf5:  mov DWORD PTR [esp], edx
 809fdf8:  call 8068f50
 809fdfd:  cmp eax, 0xff
 809fe00:  mov ecx, eax
 809fe02:  je 80997f0
 809fe08:  jmp 809cc9a
 809fe0d:  mov esi, DWORD PTR [ebp-0x21c]
 809fe13:  add esi, 0x3
 809fe16:  mov DWORD PTR [ebp-0x1cc], esi
 809fe1c:  jmp 809c962
 809fe21:  jmp 809fe30
 809fe23:  nop
 809fe24:  nop
 809fe25:  nop
 809fe26:  nop
 809fe27:  nop
 809fe28:  nop
 809fe29:  nop
 809fe2a:  nop
 809fe2b:  nop
 809fe2c:  nop
 809fe2d:  nop
 809fe2e:  nop
 809fe2f:  nop

0809fe30 <___vfscanf>:
 809fe30:  push ebp
 809fe31:  mov ebp, esp
 809fe33:  sub esp, 0x10
 809fe36:  mov eax, DWORD PTR [ebp+0x10]
 809fe39:  mov DWORD PTR [esp+0xc], 0x0
 809fe41:  mov DWORD PTR [esp+0x8], eax
 809fe45:  mov eax, DWORD PTR [ebp+0xc]
 809fe48:  mov DWORD PTR [esp+0x4], eax
 809fe4c:  mov eax, DWORD PTR [ebp+0x8]
 809fe4f:  mov DWORD PTR [esp], eax
 809fe52:  call 8099310
 809fe57:  leave
 809fe58:  ret

0809fe59 <_L_unlock_796>:
 809fe59:  lea eax, [edx]
 809fe5b:  call 8050260
 809fe60:  jmp 8099829

0809fe65 <_L_lock_1080>:
 809fe65:  lea ecx, [esi]
 809fe67:  call 8050230
 809fe6c:  jmp 80999a1
 809fe71:  nop
 809fe72:  nop
 809fe73:  nop
 809fe74:  nop
 809fe75:  nop
 809fe76:  nop
 809fe77:  nop
 809fe78:  nop
 809fe79:  nop
 809fe7a:  nop
 809fe7b:  nop
 809fe7c:  nop
 809fe7d:  nop
 809fe7e:  nop
 809fe7f:  nop

0809fe80 <__libc_register_dlfcn_hook>:
 809fe80:  push ebp
 809fe81:  mov ebp, esp
 809fe83:  sub esp, 0x8
 809fe86:  mov eax, DWORD PTR [ebp+0x8]
 809fe89:  mov DWORD PTR [esp+0x4], 0x80c6ab4
 809fe91:  mov DWORD PTR [esp], eax
 809fe94:  call 8098fb0
 809fe99:  test eax, eax
 809fe9b:  je 809fea3
 809fe9d:  mov DWORD PTR [eax], 0x80d1400
 809fea3:  leave
 809fea4:  ret
 809fea5:  lea esi, [esi]
 809fea9:  lea edi, [edi]

0809feb0 <check_free>:
 809feb0:  push ebp
 809feb1:  mov ebp, esp
 809feb3:  sub esp, 0x24
 809feb6:  mov DWORD PTR [ebp-0xc], ebx
 809feb9:  mov ebx, DWORD PTR [ebp+0x8]
 809febc:  mov DWORD PTR [ebp-0x8], esi
 809febf:  mov DWORD PTR [ebp-0x4], edi
 809fec2:  mov esi, DWORD PTR [ebx+0x10]
 809fec5:  test esi, esi
 809fec7:  je 809fed7
 809fec9:  mov edi, 0x80b4d4d
 809fece:  mov ecx, 0xe
 809fed3:  repz cmpsb
 809fed5:  jne 809fee8
 809fed7:  mov ebx, DWORD PTR [ebp-0xc]
 809feda:  mov esi, DWORD PTR [ebp-0x8]
 809fedd:  mov edi, DWORD PTR [ebp-0x4]
 809fee0:  mov esp, ebp
 809fee2:  pop ebp
 809fee3:  ret
 809fee4:  lea esi, [esi]
 809fee8:  lea ecx, [ebp-0x10]
 809feeb:  mov eax, 0x809feb0
 809fef0:  lea edx, [ebp-0x20]
 809fef3:  mov DWORD PTR [ebp-0x10], 0x0
 809fefa:  mov DWORD PTR [esp], 0x0
 809ff01:  call 8050f50
 809ff06:  sub esp, 0x4
 809ff09:  test eax, eax
 809ff0b:  je 809fed7
 809ff0d:  mov eax, DWORD PTR [ebp-0x10]
 809ff10:  test eax, eax
 809ff12:  je 809fed7
 809ff14:  mov eax, DWORD PTR [eax+0x18]
 809ff17:  test eax, eax
 809ff19:  jne 809fed7
 809ff1b:  mov eax, DWORD PTR [ebx+0x10]
 809ff1e:  mov DWORD PTR [esp], eax
 809ff21:  call 804b4a0
 809ff26:  jmp 809fed7
 809ff28:  nop
 809ff29:  lea esi, [esi]

0809ff30 <init>:
 809ff30:  push ebp
 809ff31:  mov eax, 0x0
 809ff36:  mov ebp, esp
 809ff38:  sub esp, 0x8
 809ff3b:  test eax, eax
 809ff3d:  jne 809ff4b
 809ff3f:  mov DWORD PTR ds:0x80d2b70, 0x80d2b5c
 809ff49:  leave
 809ff4a:  ret
 809ff4b:  mov DWORD PTR [esp+0x4], 0x80a0280
 809ff53:  mov DWORD PTR [esp], 0x80d2b74
 809ff5a:  call 0
 809ff5f:  test eax, eax
 809ff61:  jne 809ff3f
 809ff63:  leave
 809ff64:  ret
 809ff65:  lea esi, [esi]
 809ff69:  lea edi, [edi]

0809ff70 <_dlerror_run>:
 809ff70:  push ebp
 809ff71:  mov ebp, esp
 809ff73:  push edi
 809ff74:  mov edi, eax
 809ff76:  push esi
 809ff77:  mov eax, 0x0
 809ff7c:  push ebx
 809ff7d:  mov esi, edx
 809ff7f:  sub esp, 0x8
 809ff82:  test eax, eax
 809ff84:  je 80a0061
 809ff8a:  mov DWORD PTR [esp+0x4], 0x809ff30
 809ff92:  mov DWORD PTR [esp], 0x80d2b78
 809ff99:  call 0
 809ff9e:  mov ebx, DWORD PTR ds:0x80d2b70
 809ffa4:  test ebx, ebx
 809ffa6:  je 80a0008
 809ffa8:  mov eax, DWORD PTR [ebx+0x10]
 809ffab:  test eax, eax
 809ffad:  je 809ffbc
 809ffaf:  cmp BYTE PTR [ebx+0x8], 0x0
 809ffb3:  jne 809fff8
 809ffb5:  mov DWORD PTR [ebx+0x10], 0x0
 809ffbc:  lea ecx, [ebx+0x8]
 809ffbf:  lea edx, [ebx+0x10]
 809ffc2:  lea eax, [ebx+0xc]
 809ffc5:  mov DWORD PTR [esp+0x4], esi
 809ffc9:  mov DWORD PTR [esp], edi
 809ffcc:  call 807bf90
 809ffd1:  mov DWORD PTR [ebx], eax
 809ffd3:  sub esp, 0x8
 809ffd6:  xor eax, eax
 809ffd8:  cmp DWORD PTR [ebx+0x10], 0x0
 809ffdc:  sete al
 809ffdf:  mov DWORD PTR [ebx+0x4], eax
 809ffe2:  xor eax, eax
 809ffe4:  cmp DWORD PTR [ebx+0x10], 0x0
 809ffe8:  setne al
 809ffeb:  lea esp, [ebp-0xc]
 809ffee:  pop ebx
 809ffef:  pop esi
 809fff0:  pop edi
 809fff1:  pop ebp
 809fff2:  ret
 809fff3:  nop
 809fff4:  lea esi, [esi]
 809fff8:  mov DWORD PTR [esp], eax
 809fffb:  call 804b4a0
 80a0000:  jmp 809ffb5
 80a0002:  lea esi, [esi]
 80a0008:  mov eax, 0x0
 80a000d:  test eax, eax
 80a000f:  je 80a0024
 80a0011:  mov eax, ds:0x80d2b74
 80a0016:  mov DWORD PTR [esp], eax
 80a0019:  call 0
 80a001e:  test eax, eax
 80a0020:  mov ebx, eax
 80a0022:  jne 809ffa8
 80a0024:  mov DWORD PTR [esp+0x4], 0x14
 80a002c:  mov DWORD PTR [esp], 0x1
 80a0033:  call 804d3c0
 80a0038:  test eax, eax
 80a003a:  mov ebx, eax
 80a003c:  je 80a0080
 80a003e:  mov eax, 0x0
 80a0043:  test eax, eax
 80a0045:  je 809ffa8
 80a004b:  mov eax, ds:0x80d2b74
 80a0050:  mov DWORD PTR [esp+0x4], ebx
 80a0054:  mov DWORD PTR [esp], eax
 80a0057:  call 0
 80a005c:  jmp 809ffa8
 80a0061:  mov edx, DWORD PTR ds:0x80d2b78
 80a0067:  test edx, edx
 80a0069:  jne 809ff9e
 80a006f:  call 809ff30
 80a0074:  or DWORD PTR ds:0x80d2b78, 0x2
 80a007b:  jmp 809ff9e
 80a0080:  mov ebx, 0x80d2b5c
 80a0085:  jmp 809ffa8
 80a008a:  lea esi, [esi]

080a0090 <__dlerror>:
 80a0090:  push ebp
 80a0091:  mov eax, 0x0
 80a0096:  mov ebp, esp
 80a0098:  push edi
 80a0099:  push esi
 80a009a:  push ebx
 80a009b:  sub esp, 0x20
 80a009e:  test eax, eax
 80a00a0:  mov DWORD PTR [ebp-0x10], 0x0
 80a00a7:  je 80a0252
 80a00ad:  mov DWORD PTR [esp+0x4], 0x809ff30
 80a00b5:  mov DWORD PTR [esp], 0x80d2b78
 80a00bc:  call 0
 80a00c1:  mov eax, 0x0
 80a00c6:  test eax, eax
 80a00c8:  je 80a0248
 80a00ce:  mov eax, ds:0x80d2b74
 80a00d3:  mov DWORD PTR [esp], eax
 80a00d6:  call 0
 80a00db:  test eax, eax
 80a00dd:  mov ebx, eax
 80a00df:  je 80a0248
 80a00e5:  mov ecx, DWORD PTR [ebx+0x4]
 80a00e8:  test ecx, ecx
 80a00ea:  je 80a0128
 80a00ec:  mov eax, DWORD PTR [ebx+0x10]
 80a00ef:  test eax, eax
 80a00f1:  mov DWORD PTR [ebp-0x14], eax
 80a00f4:  je 80a0118
 80a00f6:  mov edi, 0x80b4d4d
 80a00fb:  mov ecx, 0xe
 80a0100:  mov esi, eax
 80a0102:  repz cmpsb
 80a0104:  je 80a0111
 80a0106:  mov eax, DWORD PTR [ebp-0x14]
 80a0109:  mov DWORD PTR [esp], eax
 80a010c:  call 804b4a0
 80a0111:  mov DWORD PTR [ebx+0x10], 0x0
 80a0118:  mov eax, DWORD PTR [ebp-0x10]
 80a011b:  add esp, 0x20
 80a011e:  pop ebx
 80a011f:  pop esi
 80a0120:  pop edi
 80a0121:  pop ebp
 80a0122:  ret
 80a0123:  nop
 80a0124:  lea esi, [esi]
 80a0128:  mov eax, DWORD PTR [ebx+0x10]
 80a012b:  test eax, eax
 80a012d:  je 80a0118
 80a012f:  mov edx, DWORD PTR [ebx]
 80a0131:  mov DWORD PTR [ebp-0x10], eax
 80a0134:  test edx, edx
 80a0136:  jne 80a01c0
 80a013c:  mov DWORD PTR [esp+0x8], 0x5
 80a0144:  mov DWORD PTR [esp+0x4], eax
 80a0148:  mov DWORD PTR [esp], 0x80c3c9c
 80a014f:  call 80515a0
 80a0154:  mov ecx, DWORD PTR [ebx+0xc]
 80a0157:  mov edx, 0x80c2c93
 80a015c:  cmp BYTE PTR [ecx], 0x0
 80a015f:  jne 80a0228
 80a0165:  mov DWORD PTR [esp+0x10], eax
 80a0169:  lea eax, [ebp-0x10]
 80a016c:  mov DWORD PTR [esp+0xc], edx
 80a0170:  mov DWORD PTR [esp+0x8], ecx
 80a0174:  mov DWORD PTR [esp+0x4], 0x80c6ac0
 80a017c:  mov DWORD PTR [esp], eax
 80a017f:  call 80617d0
 80a0184:  add eax, 0x1
 80a0187:  je 80a01a7
 80a0189:  mov esi, DWORD PTR [ebx+0x10]
 80a018c:  mov edi, 0x80b4d4d
 80a0191:  mov ecx, 0xe
 80a0196:  mov DWORD PTR [ebp-0x14], esi
 80a0199:  repz cmpsb
 80a019b:  jne 80a0238
 80a01a1:  mov eax, DWORD PTR [ebp-0x10]
 80a01a4:  mov DWORD PTR [ebx+0x10], eax
 80a01a7:  mov DWORD PTR [ebx+0x4], 0x1
 80a01ae:  mov eax, DWORD PTR [ebp-0x10]
 80a01b1:  add esp, 0x20
 80a01b4:  pop ebx
 80a01b5:  pop esi
 80a01b6:  pop edi
 80a01b7:  pop ebp
 80a01b8:  ret
 80a01b9:  lea esi, [esi]
 80a01c0:  mov DWORD PTR [esp], edx
 80a01c3:  call 80a0660
 80a01c8:  mov DWORD PTR [esp+0x8], 0x5
 80a01d0:  mov esi, eax
 80a01d2:  mov eax, DWORD PTR [ebx+0x10]
 80a01d5:  mov DWORD PTR [esp], 0x80c3c9c
 80a01dc:  mov DWORD PTR [esp+0x4], eax
 80a01e0:  call 80515a0
 80a01e5:  mov ecx, DWORD PTR [ebx+0xc]
 80a01e8:  mov edx, 0x80c2c93
 80a01ed:  cmp BYTE PTR [ecx], 0x0
 80a01f0:  jne 80a0220
 80a01f2:  mov DWORD PTR [esp+0x10], eax
 80a01f6:  lea eax, [ebp-0x10]
 80a01f9:  mov DWORD PTR [esp+0x14], esi
 80a01fd:  mov DWORD PTR [esp+0xc], edx
 80a0201:  mov DWORD PTR [esp+0x8], ecx
 80a0205:  mov DWORD PTR [esp+0x4], 0x80c6ac7
 80a020d:  mov DWORD PTR [esp], eax
 80a0210:  call 80617d0
 80a0215:  jmp 80a0184
 80a021a:  lea esi, [esi]
 80a0220:  mov edx, 0x80b44cd
 80a0225:  jmp 80a01f2
 80a0227:  nop
 80a0228:  mov edx, 0x80b44cd
 80a022d:  jmp 80a0165
 80a0232:  lea esi, [esi]
 80a0238:  mov eax, DWORD PTR [ebp-0x14]
 80a023b:  mov DWORD PTR [esp], eax
 80a023e:  call 804b4a0
 80a0243:  jmp 80a01a1
 80a0248:  mov ebx, 0x80d2b5c
 80a024d:  jmp 80a00e5
 80a0252:  mov ebx, DWORD PTR ds:0x80d2b78
 80a0258:  test ebx, ebx
 80a025a:  jne 80a00c1
 80a0260:  call 809ff30
 80a0265:  or DWORD PTR ds:0x80d2b78, 0x2
 80a026c:  jmp 80a00c1
 80a0271:  jmp 80a0280
 80a0273:  nop
 80a0274:  nop
 80a0275:  nop
 80a0276:  nop
 80a0277:  nop
 80a0278:  nop
 80a0279:  nop
 80a027a:  nop
 80a027b:  nop
 80a027c:  nop
 80a027d:  nop
 80a027e:  nop
 80a027f:  nop

080a0280 <free_key_mem>:
 80a0280:  push ebp
 80a0281:  mov ebp, esp
 80a0283:  sub esp, 0x28
 80a0286:  mov DWORD PTR [ebp-0xc], ebx
 80a0289:  mov ebx, DWORD PTR [ebp+0x8]
 80a028c:  mov DWORD PTR [ebp-0x8], esi
 80a028f:  mov DWORD PTR [ebp-0x4], edi
 80a0292:  mov esi, DWORD PTR [ebx+0x10]
 80a0295:  test esi, esi
 80a0297:  je 80a02a7
 80a0299:  mov edi, 0x80b4d4d
 80a029e:  mov ecx, 0xe
 80a02a3:  repz cmpsb
 80a02a5:  jne 80a02e0
 80a02a7:  mov DWORD PTR [esp], ebx
 80a02aa:  call 804b4a0
 80a02af:  mov eax, 0x0
 80a02b4:  test eax, eax
 80a02b6:  je 80a02cd
 80a02b8:  mov eax, ds:0x80d2b74
 80a02bd:  mov DWORD PTR [esp+0x4], 0x0
 80a02c5:  mov DWORD PTR [esp], eax
 80a02c8:  call 0
 80a02cd:  mov ebx, DWORD PTR [ebp-0xc]
 80a02d0:  mov esi, DWORD PTR [ebp-0x8]
 80a02d3:  mov edi, DWORD PTR [ebp-0x4]
 80a02d6:  mov esp, ebp
 80a02d8:  pop ebp
 80a02d9:  ret
 80a02da:  lea esi, [esi]
 80a02e0:  lea ecx, [ebp-0x10]
 80a02e3:  mov eax, 0x809feb0
 80a02e8:  lea edx, [ebp-0x20]
 80a02eb:  mov DWORD PTR [ebp-0x10], 0x0
 80a02f2:  mov DWORD PTR [esp], 0x0
 80a02f9:  call 8050f50
 80a02fe:  sub esp, 0x4
 80a0301:  test eax, eax
 80a0303:  je 80a02a7
 80a0305:  mov eax, DWORD PTR [ebp-0x10]
 80a0308:  test eax, eax
 80a030a:  je 80a02a7
 80a030c:  mov esi, DWORD PTR [eax+0x18]
 80a030f:  test esi, esi
 80a0311:  jne 80a02a7
 80a0313:  mov eax, DWORD PTR [ebx+0x10]
 80a0316:  mov DWORD PTR [esp], eax
 80a0319:  call 804b4a0
 80a031e:  jmp 80a02a7

080a0320 <fini>:
 80a0320:  push ebp
 80a0321:  mov ebp, esp
 80a0323:  sub esp, 0x20
 80a0326:  mov DWORD PTR [ebp-0x8], esi
 80a0329:  mov esi, DWORD PTR ds:0x80d2b6c
 80a032f:  mov DWORD PTR [ebp-0x4], edi
 80a0332:  test esi, esi
 80a0334:  je 80a0344
 80a0336:  mov edi, 0x80b4d4d
 80a033b:  mov ecx, 0xe
 80a0340:  repz cmpsb
 80a0342:  jne 80a0350
 80a0344:  mov esi, DWORD PTR [ebp-0x8]
 80a0347:  mov edi, DWORD PTR [ebp-0x4]
 80a034a:  mov esp, ebp
 80a034c:  pop ebp
 80a034d:  ret
 80a034e:  xchg ax, ax
 80a0350:  lea ecx, [ebp-0xc]
 80a0353:  mov eax, 0x809feb0
 80a0358:  lea edx, [ebp-0x1c]
 80a035b:  mov DWORD PTR [ebp-0xc], 0x0
 80a0362:  mov DWORD PTR [esp], 0x0
 80a0369:  call 8050f50
 80a036e:  sub esp, 0x4
 80a0371:  test eax, eax
 80a0373:  je 80a0344
 80a0375:  mov eax, DWORD PTR [ebp-0xc]
 80a0378:  test eax, eax
 80a037a:  je 80a0344
 80a037c:  mov edi, DWORD PTR [eax+0x18]
 80a037f:  test edi, edi
 80a0381:  jne 80a0344
 80a0383:  mov eax, ds:0x80d2b6c
 80a0388:  mov DWORD PTR [esp], eax
 80a038b:  call 804b4a0
 80a0390:  jmp 80a0344
 80a0392:  nop
 80a0393:  nop
 80a0394:  nop
 80a0395:  nop
 80a0396:  nop
 80a0397:  nop
 80a0398:  nop
 80a0399:  nop
 80a039a:  nop
 80a039b:  nop
 80a039c:  nop
 80a039d:  nop
 80a039e:  nop
 80a039f:  nop

080a03a0 <__dladdr>:
 80a03a0:  push ebp
 80a03a1:  xor ecx, ecx
 80a03a3:  mov ebp, esp
 80a03a5:  sub esp, 0x4
 80a03a8:  mov edx, DWORD PTR [ebp+0xc]
 80a03ab:  mov eax, DWORD PTR [ebp+0x8]
 80a03ae:  mov DWORD PTR [esp], 0x0
 80a03b5:  call 8050f50
 80a03ba:  sub esp, 0x4
 80a03bd:  leave
 80a03be:  ret
 80a03bf:  nop

080a03c0 <__dladdr1>:
 80a03c0:  push ebp
 80a03c1:  mov ebp, esp
 80a03c3:  sub esp, 0x4
 80a03c6:  mov eax, DWORD PTR [ebp+0x14]
 80a03c9:  cmp eax, 0x1
 80a03cc:  je 80a03f0
 80a03ce:  cmp eax, 0x2
 80a03d1:  je 80a0408
 80a03d3:  mov DWORD PTR [esp], 0x0
 80a03da:  mov edx, DWORD PTR [ebp+0xc]
 80a03dd:  xor ecx, ecx
 80a03df:  mov eax, DWORD PTR [ebp+0x8]
 80a03e2:  call 8050f50
 80a03e7:  sub esp, 0x4
 80a03ea:  leave
 80a03eb:  ret
 80a03ec:  lea esi, [esi]
 80a03f0:  mov eax, DWORD PTR [ebp+0x10]
 80a03f3:  xor ecx, ecx
 80a03f5:  mov DWORD PTR [esp], eax
 80a03f8:  mov edx, DWORD PTR [ebp+0xc]
 80a03fb:  mov eax, DWORD PTR [ebp+0x8]
 80a03fe:  call 8050f50
 80a0403:  sub esp, 0x4
 80a0406:  jmp 80a03ea
 80a0408:  mov DWORD PTR [esp], 0x0
 80a040f:  mov ecx, DWORD PTR [ebp+0x10]
 80a0412:  mov edx, DWORD PTR [ebp+0xc]
 80a0415:  mov eax, DWORD PTR [ebp+0x8]
 80a0418:  call 8050f50
 80a041d:  sub esp, 0x4
 80a0420:  leave
 80a0421:  ret
 80a0422:  nop
 80a0423:  nop
 80a0424:  nop
 80a0425:  nop
 80a0426:  nop
 80a0427:  nop
 80a0428:  nop
 80a0429:  nop
 80a042a:  nop
 80a042b:  nop
 80a042c:  nop
 80a042d:  nop
 80a042e:  nop
 80a042f:  nop

080a0430 <__dlinfo>:
 80a0430:  push ebp
 80a0431:  mov ebp, esp
 80a0433:  sub esp, 0x10
 80a0436:  mov eax, DWORD PTR [ebp+0x14]
 80a0439:  lea edx, [ebp-0x10]
 80a043c:  mov DWORD PTR [ebp-0x10], eax
 80a043f:  mov eax, DWORD PTR [ebp+0x8]
 80a0442:  mov DWORD PTR [ebp-0xc], eax
 80a0445:  mov eax, DWORD PTR [ebp+0xc]
 80a0448:  mov DWORD PTR [ebp-0x8], eax
 80a044b:  mov eax, DWORD PTR [ebp+0x10]
 80a044e:  mov DWORD PTR [ebp-0x4], eax
 80a0451:  mov eax, 0x80a0470
 80a0456:  call 809ff70
 80a045b:  leave
 80a045c:  cmp eax, 0x1
 80a045f:  sbb eax, eax
 80a0461:  not eax
 80a0463:  ret
 80a0464:  lea esi, [esi]
 80a046a:  lea edi, [edi]

080a0470 <dlinfo_doit>:
 80a0470:  push ebp
 80a0471:  mov ebp, esp
 80a0473:  sub esp, 0x10
 80a0476:  mov DWORD PTR [ebp-0x8], ebx
 80a0479:  mov ebx, DWORD PTR [ebp+0x8]
 80a047c:  mov DWORD PTR [ebp-0x4], esi
 80a047f:  cmp DWORD PTR [ebx+0x8], 0xa
 80a0483:  mov esi, DWORD PTR [ebx+0x4]
 80a0486:  jbe 80a04a0
 80a0488:  mov DWORD PTR [esp], 0x80c6ad2
 80a048f:  xor ecx, ecx
 80a0491:  xor edx, edx
 80a0493:  xor eax, eax
 80a0495:  call 807c080
 80a049a:  lea esi, [esi]
 80a04a0:  mov eax, DWORD PTR [ebx+0x8]
 80a04a3:  jmp DWORD PTR [eax*4+0x80c6af0]
 80a04aa:  lea esi, [esi]
 80a04b0:  mov eax, DWORD PTR [esi+0x240]
 80a04b6:  xor edx, edx
 80a04b8:  test eax, eax
 80a04ba:  jne 80a0560
 80a04c0:  mov eax, DWORD PTR [ebx+0xc]
 80a04c3:  mov DWORD PTR [eax], edx
 80a04c5:  mov ebx, DWORD PTR [ebp-0x8]
 80a04c8:  mov esi, DWORD PTR [ebp-0x4]
 80a04cb:  mov esp, ebp
 80a04cd:  pop ebp
 80a04ce:  ret
 80a04cf:  nop
 80a04d0:  mov edx, DWORD PTR [ebx+0xc]
 80a04d3:  mov eax, DWORD PTR [esi+0x18]
 80a04d6:  mov DWORD PTR [edx], eax
 80a04d8:  mov ebx, DWORD PTR [ebp-0x8]
 80a04db:  mov esi, DWORD PTR [ebp-0x4]
 80a04de:  mov esp, ebp
 80a04e0:  pop ebp
 80a04e1:  ret
 80a04e2:  lea esi, [esi]
 80a04e8:  mov eax, DWORD PTR [ebx+0xc]
 80a04eb:  mov DWORD PTR [eax], esi
 80a04ed:  mov ebx, DWORD PTR [ebp-0x8]
 80a04f0:  mov esi, DWORD PTR [ebp-0x4]
 80a04f3:  mov esp, ebp
 80a04f5:  pop ebp
 80a04f6:  ret
 80a04f7:  nop
 80a04f8:  mov edx, DWORD PTR [ebx+0xc]
 80a04fb:  xor ecx, ecx
 80a04fd:  mov ebx, DWORD PTR [ebp-0x8]
 80a0500:  mov eax, esi
 80a0502:  mov esi, DWORD PTR [ebp-0x4]
 80a0505:  mov esp, ebp
 80a0507:  pop ebp
 80a0508:  jmp 8076130
 80a050d:  lea esi, [esi]
 80a0510:  mov edx, DWORD PTR [ebx+0xc]
 80a0513:  mov ecx, 0x1
 80a0518:  jmp 80a04fd
 80a051a:  lea esi, [esi]
 80a0520:  mov eax, DWORD PTR [esi+0x1a8]
 80a0526:  mov DWORD PTR [esp+0x4], eax
 80a052a:  mov eax, DWORD PTR [ebx+0xc]
 80a052d:  mov DWORD PTR [esp], eax
 80a0530:  call 806afe0
 80a0535:  mov ebx, DWORD PTR [ebp-0x8]
 80a0538:  mov esi, DWORD PTR [ebp-0x4]
 80a053b:  mov esp, ebp
 80a053d:  pop ebp
 80a053e:  ret
 80a053f:  nop
 80a0540:  mov edx, DWORD PTR [ebx+0xc]
 80a0543:  mov DWORD PTR [edx], 0x0
 80a0549:  mov eax, DWORD PTR [esi+0x240]
 80a054f:  mov DWORD PTR [edx], eax
 80a0551:  mov ebx, DWORD PTR [ebp-0x8]
 80a0554:  mov esi, DWORD PTR [ebp-0x4]
 80a0557:  mov esp, ebp
 80a0559:  pop ebp
 80a055a:  ret
 80a055b:  nop
 80a055c:  lea esi, [esi]
 80a0560:  mov DWORD PTR [esp], esi
 80a0563:  call 807c9c0
 80a0568:  mov edx, eax
 80a056a:  jmp 80a04c0
 80a056f:  nop

080a0570 <__dlmopen>:
 80a0570:  push ebp
 80a0571:  mov ebp, esp
 80a0573:  sub esp, 0x18
 80a0576:  mov eax, DWORD PTR [ebp+0x8]
 80a0579:  lea edx, [ebp-0x14]
 80a057c:  mov DWORD PTR [ebp-0x14], eax
 80a057f:  mov eax, DWORD PTR [ebp+0xc]
 80a0582:  mov DWORD PTR [ebp-0x10], eax
 80a0585:  mov eax, DWORD PTR [ebp+0x10]
 80a0588:  mov DWORD PTR [ebp-0xc], eax
 80a058b:  mov eax, DWORD PTR [ebp+0x14]
 80a058e:  mov DWORD PTR [ebp-0x4], eax
 80a0591:  mov eax, 0x80a05c0
 80a0596:  call 809ff70
 80a059b:  xor edx, edx
 80a059d:  test eax, eax
 80a059f:  jne 80a05ba
 80a05a1:  mov eax, DWORD PTR [ebp-0x8]
 80a05a4:  mov DWORD PTR [esp], eax
 80a05a7:  call 80991c0
 80a05ac:  mov eax, DWORD PTR [ebp-0x8]
 80a05af:  mov DWORD PTR [esp], eax
 80a05b2:  call 809fe80
 80a05b7:  mov edx, DWORD PTR [ebp-0x8]
 80a05ba:  mov eax, edx
 80a05bc:  leave
 80a05bd:  ret
 80a05be:  xchg ax, ax

080a05c0 <dlmopen_doit>:
 80a05c0:  push ebp
 80a05c1:  mov ebp, esp
 80a05c3:  sub esp, 0x2c
 80a05c6:  mov DWORD PTR [ebp-0xc], ebx
 80a05c9:  mov ebx, DWORD PTR [ebp+0x8]
 80a05cc:  mov DWORD PTR [ebp-0x8], esi
 80a05cf:  mov DWORD PTR [ebp-0x4], edi
 80a05d2:  mov eax, DWORD PTR [ebx]
 80a05d4:  test eax, eax
 80a05d6:  jne 80a063f
 80a05d8:  mov edx, DWORD PTR [ebx+0x4]
 80a05db:  mov eax, DWORD PTR [ebx+0x10]
 80a05de:  mov edi, DWORD PTR ds:0x80d2218
 80a05e4:  mov esi, DWORD PTR ds:0x80d2e6c
 80a05ea:  test edx, edx
 80a05ec:  mov ecx, DWORD PTR ds:0x80d2e68
 80a05f2:  mov DWORD PTR [ebp-0x10], eax
 80a05f5:  mov eax, DWORD PTR [ebx+0x8]
 80a05f8:  je 80a0638
 80a05fa:  mov DWORD PTR [esp+0x10], ecx
 80a05fe:  mov ecx, DWORD PTR [ebp-0x10]
 80a0601:  or eax, 0x80000000
 80a0606:  mov DWORD PTR [esp+0x18], edi
 80a060a:  mov DWORD PTR [esp+0x14], esi
 80a060e:  mov DWORD PTR [esp+0xc], 0x0
 80a0616:  mov DWORD PTR [esp+0x8], ecx
 80a061a:  mov DWORD PTR [esp+0x4], eax
 80a061e:  mov DWORD PTR [esp], edx
 80a0621:  call 807d200
 80a0626:  mov DWORD PTR [ebx+0xc], eax
 80a0629:  mov ebx, DWORD PTR [ebp-0xc]
 80a062c:  mov esi, DWORD PTR [ebp-0x8]
 80a062f:  mov edi, DWORD PTR [ebp-0x4]
 80a0632:  mov esp, ebp
 80a0634:  pop ebp
 80a0635:  ret
 80a0636:  xchg ax, ax
 80a0638:  mov edx, 0x80c2c93
 80a063d:  jmp 80a05fa
 80a063f:  xor ecx, ecx
 80a0641:  xor edx, edx
 80a0643:  mov eax, 0x16
 80a0648:  mov DWORD PTR [esp], 0x80c6b1c
 80a064f:  call 807c080
 80a0654:  nop
 80a0655:  nop
 80a0656:  nop
 80a0657:  nop
 80a0658:  nop
 80a0659:  nop
 80a065a:  nop
 80a065b:  nop
 80a065c:  nop
 80a065d:  nop
 80a065e:  nop
 80a065f:  nop

080a0660 <strerror>:
 80a0660:  push ebp
 80a0661:  mov ebp, esp
 80a0663:  sub esp, 0x1c
 80a0666:  mov DWORD PTR [ebp-0xc], ebx
 80a0669:  mov ebx, DWORD PTR [ebp+0x8]
 80a066c:  mov DWORD PTR [ebp-0x8], esi
 80a066f:  mov DWORD PTR [ebp-0x4], edi
 80a0672:  mov DWORD PTR [esp+0x8], 0x0
 80a067a:  mov DWORD PTR [esp+0x4], 0x0
 80a0682:  mov DWORD PTR [esp], ebx
 80a0685:  call 806b060
 80a068a:  test eax, eax
 80a068c:  je 80a069b
 80a068e:  mov ebx, DWORD PTR [ebp-0xc]
 80a0691:  mov esi, DWORD PTR [ebp-0x8]
 80a0694:  mov edi, DWORD PTR [ebp-0x4]
 80a0697:  mov esp, ebp
 80a0699:  pop ebp
 80a069a:  ret
 80a069b:  mov edi, DWORD PTR gs:0x0
 80a06a2:  mov esi, 0xffffffe8
 80a06a8:  mov eax, DWORD PTR [edi+esi]
 80a06ab:  mov DWORD PTR [ebp-0x10], eax
 80a06ae:  mov eax, ds:0x80d2f48
 80a06b3:  test eax, eax
 80a06b5:  je 80a06d3
 80a06b7:  mov edx, DWORD PTR [ebp-0x10]
 80a06ba:  mov DWORD PTR [edi+esi], edx
 80a06bd:  mov DWORD PTR [esp+0x8], 0x400
 80a06c5:  mov DWORD PTR [esp+0x4], eax
 80a06c9:  mov DWORD PTR [esp], ebx
 80a06cc:  call 806b060
 80a06d1:  jmp 80a068e
 80a06d3:  mov DWORD PTR [esp], 0x400
 80a06da:  call 804d6f0
 80a06df:  mov edx, DWORD PTR [ebp-0x10]
 80a06e2:  mov DWORD PTR [edi+esi], edx
 80a06e5:  test eax, eax
 80a06e7:  mov ds:0x80d2f48, eax
 80a06ec:  jne 80a06bd
 80a06ee:  mov DWORD PTR [esp+0x8], 0x5
 80a06f6:  mov DWORD PTR [esp+0x4], 0x80c6b2e
 80a06fe:  mov DWORD PTR [esp], 0x80c3c9c
 80a0705:  call 80515a0
 80a070a:  jmp 80a068e
 80a070c:  nop
 80a070d:  nop
 80a070e:  nop
 80a070f:  nop

080a0710 <strpbrk>:
 80a0710:  mov edx, DWORD PTR [esp+0x4]
 80a0714:  mov eax, DWORD PTR [esp+0x8]
 80a0718:  xor ecx, ecx
 80a071a:  push ecx
 80a071b:  push ecx
 80a071c:  push ecx
 80a071d:  push ecx
 80a071e:  push ecx
 80a071f:  push ecx
 80a0720:  push ecx
 80a0721:  push ecx
 80a0722:  push ecx
 80a0723:  push ecx
 80a0724:  push ecx
 80a0725:  push ecx
 80a0726:  push ecx
 80a0727:  push ecx
 80a0728:  push ecx
 80a0729:  push ecx
 80a072a:  push ecx
 80a072b:  push ecx
 80a072c:  push ecx
 80a072d:  push ecx
 80a072e:  push ecx
 80a072f:  push ecx
 80a0730:  push ecx
 80a0731:  push ecx
 80a0732:  push ecx
 80a0733:  push ecx
 80a0734:  push ecx
 80a0735:  push ecx
 80a0736:  push ecx
 80a0737:  push ecx
 80a0738:  push ecx
 80a0739:  push ecx
 80a073a:  push ecx
 80a073b:  push ecx
 80a073c:  push ecx
 80a073d:  push ecx
 80a073e:  push ecx
 80a073f:  push ecx
 80a0740:  push ecx
 80a0741:  push ecx
 80a0742:  push ecx
 80a0743:  push ecx
 80a0744:  push ecx
 80a0745:  push ecx
 80a0746:  push ecx
 80a0747:  push ecx
 80a0748:  push ecx
 80a0749:  push ecx
 80a074a:  push ecx
 80a074b:  push ecx
 80a074c:  push ecx
 80a074d:  push ecx
 80a074e:  push ecx
 80a074f:  push ecx
 80a0750:  push ecx
 80a0751:  push ecx
 80a0752:  push ecx
 80a0753:  push ecx
 80a0754:  push 0x0
 80a0756:  push 0x0
 80a0758:  push 0x0
 80a075a:  push 0x0
 80a075c:  push 0x0
 80a075e:  push 0x0
 80a0760:  mov cl, BYTE PTR [eax]
 80a0762:  test cl, cl
 80a0764:  je 80a078d
 80a0766:  mov BYTE PTR [esp+ecx], cl
 80a0769:  mov cl, BYTE PTR [eax+0x1]
 80a076c:  test cl, 0xff
 80a076f:  je 80a078d
 80a0771:  mov BYTE PTR [esp+ecx], cl
 80a0774:  mov cl, BYTE PTR [eax+0x2]
 80a0777:  test cl, 0xff
 80a077a:  je 80a078d
 80a077c:  mov BYTE PTR [esp+ecx], cl
 80a077f:  mov cl, BYTE PTR [eax+0x3]
 80a0782:  add eax, 0x4
 80a0785:  mov BYTE PTR [esp+ecx], cl
 80a0788:  test cl, 0xff
 80a078b:  jne 80a0760
 80a078d:  lea eax, [edx-0x4]
 80a0790:  add eax, 0x4
 80a0793:  mov cl, BYTE PTR [eax]
 80a0795:  cmp BYTE PTR [esp+ecx], cl
 80a0798:  je 80a07b5
 80a079a:  mov cl, BYTE PTR [eax+0x1]
 80a079d:  cmp BYTE PTR [esp+ecx], cl
 80a07a0:  je 80a07b4
 80a07a2:  mov cl, BYTE PTR [eax+0x2]
 80a07a5:  cmp BYTE PTR [esp+ecx], cl
 80a07a8:  je 80a07b3
 80a07aa:  mov cl, BYTE PTR [eax+0x3]
 80a07ad:  cmp BYTE PTR [esp+ecx], cl
 80a07b0:  jne 80a0790
 80a07b2:  inc eax
 80a07b3:  inc eax
 80a07b4:  inc eax
 80a07b5:  add esp, 0x100
 80a07bb:  or cl, cl
 80a07bd:  jne 80a07c2
 80a07bf:  xor eax, eax
 80a07c1:  ret
 80a07c2:  ret
 80a07c3:  nop
 80a07c4:  nop
 80a07c5:  nop
 80a07c6:  nop
 80a07c7:  nop
 80a07c8:  nop
 80a07c9:  nop
 80a07ca:  nop
 80a07cb:  nop
 80a07cc:  nop
 80a07cd:  nop
 80a07ce:  nop
 80a07cf:  nop

080a07d0 <__mbrlen>:
 80a07d0:  push ebp
 80a07d1:  mov ebp, esp
 80a07d3:  sub esp, 0x10
 80a07d6:  mov eax, DWORD PTR [ebp+0x10]
 80a07d9:  test eax, eax
 80a07db:  je 80a0800
 80a07dd:  mov DWORD PTR [esp+0xc], eax
 80a07e1:  mov eax, DWORD PTR [ebp+0xc]
 80a07e4:  mov DWORD PTR [esp], 0x0
 80a07eb:  mov DWORD PTR [esp+0x8], eax
 80a07ef:  mov eax, DWORD PTR [ebp+0x8]
 80a07f2:  mov DWORD PTR [esp+0x4], eax
 80a07f6:  call 80a0810
 80a07fb:  leave
 80a07fc:  ret
 80a07fd:  lea esi, [esi]
 80a0800:  mov eax, 0x80d2b7c
 80a0805:  jmp 80a07dd
 80a0807:  nop
 80a0808:  nop
 80a0809:  nop
 80a080a:  nop
 80a080b:  nop
 80a080c:  nop
 80a080d:  nop
 80a080e:  nop
 80a080f:  nop

080a0810 <__mbrtowc>:
 80a0810:  push ebp
 80a0811:  mov ebp, esp
 80a0813:  push edi
 80a0814:  push esi
 80a0815:  push ebx
 80a0816:  sub esp, 0x58
 80a0819:  mov eax, DWORD PTR [ebp+0x8]
 80a081c:  mov edx, DWORD PTR [ebp+0x14]
 80a081f:  test eax, eax
 80a0821:  je 80a0998
 80a0827:  test edx, edx
 80a0829:  mov DWORD PTR [ebp-0x30], 0x0
 80a0830:  mov DWORD PTR [ebp-0x2c], 0x1
 80a0837:  mov DWORD PTR [ebp-0x34], 0x1
 80a083e:  je 80a09a0
 80a0844:  mov ebx, DWORD PTR [ebp+0xc]
 80a0847:  mov DWORD PTR [ebp-0x28], edx
 80a084a:  mov DWORD PTR [ebp-0x1c], 0x0
 80a0851:  mov DWORD PTR [ebp-0x40], eax
 80a0854:  test ebx, ebx
 80a0856:  je 80a09b0
 80a085c:  mov edx, DWORD PTR [ebp-0x40]
 80a085f:  mov eax, edx
 80a0861:  add eax, 0x4
 80a0864:  mov DWORD PTR [ebp-0x38], eax
 80a0867:  mov eax, gs:0x0
 80a086d:  mov DWORD PTR [ebp-0x3c], edx
 80a0870:  mov DWORD PTR [ebp-0x44], eax
 80a0873:  mov eax, 0xffffffd8
 80a0878:  mov edx, DWORD PTR [ebp-0x44]
 80a087b:  mov eax, DWORD PTR [edx+eax]
 80a087e:  mov ebx, DWORD PTR [eax]
 80a0880:  mov edi, DWORD PTR [ebx+0x14]
 80a0883:  test edi, edi
 80a0885:  je 80a09d0
 80a088b:  mov esi, DWORD PTR [ebp+0xc]
 80a088e:  add esi, DWORD PTR [ebp+0x10]
 80a0891:  sbb eax, eax
 80a0893:  or esi, eax
 80a0895:  mov eax, DWORD PTR [edi]
 80a0897:  mov ecx, DWORD PTR [eax]
 80a0899:  mov ebx, DWORD PTR [eax+0x14]
 80a089c:  test ecx, ecx
 80a089e:  je 80a08aa
 80a08a0:  ror ebx, 0x9
 80a08a3:  xor ebx, DWORD PTR gs:0x18
 80a08aa:  mov eax, DWORD PTR [ebp+0xc]
 80a08ad:  mov DWORD PTR [ebp-0x18], eax
 80a08b0:  mov DWORD PTR [esp], ebx
 80a08b3:  call 807f350
 80a08b8:  lea eax, [ebp-0x14]
 80a08bb:  mov DWORD PTR [esp+0x14], eax
 80a08bf:  lea eax, [ebp-0x18]
 80a08c2:  mov DWORD PTR [esp+0x8], eax
 80a08c6:  lea eax, [ebp-0x3c]
 80a08c9:  mov DWORD PTR [esp+0x1c], 0x1
 80a08d1:  mov DWORD PTR [esp+0x18], 0x0
 80a08d9:  mov DWORD PTR [esp+0x10], 0x0
 80a08e1:  mov DWORD PTR [esp+0xc], esi
 80a08e5:  mov DWORD PTR [esp+0x4], eax
 80a08e9:  mov eax, DWORD PTR [edi]
 80a08eb:  mov DWORD PTR [esp], eax
 80a08ee:  call ebx
 80a08f0:  test eax, eax
 80a08f2:  je 80a0916
 80a08f4:  cmp eax, 0x4
 80a08f7:  je 80a0958
 80a08f9:  cmp eax, 0x6
 80a08fc:  lea esi, [esi]
 80a0900:  je 80a0958
 80a0902:  cmp eax, 0x7
 80a0905:  lea esi, [esi]
 80a0908:  je 80a0958
 80a090a:  cmp eax, 0x5
 80a090d:  lea esi, [esi]
 80a0910:  jne 80a09f0
 80a0916:  mov edx, DWORD PTR [ebp-0x40]
 80a0919:  cmp DWORD PTR [ebp-0x3c], edx
 80a091c:  lea esi, [esi]
 80a0920:  je 80a0948
 80a0922:  mov edx, DWORD PTR [edx]
 80a0924:  test edx, edx
 80a0926:  jne 80a0948
 80a0928:  mov eax, DWORD PTR [ebp-0x28]
 80a092b:  xor edx, edx
 80a092d:  mov eax, DWORD PTR [eax]
 80a092f:  test eax, eax
 80a0931:  jne 80a0a14
 80a0937:  add esp, 0x58
 80a093a:  mov eax, edx
 80a093c:  pop ebx
 80a093d:  pop esi
 80a093e:  pop edi
 80a093f:  pop ebp
 80a0940:  ret
 80a0941:  lea esi, [esi]
 80a0948:  mov edx, DWORD PTR [ebp-0x18]
 80a094b:  sub edx, DWORD PTR [ebp+0xc]
 80a094e:  add esp, 0x58
 80a0951:  pop ebx
 80a0952:  pop esi
 80a0953:  mov eax, edx
 80a0955:  pop edi
 80a0956:  pop ebp
 80a0957:  ret
 80a0958:  test eax, eax
 80a095a:  je 80a0916
 80a095c:  cmp eax, 0x4
 80a095f:  je 80a0916
 80a0961:  cmp eax, 0x5
 80a0964:  lea esi, [esi]
 80a0968:  je 80a0916
 80a096a:  cmp eax, 0x7
 80a096d:  mov edx, 0xfffffffe
 80a0972:  lea esi, [esi]
 80a0978:  je 80a0937
 80a097a:  mov edx, DWORD PTR [ebp-0x44]
 80a097d:  mov eax, 0xffffffe8
 80a0982:  mov DWORD PTR [edx+eax], 0x54
 80a0989:  mov edx, 0xffffffff
 80a098e:  add esp, 0x58
 80a0991:  mov eax, edx
 80a0993:  pop ebx
 80a0994:  pop esi
 80a0995:  pop edi
 80a0996:  pop ebp
 80a0997:  ret
 80a0998:  lea eax, [ebp-0x10]
 80a099b:  jmp 80a0827
 80a09a0:  mov edx, 0x80d2b84
 80a09a5:  jmp 80a0844
 80a09aa:  lea esi, [esi]
 80a09b0:  lea eax, [ebp-0x10]
 80a09b3:  mov DWORD PTR [ebp-0x40], eax
 80a09b6:  mov DWORD PTR [ebp+0xc], 0x80c2c93
 80a09bd:  mov DWORD PTR [ebp+0x10], 0x1
 80a09c4:  jmp 80a085c
 80a09c9:  lea esi, [esi]
 80a09d0:  cmp ebx, 0x80b8880
 80a09d6:  mov edi, 0x80b1e20
 80a09db:  je 80a088b
 80a09e1:  mov eax, ebx
 80a09e3:  call 806d110
 80a09e8:  mov edi, DWORD PTR [ebx+0x14]
 80a09eb:  jmp 80a088b
 80a09f0:  mov DWORD PTR [esp+0xc], 0x80c6b46
 80a09f8:  mov DWORD PTR [esp+0x8], 0x5c
 80a0a00:  mov DWORD PTR [esp+0x4], 0x80c6b3c
 80a0a08:  mov DWORD PTR [esp], 0x80b1cb8
 80a0a0f:  call 8051490
 80a0a14:  mov DWORD PTR [esp+0xc], 0x80c6b46
 80a0a1c:  mov DWORD PTR [esp+0x8], 0x65
 80a0a24:  mov DWORD PTR [esp+0x4], 0x80c6b3c
 80a0a2c:  mov DWORD PTR [esp], 0x80b1db4
 80a0a33:  call 8051490
 80a0a38:  nop
 80a0a39:  nop
 80a0a3a:  nop
 80a0a3b:  nop
 80a0a3c:  nop
 80a0a3d:  nop
 80a0a3e:  nop
 80a0a3f:  nop

080a0a40 <__getdents64>:
 80a0a40:  push ebp
 80a0a41:  mov ebp, esp
 80a0a43:  sub esp, 0x8
 80a0a46:  mov DWORD PTR [esp+0x4], esi
 80a0a4a:  mov esi, edx
 80a0a4c:  mov edx, ecx
 80a0a4e:  mov DWORD PTR [esp], ebx
 80a0a51:  mov ecx, esi
 80a0a53:  mov ebx, eax
 80a0a55:  mov eax, 0xdc
 80a0a5a:  int 0x80
 80a0a5c:  cmp eax, 0xfffff000
 80a0a61:  mov ebx, eax
 80a0a63:  ja 80a0a72
 80a0a65:  mov eax, ebx
 80a0a67:  mov esi, DWORD PTR [esp+0x4]
 80a0a6b:  mov ebx, DWORD PTR [esp]
 80a0a6e:  mov esp, ebp
 80a0a70:  pop ebp
 80a0a71:  ret
 80a0a72:  mov edx, 0xffffffe8
 80a0a78:  neg ebx
 80a0a7a:  mov eax, gs:0x0
 80a0a80:  mov DWORD PTR [eax+edx], ebx
 80a0a83:  mov ebx, 0xffffffff
 80a0a88:  jmp 80a0a65
 80a0a8a:  nop
 80a0a8b:  nop
 80a0a8c:  nop
 80a0a8d:  nop
 80a0a8e:  nop
 80a0a8f:  nop

080a0a90 <profil_counter>:
 80a0a90:  push ebp
 80a0a91:  mov ebp, esp
 80a0a93:  mov edx, DWORD PTR [ebp+0x44]
 80a0a96:  sub edx, DWORD PTR ds:0x80d2c54
 80a0a9c:  mov eax, edx
 80a0a9e:  shr eax, 0x1f
 80a0aa1:  add eax, edx
 80a0aa3:  sar eax, 1
 80a0aa5:  mul DWORD PTR ds:0x80d2c58
 80a0aab:  shrd eax, edx, 0x10
 80a0aaf:  cmp eax, DWORD PTR ds:0x80d2c50
 80a0ab5:  jae 80a0ac3
 80a0ab7:  add eax, eax
 80a0ab9:  add eax, DWORD PTR ds:0x80d2c4c
 80a0abf:  add WORD PTR [eax], 0x1
 80a0ac3:  pop ebp
 80a0ac4:  ret
 80a0ac5:  lea esi, [esi]
 80a0ac9:  lea edi, [edi]

080a0ad0 <__profil>:
 80a0ad0:  push ebp
 80a0ad1:  mov ebp, esp
 80a0ad3:  push ebx
 80a0ad4:  sub esp, 0xa8
 80a0ada:  mov ebx, DWORD PTR [ebp+0x8]
 80a0add:  test ebx, ebx
 80a0adf:  je 80a0bf8
 80a0ae5:  mov eax, ds:0x80d2c4c
 80a0aea:  test eax, eax
 80a0aec:  je 80a0b40
 80a0aee:  mov DWORD PTR [esp+0x8], 0x0
 80a0af6:  mov DWORD PTR [esp+0x4], 0x80d2ba0
 80a0afe:  mov DWORD PTR [esp], 0x2
 80a0b05:  call 80a9040
 80a0b0a:  test eax, eax
 80a0b0c:  jns 80a0b1c
 80a0b0e:  mov eax, 0xffffffff
 80a0b13:  add esp, 0xa8
 80a0b19:  pop ebx
 80a0b1a:  pop ebp
 80a0b1b:  ret
 80a0b1c:  mov DWORD PTR [esp+0x8], 0x0
 80a0b24:  mov DWORD PTR [esp+0x4], 0x80d2bc0
 80a0b2c:  mov DWORD PTR [esp], 0x1b
 80a0b33:  call 808b200
 80a0b38:  test eax, eax
 80a0b3a:  js 80a0b0e
 80a0b3c:  lea esi, [esi]
 80a0b40:  shr DWORD PTR [ebp+0xc], 1
 80a0b43:  mov eax, DWORD PTR [ebp+0xc]
 80a0b46:  lea edx, [ebp-0xa0]
 80a0b4c:  mov ecx, DWORD PTR [ebp+0x10]
 80a0b4f:  mov DWORD PTR ds:0x80d2c4c, ebx
 80a0b55:  mov ds:0x80d2c50, eax
 80a0b5a:  mov eax, DWORD PTR [ebp+0x14]
 80a0b5d:  mov DWORD PTR ds:0x80d2c54, ecx
 80a0b63:  mov ds:0x80d2c58, eax
 80a0b68:  lea eax, [ebp-0x20]
 80a0b6b:  nop
 80a0b6c:  lea esi, [esi]
 80a0b70:  mov DWORD PTR [eax], 0xffffffff
 80a0b76:  sub eax, 0x4
 80a0b79:  cmp eax, edx
 80a0b7b:  jne 80a0b70
 80a0b7d:  mov DWORD PTR [ebp-0x1c], 0x10000000
 80a0b84:  mov DWORD PTR [ebp-0xa0], 0x80a0a90
 80a0b8e:  mov DWORD PTR [esp+0x8], 0x80d2bc0
 80a0b96:  mov DWORD PTR [esp+0x4], eax
 80a0b9a:  mov DWORD PTR [esp], 0x1b
 80a0ba1:  call 808b200
 80a0ba6:  test eax, eax
 80a0ba8:  js 80a0b0e
 80a0bae:  mov DWORD PTR [ebp-0xc], 0x0
 80a0bb5:  call 80a0c60
 80a0bba:  mov edx, 0xf4240
 80a0bbf:  mov ecx, eax
 80a0bc1:  mov eax, edx
 80a0bc3:  sar edx, 0x1f
 80a0bc6:  idiv ecx
 80a0bc8:  mov DWORD PTR [ebp-0x8], eax
 80a0bcb:  mov DWORD PTR [ebp-0x10], eax
 80a0bce:  mov eax, DWORD PTR [ebp-0xc]
 80a0bd1:  mov DWORD PTR [ebp-0x14], eax
 80a0bd4:  lea eax, [ebp-0x14]
 80a0bd7:  mov DWORD PTR [esp+0x8], 0x80d2ba0
 80a0bdf:  mov DWORD PTR [esp+0x4], eax
 80a0be3:  mov DWORD PTR [esp], 0x2
 80a0bea:  call 80a9040
 80a0bef:  add esp, 0xa8
 80a0bf5:  pop ebx
 80a0bf6:  pop ebp
 80a0bf7:  ret
 80a0bf8:  mov edx, DWORD PTR ds:0x80d2c4c
 80a0bfe:  xor eax, eax
 80a0c00:  test edx, edx
 80a0c02:  je 80a0b13
 80a0c08:  mov DWORD PTR [esp+0x8], 0x0
 80a0c10:  mov DWORD PTR [esp+0x4], 0x80d2ba0
 80a0c18:  mov DWORD PTR [esp], 0x2
 80a0c1f:  call 80a9040
 80a0c24:  test eax, eax
 80a0c26:  js 80a0b0e
 80a0c2c:  mov DWORD PTR [esp+0x8], 0x0
 80a0c34:  mov DWORD PTR [esp+0x4], 0x80d2bc0
 80a0c3c:  mov DWORD PTR [esp], 0x1b
 80a0c43:  mov DWORD PTR ds:0x80d2c4c, 0x0
 80a0c4d:  call 808b200
 80a0c52:  jmp 80a0b13
 80a0c57:  nop
 80a0c58:  nop
 80a0c59:  nop
 80a0c5a:  nop
 80a0c5b:  nop
 80a0c5c:  nop
 80a0c5d:  nop
 80a0c5e:  nop
 80a0c5f:  nop

080a0c60 <__profile_frequency>:
 80a0c60:  push ebp
 80a0c61:  mov eax, ds:0x80d2e00
 80a0c66:  mov ebp, esp
 80a0c68:  pop ebp
 80a0c69:  ret
 80a0c6a:  nop
 80a0c6b:  nop
 80a0c6c:  nop
 80a0c6d:  nop
 80a0c6e:  nop
 80a0c6f:  nop

080a0c70 <strtoll>:
 80a0c70:  push ebp
 80a0c71:  mov eax, gs:0x0
 80a0c77:  mov ebp, esp
 80a0c79:  sub esp, 0x14
 80a0c7c:  mov edx, 0xffffffe4
 80a0c82:  mov eax, DWORD PTR [eax+edx]
 80a0c85:  mov DWORD PTR [esp+0xc], 0x0
 80a0c8d:  mov DWORD PTR [esp+0x10], eax
 80a0c91:  mov eax, DWORD PTR [ebp+0x10]
 80a0c94:  mov DWORD PTR [esp+0x8], eax
 80a0c98:  mov eax, DWORD PTR [ebp+0xc]
 80a0c9b:  mov DWORD PTR [esp+0x4], eax
 80a0c9f:  mov eax, DWORD PTR [ebp+0x8]
 80a0ca2:  mov DWORD PTR [esp], eax
 80a0ca5:  call 80a0d70
 80a0caa:  leave
 80a0cab:  ret
 80a0cac:  lea esi, [esi]

080a0cb0 <__strtoll_internal>:
 80a0cb0:  push ebp
 80a0cb1:  mov eax, gs:0x0
 80a0cb7:  mov ebp, esp
 80a0cb9:  sub esp, 0x14
 80a0cbc:  mov edx, 0xffffffe4
 80a0cc2:  mov eax, DWORD PTR [eax+edx]
 80a0cc5:  mov DWORD PTR [esp+0x10], eax
 80a0cc9:  mov eax, DWORD PTR [ebp+0x14]
 80a0ccc:  mov DWORD PTR [esp+0xc], eax
 80a0cd0:  mov eax, DWORD PTR [ebp+0x10]
 80a0cd3:  mov DWORD PTR [esp+0x8], eax
 80a0cd7:  mov eax, DWORD PTR [ebp+0xc]
 80a0cda:  mov DWORD PTR [esp+0x4], eax
 80a0cde:  mov eax, DWORD PTR [ebp+0x8]
 80a0ce1:  mov DWORD PTR [esp], eax
 80a0ce4:  call 80a0d70
 80a0ce9:  leave
 80a0cea:  ret
 80a0ceb:  nop
 80a0cec:  nop
 80a0ced:  nop
 80a0cee:  nop
 80a0cef:  nop

080a0cf0 <strtoull>:
 80a0cf0:  push ebp
 80a0cf1:  mov eax, gs:0x0
 80a0cf7:  mov ebp, esp
 80a0cf9:  sub esp, 0x14
 80a0cfc:  mov edx, 0xffffffe4
 80a0d02:  mov eax, DWORD PTR [eax+edx]
 80a0d05:  mov DWORD PTR [esp+0xc], 0x0
 80a0d0d:  mov DWORD PTR [esp+0x10], eax
 80a0d11:  mov eax, DWORD PTR [ebp+0x10]
 80a0d14:  mov DWORD PTR [esp+0x8], eax
 80a0d18:  mov eax, DWORD PTR [ebp+0xc]
 80a0d1b:  mov DWORD PTR [esp+0x4], eax
 80a0d1f:  mov eax, DWORD PTR [ebp+0x8]
 80a0d22:  mov DWORD PTR [esp], eax
 80a0d25:  call 80a1420
 80a0d2a:  leave
 80a0d2b:  ret
 80a0d2c:  lea esi, [esi]

080a0d30 <__strtoull_internal>:
 80a0d30:  push ebp
 80a0d31:  mov eax, gs:0x0
 80a0d37:  mov ebp, esp
 80a0d39:  sub esp, 0x14
 80a0d3c:  mov edx, 0xffffffe4
 80a0d42:  mov eax, DWORD PTR [eax+edx]
 80a0d45:  mov DWORD PTR [esp+0x10], eax
 80a0d49:  mov eax, DWORD PTR [ebp+0x14]
 80a0d4c:  mov DWORD PTR [esp+0xc], eax
 80a0d50:  mov eax, DWORD PTR [ebp+0x10]
 80a0d53:  mov DWORD PTR [esp+0x8], eax
 80a0d57:  mov eax, DWORD PTR [ebp+0xc]
 80a0d5a:  mov DWORD PTR [esp+0x4], eax
 80a0d5e:  mov eax, DWORD PTR [ebp+0x8]
 80a0d61:  mov DWORD PTR [esp], eax
 80a0d64:  call 80a1420
 80a0d69:  leave
 80a0d6a:  ret
 80a0d6b:  nop
 80a0d6c:  nop
 80a0d6d:  nop
 80a0d6e:  nop
 80a0d6f:  nop

080a0d70 <____strtoll_l_internal>:
 80a0d70:  push ebp
 80a0d71:  mov ebp, esp
 80a0d73:  push edi
 80a0d74:  push esi
 80a0d75:  push ebx
 80a0d76:  sub esp, 0x70
 80a0d79:  mov ecx, DWORD PTR [ebp+0x14]
 80a0d7c:  mov eax, DWORD PTR [ebp+0x18]
 80a0d7f:  test ecx, ecx
 80a0d81:  mov edx, DWORD PTR [eax+0x4]
 80a0d84:  jne 80a1286
 80a0d8a:  mov DWORD PTR [ebp-0x28], 0x0
 80a0d91:  mov DWORD PTR [ebp-0x20], 0x0
 80a0d98:  mov edx, DWORD PTR [ebp+0x10]
 80a0d9b:  test edx, edx
 80a0d9d:  js 80a0f80
 80a0da3:  cmp DWORD PTR [ebp+0x10], 0x1
 80a0da7:  je 80a0f80
 80a0dad:  cmp DWORD PTR [ebp+0x10], 0x24
 80a0db1:  jg 80a0f80
 80a0db7:  mov eax, DWORD PTR [ebp+0x8]
 80a0dba:  mov esi, DWORD PTR [ebp+0x18]
 80a0dbd:  mov edx, DWORD PTR [ebp+0x8]
 80a0dc0:  movzx ecx, BYTE PTR [eax]
 80a0dc3:  mov ebx, DWORD PTR [esi+0x34]
 80a0dc6:  movsx eax, cl
 80a0dc9:  test BYTE PTR [ebx+eax*2+0x1], 0x20
 80a0dce:  je 80a0de0
 80a0dd0:  add edx, 0x1
 80a0dd3:  movzx ecx, BYTE PTR [edx]
 80a0dd6:  movsx eax, cl
 80a0dd9:  test BYTE PTR [ebx+eax*2+0x1], 0x20
 80a0dde:  jne 80a0dd0
 80a0de0:  test cl, cl
 80a0de2:  mov DWORD PTR [ebp-0x10], edx
 80a0de5:  je 80a1224
 80a0deb:  cmp cl, 0x2d
 80a0dee:  je 80a1018
 80a0df4:  cmp cl, 0x2b
 80a0df7:  mov DWORD PTR [ebp-0x3c], 0x0
 80a0dfe:  je 80a102a
 80a0e04:  mov edx, DWORD PTR [ebp-0x10]
 80a0e07:  movzx esi, BYTE PTR [edx]
 80a0e0a:  mov ecx, esi
 80a0e0c:  mov edi, esi
 80a0e0e:  cmp cl, 0x30
 80a0e11:  je 80a0fd0
 80a0e17:  mov eax, DWORD PTR [ebp+0x10]
 80a0e1a:  test eax, eax
 80a0e1c:  je 80a0fa0
 80a0e22:  cmp DWORD PTR [ebp+0x10], 0xa
 80a0e26:  je 80a0fa0
 80a0e2c:  mov eax, DWORD PTR [ebp+0x10]
 80a0e2f:  sub eax, 0x2
 80a0e32:  mov DWORD PTR [ebp-0x30], 0x0
 80a0e39:  mov DWORD PTR [ebp-0x24], 0x0
 80a0e40:  mov edx, DWORD PTR [eax*8+0x80c6b60]
 80a0e47:  mov ecx, DWORD PTR [eax*8+0x80c6b64]
 80a0e4e:  movzx ebx, BYTE PTR [eax+0x80c6c80]
 80a0e55:  mov eax, DWORD PTR [eax*4+0x80b0aa0]
 80a0e5c:  mov DWORD PTR [ebp-0x48], edx
 80a0e5f:  mov esi, DWORD PTR [ebp-0x10]
 80a0e62:  mov DWORD PTR [ebp-0x4c], ecx
 80a0e65:  mov BYTE PTR [ebp-0x3d], bl
 80a0e68:  mov DWORD PTR [ebp-0x1c], eax
 80a0e6b:  mov eax, edi
 80a0e6d:  test al, al
 80a0e6f:  mov DWORD PTR [ebp-0x38], 0x0
 80a0e76:  mov DWORD PTR [ebp-0x34], 0x0
 80a0e7d:  je 80a0f29
 80a0e83:  xor edx, edx
 80a0e85:  cmp DWORD PTR [ebp-0x30], esi
 80a0e88:  je 80a12e8
 80a0e8e:  mov ecx, DWORD PTR [ebp-0x24]
 80a0e91:  sub ecx, 0x1
 80a0e94:  mov DWORD PTR [ebp-0x58], ecx
 80a0e97:  nop
 80a0e98:  lea ecx, [edi-0x30]
 80a0e9b:  cmp cl, 0x9
 80a0e9e:  jbe 80a0ef0
 80a0ea0:  mov eax, DWORD PTR [ebp-0x24]
 80a0ea3:  test eax, eax
 80a0ea5:  je 80a1040
 80a0eab:  mov ecx, DWORD PTR [ebp-0x28]
 80a0eae:  xor ebx, ebx
 80a0eb0:  mov eax, edi
 80a0eb2:  cmp al, BYTE PTR [ecx]
 80a0eb4:  je 80a0ec4
 80a0eb6:  jmp 80a0ed5
 80a0eb8:  mov ecx, DWORD PTR [ebp-0x28]
 80a0ebb:  movzx eax, BYTE PTR [ecx+ebx]
 80a0ebf:  cmp al, BYTE PTR [esi+ebx]
 80a0ec2:  jne 80a0ecc
 80a0ec4:  add ebx, 0x1
 80a0ec7:  cmp DWORD PTR [ebp-0x24], ebx
 80a0eca:  ja 80a0eb8
 80a0ecc:  cmp ebx, DWORD PTR [ebp-0x24]
 80a0ecf:  je 80a1060
 80a0ed5:  mov ebx, edi
 80a0ed7:  movzx ecx, bl
 80a0eda:  mov ebx, DWORD PTR [ebp+0x18]
 80a0edd:  mov eax, DWORD PTR [ebx+0x34]
 80a0ee0:  test BYTE PTR [eax+ecx*2+0x1], 0x4
 80a0ee5:  je 80a0f1f
 80a0ee7:  mov eax, DWORD PTR [ebx+0x3c]
 80a0eea:  mov eax, DWORD PTR [eax+ecx*4]
 80a0eed:  lea ecx, [eax-0x37]
 80a0ef0:  movzx ebx, cl
 80a0ef3:  cmp DWORD PTR [ebp+0x10], ebx
 80a0ef6:  jle 80a0f1f
 80a0ef8:  cmp edx, DWORD PTR [ebp-0x1c]
 80a0efb:  jae 80a10ba
 80a0f01:  mov eax, DWORD PTR [ebp+0x10]
 80a0f04:  imul eax, edx
 80a0f07:  lea edx, [ebx+eax]
 80a0f0a:  add esi, 0x1
 80a0f0d:  movzx edi, BYTE PTR [esi]
 80a0f10:  mov ecx, edi
 80a0f12:  test cl, cl
 80a0f14:  je 80a0f1f
 80a0f16:  cmp DWORD PTR [ebp-0x30], esi
 80a0f19:  jne 80a0e98
 80a0f1f:  mov DWORD PTR [ebp-0x38], edx
 80a0f22:  mov DWORD PTR [ebp-0x34], 0x0
 80a0f29:  mov DWORD PTR [ebp-0x2c], 0x0
 80a0f30:  mov ecx, DWORD PTR [ebp-0x10]
 80a0f33:  cmp ecx, esi
 80a0f35:  je 80a1227
 80a0f3b:  mov edi, DWORD PTR [ebp+0xc]
 80a0f3e:  test edi, edi
 80a0f40:  je 80a0f47
 80a0f42:  mov edx, DWORD PTR [ebp+0xc]
 80a0f45:  mov DWORD PTR [edx], esi
 80a0f47:  mov ebx, DWORD PTR [ebp-0x2c]
 80a0f4a:  test ebx, ebx
 80a0f4c:  je 80a1068
 80a0f52:  mov edx, 0xffffffe8
 80a0f58:  mov eax, gs:0x0
 80a0f5e:  mov edi, DWORD PTR [ebp-0x3c]
 80a0f61:  mov DWORD PTR [eax+edx], 0x22
 80a0f68:  xor eax, eax
 80a0f6a:  mov edx, 0x80000000
 80a0f6f:  test edi, edi
 80a0f71:  jne 80a0f97
 80a0f73:  mov eax, 0xffffffff
 80a0f78:  mov edx, 0x7fffffff
 80a0f7d:  jmp 80a0f97
 80a0f7f:  nop
 80a0f80:  mov edx, 0xffffffe8
 80a0f86:  mov eax, gs:0x0
 80a0f8c:  mov DWORD PTR [eax+edx], 0x16
 80a0f93:  xor eax, eax
 80a0f95:  xor edx, edx
 80a0f97:  add esp, 0x70
 80a0f9a:  pop ebx
 80a0f9b:  pop esi
 80a0f9c:  pop edi
 80a0f9d:  pop ebp
 80a0f9e:  ret
 80a0f9f:  nop
 80a0fa0:  mov eax, DWORD PTR [ebp-0x20]
 80a0fa3:  test eax, eax
 80a0fa5:  jne 80a12fb
 80a0fab:  mov DWORD PTR [ebp-0x30], 0x0
 80a0fb2:  mov eax, 0x8
 80a0fb7:  mov DWORD PTR [ebp-0x24], 0x0
 80a0fbe:  mov DWORD PTR [ebp+0x10], 0xa
 80a0fc5:  jmp 80a0e40
 80a0fca:  lea esi, [esi]
 80a0fd0:  mov eax, DWORD PTR [ebp+0x10]
 80a0fd3:  test eax, eax
 80a0fd5:  sete cl
 80a0fd8:  je 80a0fe4
 80a0fda:  cmp DWORD PTR [ebp+0x10], 0x10
 80a0fde:  jne 80a0e22
 80a0fe4:  mov eax, DWORD PTR [ebp-0x10]
 80a0fe7:  movsx edx, BYTE PTR [eax+0x1]
 80a0feb:  mov eax, DWORD PTR [ebp+0x18]
 80a0fee:  mov eax, DWORD PTR [eax+0x3c]
 80a0ff1:  cmp DWORD PTR [eax+edx*4], 0x58
 80a0ff5:  je 80a1269
 80a0ffb:  test cl, cl
 80a0ffd:  je 80a0e22
 80a1003:  mov DWORD PTR [ebp+0x10], 0x8
 80a100a:  mov eax, 0x6
 80a100f:  mov edi, esi
 80a1011:  jmp 80a0e32
 80a1016:  xchg ax, ax
 80a1018:  add edx, 0x1
 80a101b:  mov DWORD PTR [ebp-0x10], edx
 80a101e:  mov DWORD PTR [ebp-0x3c], 0x1
 80a1025:  jmp 80a0e04
 80a102a:  add edx, 0x1
 80a102d:  mov DWORD PTR [ebp-0x10], edx
 80a1030:  mov DWORD PTR [ebp-0x3c], 0x0
 80a1037:  jmp 80a0e04
 80a103c:  lea esi, [esi]
 80a1040:  mov ebx, DWORD PTR [ebp+0x18]
 80a1043:  mov eax, edi
 80a1045:  movzx ecx, al
 80a1048:  mov eax, DWORD PTR [ebx+0x34]
 80a104b:  test BYTE PTR [eax+ecx*2+0x1], 0x4
 80a1050:  jne 80a0ee7
 80a1056:  jmp 80a0f1f
 80a105b:  nop
 80a105c:  lea esi, [esi]
 80a1060:  add esi, DWORD PTR [ebp-0x58]
 80a1063:  jmp 80a0f0a
 80a1068:  mov ecx, DWORD PTR [ebp-0x3c]
 80a106b:  xor eax, eax
 80a106d:  mov edx, 0x80000000
 80a1072:  test ecx, ecx
 80a1074:  jne 80a1080
 80a1076:  mov eax, 0xffffffff
 80a107b:  mov edx, 0x7fffffff
 80a1080:  cmp edx, DWORD PTR [ebp-0x34]
 80a1083:  ja 80a1096
 80a1085:  jb 80a0f52
 80a108b:  cmp eax, DWORD PTR [ebp-0x38]
 80a108e:  xchg ax, ax
 80a1090:  jb 80a0f52
 80a1096:  mov esi, DWORD PTR [ebp-0x3c]
 80a1099:  test esi, esi
 80a109b:  nop
 80a109c:  lea esi, [esi]
 80a10a0:  je 80a10ac
 80a10a2:  neg DWORD PTR [ebp-0x38]
 80a10a5:  adc DWORD PTR [ebp-0x34], 0x0
 80a10a9:  neg DWORD PTR [ebp-0x34]
 80a10ac:  mov eax, DWORD PTR [ebp-0x38]
 80a10af:  mov edx, DWORD PTR [ebp-0x34]
 80a10b2:  add esp, 0x70
 80a10b5:  pop ebx
 80a10b6:  pop esi
 80a10b7:  pop edi
 80a10b8:  pop ebp
 80a10b9:  ret
 80a10ba:  mov eax, DWORD PTR [ebp+0x10]
 80a10bd:  mov DWORD PTR [ebp-0x38], edx
 80a10c0:  mov DWORD PTR [ebp-0x34], 0x0
 80a10c7:  mov DWORD PTR [ebp-0x2c], 0x0
 80a10ce:  mov edx, eax
 80a10d0:  sar edx, 0x1f
 80a10d3:  mov DWORD PTR [ebp-0x14], edx
 80a10d6:  mov edx, DWORD PTR [ebp-0x24]
 80a10d9:  mov DWORD PTR [ebp-0x18], eax
 80a10dc:  sub edx, 0x1
 80a10df:  mov DWORD PTR [ebp-0x54], edx
 80a10e2:  mov ebx, DWORD PTR [ebp-0x34]
 80a10e5:  mov eax, DWORD PTR [ebp-0x14]
 80a10e8:  imul eax, DWORD PTR [ebp-0x38]
 80a10ec:  imul ebx, DWORD PTR [ebp-0x18]
 80a10f0:  mov DWORD PTR [ebp-0x34], 0x0
 80a10f7:  add ebx, eax
 80a10f9:  mov eax, DWORD PTR [ebp-0x38]
 80a10fc:  mul DWORD PTR [ebp-0x18]
 80a10ff:  mov DWORD PTR [ebp-0x64], edx
 80a1102:  add edx, ebx
 80a1104:  movzx ebx, cl
 80a1107:  mov DWORD PTR [ebp-0x68], eax
 80a110a:  mov DWORD PTR [ebp-0x64], edx
 80a110d:  mov edx, DWORD PTR [ebp-0x68]
 80a1110:  mov DWORD PTR [ebp-0x38], ebx
 80a1113:  mov ecx, DWORD PTR [ebp-0x64]
 80a1116:  mov ebx, esi
 80a1118:  add DWORD PTR [ebp-0x38], edx
 80a111b:  adc DWORD PTR [ebp-0x34], ecx
 80a111e:  mov ecx, DWORD PTR [ebp-0x34]
 80a1121:  mov eax, DWORD PTR [ebp-0x38]
 80a1124:  xor ecx, DWORD PTR [ebp-0x4c]
 80a1127:  xor eax, DWORD PTR [ebp-0x48]
 80a112a:  or ecx, eax
 80a112c:  mov DWORD PTR [ebp-0x50], ecx
 80a112f:  nop
 80a1130:  movzx edi, BYTE PTR [ebx+0x1]
 80a1134:  lea esi, [ebx+0x1]
 80a1137:  mov eax, edi
 80a1139:  test al, al
 80a113b:  je 80a0f30
 80a1141:  cmp esi, DWORD PTR [ebp-0x30]
 80a1144:  je 80a1261
 80a114a:  lea ecx, [edi-0x30]
 80a114d:  cmp cl, 0x9
 80a1150:  jbe 80a11b0
 80a1152:  mov eax, DWORD PTR [ebp-0x24]
 80a1155:  test eax, eax
 80a1157:  je 80a11f8
 80a115d:  mov ecx, DWORD PTR [ebp-0x28]
 80a1160:  xor edx, edx
 80a1162:  mov eax, edi
 80a1164:  cmp al, BYTE PTR [ecx]
 80a1166:  je 80a117d
 80a1168:  jmp 80a118e
 80a116a:  lea esi, [esi]
 80a1170:  mov ecx, DWORD PTR [ebp-0x28]
 80a1173:  movzx eax, BYTE PTR [ecx+edx]
 80a1177:  cmp al, BYTE PTR [ebx+edx+0x1]
 80a117b:  jne 80a1185
 80a117d:  add edx, 0x1
 80a1180:  cmp DWORD PTR [ebp-0x24], edx
 80a1183:  ja 80a1170
 80a1185:  cmp edx, DWORD PTR [ebp-0x24]
 80a1188:  je 80a1219
 80a118e:  mov ebx, DWORD PTR [ebp+0x18]
 80a1191:  mov ecx, edi
 80a1193:  movzx edx, cl
 80a1196:  mov eax, DWORD PTR [ebx+0x34]
 80a1199:  test BYTE PTR [eax+edx*2+0x1], 0x4
 80a119e:  je 80a0f30
 80a11a4:  mov eax, DWORD PTR [ebx+0x3c]
 80a11a7:  mov eax, DWORD PTR [eax+edx*4]
 80a11aa:  lea ecx, [eax-0x37]
 80a11ad:  lea esi, [esi]
 80a11b0:  movzx eax, cl
 80a11b3:  cmp DWORD PTR [ebp+0x10], eax
 80a11b6:  jle 80a0f30
 80a11bc:  mov ebx, DWORD PTR [ebp-0x34]
 80a11bf:  cmp DWORD PTR [ebp-0x4c], ebx
 80a11c2:  jb 80a11e7
 80a11c4:  ja 80a11d2
 80a11c6:  mov eax, DWORD PTR [ebp-0x38]
 80a11c9:  cmp DWORD PTR [ebp-0x48], eax
 80a11cc:  lea esi, [esi]
 80a11d0:  jb 80a11e7
 80a11d2:  mov eax, DWORD PTR [ebp-0x50]
 80a11d5:  test eax, eax
 80a11d7:  nop
 80a11d8:  jne 80a10e2
 80a11de:  cmp cl, BYTE PTR [ebp-0x3d]
 80a11e1:  jbe 80a12cb
 80a11e7:  mov ebx, esi
 80a11e9:  mov DWORD PTR [ebp-0x2c], 0x1
 80a11f0:  jmp 80a1130
 80a11f5:  lea esi, [esi]
 80a11f8:  mov ecx, DWORD PTR [ebp+0x18]
 80a11fb:  mov eax, edi
 80a11fd:  movzx edx, al
 80a1200:  mov eax, DWORD PTR [ecx+0x34]
 80a1203:  test BYTE PTR [eax+edx*2+0x1], 0x4
 80a1208:  je 80a0f30
 80a120e:  mov eax, DWORD PTR [ecx+0x3c]
 80a1211:  mov eax, DWORD PTR [eax+edx*4]
 80a1214:  lea ecx, [eax-0x37]
 80a1217:  jmp 80a11b0
 80a1219:  mov eax, DWORD PTR [ebp-0x54]
 80a121c:  lea ebx, [esi+eax]
 80a121f:  jmp 80a1130
 80a1224:  mov ecx, DWORD PTR [ebp+0x8]
 80a1227:  mov ebx, DWORD PTR [ebp+0xc]
 80a122a:  xor eax, eax
 80a122c:  xor edx, edx
 80a122e:  test ebx, ebx
 80a1230:  je 80a0f97
 80a1236:  mov eax, ecx
 80a1238:  sub eax, DWORD PTR [ebp+0x8]
 80a123b:  sub eax, 0x1
 80a123e:  jle 80a1250
 80a1240:  mov ebx, DWORD PTR [ebp+0x18]
 80a1243:  movsx edx, BYTE PTR [ecx-0x1]
 80a1247:  mov eax, DWORD PTR [ebx+0x3c]
 80a124a:  cmp DWORD PTR [eax+edx*4], 0x58
 80a124e:  je 80a12ae
 80a1250:  mov edx, DWORD PTR [ebp+0x8]
 80a1253:  mov eax, DWORD PTR [ebp+0xc]
 80a1256:  mov DWORD PTR [eax], edx
 80a1258:  xor eax, eax
 80a125a:  xor edx, edx
 80a125c:  jmp 80a0f97
 80a1261:  mov esi, DWORD PTR [ebp-0x30]
 80a1264:  jmp 80a0f3b
 80a1269:  add DWORD PTR [ebp-0x10], 0x2
 80a126d:  mov eax, 0xe
 80a1272:  mov edx, DWORD PTR [ebp-0x10]
 80a1275:  mov DWORD PTR [ebp+0x10], 0x10
 80a127c:  movzx esi, BYTE PTR [edx]
 80a127f:  mov edi, esi
 80a1281:  jmp 80a0e32
 80a1286:  mov ecx, DWORD PTR [edx+0x2c]
 80a1289:  mov DWORD PTR [ebp-0x20], ecx
 80a128c:  movzx eax, BYTE PTR [ecx]
 80a128f:  sub eax, 0x1
 80a1292:  cmp al, 0x7d
 80a1294:  ja 80a0d8a
 80a129a:  mov edx, DWORD PTR [edx+0x28]
 80a129d:  mov DWORD PTR [ebp-0x28], edx
 80a12a0:  cmp BYTE PTR [edx], 0x0
 80a12a3:  jne 80a0d98
 80a12a9:  jmp 80a0d8a
 80a12ae:  cmp BYTE PTR [ecx-0x2], 0x30
 80a12b2:  lea esi, [esi]
 80a12b8:  jne 80a1250
 80a12ba:  mov esi, DWORD PTR [ebp+0xc]
 80a12bd:  lea eax, [ecx-0x1]
 80a12c0:  xor edx, edx
 80a12c2:  mov DWORD PTR [esi], eax
 80a12c4:  xor eax, eax
 80a12c6:  jmp 80a0f97
 80a12cb:  mov eax, DWORD PTR [ebp-0x48]
 80a12ce:  mov ebx, DWORD PTR [ebp-0x4c]
 80a12d1:  mov DWORD PTR [ebp-0x60], eax
 80a12d4:  mov eax, DWORD PTR [ebp-0x60]
 80a12d7:  mov DWORD PTR [ebp-0x5c], ebx
 80a12da:  mov edx, DWORD PTR [ebp-0x5c]
 80a12dd:  mov DWORD PTR [ebp-0x38], eax
 80a12e0:  mov DWORD PTR [ebp-0x34], edx
 80a12e3:  jmp 80a10e2
 80a12e8:  mov DWORD PTR [ebp-0x38], 0x0
 80a12ef:  mov DWORD PTR [ebp-0x34], 0x0
 80a12f6:  jmp 80a0f29
 80a12fb:  mov ecx, DWORD PTR [ebp-0x28]
 80a12fe:  mov DWORD PTR [esp], ecx
 80a1301:  call 804eea0
 80a1306:  test eax, eax
 80a1308:  mov DWORD PTR [ebp-0x44], eax
 80a130b:  mov DWORD PTR [ebp-0x24], eax
 80a130e:  je 80a133f
 80a1310:  mov eax, DWORD PTR [ebp-0x28]
 80a1313:  mov ecx, esi
 80a1315:  xor edx, edx
 80a1317:  movzx eax, BYTE PTR [eax]
 80a131a:  cmp cl, al
 80a131c:  mov BYTE PTR [ebp-0x3e], al
 80a131f:  je 80a1337
 80a1321:  jmp 80a1356
 80a1323:  nop
 80a1324:  lea esi, [esi]
 80a1328:  mov ecx, DWORD PTR [ebp-0x28]
 80a132b:  movzx eax, BYTE PTR [ecx+edx]
 80a132f:  mov ecx, DWORD PTR [ebp-0x10]
 80a1332:  cmp al, BYTE PTR [ecx+edx]
 80a1335:  jne 80a1356
 80a1337:  add edx, 0x1
 80a133a:  cmp DWORD PTR [ebp-0x44], edx
 80a133d:  ja 80a1328
 80a133f:  mov eax, DWORD PTR [ebp-0x10]
 80a1342:  mov DWORD PTR [ebp+0x10], 0xa
 80a1349:  mov DWORD PTR [ebp-0x30], eax
 80a134c:  mov eax, 0x8
 80a1351:  jmp 80a0e40
 80a1356:  mov eax, esi
 80a1358:  mov ecx, DWORD PTR [ebp-0x10]
 80a135b:  test al, al
 80a135d:  je 80a1398
 80a135f:  lea eax, [edi-0x30]
 80a1362:  cmp al, 0x9
 80a1364:  jbe 80a138c
 80a1366:  xor edx, edx
 80a1368:  mov eax, edi
 80a136a:  cmp BYTE PTR [ebp-0x3e], al
 80a136d:  je 80a1384
 80a136f:  jmp 80a13cc
 80a1371:  lea esi, [esi]
 80a1378:  mov esi, DWORD PTR [ebp-0x28]
 80a137b:  movzx eax, BYTE PTR [esi+edx]
 80a137f:  cmp al, BYTE PTR [ecx+edx]
 80a1382:  jne 80a13cc
 80a1384:  add edx, 0x1
 80a1387:  cmp DWORD PTR [ebp-0x44], edx
 80a138a:  ja 80a1378
 80a138c:  add ecx, 0x1
 80a138f:  movzx edi, BYTE PTR [ecx]
 80a1392:  mov eax, edi
 80a1394:  test al, al
 80a1396:  jne 80a135f
 80a1398:  mov edx, DWORD PTR [ebp-0x20]
 80a139b:  mov DWORD PTR [esp+0xc], edx
 80a139f:  mov ebx, DWORD PTR [ebp-0x28]
 80a13a2:  mov DWORD PTR [esp+0x4], ecx
 80a13a6:  mov DWORD PTR [esp+0x8], ebx
 80a13aa:  mov esi, DWORD PTR [ebp-0x10]
 80a13ad:  mov DWORD PTR [esp], esi
 80a13b0:  call 80574b0
 80a13b5:  mov DWORD PTR [ebp-0x30], eax
 80a13b8:  mov eax, 0x8
 80a13bd:  movzx edi, BYTE PTR [esi]
 80a13c0:  mov DWORD PTR [ebp+0x10], 0xa
 80a13c7:  jmp 80a0e40
 80a13cc:  mov eax, edi
 80a13ce:  movzx edx, al
 80a13d1:  test BYTE PTR [ebx+edx*2+0x1], 0x4
 80a13d6:  je 80a1398
 80a13d8:  mov esi, DWORD PTR [ebp+0x18]
 80a13db:  mov eax, DWORD PTR [esi+0x3c]
 80a13de:  cmp DWORD PTR [eax+edx*4], 0x40
 80a13e2:  jle 80a138c
 80a13e4:  jmp 80a1398
 80a13e6:  lea esi, [esi]
 80a13e9:  lea edi, [edi]

080a13f0 <__strtoll_l>:
 80a13f0:  push ebp
 80a13f1:  mov ebp, esp
 80a13f3:  sub esp, 0x14
 80a13f6:  mov eax, DWORD PTR [ebp+0x14]
 80a13f9:  mov DWORD PTR [esp+0xc], 0x0
 80a1401:  mov DWORD PTR [esp+0x10], eax
 80a1405:  mov eax, DWORD PTR [ebp+0x10]
 80a1408:  mov DWORD PTR [esp+0x8], eax
 80a140c:  mov eax, DWORD PTR [ebp+0xc]
 80a140f:  mov DWORD PTR [esp+0x4], eax
 80a1413:  mov eax, DWORD PTR [ebp+0x8]
 80a1416:  mov DWORD PTR [esp], eax
 80a1419:  call 80a0d70
 80a141e:  leave
 80a141f:  ret

080a1420 <____strtoull_l_internal>:
 80a1420:  push ebp
 80a1421:  mov ebp, esp
 80a1423:  push edi
 80a1424:  push esi
 80a1425:  push ebx
 80a1426:  sub esp, 0x74
 80a1429:  mov ecx, DWORD PTR [ebp+0x14]
 80a142c:  mov eax, DWORD PTR [ebp+0x18]
 80a142f:  test ecx, ecx
 80a1431:  mov edx, DWORD PTR [eax+0x4]
 80a1434:  jne 80a1902
 80a143a:  mov DWORD PTR [ebp-0x2c], 0x0
 80a1441:  mov DWORD PTR [ebp-0x24], 0x0
 80a1448:  mov eax, DWORD PTR [ebp+0x10]
 80a144b:  test eax, eax
 80a144d:  js 80a1628
 80a1453:  cmp DWORD PTR [ebp+0x10], 0x1
 80a1457:  je 80a1628
 80a145d:  cmp DWORD PTR [ebp+0x10], 0x24
 80a1461:  jg 80a1628
 80a1467:  mov eax, DWORD PTR [ebp+0x8]
 80a146a:  mov esi, DWORD PTR [ebp+0x18]
 80a146d:  mov edx, DWORD PTR [ebp+0x8]
 80a1470:  movzx ecx, BYTE PTR [eax]
 80a1473:  mov ebx, DWORD PTR [esi+0x34]
 80a1476:  movsx eax, cl
 80a1479:  test BYTE PTR [ebx+eax*2+0x1], 0x20
 80a147e:  je 80a1490
 80a1480:  add edx, 0x1
 80a1483:  movzx ecx, BYTE PTR [edx]
 80a1486:  movsx eax, cl
 80a1489:  test BYTE PTR [ebx+eax*2+0x1], 0x20
 80a148e:  jne 80a1480
 80a1490:  test cl, cl
 80a1492:  mov DWORD PTR [ebp-0x14], edx
 80a1495:  je 80a188c
 80a149b:  cmp cl, 0x2d
 80a149e:  je 80a16d0
 80a14a4:  cmp cl, 0x2b
 80a14a7:  mov DWORD PTR [ebp-0x40], 0x0
 80a14ae:  je 80a16e2
 80a14b4:  mov edx, DWORD PTR [ebp-0x14]
 80a14b7:  movzx esi, BYTE PTR [edx]
 80a14ba:  mov ecx, esi
 80a14bc:  mov edi, esi
 80a14be:  cmp cl, 0x30
 80a14c1:  je 80a1688
 80a14c7:  mov eax, DWORD PTR [ebp+0x10]
 80a14ca:  test eax, eax
 80a14cc:  je 80a1658
 80a14d2:  cmp DWORD PTR [ebp+0x10], 0xa
 80a14d6:  je 80a1658
 80a14dc:  mov eax, DWORD PTR [ebp+0x10]
 80a14df:  sub eax, 0x2
 80a14e2:  mov DWORD PTR [ebp-0x34], 0x0
 80a14e9:  mov DWORD PTR [ebp-0x28], 0x0
 80a14f0:  mov edx, DWORD PTR [eax*8+0x80c6b60]
 80a14f7:  mov ecx, DWORD PTR [eax*8+0x80c6b64]
 80a14fe:  movzx ebx, BYTE PTR [eax+0x80c6c80]
 80a1505:  mov eax, DWORD PTR [eax*4+0x80b0aa0]
 80a150c:  mov DWORD PTR [ebp-0x4c], edx
 80a150f:  mov esi, DWORD PTR [ebp-0x14]
 80a1512:  mov DWORD PTR [ebp-0x50], ecx
 80a1515:  mov BYTE PTR [ebp-0x41], bl
 80a1518:  mov DWORD PTR [ebp-0x20], eax
 80a151b:  mov eax, edi
 80a151d:  test al, al
 80a151f:  mov DWORD PTR [ebp-0x3c], 0x0
 80a1526:  mov DWORD PTR [ebp-0x38], 0x0
 80a152d:  je 80a15d9
 80a1533:  xor edx, edx
 80a1535:  cmp DWORD PTR [ebp-0x34], esi
 80a1538:  je 80a196a
 80a153e:  mov ecx, DWORD PTR [ebp-0x28]
 80a1541:  sub ecx, 0x1
 80a1544:  mov DWORD PTR [ebp-0x5c], ecx
 80a1547:  nop
 80a1548:  lea ecx, [edi-0x30]
 80a154b:  cmp cl, 0x9
 80a154e:  jbe 80a15a0
 80a1550:  mov eax, DWORD PTR [ebp-0x28]
 80a1553:  test eax, eax
 80a1555:  je 80a16f8
 80a155b:  mov ecx, DWORD PTR [ebp-0x2c]
 80a155e:  xor ebx, ebx
 80a1560:  mov eax, edi
 80a1562:  cmp al, BYTE PTR [ecx]
 80a1564:  je 80a1574
 80a1566:  jmp 80a1585
 80a1568:  mov ecx, DWORD PTR [ebp-0x2c]
 80a156b:  movzx eax, BYTE PTR [ecx+ebx]
 80a156f:  cmp al, BYTE PTR [esi+ebx]
 80a1572:  jne 80a157c
 80a1574:  add ebx, 0x1
 80a1577:  cmp DWORD PTR [ebp-0x28], ebx
 80a157a:  ja 80a1568
 80a157c:  cmp ebx, DWORD PTR [ebp-0x28]
 80a157f:  je 80a1718
 80a1585:  mov ebx, edi
 80a1587:  movzx ecx, bl
 80a158a:  mov ebx, DWORD PTR [ebp+0x18]
 80a158d:  mov eax, DWORD PTR [ebx+0x34]
 80a1590:  test BYTE PTR [eax+ecx*2+0x1], 0x4
 80a1595:  je 80a15cf
 80a1597:  mov eax, DWORD PTR [ebx+0x3c]
 80a159a:  mov eax, DWORD PTR [eax+ecx*4]
 80a159d:  lea ecx, [eax-0x37]
 80a15a0:  movzx ebx, cl
 80a15a3:  cmp DWORD PTR [ebp+0x10], ebx
 80a15a6:  jle 80a15cf
 80a15a8:  cmp edx, DWORD PTR [ebp-0x20]
 80a15ab:  jae 80a1720
 80a15b1:  mov eax, DWORD PTR [ebp+0x10]
 80a15b4:  imul eax, edx
 80a15b7:  lea edx, [ebx+eax]
 80a15ba:  add esi, 0x1
 80a15bd:  movzx edi, BYTE PTR [esi]
 80a15c0:  mov ecx, edi
 80a15c2:  test cl, cl
 80a15c4:  je 80a15cf
 80a15c6:  cmp DWORD PTR [ebp-0x34], esi
 80a15c9:  jne 80a1548
 80a15cf:  mov DWORD PTR [ebp-0x3c], edx
 80a15d2:  mov DWORD PTR [ebp-0x38], 0x0
 80a15d9:  mov DWORD PTR [ebp-0x30], 0x0
 80a15e0:  mov ecx, DWORD PTR [ebp-0x14]
 80a15e3:  cmp ecx, esi
 80a15e5:  je 80a188f
 80a15eb:  mov ebx, DWORD PTR [ebp+0xc]
 80a15ee:  test ebx, ebx
 80a15f0:  je 80a15f7
 80a15f2:  mov edx, DWORD PTR [ebp+0xc]
 80a15f5:  mov DWORD PTR [edx], esi
 80a15f7:  mov ecx, DWORD PTR [ebp-0x30]
 80a15fa:  test ecx, ecx
 80a15fc:  jne 80a19d6
 80a1602:  mov edx, DWORD PTR [ebp-0x40]
 80a1605:  test edx, edx
 80a1607:  je 80a1649
 80a1609:  neg DWORD PTR [ebp-0x3c]
 80a160c:  adc DWORD PTR [ebp-0x38], 0x0
 80a1610:  neg DWORD PTR [ebp-0x38]
 80a1613:  mov eax, DWORD PTR [ebp-0x3c]
 80a1616:  mov edx, DWORD PTR [ebp-0x38]
 80a1619:  add esp, 0x74
 80a161c:  pop ebx
 80a161d:  pop esi
 80a161e:  pop edi
 80a161f:  pop ebp
 80a1620:  ret
 80a1621:  lea esi, [esi]
 80a1628:  mov edx, 0xffffffe8
 80a162e:  mov eax, gs:0x0
 80a1634:  mov DWORD PTR [ebp-0x3c], 0x0
 80a163b:  mov DWORD PTR [ebp-0x38], 0x0
 80a1642:  mov DWORD PTR [eax+edx], 0x16
 80a1649:  mov eax, DWORD PTR [ebp-0x3c]
 80a164c:  mov edx, DWORD PTR [ebp-0x38]
 80a164f:  add esp, 0x74
 80a1652:  pop ebx
 80a1653:  pop esi
 80a1654:  pop edi
 80a1655:  pop ebp
 80a1656:  ret
 80a1657:  nop
 80a1658:  mov eax, DWORD PTR [ebp-0x24]
 80a165b:  test eax, eax
 80a165d:  jne 80a197d
 80a1663:  mov DWORD PTR [ebp-0x34], 0x0
 80a166a:  mov eax, 0x8
 80a166f:  mov DWORD PTR [ebp-0x28], 0x0
 80a1676:  mov DWORD PTR [ebp+0x10], 0xa
 80a167d:  jmp 80a14f0
 80a1682:  lea esi, [esi]
 80a1688:  mov eax, DWORD PTR [ebp+0x10]
 80a168b:  test eax, eax
 80a168d:  sete cl
 80a1690:  je 80a169c
 80a1692:  cmp DWORD PTR [ebp+0x10], 0x10
 80a1696:  jne 80a14d2
 80a169c:  mov eax, DWORD PTR [ebp-0x14]
 80a169f:  movsx edx, BYTE PTR [eax+0x1]
 80a16a3:  mov eax, DWORD PTR [ebp+0x18]
 80a16a6:  mov eax, DWORD PTR [eax+0x3c]
 80a16a9:  cmp DWORD PTR [eax+edx*4], 0x58
 80a16ad:  je 80a18e5
 80a16b3:  test cl, cl
 80a16b5:  je 80a14d2
 80a16bb:  mov DWORD PTR [ebp+0x10], 0x8
 80a16c2:  mov eax, 0x6
 80a16c7:  mov edi, esi
 80a16c9:  jmp 80a14e2
 80a16ce:  xchg ax, ax
 80a16d0:  add edx, 0x1
 80a16d3:  mov DWORD PTR [ebp-0x14], edx
 80a16d6:  mov DWORD PTR [ebp-0x40], 0x1
 80a16dd:  jmp 80a14b4
 80a16e2:  add edx, 0x1
 80a16e5:  mov DWORD PTR [ebp-0x14], edx
 80a16e8:  mov DWORD PTR [ebp-0x40], 0x0
 80a16ef:  jmp 80a14b4
 80a16f4:  lea esi, [esi]
 80a16f8:  mov ebx, DWORD PTR [ebp+0x18]
 80a16fb:  mov eax, edi
 80a16fd:  movzx ecx, al
 80a1700:  mov eax, DWORD PTR [ebx+0x34]
 80a1703:  test BYTE PTR [eax+ecx*2+0x1], 0x4
 80a1708:  jne 80a1597
 80a170e:  jmp 80a15cf
 80a1713:  nop
 80a1714:  lea esi, [esi]
 80a1718:  add esi, DWORD PTR [ebp-0x5c]
 80a171b:  jmp 80a15ba
 80a1720:  mov eax, DWORD PTR [ebp+0x10]
 80a1723:  mov DWORD PTR [ebp-0x3c], edx
 80a1726:  mov DWORD PTR [ebp-0x38], 0x0
 80a172d:  mov DWORD PTR [ebp-0x30], 0x0
 80a1734:  mov edx, eax
 80a1736:  sar edx, 0x1f
 80a1739:  mov DWORD PTR [ebp-0x18], edx
 80a173c:  mov edx, DWORD PTR [ebp-0x28]
 80a173f:  mov DWORD PTR [ebp-0x1c], eax
 80a1742:  sub edx, 0x1
 80a1745:  mov DWORD PTR [ebp-0x58], edx
 80a1748:  mov ebx, DWORD PTR [ebp-0x38]
 80a174b:  mov eax, DWORD PTR [ebp-0x18]
 80a174e:  imul eax, DWORD PTR [ebp-0x3c]
 80a1752:  imul ebx, DWORD PTR [ebp-0x1c]
 80a1756:  mov DWORD PTR [ebp-0x38], 0x0
 80a175d:  add ebx, eax
 80a175f:  mov eax, DWORD PTR [ebp-0x3c]
 80a1762:  mul DWORD PTR [ebp-0x1c]
 80a1765:  mov DWORD PTR [ebp-0x68], edx
 80a1768:  add edx, ebx
 80a176a:  movzx ebx, cl
 80a176d:  mov DWORD PTR [ebp-0x6c], eax
 80a1770:  mov DWORD PTR [ebp-0x68], edx
 80a1773:  mov edx, DWORD PTR [ebp-0x6c]
 80a1776:  mov DWORD PTR [ebp-0x3c], ebx
 80a1779:  mov ecx, DWORD PTR [ebp-0x68]
 80a177c:  mov ebx, esi
 80a177e:  add DWORD PTR [ebp-0x3c], edx
 80a1781:  adc DWORD PTR [ebp-0x38], ecx
 80a1784:  mov ecx, DWORD PTR [ebp-0x38]
 80a1787:  mov eax, DWORD PTR [ebp-0x3c]
 80a178a:  xor ecx, DWORD PTR [ebp-0x50]
 80a178d:  xor eax, DWORD PTR [ebp-0x4c]
 80a1790:  or ecx, eax
 80a1792:  mov DWORD PTR [ebp-0x54], ecx
 80a1795:  lea esi, [esi]
 80a1798:  movzx edi, BYTE PTR [ebx+0x1]
 80a179c:  lea esi, [ebx+0x1]
 80a179f:  mov eax, edi
 80a17a1:  test al, al
 80a17a3:  je 80a15e0
 80a17a9:  cmp esi, DWORD PTR [ebp-0x34]
 80a17ac:  je 80a18dd
 80a17b2:  lea ecx, [edi-0x30]
 80a17b5:  cmp cl, 0x9
 80a17b8:  jbe 80a1818
 80a17ba:  mov eax, DWORD PTR [ebp-0x28]
 80a17bd:  test eax, eax
 80a17bf:  je 80a1860
 80a17c5:  mov ecx, DWORD PTR [ebp-0x2c]
 80a17c8:  xor edx, edx
 80a17ca:  mov eax, edi
 80a17cc:  cmp al, BYTE PTR [ecx]
 80a17ce:  je 80a17e5
 80a17d0:  jmp 80a17f6
 80a17d2:  lea esi, [esi]
 80a17d8:  mov ecx, DWORD PTR [ebp-0x2c]
 80a17db:  movzx eax, BYTE PTR [ecx+edx]
 80a17df:  cmp al, BYTE PTR [ebx+edx+0x1]
 80a17e3:  jne 80a17ed
 80a17e5:  add edx, 0x1
 80a17e8:  cmp DWORD PTR [ebp-0x28], edx
 80a17eb:  ja 80a17d8
 80a17ed:  cmp edx, DWORD PTR [ebp-0x28]
 80a17f0:  je 80a1881
 80a17f6:  mov ebx, DWORD PTR [ebp+0x18]
 80a17f9:  mov ecx, edi
 80a17fb:  movzx edx, cl
 80a17fe:  mov eax, DWORD PTR [ebx+0x34]
 80a1801:  test BYTE PTR [eax+edx*2+0x1], 0x4
 80a1806:  je 80a15e0
 80a180c:  mov eax, DWORD PTR [ebx+0x3c]
 80a180f:  mov eax, DWORD PTR [eax+edx*4]
 80a1812:  lea ecx, [eax-0x37]
 80a1815:  lea esi, [esi]
 80a1818:  movzx eax, cl
 80a181b:  cmp DWORD PTR [ebp+0x10], eax
 80a181e:  jle 80a15e0
 80a1824:  mov ebx, DWORD PTR [ebp-0x38]
 80a1827:  cmp DWORD PTR [ebp-0x50], ebx
 80a182a:  jb 80a184f
 80a182c:  ja 80a183a
 80a182e:  mov eax, DWORD PTR [ebp-0x3c]
 80a1831:  cmp DWORD PTR [ebp-0x4c], eax
 80a1834:  lea esi, [esi]
 80a1838:  jb 80a184f
 80a183a:  mov edi, DWORD PTR [ebp-0x54]
 80a183d:  test edi, edi
 80a183f:  nop
 80a1840:  jne 80a1748
 80a1846:  cmp cl, BYTE PTR [ebp-0x41]
 80a1849:  jbe 80a194d
 80a184f:  mov ebx, esi
 80a1851:  mov DWORD PTR [ebp-0x30], 0x1
 80a1858:  jmp 80a1798
 80a185d:  lea esi, [esi]
 80a1860:  mov ecx, DWORD PTR [ebp+0x18]
 80a1863:  mov eax, edi
 80a1865:  movzx edx, al
 80a1868:  mov eax, DWORD PTR [ecx+0x34]
 80a186b:  test BYTE PTR [eax+edx*2+0x1], 0x4
 80a1870:  je 80a15e0
 80a1876:  mov eax, DWORD PTR [ecx+0x3c]
 80a1879:  mov eax, DWORD PTR [eax+edx*4]
 80a187c:  lea ecx, [eax-0x37]
 80a187f:  jmp 80a1818
 80a1881:  mov eax, DWORD PTR [ebp-0x58]
 80a1884:  lea ebx, [esi+eax]
 80a1887:  jmp 80a1798
 80a188c:  mov ecx, DWORD PTR [ebp+0x8]
 80a188f:  mov eax, DWORD PTR [ebp+0xc]
 80a1892:  mov DWORD PTR [ebp-0x3c], 0x0
 80a1899:  mov DWORD PTR [ebp-0x38], 0x0
 80a18a0:  test eax, eax
 80a18a2:  je 80a1649
 80a18a8:  mov eax, ecx
 80a18aa:  sub eax, DWORD PTR [ebp+0x8]
 80a18ad:  sub eax, 0x1
 80a18b0:  jle 80a18c2
 80a18b2:  mov ebx, DWORD PTR [ebp+0x18]
 80a18b5:  movsx edx, BYTE PTR [ecx-0x1]
 80a18b9:  mov eax, DWORD PTR [ebx+0x3c]
 80a18bc:  cmp DWORD PTR [eax+edx*4], 0x58
 80a18c0:  je 80a192a
 80a18c2:  mov edx, DWORD PTR [ebp+0x8]
 80a18c5:  mov eax, DWORD PTR [ebp+0xc]
 80a18c8:  mov DWORD PTR [ebp-0x3c], 0x0
 80a18cf:  mov DWORD PTR [ebp-0x38], 0x0
 80a18d6:  mov DWORD PTR [eax], edx
 80a18d8:  jmp 80a1649
 80a18dd:  mov esi, DWORD PTR [ebp-0x34]
 80a18e0:  jmp 80a15eb
 80a18e5:  add DWORD PTR [ebp-0x14], 0x2
 80a18e9:  mov eax, 0xe
 80a18ee:  mov edx, DWORD PTR [ebp-0x14]
 80a18f1:  mov DWORD PTR [ebp+0x10], 0x10
 80a18f8:  movzx esi, BYTE PTR [edx]
 80a18fb:  mov edi, esi
 80a18fd:  jmp 80a14e2
 80a1902:  mov ecx, DWORD PTR [edx+0x2c]
 80a1905:  mov DWORD PTR [ebp-0x24], ecx
 80a1908:  movzx eax, BYTE PTR [ecx]
 80a190b:  sub eax, 0x1
 80a190e:  cmp al, 0x7d
 80a1910:  ja 80a143a
 80a1916:  mov edx, DWORD PTR [edx+0x28]
 80a1919:  mov DWORD PTR [ebp-0x2c], edx
 80a191c:  cmp BYTE PTR [edx], 0x0
 80a191f:  jne 80a1448
 80a1925:  jmp 80a143a
 80a192a:  cmp BYTE PTR [ecx-0x2], 0x30
 80a192e:  xchg ax, ax
 80a1930:  jne 80a18c2
 80a1932:  mov esi, DWORD PTR [ebp+0xc]
 80a1935:  lea eax, [ecx-0x1]
 80a1938:  mov DWORD PTR [ebp-0x3c], 0x0
 80a193f:  mov DWORD PTR [ebp-0x38], 0x0
 80a1946:  mov DWORD PTR [esi], eax
 80a1948:  jmp 80a1649
 80a194d:  mov eax, DWORD PTR [ebp-0x4c]
 80a1950:  mov ebx, DWORD PTR [ebp-0x50]
 80a1953:  mov DWORD PTR [ebp-0x64], eax
 80a1956:  mov eax, DWORD PTR [ebp-0x64]
 80a1959:  mov DWORD PTR [ebp-0x60], ebx
 80a195c:  mov edx, DWORD PTR [ebp-0x60]
 80a195f:  mov DWORD PTR [ebp-0x3c], eax
 80a1962:  mov DWORD PTR [ebp-0x38], edx
 80a1965:  jmp 80a1748
 80a196a:  mov DWORD PTR [ebp-0x3c], 0x0
 80a1971:  mov DWORD PTR [ebp-0x38], 0x0
 80a1978:  jmp 80a15d9
 80a197d:  mov ecx, DWORD PTR [ebp-0x2c]
 80a1980:  mov DWORD PTR [esp], ecx
 80a1983:  call 804eea0
 80a1988:  test eax, eax
 80a198a:  mov DWORD PTR [ebp-0x48], eax
 80a198d:  mov DWORD PTR [ebp-0x28], eax
 80a1990:  je 80a19bf
 80a1992:  mov eax, DWORD PTR [ebp-0x2c]
 80a1995:  mov ecx, esi
 80a1997:  xor edx, edx
 80a1999:  movzx eax, BYTE PTR [eax]
 80a199c:  cmp cl, al
 80a199e:  mov BYTE PTR [ebp-0xd], al
 80a19a1:  je 80a19b7
 80a19a3:  jmp 80a19fc
 80a19a5:  lea esi, [esi]
 80a19a8:  mov ecx, DWORD PTR [ebp-0x2c]
 80a19ab:  movzx eax, BYTE PTR [ecx+edx]
 80a19af:  mov ecx, DWORD PTR [ebp-0x14]
 80a19b2:  cmp al, BYTE PTR [ecx+edx]
 80a19b5:  jne 80a19fc
 80a19b7:  add edx, 0x1
 80a19ba:  cmp DWORD PTR [ebp-0x48], edx
 80a19bd:  ja 80a19a8
 80a19bf:  mov eax, DWORD PTR [ebp-0x14]
 80a19c2:  mov DWORD PTR [ebp+0x10], 0xa
 80a19c9:  mov DWORD PTR [ebp-0x34], eax
 80a19cc:  mov eax, 0x8
 80a19d1:  jmp 80a14f0
 80a19d6:  mov edx, 0xffffffe8
 80a19dc:  mov eax, gs:0x0
 80a19e2:  mov DWORD PTR [ebp-0x3c], 0xffffffff
 80a19e9:  mov DWORD PTR [ebp-0x38], 0xffffffff
 80a19f0:  mov DWORD PTR [eax+edx], 0x22
 80a19f7:  jmp 80a1649
 80a19fc:  mov eax, esi
 80a19fe:  mov ecx, DWORD PTR [ebp-0x14]
 80a1a01:  test al, al
 80a1a03:  je 80a1a38
 80a1a05:  lea eax, [edi-0x30]
 80a1a08:  cmp al, 0x9
 80a1a0a:  jbe 80a1a2c
 80a1a0c:  xor edx, edx
 80a1a0e:  mov eax, edi
 80a1a10:  cmp al, BYTE PTR [ebp-0xd]
 80a1a13:  je 80a1a24
 80a1a15:  jmp 80a1a6c
 80a1a17:  nop
 80a1a18:  mov esi, DWORD PTR [ebp-0x2c]
 80a1a1b:  movzx eax, BYTE PTR [esi+edx]
 80a1a1f:  cmp al, BYTE PTR [ecx+edx]
 80a1a22:  jne 80a1a6c
 80a1a24:  add edx, 0x1
 80a1a27:  cmp DWORD PTR [ebp-0x48], edx
 80a1a2a:  ja 80a1a18
 80a1a2c:  add ecx, 0x1
 80a1a2f:  movzx edi, BYTE PTR [ecx]
 80a1a32:  mov eax, edi
 80a1a34:  test al, al
 80a1a36:  jne 80a1a05
 80a1a38:  mov edx, DWORD PTR [ebp-0x24]
 80a1a3b:  mov DWORD PTR [esp+0xc], edx
 80a1a3f:  mov ebx, DWORD PTR [ebp-0x2c]
 80a1a42:  mov DWORD PTR [esp+0x4], ecx
 80a1a46:  mov DWORD PTR [esp+0x8], ebx
 80a1a4a:  mov esi, DWORD PTR [ebp-0x14]
 80a1a4d:  mov DWORD PTR [esp], esi
 80a1a50:  call 80574b0
 80a1a55:  mov DWORD PTR [ebp-0x34], eax
 80a1a58:  mov eax, 0x8
 80a1a5d:  movzx edi, BYTE PTR [esi]
 80a1a60:  mov DWORD PTR [ebp+0x10], 0xa
 80a1a67:  jmp 80a14f0
 80a1a6c:  mov eax, edi
 80a1a6e:  movzx edx, al
 80a1a71:  test BYTE PTR [ebx+edx*2+0x1], 0x4
 80a1a76:  je 80a1a38
 80a1a78:  mov esi, DWORD PTR [ebp+0x18]
 80a1a7b:  mov eax, DWORD PTR [esi+0x3c]
 80a1a7e:  cmp DWORD PTR [eax+edx*4], 0x40
 80a1a82:  jle 80a1a2c
 80a1a84:  jmp 80a1a38
 80a1a86:  lea esi, [esi]
 80a1a89:  lea edi, [edi]

080a1a90 <__strtoull_l>:
 80a1a90:  push ebp
 80a1a91:  mov ebp, esp
 80a1a93:  sub esp, 0x14
 80a1a96:  mov eax, DWORD PTR [ebp+0x14]
 80a1a99:  mov DWORD PTR [esp+0xc], 0x0
 80a1aa1:  mov DWORD PTR [esp+0x10], eax
 80a1aa5:  mov eax, DWORD PTR [ebp+0x10]
 80a1aa8:  mov DWORD PTR [esp+0x8], eax
 80a1aac:  mov eax, DWORD PTR [ebp+0xc]
 80a1aaf:  mov DWORD PTR [esp+0x4], eax
 80a1ab3:  mov eax, DWORD PTR [ebp+0x8]
 80a1ab6:  mov DWORD PTR [esp], eax
 80a1ab9:  call 80a1420
 80a1abe:  leave
 80a1abf:  ret

080a1ac0 <strtof>:
 80a1ac0:  push ebp
 80a1ac1:  mov eax, gs:0x0
 80a1ac7:  mov ebp, esp
 80a1ac9:  sub esp, 0x10
 80a1acc:  mov edx, 0xffffffe4
 80a1ad2:  mov eax, DWORD PTR [eax+edx]
 80a1ad5:  mov DWORD PTR [esp+0x8], 0x0
 80a1add:  mov DWORD PTR [esp+0xc], eax
 80a1ae1:  mov eax, DWORD PTR [ebp+0xc]
 80a1ae4:  mov DWORD PTR [esp+0x4], eax
 80a1ae8:  mov eax, DWORD PTR [ebp+0x8]
 80a1aeb:  mov DWORD PTR [esp], eax
 80a1aee:  call 80a2040
 80a1af3:  leave
 80a1af4:  ret
 80a1af5:  lea esi, [esi]
 80a1af9:  lea edi, [edi]

080a1b00 <__strtof_internal>:
 80a1b00:  push ebp
 80a1b01:  mov eax, gs:0x0
 80a1b07:  mov ebp, esp
 80a1b09:  sub esp, 0x10
 80a1b0c:  mov edx, 0xffffffe4
 80a1b12:  mov eax, DWORD PTR [eax+edx]
 80a1b15:  mov DWORD PTR [esp+0xc], eax
 80a1b19:  mov eax, DWORD PTR [ebp+0x10]
 80a1b1c:  mov DWORD PTR [esp+0x8], eax
 80a1b20:  mov eax, DWORD PTR [ebp+0xc]
 80a1b23:  mov DWORD PTR [esp+0x4], eax
 80a1b27:  mov eax, DWORD PTR [ebp+0x8]
 80a1b2a:  mov DWORD PTR [esp], eax
 80a1b2d:  call 80a2040
 80a1b32:  leave
 80a1b33:  ret
 80a1b34:  nop
 80a1b35:  nop
 80a1b36:  nop
 80a1b37:  nop
 80a1b38:  nop
 80a1b39:  nop
 80a1b3a:  nop
 80a1b3b:  nop
 80a1b3c:  nop
 80a1b3d:  nop
 80a1b3e:  nop
 80a1b3f:  nop

080a1b40 <strtod>:
 80a1b40:  push ebp
 80a1b41:  mov eax, gs:0x0
 80a1b47:  mov ebp, esp
 80a1b49:  sub esp, 0x10
 80a1b4c:  mov edx, 0xffffffe4
 80a1b52:  mov eax, DWORD PTR [eax+edx]
 80a1b55:  mov DWORD PTR [esp+0x8], 0x0
 80a1b5d:  mov DWORD PTR [esp+0xc], eax
 80a1b61:  mov eax, DWORD PTR [ebp+0xc]
 80a1b64:  mov DWORD PTR [esp+0x4], eax
 80a1b68:  mov eax, DWORD PTR [ebp+0x8]
 80a1b6b:  mov DWORD PTR [esp], eax
 80a1b6e:  call 80a4420
 80a1b73:  leave
 80a1b74:  ret
 80a1b75:  lea esi, [esi]
 80a1b79:  lea edi, [edi]

080a1b80 <__strtod_internal>:
 80a1b80:  push ebp
 80a1b81:  mov eax, gs:0x0
 80a1b87:  mov ebp, esp
 80a1b89:  sub esp, 0x10
 80a1b8c:  mov edx, 0xffffffe4
 80a1b92:  mov eax, DWORD PTR [eax+edx]
 80a1b95:  mov DWORD PTR [esp+0xc], eax
 80a1b99:  mov eax, DWORD PTR [ebp+0x10]
 80a1b9c:  mov DWORD PTR [esp+0x8], eax
 80a1ba0:  mov eax, DWORD PTR [ebp+0xc]
 80a1ba3:  mov DWORD PTR [esp+0x4], eax
 80a1ba7:  mov eax, DWORD PTR [ebp+0x8]
 80a1baa:  mov DWORD PTR [esp], eax
 80a1bad:  call 80a4420
 80a1bb2:  leave
 80a1bb3:  ret
 80a1bb4:  nop
 80a1bb5:  nop
 80a1bb6:  nop
 80a1bb7:  nop
 80a1bb8:  nop
 80a1bb9:  nop
 80a1bba:  nop
 80a1bbb:  nop
 80a1bbc:  nop
 80a1bbd:  nop
 80a1bbe:  nop
 80a1bbf:  nop

080a1bc0 <strtold>:
 80a1bc0:  push ebp
 80a1bc1:  mov eax, gs:0x0
 80a1bc7:  mov ebp, esp
 80a1bc9:  sub esp, 0x10
 80a1bcc:  mov edx, 0xffffffe4
 80a1bd2:  mov eax, DWORD PTR [eax+edx]
 80a1bd5:  mov DWORD PTR [esp+0x8], 0x0
 80a1bdd:  mov DWORD PTR [esp+0xc], eax
 80a1be1:  mov eax, DWORD PTR [ebp+0xc]
 80a1be4:  mov DWORD PTR [esp+0x4], eax
 80a1be8:  mov eax, DWORD PTR [ebp+0x8]
 80a1beb:  mov DWORD PTR [esp], eax
 80a1bee:  call 80a6ae0
 80a1bf3:  leave
 80a1bf4:  ret
 80a1bf5:  lea esi, [esi]
 80a1bf9:  lea edi, [edi]

080a1c00 <__strtold_internal>:
 80a1c00:  push ebp
 80a1c01:  mov eax, gs:0x0
 80a1c07:  mov ebp, esp
 80a1c09:  sub esp, 0x10
 80a1c0c:  mov edx, 0xffffffe4
 80a1c12:  mov eax, DWORD PTR [eax+edx]
 80a1c15:  mov DWORD PTR [esp+0xc], eax
 80a1c19:  mov eax, DWORD PTR [ebp+0x10]
 80a1c1c:  mov DWORD PTR [esp+0x8], eax
 80a1c20:  mov eax, DWORD PTR [ebp+0xc]
 80a1c23:  mov DWORD PTR [esp+0x4], eax
 80a1c27:  mov eax, DWORD PTR [ebp+0x8]
 80a1c2a:  mov DWORD PTR [esp], eax
 80a1c2d:  call 80a6ae0
 80a1c32:  leave
 80a1c33:  ret
 80a1c34:  nop
 80a1c35:  nop
 80a1c36:  nop
 80a1c37:  nop
 80a1c38:  nop
 80a1c39:  nop
 80a1c3a:  nop
 80a1c3b:  nop
 80a1c3c:  nop
 80a1c3d:  nop
 80a1c3e:  nop
 80a1c3f:  nop

080a1c40 <str_to_mpn>:
 80a1c40:  push ebp
 80a1c41:  mov ebp, esp
 80a1c43:  push edi
 80a1c44:  mov edi, eax
 80a1c46:  push esi
 80a1c47:  xor esi, esi
 80a1c49:  push ebx
 80a1c4a:  xor ebx, ebx
 80a1c4c:  sub esp, 0x2c
 80a1c4f:  mov eax, DWORD PTR [ebp+0x8]
 80a1c52:  mov DWORD PTR [ebp-0x20], ecx
 80a1c55:  add ecx, 0x4
 80a1c58:  mov DWORD PTR [ebp-0x1c], edx
 80a1c5b:  mov DWORD PTR [ebp-0x10], 0x0
 80a1c62:  mov DWORD PTR [eax], 0x0
 80a1c68:  mov DWORD PTR [ebp-0x24], ecx
 80a1c6b:  jmp 80a1c78
 80a1c6d:  lea esi, [esi]
 80a1c70:  mov eax, DWORD PTR [ebp+0x8]
 80a1c73:  mov eax, DWORD PTR [eax]
 80a1c75:  mov DWORD PTR [ebp-0x10], eax
 80a1c78:  movzx ecx, BYTE PTR [edi]
 80a1c7b:  lea eax, [ecx-0x30]
 80a1c7e:  cmp al, 0x9
 80a1c80:  jbe 80a1c9a
 80a1c82:  mov eax, DWORD PTR [ebp+0x18]
 80a1c85:  test eax, eax
 80a1c87:  je 80a1c94
 80a1c89:  mov edx, DWORD PTR [ebp+0x18]
 80a1c8c:  cmp cl, BYTE PTR [edx]
 80a1c8e:  je 80a1d20
 80a1c94:  add edi, DWORD PTR [ebp+0x14]
 80a1c97:  movzx ecx, BYTE PTR [edi]
 80a1c9a:  sub DWORD PTR [ebp-0x1c], 0x1
 80a1c9e:  movsx eax, cl
 80a1ca1:  mov ecx, DWORD PTR [ebp-0x1c]
 80a1ca4:  lea edx, [esi+esi*4]
 80a1ca7:  add edi, 0x1
 80a1caa:  add ebx, 0x1
 80a1cad:  lea esi, [eax+edx*2-0x30]
 80a1cb1:  test ecx, ecx
 80a1cb3:  jle 80a1ce0
 80a1cb5:  cmp ebx, 0x9
 80a1cb8:  jne 80a1c70
 80a1cba:  mov eax, DWORD PTR [ebp-0x10]
 80a1cbd:  test eax, eax
 80a1cbf:  jne 80a1d70
 80a1cc5:  mov edx, DWORD PTR [ebp-0x20]
 80a1cc8:  xor bl, bl
 80a1cca:  mov ecx, DWORD PTR [ebp+0x8]
 80a1ccd:  mov DWORD PTR [edx], esi
 80a1ccf:  xor esi, esi
 80a1cd1:  mov DWORD PTR [ecx], 0x1
 80a1cd7:  jmp 80a1c70
 80a1cd9:  lea esi, [esi]
 80a1ce0:  mov edx, DWORD PTR [ebp+0xc]
 80a1ce3:  mov eax, DWORD PTR [edx]
 80a1ce5:  test eax, eax
 80a1ce7:  jle 80a1cf5
 80a1ce9:  lea edx, [ebx+eax]
 80a1cec:  cmp edx, 0x9
 80a1cef:  jle 80a1df0
 80a1cf5:  mov edx, DWORD PTR [ebp-0x10]
 80a1cf8:  mov eax, DWORD PTR [ebx*4+0x80c6da0]
 80a1cff:  test edx, edx
 80a1d01:  jne 80a1e13
 80a1d07:  mov eax, DWORD PTR [ebp-0x20]
 80a1d0a:  mov edx, DWORD PTR [ebp+0x8]
 80a1d0d:  mov DWORD PTR [eax], esi
 80a1d0f:  mov DWORD PTR [edx], 0x1
 80a1d15:  add esp, 0x2c
 80a1d18:  mov eax, edi
 80a1d1a:  pop ebx
 80a1d1b:  pop esi
 80a1d1c:  pop edi
 80a1d1d:  pop ebp
 80a1d1e:  ret
 80a1d1f:  nop
 80a1d20:  movzx edx, BYTE PTR [edx+0x1]
 80a1d24:  mov DWORD PTR [ebp-0x28], 0x1
 80a1d2b:  test dl, dl
 80a1d2d:  je 80a1d5f
 80a1d2f:  cmp dl, BYTE PTR [edi+0x1]
 80a1d32:  mov eax, 0x1
 80a1d37:  je 80a1d4e
 80a1d39:  jmp 80a1c94
 80a1d3e:  xchg ax, ax
 80a1d40:  cmp dl, BYTE PTR [edi+eax]
 80a1d43:  nop
 80a1d44:  lea esi, [esi]
 80a1d48:  jne 80a1c94
 80a1d4e:  mov ecx, DWORD PTR [ebp+0x18]
 80a1d51:  add eax, 0x1
 80a1d54:  mov DWORD PTR [ebp-0x28], eax
 80a1d57:  movzx edx, BYTE PTR [ecx+eax]
 80a1d5b:  test dl, dl
 80a1d5d:  jne 80a1d40
 80a1d5f:  add edi, DWORD PTR [ebp-0x28]
 80a1d62:  movzx ecx, BYTE PTR [edi]
 80a1d65:  jmp 80a1c9a
 80a1d6a:  lea esi, [esi]
 80a1d70:  mov DWORD PTR [esp+0xc], 0x3b9aca00
 80a1d78:  mov eax, DWORD PTR [ebp-0x10]
 80a1d7b:  mov DWORD PTR [esp+0x8], eax
 80a1d7f:  mov edx, DWORD PTR [ebp-0x20]
 80a1d82:  mov DWORD PTR [esp+0x4], edx
 80a1d86:  mov DWORD PTR [esp], edx
 80a1d89:  call 808c5d0
 80a1d8e:  mov ecx, DWORD PTR [ebp+0x8]
 80a1d91:  mov ebx, DWORD PTR [ecx]
 80a1d93:  mov ecx, DWORD PTR [ebp-0x24]
 80a1d96:  mov DWORD PTR [ebp-0x18], eax
 80a1d99:  mov eax, DWORD PTR [ebp-0x20]
 80a1d9c:  mov edx, DWORD PTR [eax]
 80a1d9e:  lea eax, [esi+edx]
 80a1da1:  mov esi, DWORD PTR [ebp-0x20]
 80a1da4:  cmp edx, eax
 80a1da6:  mov DWORD PTR [esi], eax
 80a1da8:  jbe 80a1dc8
 80a1daa:  lea esi, [esi]
 80a1db0:  sub ebx, 0x1
 80a1db3:  je 80a1e8b
 80a1db9:  mov eax, DWORD PTR [ecx]
 80a1dbb:  add ecx, 0x4
 80a1dbe:  add eax, 0x1
 80a1dc1:  test eax, eax
 80a1dc3:  mov DWORD PTR [ecx-0x4], eax
 80a1dc6:  je 80a1db0
 80a1dc8:  xor eax, eax
 80a1dca:  mov edx, DWORD PTR [ebp-0x18]
 80a1dcd:  xor ebx, ebx
 80a1dcf:  xor esi, esi
 80a1dd1:  add edx, eax
 80a1dd3:  je 80a1c70
 80a1dd9:  mov ecx, DWORD PTR [ebp+0x8]
 80a1ddc:  xor ebx, ebx
 80a1dde:  mov esi, DWORD PTR [ebp-0x20]
 80a1de1:  mov eax, DWORD PTR [ecx]
 80a1de3:  mov DWORD PTR [esi+eax*4], edx
 80a1de6:  xor esi, esi
 80a1de8:  add DWORD PTR [ecx], 0x1
 80a1deb:  jmp 80a1c70
 80a1df0:  imul esi, DWORD PTR [eax*4+0x80c6da0]
 80a1df8:  mov eax, DWORD PTR [edx*4+0x80c6da0]
 80a1dff:  mov edx, DWORD PTR [ebp-0x10]
 80a1e02:  mov ecx, DWORD PTR [ebp+0xc]
 80a1e05:  test edx, edx
 80a1e07:  mov DWORD PTR [ecx], 0x0
 80a1e0d:  je 80a1d07
 80a1e13:  mov DWORD PTR [esp+0xc], eax
 80a1e17:  mov ecx, DWORD PTR [ebp-0x10]
 80a1e1a:  mov DWORD PTR [esp+0x8], ecx
 80a1e1e:  mov eax, DWORD PTR [ebp-0x20]
 80a1e21:  mov DWORD PTR [esp+0x4], eax
 80a1e25:  mov DWORD PTR [esp], eax
 80a1e28:  call 808c5d0
 80a1e2d:  mov edx, DWORD PTR [ebp+0x8]
 80a1e30:  mov ecx, DWORD PTR [ebp-0x20]
 80a1e33:  mov ebx, DWORD PTR [edx]
 80a1e35:  mov edx, DWORD PTR [ecx]
 80a1e37:  add ecx, 0x4
 80a1e3a:  mov DWORD PTR [ebp-0x14], eax
 80a1e3d:  lea eax, [esi+edx]
 80a1e40:  mov esi, DWORD PTR [ebp-0x20]
 80a1e43:  cmp edx, eax
 80a1e45:  mov DWORD PTR [esi], eax
 80a1e47:  jbe 80a1e64
 80a1e49:  lea esi, [esi]
 80a1e50:  sub ebx, 0x1
 80a1e53:  je 80a1e95
 80a1e55:  mov eax, DWORD PTR [ecx]
 80a1e57:  add ecx, 0x4
 80a1e5a:  add eax, 0x1
 80a1e5d:  test eax, eax
 80a1e5f:  mov DWORD PTR [ecx-0x4], eax
 80a1e62:  je 80a1e50
 80a1e64:  xor eax, eax
 80a1e66:  mov edx, DWORD PTR [ebp-0x14]
 80a1e69:  add edx, eax
 80a1e6b:  je 80a1d15
 80a1e71:  mov ecx, DWORD PTR [ebp+0x8]
 80a1e74:  mov esi, DWORD PTR [ebp-0x20]
 80a1e77:  mov eax, DWORD PTR [ecx]
 80a1e79:  mov DWORD PTR [esi+eax*4], edx
 80a1e7c:  add eax, 0x1
 80a1e7f:  mov DWORD PTR [ecx], eax
 80a1e81:  add esp, 0x2c
 80a1e84:  mov eax, edi
 80a1e86:  pop ebx
 80a1e87:  pop esi
 80a1e88:  pop edi
 80a1e89:  pop ebp
 80a1e8a:  ret
 80a1e8b:  mov eax, 0x1
 80a1e90:  jmp 80a1dca
 80a1e95:  mov eax, 0x1
 80a1e9a:  jmp 80a1e66
 80a1e9c:  lea esi, [esi]

080a1ea0 <round_and_return>:
 80a1ea0:  push ebp
 80a1ea1:  mov ebp, esp
 80a1ea3:  sub esp, 0x28
 80a1ea6:  mov DWORD PTR [ebp-0x10], eax
 80a1ea9:  mov eax, DWORD PTR [ebp+0x10]
 80a1eac:  cmp edx, 0x82
 80a1eaf:  mov DWORD PTR [ebp-0xc], ebx
 80a1eb2:  mov ebx, edx
 80a1eb4:  mov DWORD PTR [ebp-0x8], esi
 80a1eb7:  mov esi, DWORD PTR [ebp+0xc]
 80a1eba:  mov DWORD PTR [ebp-0x4], edi
 80a1ebd:  mov edi, DWORD PTR [ebp+0x8]
 80a1ec0:  mov DWORD PTR [ebp-0x14], ecx
 80a1ec3:  mov DWORD PTR [ebp-0x18], eax
 80a1ec6:  jge 80a1f20
 80a1ec8:  mov edx, 0xffffff82
 80a1ecd:  sub edx, ebx
 80a1ecf:  cmp edx, 0x18
 80a1ed2:  jg 80a1fa8
 80a1ed8:  mov eax, 0x1
 80a1edd:  mov ecx, esi
 80a1edf:  shl eax, cl
 80a1ee1:  sub eax, 0x1
 80a1ee4:  test eax, edi
 80a1ee6:  setne al
 80a1ee9:  movzx eax, al
 80a1eec:  or DWORD PTR [ebp-0x18], eax
 80a1eef:  cmp edx, 0x18
 80a1ef2:  je 80a1fe8
 80a1ef8:  mov ecx, DWORD PTR [ebp-0x10]
 80a1efb:  lea esi, [edx-0x1]
 80a1efe:  mov ebx, 0xffffff81
 80a1f03:  mov edi, DWORD PTR [ecx]
 80a1f05:  mov DWORD PTR [esp+0xc], edx
 80a1f09:  mov DWORD PTR [esp+0x8], 0x1
 80a1f11:  mov DWORD PTR [esp+0x4], ecx
 80a1f15:  mov DWORD PTR [esp], ecx
 80a1f18:  call 808c220
 80a1f1d:  lea esi, [esi]
 80a1f20:  mov eax, edi
 80a1f22:  mov ecx, esi
 80a1f24:  shr eax, cl
 80a1f26:  test al, 0x1
 80a1f28:  jne 80a1f50
 80a1f2a:  cmp ebx, 0x80
 80a1f30:  jle 80a1f80
 80a1f32:  mov eax, DWORD PTR [ebp-0x14]
 80a1f35:  test eax, eax
 80a1f37:  jne 80a1fa0
 80a1f39:  fld DWORD PTR ds:0x80c6d00
 80a1f3f:  mov ebx, DWORD PTR [ebp-0xc]
 80a1f42:  mov esi, DWORD PTR [ebp-0x8]
 80a1f45:  mov edi, DWORD PTR [ebp-0x4]
 80a1f48:  mov esp, ebp
 80a1f4a:  pop ebp
 80a1f4b:  ret
 80a1f4c:  lea esi, [esi]
 80a1f50:  mov eax, DWORD PTR [ebp-0x18]
 80a1f53:  test eax, eax
 80a1f55:  je 80a1fc0
 80a1f57:  mov eax, DWORD PTR [ebp-0x10]
 80a1f5a:  mov edx, DWORD PTR [eax]
 80a1f5c:  lea eax, [edx+0x1]
 80a1f5f:  mov edx, DWORD PTR [ebp-0x10]
 80a1f62:  test eax, 0x1000000
 80a1f67:  mov DWORD PTR [edx], eax
 80a1f69:  jne 80a2010
 80a1f6f:  cmp ebx, 0x81
 80a1f72:  jne 80a1f2a
 80a1f74:  test eax, 0x800000
 80a1f79:  je 80a1f80
 80a1f7b:  mov bl, 0x82
 80a1f7d:  lea esi, [esi]
 80a1f80:  mov eax, DWORD PTR [ebp-0x14]
 80a1f83:  mov edx, DWORD PTR [ebp-0x10]
 80a1f86:  mov DWORD PTR [ebp+0xc], ebx
 80a1f89:  mov esi, DWORD PTR [ebp-0x8]
 80a1f8c:  mov ebx, DWORD PTR [ebp-0xc]
 80a1f8f:  mov DWORD PTR [ebp+0x10], eax
 80a1f92:  mov edi, DWORD PTR [ebp-0x4]
 80a1f95:  mov DWORD PTR [ebp+0x8], edx
 80a1f98:  mov esp, ebp
 80a1f9a:  pop ebp
 80a1f9b:  jmp 80a8ca0
 80a1fa0:  fld DWORD PTR ds:0x80c6d04
 80a1fa6:  jmp 80a1f3f
 80a1fa8:  mov edx, 0xffffffe8
 80a1fae:  fldz
 80a1fb0:  mov eax, gs:0x0
 80a1fb6:  mov DWORD PTR [eax+edx], 0x21
 80a1fbd:  jmp 80a1f3f
 80a1fbf:  nop
 80a1fc0:  mov ecx, DWORD PTR [ebp-0x10]
 80a1fc3:  mov edx, DWORD PTR [ecx]
 80a1fc5:  test dl, 0x1
 80a1fc8:  jne 80a1f5c
 80a1fca:  mov eax, 0x1
 80a1fcf:  mov ecx, esi
 80a1fd1:  shl eax, cl
 80a1fd3:  sub eax, 0x1
 80a1fd6:  test eax, edi
 80a1fd8:  je 80a1f2a
 80a1fde:  jmp 80a1f5c
 80a1fe3:  nop
 80a1fe4:  lea esi, [esi]
 80a1fe8:  mov eax, DWORD PTR [ebp-0x10]
 80a1feb:  mov ebx, 0xffffff81
 80a1ff0:  mov esi, 0x17
 80a1ff5:  mov edx, DWORD PTR [ebp-0x10]
 80a1ff8:  mov edi, DWORD PTR [eax]
 80a1ffa:  xor eax, eax
 80a1ffc:  mov DWORD PTR [edx], 0x0
 80a2002:  test edi, edi
 80a2004:  setne al
 80a2007:  or DWORD PTR [ebp-0x18], eax
 80a200a:  jmp 80a1f20
 80a200f:  nop
 80a2010:  mov DWORD PTR [esp+0xc], 0x1
 80a2018:  add ebx, 0x1
 80a201b:  mov DWORD PTR [esp+0x8], 0x1
 80a2023:  mov DWORD PTR [esp+0x4], edx
 80a2027:  mov DWORD PTR [esp], edx
 80a202a:  call 808c220
 80a202f:  mov ecx, DWORD PTR [ebp-0x10]
 80a2032:  or DWORD PTR [ecx], 0x800000
 80a2038:  jmp 80a1f2a
 80a203d:  lea esi, [esi]

080a2040 <____strtof_l_internal>:
 80a2040:  push ebp
 80a2041:  mov ebp, esp
 80a2043:  push edi
 80a2044:  push esi
 80a2045:  push ebx
 80a2046:  sub esp, 0x144
 80a204c:  mov eax, DWORD PTR [ebp+0x14]
 80a204f:  mov edx, DWORD PTR [eax+0x4]
 80a2052:  mov eax, DWORD PTR [ebp+0x10]
 80a2055:  test eax, eax
 80a2057:  jne 80a3b80
 80a205d:  mov DWORD PTR [ebp-0xc8], 0x0
 80a2067:  mov DWORD PTR [ebp-0xc4], 0x0
 80a2071:  mov edx, DWORD PTR [edx+0x24]
 80a2074:  mov DWORD PTR [ebp-0xcc], edx
 80a207a:  mov DWORD PTR [esp], edx
 80a207d:  call 804eea0
 80a2082:  mov edi, DWORD PTR [ebp+0x14]
 80a2085:  mov esi, DWORD PTR [ebp+0x8]
 80a2088:  mov DWORD PTR [ebp-0x14], 0x0
 80a208f:  mov edi, DWORD PTR [edi+0x34]
 80a2092:  sub esi, 0x1
 80a2095:  mov DWORD PTR [ebp-0xfc], eax
 80a209b:  mov DWORD PTR [ebp-0x110], edi
 80a20a1:  mov edx, edi
 80a20a3:  nop
 80a20a4:  lea esi, [esi]
 80a20a8:  add esi, 0x1
 80a20ab:  movzx ebx, BYTE PTR [esi]
 80a20ae:  movsx eax, bl
 80a20b1:  test BYTE PTR [edx+eax*2+0x1], 0x20
 80a20b6:  jne 80a20a8
 80a20b8:  cmp bl, 0x2d
 80a20bb:  je 80a2750
 80a20c1:  cmp bl, 0x2b
 80a20c4:  mov DWORD PTR [ebp-0xec], 0x0
 80a20ce:  je 80a2270
 80a20d4:  mov ecx, DWORD PTR [ebp-0xcc]
 80a20da:  movzx ecx, BYTE PTR [ecx]
 80a20dd:  mov BYTE PTR [ebp-0x75], cl
 80a20e0:  xor ecx, ecx
 80a20e2:  cmp BYTE PTR [ebp-0x75], 0x0
 80a20e6:  je 80a2115
 80a20e8:  xor eax, eax
 80a20ea:  cmp bl, BYTE PTR [ebp-0x75]
 80a20ed:  je 80a2102
 80a20ef:  jmp 80a2128
 80a20f1:  lea esi, [esi]
 80a20f8:  cmp dl, BYTE PTR [esi+eax]
 80a20fb:  nop
 80a20fc:  lea esi, [esi]
 80a2100:  jne 80a2128
 80a2102:  mov edi, DWORD PTR [ebp-0xcc]
 80a2108:  add eax, 0x1
 80a210b:  mov ecx, eax
 80a210d:  movzx edx, BYTE PTR [edi+eax]
 80a2111:  test dl, dl
 80a2113:  jne 80a20f8
 80a2115:  movzx eax, BYTE PTR [esi+ecx]
 80a2119:  cmp al, 0x2f
 80a211b:  jle 80a2128
 80a211d:  cmp al, 0x39
 80a211f:  jle 80a2170
 80a2121:  lea esi, [esi]
 80a2128:  lea eax, [ebx-0x30]
 80a212b:  cmp al, 0x9
 80a212d:  jbe 80a2170
 80a212f:  mov eax, ds:0x80b0418
 80a2134:  movsx edx, bl
 80a2137:  movzx eax, BYTE PTR [eax+edx*4]
 80a213b:  cmp al, 0x69
 80a213d:  je 80a30ab
 80a2143:  cmp al, 0x6e
 80a2145:  je 80a3127
 80a214b:  mov ebx, DWORD PTR [ebp+0xc]
 80a214e:  test ebx, ebx
 80a2150:  je 80a225e
 80a2156:  mov ecx, DWORD PTR [ebp+0x8]
 80a2159:  fldz
 80a215b:  mov edx, DWORD PTR [ebp+0xc]
 80a215e:  mov DWORD PTR [edx], ecx
 80a2160:  add esp, 0x144
 80a2166:  pop ebx
 80a2167:  pop esi
 80a2168:  pop edi
 80a2169:  pop ebp
 80a216a:  ret
 80a216b:  nop
 80a216c:  lea esi, [esi]
 80a2170:  cmp bl, 0x30
 80a2173:  je 80a2850
 80a2179:  mov edi, DWORD PTR [ebp+0x14]
 80a217c:  mov DWORD PTR [ebp-0xe8], 0xa
 80a2186:  mov BYTE PTR [ebp-0x7e], 0x1
 80a218a:  mov BYTE PTR [ebp-0xf5], 0x0
 80a2191:  mov edi, DWORD PTR [edi+0x38]
 80a2194:  mov DWORD PTR [ebp-0x114], edi
 80a219a:  mov ecx, DWORD PTR [ebp-0xc8]
 80a21a0:  test ecx, ecx
 80a21a2:  jne 80a3cd2
 80a21a8:  cmp bl, 0x30
 80a21ab:  mov DWORD PTR [ebp-0x74], esi
 80a21ae:  jne 80a21bf
 80a21b0:  add DWORD PTR [ebp-0x74], 0x1
 80a21b4:  mov ecx, DWORD PTR [ebp-0x74]
 80a21b7:  movzx ebx, BYTE PTR [ecx]
 80a21ba:  cmp bl, 0x30
 80a21bd:  je 80a21b0
 80a21bf:  mov edi, DWORD PTR [ebp-0x114]
 80a21c5:  lea eax, [ebx-0x30]
 80a21c8:  movsx ecx, bl
 80a21cb:  cmp al, 0x9
 80a21cd:  mov edx, DWORD PTR [edi+ecx*4]
 80a21d0:  jbe 80a22b0
 80a21d6:  cmp dl, 0x60
 80a21d9:  mov ecx, edx
 80a21db:  jg 80a28a0
 80a21e1:  cmp BYTE PTR [ebp-0x75], 0x0
 80a21e5:  je 80a22a5
 80a21eb:  xor eax, eax
 80a21ed:  cmp bl, BYTE PTR [ebp-0x75]
 80a21f0:  je 80a2294
 80a21f6:  cmp BYTE PTR [ebp-0x7e], 0x0
 80a21fa:  lea esi, [esi]
 80a2200:  je 80a38a7
 80a2206:  cmp cl, 0x65
 80a2209:  lea esi, [esi]
 80a2210:  je 80a3874
 80a2216:  mov ecx, DWORD PTR [ebp-0xc4]
 80a221c:  mov DWORD PTR [esp+0xc], ecx
 80a2220:  mov ebx, DWORD PTR [ebp-0xc8]
 80a2226:  mov DWORD PTR [esp+0x8], ebx
 80a222a:  mov edi, DWORD PTR [ebp-0x74]
 80a222d:  mov DWORD PTR [esp], esi
 80a2230:  mov DWORD PTR [esp+0x4], edi
 80a2234:  call 80574b0
 80a2239:  mov edx, DWORD PTR [ebp+0xc]
 80a223c:  test edx, edx
 80a223e:  je 80a2250
 80a2240:  cmp esi, eax
 80a2242:  je 80a3d9f
 80a2248:  mov edx, DWORD PTR [ebp+0xc]
 80a224b:  mov DWORD PTR [edx], eax
 80a224d:  lea esi, [esi]
 80a2250:  mov eax, DWORD PTR [ebp-0xec]
 80a2256:  test eax, eax
 80a2258:  jne 80a2890
 80a225e:  add esp, 0x144
 80a2264:  fldz
 80a2266:  pop ebx
 80a2267:  pop esi
 80a2268:  pop edi
 80a2269:  pop ebp
 80a226a:  ret
 80a226b:  nop
 80a226c:  lea esi, [esi]
 80a2270:  add esi, 0x1
 80a2273:  movzx ebx, BYTE PTR [esi]
 80a2276:  mov DWORD PTR [ebp-0xec], 0x0
 80a2280:  jmp 80a20d4
 80a2285:  lea esi, [esi]
 80a2288:  mov edi, DWORD PTR [ebp-0x74]
 80a228b:  cmp dl, BYTE PTR [edi+eax]
 80a228e:  jne 80a21f6
 80a2294:  mov edi, DWORD PTR [ebp-0xcc]
 80a229a:  add eax, 0x1
 80a229d:  movzx edx, BYTE PTR [edi+eax]
 80a22a1:  test dl, dl
 80a22a3:  jne 80a2288
 80a22a5:  cmp esi, DWORD PTR [ebp-0x74]
 80a22a8:  je 80a3470
 80a22ae:  xchg ax, ax
 80a22b0:  mov edi, DWORD PTR [ebp-0x74]
 80a22b3:  mov DWORD PTR [ebp-0xd8], 0x0
 80a22bd:  lea eax, [ebx-0x30]
 80a22c0:  cmp al, 0x9
 80a22c2:  jbe 80a2398
 80a22c8:  cmp DWORD PTR [ebp-0xe8], 0x10
 80a22cf:  je 80a2380
 80a22d5:  mov eax, DWORD PTR [ebp-0xc8]
 80a22db:  test eax, eax
 80a22dd:  jne 80a3db9
 80a22e3:  mov eax, DWORD PTR [ebp-0xc4]
 80a22e9:  test eax, eax
 80a22eb:  je 80a23c8
 80a22f1:  cmp esi, edi
 80a22f3:  jae 80a23c8
 80a22f9:  mov eax, DWORD PTR [ebp-0xc4]
 80a22ff:  mov DWORD PTR [esp+0xc], eax
 80a2303:  mov edx, DWORD PTR [ebp-0xc8]
 80a2309:  mov DWORD PTR [esp+0x4], edi
 80a230d:  mov DWORD PTR [esp], esi
 80a2310:  mov DWORD PTR [esp+0x8], edx
 80a2314:  call 80574b0
 80a2319:  cmp edi, eax
 80a231b:  mov ecx, eax
 80a231d:  je 80a23aa
 80a2323:  cmp esi, eax
 80a2325:  je 80a38c8
 80a232b:  cmp DWORD PTR [ebp-0x74], eax
 80a232e:  xchg ax, ax
 80a2330:  ja 80a318d
 80a2336:  mov edx, DWORD PTR [ebp-0x74]
 80a2339:  mov DWORD PTR [ebp-0x6c], 0x0
 80a2340:  jae 80a3cb7
 80a2346:  xchg ax, ax
 80a2348:  movzx eax, BYTE PTR [edx]
 80a234b:  mov ebx, DWORD PTR [ebp-0x6c]
 80a234e:  sub eax, 0x30
 80a2351:  add ebx, 0x1
 80a2354:  cmp al, 0x9
 80a2356:  ja 80a235b
 80a2358:  mov DWORD PTR [ebp-0x6c], ebx
 80a235b:  add edx, 0x1
 80a235e:  cmp ecx, edx
 80a2360:  ja 80a2348
 80a2362:  mov edi, ecx
 80a2364:  mov ecx, DWORD PTR [ebp-0x6c]
 80a2367:  mov DWORD PTR [ebp-0xd0], 0x0
 80a2371:  mov DWORD PTR [ebp-0xd4], ecx
 80a2377:  jmp 80a24bf
 80a237c:  lea esi, [esi]
 80a2380:  mov edx, DWORD PTR [ebp-0x114]
 80a2386:  movsx ecx, bl
 80a2389:  mov eax, DWORD PTR [edx+ecx*4]
 80a238c:  sub eax, 0x61
 80a238f:  cmp al, 0x5
 80a2391:  ja 80a22d5
 80a2397:  nop
 80a2398:  add DWORD PTR [ebp-0xd8], 0x1
 80a239f:  add edi, 0x1
 80a23a2:  movzx ebx, BYTE PTR [edi]
 80a23a5:  jmp 80a22bd
 80a23aa:  mov ecx, DWORD PTR [ebp-0xcc]
 80a23b0:  mov esi, DWORD PTR [ebp+0x14]
 80a23b3:  movzx ecx, BYTE PTR [ecx]
 80a23b6:  mov esi, DWORD PTR [esi+0x38]
 80a23b9:  mov BYTE PTR [ebp-0x75], cl
 80a23bc:  mov DWORD PTR [ebp-0x114], esi
 80a23c2:  lea esi, [esi]
 80a23c8:  cmp DWORD PTR [ebp-0xd8], 0x1
 80a23cf:  sbb esi, esi
 80a23d1:  cmp BYTE PTR [ebp-0x75], 0x0
 80a23d5:  mov DWORD PTR [ebp-0xd0], esi
 80a23db:  je 80a2412
 80a23dd:  mov eax, DWORD PTR [ebp-0xd8]
 80a23e3:  xor edx, edx
 80a23e5:  movsx ecx, bl
 80a23e8:  mov DWORD PTR [ebp-0x6c], eax
 80a23eb:  movzx eax, BYTE PTR [ebp-0x75]
 80a23ef:  cmp al, BYTE PTR [edi]
 80a23f1:  je 80a2401
 80a23f3:  jmp 80a2477
 80a23f8:  cmp al, BYTE PTR [edi+edx]
 80a23fb:  jne 80a2a98
 80a2401:  mov ecx, DWORD PTR [ebp-0xcc]
 80a2407:  add edx, 0x1
 80a240a:  movzx eax, BYTE PTR [ecx+edx]
 80a240e:  test al, al
 80a2410:  jne 80a23f8
 80a2412:  mov esi, DWORD PTR [ebp-0xd8]
 80a2418:  xor edx, edx
 80a241a:  add edi, DWORD PTR [ebp-0xfc]
 80a2420:  cmp DWORD PTR [ebp-0xe8], 0x10
 80a2427:  movzx ebx, BYTE PTR [edi]
 80a242a:  mov DWORD PTR [ebp-0x6c], esi
 80a242d:  je 80a245d
 80a242f:  jmp 80a282d
 80a2434:  lea esi, [esi]
 80a2438:  cmp bl, 0x30
 80a243b:  je 80a2450
 80a243d:  cmp DWORD PTR [ebp-0xd0], 0xff
 80a2444:  lea esi, [esi]
 80a2448:  jne 80a2450
 80a244a:  mov DWORD PTR [ebp-0xd0], edx
 80a2450:  add DWORD PTR [ebp-0x6c], 0x1
 80a2454:  add edi, 0x1
 80a2457:  movzx ebx, BYTE PTR [edi]
 80a245a:  add edx, 0x1
 80a245d:  lea eax, [ebx-0x30]
 80a2460:  cmp al, 0x9
 80a2462:  jbe 80a2438
 80a2464:  mov esi, DWORD PTR [ebp-0x114]
 80a246a:  movsx ecx, bl
 80a246d:  mov eax, DWORD PTR [esi+ecx*4]
 80a2470:  sub eax, 0x61
 80a2473:  cmp al, 0x5
 80a2475:  jbe 80a2438
 80a2477:  mov edx, DWORD PTR [ebp-0x114]
 80a247d:  movzx eax, BYTE PTR [edx+ecx*4]
 80a2481:  cmp al, 0x70
 80a2483:  je 80a2e06
 80a2489:  cmp al, 0x65
 80a248b:  je 80a29de
 80a2491:  mov eax, edi
 80a2493:  mov ebx, DWORD PTR [ebp-0x6c]
 80a2496:  cmp DWORD PTR [ebp-0xd8], ebx
 80a249c:  jl 80a2768
 80a24a2:  mov esi, DWORD PTR [ebp-0x6c]
 80a24a5:  mov edx, eax
 80a24a7:  cmp DWORD PTR [ebp-0xd8], esi
 80a24ad:  je 80a2796
 80a24b3:  mov esi, DWORD PTR [ebp-0xd8]
 80a24b9:  mov DWORD PTR [ebp-0xd4], esi
 80a24bf:  mov ecx, DWORD PTR [ebp+0xc]
 80a24c2:  test ecx, ecx
 80a24c4:  je 80a24cb
 80a24c6:  mov eax, DWORD PTR [ebp+0xc]
 80a24c9:  mov DWORD PTR [eax], edi
 80a24cb:  mov edx, DWORD PTR [ebp-0x6c]
 80a24ce:  test edx, edx
 80a24d0:  je 80a2250
 80a24d6:  mov eax, DWORD PTR [ebp-0xd0]
 80a24dc:  mov edx, DWORD PTR [ebp-0x74]
 80a24df:  test eax, eax
 80a24e1:  mov DWORD PTR [ebp-0xdc], edx
 80a24e7:  je 80a25a4
 80a24ed:  mov ecx, DWORD PTR [ebp-0xcc]
 80a24f3:  mov eax, DWORD PTR [ebp-0xcc]
 80a24f9:  movzx ecx, BYTE PTR [ecx]
 80a24fc:  mov BYTE PTR [ebp-0x131], cl
 80a2502:  movzx eax, BYTE PTR [eax+0x1]
 80a2506:  mov ecx, edx
 80a2508:  movzx ebx, BYTE PTR [edx]
 80a250b:  mov BYTE PTR [ebp-0x6d], al
 80a250e:  xchg ax, ax
 80a2510:  add ecx, 0x1
 80a2513:  cmp bl, BYTE PTR [ebp-0x131]
 80a2519:  lea esi, [ecx-0x1]
 80a251c:  je 80a252f
 80a251e:  movzx ebx, BYTE PTR [ecx]
 80a2521:  add ecx, 0x1
 80a2524:  cmp bl, BYTE PTR [ebp-0x131]
 80a252a:  lea esi, [ecx-0x1]
 80a252d:  jne 80a251e
 80a252f:  cmp BYTE PTR [ebp-0x6d], 0x0
 80a2533:  je 80a256b
 80a2535:  movzx ebx, BYTE PTR [ecx]
 80a2538:  mov eax, 0x1
 80a253d:  cmp bl, BYTE PTR [ebp-0x6d]
 80a2540:  je 80a255a
 80a2542:  lea esi, [esi]
 80a2548:  jmp 80a2510
 80a254a:  lea esi, [esi]
 80a2550:  cmp dl, BYTE PTR [esi+eax]
 80a2553:  nop
 80a2554:  lea esi, [esi]
 80a2558:  jne 80a2510
 80a255a:  mov edi, DWORD PTR [ebp-0xcc]
 80a2560:  add eax, 0x1
 80a2563:  movzx edx, BYTE PTR [edi+eax]
 80a2567:  test dl, dl
 80a2569:  jne 80a2550
 80a256b:  cmp DWORD PTR [ebp-0xe8], 0x10
 80a2572:  mov edx, DWORD PTR [ebp-0x14]
 80a2575:  mov ecx, DWORD PTR [ebp-0xd0]
 80a257b:  je 80a3710
 80a2581:  mov eax, DWORD PTR [ebp-0xd0]
 80a2587:  sub edx, ecx
 80a2589:  add eax, DWORD PTR [ebp-0xfc]
 80a258f:  mov DWORD PTR [ebp-0x14], edx
 80a2592:  lea eax, [esi+eax]
 80a2595:  mov DWORD PTR [ebp-0xdc], eax
 80a259b:  mov eax, DWORD PTR [ebp-0xd0]
 80a25a1:  sub DWORD PTR [ebp-0x6c], eax
 80a25a4:  cmp DWORD PTR [ebp-0xe8], 0x10
 80a25ab:  je 80a28bd
 80a25b1:  mov edx, DWORD PTR [ebp-0x14]
 80a25b4:  test edx, edx
 80a25b6:  js 80a2a7d
 80a25bc:  mov eax, DWORD PTR [ebp-0x6c]
 80a25bf:  sub eax, DWORD PTR [ebp-0xd4]
 80a25c5:  cmp eax, edx
 80a25c7:  jg 80a2a8d
 80a25cd:  mov esi, DWORD PTR [ebp-0xd4]
 80a25d3:  sub edx, eax
 80a25d5:  add esi, eax
 80a25d7:  lea eax, [edx+esi]
 80a25da:  cmp eax, 0x27
 80a25dd:  mov DWORD PTR [ebp-0x68], esi
 80a25e0:  jg 80a3963
 80a25e6:  cmp edx, 0xd4
 80a25e9:  jl 80a3e7e
 80a25ef:  mov eax, DWORD PTR [ebp-0x68]
 80a25f2:  mov DWORD PTR [ebp-0x14], edx
 80a25f5:  test eax, eax
 80a25f7:  jg 80a2e3c
 80a25fd:  lea edi, [ebp-0x18]
 80a2600:  mov edx, 0x8
 80a2605:  lea ecx, [ebp-0x3c]
 80a2608:  mov eax, 0xa
 80a260d:  lea ebx, [ebp-0x14]
 80a2610:  lea esi, [ebp-0x10]
 80a2613:  mov DWORD PTR [ebp-0xe0], 0x0
 80a261d:  mov DWORD PTR [ebp-0x118], edi
 80a2623:  mov DWORD PTR [ebp-0x10c], ecx
 80a2629:  mov DWORD PTR [ebp-0x11c], ebx
 80a262f:  mov DWORD PTR [ebp-0x120], esi
 80a2635:  mov ecx, DWORD PTR [ebp-0x6c]
 80a2638:  sub ecx, DWORD PTR [ebp-0x68]
 80a263b:  mov DWORD PTR [ebp-0x60], 0x0
 80a2642:  mov BYTE PTR [ebp-0x7d], 0x0
 80a2646:  cmp eax, ecx
 80a2648:  mov DWORD PTR [ebp-0x64], ecx
 80a264b:  jl 80a31e3
 80a2651:  mov ebx, DWORD PTR [ebp-0x64]
 80a2654:  lea edi, [ebp-0x5c]
 80a2657:  mov esi, 0x1
 80a265c:  mov eax, DWORD PTR [ebp-0x10c]
 80a2662:  sub ebx, DWORD PTR [ebp-0x14]
 80a2665:  mov DWORD PTR [ebp-0x108], edi
 80a266b:  mov DWORD PTR [ebp-0xa8], edi
 80a2671:  mov edi, 0x80c4aa0
 80a2676:  mov DWORD PTR [ebp-0xac], ebx
 80a267c:  mov DWORD PTR [ebp-0xe4], 0x0
 80a2686:  mov DWORD PTR [ebp-0xa4], eax
 80a268c:  jmp 80a26d3
 80a268e:  xchg ax, ax
 80a2690:  mov eax, DWORD PTR [edi+0x4]
 80a2693:  sub eax, 0x2
 80a2696:  mov DWORD PTR [ebp-0xe4], eax
 80a269c:  mov edx, eax
 80a269e:  mov eax, DWORD PTR [edi]
 80a26a0:  shl edx, 0x2
 80a26a3:  mov DWORD PTR [esp+0x8], edx
 80a26a7:  lea eax, [eax*4+0x80c3cc8]
 80a26ae:  mov DWORD PTR [esp+0x4], eax
 80a26b2:  mov edx, DWORD PTR [ebp-0xa8]
 80a26b8:  mov DWORD PTR [esp], edx
 80a26bb:  call 804efc0
 80a26c0:  mov eax, DWORD PTR [ebp-0xac]
 80a26c6:  test eax, eax
 80a26c8:  je 80a2aa9
 80a26ce:  add esi, esi
 80a26d0:  add edi, 0x10
 80a26d3:  test DWORD PTR [ebp-0xac], esi
 80a26d9:  je 80a26c0
 80a26db:  mov eax, DWORD PTR [ebp-0xe4]
 80a26e1:  xor DWORD PTR [ebp-0xac], esi
 80a26e7:  test eax, eax
 80a26e9:  je 80a2690
 80a26eb:  mov ecx, DWORD PTR [ebp-0xe4]
 80a26f1:  mov ebx, DWORD PTR [edi+0x4]
 80a26f4:  mov DWORD PTR [esp+0x10], ecx
 80a26f8:  mov eax, DWORD PTR [ebp-0xa8]
 80a26fe:  sub ebx, 0x2
 80a2701:  mov DWORD PTR [esp+0x8], ebx
 80a2705:  mov DWORD PTR [esp+0xc], eax
 80a2709:  mov eax, DWORD PTR [edi]
 80a270b:  lea eax, [eax*4+0x80c3cc8]
 80a2712:  mov DWORD PTR [esp+0x4], eax
 80a2716:  mov edx, DWORD PTR [ebp-0xa4]
 80a271c:  mov DWORD PTR [esp], edx
 80a271f:  call 808c280
 80a2724:  add DWORD PTR [ebp-0xe4], ebx
 80a272a:  test eax, eax
 80a272c:  je 80a2e18
 80a2732:  mov eax, DWORD PTR [ebp-0xa4]
 80a2738:  mov ecx, DWORD PTR [ebp-0xa8]
 80a273e:  mov DWORD PTR [ebp-0xa8], eax
 80a2744:  mov DWORD PTR [ebp-0xa4], ecx
 80a274a:  jmp 80a26c0
 80a274f:  nop
 80a2750:  add esi, 0x1
 80a2753:  movzx ebx, BYTE PTR [esi]
 80a2756:  mov DWORD PTR [ebp-0xec], 0x1
 80a2760:  jmp 80a20d4
 80a2765:  lea esi, [esi]
 80a2768:  cmp BYTE PTR [eax-0x1], 0x30
 80a276c:  lea edx, [eax-0x1]
 80a276f:  je 80a277a
 80a2771:  jmp 80a24a2
 80a2776:  xchg ax, ax
 80a2778:  mov edx, eax
 80a277a:  sub DWORD PTR [ebp-0x6c], 0x1
 80a277e:  cmp BYTE PTR [edx-0x1], 0x30
 80a2782:  lea eax, [edx-0x1]
 80a2785:  je 80a2778
 80a2787:  mov esi, DWORD PTR [ebp-0x6c]
 80a278a:  cmp DWORD PTR [ebp-0xd8], esi
 80a2790:  jne 80a24b3
 80a2796:  test esi, esi
 80a2798:  jle 80a24b3
 80a279e:  mov eax, DWORD PTR [ebp-0x14]
 80a27a1:  test eax, eax
 80a27a3:  jns 80a24b3
 80a27a9:  cmp BYTE PTR [ebp-0xf5], 0x0
 80a27b0:  mov DWORD PTR [ebp-0xd4], esi
 80a27b6:  jne 80a3408
 80a27bc:  lea esi, [esi]
 80a27c0:  sub edx, 0x1
 80a27c3:  movzx ecx, BYTE PTR [edx]
 80a27c6:  movsx eax, cl
 80a27c9:  sub eax, 0x30
 80a27cc:  cmp eax, 0x9
 80a27cf:  ja 80a27c0
 80a27d1:  cmp cl, 0x30
 80a27d4:  jne 80a24bf
 80a27da:  sub DWORD PTR [ebp-0x6c], 0x1
 80a27de:  mov eax, DWORD PTR [ebp-0x14]
 80a27e1:  mov esi, DWORD PTR [ebp-0x6c]
 80a27e4:  sub DWORD PTR [ebp-0xd4], 0x1
 80a27eb:  add eax, 0x1
 80a27ee:  test esi, esi
 80a27f0:  mov DWORD PTR [ebp-0x14], eax
 80a27f3:  jle 80a24bf
 80a27f9:  test eax, eax
 80a27fb:  jns 80a24bf
 80a2801:  jmp 80a27c0
 80a2803:  cmp bl, 0x30
 80a2806:  xchg ax, ax
 80a2808:  je 80a2820
 80a280a:  cmp DWORD PTR [ebp-0xd0], 0xff
 80a2811:  lea esi, [esi]
 80a2818:  jne 80a2820
 80a281a:  mov DWORD PTR [ebp-0xd0], edx
 80a2820:  add DWORD PTR [ebp-0x6c], 0x1
 80a2824:  add edi, 0x1
 80a2827:  movzx ebx, BYTE PTR [edi]
 80a282a:  add edx, 0x1
 80a282d:  lea eax, [ebx-0x30]
 80a2830:  cmp al, 0x9
 80a2832:  jbe 80a2803
 80a2834:  mov edx, DWORD PTR [ebp-0x114]
 80a283a:  movsx eax, bl
 80a283d:  mov BYTE PTR [ebp-0xf5], 0x0
 80a2844:  movzx eax, BYTE PTR [edx+eax*4]
 80a2848:  jmp 80a2489
 80a284d:  lea esi, [esi]
 80a2850:  mov eax, DWORD PTR [ebp+0x14]
 80a2853:  mov eax, DWORD PTR [eax+0x38]
 80a2856:  mov DWORD PTR [ebp-0x114], eax
 80a285c:  movsx eax, BYTE PTR [esi+0x1]
 80a2860:  mov edx, DWORD PTR [ebp-0x114]
 80a2866:  cmp DWORD PTR [edx+eax*4], 0x78
 80a286a:  je 80a31a2
 80a2870:  mov DWORD PTR [ebp-0xe8], 0xa
 80a287a:  mov BYTE PTR [ebp-0x7e], 0x1
 80a287e:  mov BYTE PTR [ebp-0xf5], 0x0
 80a2885:  jmp 80a219a
 80a288a:  lea esi, [esi]
 80a2890:  fldz
 80a2892:  add esp, 0x144
 80a2898:  fchs
 80a289a:  pop ebx
 80a289b:  pop esi
 80a289c:  pop edi
 80a289d:  pop ebp
 80a289e:  ret
 80a289f:  nop
 80a28a0:  cmp BYTE PTR [ebp-0x7e], 0x0
 80a28a4:  jne 80a21e1
 80a28aa:  cmp dl, 0x66
 80a28ad:  jle 80a22b0
 80a28b3:  nop
 80a28b4:  lea esi, [esi]
 80a28b8:  jmp 80a21e1
 80a28bd:  mov edx, DWORD PTR [ebp+0x14]
 80a28c0:  mov ecx, DWORD PTR [ebp-0xdc]
 80a28c6:  mov edx, DWORD PTR [edx+0x34]
 80a28c9:  mov DWORD PTR [ebp-0x110], edx
 80a28cf:  movzx eax, BYTE PTR [ecx]
 80a28d2:  mov ebx, DWORD PTR [ebp-0x110]
 80a28d8:  movsx edx, al
 80a28db:  test BYTE PTR [ebx+edx*2+0x1], 0x10
 80a28e0:  jne 80a2908
 80a28e2:  lea esi, [esi]
 80a28e8:  add DWORD PTR [ebp-0xdc], 0x1
 80a28ef:  mov esi, DWORD PTR [ebp-0xdc]
 80a28f5:  mov edi, DWORD PTR [ebp-0x110]
 80a28fb:  movzx eax, BYTE PTR [esi]
 80a28fe:  movsx edx, al
 80a2901:  test BYTE PTR [edi+edx*2+0x1], 0x10
 80a2906:  je 80a28e8
 80a2908:  cmp al, 0x30
 80a290a:  jne 80a2927
 80a290c:  lea esi, [esi]
 80a2910:  add DWORD PTR [ebp-0xdc], 0x1
 80a2917:  mov edx, DWORD PTR [ebp-0xdc]
 80a291d:  movzx eax, BYTE PTR [edx]
 80a2920:  cmp al, 0x30
 80a2922:  je 80a2910
 80a2924:  movsx edx, al
 80a2927:  lea eax, [edx-0x30]
 80a292a:  cmp eax, 0x9
 80a292d:  jbe 80a32a7
 80a2933:  mov ecx, DWORD PTR [ebp+0x14]
 80a2936:  mov esi, DWORD PTR [ebp-0xdc]
 80a293c:  mov eax, DWORD PTR [ecx+0x38]
 80a293f:  add esi, 0x1
 80a2942:  mov eax, DWORD PTR [eax+edx*4]
 80a2945:  sub eax, 0x57
 80a2948:  mov edx, DWORD PTR [eax*4+0x80c6cc0]
 80a294f:  mov edi, 0x17
 80a2954:  mov ebx, DWORD PTR [ebp-0xd4]
 80a295a:  sub edi, edx
 80a295c:  lea ecx, [edi+0x1]
 80a295f:  shl eax, cl
 80a2961:  mov DWORD PTR [ebp-0x18], eax
 80a2964:  mov eax, DWORD PTR [ebp-0x14]
 80a2967:  lea eax, [eax+ebx*4-0x5]
 80a296b:  add eax, edx
 80a296d:  mov edx, DWORD PTR [ebp-0x6c]
 80a2970:  mov DWORD PTR [ebp-0xf4], eax
 80a2976:  mov DWORD PTR [ebp-0x14], eax
 80a2979:  sub edx, 0x1
 80a297c:  test edx, edx
 80a297e:  jg 80a29ac
 80a2980:  jmp 80a3718
 80a2985:  lea esi, [esi]
 80a2988:  mov ebx, eax
 80a298a:  add esi, 0x1
 80a298d:  cmp edi, 0x2
 80a2990:  jle 80a3748
 80a2996:  lea ecx, [edi-0x3]
 80a2999:  sub edx, 0x1
 80a299c:  shl ebx, cl
 80a299e:  or DWORD PTR [ebp-0x18], ebx
 80a29a1:  test edx, edx
 80a29a3:  jle 80a3718
 80a29a9:  sub edi, 0x4
 80a29ac:  movsx ecx, BYTE PTR [esi]
 80a29af:  mov eax, DWORD PTR [ebp-0x110]
 80a29b5:  test BYTE PTR [eax+ecx*2+0x1], 0x10
 80a29ba:  jne 80a29c5
 80a29bc:  add esi, DWORD PTR [ebp-0xfc]
 80a29c2:  movsx ecx, BYTE PTR [esi]
 80a29c5:  lea eax, [ecx-0x30]
 80a29c8:  cmp eax, 0x9
 80a29cb:  jbe 80a2988
 80a29cd:  mov ebx, DWORD PTR [ebp+0x14]
 80a29d0:  add esi, 0x1
 80a29d3:  mov eax, DWORD PTR [ebx+0x38]
 80a29d6:  mov eax, DWORD PTR [eax+ecx*4]
 80a29d9:  lea ebx, [eax-0x57]
 80a29dc:  jmp 80a298d
 80a29de:  cmp BYTE PTR [ebp-0x7e], 0x0
 80a29e2:  je 80a2491
 80a29e8:  movzx ecx, BYTE PTR [edi+0x1]
 80a29ec:  lea ebx, [edi+0x1]
 80a29ef:  cmp cl, 0x2d
 80a29f2:  je 80a2df0
 80a29f8:  cmp cl, 0x2b
 80a29fb:  mov DWORD PTR [ebp-0xc0], 0x0
 80a2a05:  je 80a3177
 80a2a0b:  lea eax, [ecx-0x30]
 80a2a0e:  cmp al, 0x9
 80a2a10:  ja 80a2491
 80a2a16:  cmp BYTE PTR [ebp-0xf5], 0x0
 80a2a1d:  jne 80a36dd
 80a2a23:  mov edx, DWORD PTR [ebp-0xc0]
 80a2a29:  test edx, edx
 80a2a2b:  je 80a31cc
 80a2a31:  mov esi, DWORD PTR [ebp-0xd8]
 80a2a37:  add esi, 0x3d
 80a2a3a:  lea esi, [esi]
 80a2a40:  mov eax, DWORD PTR [ebp-0x14]
 80a2a43:  movsx edx, cl
 80a2a46:  lea eax, [eax+eax*4]
 80a2a49:  lea edx, [edx+eax*2-0x30]
 80a2a4d:  cmp edx, esi
 80a2a4f:  mov DWORD PTR [ebp-0x14], edx
 80a2a52:  jg 80a3bae
 80a2a58:  add ebx, 0x1
 80a2a5b:  movzx ecx, BYTE PTR [ebx]
 80a2a5e:  lea eax, [ecx-0x30]
 80a2a61:  cmp al, 0x9
 80a2a63:  jbe 80a2a40
 80a2a65:  mov eax, DWORD PTR [ebp-0xc0]
 80a2a6b:  test eax, eax
 80a2a6d:  je 80a2a74
 80a2a6f:  neg edx
 80a2a71:  mov DWORD PTR [ebp-0x14], edx
 80a2a74:  mov eax, edi
 80a2a76:  mov edi, ebx
 80a2a78:  jmp 80a2493
 80a2a7d:  mov eax, DWORD PTR [ebp-0xd4]
 80a2a83:  neg eax
 80a2a85:  cmp eax, edx
 80a2a87:  jge 80a25cd
 80a2a8d:  mov eax, edx
 80a2a8f:  jmp 80a25cd
 80a2a94:  lea esi, [esi]
 80a2a98:  mov edx, DWORD PTR [ebp-0xd8]
 80a2a9e:  movsx ecx, bl
 80a2aa1:  mov DWORD PTR [ebp-0x6c], edx
 80a2aa4:  jmp 80a2477
 80a2aa9:  mov esi, DWORD PTR [ebp-0x10c]
 80a2aaf:  cmp DWORD PTR [ebp-0xa8], esi
 80a2ab5:  je 80a3c93
 80a2abb:  mov eax, DWORD PTR [ebp-0xc8]
 80a2ac1:  mov DWORD PTR [esp+0x10], eax
 80a2ac5:  mov edx, DWORD PTR [ebp-0xfc]
 80a2acb:  mov DWORD PTR [esp+0xc], edx
 80a2acf:  mov ecx, DWORD PTR [ebp-0xcc]
 80a2ad5:  mov DWORD PTR [esp+0x8], ecx
 80a2ad9:  mov ebx, DWORD PTR [ebp-0x11c]
 80a2adf:  mov DWORD PTR [esp+0x4], ebx
 80a2ae3:  mov esi, DWORD PTR [ebp-0x120]
 80a2ae9:  mov DWORD PTR [esp], esi
 80a2aec:  mov ecx, DWORD PTR [ebp-0x10c]
 80a2af2:  mov edx, DWORD PTR [ebp-0x64]
 80a2af5:  mov eax, DWORD PTR [ebp-0xdc]
 80a2afb:  call 80a1c40
 80a2b00:  mov edi, DWORD PTR [ebp-0xe4]
 80a2b06:  sub edi, 0x1
 80a2b09:  bsr ebx, DWORD PTR [ebp+edi*4-0x5c]
 80a2b0e:  mov DWORD PTR [ebp-0x100], edi
 80a2b14:  xor ebx, 0x1f
 80a2b17:  jle 80a2b69
 80a2b19:  mov DWORD PTR [esp+0xc], ebx
 80a2b1d:  mov eax, DWORD PTR [ebp-0xe4]
 80a2b23:  mov DWORD PTR [esp+0x8], eax
 80a2b27:  mov edx, DWORD PTR [ebp-0x108]
 80a2b2d:  mov DWORD PTR [esp+0x4], edx
 80a2b31:  mov DWORD PTR [esp], edx
 80a2b34:  call 808c1c0
 80a2b39:  mov DWORD PTR [esp+0xc], ebx
 80a2b3d:  mov eax, DWORD PTR [ebp-0x10]
 80a2b40:  mov DWORD PTR [esp+0x8], eax
 80a2b44:  mov ecx, DWORD PTR [ebp-0x10c]
 80a2b4a:  mov DWORD PTR [esp+0x4], ecx
 80a2b4e:  mov DWORD PTR [esp], ecx
 80a2b51:  call 808c1c0
 80a2b56:  test eax, eax
 80a2b58:  mov edx, eax
 80a2b5a:  je 80a2b69
 80a2b5c:  mov eax, DWORD PTR [ebp-0x10]
 80a2b5f:  mov DWORD PTR [ebp+eax*4-0x3c], edx
 80a2b63:  add eax, 0x1
 80a2b66:  mov DWORD PTR [ebp-0x10], eax
 80a2b69:  mov ebx, DWORD PTR [ebp-0xe0]
 80a2b6f:  cmp DWORD PTR [ebp-0xe4], 0x1
 80a2b76:  mov DWORD PTR [ebp-0x14], ebx
 80a2b79:  je 80a3787
 80a2b7f:  cmp DWORD PTR [ebp-0xe4], 0x2
 80a2b86:  je 80a32b5
 80a2b8c:  mov eax, DWORD PTR [ebp-0xe4]
 80a2b92:  mov edi, DWORD PTR [ebp-0x100]
 80a2b98:  sub eax, 0x2
 80a2b9b:  mov edx, DWORD PTR [ebp+eax*4-0x5c]
 80a2b9f:  mov edi, DWORD PTR [ebp+edi*4-0x5c]
 80a2ba3:  mov DWORD PTR [ebp-0xf0], eax
 80a2ba9:  mov eax, DWORD PTR [ebp-0x10]
 80a2bac:  mov DWORD PTR [ebp-0x88], edx
 80a2bb2:  mov DWORD PTR [ebp-0x8c], edi
 80a2bb8:  mov DWORD PTR [esp+0x8], eax
 80a2bbc:  mov ecx, DWORD PTR [ebp-0xe4]
 80a2bc2:  mov ebx, DWORD PTR [ebp-0x108]
 80a2bc8:  sub ecx, eax
 80a2bca:  lea eax, [ebx+ecx*4]
 80a2bcd:  mov DWORD PTR [esp+0x4], eax
 80a2bd1:  mov esi, DWORD PTR [ebp-0x10c]
 80a2bd7:  mov DWORD PTR [esp], esi
 80a2bda:  call 808bcb0
 80a2bdf:  test eax, eax
 80a2be1:  jle 80a2bf4
 80a2be3:  mov eax, DWORD PTR [ebp-0x10]
 80a2be6:  mov DWORD PTR [ebp+eax*4-0x3c], 0x0
 80a2bee:  add eax, 0x1
 80a2bf1:  mov DWORD PTR [ebp-0x10], eax
 80a2bf4:  mov esi, DWORD PTR [ebp-0x10]
 80a2bf7:  cmp DWORD PTR [ebp-0xe4], esi
 80a2bfd:  jg 80a39a0
 80a2c03:  mov edi, DWORD PTR [ebp-0x10c]
 80a2c09:  test esi, esi
 80a2c0b:  lea ecx, [ebp-0x40]
 80a2c0e:  lea edx, [edi+esi*4-0x4]
 80a2c12:  jle 80a2c20
 80a2c14:  mov eax, DWORD PTR [edx]
 80a2c16:  mov DWORD PTR [edx+0x4], eax
 80a2c19:  sub edx, 0x4
 80a2c1c:  cmp edx, ecx
 80a2c1e:  jne 80a2c14
 80a2c20:  mov ecx, DWORD PTR [ebp-0xe4]
 80a2c26:  mov DWORD PTR [ebp-0x84], 0x0
 80a2c30:  mov ebx, DWORD PTR [ebp+ecx*4-0x3c]
 80a2c34:  lea esi, [ecx+0x1]
 80a2c37:  mov DWORD PTR [ebp+ecx*4-0x5c], 0x0
 80a2c3f:  mov DWORD PTR [ebp-0x104], esi
 80a2c45:  mov eax, DWORD PTR [ebp-0xf0]
 80a2c4b:  mov edx, DWORD PTR [ebp-0x10c]
 80a2c51:  lea eax, [edx+eax*4]
 80a2c54:  mov DWORD PTR [ebp-0x12c], eax
 80a2c5a:  lea esi, [esi]
 80a2c60:  cmp ebx, DWORD PTR [ebp-0x8c]
 80a2c66:  mov edi, 0xffffffff
 80a2c6b:  je 80a2cf8
 80a2c71:  mov edx, DWORD PTR [ebp-0x100]
 80a2c77:  mov eax, DWORD PTR [ebp+edx*4-0x3c]
 80a2c7b:  mov edx, ebx
 80a2c7d:  div DWORD PTR [ebp-0x8c]
 80a2c83:  mov esi, edx
 80a2c85:  mov edi, eax
 80a2c87:  mov eax, DWORD PTR [ebp-0x88]
 80a2c8d:  mul edi
 80a2c8f:  mov DWORD PTR [ebp-0x138], eax
 80a2c95:  mov eax, DWORD PTR [ebp-0x8c]
 80a2c9b:  mov ebx, edx
 80a2c9d:  lea ecx, [esi+eax]
 80a2ca0:  jmp 80a2cc1
 80a2ca2:  lea esi, [esi]
 80a2ca8:  mov edx, DWORD PTR [ebp-0x88]
 80a2cae:  xor eax, eax
 80a2cb0:  cmp DWORD PTR [ebp-0x138], edx
 80a2cb6:  setb al
 80a2cb9:  sub DWORD PTR [ebp-0x138], edx
 80a2cbf:  sub ebx, eax
 80a2cc1:  cmp ebx, esi
 80a2cc3:  ja 80a2cd9
 80a2cc5:  jne 80a2cf8
 80a2cc7:  mov eax, DWORD PTR [ebp-0xf0]
 80a2ccd:  mov edx, DWORD PTR [ebp-0x138]
 80a2cd3:  cmp edx, DWORD PTR [ebp+eax*4-0x3c]
 80a2cd7:  jbe 80a2cf8
 80a2cd9:  add ecx, DWORD PTR [ebp-0x8c]
 80a2cdf:  sub edi, 0x1
 80a2ce2:  add esi, DWORD PTR [ebp-0x8c]
 80a2ce8:  mov eax, ecx
 80a2cea:  sub eax, DWORD PTR [ebp-0x8c]
 80a2cf0:  cmp DWORD PTR [ebp-0x8c], eax
 80a2cf6:  jbe 80a2ca8
 80a2cf8:  mov DWORD PTR [esp+0xc], edi
 80a2cfc:  mov ecx, DWORD PTR [ebp-0x104]
 80a2d02:  mov DWORD PTR [esp+0x8], ecx
 80a2d06:  mov ebx, DWORD PTR [ebp-0x108]
 80a2d0c:  mov DWORD PTR [esp+0x4], ebx
 80a2d10:  mov esi, DWORD PTR [ebp-0x10c]
 80a2d16:  mov DWORD PTR [esp], esi
 80a2d19:  call 808dab0
 80a2d1e:  mov edx, DWORD PTR [ebp-0xe4]
 80a2d24:  cmp eax, DWORD PTR [ebp+edx*4-0x3c]
 80a2d28:  je 80a2d41
 80a2d2a:  mov DWORD PTR [esp+0xc], edx
 80a2d2e:  sub edi, 0x1
 80a2d31:  mov DWORD PTR [esp+0x8], ebx
 80a2d35:  mov DWORD PTR [esp+0x4], esi
 80a2d39:  mov DWORD PTR [esp], esi
 80a2d3c:  call 8099240
 80a2d41:  mov ecx, DWORD PTR [ebp-0x100]
 80a2d47:  mov esi, DWORD PTR [ebp-0xe4]
 80a2d4d:  mov ebx, DWORD PTR [ebp+ecx*4-0x3c]
 80a2d51:  test ecx, ecx
 80a2d53:  mov DWORD PTR [ebp+esi*4-0x3c], ebx
 80a2d57:  jle 80a2d74
 80a2d59:  mov edx, DWORD PTR [ebp-0x12c]
 80a2d5f:  lea ecx, [ebp-0x40]
 80a2d62:  lea esi, [esi]
 80a2d68:  mov eax, DWORD PTR [edx]
 80a2d6a:  mov DWORD PTR [edx+0x4], eax
 80a2d6d:  sub edx, 0x4
 80a2d70:  cmp edx, ecx
 80a2d72:  jne 80a2d68
 80a2d74:  mov eax, DWORD PTR [ebp-0xe0]
 80a2d7a:  test eax, eax
 80a2d7c:  jne 80a3500
 80a2d82:  test edi, edi
 80a2d84:  jne 80a3678
 80a2d8a:  sub DWORD PTR [ebp-0x14], 0x20
 80a2d8e:  cmp DWORD PTR [ebp-0xe0], 0x18
 80a2d95:  mov DWORD PTR [ebp-0x18], edi
 80a2d98:  jle 80a2c60
 80a2d9e:  mov ecx, DWORD PTR [ebp-0xe4]
 80a2da4:  mov ebx, DWORD PTR [ebp+ecx*4-0x3c]
 80a2da8:  test ebx, ebx
 80a2daa:  je 80a3a58
 80a2db0:  mov ebx, DWORD PTR [ebp-0xe4]
 80a2db6:  not ebx
 80a2db8:  shr ebx, 0x1f
 80a2dbb:  mov edx, DWORD PTR [ebp-0x14]
 80a2dbe:  mov eax, 0x1f
 80a2dc3:  or ebx, DWORD PTR [ebp-0x60]
 80a2dc6:  mov DWORD PTR [esp+0x8], ebx
 80a2dca:  sub edx, 0x1
 80a2dcd:  sub eax, DWORD PTR [ebp-0x84]
 80a2dd3:  mov DWORD PTR [esp], edi
 80a2dd6:  mov DWORD PTR [esp+0x4], eax
 80a2dda:  mov ecx, DWORD PTR [ebp-0xec]
 80a2de0:  mov eax, DWORD PTR [ebp-0x118]
 80a2de6:  call 80a1ea0
 80a2deb:  jmp 80a2160
 80a2df0:  movzx ecx, BYTE PTR [edi+0x2]
 80a2df4:  lea ebx, [edi+0x2]
 80a2df7:  mov DWORD PTR [ebp-0xc0], 0x1
 80a2e01:  jmp 80a2a0b
 80a2e06:  cmp BYTE PTR [ebp-0xf5], 0x0
 80a2e0d:  jne 80a29e8
 80a2e13:  jmp 80a2491
 80a2e18:  mov eax, DWORD PTR [ebp-0xa4]
 80a2e1e:  mov ebx, DWORD PTR [ebp-0xa8]
 80a2e24:  sub DWORD PTR [ebp-0xe4], 0x1
 80a2e2b:  mov DWORD PTR [ebp-0xa8], eax
 80a2e31:  mov DWORD PTR [ebp-0xa4], ebx
 80a2e37:  jmp 80a26c0
 80a2e3c:  mov eax, DWORD PTR [ebp-0xc8]
 80a2e42:  lea edi, [ebp-0x3c]
 80a2e45:  mov DWORD PTR [ebp-0x10c], edi
 80a2e4b:  lea ebx, [ebp-0x14]
 80a2e4e:  lea esi, [ebp-0x10]
 80a2e51:  mov DWORD PTR [esp+0x10], eax
 80a2e55:  mov edx, DWORD PTR [ebp-0xfc]
 80a2e5b:  mov DWORD PTR [esp+0xc], edx
 80a2e5f:  mov ecx, DWORD PTR [ebp-0xcc]
 80a2e65:  mov DWORD PTR [esp+0x8], ecx
 80a2e69:  mov ecx, edi
 80a2e6b:  mov DWORD PTR [ebp-0x11c], ebx
 80a2e71:  mov DWORD PTR [esp+0x4], ebx
 80a2e75:  mov DWORD PTR [ebp-0x120], esi
 80a2e7b:  mov DWORD PTR [esp], esi
 80a2e7e:  mov edx, DWORD PTR [ebp-0x68]
 80a2e81:  mov eax, DWORD PTR [ebp-0xdc]
 80a2e87:  call 80a1c40
 80a2e8c:  mov DWORD PTR [ebp-0xdc], eax
 80a2e92:  mov eax, DWORD PTR [ebp-0x14]
 80a2e95:  test eax, eax
 80a2e97:  jle 80a2fb7
 80a2e9d:  mov DWORD PTR [ebp-0xbc], edi
 80a2ea3:  lea edi, [ebp-0x5c]
 80a2ea6:  mov esi, 0x1
 80a2eab:  mov DWORD PTR [ebp-0x108], edi
 80a2eb1:  mov DWORD PTR [ebp-0xb8], edi
 80a2eb7:  mov edi, 0x80c4aa0
 80a2ebc:  jmp 80a2f1d
 80a2ebe:  mov DWORD PTR [esp+0x10], ebx
 80a2ec2:  mov eax, DWORD PTR [edi]
 80a2ec4:  mov DWORD PTR [esp+0x8], edx
 80a2ec8:  lea eax, [eax*4+0x80c3cc8]
 80a2ecf:  mov DWORD PTR [esp+0xc], eax
 80a2ed3:  mov eax, DWORD PTR [ebp-0xbc]
 80a2ed9:  mov DWORD PTR [esp+0x4], eax
 80a2edd:  mov edx, DWORD PTR [ebp-0xb8]
 80a2ee3:  mov DWORD PTR [esp], edx
 80a2ee6:  call 808c280
 80a2eeb:  mov edx, eax
 80a2eed:  mov eax, ebx
 80a2eef:  add eax, DWORD PTR [ebp-0x10]
 80a2ef2:  test edx, edx
 80a2ef4:  mov DWORD PTR [ebp-0x10], eax
 80a2ef7:  je 80a2f67
 80a2ef9:  mov eax, DWORD PTR [ebp-0xb8]
 80a2eff:  mov edx, DWORD PTR [ebp-0xbc]
 80a2f05:  mov DWORD PTR [ebp-0xbc], eax
 80a2f0b:  mov DWORD PTR [ebp-0xb8], edx
 80a2f11:  mov eax, DWORD PTR [ebp-0x14]
 80a2f14:  test eax, eax
 80a2f16:  je 80a2f87
 80a2f18:  add esi, esi
 80a2f1a:  add edi, 0x10
 80a2f1d:  mov edx, DWORD PTR [ebp-0x14]
 80a2f20:  test esi, edx
 80a2f22:  je 80a2f11
 80a2f24:  xor edx, esi
 80a2f26:  mov eax, DWORD PTR [edi+0x4]
 80a2f29:  mov DWORD PTR [ebp-0x14], edx
 80a2f2c:  mov edx, DWORD PTR [ebp-0x10]
 80a2f2f:  lea ebx, [eax-0x2]
 80a2f32:  cmp ebx, edx
 80a2f34:  jle 80a2ebe
 80a2f36:  mov DWORD PTR [esp+0x10], edx
 80a2f3a:  mov ecx, DWORD PTR [ebp-0xbc]
 80a2f40:  mov DWORD PTR [esp+0x8], ebx
 80a2f44:  mov DWORD PTR [esp+0xc], ecx
 80a2f48:  mov eax, DWORD PTR [edi]
 80a2f4a:  lea eax, [eax*4+0x80c3cc8]
 80a2f51:  mov DWORD PTR [esp+0x4], eax
 80a2f55:  mov eax, DWORD PTR [ebp-0xb8]
 80a2f5b:  mov DWORD PTR [esp], eax
 80a2f5e:  call 808c280
 80a2f63:  mov edx, eax
 80a2f65:  jmp 80a2eed
 80a2f67:  sub eax, 0x1
 80a2f6a:  mov ecx, DWORD PTR [ebp-0xbc]
 80a2f70:  mov DWORD PTR [ebp-0x10], eax
 80a2f73:  mov eax, DWORD PTR [ebp-0xb8]
 80a2f79:  mov DWORD PTR [ebp-0xb8], ecx
 80a2f7f:  mov DWORD PTR [ebp-0xbc], eax
 80a2f85:  jmp 80a2f11
 80a2f87:  mov ebx, DWORD PTR [ebp-0x108]
 80a2f8d:  cmp DWORD PTR [ebp-0xbc], ebx
 80a2f93:  jne 80a2fb7
 80a2f95:  mov eax, DWORD PTR [ebp-0x10]
 80a2f98:  shl eax, 0x2
 80a2f9b:  mov DWORD PTR [esp+0x8], eax
 80a2f9f:  mov esi, DWORD PTR [ebp-0xbc]
 80a2fa5:  mov DWORD PTR [esp+0x4], esi
 80a2fa9:  mov edi, DWORD PTR [ebp-0x10c]
 80a2faf:  mov DWORD PTR [esp], edi
 80a2fb2:  call 804efc0
 80a2fb7:  mov esi, DWORD PTR [ebp-0x10]
 80a2fba:  lea edx, [esi-0x1]
 80a2fbd:  mov ecx, esi
 80a2fbf:  bsr eax, DWORD PTR [ebp+edx*4-0x3c]
 80a2fc4:  shl ecx, 0x5
 80a2fc7:  xor eax, 0x1f
 80a2fca:  sub ecx, eax
 80a2fcc:  mov DWORD PTR [ebp-0xe0], ecx
 80a2fd2:  add ecx, 0x80
 80a2fd5:  jg 80a3e96
 80a2fdb:  cmp DWORD PTR [ebp-0xe0], 0x18
 80a2fe2:  jg 80a31f9
 80a2fe8:  mov edx, DWORD PTR [ebp-0x68]
 80a2feb:  cmp DWORD PTR [ebp-0x6c], edx
 80a2fee:  jne 80a38e5
 80a2ff4:  mov edi, DWORD PTR [ebp-0xe0]
 80a2ffa:  sub edi, 0x1
 80a2ffd:  mov eax, edi
 80a2fff:  sar eax, 0x1f
 80a3002:  shr eax, 0x1b
 80a3005:  lea edx, [edi+eax]
 80a3008:  and edx, 0x1f
 80a300b:  sub edx, eax
 80a300d:  cmp edx, 0x17
 80a3010:  je 80a3e01
 80a3016:  cmp edx, 0x16
 80a3019:  jg 80a3c2c
 80a301f:  mov eax, 0x17
 80a3024:  mov ebx, 0x1
 80a3029:  sub eax, edx
 80a302b:  mov DWORD PTR [esp+0xc], eax
 80a302f:  mov eax, ebx
 80a3031:  mov DWORD PTR [esp+0x8], esi
 80a3035:  mov edx, DWORD PTR [ebp-0x10c]
 80a303b:  lea ecx, [ebp-0x18]
 80a303e:  sub eax, esi
 80a3040:  lea eax, [ecx+eax*4]
 80a3043:  mov DWORD PTR [esp+0x4], edx
 80a3047:  mov DWORD PTR [ebp-0x118], ecx
 80a304d:  mov DWORD PTR [esp], eax
 80a3050:  call 808c1c0
 80a3055:  sub ebx, DWORD PTR [ebp-0x10]
 80a3058:  test ebx, ebx
 80a305a:  jle 80a307c
 80a305c:  xor edx, edx
 80a305e:  mov ecx, 0x1
 80a3063:  mov ebx, DWORD PTR [ebp-0x118]
 80a3069:  mov eax, ecx
 80a306b:  sub eax, DWORD PTR [ebp-0x10]
 80a306e:  mov DWORD PTR [ebx+edx*4], 0x0
 80a3075:  add edx, 0x1
 80a3078:  cmp eax, edx
 80a307a:  jg 80a3063
 80a307c:  mov DWORD PTR [esp+0x8], 0x0
 80a3084:  mov edx, edi
 80a3086:  mov DWORD PTR [esp+0x4], 0x0
 80a308e:  mov DWORD PTR [esp], 0x0
 80a3095:  mov ecx, DWORD PTR [ebp-0xec]
 80a309b:  mov eax, DWORD PTR [ebp-0x118]
 80a30a1:  call 80a1ea0
 80a30a6:  jmp 80a2160
 80a30ab:  mov DWORD PTR [esp+0xc], 0x80b03e0
 80a30b3:  mov DWORD PTR [esp+0x8], 0x3
 80a30bb:  mov DWORD PTR [esp+0x4], 0x80b145c
 80a30c3:  mov DWORD PTR [esp], esi
 80a30c6:  call 80a8fe0
 80a30cb:  test eax, eax
 80a30cd:  jne 80a214b
 80a30d3:  mov edi, DWORD PTR [ebp+0xc]
 80a30d6:  test edi, edi
 80a30d8:  je 80a310e
 80a30da:  lea eax, [esi+0x3]
 80a30dd:  mov DWORD PTR [esp+0xc], 0x80b03e0
 80a30e5:  mov DWORD PTR [esp+0x8], 0x5
 80a30ed:  mov DWORD PTR [esp+0x4], 0x80c6ca3
 80a30f5:  mov DWORD PTR [esp], eax
 80a30f8:  call 80a8fe0
 80a30fd:  mov edx, DWORD PTR [ebp+0xc]
 80a3100:  cmp eax, 0x1
 80a3103:  sbb eax, eax
 80a3105:  and eax, 0x5
 80a3108:  lea eax, [esi+eax+0x3]
 80a310c:  mov DWORD PTR [edx], eax
 80a310e:  mov ebx, DWORD PTR [ebp-0xec]
 80a3114:  test ebx, ebx
 80a3116:  jne 80a3984
 80a311c:  fld DWORD PTR ds:0x80c6d00
 80a3122:  jmp 80a2160
 80a3127:  mov DWORD PTR [esp+0xc], 0x80b03e0
 80a312f:  mov DWORD PTR [esp+0x8], 0x3
 80a3137:  mov DWORD PTR [esp+0x4], 0x80b1454
 80a313f:  mov DWORD PTR [esp], esi
 80a3142:  call 80a8fe0
 80a3147:  test eax, eax
 80a3149:  jne 80a214b
 80a314f:  cmp BYTE PTR [esi+0x3], 0x28
 80a3153:  lea edi, [esi+0x3]
 80a3156:  je 80a3b10
 80a315c:  fld DWORD PTR ds:0x80c6d08
 80a3162:  mov esi, DWORD PTR [ebp+0xc]
 80a3165:  test esi, esi
 80a3167:  je 80a2160
 80a316d:  mov eax, DWORD PTR [ebp+0xc]
 80a3170:  mov DWORD PTR [eax], edi
 80a3172:  jmp 80a2160
 80a3177:  movzx ecx, BYTE PTR [edi+0x2]
 80a317b:  lea ebx, [edi+0x2]
 80a317e:  mov DWORD PTR [ebp-0xc0], 0x0
 80a3188:  jmp 80a2a0b
 80a318d:  mov eax, DWORD PTR [ebp+0xc]
 80a3190:  test eax, eax
 80a3192:  je 80a2250
 80a3198:  mov edx, DWORD PTR [ebp+0xc]
 80a319b:  mov DWORD PTR [edx], ecx
 80a319d:  jmp 80a2250
 80a31a2:  add esi, 0x2
 80a31a5:  movzx ebx, BYTE PTR [esi]
 80a31a8:  mov DWORD PTR [ebp-0xe8], 0x10
 80a31b2:  mov DWORD PTR [ebp-0xc4], 0x0
 80a31bc:  mov BYTE PTR [ebp-0x7e], 0x0
 80a31c0:  mov BYTE PTR [ebp-0xf5], 0x1
 80a31c7:  jmp 80a219a
 80a31cc:  mov eax, DWORD PTR [ebp-0xd8]
 80a31d2:  mov edx, DWORD PTR [ebp-0xd0]
 80a31d8:  neg eax
 80a31da:  lea esi, [edx+eax+0x27]
 80a31de:  jmp 80a2a40
 80a31e3:  add edx, 0x2
 80a31e6:  mov DWORD PTR [ebp-0x64], edx
 80a31e9:  mov DWORD PTR [ebp-0x60], 0x1
 80a31f0:  mov BYTE PTR [ebp-0x7d], 0x1
 80a31f4:  jmp 80a2651
 80a31f9:  mov eax, DWORD PTR [ebp-0xe0]
 80a31ff:  sub eax, 0x18
 80a3202:  mov ebx, eax
 80a3204:  sar ebx, 0x5
 80a3207:  and eax, 0x1f
 80a320a:  mov DWORD PTR [ebp-0x13c], ebx
 80a3210:  mov DWORD PTR [ebp-0xb4], eax
 80a3216:  jne 80a392c
 80a321c:  mov edx, DWORD PTR [ebp-0x10c]
 80a3222:  lea edi, [ebp-0x18]
 80a3225:  mov esi, ebx
 80a3227:  mov DWORD PTR [ebp-0x118], edi
 80a322d:  sub esi, 0x1
 80a3230:  mov eax, DWORD PTR [edx+ebx*4]
 80a3233:  mov DWORD PTR [ebp-0xb0], 0x1f
 80a323d:  mov DWORD PTR [ebp-0x18], eax
 80a3240:  mov ecx, DWORD PTR [ebp-0x3c]
 80a3243:  xor eax, eax
 80a3245:  test ecx, ecx
 80a3247:  jne 80a3260
 80a3249:  lea esi, [esi]
 80a3250:  mov ebx, DWORD PTR [ebp-0x10c]
 80a3256:  add eax, 0x1
 80a3259:  mov edx, DWORD PTR [ebx+eax*4]
 80a325c:  test edx, edx
 80a325e:  je 80a3250
 80a3260:  mov edx, DWORD PTR [ebp-0xe0]
 80a3266:  mov edi, DWORD PTR [ebp-0x6c]
 80a3269:  sub edx, 0x1
 80a326c:  cmp DWORD PTR [ebp-0x68], edi
 80a326f:  setl cl
 80a3272:  cmp eax, esi
 80a3274:  setl al
 80a3277:  or eax, ecx
 80a3279:  and eax, 0x1
 80a327c:  mov DWORD PTR [esp+0x8], eax
 80a3280:  mov eax, DWORD PTR [ebp-0xb0]
 80a3286:  mov DWORD PTR [esp+0x4], eax
 80a328a:  mov eax, DWORD PTR [ebp+esi*4-0x3c]
 80a328e:  mov DWORD PTR [esp], eax
 80a3291:  mov ecx, DWORD PTR [ebp-0xec]
 80a3297:  mov eax, DWORD PTR [ebp-0x118]
 80a329d:  call 80a1ea0
 80a32a2:  jmp 80a2160
 80a32a7:  mov esi, DWORD PTR [ebp-0xdc]
 80a32ad:  add esi, 0x1
 80a32b0:  jmp 80a2948
 80a32b5:  mov ebx, DWORD PTR [ebp-0x5c]
 80a32b8:  cmp DWORD PTR [ebp-0x10], 0x1
 80a32bc:  mov edi, DWORD PTR [ebp-0x58]
 80a32bf:  mov DWORD PTR [ebp-0xa0], ebx
 80a32c5:  jg 80a3886
 80a32cb:  mov edx, DWORD PTR [ebp-0x3c]
 80a32ce:  mov DWORD PTR [ebp-0x98], 0x0
 80a32d8:  cmp edi, edx
 80a32da:  mov DWORD PTR [ebp-0x9c], edx
 80a32e0:  jbe 80a3898
 80a32e6:  mov eax, DWORD PTR [ebp-0xe0]
 80a32ec:  test eax, eax
 80a32ee:  jle 80a3e63
 80a32f4:  mov eax, 0x18
 80a32f9:  sub eax, DWORD PTR [ebp-0xe0]
 80a32ff:  mov DWORD PTR [ebp-0x90], eax
 80a3305:  je 80a3328
 80a3307:  mov DWORD PTR [esp+0xc], eax
 80a330b:  mov DWORD PTR [esp+0x8], 0x1
 80a3313:  mov esi, DWORD PTR [ebp-0x118]
 80a3319:  mov DWORD PTR [esp+0x4], esi
 80a331d:  mov DWORD PTR [esp], esi
 80a3320:  call 808c1c0
 80a3325:  mov edx, DWORD PTR [ebp-0x3c]
 80a3328:  add DWORD PTR [ebp-0xe0], 0x20
 80a332f:  cmp DWORD PTR [ebp-0xe0], 0x18
 80a3336:  mov DWORD PTR [ebp-0x98], edx
 80a333c:  mov DWORD PTR [ebp-0x9c], 0x0
 80a3346:  mov DWORD PTR [ebp-0x94], 0x0
 80a3350:  jg 80a35a1
 80a3356:  mov ecx, DWORD PTR [ebp-0xa0]
 80a335c:  neg ecx
 80a335e:  mov DWORD PTR [ebp-0x128], ecx
 80a3364:  lea esi, [esi]
 80a3368:  cmp DWORD PTR [ebp-0x98], edi
 80a336e:  je 80a351c
 80a3374:  mov esi, DWORD PTR [ebp-0x9c]
 80a337a:  mov ecx, DWORD PTR [ebp-0x98]
 80a3380:  mov eax, esi
 80a3382:  mov edx, ecx
 80a3384:  div edi
 80a3386:  mov DWORD PTR [ebp-0x94], eax
 80a338c:  mov ecx, edx
 80a338e:  mov eax, DWORD PTR [ebp-0xa0]
 80a3394:  mul DWORD PTR [ebp-0x94]
 80a339a:  mov ebx, edx
 80a339c:  mov esi, eax
 80a339e:  lea edx, [ecx+edi]
 80a33a1:  lea esi, [esi]
 80a33a8:  cmp ebx, ecx
 80a33aa:  ja 80a34b8
 80a33b0:  je 80a34b0
 80a33b6:  xor eax, eax
 80a33b8:  sub eax, esi
 80a33ba:  sbb ecx, ebx
 80a33bc:  mov DWORD PTR [ebp-0x9c], eax
 80a33c2:  mov DWORD PTR [ebp-0x98], ecx
 80a33c8:  mov esi, DWORD PTR [ebp-0xe0]
 80a33ce:  test esi, esi
 80a33d0:  jne 80a34e0
 80a33d6:  mov ebx, DWORD PTR [ebp-0x94]
 80a33dc:  test ebx, ebx
 80a33de:  jne 80a363e
 80a33e4:  sub DWORD PTR [ebp-0x14], 0x20
 80a33e8:  mov edx, DWORD PTR [ebp-0x94]
 80a33ee:  cmp DWORD PTR [ebp-0xe0], 0x18
 80a33f5:  mov DWORD PTR [ebp-0x18], edx
 80a33f8:  jle 80a3368
 80a33fe:  jmp 80a35a1
 80a3403:  nop
 80a3404:  lea esi, [esi]
 80a3408:  mov eax, DWORD PTR [ebp+0x14]
 80a340b:  mov eax, DWORD PTR [eax+0x34]
 80a340e:  mov DWORD PTR [ebp-0x110], eax
 80a3414:  mov ebx, eax
 80a3416:  xchg ax, ax
 80a3418:  sub edx, 0x1
 80a341b:  movzx ecx, BYTE PTR [edx]
 80a341e:  movsx eax, cl
 80a3421:  test BYTE PTR [ebx+eax*2+0x1], 0x10
 80a3426:  je 80a3418
 80a3428:  cmp cl, 0x30
 80a342b:  jne 80a24bf
 80a3431:  sub DWORD PTR [ebp-0x6c], 0x1
 80a3435:  mov eax, DWORD PTR [ebp-0x14]
 80a3438:  mov ebx, DWORD PTR [ebp-0x6c]
 80a343b:  sub DWORD PTR [ebp-0xd4], 0x1
 80a3442:  add eax, 0x4
 80a3445:  test ebx, ebx
 80a3447:  mov DWORD PTR [ebp-0x14], eax
 80a344a:  jle 80a24bf
 80a3450:  test eax, eax
 80a3452:  jns 80a24bf
 80a3458:  sub edx, 0x1
 80a345b:  mov ebx, DWORD PTR [ebp-0x110]
 80a3461:  movzx ecx, BYTE PTR [edx]
 80a3464:  movsx eax, cl
 80a3467:  test BYTE PTR [ebx+eax*2+0x1], 0x10
 80a346c:  je 80a3418
 80a346e:  jmp 80a3428
 80a3470:  cmp BYTE PTR [ebp-0xf5], 0x0
 80a3477:  je 80a22b0
 80a347d:  mov eax, DWORD PTR [ebp-0xfc]
 80a3483:  movzx edx, BYTE PTR [esi+eax]
 80a3487:  lea eax, [edx-0x30]
 80a348a:  cmp al, 0x9
 80a348c:  jbe 80a34a5
 80a348e:  movsx eax, dl
 80a3491:  mov edx, DWORD PTR [ebp-0x114]
 80a3497:  mov eax, DWORD PTR [edx+eax*4]
 80a349a:  sub eax, 0x61
 80a349d:  cmp al, 0x5
 80a349f:  ja 80a2206
 80a34a5:  mov edi, esi
 80a34a7:  jmp 80a22b3
 80a34ac:  lea esi, [esi]
 80a34b0:  test esi, esi
 80a34b2:  je 80a33b6
 80a34b8:  add edx, edi
 80a34ba:  add ecx, edi
 80a34bc:  mov eax, edx
 80a34be:  sub eax, edi
 80a34c0:  sub DWORD PTR [ebp-0x94], 0x1
 80a34c7:  sub esi, DWORD PTR [ebp-0xa0]
 80a34cd:  sbb ebx, 0x0
 80a34d0:  cmp edi, eax
 80a34d2:  jbe 80a33a8
 80a34d8:  jmp 80a33b6
 80a34dd:  lea esi, [esi]
 80a34e0:  cmp DWORD PTR [ebp-0xe0], 0xf9
 80a34e7:  jge 80a355a
 80a34e9:  mov ecx, DWORD PTR [ebp-0x94]
 80a34ef:  add DWORD PTR [ebp-0xe0], 0x20
 80a34f6:  mov DWORD PTR [ebp-0x18], ecx
 80a34f9:  jmp 80a3368
 80a34fe:  xchg ax, ax
 80a3500:  cmp DWORD PTR [ebp-0xe0], 0xf9
 80a3507:  jge 80a35f2
 80a350d:  mov DWORD PTR [ebp-0x18], edi
 80a3510:  add DWORD PTR [ebp-0xe0], 0x20
 80a3517:  jmp 80a2c60
 80a351c:  mov ecx, DWORD PTR [ebp-0x9c]
 80a3522:  add ecx, DWORD PTR [ebp-0x98]
 80a3528:  jae 80a36b4
 80a352e:  sub ecx, DWORD PTR [ebp-0xa0]
 80a3534:  xor ebx, ebx
 80a3536:  mov DWORD PTR [ebp-0x94], 0xffffffff
 80a3540:  add ebx, DWORD PTR [ebp-0xa0]
 80a3546:  adc ecx, 0x0
 80a3549:  mov DWORD PTR [ebp-0x9c], ebx
 80a354f:  mov DWORD PTR [ebp-0x98], ecx
 80a3555:  jmp 80a33c8
 80a355a:  mov eax, 0x18
 80a355f:  sub eax, DWORD PTR [ebp-0xe0]
 80a3565:  mov DWORD PTR [ebp-0x90], eax
 80a356b:  je 80a35a1
 80a356d:  mov DWORD PTR [esp+0xc], eax
 80a3571:  mov DWORD PTR [esp+0x8], 0x1
 80a3579:  mov ebx, DWORD PTR [ebp-0x118]
 80a357f:  mov DWORD PTR [esp+0x4], ebx
 80a3583:  mov DWORD PTR [esp], ebx
 80a3586:  call 808c1c0
 80a358b:  mov eax, DWORD PTR [ebp-0x94]
 80a3591:  mov ecx, 0x20
 80a3596:  sub ecx, DWORD PTR [ebp-0x90]
 80a359c:  shr eax, cl
 80a359e:  or DWORD PTR [ebp-0x18], eax
 80a35a1:  cmp BYTE PTR [ebp-0x7d], 0x0
 80a35a5:  jne 80a35b5
 80a35a7:  mov ecx, DWORD PTR [ebp-0x98]
 80a35ad:  test ecx, ecx
 80a35af:  je 80a398f
 80a35b5:  mov eax, 0x1
 80a35ba:  mov edx, DWORD PTR [ebp-0x14]
 80a35bd:  mov DWORD PTR [esp+0x8], eax
 80a35c1:  mov eax, 0x1f
 80a35c6:  sub eax, DWORD PTR [ebp-0x90]
 80a35cc:  sub edx, 0x1
 80a35cf:  mov DWORD PTR [esp+0x4], eax
 80a35d3:  mov esi, DWORD PTR [ebp-0x94]
 80a35d9:  mov DWORD PTR [esp], esi
 80a35dc:  mov ecx, DWORD PTR [ebp-0xec]
 80a35e2:  mov eax, DWORD PTR [ebp-0x118]
 80a35e8:  call 80a1ea0
 80a35ed:  jmp 80a2160
 80a35f2:  mov eax, 0x18
 80a35f7:  sub eax, DWORD PTR [ebp-0xe0]
 80a35fd:  mov DWORD PTR [ebp-0x84], eax
 80a3603:  je 80a2d9e
 80a3609:  mov DWORD PTR [esp+0xc], eax
 80a360d:  mov DWORD PTR [esp+0x8], 0x1
 80a3615:  mov edx, DWORD PTR [ebp-0x118]
 80a361b:  mov DWORD PTR [esp+0x4], edx
 80a361f:  mov DWORD PTR [esp], edx
 80a3622:  call 808c1c0
 80a3627:  mov ecx, 0x20
 80a362c:  mov eax, edi
 80a362e:  sub ecx, DWORD PTR [ebp-0x84]
 80a3634:  shr eax, cl
 80a3636:  or DWORD PTR [ebp-0x18], eax
 80a3639:  jmp 80a2d9e
 80a363e:  bsr edx, DWORD PTR [ebp-0x94]
 80a3645:  mov ecx, 0x20
 80a364a:  mov eax, ecx
 80a364c:  xor edx, 0x1f
 80a364f:  sub eax, edx
 80a3651:  sub DWORD PTR [ebp-0x14], edx
 80a3654:  cmp eax, 0x18
 80a3657:  jle 80a3ee3
 80a365d:  mov eax, DWORD PTR [ebp-0x94]
 80a3663:  add edx, 0x18
 80a3666:  sub ecx, edx
 80a3668:  mov DWORD PTR [ebp-0x90], edx
 80a366e:  shr eax, cl
 80a3670:  mov DWORD PTR [ebp-0x18], eax
 80a3673:  jmp 80a35a1
 80a3678:  bsr edx, edi
 80a367b:  mov ecx, 0x20
 80a3680:  mov eax, ecx
 80a3682:  xor edx, 0x1f
 80a3685:  sub eax, edx
 80a3687:  sub DWORD PTR [ebp-0x14], edx
 80a368a:  cmp eax, 0x18
 80a368d:  jle 80a3ef3
 80a3693:  add edx, 0x18
 80a3696:  mov eax, edi
 80a3698:  sub ecx, edx
 80a369a:  shr eax, cl
 80a369c:  mov DWORD PTR [ebp-0x18], eax
 80a369f:  mov eax, DWORD PTR [ebp-0xe4]
 80a36a5:  mov DWORD PTR [ebp-0x84], edx
 80a36ab:  mov ebx, DWORD PTR [ebp+eax*4-0x3c]
 80a36af:  jmp 80a2da8
 80a36b4:  xor eax, eax
 80a36b6:  mov ebx, DWORD PTR [ebp-0xa0]
 80a36bc:  cmp DWORD PTR [ebp-0xa0], 0x0
 80a36c3:  mov esi, DWORD PTR [ebp-0x128]
 80a36c9:  mov DWORD PTR [ebp-0x94], 0xffffffff
 80a36d3:  setne al
 80a36d6:  sub ebx, eax
 80a36d8:  jmp 80a339e
 80a36dd:  mov eax, DWORD PTR [ebp-0xd8]
 80a36e3:  lea esi, [eax*4+0x95]
 80a36ea:  mov eax, DWORD PTR [ebp-0xc0]
 80a36f0:  test eax, eax
 80a36f2:  jne 80a2a40
 80a36f8:  mov eax, DWORD PTR [ebp-0xd0]
 80a36fe:  sub eax, DWORD PTR [ebp-0xd8]
 80a3704:  lea esi, [eax*4+0x83]
 80a370b:  jmp 80a2a40
 80a3710:  shl ecx, 0x2
 80a3713:  jmp 80a2581
 80a3718:  mov DWORD PTR [esp+0x8], 0x0
 80a3720:  lea eax, [ebp-0x18]
 80a3723:  mov DWORD PTR [esp+0x4], 0x0
 80a372b:  mov DWORD PTR [esp], 0x0
 80a3732:  mov ecx, DWORD PTR [ebp-0xec]
 80a3738:  mov edx, DWORD PTR [ebp-0xf4]
 80a373e:  call 80a1ea0
 80a3743:  jmp 80a2160
 80a3748:  mov ecx, 0x3
 80a374d:  mov eax, ebx
 80a374f:  sub ecx, edi
 80a3751:  shr eax, cl
 80a3753:  lea ecx, [edi+0x1d]
 80a3756:  shl ebx, cl
 80a3758:  or DWORD PTR [ebp-0x18], eax
 80a375b:  lea eax, [ebp-0x18]
 80a375e:  mov DWORD PTR [esp+0x8], 0x1
 80a3766:  mov DWORD PTR [esp+0x4], 0x1f
 80a376e:  mov DWORD PTR [esp], ebx
 80a3771:  mov ecx, DWORD PTR [ebp-0xec]
 80a3777:  mov edx, DWORD PTR [ebp-0xf4]
 80a377d:  call 80a1ea0
 80a3782:  jmp 80a2160
 80a3787:  mov edi, DWORD PTR [ebp-0x3c]
 80a378a:  mov esi, DWORD PTR [ebp-0x5c]
 80a378d:  xor ebx, ebx
 80a378f:  mov edx, edi
 80a3791:  mov eax, ebx
 80a3793:  div esi
 80a3795:  mov ebx, eax
 80a3797:  mov eax, DWORD PTR [ebp-0xe0]
 80a379d:  mov edi, edx
 80a379f:  test eax, eax
 80a37a1:  jne 80a37c0
 80a37a3:  test ebx, ebx
 80a37a5:  jne 80a3848
 80a37ab:  sub DWORD PTR [ebp-0x14], 0x20
 80a37af:  cmp DWORD PTR [ebp-0xe0], 0x18
 80a37b6:  mov DWORD PTR [ebp-0x18], ebx
 80a37b9:  jle 80a378d
 80a37bb:  xor esi, esi
 80a37bd:  jmp 80a3810
 80a37bf:  nop
 80a37c0:  cmp DWORD PTR [ebp-0xe0], 0xf9
 80a37c7:  jge 80a37d5
 80a37c9:  mov DWORD PTR [ebp-0x18], ebx
 80a37cc:  add DWORD PTR [ebp-0xe0], 0x20
 80a37d3:  jmp 80a378d
 80a37d5:  mov esi, 0x18
 80a37da:  sub esi, DWORD PTR [ebp-0xe0]
 80a37e0:  test esi, esi
 80a37e2:  jle 80a3810
 80a37e4:  mov DWORD PTR [esp+0xc], esi
 80a37e8:  mov DWORD PTR [esp+0x8], 0x1
 80a37f0:  mov ecx, DWORD PTR [ebp-0x118]
 80a37f6:  mov DWORD PTR [esp+0x4], ecx
 80a37fa:  mov DWORD PTR [esp], ecx
 80a37fd:  call 808c1c0
 80a3802:  mov ecx, 0x20
 80a3807:  mov eax, ebx
 80a3809:  sub ecx, esi
 80a380b:  shr eax, cl
 80a380d:  or DWORD PTR [ebp-0x18], eax
 80a3810:  mov edx, DWORD PTR [ebp-0x14]
 80a3813:  xor eax, eax
 80a3815:  sub edx, 0x1
 80a3818:  test edi, edi
 80a381a:  setne al
 80a381d:  or eax, DWORD PTR [ebp-0x60]
 80a3820:  mov DWORD PTR [esp], ebx
 80a3823:  mov DWORD PTR [esp+0x8], eax
 80a3827:  mov eax, 0x1f
 80a382c:  sub eax, esi
 80a382e:  mov DWORD PTR [esp+0x4], eax
 80a3832:  mov ecx, DWORD PTR [ebp-0xec]
 80a3838:  mov eax, DWORD PTR [ebp-0x118]
 80a383e:  call 80a1ea0
 80a3843:  jmp 80a2160
 80a3848:  bsr edx, ebx
 80a384b:  mov eax, 0x20
 80a3850:  mov ecx, 0x20
 80a3855:  xor edx, 0x1f
 80a3858:  sub eax, edx
 80a385a:  sub DWORD PTR [ebp-0x14], edx
 80a385d:  cmp eax, 0x18
 80a3860:  jle 80a3eae
 80a3866:  lea esi, [edx+0x18]
 80a3869:  mov eax, ebx
 80a386b:  sub ecx, esi
 80a386d:  shr eax, cl
 80a386f:  mov DWORD PTR [ebp-0x18], eax
 80a3872:  jmp 80a3810
 80a3874:  cmp BYTE PTR [ebp-0xf5], 0x0
 80a387b:  je 80a22b0
 80a3881:  jmp 80a2216
 80a3886:  mov eax, DWORD PTR [ebp-0x38]
 80a3889:  mov edx, DWORD PTR [ebp-0x3c]
 80a388c:  mov DWORD PTR [ebp-0x98], eax
 80a3892:  mov DWORD PTR [ebp-0x9c], edx
 80a3898:  mov DWORD PTR [ebp-0x90], 0x0
 80a38a2:  jmp 80a3356
 80a38a7:  cmp cl, 0x70
 80a38aa:  jne 80a2206
 80a38b0:  cmp esi, DWORD PTR [ebp-0x74]
 80a38b3:  jne 80a22b0
 80a38b9:  lea esi, [esi]
 80a38c0:  jmp 80a2216
 80a38c5:  lea esi, [esi]
 80a38c8:  mov eax, DWORD PTR [ebp+0xc]
 80a38cb:  test eax, eax
 80a38cd:  lea esi, [esi]
 80a38d0:  je 80a225e
 80a38d6:  mov eax, DWORD PTR [ebp+0x8]
 80a38d9:  fldz
 80a38db:  mov edi, DWORD PTR [ebp+0xc]
 80a38de:  mov DWORD PTR [edi], eax
 80a38e0:  jmp 80a2160
 80a38e5:  lea edi, [ebp-0x18]
 80a38e8:  lea eax, [esi*4]
 80a38ef:  mov DWORD PTR [ebp-0x118], edi
 80a38f5:  mov DWORD PTR [esp+0x8], eax
 80a38f9:  mov eax, DWORD PTR [ebp-0x10c]
 80a38ff:  mov DWORD PTR [esp], edi
 80a3902:  mov DWORD PTR [esp+0x4], eax
 80a3906:  call 804efc0
 80a390b:  mov ecx, 0x1a
 80a3910:  mov edx, 0x55555556
 80a3915:  sub ecx, DWORD PTR [ebp-0xe0]
 80a391b:  mov eax, ecx
 80a391d:  imul edx
 80a391f:  sar ecx, 0x1f
 80a3922:  sub edx, ecx
 80a3924:  lea eax, [edx+0x2]
 80a3927:  jmp 80a2635
 80a392c:  mov ecx, eax
 80a392e:  sub ecx, 0x1
 80a3931:  cmp edx, ebx
 80a3933:  lea esi, [ebp-0x18]
 80a3936:  mov DWORD PTR [ebp-0xb0], ecx
 80a393c:  mov DWORD PTR [ebp-0x118], esi
 80a3942:  jg 80a3a97
 80a3948:  mov eax, DWORD PTR [ebp+ebx*4-0x3c]
 80a394c:  movzx ecx, BYTE PTR [ebp-0xb4]
 80a3953:  mov esi, DWORD PTR [ebp-0x13c]
 80a3959:  shr eax, cl
 80a395b:  mov DWORD PTR [ebp-0x18], eax
 80a395e:  jmp 80a3240
 80a3963:  mov eax, gs:0x0
 80a3969:  mov edx, 0xffffffe8
 80a396f:  mov DWORD PTR [eax+edx], 0x22
 80a3976:  mov eax, DWORD PTR [ebp-0xec]
 80a397c:  test eax, eax
 80a397e:  je 80a311c
 80a3984:  fld DWORD PTR ds:0x80c6d04
 80a398a:  jmp 80a2160
 80a398f:  xor eax, eax
 80a3991:  cmp DWORD PTR [ebp-0x9c], 0x0
 80a3998:  setne al
 80a399b:  jmp 80a35ba
 80a39a0:  mov edi, DWORD PTR [ebp-0xe4]
 80a39a6:  mov edx, DWORD PTR [ebp-0xe0]
 80a39ac:  sub edi, esi
 80a39ae:  test edx, edx
 80a39b0:  jle 80a3d88
 80a39b6:  mov edx, DWORD PTR [ebp-0xe0]
 80a39bc:  mov eax, edi
 80a39be:  shl eax, 0x5
 80a39c1:  lea ebx, [eax+edx]
 80a39c4:  cmp ebx, 0x18
 80a39c7:  jg 80a3d4b
 80a39cd:  mov DWORD PTR [ebp-0x18], 0x0
 80a39d4:  mov DWORD PTR [ebp-0x84], 0x0
 80a39de:  mov DWORD PTR [ebp-0xe0], ebx
 80a39e4:  test esi, esi
 80a39e6:  jle 80a3a0f
 80a39e8:  mov eax, DWORD PTR [ebp-0x10c]
 80a39ee:  mov ecx, DWORD PTR [ebp-0x10c]
 80a39f4:  lea ebx, [eax+esi*4-0x4]
 80a39f8:  lea eax, [edi+esi]
 80a39fb:  lea edx, [ecx+eax*4]
 80a39fe:  lea ecx, [ebp-0x40]
 80a3a01:  mov eax, DWORD PTR [ebx]
 80a3a03:  sub ebx, 0x4
 80a3a06:  mov DWORD PTR [edx], eax
 80a3a08:  sub edx, 0x4
 80a3a0b:  cmp ebx, ecx
 80a3a0d:  jne 80a3a01
 80a3a0f:  test edi, edi
 80a3a11:  js 80a3a29
 80a3a13:  mov ebx, DWORD PTR [ebp-0x10c]
 80a3a19:  xor eax, eax
 80a3a1b:  mov DWORD PTR [ebx+eax*4], 0x0
 80a3a22:  add eax, 0x1
 80a3a25:  cmp edi, eax
 80a3a27:  jge 80a3a1b
 80a3a29:  mov esi, DWORD PTR [ebp-0xe4]
 80a3a2f:  lea edi, [esi+0x1]
 80a3a32:  mov ebx, DWORD PTR [ebp+esi*4-0x3c]
 80a3a36:  mov DWORD PTR [ebp-0x104], edi
 80a3a3c:  xor edi, edi
 80a3a3e:  cmp DWORD PTR [ebp-0xe0], 0x18
 80a3a45:  mov DWORD PTR [ebp+esi*4-0x5c], 0x0
 80a3a4d:  jle 80a2c45
 80a3a53:  jmp 80a2da8
 80a3a58:  mov esi, DWORD PTR [ebp-0x10c]
 80a3a5e:  mov ebx, DWORD PTR [ebp-0x100]
 80a3a64:  lea ecx, [esi+ebx*4]
 80a3a67:  mov esi, DWORD PTR [ebp-0xe4]
 80a3a6d:  test esi, esi
 80a3a6f:  js 80a2db0
 80a3a75:  lea esi, [esi]
 80a3a78:  mov eax, DWORD PTR [ecx]
 80a3a7a:  sub esi, 0x1
 80a3a7d:  mov ebx, esi
 80a3a7f:  not ebx
 80a3a81:  test eax, eax
 80a3a83:  mov eax, ebx
 80a3a85:  sete dl
 80a3a88:  sub ecx, 0x4
 80a3a8b:  shr eax, 0x1f
 80a3a8e:  test dl, al
 80a3a90:  jne 80a3a78
 80a3a92:  jmp 80a2db8
 80a3a97:  mov eax, DWORD PTR [ebp-0x13c]
 80a3a9d:  lea ebx, [ebp-0x18]
 80a3aa0:  mov ecx, DWORD PTR [ebp-0x10c]
 80a3aa6:  mov esi, ebx
 80a3aa8:  mov edi, DWORD PTR [ebp-0xb4]
 80a3aae:  mov DWORD PTR [ebp-0x7c], 0x20
 80a3ab5:  mov DWORD PTR [ebp-0x118], ebx
 80a3abb:  mov ebx, eax
 80a3abd:  sub DWORD PTR [ebp-0x7c], edi
 80a3ac0:  lea edi, [ecx+eax*4]
 80a3ac3:  mov DWORD PTR [ebp-0x124], edx
 80a3ac9:  mov edx, DWORD PTR [edi+0x4]
 80a3acc:  add ebx, 0x1
 80a3acf:  movzx ecx, BYTE PTR [ebp-0x7c]
 80a3ad3:  mov eax, DWORD PTR [edi]
 80a3ad5:  add edi, 0x4
 80a3ad8:  shl edx, cl
 80a3ada:  movzx ecx, BYTE PTR [ebp-0xb4]
 80a3ae1:  shr eax, cl
 80a3ae3:  or edx, eax
 80a3ae5:  mov DWORD PTR [esi], edx
 80a3ae7:  add esi, 0x4
 80a3aea:  cmp DWORD PTR [ebp-0x124], ebx
 80a3af0:  jg 80a3ac9
 80a3af2:  mov eax, ebx
 80a3af4:  mov esi, DWORD PTR [ebp-0x13c]
 80a3afa:  sub eax, DWORD PTR [ebp-0x13c]
 80a3b00:  test eax, eax
 80a3b02:  jg 80a3240
 80a3b08:  jmp 80a3948
 80a3b0d:  lea esi, [esi]
 80a3b10:  mov ebx, DWORD PTR [ebp+0x14]
 80a3b13:  mov ecx, DWORD PTR [ebx+0x38]
 80a3b16:  mov ebx, edi
 80a3b18:  add ebx, 0x1
 80a3b1b:  movzx edx, BYTE PTR [ebx]
 80a3b1e:  lea eax, [edx-0x30]
 80a3b21:  cmp al, 0x9
 80a3b23:  jbe 80a3b18
 80a3b25:  movsx eax, dl
 80a3b28:  mov eax, DWORD PTR [ecx+eax*4]
 80a3b2b:  sub eax, 0x61
 80a3b2e:  cmp al, 0x19
 80a3b30:  jbe 80a3b18
 80a3b32:  cmp dl, 0x5f
 80a3b35:  je 80a3b18
 80a3b37:  cmp dl, 0x29
 80a3b3a:  jne 80a315c
 80a3b40:  mov esi, DWORD PTR [ebp+0x14]
 80a3b43:  lea eax, [ebp-0x1c]
 80a3b46:  mov DWORD PTR [esp+0x4], eax
 80a3b4a:  lea eax, [edi+0x1]
 80a3b4d:  mov DWORD PTR [esp+0xc], 0x0
 80a3b55:  mov DWORD PTR [esp+0x8], 0x0
 80a3b5d:  mov DWORD PTR [esp+0x10], esi
 80a3b61:  mov DWORD PTR [esp], eax
 80a3b64:  call 80a1420
 80a3b69:  cmp DWORD PTR [ebp-0x1c], ebx
 80a3b6c:  je 80a3ebe
 80a3b72:  fld DWORD PTR ds:0x80c6d08
 80a3b78:  lea edi, [ebx+0x1]
 80a3b7b:  jmp 80a3162
 80a3b80:  mov ecx, DWORD PTR [edx+0x2c]
 80a3b83:  mov DWORD PTR [ebp-0xc4], ecx
 80a3b89:  movzx eax, BYTE PTR [ecx]
 80a3b8c:  sub eax, 0x1
 80a3b8f:  cmp al, 0x7d
 80a3b91:  ja 80a205d
 80a3b97:  mov ebx, DWORD PTR [edx+0x28]
 80a3b9a:  mov DWORD PTR [ebp-0xc8], ebx
 80a3ba0:  cmp BYTE PTR [ebx], 0x0
 80a3ba3:  jne 80a2071
 80a3ba9:  jmp 80a205d
 80a3bae:  cmp DWORD PTR [ebp-0xd0], 0xff
 80a3bb5:  je 80a3d31
 80a3bbb:  mov eax, gs:0x0
 80a3bc1:  mov edx, 0xffffffe8
 80a3bc7:  mov DWORD PTR [eax+edx], 0x22
 80a3bce:  mov eax, DWORD PTR [ebp-0xc0]
 80a3bd4:  test eax, eax
 80a3bd6:  jne 80a3d31
 80a3bdc:  mov eax, DWORD PTR [ebp-0xec]
 80a3be2:  mov edx, 0x7f800000
 80a3be7:  test eax, eax
 80a3be9:  je 80a3bf0
 80a3beb:  mov edx, 0xff800000
 80a3bf0:  add ebx, 0x1
 80a3bf3:  movzx eax, BYTE PTR [ebx]
 80a3bf6:  sub eax, 0x30
 80a3bf9:  cmp al, 0x9
 80a3bfb:  jbe 80a3bf0
 80a3bfd:  mov eax, DWORD PTR [ebp+0xc]
 80a3c00:  mov DWORD PTR [ebp-0x130], edx
 80a3c06:  fld DWORD PTR [ebp-0x130]
 80a3c0c:  test eax, eax
 80a3c0e:  je 80a2160
 80a3c14:  fstp st(0)
 80a3c16:  mov ecx, DWORD PTR [ebp+0xc]
 80a3c19:  mov DWORD PTR [ecx], ebx
 80a3c1b:  mov DWORD PTR [ebp-0x130], edx
 80a3c21:  fld DWORD PTR [ebp-0x130]
 80a3c27:  jmp 80a2160
 80a3c2c:  lea eax, [edx-0x17]
 80a3c2f:  mov DWORD PTR [esp+0x8], esi
 80a3c33:  lea edx, [ebp-0x18]
 80a3c36:  mov DWORD PTR [esp+0xc], eax
 80a3c3a:  mov eax, DWORD PTR [ebp-0x10c]
 80a3c40:  mov DWORD PTR [esp+0x4], eax
 80a3c44:  mov eax, 0x1
 80a3c49:  sub eax, esi
 80a3c4b:  mov DWORD PTR [ebp-0x118], edx
 80a3c51:  lea eax, [edx+eax*4]
 80a3c54:  mov DWORD PTR [esp], eax
 80a3c57:  call 808c220
 80a3c5c:  mov esi, DWORD PTR [ebp-0x10]
 80a3c5f:  lea edx, [esi*4]
 80a3c66:  neg edx
 80a3c68:  mov DWORD PTR [ebp+edx-0x18], eax
 80a3c6c:  mov eax, esi
 80a3c6e:  neg eax
 80a3c70:  test eax, eax
 80a3c72:  jle 80a307c
 80a3c78:  xor ecx, ecx
 80a3c7a:  mov ebx, DWORD PTR [ebp-0x118]
 80a3c80:  mov DWORD PTR [ebx+ecx*4], 0x0
 80a3c87:  add ecx, 0x1
 80a3c8a:  cmp eax, ecx
 80a3c8c:  jg 80a3c7a
 80a3c8e:  jmp 80a307c
 80a3c93:  mov eax, DWORD PTR [ebp-0xe4]
 80a3c99:  mov DWORD PTR [esp+0x4], esi
 80a3c9d:  shl eax, 0x2
 80a3ca0:  mov DWORD PTR [esp+0x8], eax
 80a3ca4:  mov edi, DWORD PTR [ebp-0x108]
 80a3caa:  mov DWORD PTR [esp], edi
 80a3cad:  call 804efc0
 80a3cb2:  jmp 80a2abb
 80a3cb7:  mov edi, eax
 80a3cb9:  mov DWORD PTR [ebp-0xd4], 0x0
 80a3cc3:  mov DWORD PTR [ebp-0xd0], 0x0
 80a3ccd:  jmp 80a24bf
 80a3cd2:  mov edi, DWORD PTR [ebp-0xc8]
 80a3cd8:  mov DWORD PTR [ebp-0x74], esi
 80a3cdb:  movzx ecx, BYTE PTR [edi]
 80a3cde:  cmp bl, 0x30
 80a3ce1:  je 80a3d25
 80a3ce3:  test cl, cl
 80a3ce5:  mov eax, 0xffffffff
 80a3cea:  je 80a3d22
 80a3cec:  cmp bl, cl
 80a3cee:  jne 80a21bf
 80a3cf4:  xor eax, eax
 80a3cf6:  xchg ax, ax
 80a3cf8:  jmp 80a3d0e
 80a3cfa:  lea esi, [esi]
 80a3d00:  mov edi, DWORD PTR [ebp-0x74]
 80a3d03:  cmp dl, BYTE PTR [edi+eax]
 80a3d06:  xchg ax, ax
 80a3d08:  jne 80a21bf
 80a3d0e:  mov edi, DWORD PTR [ebp-0xc8]
 80a3d14:  add eax, 0x1
 80a3d17:  movzx edx, BYTE PTR [edi+eax]
 80a3d1b:  test dl, dl
 80a3d1d:  jne 80a3d00
 80a3d1f:  sub eax, 0x1
 80a3d22:  add DWORD PTR [ebp-0x74], eax
 80a3d25:  add DWORD PTR [ebp-0x74], 0x1
 80a3d29:  mov eax, DWORD PTR [ebp-0x74]
 80a3d2c:  movzx ebx, BYTE PTR [eax]
 80a3d2f:  jmp 80a3cde
 80a3d31:  mov eax, DWORD PTR [ebp-0xec]
 80a3d37:  mov edx, 0x80000000
 80a3d3c:  test eax, eax
 80a3d3e:  jne 80a3bf0
 80a3d44:  xor edx, edx
 80a3d46:  jmp 80a3bf0
 80a3d4b:  mov eax, 0x18
 80a3d50:  sub eax, DWORD PTR [ebp-0xe0]
 80a3d56:  mov DWORD PTR [ebp-0x84], eax
 80a3d5c:  je 80a39de
 80a3d62:  mov DWORD PTR [esp+0xc], eax
 80a3d66:  mov DWORD PTR [esp+0x8], 0x1
 80a3d6e:  mov ecx, DWORD PTR [ebp-0x118]
 80a3d74:  mov DWORD PTR [esp+0x4], ecx
 80a3d78:  mov DWORD PTR [esp], ecx
 80a3d7b:  call 808c1c0
 80a3d80:  mov esi, DWORD PTR [ebp-0x10]
 80a3d83:  jmp 80a39de
 80a3d88:  mov eax, edi
 80a3d8a:  shl eax, 0x5
 80a3d8d:  mov DWORD PTR [ebp-0x84], 0x0
 80a3d97:  sub DWORD PTR [ebp-0x14], eax
 80a3d9a:  jmp 80a39e4
 80a3d9f:  cmp BYTE PTR [ebp-0xf5], 0x0
 80a3da6:  mov eax, DWORD PTR [ebp+0x8]
 80a3da9:  je 80a2248
 80a3daf:  mov eax, edi
 80a3db1:  sub eax, 0x1
 80a3db4:  jmp 80a2248
 80a3db9:  mov ecx, DWORD PTR [ebp-0xc8]
 80a3dbf:  mov edx, 0xffffffff
 80a3dc4:  movzx eax, BYTE PTR [ecx]
 80a3dc7:  test al, al
 80a3dc9:  je 80a3dfa
 80a3dcb:  cmp bl, al
 80a3dcd:  jne 80a22e3
 80a3dd3:  xor eax, eax
 80a3dd5:  jmp 80a3de6
 80a3dd7:  nop
 80a3dd8:  cmp dl, BYTE PTR [edi+eax]
 80a3ddb:  nop
 80a3ddc:  lea esi, [esi]
 80a3de0:  jne 80a22e3
 80a3de6:  mov ecx, DWORD PTR [ebp-0xc8]
 80a3dec:  add eax, 0x1
 80a3def:  movzx edx, BYTE PTR [ecx+eax]
 80a3df3:  test dl, dl
 80a3df5:  jne 80a3dd8
 80a3df7:  lea edx, [eax-0x1]
 80a3dfa:  add edi, edx
 80a3dfc:  jmp 80a239f
 80a3e01:  mov ebx, 0x1
 80a3e06:  lea ecx, [ebp-0x18]
 80a3e09:  mov edx, ebx
 80a3e0b:  lea eax, [esi*4]
 80a3e12:  sub edx, esi
 80a3e14:  mov DWORD PTR [ebp-0x118], ecx
 80a3e1a:  lea edx, [ecx+edx*4]
 80a3e1d:  mov DWORD PTR [esp+0x8], eax
 80a3e21:  mov esi, DWORD PTR [ebp-0x10c]
 80a3e27:  mov DWORD PTR [esp], edx
 80a3e2a:  mov DWORD PTR [esp+0x4], esi
 80a3e2e:  call 804efc0
 80a3e33:  sub ebx, DWORD PTR [ebp-0x10]
 80a3e36:  test ebx, ebx
 80a3e38:  jle 80a307c
 80a3e3e:  xor edx, edx
 80a3e40:  mov ecx, 0x1
 80a3e45:  mov eax, DWORD PTR [ebp-0x118]
 80a3e4b:  mov DWORD PTR [eax+edx*4], 0x0
 80a3e52:  mov eax, ecx
 80a3e54:  add edx, 0x1
 80a3e57:  sub eax, DWORD PTR [ebp-0x10]
 80a3e5a:  cmp eax, edx
 80a3e5c:  jg 80a3e45
 80a3e5e:  jmp 80a307c
 80a3e63:  mov eax, DWORD PTR [ebp-0xe0]
 80a3e69:  mov DWORD PTR [ebp-0x90], 0x0
 80a3e73:  sub eax, 0x20
 80a3e76:  mov DWORD PTR [ebp-0x14], eax
 80a3e79:  jmp 80a332f
 80a3e7e:  mov edx, 0xffffffe8
 80a3e84:  mov eax, gs:0x0
 80a3e8a:  mov DWORD PTR [eax+edx], 0x22
 80a3e91:  jmp 80a2250
 80a3e96:  mov edx, 0xffffffe8
 80a3e9c:  mov eax, gs:0x0
 80a3ea2:  mov DWORD PTR [eax+edx], 0x22
 80a3ea9:  jmp 80a310e
 80a3eae:  neg edx
 80a3eb0:  add edx, 0x20
 80a3eb3:  mov DWORD PTR [ebp-0xe0], edx
 80a3eb9:  jmp 80a37af
 80a3ebe:  and eax, 0x7fffff
 80a3ec3:  mov edx, 0x400000
 80a3ec8:  je 80a3ecc
 80a3eca:  mov edx, eax
 80a3ecc:  or edx, 0x7f800000
 80a3ed2:  mov DWORD PTR [ebp-0x130], edx
 80a3ed8:  fld DWORD PTR [ebp-0x130]
 80a3ede:  jmp 80a3b78
 80a3ee3:  neg edx
 80a3ee5:  add edx, 0x20
 80a3ee8:  mov DWORD PTR [ebp-0xe0], edx
 80a3eee:  jmp 80a33e8
 80a3ef3:  neg edx
 80a3ef5:  add edx, 0x20
 80a3ef8:  mov DWORD PTR [ebp-0xe0], edx
 80a3efe:  jmp 80a2d8e
 80a3f03:  lea esi, [esi]
 80a3f09:  lea edi, [edi]

080a3f10 <__strtof_l>:
 80a3f10:  push ebp
 80a3f11:  mov ebp, esp
 80a3f13:  sub esp, 0x10
 80a3f16:  mov eax, DWORD PTR [ebp+0x10]
 80a3f19:  mov DWORD PTR [esp+0x8], 0x0
 80a3f21:  mov DWORD PTR [esp+0xc], eax
 80a3f25:  mov eax, DWORD PTR [ebp+0xc]
 80a3f28:  mov DWORD PTR [esp+0x4], eax
 80a3f2c:  mov eax, DWORD PTR [ebp+0x8]
 80a3f2f:  mov DWORD PTR [esp], eax
 80a3f32:  call 80a2040
 80a3f37:  leave
 80a3f38:  ret
 80a3f39:  nop
 80a3f3a:  nop
 80a3f3b:  nop
 80a3f3c:  nop
 80a3f3d:  nop
 80a3f3e:  nop
 80a3f3f:  nop

080a3f40 <str_to_mpn>:
 80a3f40:  push ebp
 80a3f41:  mov ebp, esp
 80a3f43:  push edi
 80a3f44:  mov edi, eax
 80a3f46:  push esi
 80a3f47:  xor esi, esi
 80a3f49:  push ebx
 80a3f4a:  xor ebx, ebx
 80a3f4c:  sub esp, 0x2c
 80a3f4f:  mov eax, DWORD PTR [ebp+0x8]
 80a3f52:  mov DWORD PTR [ebp-0x20], ecx
 80a3f55:  add ecx, 0x4
 80a3f58:  mov DWORD PTR [ebp-0x1c], edx
 80a3f5b:  mov DWORD PTR [ebp-0x10], 0x0
 80a3f62:  mov DWORD PTR [eax], 0x0
 80a3f68:  mov DWORD PTR [ebp-0x24], ecx
 80a3f6b:  jmp 80a3f78
 80a3f6d:  lea esi, [esi]
 80a3f70:  mov eax, DWORD PTR [ebp+0x8]
 80a3f73:  mov eax, DWORD PTR [eax]
 80a3f75:  mov DWORD PTR [ebp-0x10], eax
 80a3f78:  movzx ecx, BYTE PTR [edi]
 80a3f7b:  lea eax, [ecx-0x30]
 80a3f7e:  cmp al, 0x9
 80a3f80:  jbe 80a3f9a
 80a3f82:  mov eax, DWORD PTR [ebp+0x18]
 80a3f85:  test eax, eax
 80a3f87:  je 80a3f94
 80a3f89:  mov edx, DWORD PTR [ebp+0x18]
 80a3f8c:  cmp cl, BYTE PTR [edx]
 80a3f8e:  je 80a4020
 80a3f94:  add edi, DWORD PTR [ebp+0x14]
 80a3f97:  movzx ecx, BYTE PTR [edi]
 80a3f9a:  sub DWORD PTR [ebp-0x1c], 0x1
 80a3f9e:  movsx eax, cl
 80a3fa1:  mov ecx, DWORD PTR [ebp-0x1c]
 80a3fa4:  lea edx, [esi+esi*4]
 80a3fa7:  add edi, 0x1
 80a3faa:  add ebx, 0x1
 80a3fad:  lea esi, [eax+edx*2-0x30]
 80a3fb1:  test ecx, ecx
 80a3fb3:  jle 80a3fe0
 80a3fb5:  cmp ebx, 0x9
 80a3fb8:  jne 80a3f70
 80a3fba:  mov eax, DWORD PTR [ebp-0x10]
 80a3fbd:  test eax, eax
 80a3fbf:  jne 80a4070
 80a3fc5:  mov edx, DWORD PTR [ebp-0x20]
 80a3fc8:  xor bl, bl
 80a3fca:  mov ecx, DWORD PTR [ebp+0x8]
 80a3fcd:  mov DWORD PTR [edx], esi
 80a3fcf:  xor esi, esi
 80a3fd1:  mov DWORD PTR [ecx], 0x1
 80a3fd7:  jmp 80a3f70
 80a3fd9:  lea esi, [esi]
 80a3fe0:  mov edx, DWORD PTR [ebp+0xc]
 80a3fe3:  mov eax, DWORD PTR [edx]
 80a3fe5:  test eax, eax
 80a3fe7:  jle 80a3ff5
 80a3fe9:  lea edx, [ebx+eax]
 80a3fec:  cmp edx, 0x9
 80a3fef:  jle 80a40f0
 80a3ff5:  mov edx, DWORD PTR [ebp-0x10]
 80a3ff8:  mov eax, DWORD PTR [ebx*4+0x80c6da0]
 80a3fff:  test edx, edx
 80a4001:  jne 80a4113
 80a4007:  mov eax, DWORD PTR [ebp-0x20]
 80a400a:  mov edx, DWORD PTR [ebp+0x8]
 80a400d:  mov DWORD PTR [eax], esi
 80a400f:  mov DWORD PTR [edx], 0x1
 80a4015:  add esp, 0x2c
 80a4018:  mov eax, edi
 80a401a:  pop ebx
 80a401b:  pop esi
 80a401c:  pop edi
 80a401d:  pop ebp
 80a401e:  ret
 80a401f:  nop
 80a4020:  movzx edx, BYTE PTR [edx+0x1]
 80a4024:  mov DWORD PTR [ebp-0x28], 0x1
 80a402b:  test dl, dl
 80a402d:  je 80a405f
 80a402f:  cmp dl, BYTE PTR [edi+0x1]
 80a4032:  mov eax, 0x1
 80a4037:  je 80a404e
 80a4039:  jmp 80a3f94
 80a403e:  xchg ax, ax
 80a4040:  cmp dl, BYTE PTR [edi+eax]
 80a4043:  nop
 80a4044:  lea esi, [esi]
 80a4048:  jne 80a3f94
 80a404e:  mov ecx, DWORD PTR [ebp+0x18]
 80a4051:  add eax, 0x1
 80a4054:  mov DWORD PTR [ebp-0x28], eax
 80a4057:  movzx edx, BYTE PTR [ecx+eax]
 80a405b:  test dl, dl
 80a405d:  jne 80a4040
 80a405f:  add edi, DWORD PTR [ebp-0x28]
 80a4062:  movzx ecx, BYTE PTR [edi]
 80a4065:  jmp 80a3f9a
 80a406a:  lea esi, [esi]
 80a4070:  mov DWORD PTR [esp+0xc], 0x3b9aca00
 80a4078:  mov eax, DWORD PTR [ebp-0x10]
 80a407b:  mov DWORD PTR [esp+0x8], eax
 80a407f:  mov edx, DWORD PTR [ebp-0x20]
 80a4082:  mov DWORD PTR [esp+0x4], edx
 80a4086:  mov DWORD PTR [esp], edx
 80a4089:  call 808c5d0
 80a408e:  mov ecx, DWORD PTR [ebp+0x8]
 80a4091:  mov ebx, DWORD PTR [ecx]
 80a4093:  mov ecx, DWORD PTR [ebp-0x24]
 80a4096:  mov DWORD PTR [ebp-0x18], eax
 80a4099:  mov eax, DWORD PTR [ebp-0x20]
 80a409c:  mov edx, DWORD PTR [eax]
 80a409e:  lea eax, [esi+edx]
 80a40a1:  mov esi, DWORD PTR [ebp-0x20]
 80a40a4:  cmp edx, eax
 80a40a6:  mov DWORD PTR [esi], eax
 80a40a8:  jbe 80a40c8
 80a40aa:  lea esi, [esi]
 80a40b0:  sub ebx, 0x1
 80a40b3:  je 80a418b
 80a40b9:  mov eax, DWORD PTR [ecx]
 80a40bb:  add ecx, 0x4
 80a40be:  add eax, 0x1
 80a40c1:  test eax, eax
 80a40c3:  mov DWORD PTR [ecx-0x4], eax
 80a40c6:  je 80a40b0
 80a40c8:  xor eax, eax
 80a40ca:  mov edx, DWORD PTR [ebp-0x18]
 80a40cd:  xor ebx, ebx
 80a40cf:  xor esi, esi
 80a40d1:  add edx, eax
 80a40d3:  je 80a3f70
 80a40d9:  mov ecx, DWORD PTR [ebp+0x8]
 80a40dc:  xor ebx, ebx
 80a40de:  mov esi, DWORD PTR [ebp-0x20]
 80a40e1:  mov eax, DWORD PTR [ecx]
 80a40e3:  mov DWORD PTR [esi+eax*4], edx
 80a40e6:  xor esi, esi
 80a40e8:  add DWORD PTR [ecx], 0x1
 80a40eb:  jmp 80a3f70
 80a40f0:  imul esi, DWORD PTR [eax*4+0x80c6da0]
 80a40f8:  mov eax, DWORD PTR [edx*4+0x80c6da0]
 80a40ff:  mov edx, DWORD PTR [ebp-0x10]
 80a4102:  mov ecx, DWORD PTR [ebp+0xc]
 80a4105:  test edx, edx
 80a4107:  mov DWORD PTR [ecx], 0x0
 80a410d:  je 80a4007
 80a4113:  mov DWORD PTR [esp+0xc], eax
 80a4117:  mov ecx, DWORD PTR [ebp-0x10]
 80a411a:  mov DWORD PTR [esp+0x8], ecx
 80a411e:  mov eax, DWORD PTR [ebp-0x20]
 80a4121:  mov DWORD PTR [esp+0x4], eax
 80a4125:  mov DWORD PTR [esp], eax
 80a4128:  call 808c5d0
 80a412d:  mov edx, DWORD PTR [ebp+0x8]
 80a4130:  mov ecx, DWORD PTR [ebp-0x20]
 80a4133:  mov ebx, DWORD PTR [edx]
 80a4135:  mov edx, DWORD PTR [ecx]
 80a4137:  add ecx, 0x4
 80a413a:  mov DWORD PTR [ebp-0x14], eax
 80a413d:  lea eax, [esi+edx]
 80a4140:  mov esi, DWORD PTR [ebp-0x20]
 80a4143:  cmp edx, eax
 80a4145:  mov DWORD PTR [esi], eax
 80a4147:  jbe 80a4164
 80a4149:  lea esi, [esi]
 80a4150:  sub ebx, 0x1
 80a4153:  je 80a4195
 80a4155:  mov eax, DWORD PTR [ecx]
 80a4157:  add ecx, 0x4
 80a415a:  add eax, 0x1
 80a415d:  test eax, eax
 80a415f:  mov DWORD PTR [ecx-0x4], eax
 80a4162:  je 80a4150
 80a4164:  xor eax, eax
 80a4166:  mov edx, DWORD PTR [ebp-0x14]
 80a4169:  add edx, eax
 80a416b:  je 80a4015
 80a4171:  mov ecx, DWORD PTR [ebp+0x8]
 80a4174:  mov esi, DWORD PTR [ebp-0x20]
 80a4177:  mov eax, DWORD PTR [ecx]
 80a4179:  mov DWORD PTR [esi+eax*4], edx
 80a417c:  add eax, 0x1
 80a417f:  mov DWORD PTR [ecx], eax
 80a4181:  add esp, 0x2c
 80a4184:  mov eax, edi
 80a4186:  pop ebx
 80a4187:  pop esi
 80a4188:  pop edi
 80a4189:  pop ebp
 80a418a:  ret
 80a418b:  mov eax, 0x1
 80a4190:  jmp 80a40ca
 80a4195:  mov eax, 0x1
 80a419a:  jmp 80a4166
 80a419c:  lea esi, [esi]

080a41a0 <round_and_return>:
 80a41a0:  push ebp
 80a41a1:  mov ebp, esp
 80a41a3:  sub esp, 0x2c
 80a41a6:  mov DWORD PTR [ebp-0x4], edi
 80a41a9:  mov edi, eax
 80a41ab:  mov eax, DWORD PTR [ebp+0x8]
 80a41ae:  mov DWORD PTR [ebp-0x10], ecx
 80a41b1:  mov ecx, DWORD PTR [ebp+0x10]
 80a41b4:  cmp edx, 0xfffffc02
 80a41ba:  mov DWORD PTR [ebp-0xc], ebx
 80a41bd:  mov ebx, edx
 80a41bf:  mov DWORD PTR [ebp-0x8], esi
 80a41c2:  mov esi, DWORD PTR [ebp+0xc]
 80a41c5:  mov DWORD PTR [ebp-0x14], eax
 80a41c8:  mov DWORD PTR [ebp-0x18], ecx
 80a41cb:  jge 80a4240
 80a41cd:  mov DWORD PTR [ebp-0x1c], 0xfffffc02
 80a41d4:  sub DWORD PTR [ebp-0x1c], edx
 80a41d7:  cmp DWORD PTR [ebp-0x1c], 0x35
 80a41db:  jg 80a42e8
 80a41e1:  mov eax, 0x1
 80a41e6:  mov ecx, esi
 80a41e8:  shl eax, cl
 80a41ea:  sub eax, 0x1
 80a41ed:  test DWORD PTR [ebp-0x14], eax
 80a41f0:  setne al
 80a41f3:  movzx eax, al
 80a41f6:  or DWORD PTR [ebp-0x18], eax
 80a41f9:  cmp DWORD PTR [ebp-0x1c], 0x35
 80a41fd:  je 80a4330
 80a4203:  cmp DWORD PTR [ebp-0x1c], 0x1f
 80a4207:  jg 80a43a8
 80a420d:  mov eax, DWORD PTR [edi]
 80a420f:  mov ebx, 0xfffffc01
 80a4214:  mov ecx, DWORD PTR [ebp-0x1c]
 80a4217:  mov esi, DWORD PTR [ebp-0x1c]
 80a421a:  mov DWORD PTR [ebp-0x14], eax
 80a421d:  mov DWORD PTR [esp+0xc], ecx
 80a4221:  mov DWORD PTR [esp+0x8], 0x2
 80a4229:  sub esi, 0x1
 80a422c:  mov DWORD PTR [esp+0x4], edi
 80a4230:  mov DWORD PTR [esp], edi
 80a4233:  call 808c220
 80a4238:  mov eax, DWORD PTR [ebp-0x14]
 80a423b:  nop
 80a423c:  lea esi, [esi]
 80a4240:  mov ecx, esi
 80a4242:  shr eax, cl
 80a4244:  test al, 0x1
 80a4246:  jne 80a4270
 80a4248:  cmp ebx, 0x400
 80a424e:  jle 80a42b8
 80a4250:  mov eax, DWORD PTR [ebp-0x10]
 80a4253:  test eax, eax
 80a4255:  jne 80a42d8
 80a425b:  fld DWORD PTR ds:0x80c6d00
 80a4261:  mov ebx, DWORD PTR [ebp-0xc]
 80a4264:  mov esi, DWORD PTR [ebp-0x8]
 80a4267:  mov edi, DWORD PTR [ebp-0x4]
 80a426a:  mov esp, ebp
 80a426c:  pop ebp
 80a426d:  ret
 80a426e:  xchg ax, ax
 80a4270:  mov eax, DWORD PTR [ebp-0x18]
 80a4273:  test eax, eax
 80a4275:  je 80a4308
 80a427b:  mov edx, DWORD PTR [edi]
 80a427d:  lea eax, [edx+0x1]
 80a4280:  cmp edx, eax
 80a4282:  mov DWORD PTR [edi], eax
 80a4284:  lea esi, [edi+0x4]
 80a4287:  jbe 80a4370
 80a428d:  mov eax, DWORD PTR [edi+0x4]
 80a4290:  xor edx, edx
 80a4292:  add eax, 0x1
 80a4295:  test eax, eax
 80a4297:  mov DWORD PTR [edi+0x4], eax
 80a429a:  jne 80a4370
 80a42a0:  cmp ebx, 0xfffffc01
 80a42a6:  jne 80a4248
 80a42a8:  and edx, 0x100000
 80a42ae:  je 80a42b8
 80a42b0:  mov bl, 0x2
 80a42b2:  lea esi, [esi]
 80a42b8:  mov eax, DWORD PTR [ebp-0x10]
 80a42bb:  mov DWORD PTR [ebp+0xc], ebx
 80a42be:  mov esi, DWORD PTR [ebp-0x8]
 80a42c1:  mov DWORD PTR [ebp+0x8], edi
 80a42c4:  mov ebx, DWORD PTR [ebp-0xc]
 80a42c7:  mov edi, DWORD PTR [ebp-0x4]
 80a42ca:  mov DWORD PTR [ebp+0x10], eax
 80a42cd:  mov esp, ebp
 80a42cf:  pop ebp
 80a42d0:  jmp 80a8cd0
 80a42d5:  lea esi, [esi]
 80a42d8:  fld DWORD PTR ds:0x80c6d04
 80a42de:  jmp 80a4261
 80a42e3:  nop
 80a42e4:  lea esi, [esi]
 80a42e8:  mov edx, 0xffffffe8
 80a42ee:  fldz
 80a42f0:  mov eax, gs:0x0
 80a42f6:  mov DWORD PTR [eax+edx], 0x21
 80a42fd:  jmp 80a4261
 80a4302:  lea esi, [esi]
 80a4308:  mov edx, DWORD PTR [edi]
 80a430a:  test dl, 0x1
 80a430d:  jne 80a427d
 80a4313:  mov eax, 0x1
 80a4318:  mov ecx, esi
 80a431a:  shl eax, cl
 80a431c:  sub eax, 0x1
 80a431f:  test DWORD PTR [ebp-0x14], eax
 80a4322:  je 80a4248
 80a4328:  jmp 80a427d
 80a432d:  lea esi, [esi]
 80a4330:  mov eax, DWORD PTR [edi+0x4]
 80a4333:  mov ebx, 0xfffffc01
 80a4338:  mov esi, 0x14
 80a433d:  mov DWORD PTR [edi+0x4], 0x0
 80a4344:  mov DWORD PTR [ebp-0x14], eax
 80a4347:  xor eax, eax
 80a4349:  cmp DWORD PTR [edi], 0x0
 80a434c:  mov DWORD PTR [edi], 0x0
 80a4352:  setne al
 80a4355:  xor edx, edx
 80a4357:  or eax, DWORD PTR [ebp-0x18]
 80a435a:  cmp DWORD PTR [ebp-0x14], 0x0
 80a435e:  setne dl
 80a4361:  mov DWORD PTR [ebp-0x18], edx
 80a4364:  or DWORD PTR [ebp-0x18], eax
 80a4367:  mov eax, DWORD PTR [ebp-0x14]
 80a436a:  jmp 80a4240
 80a436f:  nop
 80a4370:  mov edx, DWORD PTR [esi]
 80a4372:  test edx, 0x200000
 80a4378:  je 80a42a0
 80a437e:  mov DWORD PTR [esp+0xc], 0x1
 80a4386:  add ebx, 0x1
 80a4389:  mov DWORD PTR [esp+0x8], 0x2
 80a4391:  mov DWORD PTR [esp+0x4], edi
 80a4395:  mov DWORD PTR [esp], edi
 80a4398:  call 808c220
 80a439d:  or DWORD PTR [esi], 0x100000
 80a43a3:  jmp 80a4248
 80a43a8:  mov eax, DWORD PTR [ebp-0x1c]
 80a43ab:  sub eax, 0x1
 80a43ae:  mov edx, eax
 80a43b0:  mov esi, eax
 80a43b2:  sar edx, 0x5
 80a43b5:  and esi, 0x1f
 80a43b8:  mov ecx, DWORD PTR [edi+edx*4]
 80a43bb:  sub edx, 0x1
 80a43be:  mov DWORD PTR [ebp-0x14], ecx
 80a43c1:  jne 80a43ce
 80a43c3:  xor eax, eax
 80a43c5:  cmp DWORD PTR [edi], 0x0
 80a43c8:  setne al
 80a43cb:  or DWORD PTR [ebp-0x18], eax
 80a43ce:  mov ecx, esi
 80a43d0:  mov eax, 0x1
 80a43d5:  shl eax, cl
 80a43d7:  mov ebx, 0xfffffc01
 80a43dc:  sub eax, 0x1
 80a43df:  test DWORD PTR [ebp-0x14], eax
 80a43e2:  setne al
 80a43e5:  movzx eax, al
 80a43e8:  or DWORD PTR [ebp-0x18], eax
 80a43eb:  mov eax, DWORD PTR [ebp-0x1c]
 80a43ee:  mov DWORD PTR [esp+0x8], 0x1
 80a43f6:  mov DWORD PTR [esp], edi
 80a43f9:  and eax, 0x1f
 80a43fc:  mov DWORD PTR [esp+0xc], eax
 80a4400:  lea eax, [edi+0x4]
 80a4403:  mov DWORD PTR [esp+0x4], eax
 80a4407:  call 808c220
 80a440c:  mov eax, DWORD PTR [ebp-0x14]
 80a440f:  mov DWORD PTR [edi+0x4], 0x0
 80a4416:  jmp 80a4240
 80a441b:  nop
 80a441c:  lea esi, [esi]

080a4420 <____strtod_l_internal>:
 80a4420:  push ebp
 80a4421:  mov ebp, esp
 80a4423:  push edi
 80a4424:  push esi
 80a4425:  push ebx
 80a4426:  sub esp, 0x240
 80a442c:  mov eax, DWORD PTR [ebp+0x14]
 80a442f:  mov edx, DWORD PTR [eax+0x4]
 80a4432:  mov eax, DWORD PTR [ebp+0x10]
 80a4435:  test eax, eax
 80a4437:  jne 80a6129
 80a443d:  mov DWORD PTR [ebp-0x1c4], 0x0
 80a4447:  mov DWORD PTR [ebp-0x1c0], 0x0
 80a4451:  mov edx, DWORD PTR [edx+0x24]
 80a4454:  mov DWORD PTR [ebp-0x1c8], edx
 80a445a:  mov DWORD PTR [esp], edx
 80a445d:  call 804eea0
 80a4462:  mov edi, DWORD PTR [ebp+0x14]
 80a4465:  mov esi, DWORD PTR [ebp+0x8]
 80a4468:  mov DWORD PTR [ebp-0x14], 0x0
 80a446f:  mov edi, DWORD PTR [edi+0x34]
 80a4472:  sub esi, 0x1
 80a4475:  mov DWORD PTR [ebp-0x1fc], eax
 80a447b:  mov DWORD PTR [ebp-0x20c], edi
 80a4481:  mov edx, edi
 80a4483:  nop
 80a4484:  lea esi, [esi]
 80a4488:  add esi, 0x1
 80a448b:  movzx ebx, BYTE PTR [esi]
 80a448e:  movsx eax, bl
 80a4491:  test BYTE PTR [edx+eax*2+0x1], 0x20
 80a4496:  jne 80a4488
 80a4498:  cmp bl, 0x2d
 80a449b:  je 80a4bc8
 80a44a1:  cmp bl, 0x2b
 80a44a4:  mov DWORD PTR [ebp-0x1e8], 0x0
 80a44ae:  je 80a4670
 80a44b4:  mov ecx, DWORD PTR [ebp-0x1c8]
 80a44ba:  movzx ecx, BYTE PTR [ecx]
 80a44bd:  mov BYTE PTR [ebp-0x169], cl
 80a44c3:  xor ecx, ecx
 80a44c5:  cmp BYTE PTR [ebp-0x169], 0x0
 80a44cc:  je 80a44fd
 80a44ce:  xor eax, eax
 80a44d0:  cmp BYTE PTR [ebp-0x169], bl
 80a44d6:  je 80a44ea
 80a44d8:  jmp 80a4510
 80a44da:  lea esi, [esi]
 80a44e0:  cmp dl, BYTE PTR [esi+eax]
 80a44e3:  nop
 80a44e4:  lea esi, [esi]
 80a44e8:  jne 80a4510
 80a44ea:  mov edi, DWORD PTR [ebp-0x1c8]
 80a44f0:  add eax, 0x1
 80a44f3:  mov ecx, eax
 80a44f5:  movzx edx, BYTE PTR [edi+eax]
 80a44f9:  test dl, dl
 80a44fb:  jne 80a44e0
 80a44fd:  movzx eax, BYTE PTR [esi+ecx]
 80a4501:  cmp al, 0x2f
 80a4503:  jle 80a4510
 80a4505:  cmp al, 0x39
 80a4507:  jle 80a4560
 80a4509:  lea esi, [esi]
 80a4510:  lea eax, [ebx-0x30]
 80a4513:  cmp al, 0x9
 80a4515:  jbe 80a4560
 80a4517:  mov eax, ds:0x80b0418
 80a451c:  movsx edx, bl
 80a451f:  movzx eax, BYTE PTR [eax+edx*4]
 80a4523:  cmp al, 0x69
 80a4525:  je 80a55b1
 80a452b:  cmp al, 0x6e
 80a452d:  je 80a562d
 80a4533:  mov ebx, DWORD PTR [ebp+0xc]
 80a4536:  test ebx, ebx
 80a4538:  je 80a465e
 80a453e:  mov ecx, DWORD PTR [ebp+0x8]
 80a4541:  fldz
 80a4543:  mov edx, DWORD PTR [ebp+0xc]
 80a4546:  mov DWORD PTR [edx], ecx
 80a4548:  jmp 80a4550
 80a454a:  fstp st(1)
 80a454c:  lea esi, [esi]
 80a4550:  add esp, 0x240
 80a4556:  pop ebx
 80a4557:  pop esi
 80a4558:  pop edi
 80a4559:  pop ebp
 80a455a:  ret
 80a455b:  nop
 80a455c:  lea esi, [esi]
 80a4560:  cmp bl, 0x30
 80a4563:  je 80a4cd8
 80a4569:  mov edi, DWORD PTR [ebp+0x14]
 80a456c:  mov DWORD PTR [ebp-0x1e4], 0xa
 80a4576:  mov BYTE PTR [ebp-0x179], 0x1
 80a457d:  mov BYTE PTR [ebp-0x1ed], 0x0
 80a4584:  mov edi, DWORD PTR [edi+0x38]
 80a4587:  mov DWORD PTR [ebp-0x210], edi
 80a458d:  mov ecx, DWORD PTR [ebp-0x1c4]
 80a4593:  test ecx, ecx
 80a4595:  jne 80a6270
 80a459b:  cmp bl, 0x30
 80a459e:  mov DWORD PTR [ebp-0x168], esi
 80a45a4:  jne 80a45bd
 80a45a6:  xchg ax, ax
 80a45a8:  add DWORD PTR [ebp-0x168], 0x1
 80a45af:  mov ecx, DWORD PTR [ebp-0x168]
 80a45b5:  movzx ebx, BYTE PTR [ecx]
 80a45b8:  cmp bl, 0x30
 80a45bb:  je 80a45a8
 80a45bd:  mov edi, DWORD PTR [ebp-0x210]
 80a45c3:  lea eax, [ebx-0x30]
 80a45c6:  movsx ecx, bl
 80a45c9:  cmp al, 0x9
 80a45cb:  mov edx, DWORD PTR [edi+ecx*4]
 80a45ce:  jbe 80a46b8
 80a45d4:  cmp dl, 0x60
 80a45d7:  mov ecx, edx
 80a45d9:  jg 80a4d28
 80a45df:  cmp BYTE PTR [ebp-0x169], 0x0
 80a45e6:  je 80a46a8
 80a45ec:  xor eax, eax
 80a45ee:  cmp BYTE PTR [ebp-0x169], bl
 80a45f4:  je 80a4697
 80a45fa:  cmp BYTE PTR [ebp-0x179], 0x0
 80a4601:  je 80a5dfc
 80a4607:  cmp cl, 0x65
 80a460a:  je 80a5dc3
 80a4610:  mov ecx, DWORD PTR [ebp-0x1c0]
 80a4616:  mov DWORD PTR [esp+0xc], ecx
 80a461a:  mov ebx, DWORD PTR [ebp-0x1c4]
 80a4620:  mov DWORD PTR [esp+0x8], ebx
 80a4624:  mov edi, DWORD PTR [ebp-0x168]
 80a462a:  mov DWORD PTR [esp], esi
 80a462d:  mov DWORD PTR [esp+0x4], edi
 80a4631:  call 80574b0
 80a4636:  mov edx, DWORD PTR [ebp+0xc]
 80a4639:  test edx, edx
 80a463b:  je 80a4650
 80a463d:  cmp esi, eax
 80a463f:  je 80a63c1
 80a4645:  mov edx, DWORD PTR [ebp+0xc]
 80a4648:  mov DWORD PTR [edx], eax
 80a464a:  lea esi, [esi]
 80a4650:  mov eax, DWORD PTR [ebp-0x1e8]
 80a4656:  test eax, eax
 80a4658:  jne 80a4d18
 80a465e:  add esp, 0x240
 80a4664:  fldz
 80a4666:  pop ebx
 80a4667:  pop esi
 80a4668:  pop edi
 80a4669:  pop ebp
 80a466a:  ret
 80a466b:  nop
 80a466c:  lea esi, [esi]
 80a4670:  add esi, 0x1
 80a4673:  movzx ebx, BYTE PTR [esi]
 80a4676:  mov DWORD PTR [ebp-0x1e8], 0x0
 80a4680:  jmp 80a44b4
 80a4685:  lea esi, [esi]
 80a4688:  mov edi, DWORD PTR [ebp-0x168]
 80a468e:  cmp dl, BYTE PTR [edi+eax]
 80a4691:  jne 80a45fa
 80a4697:  mov edi, DWORD PTR [ebp-0x1c8]
 80a469d:  add eax, 0x1
 80a46a0:  movzx edx, BYTE PTR [edi+eax]
 80a46a4:  test dl, dl
 80a46a6:  jne 80a4688
 80a46a8:  cmp esi, DWORD PTR [ebp-0x168]
 80a46ae:  je 80a599e
 80a46b4:  lea esi, [esi]
 80a46b8:  mov edi, DWORD PTR [ebp-0x168]
 80a46be:  mov DWORD PTR [ebp-0x1d4], 0x0
 80a46c8:  lea eax, [ebx-0x30]
 80a46cb:  cmp al, 0x9
 80a46cd:  jbe 80a47b0
 80a46d3:  cmp DWORD PTR [ebp-0x1e4], 0x10
 80a46da:  je 80a4798
 80a46e0:  mov eax, DWORD PTR [ebp-0x1c4]
 80a46e6:  test eax, eax
 80a46e8:  jne 80a6375
 80a46ee:  mov eax, DWORD PTR [ebp-0x1c0]
 80a46f4:  test eax, eax
 80a46f6:  je 80a47e0
 80a46fc:  cmp esi, edi
 80a46fe:  jae 80a47e0
 80a4704:  mov eax, DWORD PTR [ebp-0x1c0]
 80a470a:  mov DWORD PTR [esp+0xc], eax
 80a470e:  mov edx, DWORD PTR [ebp-0x1c4]
 80a4714:  mov DWORD PTR [esp+0x4], edi
 80a4718:  mov DWORD PTR [esp], esi
 80a471b:  mov DWORD PTR [esp+0x8], edx
 80a471f:  call 80574b0
 80a4724:  cmp edi, eax
 80a4726:  mov ecx, eax
 80a4728:  je 80a47c2
 80a472e:  cmp esi, eax
 80a4730:  je 80a5e20
 80a4736:  cmp DWORD PTR [ebp-0x168], eax
 80a473c:  ja 80a5693
 80a4742:  mov edx, DWORD PTR [ebp-0x168]
 80a4748:  mov DWORD PTR [ebp-0x15c], 0x0
 80a4752:  jae 80a62db
 80a4758:  movzx eax, BYTE PTR [edx]
 80a475b:  mov ebx, DWORD PTR [ebp-0x15c]
 80a4761:  sub eax, 0x30
 80a4764:  add ebx, 0x1
 80a4767:  cmp al, 0x9
 80a4769:  ja 80a4771
 80a476b:  mov DWORD PTR [ebp-0x15c], ebx
 80a4771:  add edx, 0x1
 80a4774:  cmp ecx, edx
 80a4776:  ja 80a4758
 80a4778:  mov edi, ecx
 80a477a:  mov ecx, DWORD PTR [ebp-0x15c]
 80a4780:  mov DWORD PTR [ebp-0x1cc], 0x0
 80a478a:  mov DWORD PTR [ebp-0x1d0], ecx
 80a4790:  jmp 80a48f0
 80a4795:  lea esi, [esi]
 80a4798:  mov edx, DWORD PTR [ebp-0x210]
 80a479e:  movsx ecx, bl
 80a47a1:  mov eax, DWORD PTR [edx+ecx*4]
 80a47a4:  sub eax, 0x61
 80a47a7:  cmp al, 0x5
 80a47a9:  ja 80a46e0
 80a47af:  nop
 80a47b0:  add DWORD PTR [ebp-0x1d4], 0x1
 80a47b7:  add edi, 0x1
 80a47ba:  movzx ebx, BYTE PTR [edi]
 80a47bd:  jmp 80a46c8
 80a47c2:  mov ecx, DWORD PTR [ebp-0x1c8]
 80a47c8:  mov esi, DWORD PTR [ebp+0x14]
 80a47cb:  movzx ecx, BYTE PTR [ecx]
 80a47ce:  mov esi, DWORD PTR [esi+0x38]
 80a47d1:  mov BYTE PTR [ebp-0x169], cl
 80a47d7:  mov DWORD PTR [ebp-0x210], esi
 80a47dd:  lea esi, [esi]
 80a47e0:  cmp DWORD PTR [ebp-0x1d4], 0x1
 80a47e7:  sbb esi, esi
 80a47e9:  cmp BYTE PTR [ebp-0x169], 0x0
 80a47f0:  mov DWORD PTR [ebp-0x1cc], esi
 80a47f6:  je 80a483a
 80a47f8:  mov eax, DWORD PTR [ebp-0x1d4]
 80a47fe:  xor edx, edx
 80a4800:  movsx ecx, bl
 80a4803:  mov DWORD PTR [ebp-0x15c], eax
 80a4809:  movzx eax, BYTE PTR [ebp-0x169]
 80a4810:  cmp al, BYTE PTR [edi]
 80a4812:  je 80a4829
 80a4814:  jmp 80a48a2
 80a4819:  lea esi, [esi]
 80a4820:  cmp al, BYTE PTR [edi+edx]
 80a4823:  jne 80a4f40
 80a4829:  mov ecx, DWORD PTR [ebp-0x1c8]
 80a482f:  add edx, 0x1
 80a4832:  movzx eax, BYTE PTR [ecx+edx]
 80a4836:  test al, al
 80a4838:  jne 80a4820
 80a483a:  mov esi, DWORD PTR [ebp-0x1d4]
 80a4840:  xor edx, edx
 80a4842:  add edi, DWORD PTR [ebp-0x1fc]
 80a4848:  cmp DWORD PTR [ebp-0x1e4], 0x10
 80a484f:  movzx ebx, BYTE PTR [edi]
 80a4852:  mov DWORD PTR [ebp-0x15c], esi
 80a4858:  je 80a4888
 80a485a:  jmp 80a4cb8
 80a485f:  nop
 80a4860:  cmp bl, 0x30
 80a4863:  je 80a4878
 80a4865:  cmp DWORD PTR [ebp-0x1cc], 0xff
 80a486c:  lea esi, [esi]
 80a4870:  jne 80a4878
 80a4872:  mov DWORD PTR [ebp-0x1cc], edx
 80a4878:  add DWORD PTR [ebp-0x15c], 0x1
 80a487f:  add edi, 0x1
 80a4882:  movzx ebx, BYTE PTR [edi]
 80a4885:  add edx, 0x1
 80a4888:  lea eax, [ebx-0x30]
 80a488b:  cmp al, 0x9
 80a488d:  jbe 80a4860
 80a488f:  mov esi, DWORD PTR [ebp-0x210]
 80a4895:  movsx ecx, bl
 80a4898:  mov eax, DWORD PTR [esi+ecx*4]
 80a489b:  sub eax, 0x61
 80a489e:  cmp al, 0x5
 80a48a0:  jbe 80a4860
 80a48a2:  mov edx, DWORD PTR [ebp-0x210]
 80a48a8:  movzx eax, BYTE PTR [edx+ecx*4]
 80a48ac:  cmp al, 0x70
 80a48ae:  je 80a52f1
 80a48b4:  cmp al, 0x65
 80a48b6:  je 80a4e68
 80a48bc:  mov eax, edi
 80a48be:  mov ebx, DWORD PTR [ebp-0x15c]
 80a48c4:  cmp DWORD PTR [ebp-0x1d4], ebx
 80a48ca:  jl 80a4be0
 80a48d0:  mov esi, DWORD PTR [ebp-0x15c]
 80a48d6:  mov edx, eax
 80a48d8:  cmp DWORD PTR [ebp-0x1d4], esi
 80a48de:  je 80a4c14
 80a48e4:  mov esi, DWORD PTR [ebp-0x1d4]
 80a48ea:  mov DWORD PTR [ebp-0x1d0], esi
 80a48f0:  mov esi, DWORD PTR [ebp+0xc]
 80a48f3:  test esi, esi
 80a48f5:  je 80a48fc
 80a48f7:  mov eax, DWORD PTR [ebp+0xc]
 80a48fa:  mov DWORD PTR [eax], edi
 80a48fc:  mov ebx, DWORD PTR [ebp-0x15c]
 80a4902:  test ebx, ebx
 80a4904:  je 80a4650
 80a490a:  mov ecx, DWORD PTR [ebp-0x1cc]
 80a4910:  mov edx, DWORD PTR [ebp-0x168]
 80a4916:  test ecx, ecx
 80a4918:  mov DWORD PTR [ebp-0x1d8], edx
 80a491e:  je 80a49f6
 80a4924:  mov ecx, DWORD PTR [ebp-0x1c8]
 80a492a:  movzx ebx, BYTE PTR [edx]
 80a492d:  movzx edi, BYTE PTR [ecx]
 80a4930:  mov BYTE PTR [ebp-0x231], bl
 80a4936:  movzx eax, BYTE PTR [ecx+0x1]
 80a493a:  mov ecx, DWORD PTR [ebp-0x168]
 80a4940:  mov BYTE PTR [ebp-0x232], al
 80a4946:  xchg ax, ax
 80a4948:  add ecx, 0x1
 80a494b:  mov edx, edi
 80a494d:  cmp dl, BYTE PTR [ebp-0x231]
 80a4953:  lea ebx, [ecx-0x1]
 80a4956:  je 80a4971
 80a4958:  movzx eax, BYTE PTR [ecx]
 80a495b:  mov edx, edi
 80a495d:  add ecx, 0x1
 80a4960:  lea ebx, [ecx-0x1]
 80a4963:  mov BYTE PTR [ebp-0x231], al
 80a4969:  cmp dl, BYTE PTR [ebp-0x231]
 80a496f:  jne 80a4958
 80a4971:  cmp BYTE PTR [ebp-0x232], 0x0
 80a4978:  je 80a49ba
 80a497a:  movzx eax, BYTE PTR [ecx]
 80a497d:  mov BYTE PTR [ebp-0x231], al
 80a4983:  movzx edx, BYTE PTR [ebp-0x231]
 80a498a:  mov eax, 0x1
 80a498f:  cmp BYTE PTR [ebp-0x232], dl
 80a4995:  je 80a49a9
 80a4997:  jmp 80a4948
 80a4999:  lea esi, [esi]
 80a49a0:  cmp dl, BYTE PTR [ebx+eax]
 80a49a3:  jne 80a4f28
 80a49a9:  mov esi, DWORD PTR [ebp-0x1c8]
 80a49af:  add eax, 0x1
 80a49b2:  movzx edx, BYTE PTR [esi+eax]
 80a49b6:  test dl, dl
 80a49b8:  jne 80a49a0
 80a49ba:  cmp DWORD PTR [ebp-0x1e4], 0x10
 80a49c1:  mov edx, DWORD PTR [ebp-0x14]
 80a49c4:  mov ecx, DWORD PTR [ebp-0x1cc]
 80a49ca:  je 80a5cb2
 80a49d0:  sub edx, ecx
 80a49d2:  mov eax, DWORD PTR [ebp-0x1cc]
 80a49d8:  add eax, DWORD PTR [ebp-0x1fc]
 80a49de:  mov DWORD PTR [ebp-0x14], edx
 80a49e1:  mov edx, DWORD PTR [ebp-0x1cc]
 80a49e7:  sub DWORD PTR [ebp-0x15c], edx
 80a49ed:  lea eax, [ebx+eax]
 80a49f0:  mov DWORD PTR [ebp-0x1d8], eax
 80a49f6:  cmp DWORD PTR [ebp-0x1e4], 0x10
 80a49fd:  je 80a4d45
 80a4a03:  mov edx, DWORD PTR [ebp-0x14]
 80a4a06:  test edx, edx
 80a4a08:  js 80a4f0d
 80a4a0e:  mov eax, DWORD PTR [ebp-0x15c]
 80a4a14:  sub eax, DWORD PTR [ebp-0x1d0]
 80a4a1a:  cmp eax, edx
 80a4a1c:  jg 80a4f1d
 80a4a22:  mov edi, DWORD PTR [ebp-0x1d0]
 80a4a28:  sub edx, eax
 80a4a2a:  add edi, eax
 80a4a2c:  lea eax, [edx+edi]
 80a4a2f:  cmp eax, 0x135
 80a4a34:  mov DWORD PTR [ebp-0x158], edi
 80a4a3a:  jg 80a5f50
 80a4a40:  cmp edx, 0xfffffebd
 80a4a46:  jl 80a64b8
 80a4a4c:  mov eax, DWORD PTR [ebp-0x158]
 80a4a52:  mov DWORD PTR [ebp-0x14], edx
 80a4a55:  test eax, eax
 80a4a57:  jg 80a5327
 80a4a5d:  lea ecx, [ebp-0x20]
 80a4a60:  mov edx, 0x12
 80a4a65:  lea ebx, [ebp-0xb8]
 80a4a6b:  mov eax, 0x14
 80a4a70:  lea esi, [ebp-0x14]
 80a4a73:  lea edi, [ebp-0x10]
 80a4a76:  mov DWORD PTR [ebp-0x1dc], 0x0
 80a4a80:  mov DWORD PTR [ebp-0x214], ecx
 80a4a86:  mov DWORD PTR [ebp-0x208], ebx
 80a4a8c:  mov DWORD PTR [ebp-0x218], esi
 80a4a92:  mov DWORD PTR [ebp-0x21c], edi
 80a4a98:  mov ecx, DWORD PTR [ebp-0x15c]
 80a4a9e:  sub ecx, DWORD PTR [ebp-0x158]
 80a4aa4:  mov DWORD PTR [ebp-0x160], 0x0
 80a4aae:  mov BYTE PTR [ebp-0x171], 0x0
 80a4ab5:  cmp eax, ecx
 80a4ab7:  mov DWORD PTR [ebp-0x178], ecx
 80a4abd:  jl 80a56ef
 80a4ac3:  mov ebx, DWORD PTR [ebp-0x178]
 80a4ac9:  lea edi, [ebp-0x150]
 80a4acf:  mov esi, 0x1
 80a4ad4:  mov eax, DWORD PTR [ebp-0x208]
 80a4ada:  sub ebx, DWORD PTR [ebp-0x14]
 80a4add:  mov DWORD PTR [ebp-0x220], edi
 80a4ae3:  mov DWORD PTR [ebp-0x1a0], edi
 80a4ae9:  mov edi, 0x80c4aa0
 80a4aee:  mov DWORD PTR [ebp-0x1a4], ebx
 80a4af4:  mov DWORD PTR [ebp-0x1e0], 0x0
 80a4afe:  mov DWORD PTR [ebp-0x19c], eax
 80a4b04:  jmp 80a4b4b
 80a4b06:  xchg ax, ax
 80a4b08:  mov eax, DWORD PTR [edi+0x4]
 80a4b0b:  sub eax, 0x2
 80a4b0e:  mov DWORD PTR [ebp-0x1e0], eax
 80a4b14:  mov edx, eax
 80a4b16:  mov eax, DWORD PTR [edi]
 80a4b18:  shl edx, 0x2
 80a4b1b:  mov DWORD PTR [esp+0x8], edx
 80a4b1f:  lea eax, [eax*4+0x80c3cc8]
 80a4b26:  mov DWORD PTR [esp+0x4], eax
 80a4b2a:  mov edx, DWORD PTR [ebp-0x1a0]
 80a4b30:  mov DWORD PTR [esp], edx
 80a4b33:  call 804efc0
 80a4b38:  mov eax, DWORD PTR [ebp-0x1a4]
 80a4b3e:  test eax, eax
 80a4b40:  je 80a4f54
 80a4b46:  add esi, esi
 80a4b48:  add edi, 0x10
 80a4b4b:  test DWORD PTR [ebp-0x1a4], esi
 80a4b51:  je 80a4b38
 80a4b53:  mov eax, DWORD PTR [ebp-0x1e0]
 80a4b59:  xor DWORD PTR [ebp-0x1a4], esi
 80a4b5f:  test eax, eax
 80a4b61:  je 80a4b08
 80a4b63:  mov ecx, DWORD PTR [ebp-0x1e0]
 80a4b69:  mov ebx, DWORD PTR [edi+0x4]
 80a4b6c:  mov DWORD PTR [esp+0x10], ecx
 80a4b70:  mov eax, DWORD PTR [ebp-0x1a0]
 80a4b76:  sub ebx, 0x2
 80a4b79:  mov DWORD PTR [esp+0x8], ebx
 80a4b7d:  mov DWORD PTR [esp+0xc], eax
 80a4b81:  mov eax, DWORD PTR [edi]
 80a4b83:  lea eax, [eax*4+0x80c3cc8]
 80a4b8a:  mov DWORD PTR [esp+0x4], eax
 80a4b8e:  mov edx, DWORD PTR [ebp-0x19c]
 80a4b94:  mov DWORD PTR [esp], edx
 80a4b97:  call 808c280
 80a4b9c:  add DWORD PTR [ebp-0x1e0], ebx
 80a4ba2:  test eax, eax
 80a4ba4:  je 80a5303
 80a4baa:  mov eax, DWORD PTR [ebp-0x19c]
 80a4bb0:  mov ecx, DWORD PTR [ebp-0x1a0]
 80a4bb6:  mov DWORD PTR [ebp-0x1a0], eax
 80a4bbc:  mov DWORD PTR [ebp-0x19c], ecx
 80a4bc2:  jmp 80a4b38
 80a4bc7:  nop
 80a4bc8:  add esi, 0x1
 80a4bcb:  movzx ebx, BYTE PTR [esi]
 80a4bce:  mov DWORD PTR [ebp-0x1e8], 0x1
 80a4bd8:  jmp 80a44b4
 80a4bdd:  lea esi, [esi]
 80a4be0:  cmp BYTE PTR [eax-0x1], 0x30
 80a4be4:  lea edx, [eax-0x1]
 80a4be7:  je 80a4bf2
 80a4be9:  jmp 80a48d0
 80a4bee:  xchg ax, ax
 80a4bf0:  mov edx, eax
 80a4bf2:  sub DWORD PTR [ebp-0x15c], 0x1
 80a4bf9:  cmp BYTE PTR [edx-0x1], 0x30
 80a4bfd:  lea eax, [edx-0x1]
 80a4c00:  je 80a4bf0
 80a4c02:  mov esi, DWORD PTR [ebp-0x15c]
 80a4c08:  cmp DWORD PTR [ebp-0x1d4], esi
 80a4c0e:  jne 80a48e4
 80a4c14:  test esi, esi
 80a4c16:  jle 80a48e4
 80a4c1c:  mov eax, DWORD PTR [ebp-0x14]
 80a4c1f:  test eax, eax
 80a4c21:  jns 80a48e4
 80a4c27:  cmp BYTE PTR [ebp-0x1ed], 0x0
 80a4c2e:  mov DWORD PTR [ebp-0x1d0], esi
 80a4c34:  jne 80a5930
 80a4c3a:  lea esi, [esi]
 80a4c40:  sub edx, 0x1
 80a4c43:  movzx ecx, BYTE PTR [edx]
 80a4c46:  movsx eax, cl
 80a4c49:  sub eax, 0x30
 80a4c4c:  cmp eax, 0x9
 80a4c4f:  ja 80a4c40
 80a4c51:  cmp cl, 0x30
 80a4c54:  jne 80a48f0
 80a4c5a:  sub DWORD PTR [ebp-0x15c], 0x1
 80a4c61:  mov eax, DWORD PTR [ebp-0x14]
 80a4c64:  mov ebx, DWORD PTR [ebp-0x15c]
 80a4c6a:  sub DWORD PTR [ebp-0x1d0], 0x1
 80a4c71:  add eax, 0x1
 80a4c74:  test ebx, ebx
 80a4c76:  mov DWORD PTR [ebp-0x14], eax
 80a4c79:  jle 80a48f0
 80a4c7f:  test eax, eax
 80a4c81:  jns 80a48f0
 80a4c87:  jmp 80a4c40
 80a4c89:  cmp bl, 0x30
 80a4c8c:  lea esi, [esi]
 80a4c90:  je 80a4ca8
 80a4c92:  cmp DWORD PTR [ebp-0x1cc], 0xff
 80a4c99:  lea esi, [esi]
 80a4ca0:  jne 80a4ca8
 80a4ca2:  mov DWORD PTR [ebp-0x1cc], edx
 80a4ca8:  add DWORD PTR [ebp-0x15c], 0x1
 80a4caf:  add edi, 0x1
 80a4cb2:  movzx ebx, BYTE PTR [edi]
 80a4cb5:  add edx, 0x1
 80a4cb8:  lea eax, [ebx-0x30]
 80a4cbb:  cmp al, 0x9
 80a4cbd:  jbe 80a4c89
 80a4cbf:  mov edx, DWORD PTR [ebp-0x210]
 80a4cc5:  movsx eax, bl
 80a4cc8:  mov BYTE PTR [ebp-0x1ed], 0x0
 80a4ccf:  movzx eax, BYTE PTR [edx+eax*4]
 80a4cd3:  jmp 80a48b4
 80a4cd8:  mov eax, DWORD PTR [ebp+0x14]
 80a4cdb:  mov eax, DWORD PTR [eax+0x38]
 80a4cde:  mov DWORD PTR [ebp-0x210], eax
 80a4ce4:  movsx eax, BYTE PTR [esi+0x1]
 80a4ce8:  mov edx, DWORD PTR [ebp-0x210]
 80a4cee:  cmp DWORD PTR [edx+eax*4], 0x78
 80a4cf2:  je 80a56a8
 80a4cf8:  mov DWORD PTR [ebp-0x1e4], 0xa
 80a4d02:  mov BYTE PTR [ebp-0x179], 0x1
 80a4d09:  mov BYTE PTR [ebp-0x1ed], 0x0
 80a4d10:  jmp 80a458d
 80a4d15:  lea esi, [esi]
 80a4d18:  fldz
 80a4d1a:  add esp, 0x240
 80a4d20:  fchs
 80a4d22:  pop ebx
 80a4d23:  pop esi
 80a4d24:  pop edi
 80a4d25:  pop ebp
 80a4d26:  ret
 80a4d27:  nop
 80a4d28:  cmp BYTE PTR [ebp-0x179], 0x0
 80a4d2f:  jne 80a45df
 80a4d35:  cmp dl, 0x66
 80a4d38:  jle 80a46b8
 80a4d3e:  xchg ax, ax
 80a4d40:  jmp 80a45df
 80a4d45:  mov ecx, DWORD PTR [ebp+0x14]
 80a4d48:  mov ebx, DWORD PTR [ebp-0x1d8]
 80a4d4e:  mov ecx, DWORD PTR [ecx+0x34]
 80a4d51:  mov DWORD PTR [ebp-0x20c], ecx
 80a4d57:  movzx eax, BYTE PTR [ebx]
 80a4d5a:  movsx edx, al
 80a4d5d:  test BYTE PTR [ecx+edx*2+0x1], 0x10
 80a4d62:  jne 80a4d88
 80a4d64:  lea esi, [esi]
 80a4d68:  add DWORD PTR [ebp-0x1d8], 0x1
 80a4d6f:  mov esi, DWORD PTR [ebp-0x1d8]
 80a4d75:  mov edi, DWORD PTR [ebp-0x20c]
 80a4d7b:  movzx eax, BYTE PTR [esi]
 80a4d7e:  movsx edx, al
 80a4d81:  test BYTE PTR [edi+edx*2+0x1], 0x10
 80a4d86:  je 80a4d68
 80a4d88:  cmp al, 0x30
 80a4d8a:  jne 80a4da7
 80a4d8c:  lea esi, [esi]
 80a4d90:  add DWORD PTR [ebp-0x1d8], 0x1
 80a4d97:  mov edx, DWORD PTR [ebp-0x1d8]
 80a4d9d:  movzx eax, BYTE PTR [edx]
 80a4da0:  cmp al, 0x30
 80a4da2:  je 80a4d90
 80a4da4:  movsx edx, al
 80a4da7:  lea eax, [edx-0x30]
 80a4daa:  cmp eax, 0x9
 80a4dad:  jbe 80a57d0
 80a4db3:  mov esi, DWORD PTR [ebp+0x14]
 80a4db6:  mov ebx, DWORD PTR [ebp-0x1d8]
 80a4dbc:  mov eax, DWORD PTR [esi+0x38]
 80a4dbf:  add ebx, 0x1
 80a4dc2:  mov DWORD PTR [ebp-0x164], ebx
 80a4dc8:  mov eax, DWORD PTR [eax+edx*4]
 80a4dcb:  sub eax, 0x57
 80a4dce:  mov edx, DWORD PTR [eax*4+0x80c6d20]
 80a4dd5:  mov esi, 0x14
 80a4dda:  mov edi, DWORD PTR [ebp-0x1d0]
 80a4de0:  sub esi, edx
 80a4de2:  lea ecx, [esi+0x1]
 80a4de5:  shl eax, cl
 80a4de7:  mov DWORD PTR [ebp-0x1c], eax
 80a4dea:  mov eax, DWORD PTR [ebp-0x14]
 80a4ded:  lea eax, [eax+edi*4-0x5]
 80a4df1:  mov edi, 0x1
 80a4df6:  lea edx, [eax+edx]
 80a4df9:  mov DWORD PTR [ebp-0x14], edx
 80a4dfc:  lea esi, [esi]
 80a4e00:  sub DWORD PTR [ebp-0x15c], 0x1
 80a4e07:  mov eax, DWORD PTR [ebp-0x15c]
 80a4e0d:  test eax, eax
 80a4e0f:  jle 80a5ba8
 80a4e15:  mov eax, DWORD PTR [ebp-0x164]
 80a4e1b:  mov ebx, DWORD PTR [ebp-0x20c]
 80a4e21:  movsx ecx, BYTE PTR [eax]
 80a4e24:  test BYTE PTR [ebx+ecx*2+0x1], 0x10
 80a4e29:  jne 80a4e3c
 80a4e2b:  mov ecx, DWORD PTR [ebp-0x1fc]
 80a4e31:  add eax, ecx
 80a4e33:  mov DWORD PTR [ebp-0x164], eax
 80a4e39:  movsx ecx, BYTE PTR [eax]
 80a4e3c:  lea eax, [ecx-0x30]
 80a4e3f:  cmp eax, 0x9
 80a4e42:  ja 80a5a50
 80a4e48:  add DWORD PTR [ebp-0x164], 0x1
 80a4e4f:  mov ebx, eax
 80a4e51:  cmp esi, 0x2
 80a4e54:  jle 80a5a20
 80a4e5a:  lea ecx, [esi-0x3]
 80a4e5d:  sub esi, 0x4
 80a4e60:  shl ebx, cl
 80a4e62:  or DWORD PTR [ebp+edi*4-0x20], ebx
 80a4e66:  jmp 80a4e00
 80a4e68:  cmp BYTE PTR [ebp-0x179], 0x0
 80a4e6f:  je 80a48bc
 80a4e75:  movzx ecx, BYTE PTR [edi+0x1]
 80a4e79:  lea ebx, [edi+0x1]
 80a4e7c:  cmp cl, 0x2d
 80a4e7f:  je 80a52db
 80a4e85:  cmp cl, 0x2b
 80a4e88:  mov DWORD PTR [ebp-0x1bc], 0x0
 80a4e92:  je 80a567d
 80a4e98:  lea eax, [ecx-0x30]
 80a4e9b:  cmp al, 0x9
 80a4e9d:  ja 80a48bc
 80a4ea3:  cmp BYTE PTR [ebp-0x1ed], 0x0
 80a4eaa:  jne 80a5c7f
 80a4eb0:  mov edx, DWORD PTR [ebp-0x1bc]
 80a4eb6:  test edx, edx
 80a4eb8:  je 80a56d5
 80a4ebe:  mov esi, DWORD PTR [ebp-0x1d4]
 80a4ec4:  add esi, 0x168
 80a4eca:  lea esi, [esi]
 80a4ed0:  mov eax, DWORD PTR [ebp-0x14]
 80a4ed3:  movsx edx, cl
 80a4ed6:  lea eax, [eax+eax*4]
 80a4ed9:  lea edx, [edx+eax*2-0x30]
 80a4edd:  cmp edx, esi
 80a4edf:  mov DWORD PTR [ebp-0x14], edx
 80a4ee2:  jg 80a60c1
 80a4ee8:  add ebx, 0x1
 80a4eeb:  movzx ecx, BYTE PTR [ebx]
 80a4eee:  lea eax, [ecx-0x30]
 80a4ef1:  cmp al, 0x9
 80a4ef3:  jbe 80a4ed0
 80a4ef5:  mov eax, DWORD PTR [ebp-0x1bc]
 80a4efb:  test eax, eax
 80a4efd:  je 80a4f04
 80a4eff:  neg edx
 80a4f01:  mov DWORD PTR [ebp-0x14], edx
 80a4f04:  mov eax, edi
 80a4f06:  mov edi, ebx
 80a4f08:  jmp 80a48be
 80a4f0d:  mov eax, DWORD PTR [ebp-0x1d0]
 80a4f13:  neg eax
 80a4f15:  cmp eax, edx
 80a4f17:  jge 80a4a22
 80a4f1d:  mov eax, edx
 80a4f1f:  jmp 80a4a22
 80a4f24:  lea esi, [esi]
 80a4f28:  movzx ebx, BYTE PTR [ebp-0x232]
 80a4f2f:  mov BYTE PTR [ebp-0x231], bl
 80a4f35:  jmp 80a4948
 80a4f3a:  lea esi, [esi]
 80a4f40:  mov edx, DWORD PTR [ebp-0x1d4]
 80a4f46:  movsx ecx, bl
 80a4f49:  mov DWORD PTR [ebp-0x15c], edx
 80a4f4f:  jmp 80a48a2
 80a4f54:  mov esi, DWORD PTR [ebp-0x208]
 80a4f5a:  cmp DWORD PTR [ebp-0x1a0], esi
 80a4f60:  je 80a6231
 80a4f66:  mov eax, DWORD PTR [ebp-0x1c4]
 80a4f6c:  mov DWORD PTR [esp+0x10], eax
 80a4f70:  mov edx, DWORD PTR [ebp-0x1fc]
 80a4f76:  mov DWORD PTR [esp+0xc], edx
 80a4f7a:  mov ecx, DWORD PTR [ebp-0x1c8]
 80a4f80:  mov DWORD PTR [esp+0x8], ecx
 80a4f84:  mov ebx, DWORD PTR [ebp-0x218]
 80a4f8a:  mov DWORD PTR [esp+0x4], ebx
 80a4f8e:  mov esi, DWORD PTR [ebp-0x21c]
 80a4f94:  mov DWORD PTR [esp], esi
 80a4f97:  mov ecx, DWORD PTR [ebp-0x208]
 80a4f9d:  mov edx, DWORD PTR [ebp-0x178]
 80a4fa3:  mov eax, DWORD PTR [ebp-0x1d8]
 80a4fa9:  call 80a3f40
 80a4fae:  mov edi, DWORD PTR [ebp-0x1e0]
 80a4fb4:  sub edi, 0x1
 80a4fb7:  bsr ebx, DWORD PTR [ebp+edi*4-0x150]
 80a4fbf:  mov DWORD PTR [ebp-0x200], edi
 80a4fc5:  xor ebx, 0x1f
 80a4fc8:  jle 80a501d
 80a4fca:  mov DWORD PTR [esp+0xc], ebx
 80a4fce:  mov eax, DWORD PTR [ebp-0x1e0]
 80a4fd4:  mov DWORD PTR [esp+0x8], eax
 80a4fd8:  mov edx, DWORD PTR [ebp-0x220]
 80a4fde:  mov DWORD PTR [esp+0x4], edx
 80a4fe2:  mov DWORD PTR [esp], edx
 80a4fe5:  call 808c1c0
 80a4fea:  mov DWORD PTR [esp+0xc], ebx
 80a4fee:  mov eax, DWORD PTR [ebp-0x10]
 80a4ff1:  mov DWORD PTR [esp+0x8], eax
 80a4ff5:  mov ecx, DWORD PTR [ebp-0x208]
 80a4ffb:  mov DWORD PTR [esp+0x4], ecx
 80a4fff:  mov DWORD PTR [esp], ecx
 80a5002:  call 808c1c0
 80a5007:  test eax, eax
 80a5009:  mov edx, eax
 80a500b:  je 80a501d
 80a500d:  mov eax, DWORD PTR [ebp-0x10]
 80a5010:  mov DWORD PTR [ebp+eax*4-0xb8], edx
 80a5017:  add eax, 0x1
 80a501a:  mov DWORD PTR [ebp-0x10], eax
 80a501d:  mov ebx, DWORD PTR [ebp-0x1dc]
 80a5023:  cmp DWORD PTR [ebp-0x1e0], 0x1
 80a502a:  mov DWORD PTR [ebp-0x14], ebx
 80a502d:  je 80a5cba
 80a5033:  cmp DWORD PTR [ebp-0x1e0], 0x2
 80a503a:  je 80a57e4
 80a5040:  mov esi, DWORD PTR [ebp-0x1e0]
 80a5046:  mov ebx, DWORD PTR [ebp-0x200]
 80a504c:  mov eax, DWORD PTR [ebp-0x10]
 80a504f:  sub esi, 0x2
 80a5052:  mov ebx, DWORD PTR [ebp+ebx*4-0x150]
 80a5059:  mov edi, DWORD PTR [ebp+esi*4-0x150]
 80a5060:  mov DWORD PTR [ebp-0x1ec], esi
 80a5066:  mov DWORD PTR [ebp-0x188], ebx
 80a506c:  mov DWORD PTR [ebp-0x184], edi
 80a5072:  mov DWORD PTR [esp+0x8], eax
 80a5076:  mov edx, DWORD PTR [ebp-0x1e0]
 80a507c:  mov ecx, DWORD PTR [ebp-0x220]
 80a5082:  sub edx, eax
 80a5084:  lea eax, [ecx+edx*4]
 80a5087:  mov DWORD PTR [esp+0x4], eax
 80a508b:  mov ebx, DWORD PTR [ebp-0x208]
 80a5091:  mov DWORD PTR [esp], ebx
 80a5094:  call 808bcb0
 80a5099:  test eax, eax
 80a509b:  jle 80a50b1
 80a509d:  mov eax, DWORD PTR [ebp-0x10]
 80a50a0:  mov DWORD PTR [ebp+eax*4-0xb8], 0x0
 80a50ab:  add eax, 0x1
 80a50ae:  mov DWORD PTR [ebp-0x10], eax
 80a50b1:  mov esi, DWORD PTR [ebp-0x10]
 80a50b4:  cmp DWORD PTR [ebp-0x1e0], esi
 80a50ba:  jg 80a5fcf
 80a50c0:  mov edi, DWORD PTR [ebp-0x208]
 80a50c6:  test esi, esi
 80a50c8:  lea ecx, [ebp-0xbc]
 80a50ce:  lea edx, [edi+esi*4-0x4]
 80a50d2:  jle 80a50e4
 80a50d4:  lea esi, [esi]
 80a50d8:  mov eax, DWORD PTR [edx]
 80a50da:  mov DWORD PTR [edx+0x4], eax
 80a50dd:  sub edx, 0x4
 80a50e0:  cmp edx, ecx
 80a50e2:  jne 80a50d8
 80a50e4:  mov ecx, DWORD PTR [ebp-0x1e0]
 80a50ea:  mov DWORD PTR [ebp-0x180], 0x0
 80a50f4:  mov ebx, DWORD PTR [ebp+ecx*4-0xb8]
 80a50fb:  lea esi, [ecx+0x1]
 80a50fe:  mov DWORD PTR [ebp+ecx*4-0x150], 0x0
 80a5109:  mov DWORD PTR [ebp-0x204], esi
 80a510f:  mov eax, DWORD PTR [ebp-0x1ec]
 80a5115:  mov edx, DWORD PTR [ebp-0x208]
 80a511b:  lea eax, [edx+eax*4]
 80a511e:  mov DWORD PTR [ebp-0x22c], eax
 80a5124:  lea esi, [esi]
 80a5128:  cmp ebx, DWORD PTR [ebp-0x188]
 80a512e:  mov edi, 0xffffffff
 80a5133:  je 80a51c3
 80a5139:  mov edx, DWORD PTR [ebp-0x200]
 80a513f:  mov eax, DWORD PTR [ebp+edx*4-0xb8]
 80a5146:  mov edx, ebx
 80a5148:  div DWORD PTR [ebp-0x188]
 80a514e:  mov esi, edx
 80a5150:  mov edi, eax
 80a5152:  mov eax, DWORD PTR [ebp-0x184]
 80a5158:  mul edi
 80a515a:  mov DWORD PTR [ebp-0x238], eax
 80a5160:  mov eax, DWORD PTR [ebp-0x188]
 80a5166:  mov ebx, edx
 80a5168:  lea ecx, [esi+eax]
 80a516b:  jmp 80a5189
 80a516d:  lea esi, [esi]
 80a5170:  mov edx, DWORD PTR [ebp-0x184]
 80a5176:  xor eax, eax
 80a5178:  cmp DWORD PTR [ebp-0x238], edx
 80a517e:  setb al
 80a5181:  sub DWORD PTR [ebp-0x238], edx
 80a5187:  sub ebx, eax
 80a5189:  cmp ebx, esi
 80a518b:  ja 80a51a4
 80a518d:  jne 80a51c3
 80a518f:  mov eax, DWORD PTR [ebp-0x1ec]
 80a5195:  mov edx, DWORD PTR [ebp-0x238]
 80a519b:  cmp edx, DWORD PTR [ebp+eax*4-0xb8]
 80a51a2:  jbe 80a51c3
 80a51a4:  add ecx, DWORD PTR [ebp-0x188]
 80a51aa:  sub edi, 0x1
 80a51ad:  add esi, DWORD PTR [ebp-0x188]
 80a51b3:  mov eax, ecx
 80a51b5:  sub eax, DWORD PTR [ebp-0x188]
 80a51bb:  cmp DWORD PTR [ebp-0x188], eax
 80a51c1:  jbe 80a5170
 80a51c3:  mov DWORD PTR [esp+0xc], edi
 80a51c7:  mov ecx, DWORD PTR [ebp-0x204]
 80a51cd:  mov DWORD PTR [esp+0x8], ecx
 80a51d1:  mov ebx, DWORD PTR [ebp-0x220]
 80a51d7:  mov DWORD PTR [esp+0x4], ebx
 80a51db:  mov esi, DWORD PTR [ebp-0x208]
 80a51e1:  mov DWORD PTR [esp], esi
 80a51e4:  call 808dab0
 80a51e9:  mov edx, DWORD PTR [ebp-0x1e0]
 80a51ef:  cmp eax, DWORD PTR [ebp+edx*4-0xb8]
 80a51f6:  je 80a520f
 80a51f8:  mov DWORD PTR [esp+0xc], edx
 80a51fc:  sub edi, 0x1
 80a51ff:  mov DWORD PTR [esp+0x8], ebx
 80a5203:  mov DWORD PTR [esp+0x4], esi
 80a5207:  mov DWORD PTR [esp], esi
 80a520a:  call 8099240
 80a520f:  mov ecx, DWORD PTR [ebp-0x200]
 80a5215:  mov esi, DWORD PTR [ebp-0x1e0]
 80a521b:  mov ebx, DWORD PTR [ebp+ecx*4-0xb8]
 80a5222:  test ecx, ecx
 80a5224:  mov DWORD PTR [ebp+esi*4-0xb8], ebx
 80a522b:  jle 80a524c
 80a522d:  mov edx, DWORD PTR [ebp-0x22c]
 80a5233:  lea ecx, [ebp-0xbc]
 80a5239:  lea esi, [esi]
 80a5240:  mov eax, DWORD PTR [edx]
 80a5242:  mov DWORD PTR [edx+0x4], eax
 80a5245:  sub edx, 0x4
 80a5248:  cmp edx, ecx
 80a524a:  jne 80a5240
 80a524c:  mov eax, DWORD PTR [ebp-0x1dc]
 80a5252:  test eax, eax
 80a5254:  jne 80a5a88
 80a525a:  test edi, edi
 80a525c:  jne 80a5bea
 80a5262:  sub DWORD PTR [ebp-0x14], 0x20
 80a5266:  cmp DWORD PTR [ebp-0x1dc], 0x35
 80a526d:  mov DWORD PTR [ebp-0x1c], 0x0
 80a5274:  mov DWORD PTR [ebp-0x20], edi
 80a5277:  jle 80a5128
 80a527d:  mov ecx, DWORD PTR [ebp-0x1e0]
 80a5283:  mov ebx, DWORD PTR [ebp+ecx*4-0xb8]
 80a528a:  test ebx, ebx
 80a528c:  je 80a5f8d
 80a5292:  mov esi, DWORD PTR [ebp-0x1e0]
 80a5298:  not esi
 80a529a:  shr esi, 0x1f
 80a529d:  mov edx, DWORD PTR [ebp-0x14]
 80a52a0:  or DWORD PTR [ebp-0x160], esi
 80a52a6:  mov eax, DWORD PTR [ebp-0x160]
 80a52ac:  sub edx, 0x1
 80a52af:  mov DWORD PTR [esp+0x8], eax
 80a52b3:  mov eax, 0x1f
 80a52b8:  sub eax, DWORD PTR [ebp-0x180]
 80a52be:  mov DWORD PTR [esp+0x4], eax
 80a52c2:  mov DWORD PTR [esp], edi
 80a52c5:  mov ecx, DWORD PTR [ebp-0x1e8]
 80a52cb:  mov eax, DWORD PTR [ebp-0x214]
 80a52d1:  call 80a41a0
 80a52d6:  jmp 80a4550
 80a52db:  movzx ecx, BYTE PTR [edi+0x2]
 80a52df:  lea ebx, [edi+0x2]
 80a52e2:  mov DWORD PTR [ebp-0x1bc], 0x1
 80a52ec:  jmp 80a4e98
 80a52f1:  cmp BYTE PTR [ebp-0x1ed], 0x0
 80a52f8:  jne 80a4e75
 80a52fe:  jmp 80a48bc
 80a5303:  mov eax, DWORD PTR [ebp-0x19c]
 80a5309:  mov ebx, DWORD PTR [ebp-0x1a0]
 80a530f:  sub DWORD PTR [ebp-0x1e0], 0x1
 80a5316:  mov DWORD PTR [ebp-0x1a0], eax
 80a531c:  mov DWORD PTR [ebp-0x19c], ebx
 80a5322:  jmp 80a4b38
 80a5327:  mov edx, DWORD PTR [ebp-0x1c4]
 80a532d:  lea eax, [ebp-0xb8]
 80a5333:  mov DWORD PTR [ebp-0x208], eax
 80a5339:  lea esi, [ebp-0x14]
 80a533c:  lea edi, [ebp-0x10]
 80a533f:  mov DWORD PTR [esp+0x10], edx
 80a5343:  mov ecx, DWORD PTR [ebp-0x1fc]
 80a5349:  mov DWORD PTR [esp+0xc], ecx
 80a534d:  mov ebx, DWORD PTR [ebp-0x1c8]
 80a5353:  mov ecx, eax
 80a5355:  mov DWORD PTR [esp+0x8], ebx
 80a5359:  mov DWORD PTR [ebp-0x218], esi
 80a535f:  mov DWORD PTR [esp+0x4], esi
 80a5363:  mov DWORD PTR [ebp-0x21c], edi
 80a5369:  mov DWORD PTR [esp], edi
 80a536c:  mov edx, DWORD PTR [ebp-0x158]
 80a5372:  mov eax, DWORD PTR [ebp-0x1d8]
 80a5378:  call 80a3f40
 80a537d:  mov DWORD PTR [ebp-0x1d8], eax
 80a5383:  mov eax, DWORD PTR [ebp-0x14]
 80a5386:  test eax, eax
 80a5388:  jle 80a54b1
 80a538e:  mov eax, DWORD PTR [ebp-0x208]
 80a5394:  lea edx, [ebp-0x150]
 80a539a:  mov esi, 0x1
 80a539f:  mov DWORD PTR [ebp-0x220], edx
 80a53a5:  mov edi, 0x80c4aa0
 80a53aa:  mov DWORD PTR [ebp-0x1b4], edx
 80a53b0:  mov DWORD PTR [ebp-0x1b8], eax
 80a53b6:  jmp 80a5417
 80a53b8:  mov DWORD PTR [esp+0x10], ebx
 80a53bc:  mov eax, DWORD PTR [edi]
 80a53be:  mov DWORD PTR [esp+0x8], edx
 80a53c2:  lea eax, [eax*4+0x80c3cc8]
 80a53c9:  mov DWORD PTR [esp+0xc], eax
 80a53cd:  mov ecx, DWORD PTR [ebp-0x1b8]
 80a53d3:  mov DWORD PTR [esp+0x4], ecx
 80a53d7:  mov eax, DWORD PTR [ebp-0x1b4]
 80a53dd:  mov DWORD PTR [esp], eax
 80a53e0:  call 808c280
 80a53e5:  mov edx, eax
 80a53e7:  mov eax, ebx
 80a53e9:  add eax, DWORD PTR [ebp-0x10]
 80a53ec:  test edx, edx
 80a53ee:  mov DWORD PTR [ebp-0x10], eax
 80a53f1:  je 80a5461
 80a53f3:  mov eax, DWORD PTR [ebp-0x1b4]
 80a53f9:  mov ebx, DWORD PTR [ebp-0x1b8]
 80a53ff:  mov DWORD PTR [ebp-0x1b8], eax
 80a5405:  mov DWORD PTR [ebp-0x1b4], ebx
 80a540b:  mov eax, DWORD PTR [ebp-0x14]
 80a540e:  test eax, eax
 80a5410:  je 80a5481
 80a5412:  add esi, esi
 80a5414:  add edi, 0x10
 80a5417:  mov edx, DWORD PTR [ebp-0x14]
 80a541a:  test esi, edx
 80a541c:  je 80a540b
 80a541e:  xor edx, esi
 80a5420:  mov eax, DWORD PTR [edi+0x4]
 80a5423:  mov DWORD PTR [ebp-0x14], edx
 80a5426:  mov edx, DWORD PTR [ebp-0x10]
 80a5429:  lea ebx, [eax-0x2]
 80a542c:  cmp ebx, edx
 80a542e:  jle 80a53b8
 80a5430:  mov DWORD PTR [esp+0x10], edx
 80a5434:  mov edx, DWORD PTR [ebp-0x1b8]
 80a543a:  mov DWORD PTR [esp+0x8], ebx
 80a543e:  mov DWORD PTR [esp+0xc], edx
 80a5442:  mov eax, DWORD PTR [edi]
 80a5444:  lea eax, [eax*4+0x80c3cc8]
 80a544b:  mov DWORD PTR [esp+0x4], eax
 80a544f:  mov ecx, DWORD PTR [ebp-0x1b4]
 80a5455:  mov DWORD PTR [esp], ecx
 80a5458:  call 808c280
 80a545d:  mov edx, eax
 80a545f:  jmp 80a53e7
 80a5461:  sub eax, 0x1
 80a5464:  mov edx, DWORD PTR [ebp-0x1b8]
 80a546a:  mov DWORD PTR [ebp-0x10], eax
 80a546d:  mov eax, DWORD PTR [ebp-0x1b4]
 80a5473:  mov DWORD PTR [ebp-0x1b4], edx
 80a5479:  mov DWORD PTR [ebp-0x1b8], eax
 80a547f:  jmp 80a540b
 80a5481:  mov ecx, DWORD PTR [ebp-0x220]
 80a5487:  cmp DWORD PTR [ebp-0x1b8], ecx
 80a548d:  jne 80a54b1
 80a548f:  mov eax, DWORD PTR [ebp-0x10]
 80a5492:  shl eax, 0x2
 80a5495:  mov DWORD PTR [esp+0x8], eax
 80a5499:  mov ebx, DWORD PTR [ebp-0x1b8]
 80a549f:  mov DWORD PTR [esp+0x4], ebx
 80a54a3:  mov esi, DWORD PTR [ebp-0x208]
 80a54a9:  mov DWORD PTR [esp], esi
 80a54ac:  call 804efc0
 80a54b1:  mov esi, DWORD PTR [ebp-0x10]
 80a54b4:  lea edx, [esi-0x1]
 80a54b7:  mov edi, esi
 80a54b9:  bsr eax, DWORD PTR [ebp+edx*4-0xb8]
 80a54c1:  shl edi, 0x5
 80a54c4:  xor eax, 0x1f
 80a54c7:  sub edi, eax
 80a54c9:  cmp edi, 0x400
 80a54cf:  mov DWORD PTR [ebp-0x1dc], edi
 80a54d5:  jg 80a64d0
 80a54db:  cmp DWORD PTR [ebp-0x1dc], 0x35
 80a54e2:  jg 80a570e
 80a54e8:  mov edx, DWORD PTR [ebp-0x158]
 80a54ee:  cmp DWORD PTR [ebp-0x15c], edx
 80a54f4:  jne 80a5efd
 80a54fa:  mov edi, DWORD PTR [ebp-0x1dc]
 80a5500:  sub edi, 0x1
 80a5503:  mov eax, edi
 80a5505:  sar eax, 0x1f
 80a5508:  shr eax, 0x1b
 80a550b:  lea edx, [edi+eax]
 80a550e:  and edx, 0x1f
 80a5511:  sub edx, eax
 80a5513:  cmp edx, 0x14
 80a5516:  je 80a6456
 80a551c:  cmp edx, 0x13
 80a551f:  jg 80a61c8
 80a5525:  mov eax, 0x14
 80a552a:  mov ebx, 0x2
 80a552f:  sub eax, edx
 80a5531:  mov DWORD PTR [esp+0xc], eax
 80a5535:  mov eax, ebx
 80a5537:  mov DWORD PTR [esp+0x8], esi
 80a553b:  mov edx, DWORD PTR [ebp-0x208]
 80a5541:  lea ecx, [ebp-0x20]
 80a5544:  sub eax, esi
 80a5546:  lea eax, [ecx+eax*4]
 80a5549:  mov DWORD PTR [esp+0x4], edx
 80a554d:  mov DWORD PTR [ebp-0x214], ecx
 80a5553:  mov DWORD PTR [esp], eax
 80a5556:  call 808c1c0
 80a555b:  sub ebx, DWORD PTR [ebp-0x10]
 80a555e:  test ebx, ebx
 80a5560:  jle 80a5582
 80a5562:  mov ebx, DWORD PTR [ebp-0x214]
 80a5568:  xor edx, edx
 80a556a:  mov ecx, 0x2
 80a556f:  mov eax, ecx
 80a5571:  sub eax, DWORD PTR [ebp-0x10]
 80a5574:  mov DWORD PTR [ebx+edx*4], 0x0
 80a557b:  add edx, 0x1
 80a557e:  cmp eax, edx
 80a5580:  jg 80a556f
 80a5582:  mov DWORD PTR [esp+0x8], 0x0
 80a558a:  mov edx, edi
 80a558c:  mov DWORD PTR [esp+0x4], 0x0
 80a5594:  mov DWORD PTR [esp], 0x0
 80a559b:  mov ecx, DWORD PTR [ebp-0x1e8]
 80a55a1:  mov eax, DWORD PTR [ebp-0x214]
 80a55a7:  call 80a41a0
 80a55ac:  jmp 80a4550
 80a55b1:  mov DWORD PTR [esp+0xc], 0x80b03e0
 80a55b9:  mov DWORD PTR [esp+0x8], 0x3
 80a55c1:  mov DWORD PTR [esp+0x4], 0x80b145c
 80a55c9:  mov DWORD PTR [esp], esi
 80a55cc:  call 80a8fe0
 80a55d1:  test eax, eax
 80a55d3:  jne 80a4533
 80a55d9:  mov edi, DWORD PTR [ebp+0xc]
 80a55dc:  test edi, edi
 80a55de:  je 80a5614
 80a55e0:  lea eax, [esi+0x3]
 80a55e3:  mov DWORD PTR [esp+0xc], 0x80b03e0
 80a55eb:  mov DWORD PTR [esp+0x8], 0x5
 80a55f3:  mov DWORD PTR [esp+0x4], 0x80c6ca3
 80a55fb:  mov DWORD PTR [esp], eax
 80a55fe:  call 80a8fe0
 80a5603:  mov edx, DWORD PTR [ebp+0xc]
 80a5606:  cmp eax, 0x1
 80a5609:  sbb eax, eax
 80a560b:  and eax, 0x5
 80a560e:  lea eax, [esi+eax+0x3]
 80a5612:  mov DWORD PTR [edx], eax
 80a5614:  mov ebx, DWORD PTR [ebp-0x1e8]
 80a561a:  test ebx, ebx
 80a561c:  jne 80a5f71
 80a5622:  fld DWORD PTR ds:0x80c6d00
 80a5628:  jmp 80a4550
 80a562d:  mov DWORD PTR [esp+0xc], 0x80b03e0
 80a5635:  mov DWORD PTR [esp+0x8], 0x3
 80a563d:  mov DWORD PTR [esp+0x4], 0x80b1454
 80a5645:  mov DWORD PTR [esp], esi
 80a5648:  call 80a8fe0
 80a564d:  test eax, eax
 80a564f:  jne 80a4533
 80a5655:  cmp BYTE PTR [esi+0x3], 0x28
 80a5659:  lea edi, [esi+0x3]
 80a565c:  je 80a6157
 80a5662:  fld DWORD PTR ds:0x80c6d08
 80a5668:  mov esi, DWORD PTR [ebp+0xc]
 80a566b:  test esi, esi
 80a566d:  je 80a4550
 80a5673:  mov eax, DWORD PTR [ebp+0xc]
 80a5676:  mov DWORD PTR [eax], edi
 80a5678:  jmp 80a4550
 80a567d:  movzx ecx, BYTE PTR [edi+0x2]
 80a5681:  lea ebx, [edi+0x2]
 80a5684:  mov DWORD PTR [ebp-0x1bc], 0x0
 80a568e:  jmp 80a4e98
 80a5693:  mov eax, DWORD PTR [ebp+0xc]
 80a5696:  test eax, eax
 80a5698:  je 80a4650
 80a569e:  mov edx, DWORD PTR [ebp+0xc]
 80a56a1:  mov DWORD PTR [edx], ecx
 80a56a3:  jmp 80a4650
 80a56a8:  add esi, 0x2
 80a56ab:  movzx ebx, BYTE PTR [esi]
 80a56ae:  mov DWORD PTR [ebp-0x1e4], 0x10
 80a56b8:  mov DWORD PTR [ebp-0x1c0], 0x0
 80a56c2:  mov BYTE PTR [ebp-0x179], 0x0
 80a56c9:  mov BYTE PTR [ebp-0x1ed], 0x1
 80a56d0:  jmp 80a458d
 80a56d5:  mov eax, DWORD PTR [ebp-0x1d4]
 80a56db:  mov edx, DWORD PTR [ebp-0x1cc]
 80a56e1:  neg eax
 80a56e3:  lea esi, [edx+eax+0x135]
 80a56ea:  jmp 80a4ed0
 80a56ef:  add edx, 0x2
 80a56f2:  mov DWORD PTR [ebp-0x178], edx
 80a56f8:  mov DWORD PTR [ebp-0x160], 0x1
 80a5702:  mov BYTE PTR [ebp-0x171], 0x1
 80a5709:  jmp 80a4ac3
 80a570e:  mov eax, DWORD PTR [ebp-0x1dc]
 80a5714:  sub eax, 0x35
 80a5717:  mov ecx, eax
 80a5719:  sar ecx, 0x5
 80a571c:  and eax, 0x1f
 80a571f:  mov DWORD PTR [ebp-0x1b0], ecx
 80a5725:  mov DWORD PTR [ebp-0x1ac], eax
 80a572b:  jne 80a5e3d
 80a5731:  mov edi, DWORD PTR [ebp-0x208]
 80a5737:  lea ebx, [ebp-0x20]
 80a573a:  mov esi, ecx
 80a573c:  mov DWORD PTR [ebp-0x214], ebx
 80a5742:  sub esi, 0x1
 80a5745:  lea eax, [edi+ecx*4]
 80a5748:  mov edx, DWORD PTR [eax]
 80a574a:  mov DWORD PTR [ebp-0x20], edx
 80a574d:  mov eax, DWORD PTR [eax+0x4]
 80a5750:  mov DWORD PTR [ebp-0x1a8], 0x1f
 80a575a:  mov DWORD PTR [ebp-0x1c], eax
 80a575d:  mov ecx, DWORD PTR [ebp-0xb8]
 80a5763:  xor eax, eax
 80a5765:  test ecx, ecx
 80a5767:  jne 80a5780
 80a5769:  lea esi, [esi]
 80a5770:  mov ebx, DWORD PTR [ebp-0x208]
 80a5776:  add eax, 0x1
 80a5779:  mov edx, DWORD PTR [ebx+eax*4]
 80a577c:  test edx, edx
 80a577e:  je 80a5770
 80a5780:  mov edx, DWORD PTR [ebp-0x1dc]
 80a5786:  mov edi, DWORD PTR [ebp-0x15c]
 80a578c:  sub edx, 0x1
 80a578f:  cmp DWORD PTR [ebp-0x158], edi
 80a5795:  setl cl
 80a5798:  cmp eax, esi
 80a579a:  setl al
 80a579d:  or eax, ecx
 80a579f:  and eax, 0x1
 80a57a2:  mov DWORD PTR [esp+0x8], eax
 80a57a6:  mov eax, DWORD PTR [ebp-0x1a8]
 80a57ac:  mov DWORD PTR [esp+0x4], eax
 80a57b0:  mov eax, DWORD PTR [ebp+esi*4-0xb8]
 80a57b7:  mov DWORD PTR [esp], eax
 80a57ba:  mov ecx, DWORD PTR [ebp-0x1e8]
 80a57c0:  mov eax, DWORD PTR [ebp-0x214]
 80a57c6:  call 80a41a0
 80a57cb:  jmp 80a4550
 80a57d0:  mov ecx, DWORD PTR [ebp-0x1d8]
 80a57d6:  add ecx, 0x1
 80a57d9:  mov DWORD PTR [ebp-0x164], ecx
 80a57df:  jmp 80a4dce
 80a57e4:  mov eax, DWORD PTR [ebp-0x150]
 80a57ea:  mov edx, DWORD PTR [ebp-0x14c]
 80a57f0:  cmp DWORD PTR [ebp-0x10], 0x1
 80a57f4:  mov DWORD PTR [ebp-0x198], eax
 80a57fa:  mov DWORD PTR [ebp-0x194], edx
 80a5800:  jg 80a5dd5
 80a5806:  mov edx, DWORD PTR [ebp-0xb8]
 80a580c:  cmp DWORD PTR [ebp-0x194], edx
 80a5812:  mov DWORD PTR [ebp-0x190], 0x0
 80a581c:  mov DWORD PTR [ebp-0x154], edx
 80a5822:  jbe 80a5ded
 80a5828:  mov edi, DWORD PTR [ebp-0x1dc]
 80a582e:  test edi, edi
 80a5830:  jle 80a6432
 80a5836:  cmp DWORD PTR [ebp-0x1dc], 0x15
 80a583d:  jg 80a63f2
 80a5843:  mov eax, DWORD PTR [ebp-0x20]
 80a5846:  mov DWORD PTR [ebp-0x18c], 0x0
 80a5850:  mov DWORD PTR [ebp-0x20], 0x0
 80a5857:  mov DWORD PTR [ebp-0x1c], eax
 80a585a:  add DWORD PTR [ebp-0x1dc], 0x20
 80a5861:  xor edi, edi
 80a5863:  cmp DWORD PTR [ebp-0x1dc], 0x35
 80a586a:  mov DWORD PTR [ebp-0x190], edx
 80a5870:  mov DWORD PTR [ebp-0x154], 0x0
 80a587a:  jg 80a5b26
 80a5880:  mov edi, DWORD PTR [ebp-0x198]
 80a5886:  neg edi
 80a5888:  mov DWORD PTR [ebp-0x228], edi
 80a588e:  xchg ax, ax
 80a5890:  mov eax, DWORD PTR [ebp-0x194]
 80a5896:  cmp DWORD PTR [ebp-0x190], eax
 80a589c:  je 80a5aaa
 80a58a2:  mov edi, DWORD PTR [ebp-0x154]
 80a58a8:  mov ecx, DWORD PTR [ebp-0x190]
 80a58ae:  mov eax, edi
 80a58b0:  mov edx, ecx
 80a58b2:  div DWORD PTR [ebp-0x194]
 80a58b8:  mov edi, eax
 80a58ba:  mov ecx, edx
 80a58bc:  mov eax, DWORD PTR [ebp-0x198]
 80a58c2:  mul edi
 80a58c4:  mov ebx, edx
 80a58c6:  mov esi, eax
 80a58c8:  mov eax, DWORD PTR [ebp-0x194]
 80a58ce:  lea edx, [ecx+eax]
 80a58d1:  lea esi, [esi]
 80a58d8:  cmp ebx, ecx
 80a58da:  ja 80a59e8
 80a58e0:  je 80a59e0
 80a58e6:  xor edx, edx
 80a58e8:  sub edx, esi
 80a58ea:  sbb ecx, ebx
 80a58ec:  mov DWORD PTR [ebp-0x154], edx
 80a58f2:  mov DWORD PTR [ebp-0x190], ecx
 80a58f8:  mov esi, DWORD PTR [ebp-0x1dc]
 80a58fe:  test esi, esi
 80a5900:  jne 80a5a68
 80a5906:  test edi, edi
 80a5908:  jne 80a5c4d
 80a590e:  sub DWORD PTR [ebp-0x14], 0x20
 80a5912:  cmp DWORD PTR [ebp-0x1dc], 0x35
 80a5919:  mov DWORD PTR [ebp-0x1c], 0x0
 80a5920:  mov DWORD PTR [ebp-0x20], edi
 80a5923:  jle 80a5890
 80a5929:  jmp 80a5b26
 80a592e:  xchg ax, ax
 80a5930:  mov eax, DWORD PTR [ebp+0x14]
 80a5933:  mov eax, DWORD PTR [eax+0x34]
 80a5936:  mov DWORD PTR [ebp-0x20c], eax
 80a593c:  mov ebx, eax
 80a593e:  xchg ax, ax
 80a5940:  sub edx, 0x1
 80a5943:  movzx ecx, BYTE PTR [edx]
 80a5946:  movsx eax, cl
 80a5949:  test BYTE PTR [ebx+eax*2+0x1], 0x10
 80a594e:  je 80a5940
 80a5950:  cmp cl, 0x30
 80a5953:  jne 80a48f0
 80a5959:  sub DWORD PTR [ebp-0x15c], 0x1
 80a5960:  mov eax, DWORD PTR [ebp-0x14]
 80a5963:  mov ecx, DWORD PTR [ebp-0x15c]
 80a5969:  sub DWORD PTR [ebp-0x1d0], 0x1
 80a5970:  add eax, 0x4
 80a5973:  test ecx, ecx
 80a5975:  mov DWORD PTR [ebp-0x14], eax
 80a5978:  jle 80a48f0
 80a597e:  test eax, eax
 80a5980:  jns 80a48f0
 80a5986:  sub edx, 0x1
 80a5989:  mov ebx, DWORD PTR [ebp-0x20c]
 80a598f:  movzx ecx, BYTE PTR [edx]
 80a5992:  movsx eax, cl
 80a5995:  test BYTE PTR [ebx+eax*2+0x1], 0x10
 80a599a:  je 80a5940
 80a599c:  jmp 80a5950
 80a599e:  cmp BYTE PTR [ebp-0x1ed], 0x0
 80a59a5:  je 80a46b8
 80a59ab:  mov eax, DWORD PTR [ebp-0x1fc]
 80a59b1:  movzx edx, BYTE PTR [esi+eax]
 80a59b5:  lea eax, [edx-0x30]
 80a59b8:  cmp al, 0x9
 80a59ba:  jbe 80a59d3
 80a59bc:  movsx eax, dl
 80a59bf:  mov edx, DWORD PTR [ebp-0x210]
 80a59c5:  mov eax, DWORD PTR [edx+eax*4]
 80a59c8:  sub eax, 0x61
 80a59cb:  cmp al, 0x5
 80a59cd:  ja 80a4607
 80a59d3:  mov edi, esi
 80a59d5:  jmp 80a46be
 80a59da:  lea esi, [esi]
 80a59e0:  test esi, esi
 80a59e2:  je 80a58e6
 80a59e8:  add edx, DWORD PTR [ebp-0x194]
 80a59ee:  sub edi, 0x1
 80a59f1:  sub esi, DWORD PTR [ebp-0x198]
 80a59f7:  sbb ebx, 0x0
 80a59fa:  add ecx, DWORD PTR [ebp-0x194]
 80a5a00:  mov eax, edx
 80a5a02:  sub eax, DWORD PTR [ebp-0x194]
 80a5a08:  cmp DWORD PTR [ebp-0x194], eax
 80a5a0e:  jbe 80a58d8
 80a5a14:  jmp 80a58e6
 80a5a19:  lea esi, [esi]
 80a5a20:  mov ecx, 0x3
 80a5a25:  mov eax, ebx
 80a5a27:  sub ecx, esi
 80a5a29:  shr eax, cl
 80a5a2b:  lea ecx, [esi+0x1d]
 80a5a2e:  or DWORD PTR [ebp+edi*4-0x20], eax
 80a5a32:  shl ebx, cl
 80a5a34:  test edi, edi
 80a5a36:  je 80a609b
 80a5a3c:  mov DWORD PTR [ebp-0x20], ebx
 80a5a3f:  add esi, 0x1c
 80a5a42:  xor edi, edi
 80a5a44:  jmp 80a4e00
 80a5a49:  lea esi, [esi]
 80a5a50:  mov ebx, DWORD PTR [ebp+0x14]
 80a5a53:  add DWORD PTR [ebp-0x164], 0x1
 80a5a5a:  mov eax, DWORD PTR [ebx+0x38]
 80a5a5d:  mov eax, DWORD PTR [eax+ecx*4]
 80a5a60:  lea ebx, [eax-0x57]
 80a5a63:  jmp 80a4e51
 80a5a68:  cmp DWORD PTR [ebp-0x1dc], 0x15
 80a5a6f:  jg 80a5ae3
 80a5a71:  mov eax, DWORD PTR [ebp-0x20]
 80a5a74:  add DWORD PTR [ebp-0x1dc], 0x20
 80a5a7b:  mov DWORD PTR [ebp-0x20], edi
 80a5a7e:  mov DWORD PTR [ebp-0x1c], eax
 80a5a81:  jmp 80a5890
 80a5a86:  xchg ax, ax
 80a5a88:  cmp DWORD PTR [ebp-0x1dc], 0x15
 80a5a8f:  jg 80a5b5c
 80a5a95:  mov eax, DWORD PTR [ebp-0x20]
 80a5a98:  add DWORD PTR [ebp-0x1dc], 0x20
 80a5a9f:  mov DWORD PTR [ebp-0x20], edi
 80a5aa2:  mov DWORD PTR [ebp-0x1c], eax
 80a5aa5:  jmp 80a5128
 80a5aaa:  mov ecx, DWORD PTR [ebp-0x190]
 80a5ab0:  add ecx, DWORD PTR [ebp-0x154]
 80a5ab6:  jae 80a5c29
 80a5abc:  sub ecx, DWORD PTR [ebp-0x198]
 80a5ac2:  xor edx, edx
 80a5ac4:  mov edi, 0xffffffff
 80a5ac9:  add edx, DWORD PTR [ebp-0x198]
 80a5acf:  adc ecx, 0x0
 80a5ad2:  mov DWORD PTR [ebp-0x154], edx
 80a5ad8:  mov DWORD PTR [ebp-0x190], ecx
 80a5ade:  jmp 80a58f8
 80a5ae3:  mov eax, 0x35
 80a5ae8:  sub eax, DWORD PTR [ebp-0x1dc]
 80a5aee:  mov DWORD PTR [ebp-0x18c], eax
 80a5af4:  je 80a5b26
 80a5af6:  mov DWORD PTR [esp+0xc], eax
 80a5afa:  mov DWORD PTR [esp+0x8], 0x2
 80a5b02:  mov ecx, DWORD PTR [ebp-0x214]
 80a5b08:  mov DWORD PTR [esp+0x4], ecx
 80a5b0c:  mov DWORD PTR [esp], ecx
 80a5b0f:  call 808c1c0
 80a5b14:  mov ecx, 0x20
 80a5b19:  mov eax, edi
 80a5b1b:  sub ecx, DWORD PTR [ebp-0x18c]
 80a5b21:  shr eax, cl
 80a5b23:  or DWORD PTR [ebp-0x20], eax
 80a5b26:  cmp BYTE PTR [ebp-0x171], 0x0
 80a5b2d:  jne 80a5b3d
 80a5b2f:  mov ebx, DWORD PTR [ebp-0x190]
 80a5b35:  test ebx, ebx
 80a5b37:  je 80a5f7c
 80a5b3d:  mov eax, 0x1
 80a5b42:  mov edx, DWORD PTR [ebp-0x14]
 80a5b45:  mov DWORD PTR [esp+0x8], eax
 80a5b49:  mov eax, 0x1f
 80a5b4e:  sub eax, DWORD PTR [ebp-0x18c]
 80a5b54:  sub edx, 0x1
 80a5b57:  jmp 80a52be
 80a5b5c:  mov eax, 0x35
 80a5b61:  sub eax, DWORD PTR [ebp-0x1dc]
 80a5b67:  mov DWORD PTR [ebp-0x180], eax
 80a5b6d:  je 80a527d
 80a5b73:  mov DWORD PTR [esp+0xc], eax
 80a5b77:  mov DWORD PTR [esp+0x8], 0x2
 80a5b7f:  mov edx, DWORD PTR [ebp-0x214]
 80a5b85:  mov DWORD PTR [esp+0x4], edx
 80a5b89:  mov DWORD PTR [esp], edx
 80a5b8c:  call 808c1c0
 80a5b91:  mov ecx, 0x20
 80a5b96:  mov eax, edi
 80a5b98:  sub ecx, DWORD PTR [ebp-0x180]
 80a5b9e:  shr eax, cl
 80a5ba0:  or DWORD PTR [ebp-0x20], eax
 80a5ba3:  jmp 80a527d
 80a5ba8:  lea esi, [ebp-0x20]
 80a5bab:  sub edi, 0x1
 80a5bae:  mov DWORD PTR [ebp-0x214], esi
 80a5bb4:  jne 80a5bbd
 80a5bb6:  mov DWORD PTR [ebp-0x20], 0x0
 80a5bbd:  mov DWORD PTR [esp+0x8], 0x0
 80a5bc5:  mov DWORD PTR [esp+0x4], 0x0
 80a5bcd:  mov DWORD PTR [esp], 0x0
 80a5bd4:  mov ecx, DWORD PTR [ebp-0x1e8]
 80a5bda:  mov eax, DWORD PTR [ebp-0x214]
 80a5be0:  call 80a41a0
 80a5be5:  jmp 80a4550
 80a5bea:  bsr edx, edi
 80a5bed:  mov ecx, 0x20
 80a5bf2:  mov eax, ecx
 80a5bf4:  xor edx, 0x1f
 80a5bf7:  sub eax, edx
 80a5bf9:  sub DWORD PTR [ebp-0x14], edx
 80a5bfc:  cmp eax, 0x35
 80a5bff:  jle 80a6583
 80a5c05:  add edx, 0x35
 80a5c08:  mov eax, edi
 80a5c0a:  sub ecx, edx
 80a5c0c:  shr eax, cl
 80a5c0e:  mov DWORD PTR [ebp-0x20], eax
 80a5c11:  mov eax, DWORD PTR [ebp-0x1e0]
 80a5c17:  mov DWORD PTR [ebp-0x180], edx
 80a5c1d:  mov ebx, DWORD PTR [ebp+eax*4-0xb8]
 80a5c24:  jmp 80a528a
 80a5c29:  xor eax, eax
 80a5c2b:  mov ebx, DWORD PTR [ebp-0x198]
 80a5c31:  mov edi, 0xffffffff
 80a5c36:  cmp DWORD PTR [ebp-0x198], 0x0
 80a5c3d:  mov esi, DWORD PTR [ebp-0x228]
 80a5c43:  setne al
 80a5c46:  sub ebx, eax
 80a5c48:  jmp 80a58c8
 80a5c4d:  bsr edx, edi
 80a5c50:  mov ecx, 0x20
 80a5c55:  mov eax, ecx
 80a5c57:  xor edx, 0x1f
 80a5c5a:  sub eax, edx
 80a5c5c:  sub DWORD PTR [ebp-0x14], edx
 80a5c5f:  cmp eax, 0x35
 80a5c62:  jle 80a6593
 80a5c68:  add edx, 0x35
 80a5c6b:  mov eax, edi
 80a5c6d:  sub ecx, edx
 80a5c6f:  shr eax, cl
 80a5c71:  mov DWORD PTR [ebp-0x18c], edx
 80a5c77:  mov DWORD PTR [ebp-0x20], eax
 80a5c7a:  jmp 80a5b26
 80a5c7f:  mov eax, DWORD PTR [ebp-0x1d4]
 80a5c85:  lea esi, [eax*4+0x432]
 80a5c8c:  mov eax, DWORD PTR [ebp-0x1bc]
 80a5c92:  test eax, eax
 80a5c94:  jne 80a4ed0
 80a5c9a:  mov eax, DWORD PTR [ebp-0x1cc]
 80a5ca0:  sub eax, DWORD PTR [ebp-0x1d4]
 80a5ca6:  lea esi, [eax*4+0x403]
 80a5cad:  jmp 80a4ed0
 80a5cb2:  shl ecx, 0x2
 80a5cb5:  jmp 80a49d0
 80a5cba:  mov edi, DWORD PTR [ebp-0xb8]
 80a5cc0:  mov esi, DWORD PTR [ebp-0x150]
 80a5cc6:  xor ebx, ebx
 80a5cc8:  mov edx, edi
 80a5cca:  mov eax, ebx
 80a5ccc:  div esi
 80a5cce:  mov ebx, eax
 80a5cd0:  mov eax, DWORD PTR [ebp-0x1dc]
 80a5cd6:  mov edi, edx
 80a5cd8:  test eax, eax
 80a5cda:  jne 80a5d00
 80a5cdc:  test ebx, ebx
 80a5cde:  jne 80a5d97
 80a5ce4:  sub DWORD PTR [ebp-0x14], 0x20
 80a5ce8:  cmp DWORD PTR [ebp-0x1dc], 0x35
 80a5cef:  mov DWORD PTR [ebp-0x1c], 0x0
 80a5cf6:  mov DWORD PTR [ebp-0x20], ebx
 80a5cf9:  jle 80a5cc6
 80a5cfb:  xor esi, esi
 80a5cfd:  jmp 80a5d56
 80a5cff:  nop
 80a5d00:  cmp DWORD PTR [ebp-0x1dc], 0x15
 80a5d07:  jg 80a5d1b
 80a5d09:  mov eax, DWORD PTR [ebp-0x20]
 80a5d0c:  add DWORD PTR [ebp-0x1dc], 0x20
 80a5d13:  mov DWORD PTR [ebp-0x20], ebx
 80a5d16:  mov DWORD PTR [ebp-0x1c], eax
 80a5d19:  jmp 80a5cc6
 80a5d1b:  mov esi, 0x35
 80a5d20:  sub esi, DWORD PTR [ebp-0x1dc]
 80a5d26:  test esi, esi
 80a5d28:  jle 80a5d56
 80a5d2a:  mov DWORD PTR [esp+0xc], esi
 80a5d2e:  mov DWORD PTR [esp+0x8], 0x2
 80a5d36:  mov ecx, DWORD PTR [ebp-0x214]
 80a5d3c:  mov DWORD PTR [esp+0x4], ecx
 80a5d40:  mov DWORD PTR [esp], ecx
 80a5d43:  call 808c1c0
 80a5d48:  mov ecx, 0x20
 80a5d4d:  mov eax, ebx
 80a5d4f:  sub ecx, esi
 80a5d51:  shr eax, cl
 80a5d53:  or DWORD PTR [ebp-0x20], eax
 80a5d56:  mov edx, DWORD PTR [ebp-0x14]
 80a5d59:  xor eax, eax
 80a5d5b:  sub edx, 0x1
 80a5d5e:  test edi, edi
 80a5d60:  setne al
 80a5d63:  or DWORD PTR [ebp-0x160], eax
 80a5d69:  mov eax, 0x1f
 80a5d6e:  mov edi, DWORD PTR [ebp-0x160]
 80a5d74:  sub eax, esi
 80a5d76:  mov DWORD PTR [esp+0x4], eax
 80a5d7a:  mov DWORD PTR [esp], ebx
 80a5d7d:  mov DWORD PTR [esp+0x8], edi
 80a5d81:  mov ecx, DWORD PTR [ebp-0x1e8]
 80a5d87:  mov eax, DWORD PTR [ebp-0x214]
 80a5d8d:  call 80a41a0
 80a5d92:  jmp 80a4550
 80a5d97:  bsr edx, ebx
 80a5d9a:  mov eax, 0x20
 80a5d9f:  mov ecx, 0x20
 80a5da4:  xor edx, 0x1f
 80a5da7:  sub eax, edx
 80a5da9:  sub DWORD PTR [ebp-0x14], edx
 80a5dac:  cmp eax, 0x35
 80a5daf:  jle 80a652c
 80a5db5:  lea esi, [edx+0x35]
 80a5db8:  mov eax, ebx
 80a5dba:  sub ecx, esi
 80a5dbc:  shr eax, cl
 80a5dbe:  mov DWORD PTR [ebp-0x20], eax
 80a5dc1:  jmp 80a5d56
 80a5dc3:  cmp BYTE PTR [ebp-0x1ed], 0x0
 80a5dca:  je 80a46b8
 80a5dd0:  jmp 80a4610
 80a5dd5:  mov ebx, DWORD PTR [ebp-0xb4]
 80a5ddb:  mov esi, DWORD PTR [ebp-0xb8]
 80a5de1:  mov DWORD PTR [ebp-0x190], ebx
 80a5de7:  mov DWORD PTR [ebp-0x154], esi
 80a5ded:  mov DWORD PTR [ebp-0x18c], 0x0
 80a5df7:  jmp 80a5880
 80a5dfc:  cmp cl, 0x70
 80a5dff:  jne 80a4607
 80a5e05:  cmp esi, DWORD PTR [ebp-0x168]
 80a5e0b:  jne 80a46b8
 80a5e11:  lea esi, [esi]
 80a5e18:  jmp 80a4610
 80a5e1d:  lea esi, [esi]
 80a5e20:  mov eax, DWORD PTR [ebp+0xc]
 80a5e23:  test eax, eax
 80a5e25:  lea esi, [esi]
 80a5e28:  je 80a465e
 80a5e2e:  mov eax, DWORD PTR [ebp+0x8]
 80a5e31:  fldz
 80a5e33:  mov edi, DWORD PTR [ebp+0xc]
 80a5e36:  mov DWORD PTR [edi], eax
 80a5e38:  jmp 80a4550
 80a5e3d:  sub eax, 0x1
 80a5e40:  cmp edx, DWORD PTR [ebp-0x1b0]
 80a5e46:  mov DWORD PTR [ebp-0x1a8], eax
 80a5e4c:  jle 80a6255
 80a5e52:  mov esi, DWORD PTR [ebp-0x1b0]
 80a5e58:  lea ecx, [ebp-0x20]
 80a5e5b:  mov eax, DWORD PTR [ebp-0x208]
 80a5e61:  mov edi, DWORD PTR [ebp-0x1ac]
 80a5e67:  mov DWORD PTR [ebp-0x170], 0x20
 80a5e71:  sub DWORD PTR [ebp-0x170], edi
 80a5e77:  lea edi, [eax+esi*4+0x4]
 80a5e7b:  mov eax, DWORD PTR [ebp-0x1b0]
 80a5e81:  mov ebx, DWORD PTR [ebp+esi*4-0xb8]
 80a5e88:  mov esi, ecx
 80a5e8a:  mov DWORD PTR [ebp-0x214], ecx
 80a5e90:  mov DWORD PTR [ebp-0x224], edx
 80a5e96:  mov DWORD PTR [ebp-0x230], eax
 80a5e9c:  movzx ecx, BYTE PTR [ebp-0x1ac]
 80a5ea3:  mov edx, ebx
 80a5ea5:  mov ebx, DWORD PTR [edi]
 80a5ea7:  add edi, 0x4
 80a5eaa:  add DWORD PTR [ebp-0x230], 0x1
 80a5eb1:  shr edx, cl
 80a5eb3:  movzx ecx, BYTE PTR [ebp-0x170]
 80a5eba:  mov eax, ebx
 80a5ebc:  shl eax, cl
 80a5ebe:  or edx, eax
 80a5ec0:  mov eax, DWORD PTR [ebp-0x230]
 80a5ec6:  mov DWORD PTR [esi], edx
 80a5ec8:  add esi, 0x4
 80a5ecb:  cmp DWORD PTR [ebp-0x224], eax
 80a5ed1:  jg 80a5e9c
 80a5ed3:  mov edx, DWORD PTR [ebp-0x1b0]
 80a5ed9:  sub eax, edx
 80a5edb:  mov esi, edx
 80a5edd:  sub eax, 0x1
 80a5ee0:  jg 80a575d
 80a5ee6:  movzx ecx, BYTE PTR [ebp-0x1ac]
 80a5eed:  mov esi, DWORD PTR [ebp-0x1b0]
 80a5ef3:  shr ebx, cl
 80a5ef5:  mov DWORD PTR [ebp-0x1c], ebx
 80a5ef8:  jmp 80a575d
 80a5efd:  lea edi, [ebp-0x20]
 80a5f00:  lea eax, [esi*4]
 80a5f07:  mov DWORD PTR [ebp-0x214], edi
 80a5f0d:  mov DWORD PTR [esp+0x8], eax
 80a5f11:  mov eax, DWORD PTR [ebp-0x208]
 80a5f17:  mov DWORD PTR [esp], edi
 80a5f1a:  mov DWORD PTR [esp+0x4], eax
 80a5f1e:  call 804efc0
 80a5f23:  mov eax, DWORD PTR [ebp-0x10]
 80a5f26:  cmp eax, 0x1
 80a5f29:  jle 80a62f6
 80a5f2f:  mov ecx, 0x37
 80a5f34:  mov edx, 0x55555556
 80a5f39:  sub ecx, DWORD PTR [ebp-0x1dc]
 80a5f3f:  mov eax, ecx
 80a5f41:  imul edx
 80a5f43:  sar ecx, 0x1f
 80a5f46:  sub edx, ecx
 80a5f48:  lea eax, [edx+0x2]
 80a5f4b:  jmp 80a4a98
 80a5f50:  mov eax, gs:0x0
 80a5f56:  mov edx, 0xffffffe8
 80a5f5c:  mov DWORD PTR [eax+edx], 0x22
 80a5f63:  mov eax, DWORD PTR [ebp-0x1e8]
 80a5f69:  test eax, eax
 80a5f6b:  je 80a5622
 80a5f71:  fld DWORD PTR ds:0x80c6d04
 80a5f77:  jmp 80a4550
 80a5f7c:  xor eax, eax
 80a5f7e:  cmp DWORD PTR [ebp-0x154], 0x0
 80a5f85:  setne al
 80a5f88:  jmp 80a5b42
 80a5f8d:  mov ebx, DWORD PTR [ebp-0x200]
 80a5f93:  mov esi, DWORD PTR [ebp-0x208]
 80a5f99:  lea ecx, [esi+ebx*4]
 80a5f9c:  mov ebx, DWORD PTR [ebp-0x1e0]
 80a5fa2:  test ebx, ebx
 80a5fa4:  js 80a5292
 80a5faa:  lea esi, [esi]
 80a5fb0:  mov eax, DWORD PTR [ecx]
 80a5fb2:  sub ebx, 0x1
 80a5fb5:  mov esi, ebx
 80a5fb7:  not esi
 80a5fb9:  test eax, eax
 80a5fbb:  mov eax, esi
 80a5fbd:  sete dl
 80a5fc0:  sub ecx, 0x4
 80a5fc3:  shr eax, 0x1f
 80a5fc6:  test dl, al
 80a5fc8:  jne 80a5fb0
 80a5fca:  jmp 80a529a
 80a5fcf:  mov edi, DWORD PTR [ebp-0x1e0]
 80a5fd5:  mov ecx, DWORD PTR [ebp-0x1dc]
 80a5fdb:  sub edi, esi
 80a5fdd:  test ecx, ecx
 80a5fdf:  jle 80a63db
 80a5fe5:  mov edx, DWORD PTR [ebp-0x1dc]
 80a5feb:  mov eax, edi
 80a5fed:  shl eax, 0x5
 80a5ff0:  lea ebx, [eax+edx]
 80a5ff3:  cmp ebx, 0x35
 80a5ff6:  jg 80a6318
 80a5ffc:  mov eax, DWORD PTR [ebp-0x20]
 80a5fff:  mov DWORD PTR [ebp-0x180], 0x0
 80a6009:  mov DWORD PTR [ebp-0x20], 0x0
 80a6010:  mov DWORD PTR [ebp-0x1c], eax
 80a6013:  mov DWORD PTR [ebp-0x1dc], ebx
 80a6019:  test esi, esi
 80a601b:  jle 80a6046
 80a601d:  mov ecx, DWORD PTR [ebp-0x208]
 80a6023:  lea eax, [edi+esi]
 80a6026:  lea edx, [ecx+esi*4-0x4]
 80a602a:  lea ebx, [ecx+eax*4]
 80a602d:  lea ecx, [ebp-0xbc]
 80a6033:  nop
 80a6034:  lea esi, [esi]
 80a6038:  mov eax, DWORD PTR [edx]
 80a603a:  sub edx, 0x4
 80a603d:  mov DWORD PTR [ebx], eax
 80a603f:  sub ebx, 0x4
 80a6042:  cmp edx, ecx
 80a6044:  jne 80a6038
 80a6046:  test edi, edi
 80a6048:  js 80a6066
 80a604a:  mov ebx, DWORD PTR [ebp-0x208]
 80a6050:  xor eax, eax
 80a6052:  lea esi, [esi]
 80a6058:  mov DWORD PTR [ebx+eax*4], 0x0
 80a605f:  add eax, 0x1
 80a6062:  cmp edi, eax
 80a6064:  jge 80a6058
 80a6066:  mov esi, DWORD PTR [ebp-0x1e0]
 80a606c:  lea edi, [esi+0x1]
 80a606f:  mov ebx, DWORD PTR [ebp+esi*4-0xb8]
 80a6076:  mov DWORD PTR [ebp-0x204], edi
 80a607c:  xor edi, edi
 80a607e:  cmp DWORD PTR [ebp-0x1dc], 0x35
 80a6085:  mov DWORD PTR [ebp+esi*4-0x150], 0x0
 80a6090:  jle 80a510f
 80a6096:  jmp 80a528a
 80a609b:  mov DWORD PTR [esp+0x8], 0x1
 80a60a3:  lea eax, [ebp-0x20]
 80a60a6:  mov DWORD PTR [esp+0x4], 0x1f
 80a60ae:  mov DWORD PTR [esp], ebx
 80a60b1:  mov ecx, DWORD PTR [ebp-0x1e8]
 80a60b7:  call 80a41a0
 80a60bc:  jmp 80a4550
 80a60c1:  cmp DWORD PTR [ebp-0x1cc], 0xff
 80a60c8:  je 80a6303
 80a60ce:  mov eax, gs:0x0
 80a60d4:  mov edx, 0xffffffe8
 80a60da:  mov DWORD PTR [eax+edx], 0x22
 80a60e1:  mov eax, DWORD PTR [ebp-0x1bc]
 80a60e7:  test eax, eax
 80a60e9:  jne 80a6303
 80a60ef:  mov eax, DWORD PTR [ebp-0x1e8]
 80a60f5:  test eax, eax
 80a60f7:  jne 80a64e8
 80a60fd:  fld DWORD PTR ds:0x80c6d00
 80a6103:  add ebx, 0x1
 80a6106:  movzx eax, BYTE PTR [ebx]
 80a6109:  sub eax, 0x30
 80a610c:  cmp al, 0x9
 80a610e:  jbe 80a6103
 80a6110:  mov eax, DWORD PTR [ebp+0xc]
 80a6113:  fld st(0)
 80a6115:  test eax, eax
 80a6117:  je 80a454a
 80a611d:  fstp st(0)
 80a611f:  mov ecx, DWORD PTR [ebp+0xc]
 80a6122:  mov DWORD PTR [ecx], ebx
 80a6124:  jmp 80a4550
 80a6129:  mov ecx, DWORD PTR [edx+0x2c]
 80a612c:  mov DWORD PTR [ebp-0x1c0], ecx
 80a6132:  movzx eax, BYTE PTR [ecx]
 80a6135:  sub eax, 0x1
 80a6138:  cmp al, 0x7d
 80a613a:  ja 80a443d
 80a6140:  mov ebx, DWORD PTR [edx+0x28]
 80a6143:  mov DWORD PTR [ebp-0x1c4], ebx
 80a6149:  cmp BYTE PTR [ebx], 0x0
 80a614c:  jne 80a4451
 80a6152:  jmp 80a443d
 80a6157:  mov ebx, DWORD PTR [ebp+0x14]
 80a615a:  mov ecx, DWORD PTR [ebx+0x38]
 80a615d:  mov ebx, edi
 80a615f:  nop
 80a6160:  add ebx, 0x1
 80a6163:  movzx edx, BYTE PTR [ebx]
 80a6166:  lea eax, [edx-0x30]
 80a6169:  cmp al, 0x9
 80a616b:  jbe 80a6160
 80a616d:  movsx eax, dl
 80a6170:  mov eax, DWORD PTR [ecx+eax*4]
 80a6173:  sub eax, 0x61
 80a6176:  cmp al, 0x19
 80a6178:  jbe 80a6160
 80a617a:  cmp dl, 0x5f
 80a617d:  je 80a6160
 80a617f:  cmp dl, 0x29
 80a6182:  jne 80a5662
 80a6188:  mov esi, DWORD PTR [ebp+0x14]
 80a618b:  lea eax, [ebp-0x18]
 80a618e:  mov DWORD PTR [esp+0x4], eax
 80a6192:  lea eax, [edi+0x1]
 80a6195:  mov DWORD PTR [esp+0xc], 0x0
 80a619d:  mov DWORD PTR [esp+0x8], 0x0
 80a61a5:  mov DWORD PTR [esp+0x10], esi
 80a61a9:  mov DWORD PTR [esp], eax
 80a61ac:  call 80a1420
 80a61b1:  cmp DWORD PTR [ebp-0x18], ebx
 80a61b4:  je 80a653c
 80a61ba:  fld DWORD PTR ds:0x80c6d08
 80a61c0:  lea edi, [ebx+0x1]
 80a61c3:  jmp 80a5668
 80a61c8:  lea eax, [edx-0x14]
 80a61cb:  mov DWORD PTR [esp+0xc], eax
 80a61cf:  lea edx, [ebp-0x20]
 80a61d2:  mov DWORD PTR [esp+0x8], esi
 80a61d6:  mov eax, DWORD PTR [ebp-0x208]
 80a61dc:  mov DWORD PTR [esp+0x4], eax
 80a61e0:  mov eax, 0x2
 80a61e5:  sub eax, esi
 80a61e7:  mov DWORD PTR [ebp-0x214], edx
 80a61ed:  lea eax, [edx+eax*4]
 80a61f0:  mov DWORD PTR [esp], eax
 80a61f3:  call 808c220
 80a61f8:  mov edx, 0x1
 80a61fd:  sub edx, DWORD PTR [ebp-0x10]
 80a6200:  test edx, edx
 80a6202:  mov DWORD PTR [ebp+edx*4-0x20], eax
 80a6206:  jle 80a5582
 80a620c:  mov ebx, DWORD PTR [ebp-0x214]
 80a6212:  xor edx, edx
 80a6214:  mov ecx, 0x1
 80a6219:  mov eax, ecx
 80a621b:  sub eax, DWORD PTR [ebp-0x10]
 80a621e:  mov DWORD PTR [ebx+edx*4], 0x0
 80a6225:  add edx, 0x1
 80a6228:  cmp eax, edx
 80a622a:  jg 80a6219
 80a622c:  jmp 80a5582
 80a6231:  mov eax, DWORD PTR [ebp-0x1e0]
 80a6237:  mov DWORD PTR [esp+0x4], esi
 80a623b:  shl eax, 0x2
 80a623e:  mov DWORD PTR [esp+0x8], eax
 80a6242:  mov edi, DWORD PTR [ebp-0x220]
 80a6248:  mov DWORD PTR [esp], edi
 80a624b:  call 804efc0
 80a6250:  jmp 80a4f66
 80a6255:  mov edx, DWORD PTR [ebp-0x1b0]
 80a625b:  lea ecx, [ebp-0x20]
 80a625e:  mov DWORD PTR [ebp-0x214], ecx
 80a6264:  mov ebx, DWORD PTR [ebp+edx*4-0xb8]
 80a626b:  jmp 80a5ee6
 80a6270:  mov edi, DWORD PTR [ebp-0x1c4]
 80a6276:  mov DWORD PTR [ebp-0x168], esi
 80a627c:  movzx ecx, BYTE PTR [edi]
 80a627f:  cmp bl, 0x30
 80a6282:  je 80a62c9
 80a6284:  test cl, cl
 80a6286:  mov eax, 0xffffffff
 80a628b:  je 80a62c3
 80a628d:  cmp bl, cl
 80a628f:  jne 80a45bd
 80a6295:  xor eax, eax
 80a6297:  nop
 80a6298:  jmp 80a62af
 80a629a:  lea esi, [esi]
 80a62a0:  mov edi, DWORD PTR [ebp-0x168]
 80a62a6:  cmp dl, BYTE PTR [edi+eax]
 80a62a9:  jne 80a45bd
 80a62af:  mov edi, DWORD PTR [ebp-0x1c4]
 80a62b5:  add eax, 0x1
 80a62b8:  movzx edx, BYTE PTR [edi+eax]
 80a62bc:  test dl, dl
 80a62be:  jne 80a62a0
 80a62c0:  sub eax, 0x1
 80a62c3:  add DWORD PTR [ebp-0x168], eax
 80a62c9:  add DWORD PTR [ebp-0x168], 0x1
 80a62d0:  mov eax, DWORD PTR [ebp-0x168]
 80a62d6:  movzx ebx, BYTE PTR [eax]
 80a62d9:  jmp 80a627f
 80a62db:  mov edi, eax
 80a62dd:  mov DWORD PTR [ebp-0x1d0], 0x0
 80a62e7:  mov DWORD PTR [ebp-0x1cc], 0x0
 80a62f1:  jmp 80a48f0
 80a62f6:  mov DWORD PTR [ebp+eax*4-0x20], 0x0
 80a62fe:  jmp 80a5f2f
 80a6303:  mov eax, DWORD PTR [ebp-0x1e8]
 80a6309:  test eax, eax
 80a630b:  jne 80a644d
 80a6311:  fldz
 80a6313:  jmp 80a6103
 80a6318:  mov ecx, DWORD PTR [ebp-0x1dc]
 80a631e:  mov DWORD PTR [ebp-0x180], 0x35
 80a6328:  sub DWORD PTR [ebp-0x180], ecx
 80a632e:  cmp DWORD PTR [ebp-0x180], 0x1f
 80a6335:  jg 80a64f3
 80a633b:  mov edx, DWORD PTR [ebp-0x180]
 80a6341:  test edx, edx
 80a6343:  je 80a6013
 80a6349:  mov eax, DWORD PTR [ebp-0x180]
 80a634f:  mov DWORD PTR [esp+0x8], 0x2
 80a6357:  mov DWORD PTR [esp+0xc], eax
 80a635b:  mov edx, DWORD PTR [ebp-0x214]
 80a6361:  mov DWORD PTR [esp+0x4], edx
 80a6365:  mov DWORD PTR [esp], edx
 80a6368:  call 808c1c0
 80a636d:  mov esi, DWORD PTR [ebp-0x10]
 80a6370:  jmp 80a6013
 80a6375:  mov ecx, DWORD PTR [ebp-0x1c4]
 80a637b:  mov edx, 0xffffffff
 80a6380:  movzx eax, BYTE PTR [ecx]
 80a6383:  test al, al
 80a6385:  je 80a63ba
 80a6387:  cmp bl, al
 80a6389:  jne 80a46ee
 80a638f:  xor eax, eax
 80a6391:  jmp 80a63a6
 80a6393:  nop
 80a6394:  lea esi, [esi]
 80a6398:  cmp dl, BYTE PTR [edi+eax]
 80a639b:  nop
 80a639c:  lea esi, [esi]
 80a63a0:  jne 80a46ee
 80a63a6:  mov ecx, DWORD PTR [ebp-0x1c4]
 80a63ac:  add eax, 0x1
 80a63af:  movzx edx, BYTE PTR [ecx+eax]
 80a63b3:  test dl, dl
 80a63b5:  jne 80a6398
 80a63b7:  lea edx, [eax-0x1]
 80a63ba:  add edi, edx
 80a63bc:  jmp 80a47b7
 80a63c1:  cmp BYTE PTR [ebp-0x1ed], 0x0
 80a63c8:  mov eax, DWORD PTR [ebp+0x8]
 80a63cb:  je 80a4645
 80a63d1:  mov eax, edi
 80a63d3:  sub eax, 0x1
 80a63d6:  jmp 80a4645
 80a63db:  mov eax, edi
 80a63dd:  shl eax, 0x5
 80a63e0:  mov DWORD PTR [ebp-0x180], 0x0
 80a63ea:  sub DWORD PTR [ebp-0x14], eax
 80a63ed:  jmp 80a6019
 80a63f2:  mov eax, 0x35
 80a63f7:  sub eax, DWORD PTR [ebp-0x1dc]
 80a63fd:  mov DWORD PTR [ebp-0x18c], eax
 80a6403:  je 80a585a
 80a6409:  mov DWORD PTR [esp+0xc], eax
 80a640d:  mov DWORD PTR [esp+0x8], 0x2
 80a6415:  mov ecx, DWORD PTR [ebp-0x214]
 80a641b:  mov DWORD PTR [esp+0x4], ecx
 80a641f:  mov DWORD PTR [esp], ecx
 80a6422:  call 808c1c0
 80a6427:  mov edx, DWORD PTR [ebp-0xb8]
 80a642d:  jmp 80a585a
 80a6432:  mov eax, DWORD PTR [ebp-0x1dc]
 80a6438:  mov DWORD PTR [ebp-0x18c], 0x0
 80a6442:  sub eax, 0x20
 80a6445:  mov DWORD PTR [ebp-0x14], eax
 80a6448:  jmp 80a5861
 80a644d:  fldz
 80a644f:  fchs
 80a6451:  jmp 80a6103
 80a6456:  mov ebx, 0x2
 80a645b:  lea ecx, [ebp-0x20]
 80a645e:  mov edx, ebx
 80a6460:  lea eax, [esi*4]
 80a6467:  sub edx, esi
 80a6469:  mov DWORD PTR [ebp-0x214], ecx
 80a646f:  lea edx, [ecx+edx*4]
 80a6472:  mov DWORD PTR [esp+0x8], eax
 80a6476:  mov esi, DWORD PTR [ebp-0x208]
 80a647c:  mov DWORD PTR [esp], edx
 80a647f:  mov DWORD PTR [esp+0x4], esi
 80a6483:  call 804efc0
 80a6488:  sub ebx, DWORD PTR [ebp-0x10]
 80a648b:  test ebx, ebx
 80a648d:  jle 80a5582
 80a6493:  xor edx, edx
 80a6495:  mov ecx, 0x2
 80a649a:  mov eax, DWORD PTR [ebp-0x214]
 80a64a0:  mov DWORD PTR [eax+edx*4], 0x0
 80a64a7:  mov eax, ecx
 80a64a9:  add edx, 0x1
 80a64ac:  sub eax, DWORD PTR [ebp-0x10]
 80a64af:  cmp eax, edx
 80a64b1:  jg 80a649a
 80a64b3:  jmp 80a5582
 80a64b8:  mov edx, 0xffffffe8
 80a64be:  mov eax, gs:0x0
 80a64c4:  mov DWORD PTR [eax+edx], 0x22
 80a64cb:  jmp 80a4650
 80a64d0:  mov edx, 0xffffffe8
 80a64d6:  mov eax, gs:0x0
 80a64dc:  mov DWORD PTR [eax+edx], 0x22
 80a64e3:  jmp 80a5614
 80a64e8:  fld DWORD PTR ds:0x80c6d04
 80a64ee:  jmp 80a6103
 80a64f3:  mov eax, DWORD PTR [ebp-0x180]
 80a64f9:  mov DWORD PTR [esp+0x8], 0x2
 80a6501:  and eax, 0x1f
 80a6504:  mov DWORD PTR [esp+0xc], eax
 80a6508:  mov esi, DWORD PTR [ebp-0x214]
 80a650e:  lea eax, [ebp-0x1c]
 80a6511:  mov DWORD PTR [esp], eax
 80a6514:  mov DWORD PTR [esp+0x4], esi
 80a6518:  call 808c1c0
 80a651d:  mov esi, DWORD PTR [ebp-0x10]
 80a6520:  mov DWORD PTR [ebp-0x20], 0x0
 80a6527:  jmp 80a6013
 80a652c:  neg edx
 80a652e:  add edx, 0x20
 80a6531:  mov DWORD PTR [ebp-0x1dc], edx
 80a6537:  jmp 80a5ce8
 80a653c:  and edx, 0xfffff
 80a6542:  xor ecx, ecx
 80a6544:  mov edi, edx
 80a6546:  mov esi, 0x80000
 80a654b:  or edi, eax
 80a654d:  je 80a6553
 80a654f:  mov esi, edx
 80a6551:  mov ecx, eax
 80a6553:  fld DWORD PTR ds:0x80c6d08
 80a6559:  fstp QWORD PTR [ebp-0x1f8]
 80a655f:  mov eax, DWORD PTR [ebp-0x1f4]
 80a6565:  mov DWORD PTR [ebp-0x1f8], ecx
 80a656b:  and eax, 0xfff00000
 80a6570:  or eax, esi
 80a6572:  mov DWORD PTR [ebp-0x1f4], eax
 80a6578:  fld QWORD PTR [ebp-0x1f8]
 80a657e:  jmp 80a61c0
 80a6583:  neg edx
 80a6585:  add edx, 0x20
 80a6588:  mov DWORD PTR [ebp-0x1dc], edx
 80a658e:  jmp 80a5266
 80a6593:  neg edx
 80a6595:  add edx, 0x20
 80a6598:  mov DWORD PTR [ebp-0x1dc], edx
 80a659e:  jmp 80a5912
 80a65a3:  lea esi, [esi]
 80a65a9:  lea edi, [edi]

080a65b0 <__strtod_l>:
 80a65b0:  push ebp
 80a65b1:  mov ebp, esp
 80a65b3:  sub esp, 0x10
 80a65b6:  mov eax, DWORD PTR [ebp+0x10]
 80a65b9:  mov DWORD PTR [esp+0x8], 0x0
 80a65c1:  mov DWORD PTR [esp+0xc], eax
 80a65c5:  mov eax, DWORD PTR [ebp+0xc]
 80a65c8:  mov DWORD PTR [esp+0x4], eax
 80a65cc:  mov eax, DWORD PTR [ebp+0x8]
 80a65cf:  mov DWORD PTR [esp], eax
 80a65d2:  call 80a4420
 80a65d7:  leave
 80a65d8:  ret
 80a65d9:  nop
 80a65da:  nop
 80a65db:  nop
 80a65dc:  nop
 80a65dd:  nop
 80a65de:  nop
 80a65df:  nop

080a65e0 <str_to_mpn>:
 80a65e0:  push ebp
 80a65e1:  mov ebp, esp
 80a65e3:  push edi
 80a65e4:  mov edi, eax
 80a65e6:  push esi
 80a65e7:  xor esi, esi
 80a65e9:  push ebx
 80a65ea:  xor ebx, ebx
 80a65ec:  sub esp, 0x2c
 80a65ef:  mov eax, DWORD PTR [ebp+0x8]
 80a65f2:  mov DWORD PTR [ebp-0x20], ecx
 80a65f5:  add ecx, 0x4
 80a65f8:  mov DWORD PTR [ebp-0x1c], edx
 80a65fb:  mov DWORD PTR [ebp-0x10], 0x0
 80a6602:  mov DWORD PTR [eax], 0x0
 80a6608:  mov DWORD PTR [ebp-0x24], ecx
 80a660b:  jmp 80a6618
 80a660d:  lea esi, [esi]
 80a6610:  mov eax, DWORD PTR [ebp+0x8]
 80a6613:  mov eax, DWORD PTR [eax]
 80a6615:  mov DWORD PTR [ebp-0x10], eax
 80a6618:  movzx ecx, BYTE PTR [edi]
 80a661b:  lea eax, [ecx-0x30]
 80a661e:  cmp al, 0x9
 80a6620:  jbe 80a663a
 80a6622:  mov eax, DWORD PTR [ebp+0x18]
 80a6625:  test eax, eax
 80a6627:  je 80a6634
 80a6629:  mov edx, DWORD PTR [ebp+0x18]
 80a662c:  cmp cl, BYTE PTR [edx]
 80a662e:  je 80a66c0
 80a6634:  add edi, DWORD PTR [ebp+0x14]
 80a6637:  movzx ecx, BYTE PTR [edi]
 80a663a:  sub DWORD PTR [ebp-0x1c], 0x1
 80a663e:  movsx eax, cl
 80a6641:  mov ecx, DWORD PTR [ebp-0x1c]
 80a6644:  lea edx, [esi+esi*4]
 80a6647:  add edi, 0x1
 80a664a:  add ebx, 0x1
 80a664d:  lea esi, [eax+edx*2-0x30]
 80a6651:  test ecx, ecx
 80a6653:  jle 80a6680
 80a6655:  cmp ebx, 0x9
 80a6658:  jne 80a6610
 80a665a:  mov eax, DWORD PTR [ebp-0x10]
 80a665d:  test eax, eax
 80a665f:  jne 80a6710
 80a6665:  mov edx, DWORD PTR [ebp-0x20]
 80a6668:  xor bl, bl
 80a666a:  mov ecx, DWORD PTR [ebp+0x8]
 80a666d:  mov DWORD PTR [edx], esi
 80a666f:  xor esi, esi
 80a6671:  mov DWORD PTR [ecx], 0x1
 80a6677:  jmp 80a6610
 80a6679:  lea esi, [esi]
 80a6680:  mov edx, DWORD PTR [ebp+0xc]
 80a6683:  mov eax, DWORD PTR [edx]
 80a6685:  test eax, eax
 80a6687:  jle 80a6695
 80a6689:  lea edx, [ebx+eax]
 80a668c:  cmp edx, 0x9
 80a668f:  jle 80a6790
 80a6695:  mov edx, DWORD PTR [ebp-0x10]
 80a6698:  mov eax, DWORD PTR [ebx*4+0x80c6da0]
 80a669f:  test edx, edx
 80a66a1:  jne 80a67b3
 80a66a7:  mov eax, DWORD PTR [ebp-0x20]
 80a66aa:  mov edx, DWORD PTR [ebp+0x8]
 80a66ad:  mov DWORD PTR [eax], esi
 80a66af:  mov DWORD PTR [edx], 0x1
 80a66b5:  add esp, 0x2c
 80a66b8:  mov eax, edi
 80a66ba:  pop ebx
 80a66bb:  pop esi
 80a66bc:  pop edi
 80a66bd:  pop ebp
 80a66be:  ret
 80a66bf:  nop
 80a66c0:  movzx edx, BYTE PTR [edx+0x1]
 80a66c4:  mov DWORD PTR [ebp-0x28], 0x1
 80a66cb:  test dl, dl
 80a66cd:  je 80a66ff
 80a66cf:  cmp dl, BYTE PTR [edi+0x1]
 80a66d2:  mov eax, 0x1
 80a66d7:  je 80a66ee
 80a66d9:  jmp 80a6634
 80a66de:  xchg ax, ax
 80a66e0:  cmp dl, BYTE PTR [edi+eax]
 80a66e3:  nop
 80a66e4:  lea esi, [esi]
 80a66e8:  jne 80a6634
 80a66ee:  mov ecx, DWORD PTR [ebp+0x18]
 80a66f1:  add eax, 0x1
 80a66f4:  mov DWORD PTR [ebp-0x28], eax
 80a66f7:  movzx edx, BYTE PTR [ecx+eax]
 80a66fb:  test dl, dl
 80a66fd:  jne 80a66e0
 80a66ff:  add edi, DWORD PTR [ebp-0x28]
 80a6702:  movzx ecx, BYTE PTR [edi]
 80a6705:  jmp 80a663a
 80a670a:  lea esi, [esi]
 80a6710:  mov DWORD PTR [esp+0xc], 0x3b9aca00
 80a6718:  mov eax, DWORD PTR [ebp-0x10]
 80a671b:  mov DWORD PTR [esp+0x8], eax
 80a671f:  mov edx, DWORD PTR [ebp-0x20]
 80a6722:  mov DWORD PTR [esp+0x4], edx
 80a6726:  mov DWORD PTR [esp], edx
 80a6729:  call 808c5d0
 80a672e:  mov ecx, DWORD PTR [ebp+0x8]
 80a6731:  mov ebx, DWORD PTR [ecx]
 80a6733:  mov ecx, DWORD PTR [ebp-0x24]
 80a6736:  mov DWORD PTR [ebp-0x18], eax
 80a6739:  mov eax, DWORD PTR [ebp-0x20]
 80a673c:  mov edx, DWORD PTR [eax]
 80a673e:  lea eax, [esi+edx]
 80a6741:  mov esi, DWORD PTR [ebp-0x20]
 80a6744:  cmp edx, eax
 80a6746:  mov DWORD PTR [esi], eax
 80a6748:  jbe 80a6768
 80a674a:  lea esi, [esi]
 80a6750:  sub ebx, 0x1
 80a6753:  je 80a682b
 80a6759:  mov eax, DWORD PTR [ecx]
 80a675b:  add ecx, 0x4
 80a675e:  add eax, 0x1
 80a6761:  test eax, eax
 80a6763:  mov DWORD PTR [ecx-0x4], eax
 80a6766:  je 80a6750
 80a6768:  xor eax, eax
 80a676a:  mov edx, DWORD PTR [ebp-0x18]
 80a676d:  xor ebx, ebx
 80a676f:  xor esi, esi
 80a6771:  add edx, eax
 80a6773:  je 80a6610
 80a6779:  mov ecx, DWORD PTR [ebp+0x8]
 80a677c:  xor ebx, ebx
 80a677e:  mov esi, DWORD PTR [ebp-0x20]
 80a6781:  mov eax, DWORD PTR [ecx]
 80a6783:  mov DWORD PTR [esi+eax*4], edx
 80a6786:  xor esi, esi
 80a6788:  add DWORD PTR [ecx], 0x1
 80a678b:  jmp 80a6610
 80a6790:  imul esi, DWORD PTR [eax*4+0x80c6da0]
 80a6798:  mov eax, DWORD PTR [edx*4+0x80c6da0]
 80a679f:  mov edx, DWORD PTR [ebp-0x10]
 80a67a2:  mov ecx, DWORD PTR [ebp+0xc]
 80a67a5:  test edx, edx
 80a67a7:  mov DWORD PTR [ecx], 0x0
 80a67ad:  je 80a66a7
 80a67b3:  mov DWORD PTR [esp+0xc], eax
 80a67b7:  mov ecx, DWORD PTR [ebp-0x10]
 80a67ba:  mov DWORD PTR [esp+0x8], ecx
 80a67be:  mov eax, DWORD PTR [ebp-0x20]
 80a67c1:  mov DWORD PTR [esp+0x4], eax
 80a67c5:  mov DWORD PTR [esp], eax
 80a67c8:  call 808c5d0
 80a67cd:  mov edx, DWORD PTR [ebp+0x8]
 80a67d0:  mov ecx, DWORD PTR [ebp-0x20]
 80a67d3:  mov ebx, DWORD PTR [edx]
 80a67d5:  mov edx, DWORD PTR [ecx]
 80a67d7:  add ecx, 0x4
 80a67da:  mov DWORD PTR [ebp-0x14], eax
 80a67dd:  lea eax, [esi+edx]
 80a67e0:  mov esi, DWORD PTR [ebp-0x20]
 80a67e3:  cmp edx, eax
 80a67e5:  mov DWORD PTR [esi], eax
 80a67e7:  jbe 80a6804
 80a67e9:  lea esi, [esi]
 80a67f0:  sub ebx, 0x1
 80a67f3:  je 80a6835
 80a67f5:  mov eax, DWORD PTR [ecx]
 80a67f7:  add ecx, 0x4
 80a67fa:  add eax, 0x1
 80a67fd:  test eax, eax
 80a67ff:  mov DWORD PTR [ecx-0x4], eax
 80a6802:  je 80a67f0
 80a6804:  xor eax, eax
 80a6806:  mov edx, DWORD PTR [ebp-0x14]
 80a6809:  add edx, eax
 80a680b:  je 80a66b5
 80a6811:  mov ecx, DWORD PTR [ebp+0x8]
 80a6814:  mov esi, DWORD PTR [ebp-0x20]
 80a6817:  mov eax, DWORD PTR [ecx]
 80a6819:  mov DWORD PTR [esi+eax*4], edx
 80a681c:  add eax, 0x1
 80a681f:  mov DWORD PTR [ecx], eax
 80a6821:  add esp, 0x2c
 80a6824:  mov eax, edi
 80a6826:  pop ebx
 80a6827:  pop esi
 80a6828:  pop edi
 80a6829:  pop ebp
 80a682a:  ret
 80a682b:  mov eax, 0x1
 80a6830:  jmp 80a676a
 80a6835:  mov eax, 0x1
 80a683a:  jmp 80a6806
 80a683c:  lea esi, [esi]

080a6840 <round_and_return>:
 80a6840:  push ebp
 80a6841:  mov ebp, esp
 80a6843:  sub esp, 0x2c
 80a6846:  mov DWORD PTR [ebp-0x4], edi
 80a6849:  mov edi, eax
 80a684b:  mov eax, DWORD PTR [ebp+0x8]
 80a684e:  mov DWORD PTR [ebp-0x10], ecx
 80a6851:  mov ecx, DWORD PTR [ebp+0x10]
 80a6854:  cmp edx, 0xffffc002
 80a685a:  mov DWORD PTR [ebp-0xc], ebx
 80a685d:  mov ebx, edx
 80a685f:  mov DWORD PTR [ebp-0x8], esi
 80a6862:  mov esi, DWORD PTR [ebp+0xc]
 80a6865:  mov DWORD PTR [ebp-0x14], eax
 80a6868:  mov DWORD PTR [ebp-0x18], ecx
 80a686b:  jge 80a68e0
 80a686d:  mov DWORD PTR [ebp-0x1c], 0xffffc002
 80a6874:  sub DWORD PTR [ebp-0x1c], edx
 80a6877:  cmp DWORD PTR [ebp-0x1c], 0x40
 80a687b:  jg 80a69b0
 80a6881:  mov eax, 0x1
 80a6886:  mov ecx, esi
 80a6888:  shl eax, cl
 80a688a:  sub eax, 0x1
 80a688d:  test DWORD PTR [ebp-0x14], eax
 80a6890:  setne al
 80a6893:  movzx eax, al
 80a6896:  or DWORD PTR [ebp-0x18], eax
 80a6899:  cmp DWORD PTR [ebp-0x1c], 0x40
 80a689d:  je 80a69f8
 80a68a3:  cmp DWORD PTR [ebp-0x1c], 0x1f
 80a68a7:  jg 80a6a60
 80a68ad:  mov eax, DWORD PTR [edi]
 80a68af:  mov ebx, 0xffffc001
 80a68b4:  mov ecx, DWORD PTR [ebp-0x1c]
 80a68b7:  mov esi, DWORD PTR [ebp-0x1c]
 80a68ba:  mov DWORD PTR [ebp-0x14], eax
 80a68bd:  mov DWORD PTR [esp+0xc], ecx
 80a68c1:  mov DWORD PTR [esp+0x8], 0x2
 80a68c9:  sub esi, 0x1
 80a68cc:  mov DWORD PTR [esp+0x4], edi
 80a68d0:  mov DWORD PTR [esp], edi
 80a68d3:  call 808c220
 80a68d8:  mov eax, DWORD PTR [ebp-0x14]
 80a68db:  nop
 80a68dc:  lea esi, [esi]
 80a68e0:  mov ecx, esi
 80a68e2:  shr eax, cl
 80a68e4:  test al, 0x1
 80a68e6:  jne 80a6918
 80a68e8:  cmp ebx, 0x4000
 80a68ee:  jle 80a6980
 80a68f4:  mov eax, DWORD PTR [ebp-0x10]
 80a68f7:  test eax, eax
 80a68f9:  jne 80a69a0
 80a68ff:  fld DWORD PTR ds:0x80c6d00
 80a6905:  mov ebx, DWORD PTR [ebp-0xc]
 80a6908:  mov esi, DWORD PTR [ebp-0x8]
 80a690b:  mov edi, DWORD PTR [ebp-0x4]
 80a690e:  mov esp, ebp
 80a6910:  pop ebp
 80a6911:  ret
 80a6912:  lea esi, [esi]
 80a6918:  mov eax, DWORD PTR [ebp-0x18]
 80a691b:  test eax, eax
 80a691d:  je 80a69d0
 80a6923:  mov edx, DWORD PTR [edi]
 80a6925:  lea eax, [edx+0x1]
 80a6928:  lea esi, [edi+0x4]
 80a692b:  cmp edx, eax
 80a692d:  mov DWORD PTR [edi], eax
 80a692f:  mov ecx, esi
 80a6931:  jbe 80a6a38
 80a6937:  mov eax, DWORD PTR [edi+0x4]
 80a693a:  add eax, 0x1
 80a693d:  test eax, eax
 80a693f:  mov DWORD PTR [edi+0x4], eax
 80a6942:  jne 80a6a38
 80a6948:  add ebx, 0x1
 80a694b:  mov DWORD PTR [esp+0xc], 0x1
 80a6953:  mov DWORD PTR [esp+0x8], 0x2
 80a695b:  mov DWORD PTR [esp+0x4], edi
 80a695f:  mov DWORD PTR [esp], edi
 80a6962:  call 808c220
 80a6967:  or DWORD PTR [esi], 0x80000000
 80a696d:  cmp ebx, 0x4000
 80a6973:  jg 80a68f4
 80a6979:  lea esi, [esi]
 80a6980:  mov eax, DWORD PTR [ebp-0x10]
 80a6983:  mov DWORD PTR [ebp+0xc], ebx
 80a6986:  mov esi, DWORD PTR [ebp-0x8]
 80a6989:  mov DWORD PTR [ebp+0x8], edi
 80a698c:  mov ebx, DWORD PTR [ebp-0xc]
 80a698f:  mov edi, DWORD PTR [ebp-0x4]
 80a6992:  mov DWORD PTR [ebp+0x10], eax
 80a6995:  mov esp, ebp
 80a6997:  pop ebp
 80a6998:  jmp 80a8d40
 80a699d:  lea esi, [esi]
 80a69a0:  fld DWORD PTR ds:0x80c6d04
 80a69a6:  jmp 80a6905
 80a69ab:  nop
 80a69ac:  lea esi, [esi]
 80a69b0:  mov edx, 0xffffffe8
 80a69b6:  fldz
 80a69b8:  mov eax, gs:0x0
 80a69be:  mov DWORD PTR [eax+edx], 0x21
 80a69c5:  jmp 80a6905
 80a69ca:  lea esi, [esi]
 80a69d0:  mov edx, DWORD PTR [edi]
 80a69d2:  test dl, 0x1
 80a69d5:  jne 80a6925
 80a69db:  mov eax, 0x1
 80a69e0:  mov ecx, esi
 80a69e2:  shl eax, cl
 80a69e4:  sub eax, 0x1
 80a69e7:  test DWORD PTR [ebp-0x14], eax
 80a69ea:  je 80a68e8
 80a69f0:  jmp 80a6925
 80a69f5:  lea esi, [esi]
 80a69f8:  mov eax, DWORD PTR [edi+0x4]
 80a69fb:  mov ebx, 0xffffc001
 80a6a00:  mov esi, 0x1f
 80a6a05:  mov DWORD PTR [edi+0x4], 0x0
 80a6a0c:  mov DWORD PTR [ebp-0x14], eax
 80a6a0f:  xor eax, eax
 80a6a11:  cmp DWORD PTR [edi], 0x0
 80a6a14:  mov DWORD PTR [edi], 0x0
 80a6a1a:  setne al
 80a6a1d:  xor edx, edx
 80a6a1f:  or eax, DWORD PTR [ebp-0x18]
 80a6a22:  cmp DWORD PTR [ebp-0x14], 0x0
 80a6a26:  setne dl
 80a6a29:  mov DWORD PTR [ebp-0x18], edx
 80a6a2c:  or DWORD PTR [ebp-0x18], eax
 80a6a2f:  mov eax, DWORD PTR [ebp-0x14]
 80a6a32:  jmp 80a68e0
 80a6a37:  nop
 80a6a38:  cmp ebx, 0xffffc001
 80a6a3e:  jne 80a68e8
 80a6a44:  mov eax, DWORD PTR [ecx]
 80a6a46:  test eax, eax
 80a6a48:  jns 80a6980
 80a6a4e:  mov ebx, 0xffffc002
 80a6a53:  nop
 80a6a54:  lea esi, [esi]
 80a6a58:  jmp 80a6980
 80a6a5d:  lea esi, [esi]
 80a6a60:  mov eax, DWORD PTR [ebp-0x1c]
 80a6a63:  sub eax, 0x1
 80a6a66:  mov edx, eax
 80a6a68:  mov esi, eax
 80a6a6a:  sar edx, 0x5
 80a6a6d:  and esi, 0x1f
 80a6a70:  mov ecx, DWORD PTR [edi+edx*4]
 80a6a73:  sub edx, 0x1
 80a6a76:  mov DWORD PTR [ebp-0x14], ecx
 80a6a79:  jne 80a6a86
 80a6a7b:  xor eax, eax
 80a6a7d:  cmp DWORD PTR [edi], 0x0
 80a6a80:  setne al
 80a6a83:  or DWORD PTR [ebp-0x18], eax
 80a6a86:  mov ecx, esi
 80a6a88:  mov eax, 0x1
 80a6a8d:  shl eax, cl
 80a6a8f:  mov ebx, 0xffffc001
 80a6a94:  sub eax, 0x1
 80a6a97:  test DWORD PTR [ebp-0x14], eax
 80a6a9a:  setne al
 80a6a9d:  movzx eax, al
 80a6aa0:  or DWORD PTR [ebp-0x18], eax
 80a6aa3:  mov eax, DWORD PTR [ebp-0x1c]
 80a6aa6:  mov DWORD PTR [esp+0x8], 0x1
 80a6aae:  mov DWORD PTR [esp], edi
 80a6ab1:  and eax, 0x1f
 80a6ab4:  mov DWORD PTR [esp+0xc], eax
 80a6ab8:  lea eax, [edi+0x4]
 80a6abb:  mov DWORD PTR [esp+0x4], eax
 80a6abf:  call 808c220
 80a6ac4:  mov eax, DWORD PTR [ebp-0x14]
 80a6ac7:  mov DWORD PTR [edi+0x4], 0x0
 80a6ace:  jmp 80a68e0
 80a6ad3:  lea esi, [esi]
 80a6ad9:  lea edi, [edi]

080a6ae0 <____strtold_l_internal>:
 80a6ae0:  push ebp
 80a6ae1:  mov ebp, esp
 80a6ae3:  push edi
 80a6ae4:  push esi
 80a6ae5:  push ebx
 80a6ae6:  sub esp, 0x1148
 80a6aec:  mov eax, DWORD PTR [ebp+0x14]
 80a6aef:  mov edx, DWORD PTR [eax+0x4]
 80a6af2:  mov eax, DWORD PTR [ebp+0x10]
 80a6af5:  test eax, eax
 80a6af7:  jne 80a87e5
 80a6afd:  mov DWORD PTR [ebp-0x10d4], 0x0
 80a6b07:  mov DWORD PTR [ebp-0x10d0], 0x0
 80a6b11:  mov edx, DWORD PTR [edx+0x24]
 80a6b14:  mov DWORD PTR [ebp-0x10d8], edx
 80a6b1a:  mov DWORD PTR [esp], edx
 80a6b1d:  call 804eea0
 80a6b22:  mov edi, DWORD PTR [ebp+0x14]
 80a6b25:  mov esi, DWORD PTR [ebp+0x8]
 80a6b28:  mov DWORD PTR [ebp-0x14], 0x0
 80a6b2f:  mov edi, DWORD PTR [edi+0x34]
 80a6b32:  sub esi, 0x1
 80a6b35:  mov DWORD PTR [ebp-0x1104], eax
 80a6b3b:  mov DWORD PTR [ebp-0x1118], edi
 80a6b41:  mov edx, edi
 80a6b43:  nop
 80a6b44:  lea esi, [esi]
 80a6b48:  add esi, 0x1
 80a6b4b:  movzx ebx, BYTE PTR [esi]
 80a6b4e:  movsx eax, bl
 80a6b51:  test BYTE PTR [edx+eax*2+0x1], 0x20
 80a6b56:  jne 80a6b48
 80a6b58:  cmp bl, 0x2d
 80a6b5b:  je 80a7288
 80a6b61:  cmp bl, 0x2b
 80a6b64:  mov BYTE PTR [ebp-0x105d], bl
 80a6b6a:  mov DWORD PTR [ebp-0x10f8], 0x0
 80a6b74:  je 80a6d38
 80a6b7a:  mov ecx, DWORD PTR [ebp-0x10d8]
 80a6b80:  movzx ecx, BYTE PTR [ecx]
 80a6b83:  mov BYTE PTR [ebp-0x1079], cl
 80a6b89:  xor ecx, ecx
 80a6b8b:  cmp BYTE PTR [ebp-0x1079], 0x0
 80a6b92:  je 80a6bbd
 80a6b94:  xor eax, eax
 80a6b96:  cmp BYTE PTR [ebp-0x1079], bl
 80a6b9c:  je 80a6baa
 80a6b9e:  jmp 80a6bd0
 80a6ba0:  cmp dl, BYTE PTR [esi+eax]
 80a6ba3:  nop
 80a6ba4:  lea esi, [esi]
 80a6ba8:  jne 80a6bd0
 80a6baa:  mov edi, DWORD PTR [ebp-0x10d8]
 80a6bb0:  add eax, 0x1
 80a6bb3:  mov ecx, eax
 80a6bb5:  movzx edx, BYTE PTR [edi+eax]
 80a6bb9:  test dl, dl
 80a6bbb:  jne 80a6ba0
 80a6bbd:  movzx eax, BYTE PTR [esi+ecx]
 80a6bc1:  cmp al, 0x2f
 80a6bc3:  jle 80a6bd0
 80a6bc5:  cmp al, 0x39
 80a6bc7:  jle 80a6c20
 80a6bc9:  lea esi, [esi]
 80a6bd0:  lea eax, [ebx-0x30]
 80a6bd3:  cmp al, 0x9
 80a6bd5:  jbe 80a6c20
 80a6bd7:  mov eax, ds:0x80b0418
 80a6bdc:  movsx edx, bl
 80a6bdf:  movzx eax, BYTE PTR [eax+edx*4]
 80a6be3:  cmp al, 0x69
 80a6be5:  je 80a7c6f
 80a6beb:  cmp al, 0x6e
 80a6bed:  je 80a7ceb
 80a6bf3:  mov ebx, DWORD PTR [ebp+0xc]
 80a6bf6:  test ebx, ebx
 80a6bf8:  je 80a6d26
 80a6bfe:  mov ecx, DWORD PTR [ebp+0x8]
 80a6c01:  fldz
 80a6c03:  mov edx, DWORD PTR [ebp+0xc]
 80a6c06:  mov DWORD PTR [edx], ecx
 80a6c08:  jmp 80a6c10
 80a6c0a:  fstp st(1)
 80a6c0c:  lea esi, [esi]
 80a6c10:  add esp, 0x1148
 80a6c16:  pop ebx
 80a6c17:  pop esi
 80a6c18:  pop edi
 80a6c19:  pop ebp
 80a6c1a:  ret
 80a6c1b:  nop
 80a6c1c:  lea esi, [esi]
 80a6c20:  cmp bl, 0x30
 80a6c23:  je 80a73a0
 80a6c29:  mov edi, DWORD PTR [ebp+0x14]
 80a6c2c:  mov DWORD PTR [ebp-0x10f4], 0xa
 80a6c36:  mov BYTE PTR [ebp-0x1089], 0x1
 80a6c3d:  mov BYTE PTR [ebp-0x10fd], 0x0
 80a6c44:  mov edi, DWORD PTR [edi+0x38]
 80a6c47:  mov DWORD PTR [ebp-0x111c], edi
 80a6c4d:  mov ecx, DWORD PTR [ebp-0x10d4]
 80a6c53:  test ecx, ecx
 80a6c55:  jne 80a8995
 80a6c5b:  cmp bl, 0x30
 80a6c5e:  mov DWORD PTR [ebp-0x1078], esi
 80a6c64:  jne 80a6c83
 80a6c66:  xchg ax, ax
 80a6c68:  add DWORD PTR [ebp-0x1078], 0x1
 80a6c6f:  mov ecx, DWORD PTR [ebp-0x1078]
 80a6c75:  movzx ebx, BYTE PTR [ecx]
 80a6c78:  cmp bl, 0x30
 80a6c7b:  je 80a6c68
 80a6c7d:  mov BYTE PTR [ebp-0x105d], bl
 80a6c83:  mov edi, DWORD PTR [ebp-0x111c]
 80a6c89:  lea eax, [ebx-0x30]
 80a6c8c:  movsx ecx, bl
 80a6c8f:  cmp al, 0x9
 80a6c91:  mov edx, DWORD PTR [edi+ecx*4]
 80a6c94:  jbe 80a6d88
 80a6c9a:  cmp dl, 0x60
 80a6c9d:  mov ecx, edx
 80a6c9f:  jg 80a73f0
 80a6ca5:  cmp BYTE PTR [ebp-0x1079], 0x0
 80a6cac:  je 80a6d78
 80a6cb2:  movzx edx, BYTE PTR [ebp-0x105d]
 80a6cb9:  xor eax, eax
 80a6cbb:  cmp BYTE PTR [ebp-0x1079], dl
 80a6cc1:  je 80a6d67
 80a6cc7:  cmp BYTE PTR [ebp-0x1089], 0x0
 80a6cce:  je 80a84bc
 80a6cd4:  cmp cl, 0x65
 80a6cd7:  je 80a8483
 80a6cdd:  mov ecx, DWORD PTR [ebp-0x10d0]
 80a6ce3:  mov DWORD PTR [esp+0xc], ecx
 80a6ce7:  mov ebx, DWORD PTR [ebp-0x10d4]
 80a6ced:  mov DWORD PTR [esp+0x8], ebx
 80a6cf1:  mov edi, DWORD PTR [ebp-0x1078]
 80a6cf7:  mov DWORD PTR [esp], esi
 80a6cfa:  mov DWORD PTR [esp+0x4], edi
 80a6cfe:  call 80574b0
 80a6d03:  mov edx, DWORD PTR [ebp+0xc]
 80a6d06:  test edx, edx
 80a6d08:  je 80a6d18
 80a6d0a:  cmp esi, eax
 80a6d0c:  je 80a8a99
 80a6d12:  mov edx, DWORD PTR [ebp+0xc]
 80a6d15:  mov DWORD PTR [edx], eax
 80a6d17:  nop
 80a6d18:  mov eax, DWORD PTR [ebp-0x10f8]
 80a6d1e:  test eax, eax
 80a6d20:  jne 80a73e0
 80a6d26:  add esp, 0x1148
 80a6d2c:  fldz
 80a6d2e:  pop ebx
 80a6d2f:  pop esi
 80a6d30:  pop edi
 80a6d31:  pop ebp
 80a6d32:  ret
 80a6d33:  nop
 80a6d34:  lea esi, [esi]
 80a6d38:  add esi, 0x1
 80a6d3b:  movzx ebx, BYTE PTR [esi]
 80a6d3e:  mov DWORD PTR [ebp-0x10f8], 0x0
 80a6d48:  mov BYTE PTR [ebp-0x105d], bl
 80a6d4e:  jmp 80a6b7a
 80a6d53:  nop
 80a6d54:  lea esi, [esi]
 80a6d58:  mov edi, DWORD PTR [ebp-0x1078]
 80a6d5e:  cmp dl, BYTE PTR [edi+eax]
 80a6d61:  jne 80a6cc7
 80a6d67:  mov edi, DWORD PTR [ebp-0x10d8]
 80a6d6d:  add eax, 0x1
 80a6d70:  movzx edx, BYTE PTR [edi+eax]
 80a6d74:  test dl, dl
 80a6d76:  jne 80a6d58
 80a6d78:  cmp esi, DWORD PTR [ebp-0x1078]
 80a6d7e:  je 80a805e
 80a6d84:  lea esi, [esi]
 80a6d88:  mov edi, DWORD PTR [ebp-0x1078]
 80a6d8e:  mov DWORD PTR [ebp-0x10e4], 0x0
 80a6d98:  lea eax, [ebx-0x30]
 80a6d9b:  cmp al, 0x9
 80a6d9d:  jbe 80a6e80
 80a6da3:  cmp DWORD PTR [ebp-0x10f4], 0x10
 80a6daa:  je 80a6e68
 80a6db0:  mov eax, DWORD PTR [ebp-0x10d4]
 80a6db6:  test eax, eax
 80a6db8:  jne 80a8a4d
 80a6dbe:  mov eax, DWORD PTR [ebp-0x10d0]
 80a6dc4:  test eax, eax
 80a6dc6:  je 80a6eb8
 80a6dcc:  cmp esi, edi
 80a6dce:  jae 80a6eb8
 80a6dd4:  mov eax, DWORD PTR [ebp-0x10d0]
 80a6dda:  mov DWORD PTR [esp+0xc], eax
 80a6dde:  mov edx, DWORD PTR [ebp-0x10d4]
 80a6de4:  mov DWORD PTR [esp+0x4], edi
 80a6de8:  mov DWORD PTR [esp], esi
 80a6deb:  mov DWORD PTR [esp+0x8], edx
 80a6def:  call 80574b0
 80a6df4:  cmp edi, eax
 80a6df6:  mov ecx, eax
 80a6df8:  je 80a6e98
 80a6dfe:  cmp esi, eax
 80a6e00:  je 80a84e0
 80a6e06:  cmp DWORD PTR [ebp-0x1078], eax
 80a6e0c:  ja 80a7d51
 80a6e12:  mov edx, DWORD PTR [ebp-0x1078]
 80a6e18:  mov DWORD PTR [ebp-0x106c], 0x0
 80a6e22:  jae 80a8a32
 80a6e28:  movzx eax, BYTE PTR [edx]
 80a6e2b:  mov ebx, DWORD PTR [ebp-0x106c]
 80a6e31:  sub eax, 0x30
 80a6e34:  add ebx, 0x1
 80a6e37:  cmp al, 0x9
 80a6e39:  ja 80a6e41
 80a6e3b:  mov DWORD PTR [ebp-0x106c], ebx
 80a6e41:  add edx, 0x1
 80a6e44:  cmp ecx, edx
 80a6e46:  ja 80a6e28
 80a6e48:  mov edi, ecx
 80a6e4a:  mov ecx, DWORD PTR [ebp-0x106c]
 80a6e50:  mov DWORD PTR [ebp-0x10dc], 0x0
 80a6e5a:  mov DWORD PTR [ebp-0x10e0], ecx
 80a6e60:  jmp 80a6fc8
 80a6e65:  lea esi, [esi]
 80a6e68:  mov edx, DWORD PTR [ebp-0x111c]
 80a6e6e:  movsx ecx, bl
 80a6e71:  mov eax, DWORD PTR [edx+ecx*4]
 80a6e74:  sub eax, 0x61
 80a6e77:  cmp al, 0x5
 80a6e79:  ja 80a6db0
 80a6e7f:  nop
 80a6e80:  add DWORD PTR [ebp-0x10e4], 0x1
 80a6e87:  add edi, 0x1
 80a6e8a:  movzx ebx, BYTE PTR [edi]
 80a6e8d:  mov BYTE PTR [ebp-0x105d], bl
 80a6e93:  jmp 80a6d98
 80a6e98:  mov ecx, DWORD PTR [ebp-0x10d8]
 80a6e9e:  mov esi, DWORD PTR [ebp+0x14]
 80a6ea1:  movzx ecx, BYTE PTR [ecx]
 80a6ea4:  mov esi, DWORD PTR [esi+0x38]
 80a6ea7:  mov BYTE PTR [ebp-0x1079], cl
 80a6ead:  mov DWORD PTR [ebp-0x111c], esi
 80a6eb3:  nop
 80a6eb4:  lea esi, [esi]
 80a6eb8:  cmp DWORD PTR [ebp-0x10e4], 0x1
 80a6ebf:  sbb esi, esi
 80a6ec1:  cmp BYTE PTR [ebp-0x1079], 0x0
 80a6ec8:  mov DWORD PTR [ebp-0x10dc], esi
 80a6ece:  je 80a6f12
 80a6ed0:  mov eax, DWORD PTR [ebp-0x10e4]
 80a6ed6:  xor edx, edx
 80a6ed8:  movsx ecx, bl
 80a6edb:  mov DWORD PTR [ebp-0x106c], eax
 80a6ee1:  movzx eax, BYTE PTR [ebp-0x1079]
 80a6ee8:  cmp al, BYTE PTR [edi]
 80a6eea:  je 80a6f01
 80a6eec:  jmp 80a6f7a
 80a6ef1:  lea esi, [esi]
 80a6ef8:  cmp al, BYTE PTR [edi+edx]
 80a6efb:  jne 80a75f8
 80a6f01:  mov ecx, DWORD PTR [ebp-0x10d8]
 80a6f07:  add edx, 0x1
 80a6f0a:  movzx eax, BYTE PTR [ecx+edx]
 80a6f0e:  test al, al
 80a6f10:  jne 80a6ef8
 80a6f12:  mov esi, DWORD PTR [ebp-0x10e4]
 80a6f18:  xor edx, edx
 80a6f1a:  add edi, DWORD PTR [ebp-0x1104]
 80a6f20:  cmp DWORD PTR [ebp-0x10f4], 0x10
 80a6f27:  movzx ebx, BYTE PTR [edi]
 80a6f2a:  mov DWORD PTR [ebp-0x106c], esi
 80a6f30:  je 80a6f60
 80a6f32:  jmp 80a7380
 80a6f37:  nop
 80a6f38:  cmp bl, 0x30
 80a6f3b:  je 80a6f50
 80a6f3d:  cmp DWORD PTR [ebp-0x10dc], 0xff
 80a6f44:  lea esi, [esi]
 80a6f48:  jne 80a6f50
 80a6f4a:  mov DWORD PTR [ebp-0x10dc], edx
 80a6f50:  add DWORD PTR [ebp-0x106c], 0x1
 80a6f57:  add edi, 0x1
 80a6f5a:  movzx ebx, BYTE PTR [edi]
 80a6f5d:  add edx, 0x1
 80a6f60:  lea eax, [ebx-0x30]
 80a6f63:  cmp al, 0x9
 80a6f65:  jbe 80a6f38
 80a6f67:  mov esi, DWORD PTR [ebp-0x111c]
 80a6f6d:  movsx ecx, bl
 80a6f70:  mov eax, DWORD PTR [esi+ecx*4]
 80a6f73:  sub eax, 0x61
 80a6f76:  cmp al, 0x5
 80a6f78:  jbe 80a6f38
 80a6f7a:  mov edx, DWORD PTR [ebp-0x111c]
 80a6f80:  movzx eax, BYTE PTR [edx+ecx*4]
 80a6f84:  cmp al, 0x70
 80a6f86:  je 80a79a9
 80a6f8c:  cmp al, 0x65
 80a6f8e:  je 80a7538
 80a6f94:  mov eax, edi
 80a6f96:  mov ebx, DWORD PTR [ebp-0x106c]
 80a6f9c:  cmp DWORD PTR [ebp-0x10e4], ebx
 80a6fa2:  jl 80a72a8
 80a6fa8:  mov esi, DWORD PTR [ebp-0x106c]
 80a6fae:  mov edx, eax
 80a6fb0:  cmp DWORD PTR [ebp-0x10e4], esi
 80a6fb6:  je 80a72dc
 80a6fbc:  mov esi, DWORD PTR [ebp-0x10e4]
 80a6fc2:  mov DWORD PTR [ebp-0x10e0], esi
 80a6fc8:  mov esi, DWORD PTR [ebp+0xc]
 80a6fcb:  test esi, esi
 80a6fcd:  je 80a6fd4
 80a6fcf:  mov eax, DWORD PTR [ebp+0xc]
 80a6fd2:  mov DWORD PTR [eax], edi
 80a6fd4:  mov ebx, DWORD PTR [ebp-0x106c]
 80a6fda:  test ebx, ebx
 80a6fdc:  je 80a6d18
 80a6fe2:  mov ecx, DWORD PTR [ebp-0x10dc]
 80a6fe8:  mov edx, DWORD PTR [ebp-0x1078]
 80a6fee:  test ecx, ecx
 80a6ff0:  mov DWORD PTR [ebp-0x10e8], edx
 80a6ff6:  je 80a70b2
 80a6ffc:  mov ecx, DWORD PTR [ebp-0x10d8]
 80a7002:  mov eax, DWORD PTR [ebp-0x10d8]
 80a7008:  movzx ecx, BYTE PTR [ecx]
 80a700b:  mov BYTE PTR [ebp-0x1139], cl
 80a7011:  movzx eax, BYTE PTR [eax+0x1]
 80a7015:  mov ecx, edx
 80a7017:  movzx ebx, BYTE PTR [edx]
 80a701a:  mov BYTE PTR [ebp-0x105e], al
 80a7020:  add ecx, 0x1
 80a7023:  cmp bl, BYTE PTR [ebp-0x1139]
 80a7029:  lea esi, [ecx-0x1]
 80a702c:  je 80a703f
 80a702e:  movzx ebx, BYTE PTR [ecx]
 80a7031:  add ecx, 0x1
 80a7034:  cmp bl, BYTE PTR [ebp-0x1139]
 80a703a:  lea esi, [ecx-0x1]
 80a703d:  jne 80a702e
 80a703f:  cmp BYTE PTR [ebp-0x105e], 0x0
 80a7046:  je 80a7076
 80a7048:  movzx ebx, BYTE PTR [ecx]
 80a704b:  mov eax, 0x1
 80a7050:  cmp bl, BYTE PTR [ebp-0x105e]
 80a7056:  je 80a7065
 80a7058:  jmp 80a7020
 80a705a:  lea esi, [esi]
 80a7060:  cmp dl, BYTE PTR [esi+eax]
 80a7063:  jne 80a7020
 80a7065:  mov edi, DWORD PTR [ebp-0x10d8]
 80a706b:  add eax, 0x1
 80a706e:  movzx edx, BYTE PTR [edi+eax]
 80a7072:  test dl, dl
 80a7074:  jne 80a7060
 80a7076:  cmp DWORD PTR [ebp-0x10f4], 0x10
 80a707d:  mov edx, DWORD PTR [ebp-0x14]
 80a7080:  mov ecx, DWORD PTR [ebp-0x10dc]
 80a7086:  je 80a8372
 80a708c:  mov eax, DWORD PTR [ebp-0x10dc]
 80a7092:  sub edx, ecx
 80a7094:  add eax, DWORD PTR [ebp-0x1104]
 80a709a:  mov DWORD PTR [ebp-0x14], edx
 80a709d:  lea eax, [esi+eax]
 80a70a0:  mov DWORD PTR [ebp-0x10e8], eax
 80a70a6:  mov eax, DWORD PTR [ebp-0x10dc]
 80a70ac:  sub DWORD PTR [ebp-0x106c], eax
 80a70b2:  cmp DWORD PTR [ebp-0x10f4], 0x10
 80a70b9:  je 80a740d
 80a70bf:  mov edx, DWORD PTR [ebp-0x14]
 80a70c2:  test edx, edx
 80a70c4:  js 80a75dd
 80a70ca:  mov eax, DWORD PTR [ebp-0x106c]
 80a70d0:  sub eax, DWORD PTR [ebp-0x10e0]
 80a70d6:  cmp eax, edx
 80a70d8:  jg 80a75ed
 80a70de:  mov edi, DWORD PTR [ebp-0x10e0]
 80a70e4:  sub edx, eax
 80a70e6:  add edi, eax
 80a70e8:  lea eax, [edx+edi]
 80a70eb:  cmp eax, 0x1345
 80a70f0:  mov DWORD PTR [ebp-0x1068], edi
 80a70f6:  jg 80a8621
 80a70fc:  cmp edx, 0xffffecaa
 80a7102:  jl 80a8bda
 80a7108:  mov eax, DWORD PTR [ebp-0x1068]
 80a710e:  mov DWORD PTR [ebp-0x14], edx
 80a7111:  test eax, eax
 80a7113:  jg 80a79df
 80a7119:  lea ecx, [ebp-0x20]
 80a711c:  mov edx, 0x16
 80a7121:  lea ebx, [ebp-0x844]
 80a7127:  mov eax, 0x18
 80a712c:  lea esi, [ebp-0x14]
 80a712f:  lea edi, [ebp-0x10]
 80a7132:  mov DWORD PTR [ebp-0x10ec], 0x0
 80a713c:  mov DWORD PTR [ebp-0x1120], ecx
 80a7142:  mov DWORD PTR [ebp-0x1114], ebx
 80a7148:  mov DWORD PTR [ebp-0x1124], esi
 80a714e:  mov DWORD PTR [ebp-0x1128], edi
 80a7154:  mov ecx, DWORD PTR [ebp-0x106c]
 80a715a:  sub ecx, DWORD PTR [ebp-0x1068]
 80a7160:  mov DWORD PTR [ebp-0x1070], 0x0
 80a716a:  mov BYTE PTR [ebp-0x1081], 0x0
 80a7171:  cmp eax, ecx
 80a7173:  mov DWORD PTR [ebp-0x1088], ecx
 80a7179:  jl 80a7db3
 80a717f:  mov ebx, DWORD PTR [ebp-0x1088]
 80a7185:  lea edi, [ebp-0x105c]
 80a718b:  mov esi, 0x1
 80a7190:  mov eax, DWORD PTR [ebp-0x1114]
 80a7196:  sub ebx, DWORD PTR [ebp-0x14]
 80a7199:  mov DWORD PTR [ebp-0x1110], edi
 80a719f:  mov DWORD PTR [ebp-0x10b0], edi
 80a71a5:  mov edi, 0x80c4aa0
 80a71aa:  mov DWORD PTR [ebp-0x10b4], ebx
 80a71b0:  mov DWORD PTR [ebp-0x10f0], 0x0
 80a71ba:  mov DWORD PTR [ebp-0x10ac], eax
 80a71c0:  jmp 80a720b
 80a71c2:  lea esi, [esi]
 80a71c8:  mov eax, DWORD PTR [edi+0x4]
 80a71cb:  sub eax, 0x2
 80a71ce:  mov DWORD PTR [ebp-0x10f0], eax
 80a71d4:  mov edx, eax
 80a71d6:  mov eax, DWORD PTR [edi]
 80a71d8:  shl edx, 0x2
 80a71db:  mov DWORD PTR [esp+0x8], edx
 80a71df:  lea eax, [eax*4+0x80c3cc8]
 80a71e6:  mov DWORD PTR [esp+0x4], eax
 80a71ea:  mov edx, DWORD PTR [ebp-0x10b0]
 80a71f0:  mov DWORD PTR [esp], edx
 80a71f3:  call 804efc0
 80a71f8:  mov eax, DWORD PTR [ebp-0x10b4]
 80a71fe:  test eax, eax
 80a7200:  je 80a760c
 80a7206:  add esi, esi
 80a7208:  add edi, 0x10
 80a720b:  test DWORD PTR [ebp-0x10b4], esi
 80a7211:  je 80a71f8
 80a7213:  mov edx, DWORD PTR [ebp-0x10f0]
 80a7219:  xor DWORD PTR [ebp-0x10b4], esi
 80a721f:  test edx, edx
 80a7221:  je 80a71c8
 80a7223:  mov ecx, DWORD PTR [ebp-0x10f0]
 80a7229:  mov ebx, DWORD PTR [edi+0x4]
 80a722c:  mov DWORD PTR [esp+0x10], ecx
 80a7230:  mov eax, DWORD PTR [ebp-0x10b0]
 80a7236:  sub ebx, 0x2
 80a7239:  mov DWORD PTR [esp+0x8], ebx
 80a723d:  mov DWORD PTR [esp+0xc], eax
 80a7241:  mov eax, DWORD PTR [edi]
 80a7243:  lea eax, [eax*4+0x80c3cc8]
 80a724a:  mov DWORD PTR [esp+0x4], eax
 80a724e:  mov edx, DWORD PTR [ebp-0x10ac]
 80a7254:  mov DWORD PTR [esp], edx
 80a7257:  call 808c280
 80a725c:  add DWORD PTR [ebp-0x10f0], ebx
 80a7262:  test eax, eax
 80a7264:  je 80a79bb
 80a726a:  mov eax, DWORD PTR [ebp-0x10ac]
 80a7270:  mov ecx, DWORD PTR [ebp-0x10b0]
 80a7276:  mov DWORD PTR [ebp-0x10b0], eax
 80a727c:  mov DWORD PTR [ebp-0x10ac], ecx
 80a7282:  jmp 80a71f8
 80a7287:  nop
 80a7288:  add esi, 0x1
 80a728b:  movzx ebx, BYTE PTR [esi]
 80a728e:  mov DWORD PTR [ebp-0x10f8], 0x1
 80a7298:  mov BYTE PTR [ebp-0x105d], bl
 80a729e:  jmp 80a6b7a
 80a72a3:  nop
 80a72a4:  lea esi, [esi]
 80a72a8:  cmp BYTE PTR [eax-0x1], 0x30
 80a72ac:  lea edx, [eax-0x1]
 80a72af:  je 80a72ba
 80a72b1:  jmp 80a6fa8
 80a72b6:  xchg ax, ax
 80a72b8:  mov edx, eax
 80a72ba:  sub DWORD PTR [ebp-0x106c], 0x1
 80a72c1:  cmp BYTE PTR [edx-0x1], 0x30
 80a72c5:  lea eax, [edx-0x1]
 80a72c8:  je 80a72b8
 80a72ca:  mov esi, DWORD PTR [ebp-0x106c]
 80a72d0:  cmp DWORD PTR [ebp-0x10e4], esi
 80a72d6:  jne 80a6fbc
 80a72dc:  test esi, esi
 80a72de:  jle 80a6fbc
 80a72e4:  mov eax, DWORD PTR [ebp-0x14]
 80a72e7:  test eax, eax
 80a72e9:  jns 80a6fbc
 80a72ef:  cmp BYTE PTR [ebp-0x10fd], 0x0
 80a72f6:  mov DWORD PTR [ebp-0x10e0], esi
 80a72fc:  jne 80a7ff0
 80a7302:  lea esi, [esi]
 80a7308:  sub edx, 0x1
 80a730b:  movzx ecx, BYTE PTR [edx]
 80a730e:  movsx eax, cl
 80a7311:  sub eax, 0x30
 80a7314:  cmp eax, 0x9
 80a7317:  ja 80a7308
 80a7319:  cmp cl, 0x30
 80a731c:  jne 80a6fc8
 80a7322:  sub DWORD PTR [ebp-0x106c], 0x1
 80a7329:  mov eax, DWORD PTR [ebp-0x14]
 80a732c:  mov ebx, DWORD PTR [ebp-0x106c]
 80a7332:  sub DWORD PTR [ebp-0x10e0], 0x1
 80a7339:  add eax, 0x1
 80a733c:  test ebx, ebx
 80a733e:  mov DWORD PTR [ebp-0x14], eax
 80a7341:  jle 80a6fc8
 80a7347:  test eax, eax
 80a7349:  jns 80a6fc8
 80a734f:  jmp 80a7308
 80a7351:  cmp bl, 0x30
 80a7354:  lea esi, [esi]
 80a7358:  je 80a7370
 80a735a:  cmp DWORD PTR [ebp-0x10dc], 0xff
 80a7361:  lea esi, [esi]
 80a7368:  jne 80a7370
 80a736a:  mov DWORD PTR [ebp-0x10dc], edx
 80a7370:  add DWORD PTR [ebp-0x106c], 0x1
 80a7377:  add edi, 0x1
 80a737a:  movzx ebx, BYTE PTR [edi]
 80a737d:  add edx, 0x1
 80a7380:  lea eax, [ebx-0x30]
 80a7383:  cmp al, 0x9
 80a7385:  jbe 80a7351
 80a7387:  mov edx, DWORD PTR [ebp-0x111c]
 80a738d:  movsx eax, bl
 80a7390:  mov BYTE PTR [ebp-0x10fd], 0x0
 80a7397:  movzx eax, BYTE PTR [edx+eax*4]
 80a739b:  jmp 80a6f8c
 80a73a0:  mov eax, DWORD PTR [ebp+0x14]
 80a73a3:  mov eax, DWORD PTR [eax+0x38]
 80a73a6:  mov DWORD PTR [ebp-0x111c], eax
 80a73ac:  movsx eax, BYTE PTR [esi+0x1]
 80a73b0:  mov edx, DWORD PTR [ebp-0x111c]
 80a73b6:  cmp DWORD PTR [edx+eax*4], 0x78
 80a73ba:  je 80a7d66
 80a73c0:  mov DWORD PTR [ebp-0x10f4], 0xa
 80a73ca:  mov BYTE PTR [ebp-0x1089], 0x1
 80a73d1:  mov BYTE PTR [ebp-0x10fd], 0x0
 80a73d8:  jmp 80a6c4d
 80a73dd:  lea esi, [esi]
 80a73e0:  fldz
 80a73e2:  add esp, 0x1148
 80a73e8:  fchs
 80a73ea:  pop ebx
 80a73eb:  pop esi
 80a73ec:  pop edi
 80a73ed:  pop ebp
 80a73ee:  ret
 80a73ef:  nop
 80a73f0:  cmp BYTE PTR [ebp-0x1089], 0x0
 80a73f7:  jne 80a6ca5
 80a73fd:  cmp dl, 0x66
 80a7400:  jle 80a6d88
 80a7406:  xchg ax, ax
 80a7408:  jmp 80a6ca5
 80a740d:  mov edx, DWORD PTR [ebp+0x14]
 80a7410:  mov ecx, DWORD PTR [ebp-0x10e8]
 80a7416:  mov edx, DWORD PTR [edx+0x34]
 80a7419:  mov DWORD PTR [ebp-0x1118], edx
 80a741f:  movzx eax, BYTE PTR [ecx]
 80a7422:  mov ebx, DWORD PTR [ebp-0x1118]
 80a7428:  movsx edx, al
 80a742b:  test BYTE PTR [ebx+edx*2+0x1], 0x10
 80a7430:  jne 80a7458
 80a7432:  lea esi, [esi]
 80a7438:  add DWORD PTR [ebp-0x10e8], 0x1
 80a743f:  mov esi, DWORD PTR [ebp-0x10e8]
 80a7445:  mov edi, DWORD PTR [ebp-0x1118]
 80a744b:  movzx eax, BYTE PTR [esi]
 80a744e:  movsx edx, al
 80a7451:  test BYTE PTR [edi+edx*2+0x1], 0x10
 80a7456:  je 80a7438
 80a7458:  cmp al, 0x30
 80a745a:  jne 80a7477
 80a745c:  lea esi, [esi]
 80a7460:  add DWORD PTR [ebp-0x10e8], 0x1
 80a7467:  mov edx, DWORD PTR [ebp-0x10e8]
 80a746d:  movzx eax, BYTE PTR [edx]
 80a7470:  cmp al, 0x30
 80a7472:  je 80a7460
 80a7474:  movsx edx, al
 80a7477:  lea eax, [edx-0x30]
 80a747a:  cmp eax, 0x9
 80a747d:  jbe 80a7e90
 80a7483:  mov esi, DWORD PTR [ebp+0x14]
 80a7486:  mov ebx, DWORD PTR [ebp-0x10e8]
 80a748c:  mov eax, DWORD PTR [esi+0x38]
 80a748f:  add ebx, 0x1
 80a7492:  mov DWORD PTR [ebp-0x1074], ebx
 80a7498:  mov eax, DWORD PTR [eax+edx*4]
 80a749b:  sub eax, 0x57
 80a749e:  mov edx, DWORD PTR [eax*4+0x80c6d60]
 80a74a5:  mov esi, 0x1f
 80a74aa:  mov edi, DWORD PTR [ebp-0x10e0]
 80a74b0:  sub esi, edx
 80a74b2:  lea ecx, [esi+0x1]
 80a74b5:  shl eax, cl
 80a74b7:  mov DWORD PTR [ebp-0x1c], eax
 80a74ba:  mov eax, DWORD PTR [ebp-0x14]
 80a74bd:  lea eax, [eax+edi*4-0x5]
 80a74c1:  mov edi, 0x1
 80a74c6:  lea edx, [eax+edx]
 80a74c9:  mov DWORD PTR [ebp-0x14], edx
 80a74cc:  lea esi, [esi]
 80a74d0:  sub DWORD PTR [ebp-0x106c], 0x1
 80a74d7:  mov eax, DWORD PTR [ebp-0x106c]
 80a74dd:  test eax, eax
 80a74df:  jle 80a8268
 80a74e5:  mov eax, DWORD PTR [ebp-0x1074]
 80a74eb:  mov ebx, DWORD PTR [ebp-0x1118]
 80a74f1:  movsx ecx, BYTE PTR [eax]
 80a74f4:  test BYTE PTR [ebx+ecx*2+0x1], 0x10
 80a74f9:  jne 80a750c
 80a74fb:  mov ecx, DWORD PTR [ebp-0x1104]
 80a7501:  add eax, ecx
 80a7503:  mov DWORD PTR [ebp-0x1074], eax
 80a7509:  movsx ecx, BYTE PTR [eax]
 80a750c:  lea eax, [ecx-0x30]
 80a750f:  cmp eax, 0x9
 80a7512:  ja 80a8110
 80a7518:  add DWORD PTR [ebp-0x1074], 0x1
 80a751f:  mov ebx, eax
 80a7521:  cmp esi, 0x2
 80a7524:  jle 80a80e0
 80a752a:  lea ecx, [esi-0x3]
 80a752d:  sub esi, 0x4
 80a7530:  shl ebx, cl
 80a7532:  or DWORD PTR [ebp+edi*4-0x20], ebx
 80a7536:  jmp 80a74d0
 80a7538:  cmp BYTE PTR [ebp-0x1089], 0x0
 80a753f:  je 80a6f94
 80a7545:  movzx ecx, BYTE PTR [edi+0x1]
 80a7549:  lea ebx, [edi+0x1]
 80a754c:  cmp cl, 0x2d
 80a754f:  je 80a7993
 80a7555:  cmp cl, 0x2b
 80a7558:  mov DWORD PTR [ebp-0x10cc], 0x0
 80a7562:  je 80a7d3b
 80a7568:  lea eax, [ecx-0x30]
 80a756b:  cmp al, 0x9
 80a756d:  ja 80a6f94
 80a7573:  cmp BYTE PTR [ebp-0x10fd], 0x0
 80a757a:  jne 80a833f
 80a7580:  mov edx, DWORD PTR [ebp-0x10cc]
 80a7586:  test edx, edx
 80a7588:  je 80a7d99
 80a758e:  mov esi, DWORD PTR [ebp-0x10e4]
 80a7594:  add esi, 0x1383
 80a759a:  lea esi, [esi]
 80a75a0:  mov eax, DWORD PTR [ebp-0x14]
 80a75a3:  movsx edx, cl
 80a75a6:  lea eax, [eax+eax*4]
 80a75a9:  lea edx, [edx+eax*2-0x30]
 80a75ad:  cmp edx, esi
 80a75af:  mov DWORD PTR [ebp-0x14], edx
 80a75b2:  jg 80a877d
 80a75b8:  add ebx, 0x1
 80a75bb:  movzx ecx, BYTE PTR [ebx]
 80a75be:  lea eax, [ecx-0x30]
 80a75c1:  cmp al, 0x9
 80a75c3:  jbe 80a75a0
 80a75c5:  mov eax, DWORD PTR [ebp-0x10cc]
 80a75cb:  test eax, eax
 80a75cd:  je 80a75d4
 80a75cf:  neg edx
 80a75d1:  mov DWORD PTR [ebp-0x14], edx
 80a75d4:  mov eax, edi
 80a75d6:  mov edi, ebx
 80a75d8:  jmp 80a6f96
 80a75dd:  mov eax, DWORD PTR [ebp-0x10e0]
 80a75e3:  neg eax
 80a75e5:  cmp eax, edx
 80a75e7:  jge 80a70de
 80a75ed:  mov eax, edx
 80a75ef:  jmp 80a70de
 80a75f4:  lea esi, [esi]
 80a75f8:  mov edx, DWORD PTR [ebp-0x10e4]
 80a75fe:  movsx ecx, bl
 80a7601:  mov DWORD PTR [ebp-0x106c], edx
 80a7607:  jmp 80a6f7a
 80a760c:  mov esi, DWORD PTR [ebp-0x1114]
 80a7612:  cmp DWORD PTR [ebp-0x10b0], esi
 80a7618:  je 80a8914
 80a761e:  mov eax, DWORD PTR [ebp-0x10d4]
 80a7624:  mov DWORD PTR [esp+0x10], eax
 80a7628:  mov edx, DWORD PTR [ebp-0x1104]
 80a762e:  mov DWORD PTR [esp+0xc], edx
 80a7632:  mov ecx, DWORD PTR [ebp-0x10d8]
 80a7638:  mov DWORD PTR [esp+0x8], ecx
 80a763c:  mov ebx, DWORD PTR [ebp-0x1124]
 80a7642:  mov DWORD PTR [esp+0x4], ebx
 80a7646:  mov esi, DWORD PTR [ebp-0x1128]
 80a764c:  mov DWORD PTR [esp], esi
 80a764f:  mov ecx, DWORD PTR [ebp-0x1114]
 80a7655:  mov edx, DWORD PTR [ebp-0x1088]
 80a765b:  mov eax, DWORD PTR [ebp-0x10e8]
 80a7661:  call 80a65e0
 80a7666:  mov edi, DWORD PTR [ebp-0x10f0]
 80a766c:  sub edi, 0x1
 80a766f:  bsr ebx, DWORD PTR [ebp+edi*4-0x105c]
 80a7677:  mov DWORD PTR [ebp-0x1108], edi
 80a767d:  xor ebx, 0x1f
 80a7680:  jle 80a76d5
 80a7682:  mov DWORD PTR [esp+0xc], ebx
 80a7686:  mov eax, DWORD PTR [ebp-0x10f0]
 80a768c:  mov DWORD PTR [esp+0x8], eax
 80a7690:  mov edx, DWORD PTR [ebp-0x1110]
 80a7696:  mov DWORD PTR [esp+0x4], edx
 80a769a:  mov DWORD PTR [esp], edx
 80a769d:  call 808c1c0
 80a76a2:  mov DWORD PTR [esp+0xc], ebx
 80a76a6:  mov eax, DWORD PTR [ebp-0x10]
 80a76a9:  mov DWORD PTR [esp+0x8], eax
 80a76ad:  mov ecx, DWORD PTR [ebp-0x1114]
 80a76b3:  mov DWORD PTR [esp+0x4], ecx
 80a76b7:  mov DWORD PTR [esp], ecx
 80a76ba:  call 808c1c0
 80a76bf:  test eax, eax
 80a76c1:  mov edx, eax
 80a76c3:  je 80a76d5
 80a76c5:  mov eax, DWORD PTR [ebp-0x10]
 80a76c8:  mov DWORD PTR [ebp+eax*4-0x844], edx
 80a76cf:  add eax, 0x1
 80a76d2:  mov DWORD PTR [ebp-0x10], eax
 80a76d5:  mov ebx, DWORD PTR [ebp-0x10ec]
 80a76db:  cmp DWORD PTR [ebp-0x10f0], 0x1
 80a76e2:  mov DWORD PTR [ebp-0x14], ebx
 80a76e5:  je 80a837a
 80a76eb:  cmp DWORD PTR [ebp-0x10f0], 0x2
 80a76f2:  je 80a7ea4
 80a76f8:  mov esi, DWORD PTR [ebp-0x10f0]
 80a76fe:  mov ebx, DWORD PTR [ebp-0x1108]
 80a7704:  mov eax, DWORD PTR [ebp-0x10]
 80a7707:  sub esi, 0x2
 80a770a:  mov ebx, DWORD PTR [ebp+ebx*4-0x105c]
 80a7711:  mov edi, DWORD PTR [ebp+esi*4-0x105c]
 80a7718:  mov DWORD PTR [ebp-0x10fc], esi
 80a771e:  mov DWORD PTR [ebp-0x1098], ebx
 80a7724:  mov DWORD PTR [ebp-0x1094], edi
 80a772a:  mov DWORD PTR [esp+0x8], eax
 80a772e:  mov edx, DWORD PTR [ebp-0x10f0]
 80a7734:  mov ecx, DWORD PTR [ebp-0x1110]
 80a773a:  sub edx, eax
 80a773c:  lea eax, [ecx+edx*4]
 80a773f:  mov DWORD PTR [esp+0x4], eax
 80a7743:  mov ebx, DWORD PTR [ebp-0x1114]
 80a7749:  mov DWORD PTR [esp], ebx
 80a774c:  call 808bcb0
 80a7751:  test eax, eax
 80a7753:  jle 80a7769
 80a7755:  mov eax, DWORD PTR [ebp-0x10]
 80a7758:  mov DWORD PTR [ebp+eax*4-0x844], 0x0
 80a7763:  add eax, 0x1
 80a7766:  mov DWORD PTR [ebp-0x10], eax
 80a7769:  mov ecx, DWORD PTR [ebp-0x10]
 80a776c:  cmp DWORD PTR [ebp-0x10f0], ecx
 80a7772:  jg 80a864d
 80a7778:  mov esi, DWORD PTR [ebp-0x1114]
 80a777e:  test ecx, ecx
 80a7780:  lea ebx, [ebp-0x848]
 80a7786:  lea edx, [esi+ecx*4-0x4]
 80a778a:  jle 80a779c
 80a778c:  lea esi, [esi]
 80a7790:  mov eax, DWORD PTR [edx]
 80a7792:  mov DWORD PTR [edx+0x4], eax
 80a7795:  sub edx, 0x4
 80a7798:  cmp edx, ebx
 80a779a:  jne 80a7790
 80a779c:  mov ecx, DWORD PTR [ebp-0x10f0]
 80a77a2:  mov DWORD PTR [ebp-0x1090], 0x0
 80a77ac:  mov esi, DWORD PTR [ebp+ecx*4-0x844]
 80a77b3:  lea ebx, [ecx+0x1]
 80a77b6:  mov DWORD PTR [ebp+ecx*4-0x105c], 0x0
 80a77c1:  mov DWORD PTR [ebp-0x110c], ebx
 80a77c7:  mov ecx, DWORD PTR [ebp-0x10fc]
 80a77cd:  mov ebx, DWORD PTR [ebp-0x1114]
 80a77d3:  lea ecx, [ebx+ecx*4]
 80a77d6:  mov DWORD PTR [ebp-0x1134], ecx
 80a77dc:  lea esi, [esi]
 80a77e0:  cmp esi, DWORD PTR [ebp-0x1098]
 80a77e6:  mov edi, 0xffffffff
 80a77eb:  je 80a787b
 80a77f1:  mov ebx, DWORD PTR [ebp-0x1108]
 80a77f7:  mov edx, esi
 80a77f9:  mov eax, DWORD PTR [ebp+ebx*4-0x844]
 80a7800:  div DWORD PTR [ebp-0x1098]
 80a7806:  mov esi, edx
 80a7808:  mov edi, eax
 80a780a:  mov eax, DWORD PTR [ebp-0x1094]
 80a7810:  mul edi
 80a7812:  mov DWORD PTR [ebp-0x1140], eax
 80a7818:  mov eax, DWORD PTR [ebp-0x1098]
 80a781e:  mov ebx, edx
 80a7820:  lea ecx, [esi+eax]
 80a7823:  jmp 80a7841
 80a7825:  lea esi, [esi]
 80a7828:  mov edx, DWORD PTR [ebp-0x1094]
 80a782e:  xor eax, eax
 80a7830:  cmp DWORD PTR [ebp-0x1140], edx
 80a7836:  setb al
 80a7839:  sub DWORD PTR [ebp-0x1140], edx
 80a783f:  sub ebx, eax
 80a7841:  cmp ebx, esi
 80a7843:  ja 80a785c
 80a7845:  jne 80a787b
 80a7847:  mov eax, DWORD PTR [ebp-0x10fc]
 80a784d:  mov edx, DWORD PTR [ebp-0x1140]
 80a7853:  cmp edx, DWORD PTR [ebp+eax*4-0x844]
 80a785a:  jbe 80a787b
 80a785c:  add ecx, DWORD PTR [ebp-0x1098]
 80a7862:  sub edi, 0x1
 80a7865:  add esi, DWORD PTR [ebp-0x1098]
 80a786b:  mov eax, ecx
 80a786d:  sub eax, DWORD PTR [ebp-0x1098]
 80a7873:  cmp DWORD PTR [ebp-0x1098], eax
 80a7879:  jbe 80a7828
 80a787b:  mov DWORD PTR [esp+0xc], edi
 80a787f:  mov ecx, DWORD PTR [ebp-0x110c]
 80a7885:  mov DWORD PTR [esp+0x8], ecx
 80a7889:  mov ebx, DWORD PTR [ebp-0x1110]
 80a788f:  mov DWORD PTR [esp+0x4], ebx
 80a7893:  mov esi, DWORD PTR [ebp-0x1114]
 80a7899:  mov DWORD PTR [esp], esi
 80a789c:  call 808dab0
 80a78a1:  mov edx, DWORD PTR [ebp-0x10f0]
 80a78a7:  cmp eax, DWORD PTR [ebp+edx*4-0x844]
 80a78ae:  je 80a78c7
 80a78b0:  mov DWORD PTR [esp+0xc], edx
 80a78b4:  sub edi, 0x1
 80a78b7:  mov DWORD PTR [esp+0x8], ebx
 80a78bb:  mov DWORD PTR [esp+0x4], esi
 80a78bf:  mov DWORD PTR [esp], esi
 80a78c2:  call 8099240
 80a78c7:  mov ecx, DWORD PTR [ebp-0x1108]
 80a78cd:  mov ebx, DWORD PTR [ebp-0x10f0]
 80a78d3:  mov esi, DWORD PTR [ebp+ecx*4-0x844]
 80a78da:  test ecx, ecx
 80a78dc:  mov DWORD PTR [ebp+ebx*4-0x844], esi
 80a78e3:  jle 80a7904
 80a78e5:  mov edx, DWORD PTR [ebp-0x1134]
 80a78eb:  lea ebx, [ebp-0x848]
 80a78f1:  lea esi, [esi]
 80a78f8:  mov eax, DWORD PTR [edx]
 80a78fa:  mov DWORD PTR [edx+0x4], eax
 80a78fd:  sub edx, 0x4
 80a7900:  cmp edx, ebx
 80a7902:  jne 80a78f8
 80a7904:  mov edx, DWORD PTR [ebp-0x10ec]
 80a790a:  test edx, edx
 80a790c:  jne 80a8148
 80a7912:  test edi, edi
 80a7914:  jne 80a82dc
 80a791a:  sub DWORD PTR [ebp-0x14], 0x20
 80a791e:  cmp DWORD PTR [ebp-0x10ec], 0x40
 80a7925:  mov DWORD PTR [ebp-0x1c], 0x0
 80a792c:  mov DWORD PTR [ebp-0x20], edi
 80a792f:  jle 80a77e0
 80a7935:  mov ecx, DWORD PTR [ebp-0x10f0]
 80a793b:  mov esi, DWORD PTR [ebp+ecx*4-0x844]
 80a7942:  test esi, esi
 80a7944:  je 80a871b
 80a794a:  mov esi, DWORD PTR [ebp-0x10f0]
 80a7950:  not esi
 80a7952:  shr esi, 0x1f
 80a7955:  mov edx, DWORD PTR [ebp-0x14]
 80a7958:  or DWORD PTR [ebp-0x1070], esi
 80a795e:  mov eax, DWORD PTR [ebp-0x1070]
 80a7964:  sub edx, 0x1
 80a7967:  mov DWORD PTR [esp+0x8], eax
 80a796b:  mov eax, 0x1f
 80a7970:  sub eax, DWORD PTR [ebp-0x1090]
 80a7976:  mov DWORD PTR [esp+0x4], eax
 80a797a:  mov DWORD PTR [esp], edi
 80a797d:  mov ecx, DWORD PTR [ebp-0x10f8]
 80a7983:  mov eax, DWORD PTR [ebp-0x1120]
 80a7989:  call 80a6840
 80a798e:  jmp 80a6c10
 80a7993:  movzx ecx, BYTE PTR [edi+0x2]
 80a7997:  lea ebx, [edi+0x2]
 80a799a:  mov DWORD PTR [ebp-0x10cc], 0x1
 80a79a4:  jmp 80a7568
 80a79a9:  cmp BYTE PTR [ebp-0x10fd], 0x0
 80a79b0:  jne 80a7545
 80a79b6:  jmp 80a6f94
 80a79bb:  mov eax, DWORD PTR [ebp-0x10ac]
 80a79c1:  mov ebx, DWORD PTR [ebp-0x10b0]
 80a79c7:  sub DWORD PTR [ebp-0x10f0], 0x1
 80a79ce:  mov DWORD PTR [ebp-0x10b0], eax
 80a79d4:  mov DWORD PTR [ebp-0x10ac], ebx
 80a79da:  jmp 80a71f8
 80a79df:  mov edx, DWORD PTR [ebp-0x10d4]
 80a79e5:  lea eax, [ebp-0x844]
 80a79eb:  mov DWORD PTR [ebp-0x1114], eax
 80a79f1:  lea esi, [ebp-0x14]
 80a79f4:  lea edi, [ebp-0x10]
 80a79f7:  mov DWORD PTR [esp+0x10], edx
 80a79fb:  mov ecx, DWORD PTR [ebp-0x1104]
 80a7a01:  mov DWORD PTR [esp+0xc], ecx
 80a7a05:  mov ebx, DWORD PTR [ebp-0x10d8]
 80a7a0b:  mov ecx, eax
 80a7a0d:  mov DWORD PTR [esp+0x8], ebx
 80a7a11:  mov DWORD PTR [ebp-0x1124], esi
 80a7a17:  mov DWORD PTR [esp+0x4], esi
 80a7a1b:  mov DWORD PTR [ebp-0x1128], edi
 80a7a21:  mov DWORD PTR [esp], edi
 80a7a24:  mov edx, DWORD PTR [ebp-0x1068]
 80a7a2a:  mov eax, DWORD PTR [ebp-0x10e8]
 80a7a30:  call 80a65e0
 80a7a35:  mov DWORD PTR [ebp-0x10e8], eax
 80a7a3b:  mov eax, DWORD PTR [ebp-0x14]
 80a7a3e:  test eax, eax
 80a7a40:  jle 80a7b69
 80a7a46:  mov eax, DWORD PTR [ebp-0x1114]
 80a7a4c:  lea edx, [ebp-0x105c]
 80a7a52:  mov esi, 0x1
 80a7a57:  mov DWORD PTR [ebp-0x1110], edx
 80a7a5d:  mov edi, 0x80c4aa0
 80a7a62:  mov DWORD PTR [ebp-0x10c4], edx
 80a7a68:  mov DWORD PTR [ebp-0x10c8], eax
 80a7a6e:  jmp 80a7acf
 80a7a70:  mov DWORD PTR [esp+0x10], ebx
 80a7a74:  mov eax, DWORD PTR [edi]
 80a7a76:  mov DWORD PTR [esp+0x8], edx
 80a7a7a:  lea eax, [eax*4+0x80c3cc8]
 80a7a81:  mov DWORD PTR [esp+0xc], eax
 80a7a85:  mov ecx, DWORD PTR [ebp-0x10c8]
 80a7a8b:  mov DWORD PTR [esp+0x4], ecx
 80a7a8f:  mov eax, DWORD PTR [ebp-0x10c4]
 80a7a95:  mov DWORD PTR [esp], eax
 80a7a98:  call 808c280
 80a7a9d:  mov edx, eax
 80a7a9f:  mov eax, ebx
 80a7aa1:  add eax, DWORD PTR [ebp-0x10]
 80a7aa4:  test edx, edx
 80a7aa6:  mov DWORD PTR [ebp-0x10], eax
 80a7aa9:  je 80a7b19
 80a7aab:  mov eax, DWORD PTR [ebp-0x10c4]
 80a7ab1:  mov ebx, DWORD PTR [ebp-0x10c8]
 80a7ab7:  mov DWORD PTR [ebp-0x10c8], eax
 80a7abd:  mov DWORD PTR [ebp-0x10c4], ebx
 80a7ac3:  mov eax, DWORD PTR [ebp-0x14]
 80a7ac6:  test eax, eax
 80a7ac8:  je 80a7b39
 80a7aca:  add esi, esi
 80a7acc:  add edi, 0x10
 80a7acf:  mov edx, DWORD PTR [ebp-0x14]
 80a7ad2:  test esi, edx
 80a7ad4:  je 80a7ac3
 80a7ad6:  xor edx, esi
 80a7ad8:  mov eax, DWORD PTR [edi+0x4]
 80a7adb:  mov DWORD PTR [ebp-0x14], edx
 80a7ade:  mov edx, DWORD PTR [ebp-0x10]
 80a7ae1:  lea ebx, [eax-0x2]
 80a7ae4:  cmp ebx, edx
 80a7ae6:  jle 80a7a70
 80a7ae8:  mov DWORD PTR [esp+0x10], edx
 80a7aec:  mov edx, DWORD PTR [ebp-0x10c8]
 80a7af2:  mov DWORD PTR [esp+0x8], ebx
 80a7af6:  mov DWORD PTR [esp+0xc], edx
 80a7afa:  mov eax, DWORD PTR [edi]
 80a7afc:  lea eax, [eax*4+0x80c3cc8]
 80a7b03:  mov DWORD PTR [esp+0x4], eax
 80a7b07:  mov ecx, DWORD PTR [ebp-0x10c4]
 80a7b0d:  mov DWORD PTR [esp], ecx
 80a7b10:  call 808c280
 80a7b15:  mov edx, eax
 80a7b17:  jmp 80a7a9f
 80a7b19:  sub eax, 0x1
 80a7b1c:  mov edx, DWORD PTR [ebp-0x10c8]
 80a7b22:  mov DWORD PTR [ebp-0x10], eax
 80a7b25:  mov eax, DWORD PTR [ebp-0x10c4]
 80a7b2b:  mov DWORD PTR [ebp-0x10c4], edx
 80a7b31:  mov DWORD PTR [ebp-0x10c8], eax
 80a7b37:  jmp 80a7ac3
 80a7b39:  mov ecx, DWORD PTR [ebp-0x1110]
 80a7b3f:  cmp DWORD PTR [ebp-0x10c8], ecx
 80a7b45:  jne 80a7b69
 80a7b47:  mov eax, DWORD PTR [ebp-0x10]
 80a7b4a:  shl eax, 0x2
 80a7b4d:  mov DWORD PTR [esp+0x8], eax
 80a7b51:  mov ebx, DWORD PTR [ebp-0x10c8]
 80a7b57:  mov DWORD PTR [esp+0x4], ebx
 80a7b5b:  mov esi, DWORD PTR [ebp-0x1114]
 80a7b61:  mov DWORD PTR [esp], esi
 80a7b64:  call 804efc0
 80a7b69:  mov ecx, DWORD PTR [ebp-0x10]
 80a7b6c:  lea edx, [ecx-0x1]
 80a7b6f:  mov edi, ecx
 80a7b71:  bsr eax, DWORD PTR [ebp+edx*4-0x844]
 80a7b79:  shl edi, 0x5
 80a7b7c:  xor eax, 0x1f
 80a7b7f:  sub edi, eax
 80a7b81:  cmp edi, 0x4000
 80a7b87:  mov DWORD PTR [ebp-0x10ec], edi
 80a7b8d:  jg 80a8bf2
 80a7b93:  cmp DWORD PTR [ebp-0x10ec], 0x40
 80a7b9a:  jg 80a7dd2
 80a7ba0:  mov edx, DWORD PTR [ebp-0x1068]
 80a7ba6:  cmp DWORD PTR [ebp-0x106c], edx
 80a7bac:  jne 80a84fd
 80a7bb2:  mov esi, DWORD PTR [ebp-0x10ec]
 80a7bb8:  sub esi, 0x1
 80a7bbb:  mov eax, esi
 80a7bbd:  sar eax, 0x1f
 80a7bc0:  shr eax, 0x1b
 80a7bc3:  lea edx, [esi+eax]
 80a7bc6:  and edx, 0x1f
 80a7bc9:  sub edx, eax
 80a7bcb:  cmp edx, 0x1f
 80a7bce:  je 80a8aca
 80a7bd4:  cmp edx, 0x1e
 80a7bd7:  jg 80a888a
 80a7bdd:  mov eax, 0x1f
 80a7be2:  mov ebx, 0x2
 80a7be7:  sub eax, edx
 80a7be9:  mov DWORD PTR [esp+0xc], eax
 80a7bed:  lea eax, [ebp-0x20]
 80a7bf0:  mov DWORD PTR [esp+0x8], ecx
 80a7bf4:  mov edi, DWORD PTR [ebp-0x1114]
 80a7bfa:  mov DWORD PTR [esp+0x4], edi
 80a7bfe:  mov DWORD PTR [ebp-0x1120], eax
 80a7c04:  mov edx, DWORD PTR [ebp-0x1120]
 80a7c0a:  mov eax, ebx
 80a7c0c:  sub eax, ecx
 80a7c0e:  lea eax, [edx+eax*4]
 80a7c11:  mov DWORD PTR [esp], eax
 80a7c14:  call 808c1c0
 80a7c19:  sub ebx, DWORD PTR [ebp-0x10]
 80a7c1c:  test ebx, ebx
 80a7c1e:  jle 80a7c40
 80a7c20:  mov ebx, DWORD PTR [ebp-0x1120]
 80a7c26:  xor edx, edx
 80a7c28:  mov ecx, 0x2
 80a7c2d:  mov eax, ecx
 80a7c2f:  sub eax, DWORD PTR [ebp-0x10]
 80a7c32:  mov DWORD PTR [ebx+edx*4], 0x0
 80a7c39:  add edx, 0x1
 80a7c3c:  cmp eax, edx
 80a7c3e:  jg 80a7c2d
 80a7c40:  mov DWORD PTR [esp+0x8], 0x0
 80a7c48:  mov edx, esi
 80a7c4a:  mov DWORD PTR [esp+0x4], 0x0
 80a7c52:  mov DWORD PTR [esp], 0x0
 80a7c59:  mov ecx, DWORD PTR [ebp-0x10f8]
 80a7c5f:  mov eax, DWORD PTR [ebp-0x1120]
 80a7c65:  call 80a6840
 80a7c6a:  jmp 80a6c10
 80a7c6f:  mov DWORD PTR [esp+0xc], 0x80b03e0
 80a7c77:  mov DWORD PTR [esp+0x8], 0x3
 80a7c7f:  mov DWORD PTR [esp+0x4], 0x80b145c
 80a7c87:  mov DWORD PTR [esp], esi
 80a7c8a:  call 80a8fe0
 80a7c8f:  test eax, eax
 80a7c91:  jne 80a6bf3
 80a7c97:  mov edi, DWORD PTR [ebp+0xc]
 80a7c9a:  test edi, edi
 80a7c9c:  je 80a7cd2
 80a7c9e:  lea eax, [esi+0x3]
 80a7ca1:  mov DWORD PTR [esp+0xc], 0x80b03e0
 80a7ca9:  mov DWORD PTR [esp+0x8], 0x5
 80a7cb1:  mov DWORD PTR [esp+0x4], 0x80c6ca3
 80a7cb9:  mov DWORD PTR [esp], eax
 80a7cbc:  call 80a8fe0
 80a7cc1:  mov edx, DWORD PTR [ebp+0xc]
 80a7cc4:  cmp eax, 0x1
 80a7cc7:  sbb eax, eax
 80a7cc9:  and eax, 0x5
 80a7ccc:  lea eax, [esi+eax+0x3]
 80a7cd0:  mov DWORD PTR [edx], eax
 80a7cd2:  mov esi, DWORD PTR [ebp-0x10f8]
 80a7cd8:  test esi, esi
 80a7cda:  jne 80a8642
 80a7ce0:  fld DWORD PTR ds:0x80c6d00
 80a7ce6:  jmp 80a6c10
 80a7ceb:  mov DWORD PTR [esp+0xc], 0x80b03e0
 80a7cf3:  mov DWORD PTR [esp+0x8], 0x3
 80a7cfb:  mov DWORD PTR [esp+0x4], 0x80b1454
 80a7d03:  mov DWORD PTR [esp], esi
 80a7d06:  call 80a8fe0
 80a7d0b:  test eax, eax
 80a7d0d:  jne 80a6bf3
 80a7d13:  cmp BYTE PTR [esi+0x3], 0x28
 80a7d17:  lea edi, [esi+0x3]
 80a7d1a:  je 80a8813
 80a7d20:  fld DWORD PTR ds:0x80c6d08
 80a7d26:  mov esi, DWORD PTR [ebp+0xc]
 80a7d29:  test esi, esi
 80a7d2b:  je 80a6c10
 80a7d31:  mov eax, DWORD PTR [ebp+0xc]
 80a7d34:  mov DWORD PTR [eax], edi
 80a7d36:  jmp 80a6c10
 80a7d3b:  movzx ecx, BYTE PTR [edi+0x2]
 80a7d3f:  lea ebx, [edi+0x2]
 80a7d42:  mov DWORD PTR [ebp-0x10cc], 0x0
 80a7d4c:  jmp 80a7568
 80a7d51:  mov eax, DWORD PTR [ebp+0xc]
 80a7d54:  test eax, eax
 80a7d56:  je 80a6d18
 80a7d5c:  mov edx, DWORD PTR [ebp+0xc]
 80a7d5f:  mov DWORD PTR [edx], ecx
 80a7d61:  jmp 80a6d18
 80a7d66:  add esi, 0x2
 80a7d69:  movzx ebx, BYTE PTR [esi]
 80a7d6c:  mov DWORD PTR [ebp-0x10f4], 0x10
 80a7d76:  mov DWORD PTR [ebp-0x10d0], 0x0
 80a7d80:  mov BYTE PTR [ebp-0x1089], 0x0
 80a7d87:  mov BYTE PTR [ebp-0x105d], bl
 80a7d8d:  mov BYTE PTR [ebp-0x10fd], 0x1
 80a7d94:  jmp 80a6c4d
 80a7d99:  mov eax, DWORD PTR [ebp-0x10e4]
 80a7d9f:  mov edx, DWORD PTR [ebp-0x10dc]
 80a7da5:  neg eax
 80a7da7:  lea esi, [edx+eax+0x1345]
 80a7dae:  jmp 80a75a0
 80a7db3:  add edx, 0x2
 80a7db6:  mov DWORD PTR [ebp-0x1088], edx
 80a7dbc:  mov DWORD PTR [ebp-0x1070], 0x1
 80a7dc6:  mov BYTE PTR [ebp-0x1081], 0x1
 80a7dcd:  jmp 80a717f
 80a7dd2:  mov eax, DWORD PTR [ebp-0x10ec]
 80a7dd8:  sub eax, 0x40
 80a7ddb:  mov ecx, eax
 80a7ddd:  sar ecx, 0x5
 80a7de0:  and eax, 0x1f
 80a7de3:  mov DWORD PTR [ebp-0x10c0], ecx
 80a7de9:  mov DWORD PTR [ebp-0x10bc], eax
 80a7def:  jne 80a8550
 80a7df5:  mov edi, DWORD PTR [ebp-0x1114]
 80a7dfb:  lea ebx, [ebp-0x20]
 80a7dfe:  mov esi, ecx
 80a7e00:  mov DWORD PTR [ebp-0x1120], ebx
 80a7e06:  sub esi, 0x1
 80a7e09:  lea eax, [edi+ecx*4]
 80a7e0c:  mov edx, DWORD PTR [eax]
 80a7e0e:  mov DWORD PTR [ebp-0x20], edx
 80a7e11:  mov eax, DWORD PTR [eax+0x4]
 80a7e14:  mov DWORD PTR [ebp-0x10b8], 0x1f
 80a7e1e:  mov DWORD PTR [ebp-0x1c], eax
 80a7e21:  mov ebx, DWORD PTR [ebp-0x844]
 80a7e27:  xor eax, eax
 80a7e29:  test ebx, ebx
 80a7e2b:  jne 80a7e40
 80a7e2d:  lea esi, [esi]
 80a7e30:  mov ebx, DWORD PTR [ebp-0x1114]
 80a7e36:  add eax, 0x1
 80a7e39:  mov ecx, DWORD PTR [ebx+eax*4]
 80a7e3c:  test ecx, ecx
 80a7e3e:  je 80a7e30
 80a7e40:  mov edx, DWORD PTR [ebp-0x10ec]
 80a7e46:  mov edi, DWORD PTR [ebp-0x106c]
 80a7e4c:  sub edx, 0x1
 80a7e4f:  cmp DWORD PTR [ebp-0x1068], edi
 80a7e55:  setl cl
 80a7e58:  cmp eax, esi
 80a7e5a:  setl al
 80a7e5d:  or eax, ecx
 80a7e5f:  and eax, 0x1
 80a7e62:  mov DWORD PTR [esp+0x8], eax
 80a7e66:  mov eax, DWORD PTR [ebp-0x10b8]
 80a7e6c:  mov DWORD PTR [esp+0x4], eax
 80a7e70:  mov eax, DWORD PTR [ebp+esi*4-0x844]
 80a7e77:  mov DWORD PTR [esp], eax
 80a7e7a:  mov ecx, DWORD PTR [ebp-0x10f8]
 80a7e80:  mov eax, DWORD PTR [ebp-0x1120]
 80a7e86:  call 80a6840
 80a7e8b:  jmp 80a6c10
 80a7e90:  mov ecx, DWORD PTR [ebp-0x10e8]
 80a7e96:  add ecx, 0x1
 80a7e99:  mov DWORD PTR [ebp-0x1074], ecx
 80a7e9f:  jmp 80a749e
 80a7ea4:  mov eax, DWORD PTR [ebp-0x105c]
 80a7eaa:  mov edx, DWORD PTR [ebp-0x1058]
 80a7eb0:  cmp DWORD PTR [ebp-0x10], 0x1
 80a7eb4:  mov DWORD PTR [ebp-0x10a8], eax
 80a7eba:  mov DWORD PTR [ebp-0x10a4], edx
 80a7ec0:  jg 80a8495
 80a7ec6:  mov edx, DWORD PTR [ebp-0x844]
 80a7ecc:  cmp DWORD PTR [ebp-0x10a4], edx
 80a7ed2:  mov DWORD PTR [ebp-0x10a0], 0x0
 80a7edc:  mov DWORD PTR [ebp-0x1064], edx
 80a7ee2:  jbe 80a84ad
 80a7ee8:  mov eax, DWORD PTR [ebp-0x10ec]
 80a7eee:  test eax, eax
 80a7ef0:  jle 80a8b72
 80a7ef6:  cmp DWORD PTR [ebp-0x10ec], 0x20
 80a7efd:  jg 80a8b32
 80a7f03:  mov eax, DWORD PTR [ebp-0x20]
 80a7f06:  mov DWORD PTR [ebp-0x109c], 0x0
 80a7f10:  mov DWORD PTR [ebp-0x20], 0x0
 80a7f17:  mov DWORD PTR [ebp-0x1c], eax
 80a7f1a:  add DWORD PTR [ebp-0x10ec], 0x20
 80a7f21:  xor edi, edi
 80a7f23:  cmp DWORD PTR [ebp-0x10ec], 0x40
 80a7f2a:  mov DWORD PTR [ebp-0x10a0], edx
 80a7f30:  mov DWORD PTR [ebp-0x1064], 0x0
 80a7f3a:  jg 80a81e6
 80a7f40:  mov edi, DWORD PTR [ebp-0x10a8]
 80a7f46:  neg edi
 80a7f48:  mov DWORD PTR [ebp-0x1130], edi
 80a7f4e:  xchg ax, ax
 80a7f50:  mov eax, DWORD PTR [ebp-0x10a4]
 80a7f56:  cmp DWORD PTR [ebp-0x10a0], eax
 80a7f5c:  je 80a816a
 80a7f62:  mov edi, DWORD PTR [ebp-0x1064]
 80a7f68:  mov ecx, DWORD PTR [ebp-0x10a0]
 80a7f6e:  mov eax, edi
 80a7f70:  mov edx, ecx
 80a7f72:  div DWORD PTR [ebp-0x10a4]
 80a7f78:  mov edi, eax
 80a7f7a:  mov ecx, edx
 80a7f7c:  mov eax, DWORD PTR [ebp-0x10a8]
 80a7f82:  mul edi
 80a7f84:  mov ebx, edx
 80a7f86:  mov esi, eax
 80a7f88:  mov eax, DWORD PTR [ebp-0x10a4]
 80a7f8e:  lea edx, [ecx+eax]
 80a7f91:  lea esi, [esi]
 80a7f98:  cmp ebx, ecx
 80a7f9a:  ja 80a80a8
 80a7fa0:  je 80a80a0
 80a7fa6:  xor edx, edx
 80a7fa8:  sub edx, esi
 80a7faa:  sbb ecx, ebx
 80a7fac:  mov DWORD PTR [ebp-0x1064], edx
 80a7fb2:  mov DWORD PTR [ebp-0x10a0], ecx
 80a7fb8:  mov eax, DWORD PTR [ebp-0x10ec]
 80a7fbe:  test eax, eax
 80a7fc0:  jne 80a8128
 80a7fc6:  test edi, edi
 80a7fc8:  jne 80a82aa
 80a7fce:  sub DWORD PTR [ebp-0x14], 0x20
 80a7fd2:  cmp DWORD PTR [ebp-0x10ec], 0x40
 80a7fd9:  mov DWORD PTR [ebp-0x1c], 0x0
 80a7fe0:  mov DWORD PTR [ebp-0x20], edi
 80a7fe3:  jle 80a7f50
 80a7fe9:  jmp 80a81e6
 80a7fee:  xchg ax, ax
 80a7ff0:  mov eax, DWORD PTR [ebp+0x14]
 80a7ff3:  mov eax, DWORD PTR [eax+0x34]
 80a7ff6:  mov DWORD PTR [ebp-0x1118], eax
 80a7ffc:  mov ebx, eax
 80a7ffe:  xchg ax, ax
 80a8000:  sub edx, 0x1
 80a8003:  movzx ecx, BYTE PTR [edx]
 80a8006:  movsx eax, cl
 80a8009:  test BYTE PTR [ebx+eax*2+0x1], 0x10
 80a800e:  je 80a8000
 80a8010:  cmp cl, 0x30
 80a8013:  jne 80a6fc8
 80a8019:  sub DWORD PTR [ebp-0x106c], 0x1
 80a8020:  mov eax, DWORD PTR [ebp-0x14]
 80a8023:  mov ecx, DWORD PTR [ebp-0x106c]
 80a8029:  sub DWORD PTR [ebp-0x10e0], 0x1
 80a8030:  add eax, 0x4
 80a8033:  test ecx, ecx
 80a8035:  mov DWORD PTR [ebp-0x14], eax
 80a8038:  jle 80a6fc8
 80a803e:  test eax, eax
 80a8040:  jns 80a6fc8
 80a8046:  sub edx, 0x1
 80a8049:  mov ebx, DWORD PTR [ebp-0x1118]
 80a804f:  movzx ecx, BYTE PTR [edx]
 80a8052:  movsx eax, cl
 80a8055:  test BYTE PTR [ebx+eax*2+0x1], 0x10
 80a805a:  je 80a8000
 80a805c:  jmp 80a8010
 80a805e:  cmp BYTE PTR [ebp-0x10fd], 0x0
 80a8065:  je 80a6d88
 80a806b:  mov eax, DWORD PTR [ebp-0x1104]
 80a8071:  movzx edx, BYTE PTR [esi+eax]
 80a8075:  lea eax, [edx-0x30]
 80a8078:  cmp al, 0x9
 80a807a:  jbe 80a8093
 80a807c:  movsx eax, dl
 80a807f:  mov edx, DWORD PTR [ebp-0x111c]
 80a8085:  mov eax, DWORD PTR [edx+eax*4]
 80a8088:  sub eax, 0x61
 80a808b:  cmp al, 0x5
 80a808d:  ja 80a6cd4
 80a8093:  mov edi, esi
 80a8095:  jmp 80a6d8e
 80a809a:  lea esi, [esi]
 80a80a0:  test esi, esi
 80a80a2:  je 80a7fa6
 80a80a8:  add edx, DWORD PTR [ebp-0x10a4]
 80a80ae:  sub edi, 0x1
 80a80b1:  sub esi, DWORD PTR [ebp-0x10a8]
 80a80b7:  sbb ebx, 0x0
 80a80ba:  add ecx, DWORD PTR [ebp-0x10a4]
 80a80c0:  mov eax, edx
 80a80c2:  sub eax, DWORD PTR [ebp-0x10a4]
 80a80c8:  cmp DWORD PTR [ebp-0x10a4], eax
 80a80ce:  jbe 80a7f98
 80a80d4:  jmp 80a7fa6
 80a80d9:  lea esi, [esi]
 80a80e0:  mov ecx, 0x3
 80a80e5:  mov eax, ebx
 80a80e7:  sub ecx, esi
 80a80e9:  shr eax, cl
 80a80eb:  lea ecx, [esi+0x1d]
 80a80ee:  or DWORD PTR [ebp+edi*4-0x20], eax
 80a80f2:  shl ebx, cl
 80a80f4:  test edi, edi
 80a80f6:  je 80a8757
 80a80fc:  mov DWORD PTR [ebp-0x20], ebx
 80a80ff:  add esi, 0x1c
 80a8102:  xor edi, edi
 80a8104:  jmp 80a74d0
 80a8109:  lea esi, [esi]
 80a8110:  mov ebx, DWORD PTR [ebp+0x14]
 80a8113:  add DWORD PTR [ebp-0x1074], 0x1
 80a811a:  mov eax, DWORD PTR [ebx+0x38]
 80a811d:  mov eax, DWORD PTR [eax+ecx*4]
 80a8120:  lea ebx, [eax-0x57]
 80a8123:  jmp 80a7521
 80a8128:  cmp DWORD PTR [ebp-0x10ec], 0x20
 80a812f:  jg 80a81a3
 80a8131:  mov eax, DWORD PTR [ebp-0x20]
 80a8134:  add DWORD PTR [ebp-0x10ec], 0x20
 80a813b:  mov DWORD PTR [ebp-0x20], edi
 80a813e:  mov DWORD PTR [ebp-0x1c], eax
 80a8141:  jmp 80a7f50
 80a8146:  xchg ax, ax
 80a8148:  cmp DWORD PTR [ebp-0x10ec], 0x20
 80a814f:  jg 80a821c
 80a8155:  mov eax, DWORD PTR [ebp-0x20]
 80a8158:  add DWORD PTR [ebp-0x10ec], 0x20
 80a815f:  mov DWORD PTR [ebp-0x20], edi
 80a8162:  mov DWORD PTR [ebp-0x1c], eax
 80a8165:  jmp 80a77e0
 80a816a:  mov ecx, DWORD PTR [ebp-0x10a0]
 80a8170:  add ecx, DWORD PTR [ebp-0x1064]
 80a8176:  jae 80a831b
 80a817c:  sub ecx, DWORD PTR [ebp-0x10a8]
 80a8182:  xor edx, edx
 80a8184:  mov edi, 0xffffffff
 80a8189:  add edx, DWORD PTR [ebp-0x10a8]
 80a818f:  adc ecx, 0x0
 80a8192:  mov DWORD PTR [ebp-0x1064], edx
 80a8198:  mov DWORD PTR [ebp-0x10a0], ecx
 80a819e:  jmp 80a7fb8
 80a81a3:  mov eax, 0x40
 80a81a8:  sub eax, DWORD PTR [ebp-0x10ec]
 80a81ae:  mov DWORD PTR [ebp-0x109c], eax
 80a81b4:  je 80a81e6
 80a81b6:  mov DWORD PTR [esp+0xc], eax
 80a81ba:  mov DWORD PTR [esp+0x8], 0x2
 80a81c2:  mov ecx, DWORD PTR [ebp-0x1120]
 80a81c8:  mov DWORD PTR [esp+0x4], ecx
 80a81cc:  mov DWORD PTR [esp], ecx
 80a81cf:  call 808c1c0
 80a81d4:  mov ecx, 0x20
 80a81d9:  mov eax, edi
 80a81db:  sub ecx, DWORD PTR [ebp-0x109c]
 80a81e1:  shr eax, cl
 80a81e3:  or DWORD PTR [ebp-0x20], eax
 80a81e6:  cmp BYTE PTR [ebp-0x1081], 0x0
 80a81ed:  jne 80a81fd
 80a81ef:  mov eax, DWORD PTR [ebp-0x10a0]
 80a81f5:  test eax, eax
 80a81f7:  je 80a8610
 80a81fd:  mov eax, 0x1
 80a8202:  mov edx, DWORD PTR [ebp-0x14]
 80a8205:  mov DWORD PTR [esp+0x8], eax
 80a8209:  mov eax, 0x1f
 80a820e:  sub eax, DWORD PTR [ebp-0x109c]
 80a8214:  sub edx, 0x1
 80a8217:  jmp 80a7976
 80a821c:  mov eax, 0x40
 80a8221:  sub eax, DWORD PTR [ebp-0x10ec]
 80a8227:  mov DWORD PTR [ebp-0x1090], eax
 80a822d:  je 80a7935
 80a8233:  mov DWORD PTR [esp+0xc], eax
 80a8237:  mov DWORD PTR [esp+0x8], 0x2
 80a823f:  mov edx, DWORD PTR [ebp-0x1120]
 80a8245:  mov DWORD PTR [esp+0x4], edx
 80a8249:  mov DWORD PTR [esp], edx
 80a824c:  call 808c1c0
 80a8251:  mov ecx, 0x20
 80a8256:  mov eax, edi
 80a8258:  sub ecx, DWORD PTR [ebp-0x1090]
 80a825e:  shr eax, cl
 80a8260:  or DWORD PTR [ebp-0x20], eax
 80a8263:  jmp 80a7935
 80a8268:  lea esi, [ebp-0x20]
 80a826b:  sub edi, 0x1
 80a826e:  mov DWORD PTR [ebp-0x1120], esi
 80a8274:  jne 80a827d
 80a8276:  mov DWORD PTR [ebp-0x20], 0x0
 80a827d:  mov DWORD PTR [esp+0x8], 0x0
 80a8285:  mov DWORD PTR [esp+0x4], 0x0
 80a828d:  mov DWORD PTR [esp], 0x0
 80a8294:  mov ecx, DWORD PTR [ebp-0x10f8]
 80a829a:  mov eax, DWORD PTR [ebp-0x1120]
 80a82a0:  call 80a6840
 80a82a5:  jmp 80a6c10
 80a82aa:  bsr edx, edi
 80a82ad:  mov ecx, 0x20
 80a82b2:  mov eax, ecx
 80a82b4:  xor edx, 0x1f
 80a82b7:  sub eax, edx
 80a82b9:  sub DWORD PTR [ebp-0x14], edx
 80a82bc:  cmp eax, 0x40
 80a82bf:  jle 80a8c4d
 80a82c5:  add edx, 0x40
 80a82c8:  mov eax, edi
 80a82ca:  sub ecx, edx
 80a82cc:  shr eax, cl
 80a82ce:  mov DWORD PTR [ebp-0x109c], edx
 80a82d4:  mov DWORD PTR [ebp-0x20], eax
 80a82d7:  jmp 80a81e6
 80a82dc:  bsr edx, edi
 80a82df:  mov ecx, 0x20
 80a82e4:  mov eax, ecx
 80a82e6:  xor edx, 0x1f
 80a82e9:  sub eax, edx
 80a82eb:  sub DWORD PTR [ebp-0x14], edx
 80a82ee:  cmp eax, 0x40
 80a82f1:  jle 80a8c5d
 80a82f7:  add edx, 0x40
 80a82fa:  mov eax, edi
 80a82fc:  sub ecx, edx
 80a82fe:  shr eax, cl
 80a8300:  mov DWORD PTR [ebp-0x20], eax
 80a8303:  mov eax, DWORD PTR [ebp-0x10f0]
 80a8309:  mov DWORD PTR [ebp-0x1090], edx
 80a830f:  mov esi, DWORD PTR [ebp+eax*4-0x844]
 80a8316:  jmp 80a7942
 80a831b:  xor eax, eax
 80a831d:  mov ebx, DWORD PTR [ebp-0x10a8]
 80a8323:  mov edi, 0xffffffff
 80a8328:  cmp DWORD PTR [ebp-0x10a8], 0x0
 80a832f:  mov esi, DWORD PTR [ebp-0x1130]
 80a8335:  setne al
 80a8338:  sub ebx, eax
 80a833a:  jmp 80a7f88
 80a833f:  mov eax, DWORD PTR [ebp-0x10e4]
 80a8345:  lea esi, [eax*4+0x403d]
 80a834c:  mov eax, DWORD PTR [ebp-0x10cc]
 80a8352:  test eax, eax
 80a8354:  jne 80a75a0
 80a835a:  mov eax, DWORD PTR [ebp-0x10dc]
 80a8360:  sub eax, DWORD PTR [ebp-0x10e4]
 80a8366:  lea esi, [eax*4+0x4003]
 80a836d:  jmp 80a75a0
 80a8372:  shl ecx, 0x2
 80a8375:  jmp 80a708c
 80a837a:  mov edi, DWORD PTR [ebp-0x844]
 80a8380:  mov esi, DWORD PTR [ebp-0x105c]
 80a8386:  xor ebx, ebx
 80a8388:  mov edx, edi
 80a838a:  mov eax, ebx
 80a838c:  div esi
 80a838e:  mov ebx, eax
 80a8390:  mov eax, DWORD PTR [ebp-0x10ec]
 80a8396:  mov edi, edx
 80a8398:  test eax, eax
 80a839a:  jne 80a83c0
 80a839c:  test ebx, ebx
 80a839e:  jne 80a8457
 80a83a4:  sub DWORD PTR [ebp-0x14], 0x20
 80a83a8:  cmp DWORD PTR [ebp-0x10ec], 0x40
 80a83af:  mov DWORD PTR [ebp-0x1c], 0x0
 80a83b6:  mov DWORD PTR [ebp-0x20], ebx
 80a83b9:  jle 80a8386
 80a83bb:  xor esi, esi
 80a83bd:  jmp 80a8416
 80a83bf:  nop
 80a83c0:  cmp DWORD PTR [ebp-0x10ec], 0x20
 80a83c7:  jg 80a83db
 80a83c9:  mov eax, DWORD PTR [ebp-0x20]
 80a83cc:  add DWORD PTR [ebp-0x10ec], 0x20
 80a83d3:  mov DWORD PTR [ebp-0x20], ebx
 80a83d6:  mov DWORD PTR [ebp-0x1c], eax
 80a83d9:  jmp 80a8386
 80a83db:  mov esi, 0x40
 80a83e0:  sub esi, DWORD PTR [ebp-0x10ec]
 80a83e6:  test esi, esi
 80a83e8:  jle 80a8416
 80a83ea:  mov DWORD PTR [esp+0xc], esi
 80a83ee:  mov DWORD PTR [esp+0x8], 0x2
 80a83f6:  mov ecx, DWORD PTR [ebp-0x1120]
 80a83fc:  mov DWORD PTR [esp+0x4], ecx
 80a8400:  mov DWORD PTR [esp], ecx
 80a8403:  call 808c1c0
 80a8408:  mov ecx, 0x20
 80a840d:  mov eax, ebx
 80a840f:  sub ecx, esi
 80a8411:  shr eax, cl
 80a8413:  or DWORD PTR [ebp-0x20], eax
 80a8416:  mov edx, DWORD PTR [ebp-0x14]
 80a8419:  xor eax, eax
 80a841b:  sub edx, 0x1
 80a841e:  test edi, edi
 80a8420:  setne al
 80a8423:  or DWORD PTR [ebp-0x1070], eax
 80a8429:  mov eax, 0x1f
 80a842e:  mov edi, DWORD PTR [ebp-0x1070]
 80a8434:  sub eax, esi
 80a8436:  mov DWORD PTR [esp+0x4], eax
 80a843a:  mov DWORD PTR [esp], ebx
 80a843d:  mov DWORD PTR [esp+0x8], edi
 80a8441:  mov ecx, DWORD PTR [ebp-0x10f8]
 80a8447:  mov eax, DWORD PTR [ebp-0x1120]
 80a844d:  call 80a6840
 80a8452:  jmp 80a6c10
 80a8457:  bsr edx, ebx
 80a845a:  mov eax, 0x20
 80a845f:  mov ecx, 0x20
 80a8464:  xor edx, 0x1f
 80a8467:  sub eax, edx
 80a8469:  sub DWORD PTR [ebp-0x14], edx
 80a846c:  cmp eax, 0x40
 80a846f:  jle 80a8c0a
 80a8475:  lea esi, [edx+0x40]
 80a8478:  mov eax, ebx
 80a847a:  sub ecx, esi
 80a847c:  shr eax, cl
 80a847e:  mov DWORD PTR [ebp-0x20], eax
 80a8481:  jmp 80a8416
 80a8483:  cmp BYTE PTR [ebp-0x10fd], 0x0
 80a848a:  je 80a6d88
 80a8490:  jmp 80a6cdd
 80a8495:  mov ebx, DWORD PTR [ebp-0x840]
 80a849b:  mov esi, DWORD PTR [ebp-0x844]
 80a84a1:  mov DWORD PTR [ebp-0x10a0], ebx
 80a84a7:  mov DWORD PTR [ebp-0x1064], esi
 80a84ad:  mov DWORD PTR [ebp-0x109c], 0x0
 80a84b7:  jmp 80a7f40
 80a84bc:  cmp cl, 0x70
 80a84bf:  jne 80a6cd4
 80a84c5:  cmp esi, DWORD PTR [ebp-0x1078]
 80a84cb:  jne 80a6d88
 80a84d1:  lea esi, [esi]
 80a84d8:  jmp 80a6cdd
 80a84dd:  lea esi, [esi]
 80a84e0:  mov eax, DWORD PTR [ebp+0xc]
 80a84e3:  test eax, eax
 80a84e5:  lea esi, [esi]
 80a84e8:  je 80a6d26
 80a84ee:  mov eax, DWORD PTR [ebp+0x8]
 80a84f1:  fldz
 80a84f3:  mov edi, DWORD PTR [ebp+0xc]
 80a84f6:  mov DWORD PTR [edi], eax
 80a84f8:  jmp 80a6c10
 80a84fd:  lea esi, [ebp-0x20]
 80a8500:  lea eax, [ecx*4]
 80a8507:  mov DWORD PTR [ebp-0x1120], esi
 80a850d:  mov DWORD PTR [esp+0x8], eax
 80a8511:  mov edi, DWORD PTR [ebp-0x1114]
 80a8517:  mov DWORD PTR [esp], esi
 80a851a:  mov DWORD PTR [esp+0x4], edi
 80a851e:  call 804efc0
 80a8523:  mov eax, DWORD PTR [ebp-0x10]
 80a8526:  cmp eax, 0x1
 80a8529:  jle 80a8a25
 80a852f:  mov ecx, 0x42
 80a8534:  mov edx, 0x55555556
 80a8539:  sub ecx, DWORD PTR [ebp-0x10ec]
 80a853f:  mov eax, ecx
 80a8541:  imul edx
 80a8543:  sar ecx, 0x1f
 80a8546:  sub edx, ecx
 80a8548:  lea eax, [edx+0x2]
 80a854b:  jmp 80a7154
 80a8550:  sub eax, 0x1
 80a8553:  cmp edx, DWORD PTR [ebp-0x10c0]
 80a8559:  mov DWORD PTR [ebp-0x10b8], eax
 80a855f:  jle 80a88f9
 80a8565:  mov esi, DWORD PTR [ebp-0x10c0]
 80a856b:  lea ecx, [ebp-0x20]
 80a856e:  mov eax, DWORD PTR [ebp-0x1114]
 80a8574:  mov edi, DWORD PTR [ebp-0x10bc]
 80a857a:  mov DWORD PTR [ebp-0x1080], 0x20
 80a8584:  sub DWORD PTR [ebp-0x1080], edi
 80a858a:  lea edi, [eax+esi*4+0x4]
 80a858e:  mov eax, DWORD PTR [ebp-0x10c0]
 80a8594:  mov ebx, DWORD PTR [ebp+esi*4-0x844]
 80a859b:  mov esi, ecx
 80a859d:  mov DWORD PTR [ebp-0x1120], ecx
 80a85a3:  mov DWORD PTR [ebp-0x112c], edx
 80a85a9:  mov DWORD PTR [ebp-0x1138], eax
 80a85af:  movzx ecx, BYTE PTR [ebp-0x10bc]
 80a85b6:  mov edx, ebx
 80a85b8:  mov ebx, DWORD PTR [edi]
 80a85ba:  add edi, 0x4
 80a85bd:  add DWORD PTR [ebp-0x1138], 0x1
 80a85c4:  shr edx, cl
 80a85c6:  movzx ecx, BYTE PTR [ebp-0x1080]
 80a85cd:  mov eax, ebx
 80a85cf:  shl eax, cl
 80a85d1:  or edx, eax
 80a85d3:  mov eax, DWORD PTR [ebp-0x1138]
 80a85d9:  mov DWORD PTR [esi], edx
 80a85db:  add esi, 0x4
 80a85de:  cmp DWORD PTR [ebp-0x112c], eax
 80a85e4:  jg 80a85af
 80a85e6:  mov edx, DWORD PTR [ebp-0x10c0]
 80a85ec:  sub eax, edx
 80a85ee:  mov esi, edx
 80a85f0:  sub eax, 0x1
 80a85f3:  jg 80a7e21
 80a85f9:  movzx ecx, BYTE PTR [ebp-0x10bc]
 80a8600:  mov esi, DWORD PTR [ebp-0x10c0]
 80a8606:  shr ebx, cl
 80a8608:  mov DWORD PTR [ebp-0x1c], ebx
 80a860b:  jmp 80a7e21
 80a8610:  xor eax, eax
 80a8612:  cmp DWORD PTR [ebp-0x1064], 0x0
 80a8619:  setne al
 80a861c:  jmp 80a8202
 80a8621:  mov eax, gs:0x0
 80a8627:  mov edx, 0xffffffe8
 80a862d:  mov DWORD PTR [eax+edx], 0x22
 80a8634:  mov eax, DWORD PTR [ebp-0x10f8]
 80a863a:  test eax, eax
 80a863c:  je 80a7ce0
 80a8642:  fld DWORD PTR ds:0x80c6d04
 80a8648:  jmp 80a6c10
 80a864d:  mov esi, DWORD PTR [ebp-0x10f0]
 80a8653:  mov eax, DWORD PTR [ebp-0x10ec]
 80a8659:  sub esi, ecx
 80a865b:  test eax, eax
 80a865d:  jle 80a8ab3
 80a8663:  mov edi, DWORD PTR [ebp-0x10ec]
 80a8669:  mov eax, esi
 80a866b:  shl eax, 0x5
 80a866e:  lea ebx, [eax+edi]
 80a8671:  cmp ebx, 0x40
 80a8674:  jg 80a8938
 80a867a:  mov eax, DWORD PTR [ebp-0x20]
 80a867d:  mov DWORD PTR [ebp-0x1090], 0x0
 80a8687:  mov DWORD PTR [ebp-0x20], 0x0
 80a868e:  mov DWORD PTR [ebp-0x1c], eax
 80a8691:  mov DWORD PTR [ebp-0x10ec], ebx
 80a8697:  test ecx, ecx
 80a8699:  jle 80a86c6
 80a869b:  mov eax, DWORD PTR [ebp-0x1114]
 80a86a1:  mov ebx, DWORD PTR [ebp-0x1114]
 80a86a7:  lea edx, [eax+ecx*4-0x4]
 80a86ab:  lea eax, [esi+ecx]
 80a86ae:  lea ecx, [ebx+eax*4]
 80a86b1:  lea ebx, [ebp-0x848]
 80a86b7:  nop
 80a86b8:  mov eax, DWORD PTR [edx]
 80a86ba:  sub edx, 0x4
 80a86bd:  mov DWORD PTR [ecx], eax
 80a86bf:  sub ecx, 0x4
 80a86c2:  cmp edx, ebx
 80a86c4:  jne 80a86b8
 80a86c6:  test esi, esi
 80a86c8:  js 80a86e6
 80a86ca:  mov edi, DWORD PTR [ebp-0x1114]
 80a86d0:  xor eax, eax
 80a86d2:  lea esi, [esi]
 80a86d8:  mov DWORD PTR [edi+eax*4], 0x0
 80a86df:  add eax, 0x1
 80a86e2:  cmp esi, eax
 80a86e4:  jge 80a86d8
 80a86e6:  mov eax, DWORD PTR [ebp-0x10f0]
 80a86ec:  xor edi, edi
 80a86ee:  cmp DWORD PTR [ebp-0x10ec], 0x40
 80a86f5:  lea edx, [eax+0x1]
 80a86f8:  mov esi, DWORD PTR [ebp+eax*4-0x844]
 80a86ff:  mov DWORD PTR [ebp+eax*4-0x105c], 0x0
 80a870a:  mov DWORD PTR [ebp-0x110c], edx
 80a8710:  jle 80a77c7
 80a8716:  jmp 80a7942
 80a871b:  mov ebx, DWORD PTR [ebp-0x1108]
 80a8721:  mov esi, DWORD PTR [ebp-0x1114]
 80a8727:  lea ecx, [esi+ebx*4]
 80a872a:  mov ebx, DWORD PTR [ebp-0x10f0]
 80a8730:  test ebx, ebx
 80a8732:  js 80a794a
 80a8738:  mov eax, DWORD PTR [ecx]
 80a873a:  sub ebx, 0x1
 80a873d:  mov esi, ebx
 80a873f:  not esi
 80a8741:  test eax, eax
 80a8743:  mov eax, esi
 80a8745:  sete dl
 80a8748:  sub ecx, 0x4
 80a874b:  shr eax, 0x1f
 80a874e:  test dl, al
 80a8750:  jne 80a8738
 80a8752:  jmp 80a7952
 80a8757:  mov DWORD PTR [esp+0x8], 0x1
 80a875f:  lea eax, [ebp-0x20]
 80a8762:  mov DWORD PTR [esp+0x4], 0x1f
 80a876a:  mov DWORD PTR [esp], ebx
 80a876d:  mov ecx, DWORD PTR [ebp-0x10f8]
 80a8773:  call 80a6840
 80a8778:  jmp 80a6c10
 80a877d:  cmp DWORD PTR [ebp-0x10dc], 0xff
 80a8784:  je 80a8a10
 80a878a:  mov eax, gs:0x0
 80a8790:  mov edx, 0xffffffe8
 80a8796:  mov DWORD PTR [eax+edx], 0x22
 80a879d:  mov eax, DWORD PTR [ebp-0x10cc]
 80a87a3:  test eax, eax
 80a87a5:  jne 80a8a10
 80a87ab:  mov eax, DWORD PTR [ebp-0x10f8]
 80a87b1:  test eax, eax
 80a87b3:  jne 80a8bcf
 80a87b9:  fld DWORD PTR ds:0x80c6d00
 80a87bf:  add ebx, 0x1
 80a87c2:  movzx eax, BYTE PTR [ebx]
 80a87c5:  sub eax, 0x30
 80a87c8:  cmp al, 0x9
 80a87ca:  jbe 80a87bf
 80a87cc:  mov eax, DWORD PTR [ebp+0xc]
 80a87cf:  fld st(0)
 80a87d1:  test eax, eax
 80a87d3:  je 80a6c0a
 80a87d9:  fstp st(0)
 80a87db:  mov ecx, DWORD PTR [ebp+0xc]
 80a87de:  mov DWORD PTR [ecx], ebx
 80a87e0:  jmp 80a6c10
 80a87e5:  mov ecx, DWORD PTR [edx+0x2c]
 80a87e8:  mov DWORD PTR [ebp-0x10d0], ecx
 80a87ee:  movzx eax, BYTE PTR [ecx]
 80a87f1:  sub eax, 0x1
 80a87f4:  cmp al, 0x7d
 80a87f6:  ja 80a6afd
 80a87fc:  mov ebx, DWORD PTR [edx+0x28]
 80a87ff:  mov DWORD PTR [ebp-0x10d4], ebx
 80a8805:  cmp BYTE PTR [ebx], 0x0
 80a8808:  jne 80a6b11
 80a880e:  jmp 80a6afd
 80a8813:  mov ebx, DWORD PTR [ebp+0x14]
 80a8816:  mov ecx, DWORD PTR [ebx+0x38]
 80a8819:  mov ebx, edi
 80a881b:  nop
 80a881c:  lea esi, [esi]
 80a8820:  add ebx, 0x1
 80a8823:  movzx edx, BYTE PTR [ebx]
 80a8826:  lea eax, [edx-0x30]
 80a8829:  cmp al, 0x9
 80a882b:  jbe 80a8820
 80a882d:  movsx eax, dl
 80a8830:  mov eax, DWORD PTR [ecx+eax*4]
 80a8833:  sub eax, 0x61
 80a8836:  cmp al, 0x19
 80a8838:  jbe 80a8820
 80a883a:  cmp dl, 0x5f
 80a883d:  je 80a8820
 80a883f:  cmp dl, 0x29
 80a8842:  jne 80a7d20
 80a8848:  mov esi, DWORD PTR [ebp+0x14]
 80a884b:  lea eax, [ebp-0x18]
 80a884e:  mov DWORD PTR [esp+0x4], eax
 80a8852:  lea eax, [edi+0x1]
 80a8855:  mov DWORD PTR [esp+0xc], 0x0
 80a885d:  mov DWORD PTR [esp+0x8], 0x0
 80a8865:  mov DWORD PTR [esp+0x10], esi
 80a8869:  mov DWORD PTR [esp], eax
 80a886c:  call 80a1420
 80a8871:  cmp DWORD PTR [ebp-0x18], ebx
 80a8874:  mov edi, eax
 80a8876:  je 80a8c1a
 80a887c:  fld DWORD PTR ds:0x80c6d08
 80a8882:  lea edi, [ebx+0x1]
 80a8885:  jmp 80a7d26
 80a888a:  lea eax, [edx-0x1f]
 80a888d:  mov DWORD PTR [esp+0xc], eax
 80a8891:  lea eax, [ebp-0x20]
 80a8894:  mov DWORD PTR [esp+0x8], ecx
 80a8898:  mov edi, DWORD PTR [ebp-0x1114]
 80a889e:  mov DWORD PTR [esp+0x4], edi
 80a88a2:  mov DWORD PTR [ebp-0x1120], eax
 80a88a8:  mov edx, DWORD PTR [ebp-0x1120]
 80a88ae:  mov eax, 0x2
 80a88b3:  sub eax, ecx
 80a88b5:  lea eax, [edx+eax*4]
 80a88b8:  mov DWORD PTR [esp], eax
 80a88bb:  call 808c220
 80a88c0:  mov edx, 0x1
 80a88c5:  sub edx, DWORD PTR [ebp-0x10]
 80a88c8:  test edx, edx
 80a88ca:  mov DWORD PTR [ebp+edx*4-0x20], eax
 80a88ce:  jle 80a7c40
 80a88d4:  mov ebx, DWORD PTR [ebp-0x1120]
 80a88da:  xor edx, edx
 80a88dc:  mov ecx, 0x1
 80a88e1:  mov eax, ecx
 80a88e3:  sub eax, DWORD PTR [ebp-0x10]
 80a88e6:  mov DWORD PTR [ebx+edx*4], 0x0
 80a88ed:  add edx, 0x1
 80a88f0:  cmp eax, edx
 80a88f2:  jg 80a88e1
 80a88f4:  jmp 80a7c40
 80a88f9:  mov edx, DWORD PTR [ebp-0x10c0]
 80a88ff:  lea ecx, [ebp-0x20]
 80a8902:  mov DWORD PTR [ebp-0x1120], ecx
 80a8908:  mov ebx, DWORD PTR [ebp+edx*4-0x844]
 80a890f:  jmp 80a85f9
 80a8914:  mov eax, DWORD PTR [ebp-0x10f0]
 80a891a:  mov DWORD PTR [esp+0x4], esi
 80a891e:  shl eax, 0x2
 80a8921:  mov DWORD PTR [esp+0x8], eax
 80a8925:  mov edi, DWORD PTR [ebp-0x1110]
 80a892b:  mov DWORD PTR [esp], edi
 80a892e:  call 804efc0
 80a8933:  jmp 80a761e
 80a8938:  mov eax, DWORD PTR [ebp-0x10ec]
 80a893e:  mov DWORD PTR [ebp-0x1090], 0x40
 80a8948:  sub DWORD PTR [ebp-0x1090], eax
 80a894e:  cmp DWORD PTR [ebp-0x1090], 0x1f
 80a8955:  jg 80a8b96
 80a895b:  mov edi, DWORD PTR [ebp-0x1090]
 80a8961:  test edi, edi
 80a8963:  je 80a8691
 80a8969:  mov ecx, DWORD PTR [ebp-0x1090]
 80a896f:  mov DWORD PTR [esp+0x8], 0x2
 80a8977:  mov DWORD PTR [esp+0xc], ecx
 80a897b:  mov edi, DWORD PTR [ebp-0x1120]
 80a8981:  mov DWORD PTR [esp+0x4], edi
 80a8985:  mov DWORD PTR [esp], edi
 80a8988:  call 808c1c0
 80a898d:  mov ecx, DWORD PTR [ebp-0x10]
 80a8990:  jmp 80a8691
 80a8995:  mov edi, DWORD PTR [ebp-0x10d4]
 80a899b:  mov DWORD PTR [ebp-0x1078], esi
 80a89a1:  movzx ecx, BYTE PTR [edi]
 80a89a4:  cmp bl, 0x30
 80a89a7:  je 80a89ed
 80a89a9:  test cl, cl
 80a89ab:  mov eax, 0xffffffff
 80a89b0:  je 80a89e7
 80a89b2:  cmp cl, bl
 80a89b4:  jne 80a6c83
 80a89ba:  xor eax, eax
 80a89bc:  lea esi, [esi]
 80a89c0:  jmp 80a89d3
 80a89c2:  lea esi, [esi]
 80a89c8:  mov edi, DWORD PTR [ebp-0x1078]
 80a89ce:  cmp dl, BYTE PTR [edi+eax]
 80a89d1:  jne 80a8a05
 80a89d3:  mov edi, DWORD PTR [ebp-0x10d4]
 80a89d9:  add eax, 0x1
 80a89dc:  movzx edx, BYTE PTR [edi+eax]
 80a89e0:  test dl, dl
 80a89e2:  jne 80a89c8
 80a89e4:  sub eax, 0x1
 80a89e7:  add DWORD PTR [ebp-0x1078], eax
 80a89ed:  add DWORD PTR [ebp-0x1078], 0x1
 80a89f4:  mov eax, DWORD PTR [ebp-0x1078]
 80a89fa:  movzx ebx, BYTE PTR [eax]
 80a89fd:  mov BYTE PTR [ebp-0x105d], bl
 80a8a03:  jmp 80a89a4
 80a8a05:  mov BYTE PTR [ebp-0x105d], cl
 80a8a0b:  jmp 80a6c83
 80a8a10:  mov eax, DWORD PTR [ebp-0x10f8]
 80a8a16:  test eax, eax
 80a8a18:  jne 80a8b8d
 80a8a1e:  fldz
 80a8a20:  jmp 80a87bf
 80a8a25:  mov DWORD PTR [ebp+eax*4-0x20], 0x0
 80a8a2d:  jmp 80a852f
 80a8a32:  mov edi, eax
 80a8a34:  mov DWORD PTR [ebp-0x10e0], 0x0
 80a8a3e:  mov DWORD PTR [ebp-0x10dc], 0x0
 80a8a48:  jmp 80a6fc8
 80a8a4d:  mov ecx, DWORD PTR [ebp-0x10d4]
 80a8a53:  mov edx, 0xffffffff
 80a8a58:  movzx eax, BYTE PTR [ecx]
 80a8a5b:  test al, al
 80a8a5d:  je 80a8a92
 80a8a5f:  cmp al, BYTE PTR [ebp-0x105d]
 80a8a65:  jne 80a6dbe
 80a8a6b:  xor eax, eax
 80a8a6d:  jmp 80a8a7e
 80a8a6f:  nop
 80a8a70:  cmp dl, BYTE PTR [edi+eax]
 80a8a73:  nop
 80a8a74:  lea esi, [esi]
 80a8a78:  jne 80a6dbe
 80a8a7e:  mov ecx, DWORD PTR [ebp-0x10d4]
 80a8a84:  add eax, 0x1
 80a8a87:  movzx edx, BYTE PTR [ecx+eax]
 80a8a8b:  test dl, dl
 80a8a8d:  jne 80a8a70
 80a8a8f:  lea edx, [eax-0x1]
 80a8a92:  add edi, edx
 80a8a94:  jmp 80a6e87
 80a8a99:  cmp BYTE PTR [ebp-0x10fd], 0x0
 80a8aa0:  mov eax, DWORD PTR [ebp+0x8]
 80a8aa3:  je 80a6d12
 80a8aa9:  mov eax, edi
 80a8aab:  sub eax, 0x1
 80a8aae:  jmp 80a6d12
 80a8ab3:  mov eax, esi
 80a8ab5:  shl eax, 0x5
 80a8ab8:  mov DWORD PTR [ebp-0x1090], 0x0
 80a8ac2:  sub DWORD PTR [ebp-0x14], eax
 80a8ac5:  jmp 80a8697
 80a8aca:  lea ebx, [ebp-0x20]
 80a8acd:  mov DWORD PTR [ebp-0x1120], ebx
 80a8ad3:  lea eax, [ecx*4]
 80a8ada:  mov edi, DWORD PTR [ebp-0x1120]
 80a8ae0:  mov ebx, 0x2
 80a8ae5:  mov DWORD PTR [esp+0x8], eax
 80a8ae9:  mov eax, DWORD PTR [ebp-0x1114]
 80a8aef:  mov edx, ebx
 80a8af1:  sub edx, ecx
 80a8af3:  lea edx, [edi+edx*4]
 80a8af6:  mov DWORD PTR [esp], edx
 80a8af9:  mov DWORD PTR [esp+0x4], eax
 80a8afd:  call 804efc0
 80a8b02:  sub ebx, DWORD PTR [ebp-0x10]
 80a8b05:  test ebx, ebx
 80a8b07:  jle 80a7c40
 80a8b0d:  xor edx, edx
 80a8b0f:  mov ecx, 0x2
 80a8b14:  mov ebx, DWORD PTR [ebp-0x1120]
 80a8b1a:  mov eax, ecx
 80a8b1c:  sub eax, DWORD PTR [ebp-0x10]
 80a8b1f:  mov DWORD PTR [ebx+edx*4], 0x0
 80a8b26:  add edx, 0x1
 80a8b29:  cmp eax, edx
 80a8b2b:  jg 80a8b14
 80a8b2d:  jmp 80a7c40
 80a8b32:  mov eax, 0x40
 80a8b37:  sub eax, DWORD PTR [ebp-0x10ec]
 80a8b3d:  mov DWORD PTR [ebp-0x109c], eax
 80a8b43:  je 80a7f1a
 80a8b49:  mov DWORD PTR [esp+0xc], eax
 80a8b4d:  mov DWORD PTR [esp+0x8], 0x2
 80a8b55:  mov ecx, DWORD PTR [ebp-0x1120]
 80a8b5b:  mov DWORD PTR [esp+0x4], ecx
 80a8b5f:  mov DWORD PTR [esp], ecx
 80a8b62:  call 808c1c0
 80a8b67:  mov edx, DWORD PTR [ebp-0x844]
 80a8b6d:  jmp 80a7f1a
 80a8b72:  mov eax, DWORD PTR [ebp-0x10ec]
 80a8b78:  mov DWORD PTR [ebp-0x109c], 0x0
 80a8b82:  sub eax, 0x20
 80a8b85:  mov DWORD PTR [ebp-0x14], eax
 80a8b88:  jmp 80a7f21
 80a8b8d:  fldz
 80a8b8f:  fchs
 80a8b91:  jmp 80a87bf
 80a8b96:  mov eax, DWORD PTR [ebp-0x1090]
 80a8b9c:  mov DWORD PTR [esp+0x8], 0x2
 80a8ba4:  and eax, 0x1f
 80a8ba7:  mov DWORD PTR [esp+0xc], eax
 80a8bab:  mov edx, DWORD PTR [ebp-0x1120]
 80a8bb1:  lea eax, [ebp-0x1c]
 80a8bb4:  mov DWORD PTR [esp], eax
 80a8bb7:  mov DWORD PTR [esp+0x4], edx
 80a8bbb:  call 808c1c0
 80a8bc0:  mov ecx, DWORD PTR [ebp-0x10]
 80a8bc3:  mov DWORD PTR [ebp-0x20], 0x0
 80a8bca:  jmp 80a8691
 80a8bcf:  fld DWORD PTR ds:0x80c6d04
 80a8bd5:  jmp 80a87bf
 80a8bda:  mov edx, 0xffffffe8
 80a8be0:  mov eax, gs:0x0
 80a8be6:  mov DWORD PTR [eax+edx], 0x22
 80a8bed:  jmp 80a6d18
 80a8bf2:  mov edx, 0xffffffe8
 80a8bf8:  mov eax, gs:0x0
 80a8bfe:  mov DWORD PTR [eax+edx], 0x22
 80a8c05:  jmp 80a7cd2
 80a8c0a:  neg edx
 80a8c0c:  add edx, 0x20
 80a8c0f:  mov DWORD PTR [ebp-0x10ec], edx
 80a8c15:  jmp 80a83a8
 80a8c1a:  mov eax, edx
 80a8c1c:  xor ecx, ecx
 80a8c1e:  and eax, 0x7fffffff
 80a8c23:  mov esi, 0xc0000000
 80a8c28:  or eax, edi
 80a8c2a:  je 80a8c36
 80a8c2c:  mov esi, edx
 80a8c2e:  mov ecx, edi
 80a8c30:  or esi, 0x80000000
 80a8c36:  fld DWORD PTR ds:0x80c6d08
 80a8c3c:  fstp TBYTE PTR [ebp-0x2c]
 80a8c3f:  mov DWORD PTR [ebp-0x28], esi
 80a8c42:  mov DWORD PTR [ebp-0x2c], ecx
 80a8c45:  fld TBYTE PTR [ebp-0x2c]
 80a8c48:  jmp 80a8882
 80a8c4d:  neg edx
 80a8c4f:  add edx, 0x20
 80a8c52:  mov DWORD PTR [ebp-0x10ec], edx
 80a8c58:  jmp 80a7fd2
 80a8c5d:  neg edx
 80a8c5f:  add edx, 0x20
 80a8c62:  mov DWORD PTR [ebp-0x10ec], edx
 80a8c68:  jmp 80a791e
 80a8c6d:  lea esi, [esi]

080a8c70 <__strtold_l>:
 80a8c70:  push ebp
 80a8c71:  mov ebp, esp
 80a8c73:  sub esp, 0x10
 80a8c76:  mov eax, DWORD PTR [ebp+0x10]
 80a8c79:  mov DWORD PTR [esp+0x8], 0x0
 80a8c81:  mov DWORD PTR [esp+0xc], eax
 80a8c85:  mov eax, DWORD PTR [ebp+0xc]
 80a8c88:  mov DWORD PTR [esp+0x4], eax
 80a8c8c:  mov eax, DWORD PTR [ebp+0x8]
 80a8c8f:  mov DWORD PTR [esp], eax
 80a8c92:  call 80a6ae0
 80a8c97:  leave
 80a8c98:  ret
 80a8c99:  nop
 80a8c9a:  nop
 80a8c9b:  nop
 80a8c9c:  nop
 80a8c9d:  nop
 80a8c9e:  nop
 80a8c9f:  nop

080a8ca0 <__mpn_construct_float>:
 80a8ca0:  push ebp
 80a8ca1:  mov ebp, esp
 80a8ca3:  sub esp, 0x4
 80a8ca6:  mov edx, DWORD PTR [ebp+0x8]
 80a8ca9:  mov eax, DWORD PTR [ebp+0xc]
 80a8cac:  movzx ecx, BYTE PTR [ebp+0x10]
 80a8cb0:  mov edx, DWORD PTR [edx]
 80a8cb2:  add eax, 0x7f
 80a8cb5:  movzx eax, al
 80a8cb8:  shl eax, 0x17
 80a8cbb:  shl ecx, 0x1f
 80a8cbe:  and edx, 0x7fffff
 80a8cc4:  or ecx, eax
 80a8cc6:  or ecx, edx
 80a8cc8:  mov DWORD PTR [ebp-0x4], ecx
 80a8ccb:  fld DWORD PTR [ebp-0x4]
 80a8cce:  leave
 80a8ccf:  ret

080a8cd0 <__mpn_construct_double>:
 80a8cd0:  push ebp
 80a8cd1:  mov ebp, esp
 80a8cd3:  sub esp, 0x8
 80a8cd6:  mov DWORD PTR [ebp-0x4], 0x0
 80a8cdd:  movzx edx, BYTE PTR [ebp+0x10]
 80a8ce1:  mov eax, DWORD PTR [ebp-0x4]
 80a8ce4:  mov ecx, DWORD PTR [ebp+0x8]
 80a8ce7:  mov DWORD PTR [ebp-0x8], 0x0
 80a8cee:  shl edx, 0x1f
 80a8cf1:  and eax, 0x7fffffff
 80a8cf6:  or eax, edx
 80a8cf8:  movzx edx, WORD PTR [ebp+0xc]
 80a8cfc:  mov DWORD PTR [ebp-0x4], eax
 80a8cff:  and eax, 0x800fffff
 80a8d04:  add dx, 0x3ff
 80a8d09:  and edx, 0x7ff
 80a8d0f:  shl edx, 0x14
 80a8d12:  or eax, edx
 80a8d14:  mov edx, DWORD PTR [ecx+0x4]
 80a8d17:  mov DWORD PTR [ebp-0x4], eax
 80a8d1a:  mov eax, DWORD PTR [ecx]
 80a8d1c:  and edx, 0xfffff
 80a8d22:  mov DWORD PTR [ebp-0x8], eax
 80a8d25:  mov eax, DWORD PTR [ebp-0x4]
 80a8d28:  and eax, 0xfff00000
 80a8d2d:  or eax, edx
 80a8d2f:  mov DWORD PTR [ebp-0x4], eax
 80a8d32:  fld QWORD PTR [ebp-0x8]
 80a8d35:  leave
 80a8d36:  ret
 80a8d37:  nop
 80a8d38:  nop
 80a8d39:  nop
 80a8d3a:  nop
 80a8d3b:  nop
 80a8d3c:  nop
 80a8d3d:  nop
 80a8d3e:  nop
 80a8d3f:  nop

080a8d40 <__mpn_construct_long_double>:
 80a8d40:  push ebp
 80a8d41:  mov ebp, esp
 80a8d43:  sub esp, 0xc
 80a8d46:  movzx eax, BYTE PTR [ebp-0x3]
 80a8d4a:  mov edx, DWORD PTR [ebp+0x10]
 80a8d4d:  mov ecx, DWORD PTR [ebp+0x8]
 80a8d50:  and eax, 0x7f
 80a8d53:  shl edx, 0x7
 80a8d56:  or eax, edx
 80a8d58:  movzx edx, WORD PTR [ebp+0xc]
 80a8d5c:  mov BYTE PTR [ebp-0x3], al
 80a8d5f:  movzx eax, WORD PTR [ebp-0x4]
 80a8d63:  add dx, 0x3fff
 80a8d68:  and dx, 0x7fff
 80a8d6d:  and ax, 0x8000
 80a8d71:  or eax, edx
 80a8d73:  mov WORD PTR [ebp-0x4], ax
 80a8d77:  mov eax, DWORD PTR [ecx]
 80a8d79:  mov DWORD PTR [ebp-0xc], eax
 80a8d7c:  mov eax, DWORD PTR [ecx+0x4]
 80a8d7f:  mov DWORD PTR [ebp-0x8], eax
 80a8d82:  fld TBYTE PTR [ebp-0xc]
 80a8d85:  leave
 80a8d86:  ret
 80a8d87:  nop
 80a8d88:  nop
 80a8d89:  nop
 80a8d8a:  nop
 80a8d8b:  nop
 80a8d8c:  nop
 80a8d8d:  nop
 80a8d8e:  nop
 80a8d8f:  nop

080a8d90 <__dlopen>:
 80a8d90:  push ebp
 80a8d91:  mov ebp, esp
 80a8d93:  sub esp, 0x14
 80a8d96:  mov eax, DWORD PTR [ebp+0x8]
 80a8d99:  lea edx, [ebp-0x10]
 80a8d9c:  mov DWORD PTR [ebp-0x10], eax
 80a8d9f:  mov eax, DWORD PTR [ebp+0xc]
 80a8da2:  mov DWORD PTR [ebp-0xc], eax
 80a8da5:  mov eax, DWORD PTR [ebp+0x10]
 80a8da8:  mov DWORD PTR [ebp-0x4], eax
 80a8dab:  mov eax, 0x80a8de0
 80a8db0:  call 809ff70
 80a8db5:  xor edx, edx
 80a8db7:  test eax, eax
 80a8db9:  jne 80a8dd4
 80a8dbb:  mov eax, DWORD PTR [ebp-0x8]
 80a8dbe:  mov DWORD PTR [esp], eax
 80a8dc1:  call 80991c0
 80a8dc6:  mov eax, DWORD PTR [ebp-0x8]
 80a8dc9:  mov DWORD PTR [esp], eax
 80a8dcc:  call 809fe80
 80a8dd1:  mov edx, DWORD PTR [ebp-0x8]
 80a8dd4:  mov eax, edx
 80a8dd6:  leave
 80a8dd7:  ret
 80a8dd8:  nop
 80a8dd9:  lea esi, [esi]

080a8de0 <dlopen_doit>:
 80a8de0:  push ebp
 80a8de1:  mov ebp, esp
 80a8de3:  sub esp, 0x2c
 80a8de6:  mov DWORD PTR [ebp-0x4], edi
 80a8de9:  mov edi, DWORD PTR [ebp+0x8]
 80a8dec:  mov DWORD PTR [ebp-0xc], ebx
 80a8def:  mov DWORD PTR [ebp-0x8], esi
 80a8df2:  mov eax, DWORD PTR [edi+0x4]
 80a8df5:  test eax, 0xbfffeef0
 80a8dfa:  jne 80a8e5f
 80a8dfc:  mov edx, DWORD PTR [edi+0xc]
 80a8dff:  mov esi, DWORD PTR ds:0x80d2218
 80a8e05:  mov ebx, DWORD PTR ds:0x80d2e6c
 80a8e0b:  mov ecx, DWORD PTR ds:0x80d2e68
 80a8e11:  mov DWORD PTR [ebp-0x10], edx
 80a8e14:  mov edx, DWORD PTR [edi]
 80a8e16:  test edx, edx
 80a8e18:  je 80a8e58
 80a8e1a:  mov DWORD PTR [esp+0x10], ecx
 80a8e1e:  mov ecx, DWORD PTR [ebp-0x10]
 80a8e21:  or eax, 0x80000000
 80a8e26:  mov DWORD PTR [esp+0x18], esi
 80a8e2a:  mov DWORD PTR [esp+0x14], ebx
 80a8e2e:  mov DWORD PTR [esp+0xc], 0x0
 80a8e36:  mov DWORD PTR [esp+0x8], ecx
 80a8e3a:  mov DWORD PTR [esp+0x4], eax
 80a8e3e:  mov DWORD PTR [esp], edx
 80a8e41:  call 807d200
 80a8e46:  mov DWORD PTR [edi+0x8], eax
 80a8e49:  mov ebx, DWORD PTR [ebp-0xc]
 80a8e4c:  mov esi, DWORD PTR [ebp-0x8]
 80a8e4f:  mov edi, DWORD PTR [ebp-0x4]
 80a8e52:  mov esp, ebp
 80a8e54:  pop ebp
 80a8e55:  ret
 80a8e56:  xchg ax, ax
 80a8e58:  mov edx, 0x80c2c93
 80a8e5d:  jmp 80a8e1a
 80a8e5f:  mov DWORD PTR [esp+0x8], 0x5
 80a8e67:  mov DWORD PTR [esp+0x4], 0x80c6dc8
 80a8e6f:  mov DWORD PTR [esp], 0x80c3c9c
 80a8e76:  call 80515a0
 80a8e7b:  xor ecx, ecx
 80a8e7d:  xor edx, edx
 80a8e7f:  mov DWORD PTR [esp], eax
 80a8e82:  xor eax, eax
 80a8e84:  call 807c080
 80a8e89:  nop
 80a8e8a:  nop
 80a8e8b:  nop
 80a8e8c:  nop
 80a8e8d:  nop
 80a8e8e:  nop
 80a8e8f:  nop

080a8e90 <__dlclose>:
 80a8e90:  push ebp
 80a8e91:  mov eax, 0x80a8eb0
 80a8e96:  mov ebp, esp
 80a8e98:  mov edx, DWORD PTR [ebp+0x8]
 80a8e9b:  call 809ff70
 80a8ea0:  pop ebp
 80a8ea1:  cmp eax, 0x1
 80a8ea4:  sbb eax, eax
 80a8ea6:  not eax
 80a8ea8:  ret
 80a8ea9:  lea esi, [esi]

080a8eb0 <dlclose_doit>:
 80a8eb0:  push ebp
 80a8eb1:  mov ebp, esp
 80a8eb3:  pop ebp
 80a8eb4:  jmp 807f1c0
 80a8eb9:  nop
 80a8eba:  nop
 80a8ebb:  nop
 80a8ebc:  nop
 80a8ebd:  nop
 80a8ebe:  nop
 80a8ebf:  nop

080a8ec0 <__dlsym>:
 80a8ec0:  push ebp
 80a8ec1:  mov ebp, esp
 80a8ec3:  push ebx
 80a8ec4:  sub esp, 0x14
 80a8ec7:  mov eax, DWORD PTR [ebp+0x10]
 80a8eca:  mov DWORD PTR [ebp-0xc], eax
 80a8ecd:  mov eax, DWORD PTR [ebp+0x8]
 80a8ed0:  mov DWORD PTR [ebp-0x14], eax
 80a8ed3:  mov eax, DWORD PTR [ebp+0xc]
 80a8ed6:  mov DWORD PTR [ebp-0x10], eax
 80a8ed9:  mov eax, 0x0
 80a8ede:  test eax, eax
 80a8ee0:  je 80a8eee
 80a8ee2:  mov DWORD PTR [esp], 0x80d0d7c
 80a8ee9:  call 0
 80a8eee:  lea edx, [ebp-0x14]
 80a8ef1:  mov eax, 0x80a8f20
 80a8ef6:  call 809ff70
 80a8efb:  cmp eax, 0x1
 80a8efe:  mov eax, 0x0
 80a8f03:  sbb ebx, ebx
 80a8f05:  and ebx, DWORD PTR [ebp-0x8]
 80a8f08:  test eax, eax
 80a8f0a:  je 80a8f18
 80a8f0c:  mov DWORD PTR [esp], 0x80d0d7c
 80a8f13:  call 0
 80a8f18:  mov eax, ebx
 80a8f1a:  add esp, 0x14
 80a8f1d:  pop ebx
 80a8f1e:  pop ebp
 80a8f1f:  ret

080a8f20 <dlsym_doit>:
 80a8f20:  push ebp
 80a8f21:  mov ebp, esp
 80a8f23:  push ebx
 80a8f24:  mov ebx, DWORD PTR [ebp+0x8]
 80a8f27:  mov ecx, DWORD PTR [ebx+0x8]
 80a8f2a:  mov edx, DWORD PTR [ebx+0x4]
 80a8f2d:  mov eax, DWORD PTR [ebx]
 80a8f2f:  call 80a9390
 80a8f34:  mov DWORD PTR [ebx+0xc], eax
 80a8f37:  pop ebx
 80a8f38:  pop ebp
 80a8f39:  ret
 80a8f3a:  nop
 80a8f3b:  nop
 80a8f3c:  nop
 80a8f3d:  nop
 80a8f3e:  nop
 80a8f3f:  nop

080a8f40 <__dlvsym>:
 80a8f40:  push ebp
 80a8f41:  mov ebp, esp
 80a8f43:  push ebx
 80a8f44:  sub esp, 0x18
 80a8f47:  mov eax, DWORD PTR [ebp+0x8]
 80a8f4a:  mov DWORD PTR [ebp-0x18], eax
 80a8f4d:  mov eax, DWORD PTR [ebp+0xc]
 80a8f50:  mov DWORD PTR [ebp-0x14], eax
 80a8f53:  mov eax, DWORD PTR [ebp+0x14]
 80a8f56:  mov DWORD PTR [ebp-0xc], eax
 80a8f59:  mov eax, DWORD PTR [ebp+0x10]
 80a8f5c:  mov DWORD PTR [ebp-0x10], eax
 80a8f5f:  mov eax, 0x0
 80a8f64:  test eax, eax
 80a8f66:  je 80a8f74
 80a8f68:  mov DWORD PTR [esp], 0x80d0d7c
 80a8f6f:  call 0
 80a8f74:  lea edx, [ebp-0x18]
 80a8f77:  mov eax, 0x80a8fb0
 80a8f7c:  call 809ff70
 80a8f81:  cmp eax, 0x1
 80a8f84:  mov eax, 0x0
 80a8f89:  sbb ebx, ebx
 80a8f8b:  and ebx, DWORD PTR [ebp-0x8]
 80a8f8e:  test eax, eax
 80a8f90:  je 80a8f9e
 80a8f92:  mov DWORD PTR [esp], 0x80d0d7c
 80a8f99:  call 0
 80a8f9e:  mov eax, ebx
 80a8fa0:  add esp, 0x18
 80a8fa3:  pop ebx
 80a8fa4:  pop ebp
 80a8fa5:  ret
 80a8fa6:  lea esi, [esi]
 80a8fa9:  lea edi, [edi]

080a8fb0 <dlvsym_doit>:
 80a8fb0:  push ebp
 80a8fb1:  mov ebp, esp
 80a8fb3:  push ebx
 80a8fb4:  sub esp, 0x4
 80a8fb7:  mov ebx, DWORD PTR [ebp+0x8]
 80a8fba:  mov eax, DWORD PTR [ebx+0xc]
 80a8fbd:  mov ecx, DWORD PTR [ebx+0x8]
 80a8fc0:  mov edx, DWORD PTR [ebx+0x4]
 80a8fc3:  mov DWORD PTR [esp], eax
 80a8fc6:  mov eax, DWORD PTR [ebx]
 80a8fc8:  call 80a93b0
 80a8fcd:  mov DWORD PTR [ebx+0x10], eax
 80a8fd0:  sub esp, 0x4
 80a8fd3:  mov ebx, DWORD PTR [ebp-0x4]
 80a8fd6:  leave
 80a8fd7:  ret
 80a8fd8:  nop
 80a8fd9:  nop
 80a8fda:  nop
 80a8fdb:  nop
 80a8fdc:  nop
 80a8fdd:  nop
 80a8fde:  nop
 80a8fdf:  nop

080a8fe0 <__strncasecmp_l>:
 80a8fe0:  push ebp
 80a8fe1:  mov ebp, esp
 80a8fe3:  push edi
 80a8fe4:  push esi
 80a8fe5:  push ebx
 80a8fe6:  mov edi, DWORD PTR [ebp+0xc]
 80a8fe9:  cmp DWORD PTR [ebp+0x8], edi
 80a8fec:  je 80a9030
 80a8fee:  mov eax, DWORD PTR [ebp+0x10]
 80a8ff1:  test eax, eax
 80a8ff3:  je 80a9030
 80a8ff5:  mov eax, DWORD PTR [ebp+0x14]
 80a8ff8:  xor ecx, ecx
 80a8ffa:  mov ebx, DWORD PTR [eax+0x38]
 80a8ffd:  lea esi, [esi]
 80a9000:  mov eax, DWORD PTR [ebp+0x8]
 80a9003:  movzx esi, BYTE PTR [eax+ecx]
 80a9007:  mov edx, esi
 80a9009:  movzx eax, dl
 80a900c:  movzx edx, BYTE PTR [edi+ecx]
 80a9010:  mov eax, DWORD PTR [ebx+eax*4]
 80a9013:  sub eax, DWORD PTR [ebx+edx*4]
 80a9016:  jne 80a9026
 80a9018:  mov edx, esi
 80a901a:  test dl, dl
 80a901c:  je 80a9026
 80a901e:  add ecx, 0x1
 80a9021:  cmp DWORD PTR [ebp+0x10], ecx
 80a9024:  jne 80a9000
 80a9026:  pop ebx
 80a9027:  pop esi
 80a9028:  pop edi
 80a9029:  pop ebp
 80a902a:  ret
 80a902b:  nop
 80a902c:  lea esi, [esi]
 80a9030:  xor eax, eax
 80a9032:  pop ebx
 80a9033:  pop esi
 80a9034:  pop edi
 80a9035:  pop ebp
 80a9036:  ret
 80a9037:  nop
 80a9038:  nop
 80a9039:  nop
 80a903a:  nop
 80a903b:  nop
 80a903c:  nop
 80a903d:  nop
 80a903e:  nop
 80a903f:  nop

080a9040 <__setitimer>:
 80a9040:  push ebx
 80a9041:  mov edx, DWORD PTR [esp+0x10]
 80a9045:  mov ecx, DWORD PTR [esp+0xc]
 80a9049:  mov ebx, DWORD PTR [esp+0x8]
 80a904d:  mov eax, 0x68
 80a9052:  int 0x80
 80a9054:  pop ebx
 80a9055:  cmp eax, 0xfffff001
 80a905a:  jae 8051470
 80a9060:  ret
 80a9061:  nop
 80a9062:  nop
 80a9063:  nop
 80a9064:  nop
 80a9065:  nop
 80a9066:  nop
 80a9067:  nop
 80a9068:  nop
 80a9069:  nop
 80a906a:  nop
 80a906b:  nop
 80a906c:  nop
 80a906d:  nop
 80a906e:  nop
 80a906f:  nop

080a9070 <call_dl_lookup>:
 80a9070:  push ebp
 80a9071:  mov ebp, esp
 80a9073:  sub esp, 0x1c
 80a9076:  mov DWORD PTR [ebp-0x4], esi
 80a9079:  mov esi, DWORD PTR [ebp+0x8]
 80a907c:  mov DWORD PTR [ebp-0x8], ebx
 80a907f:  mov edx, DWORD PTR [esi]
 80a9081:  mov ecx, DWORD PTR [esi+0x14]
 80a9084:  mov eax, DWORD PTR [esi+0x4]
 80a9087:  mov DWORD PTR [esp+0x10], 0x0
 80a908f:  mov ebx, DWORD PTR [esi+0xc]
 80a9092:  mov DWORD PTR [esp+0x8], 0x0
 80a909a:  mov DWORD PTR [esp+0xc], ebx
 80a909e:  mov ebx, DWORD PTR [esi+0x8]
 80a90a1:  mov DWORD PTR [esp+0x4], ebx
 80a90a5:  mov ebx, DWORD PTR [edx+0x1cc]
 80a90ab:  mov DWORD PTR [esp], ebx
 80a90ae:  call 80791b0
 80a90b3:  mov DWORD PTR [esi], eax
 80a90b5:  sub esp, 0x14
 80a90b8:  mov ebx, DWORD PTR [ebp-0x8]
 80a90bb:  mov esi, DWORD PTR [ebp-0x4]
 80a90be:  mov esp, ebp
 80a90c0:  pop ebp
 80a90c1:  ret
 80a90c2:  lea esi, [esi]
 80a90c9:  lea edi, [edi]

080a90d0 <do_sym>:
 80a90d0:  push ebp
 80a90d1:  mov ebp, esp
 80a90d3:  push edi
 80a90d4:  mov edi, eax
 80a90d6:  push esi
 80a90d7:  mov esi, ecx
 80a90d9:  push ebx
 80a90da:  sub esp, 0x44
 80a90dd:  mov eax, ds:0x80d2e40
 80a90e2:  mov DWORD PTR [ebp-0x3c], edx
 80a90e5:  mov DWORD PTR [ebp-0x14], 0x0
 80a90ec:  test eax, eax
 80a90ee:  mov DWORD PTR [ebp-0x38], eax
 80a90f1:  je 80a9129
 80a90f3:  mov ebx, eax
 80a90f5:  lea esi, [esi]
 80a90f8:  cmp esi, DWORD PTR [ebx+0x1ac]
 80a90fe:  jb 80a9122
 80a9100:  cmp esi, DWORD PTR [ebx+0x1b0]
 80a9106:  jae 80a9122
 80a9108:  cmp BYTE PTR [ebx+0x195], 0x0
 80a910f:  js 80a91a0
 80a9115:  mov edx, esi
 80a9117:  mov eax, ebx
 80a9119:  call 8050ee0
 80a911e:  test eax, eax
 80a9120:  jne 80a91a0
 80a9122:  mov ebx, DWORD PTR [ebx+0xc]
 80a9125:  test ebx, ebx
 80a9127:  jne 80a90f8
 80a9129:  test edi, edi
 80a912b:  nop
 80a912c:  lea esi, [esi]
 80a9130:  je 80a920a
 80a9136:  cmp edi, 0xff
 80a9139:  lea esi, [esi]
 80a9140:  je 80a91a5
 80a9142:  mov eax, DWORD PTR [ebp+0xc]
 80a9145:  lea ecx, [ebp-0x14]
 80a9148:  mov edx, DWORD PTR [ebp+0x8]
 80a914b:  mov DWORD PTR [esp+0x10], 0x0
 80a9153:  mov DWORD PTR [esp+0x8], 0x0
 80a915b:  mov DWORD PTR [esp+0xc], eax
 80a915f:  lea eax, [edi+0x1d0]
 80a9165:  mov DWORD PTR [esp], eax
 80a9168:  mov eax, DWORD PTR [ebp-0x3c]
 80a916b:  mov DWORD PTR [esp+0x4], edx
 80a916f:  mov edx, edi
 80a9171:  call 80791b0
 80a9176:  sub esp, 0x14
 80a9179:  mov edx, eax
 80a917b:  mov ecx, DWORD PTR [ebp-0x14]
 80a917e:  xor eax, eax
 80a9180:  test ecx, ecx
 80a9182:  je 80a918f
 80a9184:  xor eax, eax
 80a9186:  test edx, edx
 80a9188:  je 80a918c
 80a918a:  mov eax, DWORD PTR [edx]
 80a918c:  add eax, DWORD PTR [ecx+0x4]
 80a918f:  lea esp, [ebp-0xc]
 80a9192:  pop ebx
 80a9193:  pop esi
 80a9194:  pop edi
 80a9195:  pop ebp
 80a9196:  ret 0x8
 80a9199:  lea esi, [esi]
 80a91a0:  mov DWORD PTR [ebp-0x38], ebx
 80a91a3:  jmp 80a9129
 80a91a5:  mov eax, DWORD PTR [ebp-0x38]
 80a91a8:  cmp eax, DWORD PTR ds:0x80d2e40
 80a91ae:  je 80a9257
 80a91b4:  mov eax, DWORD PTR [ebp-0x38]
 80a91b7:  jmp 80a91c2
 80a91b9:  lea esi, [esi]
 80a91c0:  mov eax, edx
 80a91c2:  mov edx, DWORD PTR [eax+0x16c]
 80a91c8:  test edx, edx
 80a91ca:  jne 80a91c0
 80a91cc:  mov edx, DWORD PTR [ebp-0x38]
 80a91cf:  add eax, 0x1d0
 80a91d4:  mov DWORD PTR [esp], eax
 80a91d7:  mov eax, DWORD PTR [ebp-0x3c]
 80a91da:  lea ecx, [ebp-0x14]
 80a91dd:  mov DWORD PTR [esp+0xc], 0x0
 80a91e5:  mov DWORD PTR [esp+0x8], 0x0
 80a91ed:  mov DWORD PTR [esp+0x10], edx
 80a91f1:  mov edx, DWORD PTR [ebp+0x8]
 80a91f4:  mov DWORD PTR [esp+0x4], edx
 80a91f8:  mov edx, DWORD PTR [ebp-0x38]
 80a91fb:  call 80791b0
 80a9200:  sub esp, 0x14
 80a9203:  mov edx, eax
 80a9205:  jmp 80a917b
 80a920a:  mov eax, gs:0xc
 80a9210:  test eax, eax
 80a9212:  jne 80a9281
 80a9214:  or DWORD PTR [ebp+0xc], 0x1
 80a9218:  mov edx, DWORD PTR [ebp+0xc]
 80a921b:  lea ecx, [ebp-0x14]
 80a921e:  mov eax, DWORD PTR [ebp+0x8]
 80a9221:  mov DWORD PTR [esp+0x10], 0x0
 80a9229:  mov DWORD PTR [esp+0x8], 0x0
 80a9231:  mov DWORD PTR [esp+0xc], edx
 80a9235:  mov edx, DWORD PTR [ebp-0x38]
 80a9238:  mov DWORD PTR [esp+0x4], eax
 80a923c:  mov eax, DWORD PTR [edx+0x1cc]
 80a9242:  mov DWORD PTR [esp], eax
 80a9245:  mov eax, DWORD PTR [ebp-0x3c]
 80a9248:  call 80791b0
 80a924d:  sub esp, 0x14
 80a9250:  mov edx, eax
 80a9252:  jmp 80a917b
 80a9257:  test eax, eax
 80a9259:  je 80a926f
 80a925b:  cmp esi, DWORD PTR [eax+0x1ac]
 80a9261:  jb 80a926f
 80a9263:  cmp esi, DWORD PTR [eax+0x1b0]
 80a9269:  jb 80a91b4
 80a926f:  xor ecx, ecx
 80a9271:  xor edx, edx
 80a9273:  xor eax, eax
 80a9275:  mov DWORD PTR [esp], 0x80c6de0
 80a927c:  call 807c080
 80a9281:  mov eax, DWORD PTR [ebp-0x3c]
 80a9284:  mov edx, DWORD PTR [ebp-0x38]
 80a9287:  or DWORD PTR [ebp+0xc], 0x5
 80a928b:  mov DWORD PTR [ebp-0x30], eax
 80a928e:  mov eax, DWORD PTR [ebp+0x8]
 80a9291:  mov DWORD PTR [ebp-0x34], edx
 80a9294:  mov edx, DWORD PTR [ebp+0xc]
 80a9297:  mov DWORD PTR [ebp-0x2c], eax
 80a929a:  lea eax, [ebp-0x14]
 80a929d:  mov DWORD PTR [ebp-0x28], edx
 80a92a0:  mov DWORD PTR [ebp-0x20], eax
 80a92a3:  mov DWORD PTR gs:0x1c, 0x1
 80a92ae:  lea ecx, [ebp-0xd]
 80a92b1:  lea edx, [ebp-0x1c]
 80a92b4:  lea eax, [ebp-0x18]
 80a92b7:  lea ebx, [ebp-0x34]
 80a92ba:  mov DWORD PTR [ebp-0x1c], 0x0
 80a92c1:  mov DWORD PTR [esp+0x4], ebx
 80a92c5:  mov DWORD PTR [esp], 0x80a9070
 80a92cc:  call 807bf90
 80a92d1:  sub esp, 0x8
 80a92d4:  mov esi, eax
 80a92d6:  xchg DWORD PTR gs:0x1c, edi
 80a92dd:  cmp edi, 0x2
 80a92e0:  jne 80a9302
 80a92e2:  mov edx, 0x1
 80a92e7:  mov ebx, DWORD PTR gs:0x8
 80a92ee:  mov ecx, DWORD PTR gs:0x20
 80a92f5:  mov eax, 0xf0
 80a92fa:  add ebx, 0x1c
 80a92fd:  or ecx, 0x1
 80a9300:  int 0x80
 80a9302:  mov ebx, DWORD PTR [ebp-0x1c]
 80a9305:  test ebx, ebx
 80a9307:  jne 80a9311
 80a9309:  mov edx, DWORD PTR [ebp-0x34]
 80a930c:  jmp 80a917b
 80a9311:  mov DWORD PTR [esp], ebx
 80a9314:  call 804eea0
 80a9319:  lea edx, [eax+0x1]
 80a931c:  add eax, 0x13
 80a931f:  and eax, 0xfc
 80a9322:  sub esp, eax
 80a9324:  lea eax, [esp+0x23]
 80a9328:  and eax, 0xf0
 80a932b:  mov DWORD PTR [esp+0x8], edx
 80a932f:  mov DWORD PTR [esp+0x4], ebx
 80a9333:  mov DWORD PTR [esp], eax
 80a9336:  call 804efc0
 80a933b:  mov ebx, DWORD PTR [ebp-0x18]
 80a933e:  mov DWORD PTR [esp], ebx
 80a9341:  mov edi, eax
 80a9343:  call 804eea0
 80a9348:  lea edx, [eax+0x1]
 80a934b:  add eax, 0x13
 80a934e:  and eax, 0xfc
 80a9351:  sub esp, eax
 80a9353:  lea eax, [esp+0x23]
 80a9357:  and eax, 0xf0
 80a935a:  mov DWORD PTR [esp+0x4], ebx
 80a935e:  mov DWORD PTR [esp+0x8], edx
 80a9362:  mov DWORD PTR [esp], eax
 80a9365:  call 804efc0
 80a936a:  cmp BYTE PTR [ebp-0xd], 0x0
 80a936e:  mov ebx, eax
 80a9370:  je 80a937d
 80a9372:  mov eax, DWORD PTR [ebp-0x1c]
 80a9375:  mov DWORD PTR [esp], eax
 80a9378:  call 804b4a0
 80a937d:  xor ecx, ecx
 80a937f:  mov edx, ebx
 80a9381:  mov eax, esi
 80a9383:  mov DWORD PTR [esp], edi
 80a9386:  call 807c080
 80a938b:  nop
 80a938c:  lea esi, [esi]

080a9390 <_dl_sym>:
 80a9390:  push ebp
 80a9391:  mov ebp, esp
 80a9393:  sub esp, 0x8
 80a9396:  mov DWORD PTR [esp+0x4], 0x2
 80a939e:  mov DWORD PTR [esp], 0x0
 80a93a5:  call 80a90d0
 80a93aa:  sub esp, 0x8
 80a93ad:  leave
 80a93ae:  ret
 80a93af:  nop

080a93b0 <_dl_vsym>:
 80a93b0:  push ebp
 80a93b1:  mov ebp, esp
 80a93b3:  sub esp, 0x28
 80a93b6:  mov DWORD PTR [ebp-0xc], ebx
 80a93b9:  mov ebx, ecx
 80a93bb:  mov DWORD PTR [ebp-0x4], edi
 80a93be:  mov edi, edx
 80a93c0:  mov DWORD PTR [ebp-0x1c], ecx
 80a93c3:  mov DWORD PTR [ebp-0x8], esi
 80a93c6:  mov DWORD PTR [ebp-0x20], eax
 80a93c9:  mov DWORD PTR [ebp-0x14], 0x1
 80a93d0:  movzx eax, BYTE PTR [ecx]
 80a93d3:  xor ecx, ecx
 80a93d5:  test al, al
 80a93d7:  je 80a9460
 80a93dd:  movzx ecx, al
 80a93e0:  movzx eax, BYTE PTR [ebx+0x1]
 80a93e4:  test al, al
 80a93e6:  je 80a9460
 80a93e8:  mov edx, ecx
 80a93ea:  movzx eax, al
 80a93ed:  shl edx, 0x4
 80a93f0:  lea ecx, [eax+edx]
 80a93f3:  movzx eax, BYTE PTR [ebx+0x2]
 80a93f7:  test al, al
 80a93f9:  je 80a9460
 80a93fb:  mov edx, ecx
 80a93fd:  movzx eax, al
 80a9400:  shl edx, 0x4
 80a9403:  lea ecx, [edx+eax]
 80a9406:  movzx eax, BYTE PTR [ebx+0x3]
 80a940a:  test al, al
 80a940c:  je 80a9460
 80a940e:  mov edx, ecx
 80a9410:  movzx eax, al
 80a9413:  shl edx, 0x4
 80a9416:  lea ecx, [edx+eax]
 80a9419:  movzx eax, BYTE PTR [ebx+0x4]
 80a941d:  test al, al
 80a941f:  je 80a9460
 80a9421:  mov edx, ecx
 80a9423:  movzx eax, al
 80a9426:  shl edx, 0x4
 80a9429:  lea ecx, [edx+eax]
 80a942c:  movzx eax, BYTE PTR [ebx+0x5]
 80a9430:  lea esi, [ebx+0x5]
 80a9433:  test al, al
 80a9435:  je 80a9460
 80a9437:  nop
 80a9438:  shl ecx, 0x4
 80a943b:  movzx edx, al
 80a943e:  add edx, ecx
 80a9440:  add esi, 0x1
 80a9443:  mov eax, edx
 80a9445:  and eax, 0xf0000000
 80a944a:  mov ecx, eax
 80a944c:  xor ecx, edx
 80a944e:  shr eax, 0x18
 80a9451:  xor ecx, eax
 80a9453:  movzx eax, BYTE PTR [esi]
 80a9456:  test al, al
 80a9458:  jne 80a9438
 80a945a:  lea esi, [esi]
 80a9460:  lea eax, [ebp-0x1c]
 80a9463:  mov edx, edi
 80a9465:  mov DWORD PTR [ebp-0x18], ecx
 80a9468:  mov ecx, DWORD PTR [ebp+0x8]
 80a946b:  mov DWORD PTR [esp], eax
 80a946e:  mov eax, DWORD PTR [ebp-0x20]
 80a9471:  mov DWORD PTR [ebp-0x10], 0x0
 80a9478:  mov DWORD PTR [esp+0x4], 0x0
 80a9480:  call 80a90d0
 80a9485:  mov ebx, DWORD PTR [ebp-0xc]
 80a9488:  mov esi, DWORD PTR [ebp-0x8]
 80a948b:  mov edi, DWORD PTR [ebp-0x4]
 80a948e:  sub esp, 0x8
 80a9491:  mov esp, ebp
 80a9493:  pop ebp
 80a9494:  ret 0x4
 80a9497:  nop
 80a9498:  nop
 80a9499:  nop
 80a949a:  nop
 80a949b:  nop
 80a949c:  nop
 80a949d:  nop
 80a949e:  nop
 80a949f:  nop

080a94a0 <read_sleb128>:
 80a94a0:  push ebp
 80a94a1:  xor ecx, ecx
 80a94a3:  push edi
 80a94a4:  xor ebp, ebp
 80a94a6:  push esi
 80a94a7:  sub esp, 0x4
 80a94aa:  mov DWORD PTR [esp], edx
 80a94ad:  lea esi, [esi]
 80a94b0:  movzx esi, BYTE PTR [eax]
 80a94b3:  add eax, 0x1
 80a94b6:  mov edx, esi
 80a94b8:  movzx edi, dl
 80a94bb:  mov edx, edi
 80a94bd:  and edx, 0x7f
 80a94c0:  shl edx, cl
 80a94c2:  add ecx, 0x7
 80a94c5:  or ebp, edx
 80a94c7:  mov edx, esi
 80a94c9:  test dl, dl
 80a94cb:  js 80a94b0
 80a94cd:  cmp ecx, 0x1f
 80a94d0:  ja 80a94e0
 80a94d2:  and edi, 0x40
 80a94d5:  je 80a94e0
 80a94d7:  mov edx, 0xffffffff
 80a94dc:  shl edx, cl
 80a94de:  or ebp, edx
 80a94e0:  mov edx, DWORD PTR [esp]
 80a94e3:  mov DWORD PTR [edx], ebp
 80a94e5:  add esp, 0x4
 80a94e8:  pop esi
 80a94e9:  pop edi
 80a94ea:  pop ebp
 80a94eb:  ret
 80a94ec:  lea esi, [esi]

080a94f0 <read_encoded_value_with_base>:
 80a94f0:  sub esp, 0x3c
 80a94f3:  mov DWORD PTR [esp+0x2c], ebx
 80a94f7:  call 80ac0a5
 80a94fc:  add ebx, 0x27808
 80a9502:  cmp al, 0x50
 80a9504:  mov DWORD PTR [esp+0x30], esi
 80a9508:  mov esi, edx
 80a950a:  mov DWORD PTR [esp+0x34], edi
 80a950e:  mov edi, eax
 80a9510:  mov DWORD PTR [esp+0x38], ebp
 80a9514:  je 80a9668
 80a951a:  movzx ebp, al
 80a951d:  mov eax, ebp
 80a951f:  and eax, 0xf
 80a9522:  cmp eax, 0xc
 80a9525:  jbe 80a9530
 80a9527:  call 8055a00
 80a952c:  lea esi, [esi]
 80a9530:  mov edx, ebx
 80a9532:  sub edx, DWORD PTR [ebx+eax*4-0x277c8]
 80a9539:  jmp edx
 80a953b:  nop
 80a953c:  xchg esp, eax
 80a953d:  ja 80a9541
 80a953f:  add ah, dh
 80a9541:  jbe 80a9545
 80a9543:  add BYTE PTR [edi+esi*2], al
 80a9546:  add al, BYTE PTR [eax]
 80a9548:  xchg esp, eax
 80a9549:  ja 80a954d
 80a954b:  add BYTE PTR [edi+esi*2], bh
 80a954e:  add al, BYTE PTR [eax]
 80a9550:  ???
 80a9551:  ja 80a9555
 80a9553:  add ch, bl
 80a9555:  ja 80a9559
 80a9557:  add ch, bl
 80a9559:  ja 80a955d
 80a955b:  add ch, bl
 80a955d:  ja 80a9561
 80a955f:  add BYTE PTR [edi+esi*2], bl
 80a9562:  add al, BYTE PTR [eax]
 80a9564:  sub al, 0x77
 80a9566:  add al, BYTE PTR [eax]
 80a9568:  dec esp
 80a9569:  ja 80a956d
 80a956b:  add BYTE PTR [esi+esi*2+0x4c8b0002], ch
 80a9572:  and al, 0x40
 80a9574:  mov edx, DWORD PTR [ecx]
 80a9576:  mov eax, ecx
 80a9578:  add eax, 0x4
 80a957b:  test edx, edx
 80a957d:  je 80a9598
 80a957f:  and ebp, 0x70
 80a9582:  mov ecx, edi
 80a9584:  cmp ebp, 0x10
 80a9587:  cmove esi, DWORD PTR [esp+0x40]
 80a958c:  add edx, esi
 80a958e:  test cl, cl
 80a9590:  jns 80a9598
 80a9592:  mov edx, DWORD PTR [edx]
 80a9594:  lea esi, [esi]
 80a9598:  mov ecx, DWORD PTR [esp+0x44]
 80a959c:  mov ebx, DWORD PTR [esp+0x2c]
 80a95a0:  mov esi, DWORD PTR [esp+0x30]
 80a95a4:  mov edi, DWORD PTR [esp+0x34]
 80a95a8:  mov DWORD PTR [ecx], edx
 80a95aa:  mov ebp, DWORD PTR [esp+0x38]
 80a95ae:  add esp, 0x3c
 80a95b1:  ret
 80a95b2:  lea esi, [esi]
 80a95b8:  mov eax, DWORD PTR [esp+0x40]
 80a95bc:  mov edx, DWORD PTR [eax]
 80a95be:  add eax, 0x4
 80a95c1:  jmp 80a957b
 80a95c3:  nop
 80a95c4:  lea esi, [esi]
 80a95c8:  mov eax, DWORD PTR [esp+0x40]
 80a95cc:  mov edx, DWORD PTR [eax]
 80a95ce:  add eax, 0x8
 80a95d1:  jmp 80a957b
 80a95d3:  nop
 80a95d4:  lea esi, [esi]
 80a95d8:  mov ecx, DWORD PTR [esp+0x40]
 80a95dc:  mov eax, ecx
 80a95de:  movsx edx, WORD PTR [ecx]
 80a95e1:  add eax, 0x2
 80a95e4:  jmp 80a957b
 80a95e6:  xchg ax, ax
 80a95e8:  mov eax, DWORD PTR [esp+0x40]
 80a95ec:  lea edx, [esp+0x1c]
 80a95f0:  call 80a94a0
 80a95f5:  mov edx, DWORD PTR [esp+0x1c]
 80a95f9:  jmp 80a957b
 80a95fb:  nop
 80a95fc:  lea esi, [esi]
 80a9600:  mov eax, DWORD PTR [esp+0x40]
 80a9604:  movzx edx, WORD PTR [eax]
 80a9607:  add eax, 0x2
 80a960a:  jmp 80a957b
 80a960f:  nop
 80a9610:  mov eax, DWORD PTR [esp+0x40]
 80a9614:  xor edx, edx
 80a9616:  xor ecx, ecx
 80a9618:  mov DWORD PTR [esp+0x8], ebp
 80a961c:  mov ebp, edi
 80a961e:  mov DWORD PTR [esp+0xc], esi
 80a9622:  mov esi, edx
 80a9624:  mov edi, eax
 80a9626:  xchg ax, ax
 80a9628:  movzx eax, BYTE PTR [edi]
 80a962b:  add edi, 0x1
 80a962e:  mov edx, eax
 80a9630:  and edx, 0x7f
 80a9633:  shl edx, cl
 80a9635:  add ecx, 0x7
 80a9638:  or esi, edx
 80a963a:  test al, al
 80a963c:  js 80a9628
 80a963e:  mov eax, edi
 80a9640:  mov edx, esi
 80a9642:  mov esi, DWORD PTR [esp+0xc]
 80a9646:  mov edi, ebp
 80a9648:  mov ebp, DWORD PTR [esp+0x8]
 80a964c:  jmp 80a957b
 80a9651:  lea esi, [esi]
 80a9658:  mov ecx, DWORD PTR [esp+0x40]
 80a965c:  mov eax, ecx
 80a965e:  mov edx, DWORD PTR [ecx]
 80a9660:  add eax, 0x8
 80a9663:  jmp 80a957b
 80a9668:  mov eax, DWORD PTR [esp+0x40]
 80a966c:  add eax, 0x3
 80a966f:  and eax, 0xfc
 80a9672:  mov edx, DWORD PTR [eax]
 80a9674:  add eax, 0x4
 80a9677:  jmp 80a9598
 80a967c:  lea esi, [esi]

080a9680 <init_dwarf_reg_size_table>:
 80a9680:  call 80ac0a1
 80a9685:  add ecx, 0x2767f
 80a968b:  mov BYTE PTR [ecx+0x1f58], 0x4
 80a9692:  mov BYTE PTR [ecx+0x1f5a], 0x4
 80a9699:  mov BYTE PTR [ecx+0x1f59], 0x4
 80a96a0:  mov BYTE PTR [ecx+0x1f5b], 0x4
 80a96a7:  mov BYTE PTR [ecx+0x1f5e], 0x4
 80a96ae:  mov BYTE PTR [ecx+0x1f5f], 0x4
 80a96b5:  mov BYTE PTR [ecx+0x1f5d], 0x4
 80a96bc:  mov BYTE PTR [ecx+0x1f5c], 0x4
 80a96c3:  mov BYTE PTR [ecx+0x1f63], 0xc
 80a96ca:  mov BYTE PTR [ecx+0x1f64], 0xc
 80a96d1:  mov BYTE PTR [ecx+0x1f65], 0xc
 80a96d8:  mov BYTE PTR [ecx+0x1f66], 0xc
 80a96df:  mov BYTE PTR [ecx+0x1f67], 0xc
 80a96e6:  mov BYTE PTR [ecx+0x1f68], 0xc
 80a96ed:  mov BYTE PTR [ecx+0x1f61], 0x4
 80a96f4:  mov BYTE PTR [ecx+0x1f60], 0x4
 80a96fb:  ret
 80a96fc:  lea esi, [esi]

080a9700 <execute_cfa_program>:
 80a9700:  push ebp
 80a9701:  mov ecx, eax
 80a9703:  mov ebp, esp
 80a9705:  push edi
 80a9706:  push esi
 80a9707:  push ebx
 80a9708:  sub esp, 0x3c
 80a970b:  mov esi, DWORD PTR [ebp+0xc]
 80a970e:  call 80ac0a5
 80a9713:  add ebx, 0x275f1
 80a9719:  cmp eax, edx
 80a971b:  mov DWORD PTR [ebp-0x30], edx
 80a971e:  mov DWORD PTR [esi+0x90], 0x0
 80a9728:  jae 80a97c5
 80a972e:  mov edx, DWORD PTR [ebp+0x8]
 80a9731:  mov edi, DWORD PTR [esi+0xa4]
 80a9737:  mov eax, DWORD PTR [edx+0x60]
 80a973a:  shr eax, 0x1f
 80a973d:  add eax, DWORD PTR [edx+0x4c]
 80a9740:  cmp edi, eax
 80a9742:  jae 80a97c5
 80a9748:  mov DWORD PTR [ebp-0x34], 0x0
 80a974f:  nop
 80a9750:  movzx eax, BYTE PTR [ecx]
 80a9753:  mov BYTE PTR [ebp-0x2c], al
 80a9756:  movzx esi, BYTE PTR [ebp-0x2c]
 80a975a:  lea eax, [ecx+0x1]
 80a975d:  mov edx, esi
 80a975f:  and edx, 0xc0
 80a9765:  cmp edx, 0x40
 80a9768:  je 80a9790
 80a976a:  cmp edx, 0x80
 80a9770:  je 80a97d0
 80a9772:  cmp edx, 0xc0
 80a9778:  je 80a98e8
 80a977e:  cmp BYTE PTR [ebp-0x2c], 0x2f
 80a9782:  jbe 80a9818
 80a9788:  call 8055a00
 80a978d:  lea esi, [esi]
 80a9790:  mov edx, DWORD PTR [ebp+0xc]
 80a9793:  and esi, 0x3f
 80a9796:  mov ecx, eax
 80a9798:  imul esi, DWORD PTR [edx+0xb0]
 80a979f:  add esi, edi
 80a97a1:  mov DWORD PTR [edx+0xa4], esi
 80a97a7:  cmp DWORD PTR [ebp-0x30], ecx
 80a97aa:  jbe 80a97c5
 80a97ac:  mov edx, DWORD PTR [ebp+0x8]
 80a97af:  mov esi, DWORD PTR [ebp+0xc]
 80a97b2:  mov eax, DWORD PTR [edx+0x60]
 80a97b5:  mov edi, DWORD PTR [esi+0xa4]
 80a97bb:  shr eax, 0x1f
 80a97be:  add eax, DWORD PTR [edx+0x4c]
 80a97c1:  cmp edi, eax
 80a97c3:  jb 80a9750
 80a97c5:  lea esp, [ebp-0xc]
 80a97c8:  pop ebx
 80a97c9:  pop esi
 80a97ca:  pop edi
 80a97cb:  pop ebp
 80a97cc:  ret
 80a97cd:  lea esi, [esi]
 80a97d0:  and esi, 0x3f
 80a97d3:  xor edi, edi
 80a97d5:  mov DWORD PTR [ebp-0x2c], esi
 80a97d8:  xor ecx, ecx
 80a97da:  mov esi, eax
 80a97dc:  lea esi, [esi]
 80a97e0:  movzx edx, BYTE PTR [esi]
 80a97e3:  add esi, 0x1
 80a97e6:  mov eax, edx
 80a97e8:  and eax, 0x7f
 80a97eb:  shl eax, cl
 80a97ed:  add ecx, 0x7
 80a97f0:  or edi, eax
 80a97f2:  test dl, dl
 80a97f4:  js 80a97e0
 80a97f6:  mov ecx, esi
 80a97f8:  mov esi, DWORD PTR [ebp+0xc]
 80a97fb:  mov eax, DWORD PTR [ebp-0x2c]
 80a97fe:  imul edi, DWORD PTR [esi+0xac]
 80a9805:  mov DWORD PTR [esi+eax*8+0x4], 0x1
 80a980d:  mov DWORD PTR [esi+eax*8], edi
 80a9810:  jmp 80a97a7
 80a9812:  lea esi, [esi]
 80a9818:  mov edx, ebx
 80a981a:  sub edx, DWORD PTR [ebx+esi*4-0x274e0]
 80a9821:  jmp edx
 80a9823:  nop
 80a9824:  ???
 80a9825:  jae 80a9829
 80a9827:  add BYTE PTR [ebp+0x73], dh
 80a982a:  add al, BYTE PTR [eax]
 80a982c:  ???
 80a982d:  jae 80a9831
 80a982f:  add BYTE PTR [ecx], ah
 80a9831:  jae 80a9835
 80a9833:  add BYTE PTR [ebx], al
 80a9835:  jae 80a9839
 80a9837:  add dh, ah
 80a9839:  jb 80a983d
 80a983b:  add BYTE PTR [edi+0x72], bh
 80a983e:  add al, BYTE PTR [eax]
 80a9840:  dec esp
 80a9841:  jb 80a9845
 80a9843:  add BYTE PTR [edx+esi*2], bl
 80a9846:  add al, BYTE PTR [eax]
 80a9848:  ???
 80a9849:  jno 80a984d
 80a984b:  add BYTE PTR [esi+0x5b000271], cl
 80a9851:  jno 80a9855
 80a9853:  add BYTE PTR [ecx+esi*2], dh
 80a9856:  add al, BYTE PTR [eax]
 80a9858:  ???
 80a9859:  jo 80a985d
 80a985b:  add BYTE PTR [eax+esi*2+0x706e0002], bl
 80a9862:  add al, BYTE PTR [eax]
 80a9864:  jo 80a9869
 80a9867:  add dh, ah
 80a9869:  outsd
 80a986a:  add al, BYTE PTR [eax]
 80a986c:  popf
 80a986d:  outsd
 80a986e:  add al, BYTE PTR [eax]
 80a9870:  inc edi
 80a9871:  outsd
 80a9872:  add al, BYTE PTR [eax]
 80a9874:  and eax, 0xbf00026f
 80a9879:  outsb
 80a987a:  add al, BYTE PTR [eax]
 80a987c:  jne 80a98ec
 80a987e:  add al, BYTE PTR [eax]
 80a9880:  jl 80a98f7
 80a9882:  add al, BYTE PTR [eax]
 80a9884:  jl 80a98fb
 80a9886:  add al, BYTE PTR [eax]
 80a9888:  jl 80a98ff
 80a988a:  add al, BYTE PTR [eax]
 80a988c:  jl 80a9903
 80a988e:  add al, BYTE PTR [eax]
 80a9890:  jl 80a9907
 80a9892:  add al, BYTE PTR [eax]
 80a9894:  jl 80a990b
 80a9896:  add al, BYTE PTR [eax]
 80a9898:  jl 80a990f
 80a989a:  add al, BYTE PTR [eax]
 80a989c:  jl 80a9913
 80a989e:  add al, BYTE PTR [eax]
 80a98a0:  jl 80a9917
 80a98a2:  add al, BYTE PTR [eax]
 80a98a4:  jl 80a991b
 80a98a6:  add al, BYTE PTR [eax]
 80a98a8:  jl 80a991f
 80a98aa:  add al, BYTE PTR [eax]
 80a98ac:  jl 80a9923
 80a98ae:  add al, BYTE PTR [eax]
 80a98b0:  jl 80a9927
 80a98b2:  add al, BYTE PTR [eax]
 80a98b4:  jl 80a992b
 80a98b6:  add al, BYTE PTR [eax]
 80a98b8:  jl 80a992f
 80a98ba:  add al, BYTE PTR [eax]
 80a98bc:  jl 80a9933
 80a98be:  add al, BYTE PTR [eax]
 80a98c0:  jl 80a9937
 80a98c2:  add al, BYTE PTR [eax]
 80a98c4:  jl 80a993b
 80a98c6:  add al, BYTE PTR [eax]
 80a98c8:  jl 80a993f
 80a98ca:  add al, BYTE PTR [eax]
 80a98cc:  jl 80a9943
 80a98ce:  add al, BYTE PTR [eax]
 80a98d0:  jl 80a9947
 80a98d2:  add al, BYTE PTR [eax]
 80a98d4:  jl 80a994b
 80a98d6:  add al, BYTE PTR [eax]
 80a98d8:  ???
 80a98d9:  je 80a98dd
 80a98db:  add BYTE PTR [esi], ah
 80a98dd:  outsb
 80a98de:  add al, BYTE PTR [eax]
 80a98e0:  ???
 80a98e1:  jae 80a98e5
 80a98e3:  add BYTE PTR [ebp-0x74ffd98c], cl
 80a98e9:  push ebp
 80a98ea:  or al, 0x83
 80a98ec:  out 0x3f, al
 80a98ee:  mov ecx, eax
 80a98f0:  mov DWORD PTR [edx+esi*8+0x4], 0x0
 80a98f8:  jmp 80a97a7
 80a98fd:  mov ecx, DWORD PTR [ebp+0xc]
 80a9900:  xor edx, edx
 80a9902:  lea esi, [esi]
 80a9908:  mov DWORD PTR [ecx+edx*2+0x84], 0x1
 80a9913:  mov DWORD PTR [ecx+edx*2+0x80], edx
 80a991a:  add edx, 0x4
 80a991d:  cmp edx, 0x40
 80a9920:  jne 80a9908
 80a9922:  mov ecx, eax
 80a9924:  jmp 80a97a7
 80a9929:  mov DWORD PTR [ebp-0x2c], 0x0
 80a9930:  xor ecx, ecx
 80a9932:  mov esi, eax
 80a9934:  xor edi, edi
 80a9936:  xchg ax, ax
 80a9938:  movzx eax, BYTE PTR [esi]
 80a993b:  add esi, 0x1
 80a993e:  mov edx, eax
 80a9940:  and edx, 0x7f
 80a9943:  shl edx, cl
 80a9945:  add ecx, 0x7
 80a9948:  or edi, edx
 80a994a:  test al, al
 80a994c:  js 80a9938
 80a994e:  mov DWORD PTR [ebp-0x2c], edi
 80a9951:  xor ecx, ecx
 80a9953:  mov edi, esi
 80a9955:  xor esi, esi
 80a9957:  nop
 80a9958:  movzx edx, BYTE PTR [edi]
 80a995b:  add edi, 0x1
 80a995e:  mov eax, edx
 80a9960:  and eax, 0x7f
 80a9963:  shl eax, cl
 80a9965:  add ecx, 0x7
 80a9968:  or esi, eax
 80a996a:  test dl, dl
 80a996c:  js 80a9958
 80a996e:  mov eax, DWORD PTR [ebp+0xc]
 80a9971:  mov ecx, edi
 80a9973:  mov edx, DWORD PTR [ebp-0x2c]
 80a9976:  imul esi, DWORD PTR [eax+0xac]
 80a997d:  mov DWORD PTR [eax+edx*8+0x4], 0x1
 80a9985:  neg esi
 80a9987:  mov DWORD PTR [eax+edx*8], esi
 80a998a:  jmp 80a97a7
 80a998f:  mov esi, DWORD PTR [ebp+0xc]
 80a9992:  movzx edx, BYTE PTR [esi+0xb8]
 80a9999:  cmp dl, 0xff
 80a999c:  movzx ecx, dl
 80a999f:  je 80a99bd
 80a99a1:  mov edx, ecx
 80a99a3:  and edx, 0x70
 80a99a6:  cmp edx, 0x20
 80a99a9:  je 80a9f61
 80a99af:  jg 80a9f0b
 80a99b5:  test edx, edx
 80a99b7:  jne 80a9f4c
 80a99bd:  xor edx, edx
 80a99bf:  nop
 80a99c0:  jmp 80a9f28
 80a99c5:  mov esi, DWORD PTR [ebp+0xc]
 80a99c8:  movzx eax, BYTE PTR [ecx+0x1]
 80a99cc:  add ecx, 0x2
 80a99cf:  imul eax, DWORD PTR [esi+0xb0]
 80a99d6:  add eax, edi
 80a99d8:  mov DWORD PTR [esi+0xa4], eax
 80a99de:  jmp 80a97a7
 80a99e3:  mov esi, DWORD PTR [ebp+0xc]
 80a99e6:  movzx eax, WORD PTR [ecx+0x1]
 80a99ea:  add ecx, 0x3
 80a99ed:  imul eax, DWORD PTR [esi+0xb0]
 80a99f4:  add eax, edi
 80a99f6:  mov DWORD PTR [esi+0xa4], eax
 80a99fc:  jmp 80a97a7
 80a9a01:  mov esi, DWORD PTR [ebp+0xc]
 80a9a04:  mov eax, DWORD PTR [ecx+0x1]
 80a9a07:  add ecx, 0x5
 80a9a0a:  imul eax, DWORD PTR [esi+0xb0]
 80a9a11:  add eax, edi
 80a9a13:  mov DWORD PTR [esi+0xa4], eax
 80a9a19:  jmp 80a97a7
 80a9a1e:  mov DWORD PTR [ebp-0x2c], 0x0
 80a9a25:  xor ecx, ecx
 80a9a27:  mov esi, eax
 80a9a29:  xor edi, edi
 80a9a2b:  nop
 80a9a2c:  lea esi, [esi]
 80a9a30:  movzx eax, BYTE PTR [esi]
 80a9a33:  add esi, 0x1
 80a9a36:  mov edx, eax
 80a9a38:  and edx, 0x7f
 80a9a3b:  shl edx, cl
 80a9a3d:  add ecx, 0x7
 80a9a40:  or edi, edx
 80a9a42:  test al, al
 80a9a44:  js 80a9a30
 80a9a46:  mov DWORD PTR [ebp-0x2c], edi
 80a9a49:  xor ecx, ecx
 80a9a4b:  mov edi, esi
 80a9a4d:  xor esi, esi
 80a9a4f:  nop
 80a9a50:  movzx edx, BYTE PTR [edi]
 80a9a53:  add edi, 0x1
 80a9a56:  mov eax, edx
 80a9a58:  and eax, 0x7f
 80a9a5b:  shl eax, cl
 80a9a5d:  add ecx, 0x7
 80a9a60:  or esi, eax
 80a9a62:  test dl, dl
 80a9a64:  js 80a9a50
 80a9a66:  mov eax, DWORD PTR [ebp+0xc]
 80a9a69:  mov ecx, edi
 80a9a6b:  mov edx, DWORD PTR [ebp-0x2c]
 80a9a6e:  imul esi, DWORD PTR [eax+0xac]
 80a9a75:  mov DWORD PTR [eax+edx*8+0x4], 0x1
 80a9a7d:  mov DWORD PTR [eax+edx*8], esi
 80a9a80:  jmp 80a97a7
 80a9a85:  xor edi, edi
 80a9a87:  xor ecx, ecx
 80a9a89:  mov esi, eax
 80a9a8b:  nop
 80a9a8c:  lea esi, [esi]
 80a9a90:  movzx edx, BYTE PTR [esi]
 80a9a93:  add esi, 0x1
 80a9a96:  mov eax, edx
 80a9a98:  and eax, 0x7f
 80a9a9b:  shl eax, cl
 80a9a9d:  add ecx, 0x7
 80a9aa0:  or edi, eax
 80a9aa2:  test dl, dl
 80a9aa4:  js 80a9a90
 80a9aa6:  mov ecx, esi
 80a9aa8:  mov esi, DWORD PTR [ebp+0xc]
 80a9aab:  mov DWORD PTR [esi+edi*8+0x4], 0x0
 80a9ab3:  jmp 80a97a7
 80a9ab8:  xor edi, edi
 80a9aba:  xor ecx, ecx
 80a9abc:  mov esi, eax
 80a9abe:  xchg ax, ax
 80a9ac0:  movzx edx, BYTE PTR [esi]
 80a9ac3:  add esi, 0x1
 80a9ac6:  mov eax, edx
 80a9ac8:  and eax, 0x7f
 80a9acb:  shl eax, cl
 80a9acd:  add ecx, 0x7
 80a9ad0:  or edi, eax
 80a9ad2:  test dl, dl
 80a9ad4:  js 80a9ac0
 80a9ad6:  mov ecx, esi
 80a9ad8:  mov esi, DWORD PTR [ebp+0xc]
 80a9adb:  mov DWORD PTR [esi+edi*8+0x4], 0x6
 80a9ae3:  jmp 80a97a7
 80a9ae8:  xor edi, edi
 80a9aea:  xor ecx, ecx
 80a9aec:  mov esi, eax
 80a9aee:  xchg ax, ax
 80a9af0:  movzx edx, BYTE PTR [esi]
 80a9af3:  add esi, 0x1
 80a9af6:  mov eax, edx
 80a9af8:  and eax, 0x7f
 80a9afb:  shl eax, cl
 80a9afd:  add ecx, 0x7
 80a9b00:  or edi, eax
 80a9b02:  test dl, dl
 80a9b04:  js 80a9af0
 80a9b06:  mov ecx, esi
 80a9b08:  mov esi, DWORD PTR [ebp+0xc]
 80a9b0b:  mov DWORD PTR [esi+edi*8+0x4], 0x0
 80a9b13:  jmp 80a97a7
 80a9b18:  mov DWORD PTR [ebp-0x2c], 0x0
 80a9b1f:  xor ecx, ecx
 80a9b21:  mov esi, eax
 80a9b23:  xor edi, edi
 80a9b25:  lea esi, [esi]
 80a9b28:  movzx eax, BYTE PTR [esi]
 80a9b2b:  add esi, 0x1
 80a9b2e:  mov edx, eax
 80a9b30:  and edx, 0x7f
 80a9b33:  shl edx, cl
 80a9b35:  add ecx, 0x7
 80a9b38:  or edi, edx
 80a9b3a:  test al, al
 80a9b3c:  js 80a9b28
 80a9b3e:  mov DWORD PTR [ebp-0x2c], edi
 80a9b41:  xor ecx, ecx
 80a9b43:  mov edi, esi
 80a9b45:  xor esi, esi
 80a9b47:  nop
 80a9b48:  movzx edx, BYTE PTR [edi]
 80a9b4b:  add edi, 0x1
 80a9b4e:  mov eax, edx
 80a9b50:  and eax, 0x7f
 80a9b53:  shl eax, cl
 80a9b55:  add ecx, 0x7
 80a9b58:  or esi, eax
 80a9b5a:  test dl, dl
 80a9b5c:  js 80a9b48
 80a9b5e:  mov eax, DWORD PTR [ebp-0x2c]
 80a9b61:  mov ecx, edi
 80a9b63:  mov edx, DWORD PTR [ebp+0xc]
 80a9b66:  mov DWORD PTR [edx+eax*8+0x4], 0x2
 80a9b6e:  mov DWORD PTR [edx+eax*8], esi
 80a9b71:  jmp 80a97a7
 80a9b76:  mov edx, DWORD PTR [ebp-0x34]
 80a9b79:  test edx, edx
 80a9b7b:  je 80a9f69
 80a9b81:  mov edx, DWORD PTR [ebp-0x34]
 80a9b84:  mov ecx, DWORD PTR [edx+0x90]
 80a9b8a:  mov DWORD PTR [ebp-0x34], ecx
 80a9b8d:  mov esi, DWORD PTR [ebp+0xc]
 80a9b90:  mov ecx, 0x29
 80a9b95:  mov edi, edx
 80a9b97:  rep movsd
 80a9b99:  mov ecx, eax
 80a9b9b:  mov esi, DWORD PTR [ebp+0xc]
 80a9b9e:  mov DWORD PTR [esi+0x90], edx
 80a9ba4:  jmp 80a97a7
 80a9ba9:  mov esi, DWORD PTR [ebp+0xc]
 80a9bac:  mov ecx, 0x29
 80a9bb1:  mov edx, DWORD PTR [esi+0x90]
 80a9bb7:  mov edi, esi
 80a9bb9:  mov esi, edx
 80a9bbb:  rep movsd
 80a9bbd:  mov ecx, DWORD PTR [ebp-0x34]
 80a9bc0:  mov DWORD PTR [ebp-0x34], edx
 80a9bc3:  mov DWORD PTR [edx+0x90], ecx
 80a9bc9:  mov ecx, eax
 80a9bcb:  jmp 80a97a7
 80a9bd0:  xor edi, edi
 80a9bd2:  xor ecx, ecx
 80a9bd4:  mov esi, eax
 80a9bd6:  xchg ax, ax
 80a9bd8:  movzx edx, BYTE PTR [esi]
 80a9bdb:  add esi, 0x1
 80a9bde:  mov eax, edx
 80a9be0:  and eax, 0x7f
 80a9be3:  shl eax, cl
 80a9be5:  add ecx, 0x7
 80a9be8:  or edi, eax
 80a9bea:  test dl, dl
 80a9bec:  js 80a9bd8
 80a9bee:  mov eax, DWORD PTR [ebp+0xc]
 80a9bf1:  xor ecx, ecx
 80a9bf3:  mov DWORD PTR [eax+0x98], edi
 80a9bf9:  xor edi, edi
 80a9bfb:  nop
 80a9bfc:  lea esi, [esi]
 80a9c00:  movzx edx, BYTE PTR [esi]
 80a9c03:  add esi, 0x1
 80a9c06:  mov eax, edx
 80a9c08:  and eax, 0x7f
 80a9c0b:  shl eax, cl
 80a9c0d:  add ecx, 0x7
 80a9c10:  or edi, eax
 80a9c12:  test dl, dl
 80a9c14:  js 80a9c00
 80a9c16:  mov ecx, esi
 80a9c18:  mov esi, DWORD PTR [ebp+0xc]
 80a9c1b:  mov DWORD PTR [esi+0x94], edi
 80a9c21:  mov DWORD PTR [esi+0xa0], 0x1
 80a9c2b:  jmp 80a97a7
 80a9c30:  xor edi, edi
 80a9c32:  xor ecx, ecx
 80a9c34:  mov esi, eax
 80a9c36:  xchg ax, ax
 80a9c38:  movzx edx, BYTE PTR [esi]
 80a9c3b:  add esi, 0x1
 80a9c3e:  mov eax, edx
 80a9c40:  and eax, 0x7f
 80a9c43:  shl eax, cl
 80a9c45:  add ecx, 0x7
 80a9c48:  or edi, eax
 80a9c4a:  test dl, dl
 80a9c4c:  js 80a9c38
 80a9c4e:  mov ecx, esi
 80a9c50:  mov esi, DWORD PTR [ebp+0xc]
 80a9c53:  mov DWORD PTR [esi+0x98], edi
 80a9c59:  mov DWORD PTR [esi+0xa0], 0x1
 80a9c63:  jmp 80a97a7
 80a9c68:  xor edi, edi
 80a9c6a:  xor ecx, ecx
 80a9c6c:  mov esi, eax
 80a9c6e:  xchg ax, ax
 80a9c70:  movzx edx, BYTE PTR [esi]
 80a9c73:  add esi, 0x1
 80a9c76:  mov eax, edx
 80a9c78:  and eax, 0x7f
 80a9c7b:  shl eax, cl
 80a9c7d:  add ecx, 0x7
 80a9c80:  or edi, eax
 80a9c82:  test dl, dl
 80a9c84:  js 80a9c70
 80a9c86:  mov ecx, esi
 80a9c88:  mov esi, DWORD PTR [ebp+0xc]
 80a9c8b:  mov DWORD PTR [esi+0x94], edi
 80a9c91:  jmp 80a97a7
 80a9c96:  mov esi, DWORD PTR [ebp+0xc]
 80a9c99:  xor ecx, ecx
 80a9c9b:  mov edi, eax
 80a9c9d:  mov DWORD PTR [esi+0x9c], eax
 80a9ca3:  mov DWORD PTR [esi+0xa0], 0x2
 80a9cad:  xor esi, esi
 80a9caf:  nop
 80a9cb0:  movzx edx, BYTE PTR [edi]
 80a9cb3:  add edi, 0x1
 80a9cb6:  mov eax, edx
 80a9cb8:  and eax, 0x7f
 80a9cbb:  shl eax, cl
 80a9cbd:  add ecx, 0x7
 80a9cc0:  or esi, eax
 80a9cc2:  test dl, dl
 80a9cc4:  js 80a9cb0
 80a9cc6:  lea ecx, [edi+esi]
 80a9cc9:  jmp 80a97a7
 80a9cce:  xor esi, esi
 80a9cd0:  xor ecx, ecx
 80a9cd2:  mov edi, eax
 80a9cd4:  lea esi, [esi]
 80a9cd8:  movzx edx, BYTE PTR [edi]
 80a9cdb:  add edi, 0x1
 80a9cde:  mov eax, edx
 80a9ce0:  and eax, 0x7f
 80a9ce3:  shl eax, cl
 80a9ce5:  add ecx, 0x7
 80a9ce8:  or esi, eax
 80a9cea:  test dl, dl
 80a9cec:  js 80a9cd8
 80a9cee:  mov edx, DWORD PTR [ebp+0xc]
 80a9cf1:  xor ecx, ecx
 80a9cf3:  mov DWORD PTR [edx+esi*8+0x4], 0x3
 80a9cfb:  mov DWORD PTR [edx+esi*8], edi
 80a9cfe:  xor esi, esi
 80a9d00:  movzx edx, BYTE PTR [edi]
 80a9d03:  add edi, 0x1
 80a9d06:  mov eax, edx
 80a9d08:  and eax, 0x7f
 80a9d0b:  shl eax, cl
 80a9d0d:  add ecx, 0x7
 80a9d10:  or esi, eax
 80a9d12:  test dl, dl
 80a9d14:  js 80a9d00
 80a9d16:  lea ecx, [edi+esi]
 80a9d19:  jmp 80a97a7
 80a9d1e:  xor edi, edi
 80a9d20:  xor ecx, ecx
 80a9d22:  mov esi, eax
 80a9d24:  lea esi, [esi]
 80a9d28:  movzx edx, BYTE PTR [esi]
 80a9d2b:  add esi, 0x1
 80a9d2e:  mov eax, edx
 80a9d30:  and eax, 0x7f
 80a9d33:  shl eax, cl
 80a9d35:  add ecx, 0x7
 80a9d38:  or edi, eax
 80a9d3a:  test dl, dl
 80a9d3c:  js 80a9d28
 80a9d3e:  mov eax, esi
 80a9d40:  lea edx, [ebp-0x20]
 80a9d43:  call 80a94a0
 80a9d48:  mov esi, DWORD PTR [ebp+0xc]
 80a9d4b:  mov ecx, eax
 80a9d4d:  mov eax, DWORD PTR [esi+0xac]
 80a9d53:  imul eax, DWORD PTR [ebp-0x20]
 80a9d57:  mov DWORD PTR [esi+edi*8+0x4], 0x1
 80a9d5f:  mov DWORD PTR [esi+edi*8], eax
 80a9d62:  jmp 80a97a7
 80a9d67:  xor esi, esi
 80a9d69:  xor ecx, ecx
 80a9d6b:  mov edi, eax
 80a9d6d:  lea esi, [esi]
 80a9d70:  movzx edx, BYTE PTR [edi]
 80a9d73:  add edi, 0x1
 80a9d76:  mov eax, edx
 80a9d78:  and eax, 0x7f
 80a9d7b:  shl eax, cl
 80a9d7d:  add ecx, 0x7
 80a9d80:  or esi, eax
 80a9d82:  test dl, dl
 80a9d84:  js 80a9d70
 80a9d86:  mov eax, DWORD PTR [ebp+0xc]
 80a9d89:  lea edx, [ebp-0x20]
 80a9d8c:  mov DWORD PTR [eax+0x98], esi
 80a9d92:  mov eax, edi
 80a9d94:  call 80a94a0
 80a9d99:  mov esi, DWORD PTR [ebp+0xc]
 80a9d9c:  mov DWORD PTR [esi+0xa0], 0x1
 80a9da6:  mov ecx, eax
 80a9da8:  mov eax, DWORD PTR [ebp-0x20]
 80a9dab:  imul eax, DWORD PTR [esi+0xac]
 80a9db2:  mov DWORD PTR [esi+0x94], eax
 80a9db8:  jmp 80a97a7
 80a9dbd:  lea edx, [ebp-0x20]
 80a9dc0:  call 80a94a0
 80a9dc5:  mov esi, DWORD PTR [ebp+0xc]
 80a9dc8:  mov ecx, eax
 80a9dca:  mov eax, DWORD PTR [ebp-0x20]
 80a9dcd:  imul eax, DWORD PTR [esi+0xac]
 80a9dd4:  mov DWORD PTR [esi+0x94], eax
 80a9dda:  jmp 80a97a7
 80a9ddf:  mov DWORD PTR [ebp-0x2c], 0x0
 80a9de6:  xor ecx, ecx
 80a9de8:  mov esi, eax
 80a9dea:  xor edi, edi
 80a9dec:  lea esi, [esi]
 80a9df0:  movzx eax, BYTE PTR [esi]
 80a9df3:  add esi, 0x1
 80a9df6:  mov edx, eax
 80a9df8:  and edx, 0x7f
 80a9dfb:  shl edx, cl
 80a9dfd:  add ecx, 0x7
 80a9e00:  or edi, edx
 80a9e02:  test al, al
 80a9e04:  js 80a9df0
 80a9e06:  mov DWORD PTR [ebp-0x2c], edi
 80a9e09:  xor ecx, ecx
 80a9e0b:  mov edi, esi
 80a9e0d:  xor esi, esi
 80a9e0f:  nop
 80a9e10:  movzx edx, BYTE PTR [edi]
 80a9e13:  add edi, 0x1
 80a9e16:  mov eax, edx
 80a9e18:  and eax, 0x7f
 80a9e1b:  shl eax, cl
 80a9e1d:  add ecx, 0x7
 80a9e20:  or esi, eax
 80a9e22:  test dl, dl
 80a9e24:  js 80a9e10
 80a9e26:  mov eax, DWORD PTR [ebp+0xc]
 80a9e29:  mov ecx, edi
 80a9e2b:  mov edx, DWORD PTR [ebp-0x2c]
 80a9e2e:  imul esi, DWORD PTR [eax+0xac]
 80a9e35:  mov DWORD PTR [eax+edx*8+0x4], 0x4
 80a9e3d:  mov DWORD PTR [eax+edx*8], esi
 80a9e40:  jmp 80a97a7
 80a9e45:  xor edi, edi
 80a9e47:  xor ecx, ecx
 80a9e49:  mov esi, eax
 80a9e4b:  nop
 80a9e4c:  lea esi, [esi]
 80a9e50:  movzx edx, BYTE PTR [esi]
 80a9e53:  add esi, 0x1
 80a9e56:  mov eax, edx
 80a9e58:  and eax, 0x7f
 80a9e5b:  shl eax, cl
 80a9e5d:  add ecx, 0x7
 80a9e60:  or edi, eax
 80a9e62:  test dl, dl
 80a9e64:  js 80a9e50
 80a9e66:  mov eax, esi
 80a9e68:  lea edx, [ebp-0x20]
 80a9e6b:  call 80a94a0
 80a9e70:  mov esi, DWORD PTR [ebp+0xc]
 80a9e73:  mov ecx, eax
 80a9e75:  mov eax, DWORD PTR [esi+0xac]
 80a9e7b:  imul eax, DWORD PTR [ebp-0x20]
 80a9e7f:  mov DWORD PTR [esi+edi*8+0x4], 0x4
 80a9e87:  mov DWORD PTR [esi+edi*8], eax
 80a9e8a:  jmp 80a97a7
 80a9e8f:  xor esi, esi
 80a9e91:  xor ecx, ecx
 80a9e93:  mov edi, eax
 80a9e95:  lea esi, [esi]
 80a9e98:  movzx edx, BYTE PTR [edi]
 80a9e9b:  add edi, 0x1
 80a9e9e:  mov eax, edx
 80a9ea0:  and eax, 0x7f
 80a9ea3:  shl eax, cl
 80a9ea5:  add ecx, 0x7
 80a9ea8:  or esi, eax
 80a9eaa:  test dl, dl
 80a9eac:  js 80a9e98
 80a9eae:  mov edx, DWORD PTR [ebp+0xc]
 80a9eb1:  xor ecx, ecx
 80a9eb3:  mov DWORD PTR [edx+esi*8+0x4], 0x5
 80a9ebb:  mov DWORD PTR [edx+esi*8], edi
 80a9ebe:  xor esi, esi
 80a9ec0:  movzx edx, BYTE PTR [edi]
 80a9ec3:  add edi, 0x1
 80a9ec6:  mov eax, edx
 80a9ec8:  and eax, 0x7f
 80a9ecb:  shl eax, cl
 80a9ecd:  add ecx, 0x7
 80a9ed0:  or esi, eax
 80a9ed2:  test dl, dl
 80a9ed4:  js 80a9ec0
 80a9ed6:  lea ecx, [edi+esi]
 80a9ed9:  jmp 80a97a7
 80a9ede:  xor edi, edi
 80a9ee0:  xor ecx, ecx
 80a9ee2:  mov esi, eax
 80a9ee4:  lea esi, [esi]
 80a9ee8:  movzx edx, BYTE PTR [esi]
 80a9eeb:  add esi, 0x1
 80a9eee:  mov eax, edx
 80a9ef0:  and eax, 0x7f
 80a9ef3:  shl eax, cl
 80a9ef5:  add ecx, 0x7
 80a9ef8:  or edi, eax
 80a9efa:  test dl, dl
 80a9efc:  js 80a9ee8
 80a9efe:  mov ecx, esi
 80a9f00:  mov esi, DWORD PTR [ebp+0x8]
 80a9f03:  mov DWORD PTR [esi+0x68], edi
 80a9f06:  jmp 80a97a7
 80a9f0b:  cmp edx, 0x40
 80a9f0e:  je 80a9f59
 80a9f10:  cmp edx, 0x50
 80a9f13:  je 80a99bd
 80a9f19:  cmp edx, 0x30
 80a9f1c:  jne 80a9788
 80a9f22:  mov esi, DWORD PTR [ebp+0x8]
 80a9f25:  mov edx, DWORD PTR [esi+0x58]
 80a9f28:  lea esi, [ebp-0x1c]
 80a9f2b:  mov DWORD PTR [esp], eax
 80a9f2e:  mov eax, ecx
 80a9f30:  mov DWORD PTR [esp+0x4], esi
 80a9f34:  call 80a94f0
 80a9f39:  mov esi, DWORD PTR [ebp+0xc]
 80a9f3c:  mov ecx, eax
 80a9f3e:  mov eax, DWORD PTR [ebp-0x1c]
 80a9f41:  mov DWORD PTR [esi+0xa4], eax
 80a9f47:  jmp 80a97a7
 80a9f4c:  cmp edx, 0x10
 80a9f4f:  jne 80a9788
 80a9f55:  xor edx, edx
 80a9f57:  jmp 80a9f28
 80a9f59:  mov esi, DWORD PTR [ebp+0x8]
 80a9f5c:  mov edx, DWORD PTR [esi+0x5c]
 80a9f5f:  jmp 80a9f28
 80a9f61:  mov esi, DWORD PTR [ebp+0x8]
 80a9f64:  mov edx, DWORD PTR [esi+0x54]
 80a9f67:  jmp 80a9f28
 80a9f69:  sub esp, 0xc0
 80a9f6f:  lea edx, [esp+0x17]
 80a9f73:  and edx, 0xf0
 80a9f76:  jmp 80a9b8d
 80a9f7b:  nop
 80a9f7c:  lea esi, [esi]

080a9f80 <execute_stack_op>:
 80a9f80:  push ebp
 80a9f81:  push edi
 80a9f82:  push esi
 80a9f83:  push ebx
 80a9f84:  sub esp, 0x13c
 80a9f8a:  mov DWORD PTR [esp+0x18], edx
 80a9f8e:  mov edx, DWORD PTR [esp+0x154]
 80a9f95:  call 80ac0a5
 80a9f9a:  add ebx, 0x26d6a
 80a9fa0:  cmp eax, DWORD PTR [esp+0x18]
 80a9fa4:  mov DWORD PTR [esp+0x24], edx
 80a9fa8:  jae 80aa3d6
 80a9fae:  mov edi, 0x1
 80a9fb3:  nop
 80a9fb4:  lea esi, [esi]
 80a9fb8:  movzx edx, BYTE PTR [eax]
 80a9fbb:  lea esi, [eax+0x1]
 80a9fbe:  movzx ecx, dl
 80a9fc1:  mov DWORD PTR [esp+0x14], ecx
 80a9fc5:  lea ecx, [edx-0x3]
 80a9fc8:  cmp cl, 0xee
 80a9fcb:  jbe 80a9fd8
 80a9fcd:  call 8055a00
 80a9fd2:  lea esi, [esi]
 80a9fd8:  movzx ecx, cl
 80a9fdb:  mov ebp, ebx
 80a9fdd:  sub ebp, DWORD PTR [ebx+ecx*4-0x26d1c]
 80a9fe4:  jmp ebp
 80a9fe6:  xchg ax, ax
 80a9fe8:  pop esp
 80a9fe9:  imul eax, DWORD PTR [edx], 0x26d3700
 80a9fef:  add BYTE PTR [edi], dh
 80a9ff1:  insd
 80a9ff2:  add al, BYTE PTR [eax]
 80a9ff4:  movsb
 80a9ff5:  ???
 80a9ff6:  add al, BYTE PTR [eax]
 80a9ff8:  ???
 80a9ff9:  insd
 80a9ffa:  add al, BYTE PTR [eax]
 80a9ffc:  mov ah, 0x67
 80a9ffe:  add al, BYTE PTR [eax]
 80aa000:  ???
 80aa001:  ???
 80aa002:  add al, BYTE PTR [eax]
 80aa004:  ???
 80aa005:  ???
 80aa006:  add al, BYTE PTR [eax]
 80aa008:  ???
 80aa009:  ???
 80aa00a:  add al, BYTE PTR [eax]
 80aa00c:  pop esp
 80aa00d:  imul eax, DWORD PTR [edx], 0x2695c00
 80aa013:  add BYTE PTR [ecx+ebp*2], bl
 80aa016:  add al, BYTE PTR [eax]
 80aa018:  sbb al, 0x69
 80aa01a:  add al, BYTE PTR [eax]
 80aa01c:  test BYTE PTR [eax+0x2], ch
 80aa01f:  add BYTE PTR [eax+ebp*2+0x68040002], ah
 80aa026:  add al, BYTE PTR [eax]
 80aa028:  sbb al, 0x68
 80aa02a:  add al, BYTE PTR [eax]
 80aa02c:  xor al, 0x68
 80aa02e:  add al, BYTE PTR [eax]
 80aa030:  pop esp
 80aa031:  push 0x64e40002
 80aa036:  add al, BYTE PTR [eax]
 80aa038:  sub al, 0x65
 80aa03a:  add al, BYTE PTR [eax]
 80aa03c:  ???
 80aa03d:  insd
 80aa03e:  add al, BYTE PTR [eax]
 80aa040:  movsb
 80aa041:  ???
 80aa042:  add al, BYTE PTR [eax]
 80aa044:  mov ah, 0x65
 80aa046:  add al, BYTE PTR [eax]
 80aa048:  mov ah, 0x65
 80aa04a:  add al, BYTE PTR [eax]
 80aa04c:  mov ah, 0x65
 80aa04e:  add al, BYTE PTR [eax]
 80aa050:  mov ah, 0x65
 80aa052:  add al, BYTE PTR [eax]
 80aa054:  mov ah, 0x65
 80aa056:  add al, BYTE PTR [eax]
 80aa058:  movsb
 80aa059:  ???
 80aa05a:  add al, BYTE PTR [eax]
 80aa05c:  movsb
 80aa05d:  ???
 80aa05e:  add al, BYTE PTR [eax]
 80aa060:  mov ah, 0x65
 80aa062:  add al, BYTE PTR [eax]
 80aa064:  mov ah, 0x65
 80aa066:  add al, BYTE PTR [eax]
 80aa068:  movsb
 80aa069:  ???
 80aa06a:  add al, BYTE PTR [eax]
 80aa06c:  mov ah, 0x65
 80aa06e:  add al, BYTE PTR [eax]
 80aa070:  mov ah, 0x65
 80aa072:  add al, BYTE PTR [eax]
 80aa074:  mov ah, 0x65
 80aa076:  add al, BYTE PTR [eax]
 80aa078:  mov ah, 0x65
 80aa07a:  add al, BYTE PTR [eax]
 80aa07c:  ???
 80aa07d:  add al, BYTE PTR gs:[eax]
 80aa080:  mov ah, 0x65
 80aa082:  add al, BYTE PTR [eax]
 80aa084:  mov ah, 0x65
 80aa086:  add al, BYTE PTR [eax]
 80aa088:  mov ah, 0x65
 80aa08a:  add al, BYTE PTR [eax]
 80aa08c:  mov ah, 0x65
 80aa08e:  add al, BYTE PTR [eax]
 80aa090:  mov ah, 0x65
 80aa092:  add al, BYTE PTR [eax]
 80aa094:  mov ah, 0x65
 80aa096:  add al, BYTE PTR [eax]
 80aa098:  cld
 80aa099:  add al, BYTE PTR gs:[eax]
 80aa09c:  or al, 0x66
 80aa09e:  add al, BYTE PTR [eax]
 80aa0a0:  or al, 0x66
 80aa0a2:  add al, BYTE PTR [eax]
 80aa0a4:  or al, 0x66
 80aa0a6:  add al, BYTE PTR [eax]
 80aa0a8:  or al, 0x66
 80aa0aa:  add al, BYTE PTR [eax]
 80aa0ac:  or al, 0x66
 80aa0ae:  add al, BYTE PTR [eax]
 80aa0b0:  or al, 0x66
 80aa0b2:  add al, BYTE PTR [eax]
 80aa0b4:  or al, 0x66
 80aa0b6:  add al, BYTE PTR [eax]
 80aa0b8:  or al, 0x66
 80aa0ba:  add al, BYTE PTR [eax]
 80aa0bc:  or al, 0x66
 80aa0be:  add al, BYTE PTR [eax]
 80aa0c0:  or al, 0x66
 80aa0c2:  add al, BYTE PTR [eax]
 80aa0c4:  or al, 0x66
 80aa0c6:  add al, BYTE PTR [eax]
 80aa0c8:  or al, 0x66
 80aa0ca:  add al, BYTE PTR [eax]
 80aa0cc:  or al, 0x66
 80aa0ce:  add al, BYTE PTR [eax]
 80aa0d0:  or al, 0x66
 80aa0d2:  add al, BYTE PTR [eax]
 80aa0d4:  or al, 0x66
 80aa0d6:  add al, BYTE PTR [eax]
 80aa0d8:  or al, 0x66
 80aa0da:  add al, BYTE PTR [eax]
 80aa0dc:  or al, 0x66
 80aa0de:  add al, BYTE PTR [eax]
 80aa0e0:  or al, 0x66
 80aa0e2:  add al, BYTE PTR [eax]
 80aa0e4:  or al, 0x66
 80aa0e6:  add al, BYTE PTR [eax]
 80aa0e8:  or al, 0x66
 80aa0ea:  add al, BYTE PTR [eax]
 80aa0ec:  or al, 0x66
 80aa0ee:  add al, BYTE PTR [eax]
 80aa0f0:  or al, 0x66
 80aa0f2:  add al, BYTE PTR [eax]
 80aa0f4:  or al, 0x66
 80aa0f6:  add al, BYTE PTR [eax]
 80aa0f8:  or al, 0x66
 80aa0fa:  add al, BYTE PTR [eax]
 80aa0fc:  or al, 0x66
 80aa0fe:  add al, BYTE PTR [eax]
 80aa100:  or al, 0x66
 80aa102:  add al, BYTE PTR [eax]
 80aa104:  or al, 0x66
 80aa106:  add al, BYTE PTR [eax]
 80aa108:  or al, 0x66
 80aa10a:  add al, BYTE PTR [eax]
 80aa10c:  or al, 0x66
 80aa10e:  add al, BYTE PTR [eax]
 80aa110:  or al, 0x66
 80aa112:  add al, BYTE PTR [eax]
 80aa114:  or al, 0x66
 80aa116:  add al, BYTE PTR [eax]
 80aa118:  or al, 0x66
 80aa11a:  add al, BYTE PTR [eax]
 80aa11c:  push esp
 80aa11d:  ???
 80aa11e:  add al, BYTE PTR [eax]
 80aa120:  push esp
 80aa121:  ???
 80aa122:  add al, BYTE PTR [eax]
 80aa124:  push esp
 80aa125:  ???
 80aa126:  add al, BYTE PTR [eax]
 80aa128:  push esp
 80aa129:  ???
 80aa12a:  add al, BYTE PTR [eax]
 80aa12c:  push esp
 80aa12d:  ???
 80aa12e:  add al, BYTE PTR [eax]
 80aa130:  push esp
 80aa131:  ???
 80aa132:  add al, BYTE PTR [eax]
 80aa134:  push esp
 80aa135:  ???
 80aa136:  add al, BYTE PTR [eax]
 80aa138:  push esp
 80aa139:  ???
 80aa13a:  add al, BYTE PTR [eax]
 80aa13c:  push esp
 80aa13d:  ???
 80aa13e:  add al, BYTE PTR [eax]
 80aa140:  push esp
 80aa141:  ???
 80aa142:  add al, BYTE PTR [eax]
 80aa144:  push esp
 80aa145:  ???
 80aa146:  add al, BYTE PTR [eax]
 80aa148:  push esp
 80aa149:  ???
 80aa14a:  add al, BYTE PTR [eax]
 80aa14c:  push esp
 80aa14d:  ???
 80aa14e:  add al, BYTE PTR [eax]
 80aa150:  push esp
 80aa151:  ???
 80aa152:  add al, BYTE PTR [eax]
 80aa154:  push esp
 80aa155:  ???
 80aa156:  add al, BYTE PTR [eax]
 80aa158:  push esp
 80aa159:  ???
 80aa15a:  add al, BYTE PTR [eax]
 80aa15c:  push esp
 80aa15d:  ???
 80aa15e:  add al, BYTE PTR [eax]
 80aa160:  push esp
 80aa161:  ???
 80aa162:  add al, BYTE PTR [eax]
 80aa164:  push esp
 80aa165:  ???
 80aa166:  add al, BYTE PTR [eax]
 80aa168:  push esp
 80aa169:  ???
 80aa16a:  add al, BYTE PTR [eax]
 80aa16c:  push esp
 80aa16d:  ???
 80aa16e:  add al, BYTE PTR [eax]
 80aa170:  push esp
 80aa171:  ???
 80aa172:  add al, BYTE PTR [eax]
 80aa174:  push esp
 80aa175:  ???
 80aa176:  add al, BYTE PTR [eax]
 80aa178:  push esp
 80aa179:  ???
 80aa17a:  add al, BYTE PTR [eax]
 80aa17c:  push esp
 80aa17d:  ???
 80aa17e:  add al, BYTE PTR [eax]
 80aa180:  push esp
 80aa181:  ???
 80aa182:  add al, BYTE PTR [eax]
 80aa184:  push esp
 80aa185:  ???
 80aa186:  add al, BYTE PTR [eax]
 80aa188:  push esp
 80aa189:  ???
 80aa18a:  add al, BYTE PTR [eax]
 80aa18c:  push esp
 80aa18d:  ???
 80aa18e:  add al, BYTE PTR [eax]
 80aa190:  push esp
 80aa191:  ???
 80aa192:  add al, BYTE PTR [eax]
 80aa194:  push esp
 80aa195:  ???
 80aa196:  add al, BYTE PTR [eax]
 80aa198:  push esp
 80aa199:  ???
 80aa19a:  add al, BYTE PTR [eax]
 80aa19c:  lodsb
 80aa19d:  ???
 80aa19e:  add al, BYTE PTR [eax]
 80aa1a0:  lodsb
 80aa1a1:  ???
 80aa1a2:  add al, BYTE PTR [eax]
 80aa1a4:  lodsb
 80aa1a5:  ???
 80aa1a6:  add al, BYTE PTR [eax]
 80aa1a8:  lodsb
 80aa1a9:  ???
 80aa1aa:  add al, BYTE PTR [eax]
 80aa1ac:  lodsb
 80aa1ad:  ???
 80aa1ae:  add al, BYTE PTR [eax]
 80aa1b0:  lodsb
 80aa1b1:  ???
 80aa1b2:  add al, BYTE PTR [eax]
 80aa1b4:  lodsb
 80aa1b5:  ???
 80aa1b6:  add al, BYTE PTR [eax]
 80aa1b8:  lodsb
 80aa1b9:  ???
 80aa1ba:  add al, BYTE PTR [eax]
 80aa1bc:  lodsb
 80aa1bd:  ???
 80aa1be:  add al, BYTE PTR [eax]
 80aa1c0:  lodsb
 80aa1c1:  ???
 80aa1c2:  add al, BYTE PTR [eax]
 80aa1c4:  lodsb
 80aa1c5:  ???
 80aa1c6:  add al, BYTE PTR [eax]
 80aa1c8:  lodsb
 80aa1c9:  ???
 80aa1ca:  add al, BYTE PTR [eax]
 80aa1cc:  lodsb
 80aa1cd:  ???
 80aa1ce:  add al, BYTE PTR [eax]
 80aa1d0:  lodsb
 80aa1d1:  ???
 80aa1d2:  add al, BYTE PTR [eax]
 80aa1d4:  lodsb
 80aa1d5:  ???
 80aa1d6:  add al, BYTE PTR [eax]
 80aa1d8:  lodsb
 80aa1d9:  ???
 80aa1da:  add al, BYTE PTR [eax]
 80aa1dc:  lodsb
 80aa1dd:  ???
 80aa1de:  add al, BYTE PTR [eax]
 80aa1e0:  lodsb
 80aa1e1:  ???
 80aa1e2:  add al, BYTE PTR [eax]
 80aa1e4:  lodsb
 80aa1e5:  ???
 80aa1e6:  add al, BYTE PTR [eax]
 80aa1e8:  lodsb
 80aa1e9:  ???
 80aa1ea:  add al, BYTE PTR [eax]
 80aa1ec:  lodsb
 80aa1ed:  ???
 80aa1ee:  add al, BYTE PTR [eax]
 80aa1f0:  lodsb
 80aa1f1:  ???
 80aa1f2:  add al, BYTE PTR [eax]
 80aa1f4:  lodsb
 80aa1f5:  ???
 80aa1f6:  add al, BYTE PTR [eax]
 80aa1f8:  lodsb
 80aa1f9:  ???
 80aa1fa:  add al, BYTE PTR [eax]
 80aa1fc:  lodsb
 80aa1fd:  ???
 80aa1fe:  add al, BYTE PTR [eax]
 80aa200:  lodsb
 80aa201:  ???
 80aa202:  add al, BYTE PTR [eax]
 80aa204:  lodsb
 80aa205:  ???
 80aa206:  add al, BYTE PTR [eax]
 80aa208:  lodsb
 80aa209:  ???
 80aa20a:  add al, BYTE PTR [eax]
 80aa20c:  lodsb
 80aa20d:  ???
 80aa20e:  add al, BYTE PTR [eax]
 80aa210:  lodsb
 80aa211:  ???
 80aa212:  add al, BYTE PTR [eax]
 80aa214:  lodsb
 80aa215:  ???
 80aa216:  add al, BYTE PTR [eax]
 80aa218:  lodsb
 80aa219:  ???
 80aa21a:  add al, BYTE PTR [eax]
 80aa21c:  or al, 0x67
 80aa21e:  add al, BYTE PTR [eax]
 80aa220:  ???
 80aa221:  insd
 80aa222:  add al, BYTE PTR [eax]
 80aa224:  adc al, 0x69
 80aa226:  add al, BYTE PTR [eax]
 80aa228:  ???
 80aa229:  insd
 80aa22a:  add al, BYTE PTR [eax]
 80aa22c:  movsb
 80aa22d:  ???
 80aa22e:  add al, BYTE PTR [eax]
 80aa230:  ???
 80aa231:  insd
 80aa232:  add al, BYTE PTR [eax]
 80aa234:  ???
 80aa235:  ???
 80aa236:  add al, BYTE PTR [eax]
 80aa238:  ???
 80aa239:  insd
 80aa23a:  add al, BYTE PTR [eax]
 80aa23c:  ???
 80aa23d:  insd
 80aa23e:  add al, BYTE PTR [eax]
 80aa240:  ???
 80aa241:  insd
 80aa242:  add al, BYTE PTR [eax]
 80aa244:  ???
 80aa245:  insd
 80aa246:  add al, BYTE PTR [eax]
 80aa248:  ???
 80aa249:  insd
 80aa24a:  add al, BYTE PTR [eax]
 80aa24c:  ???
 80aa24d:  insd
 80aa24e:  add al, BYTE PTR [eax]
 80aa250:  ???
 80aa251:  insd
 80aa252:  add al, BYTE PTR [eax]
 80aa254:  ???
 80aa255:  insd
 80aa256:  add al, BYTE PTR [eax]
 80aa258:  ???
 80aa259:  insd
 80aa25a:  add al, BYTE PTR [eax]
 80aa25c:  ???
 80aa25d:  insd
 80aa25e:  add al, BYTE PTR [eax]
 80aa260:  ???
 80aa261:  insd
 80aa262:  add al, BYTE PTR [eax]
 80aa264:  ???
 80aa265:  insd
 80aa266:  add al, BYTE PTR [eax]
 80aa268:  ???
 80aa269:  insd
 80aa26a:  add al, BYTE PTR [eax]
 80aa26c:  ???
 80aa26d:  insd
 80aa26e:  add al, BYTE PTR [eax]
 80aa270:  ???
 80aa271:  insd
 80aa272:  add al, BYTE PTR [eax]
 80aa274:  ???
 80aa275:  insd
 80aa276:  add al, BYTE PTR [eax]
 80aa278:  ???
 80aa279:  insd
 80aa27a:  add al, BYTE PTR [eax]
 80aa27c:  ???
 80aa27d:  insd
 80aa27e:  add al, BYTE PTR [eax]
 80aa280:  ???
 80aa281:  insd
 80aa282:  add al, BYTE PTR [eax]
 80aa284:  ???
 80aa285:  insd
 80aa286:  add al, BYTE PTR [eax]
 80aa288:  ???
 80aa289:  insd
 80aa28a:  add al, BYTE PTR [eax]
 80aa28c:  ???
 80aa28d:  insd
 80aa28e:  add al, BYTE PTR [eax]
 80aa290:  ???
 80aa291:  insd
 80aa292:  add al, BYTE PTR [eax]
 80aa294:  ???
 80aa295:  insd
 80aa296:  add al, BYTE PTR [eax]
 80aa298:  ???
 80aa299:  insd
 80aa29a:  add al, BYTE PTR [eax]
 80aa29c:  ???
 80aa29d:  insd
 80aa29e:  add al, BYTE PTR [eax]
 80aa2a0:  ???
 80aa2a1:  insd
 80aa2a2:  add al, BYTE PTR [eax]
 80aa2a4:  ???
 80aa2a5:  insd
 80aa2a6:  add al, BYTE PTR [eax]
 80aa2a8:  ???
 80aa2a9:  insd
 80aa2aa:  add al, BYTE PTR [eax]
 80aa2ac:  ???
 80aa2ad:  insd
 80aa2ae:  add al, BYTE PTR [eax]
 80aa2b0:  ???
 80aa2b1:  insd
 80aa2b2:  add al, BYTE PTR [eax]
 80aa2b4:  ???
 80aa2b5:  insd
 80aa2b6:  add al, BYTE PTR [eax]
 80aa2b8:  ???
 80aa2b9:  insd
 80aa2ba:  add al, BYTE PTR [eax]
 80aa2bc:  ???
 80aa2bd:  insd
 80aa2be:  add al, BYTE PTR [eax]
 80aa2c0:  ???
 80aa2c1:  insd
 80aa2c2:  add al, BYTE PTR [eax]
 80aa2c4:  ???
 80aa2c5:  insd
 80aa2c6:  add al, BYTE PTR [eax]
 80aa2c8:  ???
 80aa2c9:  insd
 80aa2ca:  add al, BYTE PTR [eax]
 80aa2cc:  ???
 80aa2cd:  insd
 80aa2ce:  add al, BYTE PTR [eax]
 80aa2d0:  ???
 80aa2d1:  insd
 80aa2d2:  add al, BYTE PTR [eax]
 80aa2d4:  ???
 80aa2d5:  insd
 80aa2d6:  add al, BYTE PTR [eax]
 80aa2d8:  ???
 80aa2d9:  insd
 80aa2da:  add al, BYTE PTR [eax]
 80aa2dc:  ???
 80aa2dd:  insd
 80aa2de:  add al, BYTE PTR [eax]
 80aa2e0:  ???
 80aa2e1:  insd
 80aa2e2:  add al, BYTE PTR [eax]
 80aa2e4:  ???
 80aa2e5:  insd
 80aa2e6:  add al, BYTE PTR [eax]
 80aa2e8:  ???
 80aa2e9:  insd
 80aa2ea:  add al, BYTE PTR [eax]
 80aa2ec:  ???
 80aa2ed:  insd
 80aa2ee:  add al, BYTE PTR [eax]
 80aa2f0:  ???
 80aa2f1:  insd
 80aa2f2:  add al, BYTE PTR [eax]
 80aa2f4:  ???
 80aa2f5:  insd
 80aa2f6:  add al, BYTE PTR [eax]
 80aa2f8:  ???
 80aa2f9:  insd
 80aa2fa:  add al, BYTE PTR [eax]
 80aa2fc:  ???
 80aa2fd:  insd
 80aa2fe:  add al, BYTE PTR [eax]
 80aa300:  ???
 80aa301:  insd
 80aa302:  add al, BYTE PTR [eax]
 80aa304:  ???
 80aa305:  insd
 80aa306:  add al, BYTE PTR [eax]
 80aa308:  ???
 80aa309:  insd
 80aa30a:  add al, BYTE PTR [eax]
 80aa30c:  ???
 80aa30d:  insd
 80aa30e:  add al, BYTE PTR [eax]
 80aa310:  ???
 80aa311:  insd
 80aa312:  add al, BYTE PTR [eax]
 80aa314:  ???
 80aa315:  insd
 80aa316:  add al, BYTE PTR [eax]
 80aa318:  ???
 80aa319:  insd
 80aa31a:  add al, BYTE PTR [eax]
 80aa31c:  ???
 80aa31d:  insd
 80aa31e:  add al, BYTE PTR [eax]
 80aa320:  ???
 80aa321:  insd
 80aa322:  add al, BYTE PTR [eax]
 80aa324:  ???
 80aa325:  insd
 80aa326:  add al, BYTE PTR [eax]
 80aa328:  ???
 80aa329:  insd
 80aa32a:  add al, BYTE PTR [eax]
 80aa32c:  ???
 80aa32d:  insd
 80aa32e:  add al, BYTE PTR [eax]
 80aa330:  ???
 80aa331:  insd
 80aa332:  add al, BYTE PTR [eax]
 80aa334:  ???
 80aa335:  insd
 80aa336:  add al, BYTE PTR [eax]
 80aa338:  ???
 80aa339:  insd
 80aa33a:  add al, BYTE PTR [eax]
 80aa33c:  ???
 80aa33d:  insd
 80aa33e:  add al, BYTE PTR [eax]
 80aa340:  ???
 80aa341:  insd
 80aa342:  add al, BYTE PTR [eax]
 80aa344:  ???
 80aa345:  insd
 80aa346:  add al, BYTE PTR [eax]
 80aa348:  ???
 80aa349:  insd
 80aa34a:  add al, BYTE PTR [eax]
 80aa34c:  ???
 80aa34d:  insd
 80aa34e:  add al, BYTE PTR [eax]
 80aa350:  ???
 80aa351:  insd
 80aa352:  add al, BYTE PTR [eax]
 80aa354:  ???
 80aa355:  insd
 80aa356:  add al, BYTE PTR [eax]
 80aa358:  ???
 80aa359:  insd
 80aa35a:  add al, BYTE PTR [eax]
 80aa35c:  ???
 80aa35d:  insd
 80aa35e:  add al, BYTE PTR [eax]
 80aa360:  ???
 80aa361:  insd
 80aa362:  add al, BYTE PTR [eax]
 80aa364:  ???
 80aa365:  insd
 80aa366:  add al, BYTE PTR [eax]
 80aa368:  ???
 80aa369:  insd
 80aa36a:  add al, BYTE PTR [eax]
 80aa36c:  ???
 80aa36d:  insd
 80aa36e:  add al, BYTE PTR [eax]
 80aa370:  ???
 80aa371:  insd
 80aa372:  add al, BYTE PTR [eax]
 80aa374:  ???
 80aa375:  insd
 80aa376:  add al, BYTE PTR [eax]
 80aa378:  ???
 80aa379:  insd
 80aa37a:  add al, BYTE PTR [eax]
 80aa37c:  ???
 80aa37d:  insd
 80aa37e:  add al, BYTE PTR [eax]
 80aa380:  ???
 80aa381:  insd
 80aa382:  add al, BYTE PTR [eax]
 80aa384:  ???
 80aa385:  insd
 80aa386:  add al, BYTE PTR [eax]
 80aa388:  ???
 80aa389:  insd
 80aa38a:  add al, BYTE PTR [eax]
 80aa38c:  ???
 80aa38d:  insd
 80aa38e:  add al, BYTE PTR [eax]
 80aa390:  ???
 80aa391:  insd
 80aa392:  add al, BYTE PTR [eax]
 80aa394:  ???
 80aa395:  insd
 80aa396:  add al, BYTE PTR [eax]
 80aa398:  ???
 80aa399:  insd
 80aa39a:  add al, BYTE PTR [eax]
 80aa39c:  ???
 80aa39d:  insd
 80aa39e:  add al, BYTE PTR [eax]
 80aa3a0:  pop esp
 80aa3a1:  ???
 80aa3a2:  add al, BYTE PTR [eax]
 80aa3a4:  lea esi, [esi]
 80aa3a8:  mov ebp, DWORD PTR [eax+0x1]
 80aa3ab:  add eax, 0x5
 80aa3ae:  xchg ax, ax
 80aa3b0:  cmp edi, 0x3f
 80aa3b3:  ja 80a9fcd
 80aa3b9:  mov DWORD PTR [esp+edi*4+0x24], ebp
 80aa3bd:  add edi, 0x1
 80aa3c0:  cmp DWORD PTR [esp+0x18], eax
 80aa3c4:  ja 80a9fb8
 80aa3ca:  test edi, edi
 80aa3cc:  je 80a9fcd
 80aa3d2:  mov edx, DWORD PTR [esp+edi*4+0x20]
 80aa3d6:  add esp, 0x13c
 80aa3dc:  mov eax, edx
 80aa3de:  pop ebx
 80aa3df:  pop esi
 80aa3e0:  pop edi
 80aa3e1:  pop ebp
 80aa3e2:  ret
 80aa3e3:  nop
 80aa3e4:  lea esi, [esi]
 80aa3e8:  mov ebp, DWORD PTR [eax+0x1]
 80aa3eb:  add eax, 0x9
 80aa3ee:  jmp 80aa3b0
 80aa3f0:  xor ebp, ebp
 80aa3f2:  xor ecx, ecx
 80aa3f4:  lea esi, [esi]
 80aa3f8:  movzx edx, BYTE PTR [esi]
 80aa3fb:  add esi, 0x1
 80aa3fe:  mov eax, edx
 80aa400:  and eax, 0x7f
 80aa403:  shl eax, cl
 80aa405:  add ecx, 0x7
 80aa408:  or ebp, eax
 80aa40a:  test dl, dl
 80aa40c:  js 80aa3f8
 80aa40e:  lea edx, [esp+0x124]
 80aa415:  mov eax, esi
 80aa417:  call 80a94a0
 80aa41c:  cmp ebp, 0x11
 80aa41f:  jg 80a9fcd
 80aa425:  mov esi, DWORD PTR [esp+0x150]
 80aa42c:  movzx edx, BYTE PTR [ebx+ebp+0x1f58]
 80aa434:  test BYTE PTR [esi+0x63], 0x40
 80aa438:  mov ecx, DWORD PTR [esi+ebp*4]
 80aa43b:  je 80aa444
 80aa43d:  cmp BYTE PTR [esi+ebp+0x6c], 0x0
 80aa442:  jne 80aa44f
 80aa444:  cmp dl, 0x4
 80aa447:  jne 80a9fcd
 80aa44d:  mov ecx, DWORD PTR [ecx]
 80aa44f:  mov ebp, ecx
 80aa451:  add ebp, DWORD PTR [esp+0x124]
 80aa458:  jmp 80aa3b0
 80aa45d:  lea esi, [esi]
 80aa460:  lea edx, [esp+0x128]
 80aa467:  mov eax, esi
 80aa469:  call 80a94a0
 80aa46e:  mov ebp, DWORD PTR [esp+0x128]
 80aa475:  jmp 80aa3b0
 80aa47a:  lea esi, [esi]
 80aa480:  xor ebp, ebp
 80aa482:  xor ecx, ecx
 80aa484:  lea esi, [esi]
 80aa488:  movzx edx, BYTE PTR [esi]
 80aa48b:  add esi, 0x1
 80aa48e:  mov eax, edx
 80aa490:  and eax, 0x7f
 80aa493:  shl eax, cl
 80aa495:  add ecx, 0x7
 80aa498:  or ebp, eax
 80aa49a:  test dl, dl
 80aa49c:  js 80aa488
 80aa49e:  mov eax, esi
 80aa4a0:  jmp 80aa3b0
 80aa4a5:  lea esi, [esi]
 80aa4a8:  movzx edx, BYTE PTR [eax+0x1]
 80aa4ac:  lea ecx, [edi-0x1]
 80aa4af:  cmp edx, ecx
 80aa4b1:  mov DWORD PTR [esp+0x124], edx
 80aa4b8:  jge 80a9fcd
 80aa4be:  sub ecx, edx
 80aa4c0:  add eax, 0x2
 80aa4c3:  mov ebp, DWORD PTR [esp+ecx*4+0x24]
 80aa4c7:  jmp 80aa3b0
 80aa4cc:  lea esi, [esi]
 80aa4d0:  cmp edi, 0x1
 80aa4d3:  jle 80a9fcd
 80aa4d9:  mov ebp, DWORD PTR [esp+edi*4+0x1c]
 80aa4dd:  mov eax, esi
 80aa4df:  jmp 80aa3b0
 80aa4e4:  lea esi, [esi]
 80aa4e8:  test edi, edi
 80aa4ea:  je 80a9fcd
 80aa4f0:  sub edi, 0x1
 80aa4f3:  mov eax, esi
 80aa4f5:  jmp 80aa3c0
 80aa4fa:  lea esi, [esi]
 80aa500:  test edi, edi
 80aa502:  je 80a9fcd
 80aa508:  mov ebp, DWORD PTR [esp+edi*4+0x20]
 80aa50c:  mov eax, esi
 80aa50e:  jmp 80aa3b0
 80aa513:  nop
 80aa514:  lea esi, [esi]
 80aa518:  mov eax, esi
 80aa51a:  jmp 80aa3c0
 80aa51f:  nop
 80aa520:  movsx ebp, WORD PTR [eax+0x1]
 80aa524:  add eax, 0x3
 80aa527:  jmp 80aa3b0
 80aa52c:  lea esi, [esi]
 80aa530:  movzx ebp, WORD PTR [eax+0x1]
 80aa534:  add eax, 0x3
 80aa537:  jmp 80aa3b0
 80aa53c:  lea esi, [esi]
 80aa540:  movsx ebp, BYTE PTR [eax+0x1]
 80aa544:  add eax, 0x2
 80aa547:  jmp 80aa3b0
 80aa54c:  lea esi, [esi]
 80aa550:  movzx ebp, BYTE PTR [eax+0x1]
 80aa554:  add eax, 0x2
 80aa557:  jmp 80aa3b0
 80aa55c:  lea esi, [esi]
 80aa560:  test edi, edi
 80aa562:  je 80a9fcd
 80aa568:  sub edi, 0x1
 80aa56b:  cmp dl, 0x1f
 80aa56e:  mov ebp, DWORD PTR [esp+edi*4+0x24]
 80aa572:  je 80aa89e
 80aa578:  jbe 80aa848
 80aa57e:  cmp dl, 0x23
 80aa581:  je 80aa8f1
 80aa587:  cmp dl, 0x94
 80aa58a:  je 80aa8c9
 80aa590:  cmp dl, 0x20
 80aa593:  jne 80a9fcd
 80aa599:  not ebp
 80aa59b:  mov eax, esi
 80aa59d:  jmp 80aa3b0
 80aa5a2:  lea esi, [esi]
 80aa5a8:  movzx edx, BYTE PTR [eax+0x1]
 80aa5ac:  cmp dl, 0xff
 80aa5af:  movzx ecx, dl
 80aa5b2:  je 80aa878
 80aa5b8:  mov edx, ecx
 80aa5ba:  and edx, 0x70
 80aa5bd:  cmp edx, 0x20
 80aa5c0:  je 80aa8a7
 80aa5c6:  jle 80aa868
 80aa5cc:  cmp edx, 0x40
 80aa5cf:  je 80aa8b3
 80aa5d5:  cmp edx, 0x50
 80aa5d8:  je 80aa878
 80aa5de:  cmp edx, 0x30
 80aa5e1:  jne 80a9fcd
 80aa5e7:  mov ebp, DWORD PTR [esp+0x150]
 80aa5ee:  mov edx, DWORD PTR [ebp+0x58]
 80aa5f1:  jmp 80aa87a
 80aa5f6:  xchg ax, ax
 80aa5f8:  xor edx, edx
 80aa5fa:  mov ebp, edi
 80aa5fc:  xor ecx, ecx
 80aa5fe:  mov edi, edx
 80aa600:  movzx edx, BYTE PTR [esi]
 80aa603:  add esi, 0x1
 80aa606:  mov eax, edx
 80aa608:  and eax, 0x7f
 80aa60b:  shl eax, cl
 80aa60d:  add ecx, 0x7
 80aa610:  or edi, eax
 80aa612:  test dl, dl
 80aa614:  js 80aa600
 80aa616:  mov edx, edi
 80aa618:  mov edi, ebp
 80aa61a:  cmp edx, 0x11
 80aa61d:  jg 80a9fcd
 80aa623:  mov ecx, DWORD PTR [esp+0x150]
 80aa62a:  movzx eax, BYTE PTR [ebx+edx+0x1f58]
 80aa632:  test BYTE PTR [ecx+0x63], 0x40
 80aa636:  mov ebp, DWORD PTR [ecx+edx*4]
 80aa639:  je 80aa646
 80aa63b:  cmp BYTE PTR [ecx+edx+0x6c], 0x0
 80aa640:  jne 80aa49e
 80aa646:  cmp al, 0x4
 80aa648:  jne 80a9fcd
 80aa64e:  mov ebp, DWORD PTR [ebp]
 80aa651:  mov eax, esi
 80aa653:  jmp 80aa3b0
 80aa658:  lea edx, [esp+0x124]
 80aa65f:  mov eax, esi
 80aa661:  call 80a94a0
 80aa666:  mov edx, DWORD PTR [esp+0x14]
 80aa66a:  sub edx, 0x70
 80aa66d:  cmp edx, 0x11
 80aa670:  jg 80a9fcd
 80aa676:  mov esi, DWORD PTR [esp+0x14]
 80aa67a:  movzx ecx, BYTE PTR [ebx+esi+0x1ee8]
 80aa682:  mov esi, DWORD PTR [esp+0x150]
 80aa689:  test BYTE PTR [esi+0x63], 0x40
 80aa68d:  mov ebp, DWORD PTR [esi+edx*4]
 80aa690:  je 80aa69d
 80aa692:  cmp BYTE PTR [esi+edx+0x6c], 0x0
 80aa697:  jne 80aa451
 80aa69d:  cmp cl, 0x4
 80aa6a0:  jne 80a9fcd
 80aa6a6:  mov ebp, DWORD PTR [ebp]
 80aa6a9:  jmp 80aa451
 80aa6ae:  xchg ax, ax
 80aa6b0:  mov eax, DWORD PTR [esp+0x14]
 80aa6b4:  sub eax, 0x50
 80aa6b7:  cmp eax, 0x11
 80aa6ba:  jg 80a9fcd
 80aa6c0:  mov ecx, DWORD PTR [esp+0x150]
 80aa6c7:  mov ebp, DWORD PTR [esp+0x14]
 80aa6cb:  test BYTE PTR [ecx+0x63], 0x40
 80aa6cf:  movzx edx, BYTE PTR [ebx+ebp+0x1f08]
 80aa6d7:  mov ebp, DWORD PTR [ecx+eax*4]
 80aa6da:  je 80aa6e7
 80aa6dc:  cmp BYTE PTR [ecx+eax+0x6c], 0x0
 80aa6e1:  jne 80aa49e
 80aa6e7:  cmp dl, 0x4
 80aa6ea:  jne 80a9fcd
 80aa6f0:  jmp 80aa64e
 80aa6f5:  lea esi, [esi]
 80aa6f8:  mov ebp, DWORD PTR [esp+0x14]
 80aa6fc:  mov eax, esi
 80aa6fe:  sub ebp, 0x30
 80aa701:  jmp 80aa3b0
 80aa706:  xchg ax, ax
 80aa708:  movsx edx, WORD PTR [eax+0x1]
 80aa70c:  mov DWORD PTR [esp+0x124], edx
 80aa713:  lea eax, [eax+edx+0x3]
 80aa717:  jmp 80aa3c0
 80aa71c:  lea esi, [esi]
 80aa720:  test edi, edi
 80aa722:  je 80a9fcd
 80aa728:  sub edi, 0x1
 80aa72b:  movsx edx, WORD PTR [eax+0x1]
 80aa72f:  add eax, 0x3
 80aa732:  mov ecx, DWORD PTR [esp+edi*4+0x24]
 80aa736:  mov DWORD PTR [esp+0x124], edx
 80aa73d:  add edx, eax
 80aa73f:  test ecx, ecx
 80aa741:  cmovne eax, edx
 80aa744:  jmp 80aa3c0
 80aa749:  lea esi, [esi]
 80aa750:  cmp edi, 0x1
 80aa753:  jle 80a9fcd
 80aa759:  sub edx, 0x1a
 80aa75c:  mov ecx, DWORD PTR [esp+edi*4+0x20]
 80aa760:  lea ebp, [edi-0x2]
 80aa763:  cmp dl, 0x14
 80aa766:  mov DWORD PTR [esp+0x1c], ebp
 80aa76a:  mov ebp, DWORD PTR [esp+ebp*4+0x24]
 80aa76e:  ja 80a9fcd
 80aa774:  movzx edx, dl
 80aa777:  mov eax, ebx
 80aa779:  sub eax, DWORD PTR [ebx+edx*4-0x26580]
 80aa780:  jmp eax
 80aa782:  xchg ax, ax
 80aa784:  adc DWORD PTR [ebx+0x2], esp
 80aa787:  add BYTE PTR [ebp+0x63], dl
 80aa78a:  add al, BYTE PTR [eax]
 80aa78c:  ???
 80aa78d:  ???
 80aa78e:  add al, BYTE PTR [eax]
 80aa790:  xor ah, BYTE PTR [ebx+0x2]
 80aa793:  add BYTE PTR [edi], bl
 80aa795:  ???
 80aa796:  add al, BYTE PTR [eax]
 80aa798:  ???
 80aa799:  insd
 80aa79a:  add al, BYTE PTR [eax]
 80aa79c:  ???
 80aa79d:  insd
 80aa79e:  add al, BYTE PTR [eax]
 80aa7a0:  ???
 80aa7a1:  ???
 80aa7a2:  add al, BYTE PTR [eax]
 80aa7a4:  mov esi, 0x37000263
 80aa7a9:  insd
 80aa7aa:  add al, BYTE PTR [eax]
 80aa7ac:  mov cl, 0x63
 80aa7ae:  add al, BYTE PTR [eax]
 80aa7b0:  movsb
 80aa7b1:  ???
 80aa7b2:  add al, BYTE PTR [eax]
 80aa7b4:  xchg edi, eax
 80aa7b5:  ???
 80aa7b6:  add al, BYTE PTR [eax]
 80aa7b8:  mov ah, BYTE PTR [ebx+0x2]
 80aa7bb:  add BYTE PTR [edi], dh
 80aa7bd:  insd
 80aa7be:  add al, BYTE PTR [eax]
 80aa7c0:  jge 80aa825
 80aa7c2:  add al, BYTE PTR [eax]
 80aa7c4:  imul esp, DWORD PTR [ebx+0x2], 0x2630400
 80aa7cb:  add al, dh
 80aa7cd:  ???
 80aa7ce:  add al, BYTE PTR [eax]
 80aa7d0:  ???
 80aa7d1:  ???
 80aa7d2:  add al, BYTE PTR [eax]
 80aa7d4:  ???
 80aa7d5:  ???
 80aa7d6:  add al, BYTE PTR [eax]
 80aa7d8:  cmp edi, 0x2
 80aa7db:  jle 80a9fcd
 80aa7e1:  lea ecx, [edi-0x1]
 80aa7e4:  mov ebp, DWORD PTR [esp+ecx*4+0x24]
 80aa7e8:  lea eax, [edi-0x3]
 80aa7eb:  lea edx, [edi-0x2]
 80aa7ee:  mov DWORD PTR [esp+0x1c], ebp
 80aa7f2:  mov ebp, DWORD PTR [esp+eax*4+0x24]
 80aa7f6:  mov DWORD PTR [esp+0x14], ebp
 80aa7fa:  mov ebp, DWORD PTR [esp+edx*4+0x24]
 80aa7fe:  mov DWORD PTR [esp+ecx*4+0x24], ebp
 80aa802:  mov ecx, DWORD PTR [esp+0x14]
 80aa806:  mov ebp, DWORD PTR [esp+0x1c]
 80aa80a:  mov DWORD PTR [esp+edx*4+0x24], ecx
 80aa80e:  mov DWORD PTR [esp+eax*4+0x24], ebp
 80aa812:  mov eax, esi
 80aa814:  jmp 80aa3c0
 80aa819:  lea esi, [esi]
 80aa820:  cmp edi, 0x1
 80aa823:  jle 80a9fcd
 80aa829:  lea eax, [edi-0x2]
 80aa82c:  lea edx, [edi-0x1]
 80aa82f:  mov ebp, DWORD PTR [esp+eax*4+0x24]
 80aa833:  mov ecx, DWORD PTR [esp+edx*4+0x24]
 80aa837:  mov DWORD PTR [esp+edx*4+0x24], ebp
 80aa83b:  mov DWORD PTR [esp+eax*4+0x24], ecx
 80aa83f:  mov eax, esi
 80aa841:  jmp 80aa3c0
 80aa846:  xchg ax, ax
 80aa848:  cmp dl, 0x6
 80aa84b:  je 80aa8bf
 80aa84d:  cmp dl, 0x19
 80aa850:  jne 80a9fcd
 80aa856:  mov edx, ebp
 80aa858:  mov eax, esi
 80aa85a:  sar edx, 0x1f
 80aa85d:  xor ebp, edx
 80aa85f:  sub ebp, edx
 80aa861:  jmp 80aa3b0
 80aa866:  xchg ax, ax
 80aa868:  test edx, edx
 80aa86a:  je 80aa878
 80aa86c:  cmp edx, 0x10
 80aa86f:  jne 80a9fcd
 80aa875:  lea esi, [esi]
 80aa878:  xor edx, edx
 80aa87a:  add eax, 0x2
 80aa87d:  mov DWORD PTR [esp], eax
 80aa880:  lea esi, [esp+0x12c]
 80aa887:  mov eax, ecx
 80aa889:  mov DWORD PTR [esp+0x4], esi
 80aa88d:  call 80a94f0
 80aa892:  mov ebp, DWORD PTR [esp+0x12c]
 80aa899:  jmp 80aa3b0
 80aa89e:  neg ebp
 80aa8a0:  mov eax, esi
 80aa8a2:  jmp 80aa3b0
 80aa8a7:  mov esi, DWORD PTR [esp+0x150]
 80aa8ae:  mov edx, DWORD PTR [esi+0x54]
 80aa8b1:  jmp 80aa87a
 80aa8b3:  mov esi, DWORD PTR [esp+0x150]
 80aa8ba:  mov edx, DWORD PTR [esi+0x5c]
 80aa8bd:  jmp 80aa87a
 80aa8bf:  mov ebp, DWORD PTR [ebp]
 80aa8c2:  mov eax, esi
 80aa8c4:  jmp 80aa3b0
 80aa8c9:  movzx edx, BYTE PTR [eax+0x1]
 80aa8cd:  add eax, 0x2
 80aa8d0:  cmp dl, 0x2
 80aa8d3:  je 80aaa52
 80aa8d9:  jbe 80aa927
 80aa8db:  cmp dl, 0x4
 80aa8de:  je 80aa8e9
 80aa8e0:  cmp dl, 0x8
 80aa8e3:  jne 80a9fcd
 80aa8e9:  mov ebp, DWORD PTR [ebp]
 80aa8ec:  jmp 80aa3b0
 80aa8f1:  xor edx, edx
 80aa8f3:  xor ecx, ecx
 80aa8f5:  mov DWORD PTR [esp+0x1c], ebp
 80aa8f9:  mov ebp, edi
 80aa8fb:  mov edi, edx
 80aa8fd:  lea esi, [esi]
 80aa900:  movzx edx, BYTE PTR [esi]
 80aa903:  add esi, 0x1
 80aa906:  mov eax, edx
 80aa908:  and eax, 0x7f
 80aa90b:  shl eax, cl
 80aa90d:  add ecx, 0x7
 80aa910:  or edi, eax
 80aa912:  test dl, dl
 80aa914:  js 80aa900
 80aa916:  mov edx, edi
 80aa918:  mov edi, ebp
 80aa91a:  mov ebp, DWORD PTR [esp+0x1c]
 80aa91e:  mov eax, esi
 80aa920:  add ebp, edx
 80aa922:  jmp 80aa3b0
 80aa927:  cmp dl, 0x1
 80aa92a:  jne 80a9fcd
 80aa930:  movzx ebp, BYTE PTR [ebp]
 80aa934:  jmp 80aa3b0
 80aa939:  or ebp, ecx
 80aa93b:  mov edi, DWORD PTR [esp+0x1c]
 80aa93f:  mov eax, esi
 80aa941:  jmp 80aa3b0
 80aa946:  add ebp, ecx
 80aa948:  mov edi, DWORD PTR [esp+0x1c]
 80aa94c:  mov eax, esi
 80aa94e:  jmp 80aa3b0
 80aa953:  shl ebp, cl
 80aa955:  mov edi, DWORD PTR [esp+0x1c]
 80aa959:  mov eax, esi
 80aa95b:  jmp 80aa3b0
 80aa960:  shr ebp, cl
 80aa962:  mov edi, DWORD PTR [esp+0x1c]
 80aa966:  mov eax, esi
 80aa968:  jmp 80aa3b0
 80aa96d:  sar ebp, cl
 80aa96f:  mov edi, DWORD PTR [esp+0x1c]
 80aa973:  mov eax, esi
 80aa975:  jmp 80aa3b0
 80aa97a:  xor ebp, ecx
 80aa97c:  mov edi, DWORD PTR [esp+0x1c]
 80aa980:  mov eax, esi
 80aa982:  jmp 80aa3b0
 80aa987:  xor edx, edx
 80aa989:  cmp ebp, ecx
 80aa98b:  mov edi, DWORD PTR [esp+0x1c]
 80aa98f:  sete dl
 80aa992:  mov eax, esi
 80aa994:  mov ebp, edx
 80aa996:  jmp 80aa3b0
 80aa99b:  xor eax, eax
 80aa99d:  cmp ebp, ecx
 80aa99f:  mov edi, DWORD PTR [esp+0x1c]
 80aa9a3:  setge al
 80aa9a6:  mov ebp, eax
 80aa9a8:  mov eax, esi
 80aa9aa:  jmp 80aa3b0
 80aa9af:  mov edx, ebp
 80aa9b1:  mov eax, ebp
 80aa9b3:  mov edi, DWORD PTR [esp+0x1c]
 80aa9b7:  sar edx, 0x1f
 80aa9ba:  idiv ecx
 80aa9bc:  mov ebp, eax
 80aa9be:  mov eax, esi
 80aa9c0:  jmp 80aa3b0
 80aa9c5:  sub ebp, ecx
 80aa9c7:  mov edi, DWORD PTR [esp+0x1c]
 80aa9cb:  mov eax, esi
 80aa9cd:  jmp 80aa3b0
 80aa9d2:  mov eax, ebp
 80aa9d4:  xor edx, edx
 80aa9d6:  mov edi, DWORD PTR [esp+0x1c]
 80aa9da:  div ecx
 80aa9dc:  mov eax, esi
 80aa9de:  mov ebp, edx
 80aa9e0:  jmp 80aa3b0
 80aa9e5:  imul ebp, ecx
 80aa9e8:  mov edi, DWORD PTR [esp+0x1c]
 80aa9ec:  mov eax, esi
 80aa9ee:  jmp 80aa3b0
 80aa9f3:  and ebp, ecx
 80aa9f5:  mov edi, DWORD PTR [esp+0x1c]
 80aa9f9:  mov eax, esi
 80aa9fb:  jmp 80aa3b0
 80aaa00:  xor eax, eax
 80aaa02:  cmp ebp, ecx
 80aaa04:  mov edi, DWORD PTR [esp+0x1c]
 80aaa08:  setg al
 80aaa0b:  mov ebp, eax
 80aaa0d:  mov eax, esi
 80aaa0f:  jmp 80aa3b0
 80aaa14:  cmp ebp, ecx
 80aaa16:  mov edi, DWORD PTR [esp+0x1c]
 80aaa1a:  mov eax, esi
 80aaa1c:  setle cl
 80aaa1f:  movzx ecx, cl
 80aaa22:  mov ebp, ecx
 80aaa24:  jmp 80aa3b0
 80aaa29:  cmp ebp, ecx
 80aaa2b:  mov edi, DWORD PTR [esp+0x1c]
 80aaa2f:  mov eax, esi
 80aaa31:  setl cl
 80aaa34:  movzx ecx, cl
 80aaa37:  mov ebp, ecx
 80aaa39:  jmp 80aa3b0
 80aaa3e:  xor edx, edx
 80aaa40:  cmp ebp, ecx
 80aaa42:  mov edi, DWORD PTR [esp+0x1c]
 80aaa46:  setne dl
 80aaa49:  mov eax, esi
 80aaa4b:  mov ebp, edx
 80aaa4d:  jmp 80aa3b0
 80aaa52:  movzx ebp, WORD PTR [ebp]
 80aaa56:  jmp 80aa3b0
 80aaa5b:  nop
 80aaa5c:  lea esi, [esi]

080aaa60 <uw_update_context_1>:
 80aaa60:  push ebp
 80aaa61:  mov ecx, 0x20
 80aaa66:  push edi
 80aaa67:  push esi
 80aaa68:  push ebx
 80aaa69:  sub esp, 0xcc
 80aaa6f:  mov DWORD PTR [esp+0x20], eax
 80aaa73:  lea eax, [esp+0x3c]
 80aaa77:  mov esi, DWORD PTR [esp+0x20]
 80aaa7b:  mov DWORD PTR [esp+0x1c], eax
 80aaa7f:  mov edi, eax
 80aaa81:  mov DWORD PTR [esp+0x2c], edx
 80aaa85:  rep movsd
 80aaa87:  call 80ac0a5
 80aaa8c:  add ebx, 0x26278
 80aaa92:  mov eax, DWORD PTR [esp+0x9c]
 80aaa99:  test eax, 0x40000000
 80aaa9e:  je 80aaae8
 80aaaa0:  cmp BYTE PTR [esp+0xac], 0x0
 80aaaa8:  lea edx, [esp+0x4c]
 80aaaac:  je 80aaae8
 80aaaae:  test edx, edx
 80aaab0:  je 80aadea
 80aaab6:  mov edx, DWORD PTR [esp+0x20]
 80aaaba:  test BYTE PTR [edx+0x63], 0x40
 80aaabe:  je 80aaac4
 80aaac0:  mov BYTE PTR [edx+0x70], 0x0
 80aaac4:  mov ecx, DWORD PTR [esp+0x20]
 80aaac8:  mov DWORD PTR [ecx+0x10], 0x0
 80aaacf:  mov ecx, DWORD PTR [esp+0x2c]
 80aaad3:  mov edx, DWORD PTR [ecx+0xa0]
 80aaad9:  cmp edx, 0x1
 80aaadc:  je 80aaaf0
 80aaade:  cmp edx, 0x2
 80aaae1:  je 80aab40
 80aaae3:  call 8055a00
 80aaae8:  mov edx, DWORD PTR [esp+0x4c]
 80aaaec:  jmp 80aaaae
 80aaaee:  xchg ax, ax
 80aaaf0:  mov ecx, DWORD PTR [esp+0x2c]
 80aaaf4:  mov edx, DWORD PTR [ecx+0x98]
 80aaafa:  cmp edx, 0x11
 80aaafd:  jg 80aaae3
 80aaaff:  test eax, 0x40000000
 80aab04:  movzx esi, BYTE PTR [ebx+edx+0x1f58]
 80aab0c:  mov ecx, DWORD PTR [esp+edx*4+0x3c]
 80aab10:  je 80aab30
 80aab12:  cmp BYTE PTR [esp+edx+0xa8], 0x0
 80aab1a:  je 80aab30
 80aab1c:  mov edx, DWORD PTR [esp+0x2c]
 80aab20:  add ecx, DWORD PTR [edx+0x94]
 80aab26:  mov DWORD PTR [esp+0x24], ecx
 80aab2a:  jmp 80aab83
 80aab2c:  lea esi, [esi]
 80aab30:  mov eax, esi
 80aab32:  cmp al, 0x4
 80aab34:  jne 80aaae3
 80aab36:  mov ecx, DWORD PTR [ecx]
 80aab38:  jmp 80aab1c
 80aab3a:  lea esi, [esi]
 80aab40:  mov edx, DWORD PTR [esp+0x2c]
 80aab44:  xor esi, esi
 80aab46:  xor ecx, ecx
 80aab48:  mov edi, DWORD PTR [edx+0x9c]
 80aab4e:  xchg ax, ax
 80aab50:  movzx edx, BYTE PTR [edi]
 80aab53:  add edi, 0x1
 80aab56:  mov eax, edx
 80aab58:  and eax, 0x7f
 80aab5b:  shl eax, cl
 80aab5d:  add ecx, 0x7
 80aab60:  or esi, eax
 80aab62:  test dl, dl
 80aab64:  js 80aab50
 80aab66:  lea ecx, [esp+0x3c]
 80aab6a:  mov eax, edi
 80aab6c:  lea edx, [edi+esi]
 80aab6f:  mov DWORD PTR [esp+0x4], 0x0
 80aab77:  mov DWORD PTR [esp], ecx
 80aab7a:  call 80a9f80
 80aab7f:  mov DWORD PTR [esp+0x24], eax
 80aab83:  mov edx, DWORD PTR [esp+0x24]
 80aab87:  xor edi, edi
 80aab89:  mov eax, DWORD PTR [esp+0x20]
 80aab8d:  mov esi, DWORD PTR [esp+0x2c]
 80aab91:  mov DWORD PTR [eax+0x48], edx
 80aab94:  add esi, 0x4
 80aab97:  nop
 80aab98:  cmp DWORD PTR [esi], 0x5
 80aab9b:  ja 80aabf8
 80aab9d:  mov eax, DWORD PTR [esi]
 80aab9f:  mov ecx, ebx
 80aaba1:  sub ecx, DWORD PTR [ebx+eax*4-0x26158]
 80aaba8:  jmp ecx
 80aabaa:  xchg ax, ax
 80aabac:  or al, 0x61
 80aabae:  add al, BYTE PTR [eax]
 80aabb0:  sbb al, 0x60
 80aabb2:  add al, BYTE PTR [eax]
 80aabb4:  cmp al, 0x61
 80aabb6:  add al, BYTE PTR [eax]
 80aabb8:  mov DWORD PTR [eax+0x2], fs
 80aabbb:  add ah, al
 80aabbd:  ???
 80aabbe:  add al, BYTE PTR [eax]
 80aabc0:  add al, 0x60
 80aabc2:  add al, BYTE PTR [eax]
 80aabc4:  lea esi, [esi]
 80aabc8:  mov eax, DWORD PTR [esi-0x4]
 80aabcb:  cmp BYTE PTR [esp+eax+0xa8], 0x0
 80aabd3:  jne 80aad78
 80aabd9:  mov ecx, DWORD PTR [esp+0x20]
 80aabdd:  mov eax, DWORD PTR [esp+eax*4+0x3c]
 80aabe1:  test BYTE PTR [ecx+0x63], 0x40
 80aabe5:  je 80aabec
 80aabe7:  mov BYTE PTR [ecx+edi+0x6c], 0x0
 80aabec:  mov edx, DWORD PTR [esp+0x20]
 80aabf0:  mov DWORD PTR [edx+edi*4], eax
 80aabf3:  nop
 80aabf4:  lea esi, [esi]
 80aabf8:  add edi, 0x1
 80aabfb:  add esi, 0x8
 80aabfe:  cmp edi, 0x12
 80aac01:  jne 80aab98
 80aac03:  mov edx, DWORD PTR [esp+0x2c]
 80aac07:  cmp BYTE PTR [edx+0xbb], 0x0
 80aac0e:  je 80aada8
 80aac14:  mov edx, DWORD PTR [esp+0x20]
 80aac18:  mov ecx, DWORD PTR [esp+0x20]
 80aac1c:  mov eax, DWORD PTR [edx+0x4c]
 80aac1f:  or DWORD PTR [ecx+0x60], 0x80000000
 80aac26:  cmp BYTE PTR [eax], 0xb8
 80aac29:  je 80aadc3
 80aac2f:  add esp, 0xcc
 80aac35:  pop ebx
 80aac36:  pop esi
 80aac37:  pop edi
 80aac38:  pop ebp
 80aac39:  ret
 80aac3a:  lea esi, [esi]
 80aac40:  cmp BYTE PTR [edi+ebx+0x1f58], 0x4
 80aac48:  mov eax, DWORD PTR [esi-0x4]
 80aac4b:  jne 80aaae3
 80aac51:  mov edx, DWORD PTR [esp+0x20]
 80aac55:  add esi, 0x8
 80aac58:  add eax, DWORD PTR [esp+0x24]
 80aac5c:  mov BYTE PTR [edx+edi+0x6c], 0x1
 80aac61:  mov DWORD PTR [edx+edi*4], eax
 80aac64:  add edi, 0x1
 80aac67:  cmp edi, 0x12
 80aac6a:  jne 80aab98
 80aac70:  jmp 80aac03
 80aac72:  lea esi, [esi]
 80aac78:  mov eax, DWORD PTR [esi-0x4]
 80aac7b:  xor ebp, ebp
 80aac7d:  xor ecx, ecx
 80aac7f:  mov DWORD PTR [esp+0x28], esi
 80aac83:  mov esi, eax
 80aac85:  lea esi, [esi]
 80aac88:  movzx eax, BYTE PTR [esi]
 80aac8b:  add esi, 0x1
 80aac8e:  mov edx, eax
 80aac90:  and edx, 0x7f
 80aac93:  shl edx, cl
 80aac95:  add ecx, 0x7
 80aac98:  or ebp, edx
 80aac9a:  test al, al
 80aac9c:  js 80aac88
 80aac9e:  mov ecx, DWORD PTR [esp+0x24]
 80aaca2:  mov eax, esi
 80aaca4:  lea edx, [eax+ebp]
 80aaca7:  mov esi, DWORD PTR [esp+0x28]
 80aacab:  mov DWORD PTR [esp+0x4], ecx
 80aacaf:  lea ecx, [esp+0x3c]
 80aacb3:  mov DWORD PTR [esp], ecx
 80aacb6:  call 80a9f80
 80aacbb:  mov edx, DWORD PTR [esp+0x20]
 80aacbf:  test BYTE PTR [edx+0x63], 0x40
 80aacc3:  je 80aacca
 80aacc5:  mov BYTE PTR [edx+edi+0x6c], 0x0
 80aacca:  mov ecx, DWORD PTR [esp+0x20]
 80aacce:  add esi, 0x8
 80aacd1:  mov DWORD PTR [ecx+edi*4], eax
 80aacd4:  add edi, 0x1
 80aacd7:  cmp edi, 0x12
 80aacda:  jne 80aab98
 80aace0:  jmp 80aac03
 80aace5:  lea esi, [esi]
 80aace8:  mov edx, DWORD PTR [esp+0x20]
 80aacec:  mov eax, DWORD PTR [esp+0x24]
 80aacf0:  add eax, DWORD PTR [esi-0x4]
 80aacf3:  test BYTE PTR [edx+0x63], 0x40
 80aacf7:  je 80aacca
 80aacf9:  jmp 80aacc5
 80aacfb:  nop
 80aacfc:  lea esi, [esi]
 80aad00:  mov eax, DWORD PTR [esi-0x4]
 80aad03:  xor ebp, ebp
 80aad05:  xor ecx, ecx
 80aad07:  mov DWORD PTR [esp+0x28], esi
 80aad0b:  mov esi, eax
 80aad0d:  lea esi, [esi]
 80aad10:  movzx eax, BYTE PTR [esi]
 80aad13:  add esi, 0x1
 80aad16:  mov edx, eax
 80aad18:  and edx, 0x7f
 80aad1b:  shl edx, cl
 80aad1d:  add ecx, 0x7
 80aad20:  or ebp, edx
 80aad22:  test al, al
 80aad24:  js 80aad10
 80aad26:  mov ecx, DWORD PTR [esp+0x24]
 80aad2a:  mov eax, esi
 80aad2c:  lea edx, [eax+ebp]
 80aad2f:  mov esi, DWORD PTR [esp+0x28]
 80aad33:  mov DWORD PTR [esp+0x4], ecx
 80aad37:  lea ecx, [esp+0x3c]
 80aad3b:  mov DWORD PTR [esp], ecx
 80aad3e:  call 80a9f80
 80aad43:  cmp BYTE PTR [edi+ebx+0x1f58], 0x4
 80aad4b:  jne 80aaae3
 80aad51:  mov edx, DWORD PTR [esp+0x20]
 80aad55:  add esi, 0x8
 80aad58:  mov BYTE PTR [edx+edi+0x6c], 0x1
 80aad5d:  mov DWORD PTR [edx+edi*4], eax
 80aad60:  add edi, 0x1
 80aad63:  cmp edi, 0x12
 80aad66:  jne 80aab98
 80aad6c:  jmp 80aac03
 80aad71:  lea esi, [esi]
 80aad78:  cmp eax, 0x11
 80aad7b:  jg 80aaae3
 80aad81:  test BYTE PTR [esp+0x9f], 0x40
 80aad89:  movzx edx, BYTE PTR [ebx+eax+0x1f58]
 80aad91:  mov eax, DWORD PTR [esp+eax*4+0x3c]
 80aad95:  jne 80aad43
 80aad97:  cmp dl, 0x4
 80aad9a:  jne 80aaae3
 80aada0:  mov eax, DWORD PTR [eax]
 80aada2:  jmp 80aad43
 80aada4:  lea esi, [esi]
 80aada8:  mov eax, DWORD PTR [esp+0x20]
 80aadac:  mov edx, DWORD PTR [esp+0x20]
 80aadb0:  and DWORD PTR [eax+0x60], 0x7fffffff
 80aadb7:  mov eax, DWORD PTR [edx+0x4c]
 80aadba:  cmp BYTE PTR [eax], 0xb8
 80aadbd:  jne 80aac2f
 80aadc3:  cmp DWORD PTR [eax+0x1], 0xad
 80aadca:  jne 80aac2f
 80aadd0:  movzx eax, WORD PTR [eax+0x5]
 80aadd4:  cmp ax, 0x50f
 80aadd8:  jne 80aae24
 80aadda:  mov ecx, DWORD PTR [esp+0x20]
 80aadde:  or DWORD PTR [ecx+0x60], 0x80000000
 80aade5:  jmp 80aac2f
 80aadea:  mov ecx, DWORD PTR [esp+0x20]
 80aadee:  cmp BYTE PTR [ebx+0x1f5c], 0x4
 80aadf5:  mov edx, DWORD PTR [ecx+0x48]
 80aadf8:  jne 80aaae3
 80aadfe:  test eax, 0x40000000
 80aae03:  mov DWORD PTR [esp+0xbc], edx
 80aae0a:  je 80aae14
 80aae0c:  mov BYTE PTR [esp+0xac], 0x0
 80aae14:  lea edx, [esp+0xbc]
 80aae1b:  mov DWORD PTR [esp+0x4c], edx
 80aae1f:  jmp 80aaab6
 80aae24:  cmp ax, 0x80cd
 80aae28:  je 80aadda
 80aae2a:  jmp 80aac2f
 80aae2f:  nop

080aae30 <uw_update_context>:
 80aae30:  sub esp, 0xc
 80aae33:  mov DWORD PTR [esp], ebx
 80aae36:  call 80ac0a5
 80aae3b:  add ebx, 0x25ec9
 80aae41:  mov DWORD PTR [esp+0x8], edi
 80aae45:  mov edi, edx
 80aae47:  mov DWORD PTR [esp+0x4], esi
 80aae4b:  mov esi, eax
 80aae4d:  call 80aaa60
 80aae52:  mov eax, DWORD PTR [edi+0xb4]
 80aae58:  cmp DWORD PTR [edi+eax*8+0x4], 0x6
 80aae5d:  je 80aae88
 80aae5f:  cmp eax, 0x11
 80aae62:  jg 80aae81
 80aae64:  test BYTE PTR [esi+0x63], 0x40
 80aae68:  movzx edx, BYTE PTR [ebx+eax+0x1f58]
 80aae70:  mov ecx, DWORD PTR [esi+eax*4]
 80aae73:  je 80aae7c
 80aae75:  cmp BYTE PTR [esi+eax+0x6c], 0x0
 80aae7a:  jne 80aaea0
 80aae7c:  cmp dl, 0x4
 80aae7f:  je 80aaeb8
 80aae81:  call 8055a00
 80aae86:  xchg ax, ax
 80aae88:  mov DWORD PTR [esi+0x4c], 0x0
 80aae8f:  mov ebx, DWORD PTR [esp]
 80aae92:  mov esi, DWORD PTR [esp+0x4]
 80aae96:  mov edi, DWORD PTR [esp+0x8]
 80aae9a:  add esp, 0xc
 80aae9d:  ret
 80aae9e:  xchg ax, ax
 80aaea0:  mov eax, ecx
 80aaea2:  mov DWORD PTR [esi+0x4c], eax
 80aaea5:  mov ebx, DWORD PTR [esp]
 80aaea8:  mov esi, DWORD PTR [esp+0x4]
 80aaeac:  mov edi, DWORD PTR [esp+0x8]
 80aaeb0:  add esp, 0xc
 80aaeb3:  ret
 80aaeb4:  lea esi, [esi]
 80aaeb8:  mov eax, DWORD PTR [ecx]
 80aaeba:  jmp 80aaea2
 80aaebc:  lea esi, [esi]

080aaec0 <uw_frame_state_for>:
 80aaec0:  push ebp
 80aaec1:  push edi
 80aaec2:  mov edi, edx
 80aaec4:  push esi
 80aaec5:  mov esi, edx
 80aaec7:  push ebx
 80aaec8:  mov edx, 0xc0
 80aaecd:  sub esp, 0x3c
 80aaed0:  call 80ac0a5
 80aaed5:  add ebx, 0x25e2f
 80aaedb:  test esi, 0x1
 80aaee1:  mov DWORD PTR [esp+0x10], eax
 80aaee5:  jne 80ab330
 80aaeeb:  test edi, 0x2
 80aaef1:  jne 80ab348
 80aaef7:  mov ecx, edx
 80aaef9:  xor eax, eax
 80aaefb:  shr ecx, 0x2
 80aaefe:  test dl, 0x2
 80aaf01:  rep stosd
 80aaf03:  je 80aaf0d
 80aaf05:  mov WORD PTR [edi], 0x0
 80aaf0a:  add edi, 0x2
 80aaf0d:  and edx, 0x1
 80aaf10:  je 80aaf15
 80aaf12:  mov BYTE PTR [edi], 0x0
 80aaf15:  mov eax, DWORD PTR [esp+0x10]
 80aaf19:  mov DWORD PTR [eax+0x68], 0x0
 80aaf20:  mov edx, eax
 80aaf22:  mov DWORD PTR [eax+0x50], 0x0
 80aaf29:  mov eax, DWORD PTR [eax+0x4c]
 80aaf2c:  test eax, eax
 80aaf2e:  je 80ab090
 80aaf34:  mov ecx, DWORD PTR [esp+0x10]
 80aaf38:  add edx, 0x54
 80aaf3b:  mov DWORD PTR [esp+0x4], edx
 80aaf3f:  mov edx, DWORD PTR [ecx+0x60]
 80aaf42:  shr edx, 0x1f
 80aaf45:  lea eax, [eax+edx-0x1]
 80aaf49:  mov DWORD PTR [esp], eax
 80aaf4c:  call 80adb70
 80aaf51:  test eax, eax
 80aaf53:  mov DWORD PTR [esp+0x18], eax
 80aaf57:  je 80ab241
 80aaf5d:  mov ebp, DWORD PTR [esp+0x10]
 80aaf61:  mov edx, DWORD PTR [esp+0x18]
 80aaf65:  mov eax, DWORD PTR [ebp+0x5c]
 80aaf68:  mov edx, DWORD PTR [edx+0x4]
 80aaf6b:  mov DWORD PTR [esi+0xa4], eax
 80aaf71:  mov eax, DWORD PTR [esp+0x18]
 80aaf75:  add eax, 0x4
 80aaf78:  sub eax, edx
 80aaf7a:  mov DWORD PTR [esp+0x14], eax
 80aaf7e:  add eax, 0x9
 80aaf81:  mov DWORD PTR [esp], eax
 80aaf84:  mov DWORD PTR [esp+0x1c], eax
 80aaf88:  call 804eea0
 80aaf8d:  mov edi, DWORD PTR [esp+0x14]
 80aaf91:  cmp BYTE PTR [edi+0x9], 0x65
 80aaf95:  lea eax, [edi+eax+0x1]
 80aaf99:  lea ebp, [eax+0x9]
 80aaf9c:  je 80ab308
 80aafa2:  mov edi, DWORD PTR [esp+0x14]
 80aafa6:  cmp BYTE PTR [edi+0x8], 0x3
 80aafaa:  ja 80ab49a
 80aafb0:  xor edi, edi
 80aafb2:  xor ecx, ecx
 80aafb4:  lea esi, [esi]
 80aafb8:  movzx edx, BYTE PTR [ebp]
 80aafbc:  add ebp, 0x1
 80aafbf:  mov eax, edx
 80aafc1:  and eax, 0x7f
 80aafc4:  shl eax, cl
 80aafc6:  add ecx, 0x7
 80aafc9:  or edi, eax
 80aafcb:  test dl, dl
 80aafcd:  js 80aafb8
 80aafcf:  mov DWORD PTR [esi+0xb0], edi
 80aafd5:  mov eax, ebp
 80aafd7:  xor edi, edi
 80aafd9:  lea edx, [esp+0x2c]
 80aafdd:  call 80a94a0
 80aafe2:  xor ecx, ecx
 80aafe4:  mov ebp, eax
 80aafe6:  mov eax, DWORD PTR [esp+0x2c]
 80aafea:  mov DWORD PTR [esi+0xac], eax
 80aaff0:  mov eax, DWORD PTR [esp+0x14]
 80aaff4:  cmp BYTE PTR [eax+0x8], 0x1
 80aaff8:  je 80ab2f0
 80aaffe:  xchg ax, ax
 80ab000:  movzx edx, BYTE PTR [ebp]
 80ab004:  add ebp, 0x1
 80ab007:  mov eax, edx
 80ab009:  and eax, 0x7f
 80ab00c:  shl eax, cl
 80ab00e:  add ecx, 0x7
 80ab011:  or edi, eax
 80ab013:  test dl, dl
 80ab015:  js 80ab000
 80ab017:  mov eax, ebp
 80ab019:  mov DWORD PTR [esi+0xb4], edi
 80ab01f:  mov edi, DWORD PTR [esp+0x1c]
 80ab023:  xor ebp, ebp
 80ab025:  mov BYTE PTR [esi+0xb9], 0xff
 80ab02c:  movzx edx, BYTE PTR [edi]
 80ab02f:  cmp dl, 0x7a
 80ab032:  je 80ab2b0
 80ab038:  mov edi, DWORD PTR [esp+0x1c]
 80ab03c:  add edi, 0x1
 80ab03f:  jmp 80ab068
 80ab041:  lea esi, [esi]
 80ab048:  cmp dl, 0x52
 80ab04b:  je 80ab080
 80ab04d:  cmp dl, 0x50
 80ab050:  je 80ab0a0
 80ab052:  cmp dl, 0x53
 80ab055:  jne 80ab29a
 80ab05b:  mov BYTE PTR [esi+0xbb], 0x1
 80ab062:  movzx edx, BYTE PTR [edi]
 80ab065:  add edi, 0x1
 80ab068:  test dl, dl
 80ab06a:  je 80ab0e8
 80ab06c:  cmp dl, 0x4c
 80ab06f:  jne 80ab048
 80ab071:  movzx edx, BYTE PTR [eax]
 80ab074:  add eax, 0x1
 80ab077:  mov BYTE PTR [esi+0xb9], dl
 80ab07d:  jmp 80ab062
 80ab07f:  nop
 80ab080:  movzx edx, BYTE PTR [eax]
 80ab083:  add eax, 0x1
 80ab086:  mov BYTE PTR [esi+0xb8], dl
 80ab08c:  jmp 80ab062
 80ab08e:  xchg ax, ax
 80ab090:  mov eax, 0x5
 80ab095:  add esp, 0x3c
 80ab098:  pop ebx
 80ab099:  pop esi
 80ab09a:  pop edi
 80ab09b:  pop ebp
 80ab09c:  ret
 80ab09d:  lea esi, [esi]
 80ab0a0:  movzx edx, BYTE PTR [eax]
 80ab0a3:  cmp dl, 0xff
 80ab0a6:  movzx ecx, dl
 80ab0a9:  je 80ab148
 80ab0af:  mov edx, ecx
 80ab0b1:  and edx, 0x70
 80ab0b4:  cmp edx, 0x20
 80ab0b7:  je 80ab358
 80ab0bd:  jle 80ab138
 80ab0bf:  cmp edx, 0x40
 80ab0c2:  je 80ab368
 80ab0c8:  cmp edx, 0x50
 80ab0cb:  nop
 80ab0cc:  lea esi, [esi]
 80ab0d0:  je 80ab148
 80ab0d2:  cmp edx, 0x30
 80ab0d5:  je 80ab288
 80ab0db:  nop
 80ab0dc:  lea esi, [esi]
 80ab0e0:  call 8055a00
 80ab0e5:  lea esi, [esi]
 80ab0e8:  test ebp, ebp
 80ab0ea:  je 80ab298
 80ab0f0:  mov edi, DWORD PTR [esp+0x14]
 80ab0f4:  mov eax, DWORD PTR [edi]
 80ab0f6:  mov DWORD PTR [esp+0x4], esi
 80ab0fa:  lea edx, [edi+eax+0x4]
 80ab0fe:  mov eax, DWORD PTR [esp+0x10]
 80ab102:  mov DWORD PTR [esp], eax
 80ab105:  mov eax, ebp
 80ab107:  call 80a9700
 80ab10c:  movzx eax, BYTE PTR [esi+0xb8]
 80ab113:  cmp al, 0xff
 80ab115:  je 80ab178
 80ab117:  and eax, 0x7
 80ab11a:  cmp eax, 0x2
 80ab11d:  je 80ab478
 80ab123:  jg 80ab378
 80ab129:  test eax, eax
 80ab12b:  jne 80ab0db
 80ab12d:  mov eax, 0x8
 80ab132:  jmp 80ab17a
 80ab134:  lea esi, [esi]
 80ab138:  test edx, edx
 80ab13a:  je 80ab148
 80ab13c:  cmp edx, 0x10
 80ab13f:  jne 80ab0db
 80ab141:  lea esi, [esi]
 80ab148:  mov DWORD PTR [esp+0x1c], 0x0
 80ab150:  lea edx, [esp+0x28]
 80ab154:  add eax, 0x1
 80ab157:  mov DWORD PTR [esp+0x4], edx
 80ab15b:  mov edx, DWORD PTR [esp+0x1c]
 80ab15f:  mov DWORD PTR [esp], eax
 80ab162:  mov eax, ecx
 80ab164:  call 80a94f0
 80ab169:  mov edx, DWORD PTR [esp+0x28]
 80ab16d:  mov DWORD PTR [esi+0xa8], edx
 80ab173:  jmp 80ab062
 80ab178:  xor eax, eax
 80ab17a:  mov edx, DWORD PTR [esp+0x18]
 80ab17e:  xor edi, edi
 80ab180:  cmp BYTE PTR [esi+0xba], 0x0
 80ab187:  lea eax, [edx+eax+0x8]
 80ab18b:  je 80ab1b3
 80ab18d:  xor ecx, ecx
 80ab18f:  mov ebp, eax
 80ab191:  lea esi, [esi]
 80ab198:  movzx eax, BYTE PTR [ebp]
 80ab19c:  add ebp, 0x1
 80ab19f:  mov edx, eax
 80ab1a1:  and edx, 0x7f
 80ab1a4:  shl edx, cl
 80ab1a6:  add ecx, 0x7
 80ab1a9:  or edi, edx
 80ab1ab:  test al, al
 80ab1ad:  js 80ab198
 80ab1af:  mov eax, ebp
 80ab1b1:  add edi, ebp
 80ab1b3:  movzx ecx, BYTE PTR [esi+0xb9]
 80ab1ba:  cmp cl, 0xff
 80ab1bd:  je 80ab215
 80ab1bf:  movzx ecx, cl
 80ab1c2:  mov edx, ecx
 80ab1c4:  and edx, 0x70
 80ab1c7:  cmp edx, 0x20
 80ab1ca:  je 80ab48e
 80ab1d0:  jle 80ab394
 80ab1d6:  cmp edx, 0x40
 80ab1d9:  je 80ab482
 80ab1df:  cmp edx, 0x50
 80ab1e2:  je 80ab3a1
 80ab1e8:  cmp edx, 0x30
 80ab1eb:  jne 80ab0db
 80ab1f1:  mov ebp, DWORD PTR [esp+0x10]
 80ab1f5:  mov edx, DWORD PTR [ebp+0x58]
 80ab1f8:  mov DWORD PTR [esp], eax
 80ab1fb:  lea ebp, [esp+0x28]
 80ab1ff:  mov eax, ecx
 80ab201:  mov DWORD PTR [esp+0x4], ebp
 80ab205:  call 80a94f0
 80ab20a:  mov edx, DWORD PTR [esp+0x28]
 80ab20e:  mov ecx, DWORD PTR [esp+0x10]
 80ab212:  mov DWORD PTR [ecx+0x50], edx
 80ab215:  mov ebp, DWORD PTR [esp+0x18]
 80ab219:  test edi, edi
 80ab21b:  cmove edi, eax
 80ab21e:  mov eax, DWORD PTR [ebp]
 80ab221:  mov DWORD PTR [esp+0x4], esi
 80ab225:  lea edx, [ebp+eax+0x4]
 80ab229:  mov eax, DWORD PTR [esp+0x10]
 80ab22d:  mov DWORD PTR [esp], eax
 80ab230:  mov eax, edi
 80ab232:  call 80a9700
 80ab237:  add esp, 0x3c
 80ab23a:  xor eax, eax
 80ab23c:  pop ebx
 80ab23d:  pop esi
 80ab23e:  pop edi
 80ab23f:  pop ebp
 80ab240:  ret
 80ab241:  mov eax, DWORD PTR [esp+0x10]
 80ab245:  mov edx, DWORD PTR [eax+0x4c]
 80ab248:  mov ecx, DWORD PTR [eax+0x48]
 80ab24b:  cmp WORD PTR [edx], 0xb858
 80ab250:  je 80ab3a8
 80ab256:  cmp BYTE PTR [edx], 0xb8
 80ab259:  mov eax, 0x5
 80ab25e:  jne 80ab095
 80ab264:  cmp DWORD PTR [edx+0x1], 0xad
 80ab26b:  jne 80ab095
 80ab271:  cmp WORD PTR [edx+0x5], 0x80cd
 80ab277:  jne 80ab095
 80ab27d:  lea eax, [ecx+0xa0]
 80ab283:  jmp 80ab3c1
 80ab288:  mov edx, DWORD PTR [esp+0x10]
 80ab28c:  mov edx, DWORD PTR [edx+0x58]
 80ab28f:  mov DWORD PTR [esp+0x1c], edx
 80ab293:  jmp 80ab150
 80ab298:  mov ebp, eax
 80ab29a:  test ebp, ebp
 80ab29c:  jne 80ab0f0
 80ab2a2:  add esp, 0x3c
 80ab2a5:  mov eax, 0x3
 80ab2aa:  pop ebx
 80ab2ab:  pop esi
 80ab2ac:  pop edi
 80ab2ad:  pop ebp
 80ab2ae:  ret
 80ab2af:  nop
 80ab2b0:  xor edi, edi
 80ab2b2:  xor ecx, ecx
 80ab2b4:  mov ebp, eax
 80ab2b6:  xchg ax, ax
 80ab2b8:  movzx eax, BYTE PTR [ebp]
 80ab2bc:  add ebp, 0x1
 80ab2bf:  mov edx, eax
 80ab2c1:  and edx, 0x7f
 80ab2c4:  shl edx, cl
 80ab2c6:  add ecx, 0x7
 80ab2c9:  or edi, edx
 80ab2cb:  test al, al
 80ab2cd:  js 80ab2b8
 80ab2cf:  mov eax, ebp
 80ab2d1:  lea ebp, [ebp+edi]
 80ab2d5:  mov edi, DWORD PTR [esp+0x1c]
 80ab2d9:  mov BYTE PTR [esi+0xba], 0x1
 80ab2e0:  movzx edx, BYTE PTR [edi+0x1]
 80ab2e4:  add edi, 0x1
 80ab2e7:  mov DWORD PTR [esp+0x1c], edi
 80ab2eb:  jmp 80ab038
 80ab2f0:  movzx eax, BYTE PTR [ebp]
 80ab2f4:  mov DWORD PTR [esi+0xb4], eax
 80ab2fa:  lea eax, [ebp+0x1]
 80ab2fd:  jmp 80ab01f
 80ab302:  lea esi, [esi]
 80ab308:  cmp BYTE PTR [edi+0xa], 0x68
 80ab30c:  jne 80aafa2
 80ab312:  mov edx, DWORD PTR [eax+0x9]
 80ab315:  add edi, 0xb
 80ab318:  lea ebp, [eax+0xd]
 80ab31b:  mov DWORD PTR [esp+0x1c], edi
 80ab31f:  mov DWORD PTR [esi+0xbc], edx
 80ab325:  jmp 80aafa2
 80ab32a:  lea esi, [esi]
 80ab330:  lea edi, [esi+0x1]
 80ab333:  mov dl, 0xbf
 80ab335:  test edi, 0x2
 80ab33b:  mov BYTE PTR [esi], 0x0
 80ab33e:  je 80aaef7
 80ab344:  lea esi, [esi]
 80ab348:  mov WORD PTR [edi], 0x0
 80ab34d:  sub edx, 0x2
 80ab350:  add edi, 0x2
 80ab353:  jmp 80aaef7
 80ab358:  mov edx, DWORD PTR [esp+0x10]
 80ab35c:  mov edx, DWORD PTR [edx+0x54]
 80ab35f:  mov DWORD PTR [esp+0x1c], edx
 80ab363:  jmp 80ab150
 80ab368:  mov edx, DWORD PTR [esp+0x10]
 80ab36c:  mov edx, DWORD PTR [edx+0x5c]
 80ab36f:  mov DWORD PTR [esp+0x1c], edx
 80ab373:  jmp 80ab150
 80ab378:  cmp eax, 0x3
 80ab37b:  je 80ab12d
 80ab381:  cmp eax, 0x4
 80ab384:  jne 80ab0db
 80ab38a:  mov eax, 0x10
 80ab38f:  jmp 80ab17a
 80ab394:  test edx, edx
 80ab396:  je 80ab3a1
 80ab398:  cmp edx, 0x10
 80ab39b:  jne 80ab0db
 80ab3a1:  xor edx, edx
 80ab3a3:  jmp 80ab1f8
 80ab3a8:  cmp DWORD PTR [edx+0x2], 0x77
 80ab3ac:  jne 80ab256
 80ab3b2:  cmp WORD PTR [edx+0x6], 0x80cd
 80ab3b8:  lea eax, [ecx+0x4]
 80ab3bb:  jne 80ab256
 80ab3c1:  mov edx, DWORD PTR [eax+0x1c]
 80ab3c4:  mov DWORD PTR [esi+0xa0], 0x1
 80ab3ce:  mov DWORD PTR [esi+0x98], 0x4
 80ab3d8:  mov DWORD PTR [esi+0x4], 0x1
 80ab3df:  mov edi, edx
 80ab3e1:  sub edi, ecx
 80ab3e3:  lea ecx, [eax+0x2c]
 80ab3e6:  sub ecx, edx
 80ab3e8:  mov DWORD PTR [esi], ecx
 80ab3ea:  lea ecx, [eax+0x20]
 80ab3ed:  sub ecx, edx
 80ab3ef:  mov DWORD PTR [esi+0x18], ecx
 80ab3f2:  lea ecx, [eax+0x28]
 80ab3f5:  sub ecx, edx
 80ab3f7:  mov DWORD PTR [esi+0x8], ecx
 80ab3fa:  lea ecx, [eax+0x24]
 80ab3fd:  sub ecx, edx
 80ab3ff:  mov DWORD PTR [esi+0x10], ecx
 80ab402:  lea ecx, [eax+0x14]
 80ab405:  sub ecx, edx
 80ab407:  mov DWORD PTR [esi+0x30], ecx
 80ab40a:  lea ecx, [eax+0x10]
 80ab40d:  sub ecx, edx
 80ab40f:  mov DWORD PTR [esi+0x38], ecx
 80ab412:  lea ecx, [eax+0x18]
 80ab415:  add eax, 0x38
 80ab418:  sub eax, edx
 80ab41a:  sub ecx, edx
 80ab41c:  mov DWORD PTR [esi+0x40], eax
 80ab41f:  xor eax, eax
 80ab421:  mov DWORD PTR [esi+0x94], edi
 80ab427:  mov DWORD PTR [esi+0x1c], 0x1
 80ab42e:  mov DWORD PTR [esi+0xc], 0x1
 80ab435:  mov DWORD PTR [esi+0x14], 0x1
 80ab43c:  mov DWORD PTR [esi+0x34], 0x1
 80ab443:  mov DWORD PTR [esi+0x3c], 0x1
 80ab44a:  mov DWORD PTR [esi+0x2c], 0x1
 80ab451:  mov DWORD PTR [esi+0x28], ecx
 80ab454:  mov DWORD PTR [esi+0x44], 0x1
 80ab45b:  mov DWORD PTR [esi+0xb4], 0x8
 80ab465:  mov BYTE PTR [esi+0xbb], 0x1
 80ab46c:  jmp 80ab095
 80ab471:  lea esi, [esi]
 80ab478:  mov eax, 0x4
 80ab47d:  jmp 80ab17a
 80ab482:  mov ebp, DWORD PTR [esp+0x10]
 80ab486:  mov edx, DWORD PTR [ebp+0x5c]
 80ab489:  jmp 80ab1f8
 80ab48e:  mov ebp, DWORD PTR [esp+0x10]
 80ab492:  mov edx, DWORD PTR [ebp+0x54]
 80ab495:  jmp 80ab1f8
 80ab49a:  cmp BYTE PTR [ebp], 0x4
 80ab49e:  jne 80ab2a2
 80ab4a4:  cmp BYTE PTR [ebp+0x1], 0x0
 80ab4a8:  jne 80ab2a2
 80ab4ae:  add ebp, 0x2
 80ab4b1:  jmp 80aafb0
 80ab4b6:  lea esi, [esi]
 80ab4b9:  lea edi, [edi]

080ab4c0 <uw_init_context_1>:
 80ab4c0:  sub esp, 0x10c
 80ab4c6:  mov DWORD PTR [esp+0xfc], ebx
 80ab4cd:  call 80ac0a5
 80ab4d2:  add ebx, 0x25832
 80ab4d8:  test al, 0x1
 80ab4da:  mov DWORD PTR [esp+0x100], esi
 80ab4e1:  mov esi, eax
 80ab4e3:  mov DWORD PTR [esp+0x104], edi
 80ab4ea:  mov edi, eax
 80ab4ec:  mov DWORD PTR [esp+0x108], ebp
 80ab4f3:  mov ebp, DWORD PTR [esp+0x10c]
 80ab4fa:  mov DWORD PTR [esp+0x1c], edx
 80ab4fe:  mov edx, 0x80
 80ab503:  jne 80ab698
 80ab509:  test edi, 0x2
 80ab50f:  jne 80ab688
 80ab515:  mov ecx, edx
 80ab517:  xor eax, eax
 80ab519:  shr ecx, 0x2
 80ab51c:  test dl, 0x2
 80ab51f:  rep stosd
 80ab521:  je 80ab52b
 80ab523:  mov WORD PTR [edi], 0x0
 80ab528:  add edi, 0x2
 80ab52b:  and edx, 0x1
 80ab52e:  je 80ab533
 80ab530:  mov BYTE PTR [edi], 0x0
 80ab533:  mov DWORD PTR [esi+0x4c], ebp
 80ab536:  lea edx, [esp+0x2c]
 80ab53a:  mov eax, esi
 80ab53c:  mov DWORD PTR [esi+0x60], 0x40000000
 80ab543:  call 80aaec0
 80ab548:  test eax, eax
 80ab54a:  jne 80ab588
 80ab54c:  mov edi, DWORD PTR [ebx-0x8]
 80ab552:  test edi, edi
 80ab554:  je 80ab572
 80ab556:  lea eax, [ebx-0x27684]
 80ab55c:  mov DWORD PTR [esp+0x4], eax
 80ab560:  lea eax, [ebx+0x1f6c]
 80ab566:  mov DWORD PTR [esp], eax
 80ab569:  call 0
 80ab56e:  test eax, eax
 80ab570:  je 80ab57b
 80ab572:  cmp BYTE PTR [ebx+0x1f58], 0x0
 80ab579:  je 80ab590
 80ab57b:  cmp BYTE PTR [ebx+0x1f5c], 0x4
 80ab582:  je 80ab60d
 80ab588:  call 8055a00
 80ab58d:  lea esi, [esi]
 80ab590:  mov BYTE PTR [ebx+0x1f5c], 0x4
 80ab597:  cmp BYTE PTR [ebx+0x1f5c], 0x4
 80ab59e:  mov BYTE PTR [ebx+0x1f58], 0x4
 80ab5a5:  mov BYTE PTR [ebx+0x1f5a], 0x4
 80ab5ac:  mov BYTE PTR [ebx+0x1f59], 0x4
 80ab5b3:  mov BYTE PTR [ebx+0x1f5b], 0x4
 80ab5ba:  mov BYTE PTR [ebx+0x1f5e], 0x4
 80ab5c1:  mov BYTE PTR [ebx+0x1f5f], 0x4
 80ab5c8:  mov BYTE PTR [ebx+0x1f5d], 0x4
 80ab5cf:  mov BYTE PTR [ebx+0x1f63], 0xc
 80ab5d6:  mov BYTE PTR [ebx+0x1f64], 0xc
 80ab5dd:  mov BYTE PTR [ebx+0x1f65], 0xc
 80ab5e4:  mov BYTE PTR [ebx+0x1f66], 0xc
 80ab5eb:  mov BYTE PTR [ebx+0x1f67], 0xc
 80ab5f2:  mov BYTE PTR [ebx+0x1f68], 0xc
 80ab5f9:  mov BYTE PTR [ebx+0x1f61], 0x4
 80ab600:  mov BYTE PTR [ebx+0x1f60], 0x4
 80ab607:  jne 80ab588
 80ab60d:  mov eax, DWORD PTR [esp+0x1c]
 80ab611:  test BYTE PTR [esi+0x63], 0x40
 80ab615:  mov DWORD PTR [esp+0xec], eax
 80ab61c:  je 80ab622
 80ab61e:  mov BYTE PTR [esi+0x70], 0x0
 80ab622:  lea eax, [esp+0xec]
 80ab629:  mov DWORD PTR [esi+0x10], eax
 80ab62c:  lea edx, [esp+0x2c]
 80ab630:  mov eax, esi
 80ab632:  mov DWORD PTR [esp+0xcc], 0x1
 80ab63d:  mov DWORD PTR [esp+0xc4], 0x4
 80ab648:  mov DWORD PTR [esp+0xc0], 0x0
 80ab653:  call 80aaa60
 80ab658:  mov eax, DWORD PTR [esp+0x110]
 80ab65f:  mov ebx, DWORD PTR [esp+0xfc]
 80ab666:  mov edi, DWORD PTR [esp+0x104]
 80ab66d:  mov ebp, DWORD PTR [esp+0x108]
 80ab674:  mov DWORD PTR [esi+0x4c], eax
 80ab677:  mov esi, DWORD PTR [esp+0x100]
 80ab67e:  add esp, 0x10c
 80ab684:  ret
 80ab685:  lea esi, [esi]
 80ab688:  mov WORD PTR [edi], 0x0
 80ab68d:  sub edx, 0x2
 80ab690:  add edi, 0x2
 80ab693:  jmp 80ab515
 80ab698:  mov BYTE PTR [eax], 0x0
 80ab69b:  lea edi, [eax+0x1]
 80ab69e:  mov dl, 0x7f
 80ab6a0:  jmp 80ab509
 80ab6a5:  lea esi, [esi]
 80ab6a9:  lea edi, [edi]

080ab6b0 <_Unwind_ForcedUnwind_Phase2>:
 80ab6b0:  push ebp
 80ab6b1:  mov ebp, edx
 80ab6b3:  push edi
 80ab6b4:  push esi
 80ab6b5:  mov esi, eax
 80ab6b7:  sub esp, 0xf0
 80ab6bd:  mov eax, DWORD PTR [eax+0xc]
 80ab6c0:  mov edx, DWORD PTR [esi+0x10]
 80ab6c3:  mov DWORD PTR [esp+0x28], eax
 80ab6c7:  mov DWORD PTR [esp+0x2c], edx
 80ab6cb:  jmp 80ab75d
 80ab6d0:  cmp edi, 0x5
 80ab6d3:  mov edx, 0x1a
 80ab6d8:  mov ecx, DWORD PTR [esi+0x4]
 80ab6db:  mov eax, 0xa
 80ab6e0:  cmove eax, edx
 80ab6e3:  mov edx, DWORD PTR [esp+0x2c]
 80ab6e7:  mov DWORD PTR [esp+0x14], ebp
 80ab6eb:  mov DWORD PTR [esp+0x10], esi
 80ab6ef:  mov DWORD PTR [esp+0xc], ecx
 80ab6f3:  mov DWORD PTR [esp+0x18], edx
 80ab6f7:  mov edx, DWORD PTR [esi]
 80ab6f9:  mov DWORD PTR [esp+0x4], eax
 80ab6fd:  mov DWORD PTR [esp], 0x1
 80ab704:  mov DWORD PTR [esp+0x8], edx
 80ab708:  call DWORD PTR [esp+0x28]
 80ab70c:  test eax, eax
 80ab70e:  jne 80ab780
 80ab710:  cmp edi, 0x5
 80ab713:  je 80ab785
 80ab715:  mov eax, DWORD PTR [esp+0xd8]
 80ab71c:  test eax, eax
 80ab71e:  je 80ab752
 80ab720:  mov edx, DWORD PTR [esi]
 80ab722:  mov ecx, DWORD PTR [esi+0x4]
 80ab725:  mov DWORD PTR [esp+0x14], ebp
 80ab729:  mov DWORD PTR [esp+0x10], esi
 80ab72d:  mov DWORD PTR [esp+0x8], edx
 80ab731:  mov DWORD PTR [esp+0xc], ecx
 80ab735:  mov DWORD PTR [esp+0x4], 0xa
 80ab73d:  mov DWORD PTR [esp], 0x1
 80ab744:  call eax
 80ab746:  cmp eax, 0x7
 80ab749:  mov edi, eax
 80ab74b:  je 80ab785
 80ab74d:  cmp eax, 0x8
 80ab750:  jne 80ab780
 80ab752:  lea edx, [esp+0x30]
 80ab756:  mov eax, ebp
 80ab758:  call 80aae30
 80ab75d:  lea edx, [esp+0x30]
 80ab761:  mov eax, ebp
 80ab763:  call 80aaec0
 80ab768:  cmp eax, 0x5
 80ab76b:  mov edi, eax
 80ab76d:  je 80ab6d0
 80ab773:  test eax, eax
 80ab775:  je 80ab6d0
 80ab77b:  nop
 80ab77c:  lea esi, [esi]
 80ab780:  mov edi, 0x2
 80ab785:  add esp, 0xf0
 80ab78b:  mov eax, edi
 80ab78d:  pop esi
 80ab78e:  pop edi
 80ab78f:  pop ebp
 80ab790:  ret
 80ab791:  jmp 80ab7a0
 80ab793:  nop
 80ab794:  nop
 80ab795:  nop
 80ab796:  nop
 80ab797:  nop
 80ab798:  nop
 80ab799:  nop
 80ab79a:  nop
 80ab79b:  nop
 80ab79c:  nop
 80ab79d:  nop
 80ab79e:  nop
 80ab79f:  nop

080ab7a0 <_Unwind_RaiseException_Phase2>:
 80ab7a0:  push ebp
 80ab7a1:  mov ebp, eax
 80ab7a3:  push edi
 80ab7a4:  push esi
 80ab7a5:  mov esi, edx
 80ab7a7:  push ebx
 80ab7a8:  sub esp, 0xec
 80ab7ae:  call 80ac0a5
 80ab7b3:  add ebx, 0x25551
 80ab7b9:  jmp 80ab80d
 80ab7bb:  nop
 80ab7bc:  lea esi, [esi]
 80ab7c0:  mov eax, DWORD PTR [esp+0xc8]
 80ab7c7:  test eax, eax
 80ab7c9:  je 80ab7fd
 80ab7cb:  mov DWORD PTR [esp+0x14], esi
 80ab7cf:  mov DWORD PTR [esp+0x10], ebp
 80ab7d3:  mov edx, DWORD PTR [ebp]
 80ab7d6:  mov ecx, DWORD PTR [ebp+0x4]
 80ab7d9:  mov DWORD PTR [esp], 0x1
 80ab7e0:  mov DWORD PTR [esp+0x8], edx
 80ab7e4:  mov edx, edi
 80ab7e6:  or edx, 0x2
 80ab7e9:  mov DWORD PTR [esp+0xc], ecx
 80ab7ed:  mov DWORD PTR [esp+0x4], edx
 80ab7f1:  call eax
 80ab7f3:  cmp eax, 0x7
 80ab7f6:  je 80ab83a
 80ab7f8:  cmp eax, 0x8
 80ab7fb:  jne 80ab835
 80ab7fd:  test edi, edi
 80ab7ff:  nop
 80ab800:  jne 80ab845
 80ab802:  lea edx, [esp+0x20]
 80ab806:  mov eax, esi
 80ab808:  call 80aae30
 80ab80d:  lea edx, [esp+0x20]
 80ab811:  mov eax, esi
 80ab813:  call 80aaec0
 80ab818:  mov ecx, DWORD PTR [esi+0x60]
 80ab81b:  mov edx, DWORD PTR [esi+0x48]
 80ab81e:  shr ecx, 0x1f
 80ab821:  sub edx, ecx
 80ab823:  cmp DWORD PTR [ebp+0x10], edx
 80ab826:  sete dl
 80ab829:  movzx edx, dl
 80ab82c:  mov edi, edx
 80ab82e:  shl edi, 0x2
 80ab831:  test eax, eax
 80ab833:  je 80ab7c0
 80ab835:  mov eax, 0x2
 80ab83a:  add esp, 0xec
 80ab840:  pop ebx
 80ab841:  pop esi
 80ab842:  pop edi
 80ab843:  pop ebp
 80ab844:  ret
 80ab845:  call 8055a00
 80ab84a:  lea esi, [esi]

080ab850 <uw_install_context_1>:
 80ab850:  push ebp
 80ab851:  mov ebp, edx
 80ab853:  push edi
 80ab854:  push esi
 80ab855:  mov esi, eax
 80ab857:  push ebx
 80ab858:  sub esp, 0x2c
 80ab85b:  mov eax, DWORD PTR [edx+0x60]
 80ab85e:  call 80ac0a5
 80ab863:  add ebx, 0x254a1
 80ab869:  test eax, 0x40000000
 80ab86e:  je 80ab879
 80ab870:  cmp BYTE PTR [ebp+0x70], 0x0
 80ab874:  lea edx, [edx+0x10]
 80ab877:  jne 80ab87c
 80ab879:  mov edx, DWORD PTR [ebp+0x10]
 80ab87c:  test edx, edx
 80ab87e:  je 80ab939
 80ab884:  xor edi, edi
 80ab886:  xchg ax, ax
 80ab888:  cmp BYTE PTR [esi+edi+0x6c], 0x0
 80ab88d:  mov eax, DWORD PTR [esi+edi*4]
 80ab890:  mov edx, DWORD PTR [ebp+edi*4]
 80ab894:  jne 80ab8ae
 80ab896:  test eax, eax
 80ab898:  setne cl
 80ab89b:  je 80ab8b8
 80ab89d:  cmp BYTE PTR [ebp+edi+0x6c], 0x0
 80ab8a2:  je 80ab8b8
 80ab8a4:  cmp BYTE PTR [edi+ebx+0x1f58], 0x4
 80ab8ac:  je 80ab900
 80ab8ae:  call 8055a00
 80ab8b3:  nop
 80ab8b4:  lea esi, [esi]
 80ab8b8:  test edx, edx
 80ab8ba:  je 80ab8de
 80ab8bc:  test cl, cl
 80ab8be:  xchg ax, ax
 80ab8c0:  je 80ab8de
 80ab8c2:  cmp edx, eax
 80ab8c4:  je 80ab8de
 80ab8c6:  movzx ecx, BYTE PTR [edi+ebx+0x1f58]
 80ab8ce:  mov DWORD PTR [esp+0x4], edx
 80ab8d2:  mov DWORD PTR [esp], eax
 80ab8d5:  mov DWORD PTR [esp+0x8], ecx
 80ab8d9:  call 804efc0
 80ab8de:  add edi, 0x1
 80ab8e1:  cmp edi, 0x11
 80ab8e4:  jne 80ab888
 80ab8e6:  test BYTE PTR [esi+0x63], 0x40
 80ab8ea:  jne 80ab908
 80ab8ec:  mov edx, DWORD PTR [esi+0x10]
 80ab8ef:  xor eax, eax
 80ab8f1:  test edx, edx
 80ab8f3:  je 80ab917
 80ab8f5:  add esp, 0x2c
 80ab8f8:  pop ebx
 80ab8f9:  pop esi
 80ab8fa:  pop edi
 80ab8fb:  pop ebp
 80ab8fc:  ret
 80ab8fd:  lea esi, [esi]
 80ab900:  mov DWORD PTR [esp+0x1c], edx
 80ab904:  mov DWORD PTR [eax], edx
 80ab906:  jmp 80ab8de
 80ab908:  cmp BYTE PTR [esi+0x70], 0x0
 80ab90c:  lea edx, [esi+0x10]
 80ab90f:  je 80ab8ec
 80ab911:  xor eax, eax
 80ab913:  test edx, edx
 80ab915:  jne 80ab8f5
 80ab917:  test BYTE PTR [ebp+0x63], 0x40
 80ab91b:  movzx eax, BYTE PTR [ebx+0x1f5c]
 80ab922:  mov edx, DWORD PTR [ebp+0x10]
 80ab925:  je 80ab92d
 80ab927:  cmp BYTE PTR [ebp+0x70], 0x0
 80ab92b:  jne 80ab964
 80ab92d:  cmp al, 0x4
 80ab92f:  jne 80ab8ae
 80ab935:  mov eax, DWORD PTR [edx]
 80ab937:  jmp 80ab966
 80ab939:  cmp BYTE PTR [ebx+0x1f5c], 0x4
 80ab940:  mov edx, DWORD PTR [ebp+0x48]
 80ab943:  jne 80ab8ae
 80ab949:  test eax, 0x40000000
 80ab94e:  mov DWORD PTR [esp+0x18], edx
 80ab952:  je 80ab958
 80ab954:  mov BYTE PTR [ebp+0x70], 0x0
 80ab958:  lea eax, [esp+0x18]
 80ab95c:  mov DWORD PTR [ebp+0x10], eax
 80ab95f:  jmp 80ab884
 80ab964:  mov eax, edx
 80ab966:  sub eax, DWORD PTR [esi+0x48]
 80ab969:  add eax, DWORD PTR [ebp+0x68]
 80ab96c:  add esp, 0x2c
 80ab96f:  pop ebx
 80ab970:  pop esi
 80ab971:  pop edi
 80ab972:  pop ebp
 80ab973:  ret
 80ab974:  lea esi, [esi]
 80ab97a:  lea edi, [edi]

080ab980 <_Unwind_GetGR>:
 80ab980:  sub esp, 0xc
 80ab983:  mov edx, DWORD PTR [esp+0x14]
 80ab987:  mov DWORD PTR [esp+0x4], ebx
 80ab98b:  mov ecx, DWORD PTR [esp+0x10]
 80ab98f:  call 80ac0a5
 80ab994:  add ebx, 0x25370
 80ab99a:  mov DWORD PTR [esp+0x8], esi
 80ab99e:  cmp edx, 0x11
 80ab9a1:  jg 80ab9b8
 80ab9a3:  test BYTE PTR [ecx+0x63], 0x40
 80ab9a7:  movzx eax, BYTE PTR [ebx+edx+0x1f58]
 80ab9af:  mov esi, DWORD PTR [ecx+edx*4]
 80ab9b2:  jne 80ab9c0
 80ab9b4:  cmp al, 0x4
 80ab9b6:  je 80ab9d8
 80ab9b8:  call 8055a00
 80ab9bd:  lea esi, [esi]
 80ab9c0:  cmp BYTE PTR [ecx+edx+0x6c], 0x0
 80ab9c5:  je 80ab9b4
 80ab9c7:  mov eax, esi
 80ab9c9:  mov ebx, DWORD PTR [esp+0x4]
 80ab9cd:  mov esi, DWORD PTR [esp+0x8]
 80ab9d1:  add esp, 0xc
 80ab9d4:  ret
 80ab9d5:  lea esi, [esi]
 80ab9d8:  mov eax, DWORD PTR [esi]
 80ab9da:  mov ebx, DWORD PTR [esp+0x4]
 80ab9de:  mov esi, DWORD PTR [esp+0x8]
 80ab9e2:  add esp, 0xc
 80ab9e5:  ret
 80ab9e6:  lea esi, [esi]
 80ab9e9:  lea edi, [edi]

080ab9f0 <_Unwind_GetCFA>:
 80ab9f0:  mov eax, DWORD PTR [esp+0x4]
 80ab9f4:  mov eax, DWORD PTR [eax+0x48]
 80ab9f7:  ret
 80ab9f8:  nop
 80ab9f9:  lea esi, [esi]

080aba00 <_Unwind_SetGR>:
 80aba00:  sub esp, 0xc
 80aba03:  mov eax, DWORD PTR [esp+0x14]
 80aba07:  mov DWORD PTR [esp+0x4], ebx
 80aba0b:  mov edx, DWORD PTR [esp+0x10]
 80aba0f:  call 80ac0a5
 80aba14:  add ebx, 0x252f0
 80aba1a:  mov DWORD PTR [esp+0x8], esi
 80aba1e:  mov esi, DWORD PTR [esp+0x18]
 80aba22:  cmp eax, 0x11
 80aba25:  jg 80aba3d
 80aba27:  test BYTE PTR [edx+0x63], 0x40
 80aba2b:  movzx ecx, BYTE PTR [ebx+eax+0x1f58]
 80aba33:  jne 80aba48
 80aba35:  cmp cl, 0x4
 80aba38:  mov eax, DWORD PTR [edx+eax*4]
 80aba3b:  je 80aba60
 80aba3d:  call 8055a00
 80aba42:  lea esi, [esi]
 80aba48:  cmp BYTE PTR [edx+eax+0x6c], 0x0
 80aba4d:  je 80aba35
 80aba4f:  mov DWORD PTR [edx+eax*4], esi
 80aba52:  mov ebx, DWORD PTR [esp+0x4]
 80aba56:  mov esi, DWORD PTR [esp+0x8]
 80aba5a:  add esp, 0xc
 80aba5d:  ret
 80aba5e:  xchg ax, ax
 80aba60:  mov DWORD PTR [eax], esi
 80aba62:  mov ebx, DWORD PTR [esp+0x4]
 80aba66:  mov esi, DWORD PTR [esp+0x8]
 80aba6a:  add esp, 0xc
 80aba6d:  ret
 80aba6e:  xchg ax, ax

080aba70 <_Unwind_GetIP>:
 80aba70:  mov eax, DWORD PTR [esp+0x4]
 80aba74:  mov eax, DWORD PTR [eax+0x4c]
 80aba77:  ret
 80aba78:  nop
 80aba79:  lea esi, [esi]

080aba80 <_Unwind_GetIPInfo>:
 80aba80:  mov edx, DWORD PTR [esp+0x4]
 80aba84:  mov ecx, DWORD PTR [esp+0x8]
 80aba88:  mov eax, DWORD PTR [edx+0x60]
 80aba8b:  shr eax, 0x1f
 80aba8e:  mov DWORD PTR [ecx], eax
 80aba90:  mov eax, DWORD PTR [edx+0x4c]
 80aba93:  ret
 80aba94:  lea esi, [esi]
 80aba9a:  lea edi, [edi]

080abaa0 <_Unwind_SetIP>:
 80abaa0:  mov edx, DWORD PTR [esp+0x8]
 80abaa4:  mov eax, DWORD PTR [esp+0x4]
 80abaa8:  mov DWORD PTR [eax+0x4c], edx
 80abaab:  ret
 80abaac:  lea esi, [esi]

080abab0 <_Unwind_GetLanguageSpecificData>:
 80abab0:  mov eax, DWORD PTR [esp+0x4]
 80abab4:  mov eax, DWORD PTR [eax+0x50]
 80abab7:  ret
 80abab8:  nop
 80abab9:  lea esi, [esi]

080abac0 <_Unwind_GetRegionStart>:
 80abac0:  mov eax, DWORD PTR [esp+0x4]
 80abac4:  mov eax, DWORD PTR [eax+0x5c]
 80abac7:  ret
 80abac8:  nop
 80abac9:  lea esi, [esi]

080abad0 <_Unwind_FindEnclosingFunction>:
 80abad0:  push ebx
 80abad1:  sub esp, 0x28
 80abad4:  call 80ac0a5
 80abad9:  add ebx, 0x2522b
 80abadf:  lea eax, [esp+0x14]
 80abae3:  mov DWORD PTR [esp+0x4], eax
 80abae7:  mov eax, DWORD PTR [esp+0x30]
 80abaeb:  sub eax, 0x1
 80abaee:  mov DWORD PTR [esp], eax
 80abaf1:  call 80adb70
 80abaf6:  test eax, eax
 80abaf8:  je 80abb08
 80abafa:  mov eax, DWORD PTR [esp+0x1c]
 80abafe:  add esp, 0x28
 80abb01:  pop ebx
 80abb02:  ret
 80abb03:  nop
 80abb04:  lea esi, [esi]
 80abb08:  xor eax, eax
 80abb0a:  jmp 80abafe
 80abb0c:  lea esi, [esi]

080abb10 <_Unwind_GetDataRelBase>:
 80abb10:  mov eax, DWORD PTR [esp+0x4]
 80abb14:  mov eax, DWORD PTR [eax+0x58]
 80abb17:  ret
 80abb18:  nop
 80abb19:  lea esi, [esi]

080abb20 <_Unwind_GetTextRelBase>:
 80abb20:  mov eax, DWORD PTR [esp+0x4]
 80abb24:  mov eax, DWORD PTR [eax+0x54]
 80abb27:  ret
 80abb28:  nop
 80abb29:  lea esi, [esi]

080abb30 <__frame_state_for>:
 80abb30:  push ebp
 80abb31:  xor eax, eax
 80abb33:  push edi
 80abb34:  mov ecx, 0x20
 80abb39:  push esi
 80abb3a:  sub esp, 0x140
 80abb40:  lea ebp, [esp+0xc0]
 80abb47:  mov edx, esp
 80abb49:  mov esi, DWORD PTR [esp+0x154]
 80abb50:  mov edi, ebp
 80abb52:  rep stosd
 80abb54:  mov eax, DWORD PTR [esp+0x150]
 80abb5b:  mov DWORD PTR [esp+0x120], 0x40000000
 80abb66:  add eax, 0x1
 80abb69:  mov DWORD PTR [esp+0x10c], eax
 80abb70:  mov eax, ebp
 80abb72:  call 80aaec0
 80abb77:  test eax, eax
 80abb79:  jne 80abbf9
 80abb7b:  cmp DWORD PTR [esp+0xa0], 0x2
 80abb83:  jne 80abb9d
 80abb85:  jmp 80abbf9
 80abb87:  nop
 80abb88:  cmp dl, 0x2
 80abb8b:  je 80abbaa
 80abb8d:  mov DWORD PTR [esi+eax*4+0x10], 0x0
 80abb95:  add eax, 0x1
 80abb98:  cmp eax, 0x12
 80abb9b:  je 80abbb9
 80abb9d:  mov edx, DWORD PTR [esp+eax*8+0x4]
 80abba1:  cmp dl, 0x1
 80abba4:  mov BYTE PTR [esi+eax+0x5c], dl
 80abba8:  jne 80abb88
 80abbaa:  mov edx, DWORD PTR [esp+eax*8]
 80abbad:  mov DWORD PTR [esi+eax*4+0x10], edx
 80abbb1:  add eax, 0x1
 80abbb4:  cmp eax, 0x12
 80abbb7:  jne 80abb9d
 80abbb9:  mov eax, DWORD PTR [esp+0x94]
 80abbc0:  mov DWORD PTR [esi+0x8], eax
 80abbc3:  mov eax, DWORD PTR [esp+0x98]
 80abbca:  mov WORD PTR [esi+0x58], ax
 80abbce:  mov eax, DWORD PTR [esp+0xb4]
 80abbd5:  mov WORD PTR [esi+0x5a], ax
 80abbd9:  mov eax, DWORD PTR [esp+0x128]
 80abbe0:  mov DWORD PTR [esi+0xc], eax
 80abbe3:  mov eax, DWORD PTR [esp+0xbc]
 80abbea:  mov DWORD PTR [esi+0x4], eax
 80abbed:  add esp, 0x140
 80abbf3:  mov eax, esi
 80abbf5:  pop esi
 80abbf6:  pop edi
 80abbf7:  pop ebp
 80abbf8:  ret
 80abbf9:  add esp, 0x140
 80abbff:  xor esi, esi
 80abc01:  mov eax, esi
 80abc03:  pop esi
 80abc04:  pop edi
 80abc05:  pop ebp
 80abc06:  ret
 80abc07:  mov esi, esi
 80abc09:  lea edi, [edi]

080abc10 <_Unwind_DebugHook>:
 80abc10:  ret
 80abc11:  jmp 80abc20
 80abc13:  nop
 80abc14:  nop
 80abc15:  nop
 80abc16:  nop
 80abc17:  nop
 80abc18:  nop
 80abc19:  nop
 80abc1a:  nop
 80abc1b:  nop
 80abc1c:  nop
 80abc1d:  nop
 80abc1e:  nop
 80abc1f:  nop

080abc20 <_Unwind_RaiseException>:
 80abc20:  push ebp
 80abc21:  mov ebp, esp
 80abc23:  push edi
 80abc24:  push esi
 80abc25:  push ebx
 80abc26:  push edx
 80abc27:  push eax
 80abc28:  lea eax, [ebp-0x118]
 80abc2e:  sub esp, 0x1f4
 80abc34:  mov DWORD PTR [ebp-0x1dc], eax
 80abc3a:  mov eax, DWORD PTR [ebp+0x4]
 80abc3d:  lea edx, [ebp+0x8]
 80abc40:  mov DWORD PTR [esp], eax
 80abc43:  lea eax, [ebp-0x118]
 80abc49:  call 80ab4c0
 80abc4e:  lea edx, [ebp-0x98]
 80abc54:  mov esi, DWORD PTR [ebp-0x1dc]
 80abc5a:  mov ecx, 0x20
 80abc5f:  mov edi, edx
 80abc61:  mov DWORD PTR [ebp-0x1e0], edx
 80abc67:  rep movsd
 80abc69:  jmp 80abcc8
 80abc6b:  nop
 80abc6c:  lea esi, [esi]
 80abc70:  test eax, eax
 80abc72:  jne 80abcf0
 80abc74:  mov eax, DWORD PTR [ebp-0x130]
 80abc7a:  test eax, eax
 80abc7c:  je 80abcb7
 80abc7e:  lea edx, [ebp-0x98]
 80abc84:  mov DWORD PTR [esp+0x14], edx
 80abc88:  mov edx, DWORD PTR [ebp+0x8]
 80abc8b:  mov DWORD PTR [esp+0x10], edx
 80abc8f:  mov esi, DWORD PTR [edx]
 80abc91:  mov edi, DWORD PTR [edx+0x4]
 80abc94:  mov DWORD PTR [esp+0x4], 0x1
 80abc9c:  mov DWORD PTR [esp], 0x1
 80abca3:  mov DWORD PTR [esp+0x8], esi
 80abca7:  mov DWORD PTR [esp+0xc], edi
 80abcab:  call eax
 80abcad:  cmp eax, 0x6
 80abcb0:  je 80abd00
 80abcb2:  cmp eax, 0x8
 80abcb5:  jne 80abcf0
 80abcb7:  lea edx, [ebp-0x1d8]
 80abcbd:  lea eax, [ebp-0x98]
 80abcc3:  call 80aae30
 80abcc8:  lea edx, [ebp-0x1d8]
 80abcce:  lea eax, [ebp-0x98]
 80abcd4:  call 80aaec0
 80abcd9:  cmp eax, 0x5
 80abcdc:  jne 80abc70
 80abcde:  mov ebx, DWORD PTR [ebp-0xc]
 80abce1:  mov esi, DWORD PTR [ebp-0x8]
 80abce4:  mov edi, DWORD PTR [ebp-0x4]
 80abce7:  leave
 80abce8:  ret
 80abce9:  lea esi, [esi]
 80abcf0:  mov eax, 0x3
 80abcf5:  mov ebx, DWORD PTR [ebp-0xc]
 80abcf8:  mov esi, DWORD PTR [ebp-0x8]
 80abcfb:  mov edi, DWORD PTR [ebp-0x4]
 80abcfe:  leave
 80abcff:  ret
 80abd00:  mov eax, DWORD PTR [ebp+0x8]
 80abd03:  mov ecx, 0x20
 80abd08:  mov edx, DWORD PTR [ebp-0x38]
 80abd0b:  mov edi, DWORD PTR [ebp-0x1e0]
 80abd11:  mov esi, DWORD PTR [ebp-0x1dc]
 80abd17:  mov DWORD PTR [eax+0xc], 0x0
 80abd1e:  mov eax, DWORD PTR [ebp-0x50]
 80abd21:  shr edx, 0x1f
 80abd24:  sub eax, edx
 80abd26:  mov edx, DWORD PTR [ebp+0x8]
 80abd29:  mov DWORD PTR [edx+0x10], eax
 80abd2c:  lea edx, [ebp-0x98]
 80abd32:  rep movsd
 80abd34:  mov eax, DWORD PTR [ebp+0x8]
 80abd37:  call 80ab7a0
 80abd3c:  cmp eax, 0x7
 80abd3f:  jne 80abcde
 80abd41:  lea edx, [ebp-0x98]
 80abd47:  lea eax, [ebp-0x118]
 80abd4d:  call 80ab850
 80abd52:  mov edi, DWORD PTR [ebp-0x4c]
 80abd55:  mov DWORD PTR [esp+0x4], edi
 80abd59:  mov esi, eax
 80abd5b:  mov eax, DWORD PTR [ebp-0x50]
 80abd5e:  mov DWORD PTR [esp], eax
 80abd61:  call 80abc10
 80abd66:  mov ecx, esi
 80abd68:  lea ecx, [ebp+ecx+0x4]
 80abd6c:  mov DWORD PTR [ebp+esi+0x4], edi
 80abd70:  mov eax, DWORD PTR [ebp-0x14]
 80abd73:  mov edx, DWORD PTR [ebp-0x10]
 80abd76:  mov ebx, DWORD PTR [ebp-0xc]
 80abd79:  mov esi, DWORD PTR [ebp-0x8]
 80abd7c:  mov edi, DWORD PTR [ebp-0x4]
 80abd7f:  mov ebp, DWORD PTR [ebp]
 80abd82:  mov esp, ecx
 80abd84:  ret
 80abd85:  lea esi, [esi]
 80abd89:  lea edi, [edi]

080abd90 <_Unwind_ForcedUnwind>:
 80abd90:  push ebp
 80abd91:  mov ebp, esp
 80abd93:  sub esp, 0x138
 80abd99:  mov DWORD PTR [ebp-0x14], eax
 80abd9c:  lea eax, [ebp-0x118]
 80abda2:  mov DWORD PTR [ebp-0x11c], eax
 80abda8:  mov eax, DWORD PTR [ebp+0x4]
 80abdab:  mov DWORD PTR [ebp-0x10], edx
 80abdae:  lea edx, [ebp+0x8]
 80abdb1:  mov DWORD PTR [ebp-0x8], esi
 80abdb4:  mov DWORD PTR [ebp-0x4], edi
 80abdb7:  lea edi, [ebp-0x98]
 80abdbd:  mov DWORD PTR [esp], eax
 80abdc0:  lea eax, [ebp-0x118]
 80abdc6:  mov DWORD PTR [ebp-0xc], ebx
 80abdc9:  call 80ab4c0
 80abdce:  mov esi, DWORD PTR [ebp-0x11c]
 80abdd4:  mov ecx, 0x20
 80abdd9:  rep movsd
 80abddb:  mov eax, DWORD PTR [ebp+0xc]
 80abdde:  mov edx, DWORD PTR [ebp+0x8]
 80abde1:  mov DWORD PTR [edx+0xc], eax
 80abde4:  mov eax, DWORD PTR [ebp+0x10]
 80abde7:  mov DWORD PTR [edx+0x10], eax
 80abdea:  mov eax, DWORD PTR [ebp+0x8]
 80abded:  lea edx, [ebp-0x98]
 80abdf3:  call 80ab6b0
 80abdf8:  cmp eax, 0x7
 80abdfb:  je 80abe0a
 80abdfd:  mov ebx, DWORD PTR [ebp-0xc]
 80abe00:  mov esi, DWORD PTR [ebp-0x8]
 80abe03:  mov edi, DWORD PTR [ebp-0x4]
 80abe06:  mov esp, ebp
 80abe08:  pop ebp
 80abe09:  ret
 80abe0a:  lea edx, [ebp-0x98]
 80abe10:  lea eax, [ebp-0x118]
 80abe16:  call 80ab850
 80abe1b:  mov edi, DWORD PTR [ebp-0x4c]
 80abe1e:  mov DWORD PTR [esp+0x4], edi
 80abe22:  mov esi, eax
 80abe24:  mov eax, DWORD PTR [ebp-0x50]
 80abe27:  mov DWORD PTR [esp], eax
 80abe2a:  call 80abc10
 80abe2f:  mov ecx, esi
 80abe31:  lea ecx, [ebp+ecx+0x4]
 80abe35:  mov DWORD PTR [ebp+esi+0x4], edi
 80abe39:  mov eax, DWORD PTR [ebp-0x14]
 80abe3c:  mov edx, DWORD PTR [ebp-0x10]
 80abe3f:  mov ebx, DWORD PTR [ebp-0xc]
 80abe42:  mov esi, DWORD PTR [ebp-0x8]
 80abe45:  mov edi, DWORD PTR [ebp-0x4]
 80abe48:  mov ebp, DWORD PTR [ebp]
 80abe4b:  mov esp, ecx
 80abe4d:  ret
 80abe4e:  xchg ax, ax

080abe50 <_Unwind_Resume>:
 80abe50:  push ebp
 80abe51:  mov ebp, esp
 80abe53:  push edi
 80abe54:  push esi
 80abe55:  push ebx
 80abe56:  push edx
 80abe57:  push eax
 80abe58:  call 80ac0a5
 80abe5d:  add ebx, 0x24ea7
 80abe63:  lea eax, [ebp-0x118]
 80abe69:  sub esp, 0x124
 80abe6f:  mov DWORD PTR [ebp-0x11c], eax
 80abe75:  mov eax, DWORD PTR [ebp+0x4]
 80abe78:  lea edx, [ebp+0x8]
 80abe7b:  mov DWORD PTR [esp], eax
 80abe7e:  lea eax, [ebp-0x118]
 80abe84:  call 80ab4c0
 80abe89:  lea eax, [ebp-0x98]
 80abe8f:  mov esi, DWORD PTR [ebp-0x11c]
 80abe95:  mov edi, eax
 80abe97:  mov ecx, 0x20
 80abe9c:  rep movsd
 80abe9e:  lea edx, [ebp-0x98]
 80abea4:  mov DWORD PTR [ebp-0x120], eax
 80abeaa:  mov eax, DWORD PTR [ebp+0x8]
 80abead:  mov ecx, DWORD PTR [eax+0xc]
 80abeb0:  test ecx, ecx
 80abeb2:  jne 80abec5
 80abeb4:  call 80ab7a0
 80abeb9:  cmp eax, 0x7
 80abebc:  je 80abecf
 80abebe:  xchg ax, ax
 80abec0:  call 8055a00
 80abec5:  mov eax, DWORD PTR [ebp+0x8]
 80abec8:  call 80ab6b0
 80abecd:  jmp 80abeb9
 80abecf:  lea edx, [ebp-0x98]
 80abed5:  lea eax, [ebp-0x118]
 80abedb:  call 80ab850
 80abee0:  mov edi, DWORD PTR [ebp-0x4c]
 80abee3:  mov DWORD PTR [esp+0x4], edi
 80abee7:  mov esi, eax
 80abee9:  mov eax, DWORD PTR [ebp-0x50]
 80abeec:  mov DWORD PTR [esp], eax
 80abeef:  call 80abc10
 80abef4:  mov ecx, esi
 80abef6:  lea ecx, [ebp+ecx+0x4]
 80abefa:  mov DWORD PTR [ebp+esi+0x4], edi
 80abefe:  mov eax, DWORD PTR [ebp-0x14]
 80abf01:  mov edx, DWORD PTR [ebp-0x10]
 80abf04:  mov ebx, DWORD PTR [ebp-0xc]
 80abf07:  mov esi, DWORD PTR [ebp-0x8]
 80abf0a:  mov edi, DWORD PTR [ebp-0x4]
 80abf0d:  mov ebp, DWORD PTR [ebp]
 80abf10:  mov esp, ecx
 80abf12:  ret
 80abf13:  lea esi, [esi]
 80abf19:  lea edi, [edi]

080abf20 <_Unwind_Resume_or_Rethrow>:
 80abf20:  push ebp
 80abf21:  mov ebp, esp
 80abf23:  sub esp, 0x138
 80abf29:  mov DWORD PTR [ebp-0x14], eax
 80abf2c:  mov eax, DWORD PTR [ebp+0x8]
 80abf2f:  mov DWORD PTR [ebp-0x8], esi
 80abf32:  mov DWORD PTR [ebp-0xc], ebx
 80abf35:  call 80ac0a5
 80abf3a:  add ebx, 0x24dca
 80abf40:  mov esi, DWORD PTR [eax+0xc]
 80abf43:  mov DWORD PTR [ebp-0x10], edx
 80abf46:  mov DWORD PTR [ebp-0x4], edi
 80abf49:  test esi, esi
 80abf4b:  jne 80abf68
 80abf4d:  mov DWORD PTR [esp], eax
 80abf50:  call 80abc20
 80abf55:  mov ebx, DWORD PTR [ebp-0xc]
 80abf58:  mov esi, DWORD PTR [ebp-0x8]
 80abf5b:  mov edi, DWORD PTR [ebp-0x4]
 80abf5e:  mov esp, ebp
 80abf60:  pop ebp
 80abf61:  ret
 80abf62:  lea esi, [esi]
 80abf68:  lea eax, [ebp-0x118]
 80abf6e:  mov DWORD PTR [ebp-0x11c], eax
 80abf74:  mov eax, DWORD PTR [ebp+0x4]
 80abf77:  lea edx, [ebp+0x8]
 80abf7a:  lea edi, [ebp-0x98]
 80abf80:  mov DWORD PTR [esp], eax
 80abf83:  lea eax, [ebp-0x118]
 80abf89:  call 80ab4c0
 80abf8e:  mov esi, DWORD PTR [ebp-0x11c]
 80abf94:  mov ecx, 0x20
 80abf99:  rep movsd
 80abf9b:  lea edx, [ebp-0x98]
 80abfa1:  mov eax, DWORD PTR [ebp+0x8]
 80abfa4:  call 80ab6b0
 80abfa9:  cmp eax, 0x7
 80abfac:  je 80abfb8
 80abfae:  call 8055a00
 80abfb3:  nop
 80abfb4:  lea esi, [esi]
 80abfb8:  lea edx, [ebp-0x98]
 80abfbe:  lea eax, [ebp-0x118]
 80abfc4:  call 80ab850
 80abfc9:  mov edi, DWORD PTR [ebp-0x4c]
 80abfcc:  mov DWORD PTR [esp+0x4], edi
 80abfd0:  mov esi, eax
 80abfd2:  mov eax, DWORD PTR [ebp-0x50]
 80abfd5:  mov DWORD PTR [esp], eax
 80abfd8:  call 80abc10
 80abfdd:  mov ecx, esi
 80abfdf:  lea ecx, [ebp+ecx+0x4]
 80abfe3:  mov DWORD PTR [ebp+esi+0x4], edi
 80abfe7:  mov eax, DWORD PTR [ebp-0x14]
 80abfea:  mov edx, DWORD PTR [ebp-0x10]
 80abfed:  mov ebx, DWORD PTR [ebp-0xc]
 80abff0:  mov esi, DWORD PTR [ebp-0x8]
 80abff3:  mov edi, DWORD PTR [ebp-0x4]
 80abff6:  mov ebp, DWORD PTR [ebp]
 80abff9:  mov esp, ecx
 80abffb:  ret
 80abffc:  lea esi, [esi]

080ac000 <_Unwind_DeleteException>:
 80ac000:  sub esp, 0x1c
 80ac003:  mov edx, DWORD PTR [esp+0x20]
 80ac007:  mov eax, DWORD PTR [edx+0x8]
 80ac00a:  test eax, eax
 80ac00c:  je 80ac01b
 80ac00e:  mov DWORD PTR [esp+0x4], edx
 80ac012:  mov DWORD PTR [esp], 0x1
 80ac019:  call eax
 80ac01b:  add esp, 0x1c
 80ac01e:  ret
 80ac01f:  nop

080ac020 <_Unwind_Backtrace>:
 80ac020:  push ebp
 80ac021:  mov ebp, esp
 80ac023:  push edi
 80ac024:  push esi
 80ac025:  sub esp, 0x160
 80ac02b:  mov eax, DWORD PTR [ebp+0x4]
 80ac02e:  lea esi, [ebp-0x88]
 80ac034:  mov edi, DWORD PTR [ebp+0xc]
 80ac037:  lea edx, [ebp+0x8]
 80ac03a:  mov DWORD PTR [esp], eax
 80ac03d:  mov eax, esi
 80ac03f:  call 80ab4c0
 80ac044:  jmp 80ac074
 80ac046:  xchg ax, ax
 80ac048:  mov DWORD PTR [ebp-0x14c], edx
 80ac04e:  mov DWORD PTR [esp+0x4], edi
 80ac052:  mov DWORD PTR [esp], esi
 80ac055:  call DWORD PTR [ebp+0x8]
 80ac058:  mov edx, DWORD PTR [ebp-0x14c]
 80ac05e:  test eax, eax
 80ac060:  jne 80ac090
 80ac062:  cmp edx, 0x5
 80ac065:  je 80ac095
 80ac067:  lea edx, [ebp-0x148]
 80ac06d:  mov eax, esi
 80ac06f:  call 80aae30
 80ac074:  lea edx, [ebp-0x148]
 80ac07a:  mov eax, esi
 80ac07c:  call 80aaec0
 80ac081:  cmp eax, 0x5
 80ac084:  mov edx, eax
 80ac086:  je 80ac048
 80ac088:  test eax, eax
 80ac08a:  je 80ac048
 80ac08c:  lea esi, [esi]
 80ac090:  mov edx, 0x3
 80ac095:  add esp, 0x160
 80ac09b:  mov eax, edx
 80ac09d:  pop esi
 80ac09e:  pop edi
 80ac09f:  pop ebp
 80ac0a0:  ret

080ac0a1 <__i686.get_pc_thunk.cx>:
 80ac0a1:  mov ecx, DWORD PTR [esp]
 80ac0a4:  ret

080ac0a5 <__i686.get_pc_thunk.bx>:
 80ac0a5:  mov ebx, DWORD PTR [esp]
 80ac0a8:  ret
 80ac0a9:  nop
 80ac0aa:  nop
 80ac0ab:  nop
 80ac0ac:  nop
 80ac0ad:  nop
 80ac0ae:  nop
 80ac0af:  nop

080ac0b0 <fde_unencoded_compare>:
 80ac0b0:  sub esp, 0x8
 80ac0b3:  mov edx, DWORD PTR [esp+0x14]
 80ac0b7:  mov ecx, DWORD PTR [esp+0x10]
 80ac0bb:  mov DWORD PTR [esp], esi
 80ac0be:  mov DWORD PTR [esp+0x4], edi
 80ac0c2:  mov eax, DWORD PTR [edx+0x8]
 80ac0c5:  cmp DWORD PTR [ecx+0x8], eax
 80ac0c8:  mov eax, 0x1
 80ac0cd:  mov edi, DWORD PTR [edx+0x8]
 80ac0d0:  sbb esi, esi
 80ac0d2:  cmp DWORD PTR [ecx+0x8], edi
 80ac0d5:  mov edi, DWORD PTR [esp+0x4]
 80ac0d9:  cmovbe eax, esi
 80ac0dc:  mov esi, DWORD PTR [esp]
 80ac0df:  add esp, 0x8
 80ac0e2:  ret
 80ac0e3:  lea esi, [esi]
 80ac0e9:  lea edi, [edi]

080ac0f0 <frame_downheap>:
 80ac0f0:  push ebp
 80ac0f1:  push edi
 80ac0f2:  push esi
 80ac0f3:  sub esp, 0x20
 80ac0f6:  mov ecx, DWORD PTR [esp+0x34]
 80ac0fa:  mov DWORD PTR [esp+0x1c], edx
 80ac0fe:  mov edx, DWORD PTR [esp+0x30]
 80ac102:  mov DWORD PTR [esp+0x18], eax
 80ac106:  lea edi, [ecx+ecx+0x1]
 80ac10a:  cmp edi, DWORD PTR [esp+0x38]
 80ac10e:  jge 80ac1a0
 80ac114:  lea esi, [edi+0x1]
 80ac117:  cmp DWORD PTR [esp+0x38], esi
 80ac11b:  lea ebp, [edx+edi*4]
 80ac11e:  jg 80ac16b
 80ac120:  mov esi, edi
 80ac122:  mov eax, DWORD PTR [ebp]
 80ac125:  lea edi, [edx+ecx*4]
 80ac128:  mov DWORD PTR [esp+0x8], eax
 80ac12c:  mov eax, DWORD PTR [edi]
 80ac12e:  mov DWORD PTR [esp+0x10], edx
 80ac132:  mov DWORD PTR [esp+0x4], eax
 80ac136:  mov eax, DWORD PTR [esp+0x18]
 80ac13a:  mov DWORD PTR [esp], eax
 80ac13d:  call DWORD PTR [esp+0x1c]
 80ac141:  mov edx, DWORD PTR [esp+0x10]
 80ac145:  test eax, eax
 80ac147:  jns 80ac1a0
 80ac149:  mov ecx, DWORD PTR [ebp]
 80ac14c:  mov eax, DWORD PTR [edi]
 80ac14e:  mov DWORD PTR [edi], ecx
 80ac150:  lea edi, [esi+esi+0x1]
 80ac154:  cmp DWORD PTR [esp+0x38], edi
 80ac158:  mov DWORD PTR [ebp], eax
 80ac15b:  jle 80ac1a0
 80ac15d:  mov ecx, esi
 80ac15f:  lea esi, [edi+0x1]
 80ac162:  cmp DWORD PTR [esp+0x38], esi
 80ac166:  lea ebp, [edx+edi*4]
 80ac169:  jle 80ac120
 80ac16b:  mov eax, DWORD PTR [edx+esi*4]
 80ac16e:  mov DWORD PTR [esp+0x8], eax
 80ac172:  mov eax, DWORD PTR [ebp]
 80ac175:  mov DWORD PTR [esp+0x10], edx
 80ac179:  mov DWORD PTR [esp+0x14], ecx
 80ac17d:  mov DWORD PTR [esp+0x4], eax
 80ac181:  mov eax, DWORD PTR [esp+0x18]
 80ac185:  mov DWORD PTR [esp], eax
 80ac188:  call DWORD PTR [esp+0x1c]
 80ac18c:  mov edx, DWORD PTR [esp+0x10]
 80ac190:  mov ecx, DWORD PTR [esp+0x14]
 80ac194:  test eax, eax
 80ac196:  jns 80ac120
 80ac198:  lea ebp, [edx+esi*4]
 80ac19b:  jmp 80ac122
 80ac19d:  lea esi, [esi]
 80ac1a0:  add esp, 0x20
 80ac1a3:  pop esi
 80ac1a4:  pop edi
 80ac1a5:  pop ebp
 80ac1a6:  ret
 80ac1a7:  mov esi, esi
 80ac1a9:  lea edi, [edi]

080ac1b0 <frame_heapsort>:
 80ac1b0:  push ebp
 80ac1b1:  push edi
 80ac1b2:  push esi
 80ac1b3:  sub esp, 0x20
 80ac1b6:  mov edi, DWORD PTR [esp+0x30]
 80ac1ba:  mov DWORD PTR [esp+0x10], eax
 80ac1be:  mov DWORD PTR [esp+0x14], edx
 80ac1c2:  mov eax, DWORD PTR [edi+0x4]
 80ac1c5:  lea ebp, [edi+0x8]
 80ac1c8:  mov esi, eax
 80ac1ca:  shr esi, 1
 80ac1cc:  sub esi, 0x1
 80ac1cf:  mov DWORD PTR [esp+0x18], eax
 80ac1d3:  js 80ac201
 80ac1d5:  mov DWORD PTR [esp+0x1c], edi
 80ac1d9:  mov edi, eax
 80ac1db:  nop
 80ac1dc:  lea esi, [esi]
 80ac1e0:  mov edx, DWORD PTR [esp+0x14]
 80ac1e4:  mov eax, DWORD PTR [esp+0x10]
 80ac1e8:  mov DWORD PTR [esp+0x4], esi
 80ac1ec:  mov DWORD PTR [esp+0x8], edi
 80ac1f0:  mov DWORD PTR [esp], ebp
 80ac1f3:  call 80ac0f0
 80ac1f8:  sub esi, 0x1
 80ac1fb:  jns 80ac1e0
 80ac1fd:  mov edi, DWORD PTR [esp+0x1c]
 80ac201:  mov esi, DWORD PTR [esp+0x18]
 80ac205:  sub esi, 0x1
 80ac208:  test esi, esi
 80ac20a:  jle 80ac241
 80ac20c:  lea esi, [esi]
 80ac210:  mov edx, DWORD PTR [edi+esi*4+0x8]
 80ac214:  mov eax, DWORD PTR [edi+0x8]
 80ac217:  mov DWORD PTR [edi+0x8], edx
 80ac21a:  mov edx, DWORD PTR [esp+0x14]
 80ac21e:  mov DWORD PTR [edi+esi*4+0x8], eax
 80ac222:  mov eax, DWORD PTR [esp+0x10]
 80ac226:  mov DWORD PTR [esp+0x8], esi
 80ac22a:  sub esi, 0x1
 80ac22d:  mov DWORD PTR [esp+0x4], 0x0
 80ac235:  mov DWORD PTR [esp], ebp
 80ac238:  call 80ac0f0
 80ac23d:  test esi, esi
 80ac23f:  jg 80ac210
 80ac241:  add esp, 0x20
 80ac244:  pop esi
 80ac245:  pop edi
 80ac246:  pop ebp
 80ac247:  ret
 80ac248:  nop
 80ac249:  lea esi, [esi]

080ac250 <size_of_encoded_value>:
 80ac250:  push ebx
 80ac251:  sub esp, 0x8
 80ac254:  call 80ac0a5
 80ac259:  add ebx, 0x24aab
 80ac25f:  cmp al, 0xff
 80ac261:  je 80ac2b0
 80ac263:  and eax, 0x7
 80ac266:  cmp eax, 0x2
 80ac269:  je 80ac2a0
 80ac26b:  jle 80ac280
 80ac26d:  cmp eax, 0x3
 80ac270:  je 80ac284
 80ac272:  cmp eax, 0x4
 80ac275:  je 80ac290
 80ac277:  call 8055a00
 80ac27c:  lea esi, [esi]
 80ac280:  test eax, eax
 80ac282:  jne 80ac277
 80ac284:  add esp, 0x8
 80ac287:  mov eax, 0x4
 80ac28c:  pop ebx
 80ac28d:  ret
 80ac28e:  xchg ax, ax
 80ac290:  add esp, 0x8
 80ac293:  mov eax, 0x8
 80ac298:  pop ebx
 80ac299:  ret
 80ac29a:  lea esi, [esi]
 80ac2a0:  add esp, 0x8
 80ac2a3:  mov eax, 0x2
 80ac2a8:  pop ebx
 80ac2a9:  ret
 80ac2aa:  lea esi, [esi]
 80ac2b0:  add esp, 0x8
 80ac2b3:  xor eax, eax
 80ac2b5:  pop ebx
 80ac2b6:  ret
 80ac2b7:  mov esi, esi
 80ac2b9:  lea edi, [edi]

080ac2c0 <read_encoded_value_with_base>:
 80ac2c0:  sub esp, 0x2c
 80ac2c3:  mov DWORD PTR [esp+0x1c], ebx
 80ac2c7:  call 80ac0a5
 80ac2cc:  add ebx, 0x24a38
 80ac2d2:  cmp al, 0x50
 80ac2d4:  mov DWORD PTR [esp+0x20], esi
 80ac2d8:  mov DWORD PTR [esp+0x24], edi
 80ac2dc:  mov DWORD PTR [esp+0x28], ebp
 80ac2e0:  je 80ac460
 80ac2e6:  movzx esi, al
 80ac2e9:  mov ecx, esi
 80ac2eb:  and ecx, 0xf
 80ac2ee:  cmp ecx, 0xc
 80ac2f1:  mov DWORD PTR [esp+0x4], esi
 80ac2f5:  jbe 80ac300
 80ac2f7:  call 8055a00
 80ac2fc:  lea esi, [esi]
 80ac300:  mov esi, ebx
 80ac302:  sub esi, DWORD PTR [ebx+ecx*4-0x249f8]
 80ac309:  jmp esi
 80ac30b:  nop
 80ac30c:  ???
 80ac30d:  dec ecx
 80ac30e:  add al, BYTE PTR [eax]
 80ac310:  insb
 80ac311:  dec ecx
 80ac312:  add al, BYTE PTR [eax]
 80ac314:  mov esp, 0xc4000248
 80ac319:  dec ecx
 80ac31a:  add al, BYTE PTR [eax]
 80ac31c:  jl 80ac367
 80ac31e:  add al, BYTE PTR [eax]
 80ac320:  or eax, 0xd00024a
 80ac325:  dec edx
 80ac326:  add al, BYTE PTR [eax]
 80ac328:  or eax, 0xd00024a
 80ac32d:  dec edx
 80ac32e:  add al, BYTE PTR [eax]
 80ac330:  xor al, 0x49
 80ac332:  add al, BYTE PTR [eax]
 80ac334:  ???
 80ac335:  dec eax
 80ac336:  add al, BYTE PTR [eax]
 80ac338:  ???
 80ac339:  dec ecx
 80ac33a:  add al, BYTE PTR [eax]
 80ac33c:  jl 80ac387
 80ac33e:  add al, BYTE PTR [eax]
 80ac340:  mov ecx, DWORD PTR [esp+0x30]
 80ac344:  mov esi, DWORD PTR [ecx]
 80ac346:  mov ebp, ecx
 80ac348:  add ebp, 0x4
 80ac34b:  test esi, esi
 80ac34d:  je 80ac368
 80ac34f:  mov ecx, DWORD PTR [esp+0x4]
 80ac353:  and ecx, 0x70
 80ac356:  cmp ecx, 0x10
 80ac359:  cmove edx, DWORD PTR [esp+0x30]
 80ac35e:  add esi, edx
 80ac360:  test al, al
 80ac362:  jns 80ac368
 80ac364:  mov esi, DWORD PTR [esi]
 80ac366:  xchg ax, ax
 80ac368:  mov eax, DWORD PTR [esp+0x34]
 80ac36c:  mov ebx, DWORD PTR [esp+0x1c]
 80ac370:  mov edi, DWORD PTR [esp+0x24]
 80ac374:  mov DWORD PTR [eax], esi
 80ac376:  mov eax, ebp
 80ac378:  mov esi, DWORD PTR [esp+0x20]
 80ac37c:  mov ebp, DWORD PTR [esp+0x28]
 80ac380:  add esp, 0x2c
 80ac383:  ret
 80ac384:  lea esi, [esi]
 80ac388:  mov ecx, DWORD PTR [esp+0x30]
 80ac38c:  mov ebp, ecx
 80ac38e:  mov esi, DWORD PTR [ecx]
 80ac390:  add ebp, 0x8
 80ac393:  jmp 80ac34b
 80ac395:  lea esi, [esi]
 80ac398:  mov esi, DWORD PTR [esp+0x30]
 80ac39c:  xor edi, edi
 80ac39e:  xor ecx, ecx
 80ac3a0:  mov DWORD PTR [esp+0x8], edx
 80ac3a4:  mov ebp, esi
 80ac3a6:  mov esi, eax
 80ac3a8:  movzx edx, BYTE PTR [ebp]
 80ac3ac:  add ebp, 0x1
 80ac3af:  mov eax, edx
 80ac3b1:  and eax, 0x7f
 80ac3b4:  shl eax, cl
 80ac3b6:  add ecx, 0x7
 80ac3b9:  or edi, eax
 80ac3bb:  test dl, dl
 80ac3bd:  js 80ac3a8
 80ac3bf:  mov eax, esi
 80ac3c1:  mov edx, DWORD PTR [esp+0x8]
 80ac3c5:  mov esi, edi
 80ac3c7:  jmp 80ac34b
 80ac3c9:  lea esi, [esi]
 80ac3d0:  mov edi, DWORD PTR [esp+0x30]
 80ac3d4:  xor esi, esi
 80ac3d6:  xor ecx, ecx
 80ac3d8:  mov BYTE PTR [esp+0x8], al
 80ac3dc:  mov DWORD PTR [esp+0xc], edx
 80ac3e0:  mov ebp, edi
 80ac3e2:  lea esi, [esi]
 80ac3e8:  movzx edx, BYTE PTR [ebp]
 80ac3ec:  add ebp, 0x1
 80ac3ef:  movzx edi, dl
 80ac3f2:  mov eax, edi
 80ac3f4:  and eax, 0x7f
 80ac3f7:  shl eax, cl
 80ac3f9:  add ecx, 0x7
 80ac3fc:  or esi, eax
 80ac3fe:  test dl, dl
 80ac400:  js 80ac3e8
 80ac402:  cmp ecx, 0x1f
 80ac405:  movzx eax, BYTE PTR [esp+0x8]
 80ac40a:  mov edx, DWORD PTR [esp+0xc]
 80ac40e:  mov DWORD PTR [esp+0x8], ebp
 80ac412:  ja 80ac422
 80ac414:  and edi, 0x40
 80ac417:  je 80ac422
 80ac419:  mov edi, 0xffffffff
 80ac41e:  shl edi, cl
 80ac420:  or esi, edi
 80ac422:  mov ebp, DWORD PTR [esp+0x8]
 80ac426:  jmp 80ac34b
 80ac42b:  nop
 80ac42c:  lea esi, [esi]
 80ac430:  mov ecx, DWORD PTR [esp+0x30]
 80ac434:  mov ebp, ecx
 80ac436:  movsx esi, WORD PTR [ecx]
 80ac439:  add ebp, 0x2
 80ac43c:  jmp 80ac34b
 80ac441:  lea esi, [esi]
 80ac448:  mov ecx, DWORD PTR [esp+0x30]
 80ac44c:  mov ebp, ecx
 80ac44e:  movzx esi, WORD PTR [ecx]
 80ac451:  add ebp, 0x2
 80ac454:  jmp 80ac34b
 80ac459:  lea esi, [esi]
 80ac460:  mov ebp, DWORD PTR [esp+0x30]
 80ac464:  add ebp, 0x3
 80ac467:  and ebp, 0xfc
 80ac46a:  mov esi, DWORD PTR [ebp]
 80ac46d:  add ebp, 0x4
 80ac470:  jmp 80ac368
 80ac475:  lea esi, [esi]
 80ac479:  lea edi, [edi]

080ac480 <get_cie_encoding>:
 80ac480:  push ebp
 80ac481:  push edi
 80ac482:  push esi
 80ac483:  mov esi, eax
 80ac485:  push ebx
 80ac486:  call 80ac0a5
 80ac48b:  add ebx, 0x24879
 80ac491:  sub esp, 0x2c
 80ac494:  lea eax, [eax+0x9]
 80ac497:  mov DWORD PTR [esp], eax
 80ac49a:  call 804eea0
 80ac49f:  movzx edi, BYTE PTR [esi+0x8]
 80ac4a3:  lea ecx, [eax+0x1]
 80ac4a6:  mov eax, edi
 80ac4a8:  lea ebp, [esi+ecx]
 80ac4ab:  cmp al, 0x3
 80ac4ad:  lea edx, [ebp+0x9]
 80ac4b0:  ja 80ac58f
 80ac4b6:  xor eax, eax
 80ac4b8:  cmp BYTE PTR [esi+0x9], 0x7a
 80ac4bc:  je 80ac4ca
 80ac4be:  add esp, 0x2c
 80ac4c1:  pop ebx
 80ac4c2:  pop esi
 80ac4c3:  pop edi
 80ac4c4:  pop ebp
 80ac4c5:  ret
 80ac4c6:  xchg ax, ax
 80ac4c8:  mov edx, eax
 80ac4ca:  cmp BYTE PTR [edx], 0x0
 80ac4cd:  lea eax, [edx+0x1]
 80ac4d0:  js 80ac4c8
 80ac4d2:  cmp BYTE PTR [eax], 0x0
 80ac4d5:  lea ecx, [eax+0x1]
 80ac4d8:  jns 80ac4ea
 80ac4da:  lea esi, [esi]
 80ac4e0:  mov eax, ecx
 80ac4e2:  cmp BYTE PTR [eax], 0x0
 80ac4e5:  lea ecx, [eax+0x1]
 80ac4e8:  js 80ac4e0
 80ac4ea:  mov edx, edi
 80ac4ec:  cmp dl, 0x1
 80ac4ef:  jne 80ac4fa
 80ac4f1:  jmp 80ac58a
 80ac4f6:  xchg ax, ax
 80ac4f8:  mov ecx, edx
 80ac4fa:  cmp BYTE PTR [ecx], 0x0
 80ac4fd:  lea edx, [ecx+0x1]
 80ac500:  js 80ac4f8
 80ac502:  cmp BYTE PTR [edx], 0x0
 80ac505:  lea eax, [edx+0x1]
 80ac508:  jns 80ac51a
 80ac50a:  lea esi, [esi]
 80ac510:  mov edx, eax
 80ac512:  cmp BYTE PTR [edx], 0x0
 80ac515:  lea eax, [edx+0x1]
 80ac518:  js 80ac510
 80ac51a:  movzx edx, BYTE PTR [esi+0xa]
 80ac51e:  add esi, 0xa
 80ac521:  lea edi, [esp+0x1c]
 80ac525:  cmp dl, 0x52
 80ac528:  jne 80ac543
 80ac52a:  jmp 80ac570
 80ac52c:  lea esi, [esi]
 80ac530:  cmp dl, 0x4c
 80ac533:  jne 80ac580
 80ac535:  add esi, 0x1
 80ac538:  add eax, 0x1
 80ac53b:  movzx edx, BYTE PTR [esi]
 80ac53e:  cmp dl, 0x52
 80ac541:  je 80ac570
 80ac543:  cmp dl, 0x50
 80ac546:  jne 80ac530
 80ac548:  lea edx, [eax+0x1]
 80ac54b:  movzx eax, BYTE PTR [eax]
 80ac54e:  add esi, 0x1
 80ac551:  mov DWORD PTR [esp], edx
 80ac554:  xor edx, edx
 80ac556:  mov DWORD PTR [esp+0x4], edi
 80ac55a:  and eax, 0x7f
 80ac55d:  call 80ac2c0
 80ac562:  movzx edx, BYTE PTR [esi]
 80ac565:  cmp dl, 0x52
 80ac568:  jne 80ac543
 80ac56a:  lea esi, [esi]
 80ac570:  movzx eax, BYTE PTR [eax]
 80ac573:  add esp, 0x2c
 80ac576:  pop ebx
 80ac577:  pop esi
 80ac578:  pop edi
 80ac579:  pop ebp
 80ac57a:  ret
 80ac57b:  nop
 80ac57c:  lea esi, [esi]
 80ac580:  add esp, 0x2c
 80ac583:  xor eax, eax
 80ac585:  pop ebx
 80ac586:  pop esi
 80ac587:  pop edi
 80ac588:  pop ebp
 80ac589:  ret
 80ac58a:  lea edx, [eax+0x2]
 80ac58d:  jmp 80ac512
 80ac58f:  cmp BYTE PTR [esi+ecx+0x9], 0x4
 80ac594:  mov eax, 0xff
 80ac599:  jne 80ac4be
 80ac59f:  cmp BYTE PTR [esi+ecx+0xa], 0x0
 80ac5a4:  jne 80ac4be
 80ac5aa:  lea edx, [ebp+0xb]
 80ac5ad:  jmp 80ac4b6
 80ac5b2:  lea esi, [esi]
 80ac5b9:  lea edi, [edi]

080ac5c0 <base_from_object.isra.3>:
 80ac5c0:  push ebx
 80ac5c1:  sub esp, 0x8
 80ac5c4:  call 80ac0a5
 80ac5c9:  add ebx, 0x2473b
 80ac5cf:  cmp al, 0xff
 80ac5d1:  je 80ac5f4
 80ac5d3:  and eax, 0x70
 80ac5d6:  cmp eax, 0x20
 80ac5d9:  je 80ac600
 80ac5db:  jle 80ac5f0
 80ac5dd:  cmp eax, 0x30
 80ac5e0:  je 80ac608
 80ac5e2:  cmp eax, 0x50
 80ac5e5:  je 80ac5f4
 80ac5e7:  call 8055a00
 80ac5ec:  lea esi, [esi]
 80ac5f0:  test eax, eax
 80ac5f2:  jne 80ac618
 80ac5f4:  add esp, 0x8
 80ac5f7:  xor eax, eax
 80ac5f9:  pop ebx
 80ac5fa:  ret
 80ac5fb:  nop
 80ac5fc:  lea esi, [esi]
 80ac600:  mov eax, DWORD PTR [edx]
 80ac602:  add esp, 0x8
 80ac605:  pop ebx
 80ac606:  ret
 80ac607:  nop
 80ac608:  mov eax, DWORD PTR [esp+0x10]
 80ac60c:  mov eax, DWORD PTR [eax]
 80ac60e:  add esp, 0x8
 80ac611:  pop ebx
 80ac612:  ret
 80ac613:  nop
 80ac614:  lea esi, [esi]
 80ac618:  cmp eax, 0x10
 80ac61b:  je 80ac5f4
 80ac61d:  call 8055a00
 80ac622:  lea esi, [esi]
 80ac629:  lea edi, [edi]

080ac630 <classify_object_over_fdes>:
 80ac630:  push ebp
 80ac631:  mov ebp, eax
 80ac633:  push edi
 80ac634:  push esi
 80ac635:  mov esi, edx
 80ac637:  sub esp, 0x40
 80ac63a:  mov edx, DWORD PTR [edx]
 80ac63c:  mov DWORD PTR [esp+0x2c], 0x0
 80ac644:  test edx, edx
 80ac646:  je 80ac780
 80ac64c:  mov DWORD PTR [esp+0x28], 0x0
 80ac654:  mov DWORD PTR [esp+0x24], 0x0
 80ac65c:  mov DWORD PTR [esp+0x1c], 0x0
 80ac664:  jmp 80ac6f0
 80ac669:  lea esi, [esi]
 80ac670:  shr ax, 0x3
 80ac674:  movzx eax, al
 80ac677:  cmp DWORD PTR [esp+0x24], eax
 80ac67b:  mov DWORD PTR [esp+0x1c], edi
 80ac67f:  je 80ac685
 80ac681:  or BYTE PTR [ebp+0x10], 0x4
 80ac685:  lea eax, [esp+0x3c]
 80ac689:  mov edx, DWORD PTR [esp+0x28]
 80ac68d:  mov DWORD PTR [esp+0x4], eax
 80ac691:  lea eax, [esi+0x8]
 80ac694:  mov DWORD PTR [esp], eax
 80ac697:  mov eax, DWORD PTR [esp+0x20]
 80ac69b:  call 80ac2c0
 80ac6a0:  mov eax, DWORD PTR [esp+0x20]
 80ac6a4:  call 80ac250
 80ac6a9:  mov edx, 0xffffffff
 80ac6ae:  cmp eax, 0x3
 80ac6b1:  ja 80ac6c4
 80ac6b3:  lea ecx, [eax*8]
 80ac6ba:  mov edx, 0x1
 80ac6bf:  shl edx, cl
 80ac6c1:  sub edx, 0x1
 80ac6c4:  mov eax, DWORD PTR [esp+0x3c]
 80ac6c8:  test edx, eax
 80ac6ca:  je 80ac6e0
 80ac6cc:  add DWORD PTR [esp+0x2c], 0x1
 80ac6d1:  cmp eax, DWORD PTR [ebp]
 80ac6d4:  jae 80ac6e0
 80ac6d6:  mov DWORD PTR [ebp], eax
 80ac6d9:  lea esi, [esi]
 80ac6e0:  mov eax, DWORD PTR [esi]
 80ac6e2:  lea esi, [esi+eax+0x4]
 80ac6e6:  mov eax, DWORD PTR [esi]
 80ac6e8:  test eax, eax
 80ac6ea:  je 80ac780
 80ac6f0:  mov eax, DWORD PTR [esi+0x4]
 80ac6f3:  test eax, eax
 80ac6f5:  je 80ac6e0
 80ac6f7:  lea edi, [esi+0x4]
 80ac6fa:  sub edi, eax
 80ac6fc:  cmp DWORD PTR [esp+0x1c], edi
 80ac700:  je 80ac768
 80ac702:  mov eax, edi
 80ac704:  call 80ac480
 80ac709:  cmp eax, 0xff
 80ac70e:  mov DWORD PTR [esp+0x24], eax
 80ac712:  je 80ac778
 80ac714:  mov BYTE PTR [esp+0x1c], al
 80ac718:  movzx eax, al
 80ac71b:  mov DWORD PTR [esp+0x20], eax
 80ac71f:  lea eax, [ebp+0x8]
 80ac722:  mov DWORD PTR [esp], eax
 80ac725:  mov eax, DWORD PTR [esp+0x20]
 80ac729:  lea edx, [ebp+0x4]
 80ac72c:  call 80ac5c0
 80ac731:  mov DWORD PTR [esp+0x28], eax
 80ac735:  movzx eax, WORD PTR [ebp+0x10]
 80ac739:  mov edx, eax
 80ac73b:  and dx, 0x7f8
 80ac740:  cmp dx, 0x7f8
 80ac745:  jne 80ac670
 80ac74b:  movzx edx, BYTE PTR [esp+0x1c]
 80ac750:  and ax, 0xf807
 80ac754:  shl edx, 0x3
 80ac757:  or eax, edx
 80ac759:  mov WORD PTR [ebp+0x10], ax
 80ac75d:  mov DWORD PTR [esp+0x1c], edi
 80ac761:  jmp 80ac685
 80ac766:  xchg ax, ax
 80ac768:  movzx eax, BYTE PTR [esp+0x24]
 80ac76d:  mov DWORD PTR [esp+0x20], eax
 80ac771:  jmp 80ac685
 80ac776:  xchg ax, ax
 80ac778:  mov DWORD PTR [esp+0x2c], 0xffffffff
 80ac780:  mov eax, DWORD PTR [esp+0x2c]
 80ac784:  add esp, 0x40
 80ac787:  pop esi
 80ac788:  pop edi
 80ac789:  pop ebp
 80ac78a:  ret
 80ac78b:  nop
 80ac78c:  lea esi, [esi]

080ac790 <add_fdes>:
 80ac790:  push ebp
 80ac791:  mov ebp, eax
 80ac793:  push edi
 80ac794:  push esi
 80ac795:  sub esp, 0x40
 80ac798:  mov DWORD PTR [esp+0x2c], edx
 80ac79c:  movzx eax, WORD PTR [eax+0x10]
 80ac7a0:  lea edx, [ebp+0x8]
 80ac7a3:  mov DWORD PTR [esp+0x28], edx
 80ac7a7:  mov esi, DWORD PTR [esp+0x50]
 80ac7ab:  mov DWORD PTR [esp], edx
 80ac7ae:  shr ax, 0x3
 80ac7b2:  movzx eax, al
 80ac7b5:  mov DWORD PTR [esp+0x18], eax
 80ac7b9:  lea eax, [ebp+0x4]
 80ac7bc:  mov DWORD PTR [esp+0x24], eax
 80ac7c0:  mov edx, eax
 80ac7c2:  mov eax, DWORD PTR [esp+0x18]
 80ac7c6:  call 80ac5c0
 80ac7cb:  mov DWORD PTR [esp+0x20], eax
 80ac7cf:  mov eax, DWORD PTR [esi]
 80ac7d1:  test eax, eax
 80ac7d3:  je 80ac8b8
 80ac7d9:  mov DWORD PTR [esp+0x1c], 0x0
 80ac7e1:  jmp 80ac816
 80ac7e3:  nop
 80ac7e4:  lea esi, [esi]
 80ac7e8:  mov edi, DWORD PTR [esi+0x8]
 80ac7eb:  test edi, edi
 80ac7ed:  je 80ac806
 80ac7ef:  mov edx, DWORD PTR [esp+0x2c]
 80ac7f3:  mov eax, DWORD PTR [edx]
 80ac7f5:  test eax, eax
 80ac7f7:  je 80ac806
 80ac7f9:  mov edx, DWORD PTR [eax+0x4]
 80ac7fc:  mov DWORD PTR [eax+edx*4+0x8], esi
 80ac800:  add edx, 0x1
 80ac803:  mov DWORD PTR [eax+0x4], edx
 80ac806:  mov eax, DWORD PTR [esi]
 80ac808:  lea esi, [esi+eax+0x4]
 80ac80c:  mov ecx, DWORD PTR [esi]
 80ac80e:  test ecx, ecx
 80ac810:  je 80ac8b8
 80ac816:  mov eax, DWORD PTR [esi+0x4]
 80ac819:  test eax, eax
 80ac81b:  je 80ac806
 80ac81d:  test BYTE PTR [ebp+0x10], 0x4
 80ac821:  je 80ac856
 80ac823:  lea edi, [esi+0x4]
 80ac826:  sub edi, eax
 80ac828:  cmp DWORD PTR [esp+0x1c], edi
 80ac82c:  je 80ac856
 80ac82e:  mov eax, edi
 80ac830:  call 80ac480
 80ac835:  mov edx, DWORD PTR [esp+0x28]
 80ac839:  mov DWORD PTR [esp], edx
 80ac83c:  mov edx, DWORD PTR [esp+0x24]
 80ac840:  mov DWORD PTR [esp+0x18], eax
 80ac844:  movzx eax, BYTE PTR [esp+0x18]
 80ac849:  call 80ac5c0
 80ac84e:  mov DWORD PTR [esp+0x1c], edi
 80ac852:  mov DWORD PTR [esp+0x20], eax
 80ac856:  mov eax, DWORD PTR [esp+0x18]
 80ac85a:  test eax, eax
 80ac85c:  je 80ac7e8
 80ac85e:  movzx edi, BYTE PTR [esp+0x18]
 80ac863:  lea eax, [esp+0x3c]
 80ac867:  mov edx, DWORD PTR [esp+0x20]
 80ac86b:  mov DWORD PTR [esp+0x4], eax
 80ac86f:  lea eax, [esi+0x8]
 80ac872:  mov DWORD PTR [esp], eax
 80ac875:  mov eax, edi
 80ac877:  call 80ac2c0
 80ac87c:  mov eax, edi
 80ac87e:  call 80ac250
 80ac883:  mov edx, 0xffffffff
 80ac888:  cmp eax, 0x3
 80ac88b:  ja 80ac89e
 80ac88d:  lea ecx, [eax*8]
 80ac894:  mov edx, 0x1
 80ac899:  shl edx, cl
 80ac89b:  sub edx, 0x1
 80ac89e:  test DWORD PTR [esp+0x3c], edx
 80ac8a2:  jne 80ac7ef
 80ac8a8:  mov eax, DWORD PTR [esi]
 80ac8aa:  lea esi, [esi+eax+0x4]
 80ac8ae:  mov ecx, DWORD PTR [esi]
 80ac8b0:  test ecx, ecx
 80ac8b2:  jne 80ac816
 80ac8b8:  add esp, 0x40
 80ac8bb:  pop esi
 80ac8bc:  pop edi
 80ac8bd:  pop ebp
 80ac8be:  ret
 80ac8bf:  nop

080ac8c0 <fde_single_encoding_compare>:
 80ac8c0:  sub esp, 0x2c
 80ac8c3:  mov DWORD PTR [esp+0x20], esi
 80ac8c7:  mov esi, DWORD PTR [esp+0x30]
 80ac8cb:  mov DWORD PTR [esp+0x28], ebp
 80ac8cf:  mov DWORD PTR [esp+0x24], edi
 80ac8d3:  movzx edi, WORD PTR [esi+0x10]
 80ac8d7:  lea eax, [esi+0x8]
 80ac8da:  lea edx, [esi+0x4]
 80ac8dd:  mov DWORD PTR [esp], eax
 80ac8e0:  shr di, 0x3
 80ac8e4:  and edi, 0xff
 80ac8ea:  mov eax, edi
 80ac8ec:  call 80ac5c0
 80ac8f1:  mov ebp, eax
 80ac8f3:  lea eax, [esp+0x18]
 80ac8f7:  mov edx, ebp
 80ac8f9:  mov DWORD PTR [esp+0x4], eax
 80ac8fd:  mov eax, DWORD PTR [esp+0x34]
 80ac901:  add eax, 0x8
 80ac904:  mov DWORD PTR [esp], eax
 80ac907:  mov eax, edi
 80ac909:  call 80ac2c0
 80ac90e:  lea edx, [esp+0x1c]
 80ac912:  movzx eax, WORD PTR [esi+0x10]
 80ac916:  mov DWORD PTR [esp+0x4], edx
 80ac91a:  mov edx, DWORD PTR [esp+0x38]
 80ac91e:  shr ax, 0x3
 80ac922:  add edx, 0x8
 80ac925:  movzx eax, al
 80ac928:  mov DWORD PTR [esp], edx
 80ac92b:  mov edx, ebp
 80ac92d:  call 80ac2c0
 80ac932:  mov eax, DWORD PTR [esp+0x1c]
 80ac936:  cmp DWORD PTR [esp+0x18], eax
 80ac93a:  mov eax, 0x1
 80ac93f:  mov ecx, DWORD PTR [esp+0x1c]
 80ac943:  mov esi, DWORD PTR [esp+0x20]
 80ac947:  sbb edx, edx
 80ac949:  mov edi, DWORD PTR [esp+0x24]
 80ac94d:  cmp DWORD PTR [esp+0x18], ecx
 80ac951:  mov ebp, DWORD PTR [esp+0x28]
 80ac955:  cmovbe eax, edx
 80ac958:  add esp, 0x2c
 80ac95b:  ret
 80ac95c:  lea esi, [esi]

080ac960 <linear_search_fdes>:
 80ac960:  push ebp
 80ac961:  push edi
 80ac962:  push esi
 80ac963:  mov esi, edx
 80ac965:  sub esp, 0x40
 80ac968:  mov DWORD PTR [esp+0x1c], eax
 80ac96c:  movzx ebp, WORD PTR [eax+0x10]
 80ac970:  add eax, 0x4
 80ac973:  mov DWORD PTR [esp+0x28], eax
 80ac977:  mov eax, DWORD PTR [esp+0x1c]
 80ac97b:  mov edx, DWORD PTR [esp+0x28]
 80ac97f:  shr bp, 0x3
 80ac983:  add eax, 0x8
 80ac986:  and ebp, 0xff
 80ac98c:  mov DWORD PTR [esp+0x2c], eax
 80ac990:  mov DWORD PTR [esp], eax
 80ac993:  mov eax, ebp
 80ac995:  call 80ac5c0
 80ac99a:  mov DWORD PTR [esp+0x24], eax
 80ac99e:  mov eax, DWORD PTR [esi]
 80ac9a0:  test eax, eax
 80ac9a2:  je 80acab0
 80ac9a8:  mov DWORD PTR [esp+0x20], 0x0
 80ac9b0:  jmp 80ac9e8
 80ac9b2:  lea esi, [esi]
 80ac9b8:  mov eax, DWORD PTR [esi+0x8]
 80ac9bb:  mov edx, DWORD PTR [esi+0xc]
 80ac9be:  test eax, eax
 80ac9c0:  mov DWORD PTR [esp+0x38], eax
 80ac9c4:  mov DWORD PTR [esp+0x3c], edx
 80ac9c8:  je 80ac9d8
 80ac9ca:  mov ecx, DWORD PTR [esp+0x50]
 80ac9ce:  sub ecx, eax
 80ac9d0:  cmp ecx, edx
 80ac9d2:  jb 80acaa3
 80ac9d8:  mov eax, DWORD PTR [esi]
 80ac9da:  lea esi, [esi+eax+0x4]
 80ac9de:  mov eax, DWORD PTR [esi]
 80ac9e0:  test eax, eax
 80ac9e2:  je 80acab0
 80ac9e8:  mov eax, DWORD PTR [esi+0x4]
 80ac9eb:  test eax, eax
 80ac9ed:  je 80ac9d8
 80ac9ef:  mov edx, DWORD PTR [esp+0x1c]
 80ac9f3:  test BYTE PTR [edx+0x10], 0x4
 80ac9f7:  je 80aca28
 80ac9f9:  lea edi, [esi+0x4]
 80ac9fc:  sub edi, eax
 80ac9fe:  cmp DWORD PTR [esp+0x20], edi
 80aca02:  je 80aca28
 80aca04:  mov eax, edi
 80aca06:  call 80ac480
 80aca0b:  mov edx, DWORD PTR [esp+0x2c]
 80aca0f:  mov DWORD PTR [esp], edx
 80aca12:  mov edx, DWORD PTR [esp+0x28]
 80aca16:  mov ebp, eax
 80aca18:  movzx eax, al
 80aca1b:  call 80ac5c0
 80aca20:  mov DWORD PTR [esp+0x20], edi
 80aca24:  mov DWORD PTR [esp+0x24], eax
 80aca28:  test ebp, ebp
 80aca2a:  je 80ac9b8
 80aca2c:  mov edx, DWORD PTR [esp+0x24]
 80aca30:  mov ecx, ebp
 80aca32:  lea eax, [esp+0x38]
 80aca36:  movzx edi, cl
 80aca39:  mov DWORD PTR [esp+0x4], eax
 80aca3d:  lea eax, [esi+0x8]
 80aca40:  mov DWORD PTR [esp], eax
 80aca43:  mov eax, edi
 80aca45:  call 80ac2c0
 80aca4a:  mov ecx, edi
 80aca4c:  and ecx, 0xf
 80aca4f:  lea edx, [esp+0x3c]
 80aca53:  mov DWORD PTR [esp+0x4], edx
 80aca57:  xor edx, edx
 80aca59:  mov DWORD PTR [esp], eax
 80aca5c:  mov eax, ecx
 80aca5e:  call 80ac2c0
 80aca63:  mov eax, edi
 80aca65:  call 80ac250
 80aca6a:  mov edx, 0xffffffff
 80aca6f:  cmp eax, 0x3
 80aca72:  ja 80aca85
 80aca74:  lea ecx, [eax*8]
 80aca7b:  mov edx, 0x1
 80aca80:  shl edx, cl
 80aca82:  sub edx, 0x1
 80aca85:  mov eax, DWORD PTR [esp+0x38]
 80aca89:  test edx, eax
 80aca8b:  je 80ac9d8
 80aca91:  mov ecx, DWORD PTR [esp+0x50]
 80aca95:  mov edx, DWORD PTR [esp+0x3c]
 80aca99:  sub ecx, eax
 80aca9b:  cmp ecx, edx
 80aca9d:  jae 80ac9d8
 80acaa3:  add esp, 0x40
 80acaa6:  mov eax, esi
 80acaa8:  pop esi
 80acaa9:  pop edi
 80acaaa:  pop ebp
 80acaab:  ret
 80acaac:  lea esi, [esi]
 80acab0:  add esp, 0x40
 80acab3:  xor esi, esi
 80acab5:  mov eax, esi
 80acab7:  pop esi
 80acab8:  pop edi
 80acab9:  pop ebp
 80acaba:  ret
 80acabb:  nop
 80acabc:  lea esi, [esi]

080acac0 <base_from_cb_data.isra.4>:
 80acac0:  push ebx
 80acac1:  sub esp, 0x8
 80acac4:  call 80ac0a5
 80acac9:  add ebx, 0x2423b
 80acacf:  cmp al, 0xff
 80acad1:  je 80acaf4
 80acad3:  and eax, 0x70
 80acad6:  cmp eax, 0x20
 80acad9:  je 80acb00
 80acadb:  jle 80acaf0
 80acadd:  cmp eax, 0x30
 80acae0:  je 80acb08
 80acae2:  cmp eax, 0x50
 80acae5:  je 80acaf4
 80acae7:  call 8055a00
 80acaec:  lea esi, [esi]
 80acaf0:  test eax, eax
 80acaf2:  jne 80acb18
 80acaf4:  add esp, 0x8
 80acaf7:  xor eax, eax
 80acaf9:  pop ebx
 80acafa:  ret
 80acafb:  nop
 80acafc:  lea esi, [esi]
 80acb00:  mov eax, DWORD PTR [edx]
 80acb02:  add esp, 0x8
 80acb05:  pop ebx
 80acb06:  ret
 80acb07:  nop
 80acb08:  mov eax, DWORD PTR [esp+0x10]
 80acb0c:  mov eax, DWORD PTR [eax]
 80acb0e:  add esp, 0x8
 80acb11:  pop ebx
 80acb12:  ret
 80acb13:  nop
 80acb14:  lea esi, [esi]
 80acb18:  cmp eax, 0x10
 80acb1b:  je 80acaf4
 80acb1d:  call 8055a00
 80acb22:  lea esi, [esi]
 80acb29:  lea edi, [edi]

080acb30 <search_object>:
 80acb30:  push ebp
 80acb31:  push edi
 80acb32:  push esi
 80acb33:  push ebx
 80acb34:  sub esp, 0x4c
 80acb37:  mov DWORD PTR [esp+0x14], eax
 80acb3b:  mov DWORD PTR [esp+0x28], edx
 80acb3f:  movzx edx, BYTE PTR [eax+0x10]
 80acb43:  call 80ac0a5
 80acb48:  add ebx, 0x241bc
 80acb4e:  test dl, 0x1
 80acb51:  jne 80acec0
 80acb57:  mov ecx, eax
 80acb59:  mov eax, DWORD PTR [eax+0x10]
 80acb5c:  mov esi, eax
 80acb5e:  shr esi, 0xb
 80acb61:  test esi, esi
 80acb63:  mov DWORD PTR [esp+0x2c], esi
 80acb67:  je 80ace08
 80acb6d:  mov eax, DWORD PTR [esp+0x2c]
 80acb71:  lea esi, [eax*4+0x8]
 80acb78:  mov DWORD PTR [esp], esi
 80acb7b:  call 804d6f0
 80acb80:  test eax, eax
 80acb82:  mov ebp, eax
 80acb84:  mov DWORD PTR [esp+0x30], eax
 80acb88:  je 80ace61
 80acb8e:  mov DWORD PTR [eax+0x4], 0x0
 80acb95:  mov DWORD PTR [esp], esi
 80acb98:  call 804d6f0
 80acb9d:  test eax, eax
 80acb9f:  mov DWORD PTR [esp+0x34], eax
 80acba3:  je 80acbac
 80acba5:  mov DWORD PTR [eax+0x4], 0x0
 80acbac:  mov eax, DWORD PTR [esp+0x14]
 80acbb0:  test BYTE PTR [eax+0x10], 0x2
 80acbb4:  je 80ad19b
 80acbba:  mov eax, DWORD PTR [esp+0x14]
 80acbbe:  mov esi, DWORD PTR [eax+0xc]
 80acbc1:  mov eax, DWORD PTR [esi]
 80acbc3:  test eax, eax
 80acbc5:  je 80acbef
 80acbc7:  mov edi, DWORD PTR [esp+0x14]
 80acbcb:  nop
 80acbcc:  lea esi, [esi]
 80acbd0:  mov DWORD PTR [esp], eax
 80acbd3:  add esi, 0x4
 80acbd6:  mov eax, edi
 80acbd8:  lea edx, [esp+0x30]
 80acbdc:  call 80ac790
 80acbe1:  mov eax, DWORD PTR [esi]
 80acbe3:  test eax, eax
 80acbe5:  jne 80acbd0
 80acbe7:  mov ebp, DWORD PTR [esp+0x30]
 80acbeb:  test ebp, ebp
 80acbed:  je 80acbfc
 80acbef:  mov eax, DWORD PTR [esp+0x2c]
 80acbf3:  cmp eax, DWORD PTR [ebp+0x4]
 80acbf6:  jne 80ad1f1
 80acbfc:  mov eax, DWORD PTR [esp+0x14]
 80acc00:  lea edx, [ebx-0x23b04]
 80acc06:  mov DWORD PTR [esp+0x18], edx
 80acc0a:  test BYTE PTR [eax+0x10], 0x4
 80acc0e:  jne 80acc29
 80acc10:  test WORD PTR [eax+0x10], 0x7f8
 80acc16:  lea edx, [ebx-0x24c54]
 80acc1c:  lea eax, [ebx-0x24444]
 80acc22:  cmove eax, edx
 80acc25:  mov DWORD PTR [esp+0x18], eax
 80acc29:  mov edi, DWORD PTR [esp+0x34]
 80acc2d:  test edi, edi
 80acc2f:  je 80ad1cb
 80acc35:  mov ecx, DWORD PTR [ebp+0x4]
 80acc38:  test ecx, ecx
 80acc3a:  mov DWORD PTR [esp+0x24], ecx
 80acc3e:  je 80ad1be
 80acc44:  xor eax, eax
 80acc46:  lea edx, [ebx+0x2084]
 80acc4c:  mov esi, edx
 80acc4e:  lea ecx, [ebp+0x8]
 80acc51:  mov DWORD PTR [esp+0x1c], edx
 80acc55:  mov edx, ebp
 80acc57:  lea ebp, [eax+0x1]
 80acc5a:  cmp ebp, DWORD PTR [esp+0x24]
 80acc5e:  mov DWORD PTR [esp+0x20], ecx
 80acc62:  mov DWORD PTR [edi+eax*4+0x8], esi
 80acc66:  je 80accc7
 80acc68:  lea esi, [edx+eax*4+0x8]
 80acc6c:  cmp esi, DWORD PTR [esp+0x1c]
 80acc70:  jne 80acc93
 80acc72:  jmp 80accb8
 80acc74:  lea esi, [esi]
 80acc78:  mov eax, esi
 80acc7a:  sub eax, DWORD PTR [esp+0x20]
 80acc7e:  sar eax, 0x2
 80acc81:  mov esi, DWORD PTR [edi+eax*4+0x8]
 80acc85:  cmp esi, DWORD PTR [esp+0x1c]
 80acc89:  mov DWORD PTR [edi+eax*4+0x8], 0x0
 80acc91:  je 80accb8
 80acc93:  mov eax, DWORD PTR [esi]
 80acc95:  mov DWORD PTR [esp+0x8], eax
 80acc99:  mov eax, DWORD PTR [edx+ebp*4+0x8]
 80acc9d:  mov DWORD PTR [esp+0x10], edx
 80acca1:  mov DWORD PTR [esp+0x4], eax
 80acca5:  mov eax, DWORD PTR [esp+0x14]
 80acca9:  mov DWORD PTR [esp], eax
 80accac:  call DWORD PTR [esp+0x18]
 80accb0:  mov edx, DWORD PTR [esp+0x10]
 80accb4:  test eax, eax
 80accb6:  js 80acc78
 80accb8:  mov eax, ebp
 80accba:  lea ebp, [eax+0x1]
 80accbd:  cmp ebp, DWORD PTR [esp+0x24]
 80accc1:  mov DWORD PTR [edi+eax*4+0x8], esi
 80accc5:  jne 80acc68
 80accc7:  mov ebp, edx
 80accc9:  xor esi, esi
 80acccb:  xor edx, edx
 80acccd:  xor eax, eax
 80acccf:  jmp 80acce8
 80accd1:  lea esi, [esi]
 80accd8:  mov DWORD PTR [ebp+edx*4+0x8], ecx
 80accdc:  add eax, 0x1
 80accdf:  add edx, 0x1
 80acce2:  cmp eax, DWORD PTR [esp+0x24]
 80acce6:  je 80acd04
 80acce8:  mov ecx, DWORD PTR [edi+eax*4+0x8]
 80accec:  test ecx, ecx
 80accee:  mov ecx, DWORD PTR [ebp+eax*4+0x8]
 80accf2:  jne 80accd8
 80accf4:  mov DWORD PTR [edi+esi*4+0x8], ecx
 80accf8:  add eax, 0x1
 80accfb:  add esi, 0x1
 80accfe:  cmp eax, DWORD PTR [esp+0x24]
 80acd02:  jne 80acce8
 80acd04:  mov ecx, DWORD PTR [esp+0x30]
 80acd08:  mov eax, DWORD PTR [esp+0x34]
 80acd0c:  mov DWORD PTR [ebp+0x4], edx
 80acd0f:  mov DWORD PTR [edi+0x4], esi
 80acd12:  mov edx, DWORD PTR [eax+0x4]
 80acd15:  add edx, DWORD PTR [ecx+0x4]
 80acd18:  cmp DWORD PTR [esp+0x2c], edx
 80acd1c:  jne 80ad1f1
 80acd22:  mov DWORD PTR [esp], eax
 80acd25:  mov edx, DWORD PTR [esp+0x18]
 80acd29:  mov eax, DWORD PTR [esp+0x14]
 80acd2d:  call 80ac1b0
 80acd32:  mov esi, DWORD PTR [esp+0x34]
 80acd36:  mov ebp, DWORD PTR [esp+0x30]
 80acd3a:  mov edi, DWORD PTR [esi+0x4]
 80acd3d:  mov DWORD PTR [esp+0x2c], esi
 80acd41:  test edi, edi
 80acd43:  mov DWORD PTR [esp+0x24], edi
 80acd47:  je 80acde5
 80acd4d:  mov edx, DWORD PTR [esp+0x24]
 80acd51:  mov edi, DWORD PTR [ebp+0x4]
 80acd54:  lea edx, [ebp+edx*4]
 80acd58:  mov DWORD PTR [esp+0x20], edx
 80acd5c:  lea esi, [esi]
 80acd60:  sub DWORD PTR [esp+0x24], 0x1
 80acd65:  test edi, edi
 80acd67:  mov ecx, DWORD PTR [esp+0x24]
 80acd6b:  mov esi, DWORD PTR [esp+0x2c]
 80acd6f:  mov ecx, DWORD PTR [esi+ecx*4+0x8]
 80acd73:  mov DWORD PTR [esp+0x1c], ecx
 80acd77:  jne 80acd96
 80acd79:  jmp 80acdb8
 80acd7b:  nop
 80acd7c:  lea esi, [esi]
 80acd80:  mov eax, DWORD PTR [ebp+esi*4+0x8]
 80acd84:  test esi, esi
 80acd86:  mov edi, DWORD PTR [esp+0x20]
 80acd8a:  mov DWORD PTR [edi+esi*4+0x8], eax
 80acd8e:  je 80ad170
 80acd94:  mov edi, esi
 80acd96:  mov edx, DWORD PTR [esp+0x1c]
 80acd9a:  lea esi, [edi-0x1]
 80acd9d:  mov DWORD PTR [esp+0x8], edx
 80acda1:  mov eax, DWORD PTR [ebp+esi*4+0x8]
 80acda5:  mov DWORD PTR [esp+0x4], eax
 80acda9:  mov eax, DWORD PTR [esp+0x14]
 80acdad:  mov DWORD PTR [esp], eax
 80acdb0:  call DWORD PTR [esp+0x18]
 80acdb4:  test eax, eax
 80acdb6:  jg 80acd80
 80acdb8:  mov eax, DWORD PTR [esp+0x24]
 80acdbc:  mov edx, DWORD PTR [esp+0x1c]
 80acdc0:  sub DWORD PTR [esp+0x20], 0x4
 80acdc5:  add eax, edi
 80acdc7:  mov DWORD PTR [ebp+eax*4+0x8], edx
 80acdcb:  mov eax, DWORD PTR [esp+0x24]
 80acdcf:  test eax, eax
 80acdd1:  jne 80acd60
 80acdd3:  mov ecx, DWORD PTR [esp+0x2c]
 80acdd7:  mov esi, DWORD PTR [esp+0x34]
 80acddb:  mov eax, DWORD PTR [ecx+0x4]
 80acdde:  add DWORD PTR [ebp+0x4], eax
 80acde1:  mov DWORD PTR [esp+0x2c], esi
 80acde5:  mov edi, DWORD PTR [esp+0x2c]
 80acde9:  mov DWORD PTR [esp], edi
 80acdec:  call 804b4a0
 80acdf1:  mov ebp, DWORD PTR [esp+0x14]
 80acdf5:  mov eax, DWORD PTR [esp+0x30]
 80acdf9:  mov edx, DWORD PTR [ebp+0xc]
 80acdfc:  mov DWORD PTR [eax], edx
 80acdfe:  mov DWORD PTR [ebp+0xc], eax
 80ace01:  or BYTE PTR [ebp+0x10], 0x1
 80ace05:  jmp 80ace61
 80ace07:  nop
 80ace08:  and edx, 0x2
 80ace0b:  je 80ad03b
 80ace11:  mov esi, DWORD PTR [ecx+0xc]
 80ace14:  mov edx, DWORD PTR [esi]
 80ace16:  test edx, edx
 80ace18:  je 80ad1e0
 80ace1e:  mov edi, DWORD PTR [esp+0x2c]
 80ace22:  mov ebp, ecx
 80ace24:  jmp 80ace37
 80ace26:  xchg ax, ax
 80ace28:  add esi, 0x4
 80ace2b:  add edi, eax
 80ace2d:  mov edx, DWORD PTR [esi]
 80ace2f:  test edx, edx
 80ace31:  je 80ad192
 80ace37:  mov eax, ebp
 80ace39:  call 80ac630
 80ace3e:  cmp eax, 0xff
 80ace41:  jne 80ace28
 80ace43:  mov eax, DWORD PTR [esp+0x14]
 80ace47:  mov DWORD PTR [eax+0x10], 0x0
 80ace4e:  mov WORD PTR [eax+0x10], 0x7f8
 80ace54:  mov edx, DWORD PTR [esp+0x14]
 80ace58:  lea eax, [ebx+0x207c]
 80ace5e:  mov DWORD PTR [edx+0xc], eax
 80ace61:  mov eax, DWORD PTR [esp+0x14]
 80ace65:  xor esi, esi
 80ace67:  mov edx, DWORD PTR [esp+0x28]
 80ace6b:  cmp DWORD PTR [eax], edx
 80ace6d:  ja 80aceb1
 80ace6f:  movzx edx, BYTE PTR [eax+0x10]
 80ace73:  test dl, 0x1
 80ace76:  jne 80acec0
 80ace78:  and edx, 0x2
 80ace7b:  mov eax, DWORD PTR [esp+0x14]
 80ace7f:  je 80ad177
 80ace85:  mov edi, DWORD PTR [eax+0xc]
 80ace88:  mov edx, DWORD PTR [edi]
 80ace8a:  test edx, edx
 80ace8c:  je 80aceb1
 80ace8e:  mov esi, eax
 80ace90:  mov ebp, DWORD PTR [esp+0x28]
 80ace94:  jmp 80acea1
 80ace96:  xchg ax, ax
 80ace98:  add edi, 0x4
 80ace9b:  mov edx, DWORD PTR [edi]
 80ace9d:  test edx, edx
 80ace9f:  je 80aceaf
 80acea1:  mov eax, esi
 80acea3:  mov DWORD PTR [esp], ebp
 80acea6:  call 80ac960
 80aceab:  test eax, eax
 80acead:  je 80ace98
 80aceaf:  mov esi, eax
 80aceb1:  add esp, 0x4c
 80aceb4:  mov eax, esi
 80aceb6:  pop ebx
 80aceb7:  pop esi
 80aceb8:  pop edi
 80aceb9:  pop ebp
 80aceba:  ret
 80acebb:  nop
 80acebc:  lea esi, [esi]
 80acec0:  and edx, 0x4
 80acec3:  je 80acfb0
 80acec9:  mov eax, DWORD PTR [esp+0x14]
 80acecd:  xor esi, esi
 80acecf:  mov eax, DWORD PTR [eax+0xc]
 80aced2:  mov ecx, DWORD PTR [eax+0x4]
 80aced5:  mov DWORD PTR [esp+0x20], eax
 80aced9:  test ecx, ecx
 80acedb:  je 80aceb1
 80acedd:  mov eax, DWORD PTR [esp+0x14]
 80acee1:  lea esi, [esp+0x38]
 80acee5:  lea edi, [esp+0x3c]
 80acee9:  mov DWORD PTR [esp+0x18], 0x0
 80acef1:  mov DWORD PTR [esp+0x1c], edi
 80acef5:  add eax, 0x4
 80acef8:  mov DWORD PTR [esp+0x24], eax
 80acefc:  mov eax, DWORD PTR [esp+0x14]
 80acf00:  mov DWORD PTR [esp+0x14], esi
 80acf04:  add eax, 0x8
 80acf07:  mov DWORD PTR [esp+0x2c], eax
 80acf0b:  jmp 80acf27
 80acf0d:  lea esi, [esi]
 80acf10:  add eax, DWORD PTR [esp+0x3c]
 80acf14:  cmp eax, DWORD PTR [esp+0x28]
 80acf18:  ja 80aceb1
 80acf1a:  add edi, 0x1
 80acf1d:  mov DWORD PTR [esp+0x18], edi
 80acf21:  cmp DWORD PTR [esp+0x18], ecx
 80acf25:  jae 80acfa3
 80acf27:  mov edi, DWORD PTR [esp+0x18]
 80acf2b:  mov ebp, DWORD PTR [esp+0x20]
 80acf2f:  add edi, ecx
 80acf31:  shr edi, 1
 80acf33:  mov esi, DWORD PTR [ebp+edi*4+0x8]
 80acf37:  lea eax, [esi+0x4]
 80acf3a:  sub eax, DWORD PTR [esi+0x4]
 80acf3d:  mov DWORD PTR [esp+0x10], ecx
 80acf41:  call 80ac480
 80acf46:  mov edx, DWORD PTR [esp+0x24]
 80acf4a:  movzx ebp, al
 80acf4d:  mov eax, DWORD PTR [esp+0x2c]
 80acf51:  mov DWORD PTR [esp], eax
 80acf54:  mov eax, ebp
 80acf56:  call 80ac5c0
 80acf5b:  mov edx, DWORD PTR [esp+0x14]
 80acf5f:  mov DWORD PTR [esp+0x4], edx
 80acf63:  lea edx, [esi+0x8]
 80acf66:  mov DWORD PTR [esp], edx
 80acf69:  mov edx, eax
 80acf6b:  mov eax, ebp
 80acf6d:  call 80ac2c0
 80acf72:  mov edx, DWORD PTR [esp+0x1c]
 80acf76:  and ebp, 0xf
 80acf79:  mov DWORD PTR [esp+0x4], edx
 80acf7d:  xor edx, edx
 80acf7f:  mov DWORD PTR [esp], eax
 80acf82:  mov eax, ebp
 80acf84:  call 80ac2c0
 80acf89:  mov eax, DWORD PTR [esp+0x38]
 80acf8d:  cmp eax, DWORD PTR [esp+0x28]
 80acf91:  mov ecx, DWORD PTR [esp+0x10]
 80acf95:  jbe 80acf10
 80acf9b:  mov ecx, edi
 80acf9d:  cmp DWORD PTR [esp+0x18], ecx
 80acfa1:  jb 80acf27
 80acfa3:  add esp, 0x4c
 80acfa6:  xor esi, esi
 80acfa8:  pop ebx
 80acfa9:  mov eax, esi
 80acfab:  pop esi
 80acfac:  pop edi
 80acfad:  pop ebp
 80acfae:  ret
 80acfaf:  nop
 80acfb0:  mov ecx, DWORD PTR [esp+0x14]
 80acfb4:  movzx eax, WORD PTR [ecx+0x10]
 80acfb8:  test ax, 0x7f8
 80acfbc:  jne 80ad098
 80acfc2:  mov ebp, DWORD PTR [ecx+0xc]
 80acfc5:  xor edx, edx
 80acfc7:  mov edi, DWORD PTR [ebp+0x4]
 80acfca:  mov DWORD PTR [esp+0x18], ebp
 80acfce:  cmp edx, edi
 80acfd0:  jae 80acfa3
 80acfd2:  mov ecx, DWORD PTR [esp+0x18]
 80acfd6:  lea eax, [edi+edx]
 80acfd9:  shr eax, 1
 80acfdb:  mov esi, DWORD PTR [ecx+eax*4+0x8]
 80acfdf:  mov ecx, DWORD PTR [esi+0x8]
 80acfe2:  mov ebp, DWORD PTR [esi+0xc]
 80acfe5:  cmp DWORD PTR [esp+0x28], ecx
 80acfe9:  mov DWORD PTR [esp+0x14], ebp
 80acfed:  jae 80ad028
 80acfef:  mov ebp, DWORD PTR [esp+0x18]
 80acff3:  mov DWORD PTR [esp+0x1c], eax
 80acff7:  jmp 80ad004
 80acff9:  lea esi, [esi]
 80ad000:  mov DWORD PTR [esp+0x1c], eax
 80ad004:  cmp edx, eax
 80ad006:  jae 80acfa3
 80ad008:  add eax, edx
 80ad00a:  shr eax, 1
 80ad00c:  mov esi, DWORD PTR [ebp+eax*4+0x8]
 80ad010:  mov ecx, DWORD PTR [esi+0x8]
 80ad013:  mov edi, DWORD PTR [esi+0xc]
 80ad016:  cmp DWORD PTR [esp+0x28], ecx
 80ad01a:  mov DWORD PTR [esp+0x14], edi
 80ad01e:  jb 80ad000
 80ad020:  mov edi, DWORD PTR [esp+0x1c]
 80ad024:  mov DWORD PTR [esp+0x18], ebp
 80ad028:  add ecx, DWORD PTR [esp+0x14]
 80ad02c:  cmp DWORD PTR [esp+0x28], ecx
 80ad030:  jb 80aceb1
 80ad036:  lea edx, [eax+0x1]
 80ad039:  jmp 80acfce
 80ad03b:  mov eax, DWORD PTR [esp+0x14]
 80ad03f:  mov edx, DWORD PTR [eax+0xc]
 80ad042:  call 80ac630
 80ad047:  cmp eax, 0xff
 80ad04a:  mov DWORD PTR [esp+0x2c], eax
 80ad04e:  je 80ace43
 80ad054:  mov esi, DWORD PTR [esp+0x14]
 80ad058:  mov edx, DWORD PTR [esp+0x2c]
 80ad05c:  mov eax, DWORD PTR [esi+0x10]
 80ad05f:  and edx, 0x1fffff
 80ad065:  mov ecx, edx
 80ad067:  shl ecx, 0xb
 80ad06a:  and eax, 0x7ff
 80ad06f:  or eax, ecx
 80ad071:  mov DWORD PTR [esi+0x10], eax
 80ad074:  cmp DWORD PTR [esp+0x2c], edx
 80ad078:  je 80ad082
 80ad07a:  and eax, 0x7ff
 80ad07f:  mov DWORD PTR [esi+0x10], eax
 80ad082:  mov esi, DWORD PTR [esp+0x2c]
 80ad086:  test esi, esi
 80ad088:  je 80ace61
 80ad08e:  jmp 80acb6d
 80ad093:  nop
 80ad094:  lea esi, [esi]
 80ad098:  mov edx, DWORD PTR [esp+0x14]
 80ad09c:  shr ax, 0x3
 80ad0a0:  xor esi, esi
 80ad0a2:  movzx eax, al
 80ad0a5:  mov DWORD PTR [esp+0x18], eax
 80ad0a9:  mov eax, DWORD PTR [esp+0x14]
 80ad0ad:  mov edx, DWORD PTR [edx+0xc]
 80ad0b0:  add eax, 0x8
 80ad0b3:  mov DWORD PTR [esp], eax
 80ad0b6:  mov eax, DWORD PTR [esp+0x18]
 80ad0ba:  mov DWORD PTR [esp+0x20], edx
 80ad0be:  mov edx, DWORD PTR [esp+0x14]
 80ad0c2:  add edx, 0x4
 80ad0c5:  call 80ac5c0
 80ad0ca:  mov ecx, DWORD PTR [esp+0x20]
 80ad0ce:  mov ebp, DWORD PTR [ecx+0x4]
 80ad0d1:  mov DWORD PTR [esp+0x24], eax
 80ad0d5:  test ebp, ebp
 80ad0d7:  je 80aceb1
 80ad0dd:  mov esi, DWORD PTR [esp+0x18]
 80ad0e1:  lea edi, [esp+0x38]
 80ad0e5:  xor ecx, ecx
 80ad0e7:  mov DWORD PTR [esp+0x14], edi
 80ad0eb:  mov edi, ecx
 80ad0ed:  and esi, 0xf
 80ad0f0:  mov DWORD PTR [esp+0x2c], esi
 80ad0f4:  lea esi, [esp+0x3c]
 80ad0f8:  mov DWORD PTR [esp+0x1c], esi
 80ad0fc:  jmp 80ad119
 80ad0fe:  xchg ax, ax
 80ad100:  add eax, DWORD PTR [esp+0x38]
 80ad104:  cmp eax, DWORD PTR [esp+0x28]
 80ad108:  ja 80ad1b7
 80ad10e:  lea edi, [esi+0x1]
 80ad111:  cmp ebp, edi
 80ad113:  jbe 80acfa3
 80ad119:  mov eax, DWORD PTR [esp+0x20]
 80ad11d:  lea esi, [edi+ebp]
 80ad120:  shr esi, 1
 80ad122:  mov edx, DWORD PTR [esp+0x1c]
 80ad126:  mov ecx, DWORD PTR [eax+esi*4+0x8]
 80ad12a:  mov DWORD PTR [esp+0x4], edx
 80ad12e:  mov edx, DWORD PTR [esp+0x24]
 80ad132:  lea eax, [ecx+0x8]
 80ad135:  mov DWORD PTR [esp], eax
 80ad138:  mov eax, DWORD PTR [esp+0x18]
 80ad13c:  mov DWORD PTR [esp+0x10], ecx
 80ad140:  call 80ac2c0
 80ad145:  mov edx, DWORD PTR [esp+0x14]
 80ad149:  mov DWORD PTR [esp+0x4], edx
 80ad14d:  xor edx, edx
 80ad14f:  mov DWORD PTR [esp], eax
 80ad152:  mov eax, DWORD PTR [esp+0x2c]
 80ad156:  call 80ac2c0
 80ad15b:  mov eax, DWORD PTR [esp+0x3c]
 80ad15f:  cmp eax, DWORD PTR [esp+0x28]
 80ad163:  mov ecx, DWORD PTR [esp+0x10]
 80ad167:  jbe 80ad100
 80ad169:  mov ebp, esi
 80ad16b:  jmp 80ad111
 80ad16d:  lea esi, [esi]
 80ad170:  xor edi, edi
 80ad172:  jmp 80acdb8
 80ad177:  mov ecx, DWORD PTR [esp+0x28]
 80ad17b:  mov edx, DWORD PTR [eax+0xc]
 80ad17e:  mov DWORD PTR [esp], ecx
 80ad181:  call 80ac960
 80ad186:  add esp, 0x4c
 80ad189:  pop ebx
 80ad18a:  mov esi, eax
 80ad18c:  mov eax, esi
 80ad18e:  pop esi
 80ad18f:  pop edi
 80ad190:  pop ebp
 80ad191:  ret
 80ad192:  mov DWORD PTR [esp+0x2c], edi
 80ad196:  jmp 80ad054
 80ad19b:  mov edx, DWORD PTR [esp+0x14]
 80ad19f:  mov eax, DWORD PTR [edx+0xc]
 80ad1a2:  lea edx, [esp+0x30]
 80ad1a6:  mov DWORD PTR [esp], eax
 80ad1a9:  mov eax, DWORD PTR [esp+0x14]
 80ad1ad:  call 80ac790
 80ad1b2:  jmp 80acbe7
 80ad1b7:  mov esi, ecx
 80ad1b9:  jmp 80aceb1
 80ad1be:  mov eax, edi
 80ad1c0:  mov ecx, ebp
 80ad1c2:  xor esi, esi
 80ad1c4:  xor edx, edx
 80ad1c6:  jmp 80acd0c
 80ad1cb:  mov edx, DWORD PTR [esp+0x18]
 80ad1cf:  mov eax, DWORD PTR [esp+0x14]
 80ad1d3:  mov DWORD PTR [esp], ebp
 80ad1d6:  call 80ac1b0
 80ad1db:  jmp 80acdf1
 80ad1e0:  mov edx, DWORD PTR [esp+0x14]
 80ad1e4:  and eax, 0x7ff
 80ad1e9:  mov DWORD PTR [edx+0x10], eax
 80ad1ec:  jmp 80ace61
 80ad1f1:  call 8055a00
 80ad1f6:  lea esi, [esi]
 80ad1f9:  lea edi, [edi]

080ad200 <fde_mixed_encoding_compare>:
 80ad200:  push ebp
 80ad201:  push edi
 80ad202:  push esi
 80ad203:  sub esp, 0x30
 80ad206:  mov esi, DWORD PTR [esp+0x44]
 80ad20a:  mov edi, DWORD PTR [esp+0x40]
 80ad20e:  lea eax, [esi+0x4]
 80ad211:  sub eax, DWORD PTR [esi+0x4]
 80ad214:  add esi, 0x8
 80ad217:  call 80ac480
 80ad21c:  lea ecx, [edi+0x4]
 80ad21f:  add edi, 0x8
 80ad222:  mov edx, ecx
 80ad224:  mov DWORD PTR [esp], edi
 80ad227:  mov DWORD PTR [esp+0x1c], ecx
 80ad22b:  movzx ebp, al
 80ad22e:  mov eax, ebp
 80ad230:  call 80ac5c0
 80ad235:  lea edx, [esp+0x28]
 80ad239:  mov DWORD PTR [esp+0x4], edx
 80ad23d:  mov DWORD PTR [esp], esi
 80ad240:  mov edx, eax
 80ad242:  mov eax, ebp
 80ad244:  call 80ac2c0
 80ad249:  mov edx, DWORD PTR [esp+0x48]
 80ad24d:  mov eax, DWORD PTR [esp+0x48]
 80ad251:  add eax, 0x4
 80ad254:  sub eax, DWORD PTR [edx+0x4]
 80ad257:  call 80ac480
 80ad25c:  mov ecx, DWORD PTR [esp+0x1c]
 80ad260:  mov DWORD PTR [esp], edi
 80ad263:  mov edx, ecx
 80ad265:  movzx esi, al
 80ad268:  mov eax, esi
 80ad26a:  call 80ac5c0
 80ad26f:  lea edx, [esp+0x2c]
 80ad273:  mov DWORD PTR [esp+0x4], edx
 80ad277:  mov edx, DWORD PTR [esp+0x48]
 80ad27b:  add edx, 0x8
 80ad27e:  mov DWORD PTR [esp], edx
 80ad281:  mov edx, eax
 80ad283:  mov eax, esi
 80ad285:  call 80ac2c0
 80ad28a:  mov ecx, DWORD PTR [esp+0x2c]
 80ad28e:  mov eax, 0x1
 80ad293:  cmp DWORD PTR [esp+0x28], ecx
 80ad297:  sbb edx, edx
 80ad299:  cmp DWORD PTR [esp+0x28], ecx
 80ad29d:  cmovbe eax, edx
 80ad2a0:  add esp, 0x30
 80ad2a3:  pop esi
 80ad2a4:  pop edi
 80ad2a5:  pop ebp
 80ad2a6:  ret
 80ad2a7:  mov esi, esi
 80ad2a9:  lea edi, [edi]

080ad2b0 <_Unwind_IteratePhdrCallback>:
 80ad2b0:  push ebp
 80ad2b1:  push edi
 80ad2b2:  push esi
 80ad2b3:  push ebx
 80ad2b4:  sub esp, 0x7c
 80ad2b7:  mov edi, DWORD PTR [esp+0x90]
 80ad2be:  mov edx, DWORD PTR [esp+0x94]
 80ad2c5:  call 80ac0a5
 80ad2ca:  add ebx, 0x23a3a
 80ad2d0:  mov ecx, DWORD PTR [edi]
 80ad2d2:  cmp edx, 0x1f
 80ad2d5:  mov eax, DWORD PTR [edi+0x8]
 80ad2d8:  seta BYTE PTR [esp+0x3f]
 80ad2dd:  mov DWORD PTR [esp+0x28], ecx
 80ad2e1:  jbe 80ad3b0
 80ad2e7:  mov esi, DWORD PTR [esp+0x98]
 80ad2ee:  mov ecx, DWORD PTR [esi+0x14]
 80ad2f1:  test ecx, ecx
 80ad2f3:  je 80ad3b0
 80ad2f9:  mov edx, DWORD PTR [edi+0x10]
 80ad2fc:  mov ebp, DWORD PTR [edi+0x14]
 80ad2ff:  mov esi, DWORD PTR [ebx+0x738]
 80ad305:  mov ecx, DWORD PTR [ebx+0x734]
 80ad30b:  xor esi, ebp
 80ad30d:  xor ecx, edx
 80ad30f:  or esi, ecx
 80ad311:  mov ecx, DWORD PTR [edi+0x18]
 80ad314:  mov esi, DWORD PTR [edi+0x1c]
 80ad317:  mov DWORD PTR [esp+0x20], ecx
 80ad31b:  mov DWORD PTR [esp+0x24], esi
 80ad31f:  je 80ad510
 80ad325:  mov DWORD PTR [ebx+0x738], ebp
 80ad32b:  mov ebp, DWORD PTR [esp+0x20]
 80ad32f:  mov DWORD PTR [ebx+0x734], edx
 80ad335:  mov edx, DWORD PTR [esp+0x24]
 80ad339:  mov DWORD PTR [ebx+0x1f9c], ebp
 80ad33f:  lea ebp, [ebx+0x1fbc]
 80ad345:  mov DWORD PTR [ebx+0x1fa0], edx
 80ad34b:  mov ecx, ebp
 80ad34d:  mov edx, 0x1
 80ad352:  lea esi, [esi]
 80ad358:  lea esi, [edx+edx*2]
 80ad35b:  add edx, 0x1
 80ad35e:  lea esi, [ebp+esi*8]
 80ad362:  mov DWORD PTR [ecx], 0x0
 80ad368:  mov DWORD PTR [ecx+0x4], 0x0
 80ad36f:  mov DWORD PTR [ecx+0x14], esi
 80ad372:  add ecx, 0x18
 80ad375:  cmp edx, 0x9
 80ad378:  jne 80ad358
 80ad37a:  mov ecx, DWORD PTR [esp+0x98]
 80ad381:  mov DWORD PTR [ebx+0x2078], 0x0
 80ad38b:  mov DWORD PTR [ebx+0x1fa4], ebp
 80ad391:  mov DWORD PTR [esp+0x34], 0x0
 80ad399:  mov DWORD PTR [ecx+0x14], 0x0
 80ad3a0:  mov DWORD PTR [esp+0x38], 0x0
 80ad3a8:  jmp 80ad3c9
 80ad3aa:  lea esi, [esi]
 80ad3b0:  cmp edx, 0xd
 80ad3b3:  jbe 80ad690
 80ad3b9:  mov DWORD PTR [esp+0x34], 0x0
 80ad3c1:  mov DWORD PTR [esp+0x38], 0x0
 80ad3c9:  movzx edx, WORD PTR [edi+0xc]
 80ad3cd:  sub edx, 0x1
 80ad3d0:  cmp edx, 0xff
 80ad3d3:  je 80ad500
 80ad3d9:  mov DWORD PTR [esp+0x30], 0x0
 80ad3e1:  xor ecx, ecx
 80ad3e3:  mov DWORD PTR [esp+0x2c], 0x0
 80ad3eb:  mov DWORD PTR [esp+0x20], 0x0
 80ad3f3:  mov DWORD PTR [esp+0x24], 0x0
 80ad3fb:  jmp 80ad41d
 80ad3fd:  lea esi, [esi]
 80ad400:  cmp esi, 0x6474e550
 80ad406:  je 80ad4f0
 80ad40c:  cmp esi, 0x2
 80ad40f:  cmove ecx, eax
 80ad412:  sub edx, 0x1
 80ad415:  add eax, 0x20
 80ad418:  cmp edx, 0xff
 80ad41b:  je 80ad470
 80ad41d:  mov esi, DWORD PTR [eax]
 80ad41f:  cmp esi, 0x1
 80ad422:  jne 80ad400
 80ad424:  mov ebp, DWORD PTR [esp+0x98]
 80ad42b:  mov edi, DWORD PTR [esp+0x28]
 80ad42f:  add edi, DWORD PTR [eax+0x8]
 80ad432:  mov esi, DWORD PTR [ebp]
 80ad435:  cmp edi, esi
 80ad437:  ja 80ad412
 80ad439:  mov ebp, DWORD PTR [eax+0x14]
 80ad43c:  add ebp, edi
 80ad43e:  cmp esi, ebp
 80ad440:  mov esi, 0x1
 80ad445:  cmovae edi, DWORD PTR [esp+0x2c]
 80ad44a:  cmovae esi, DWORD PTR [esp+0x20]
 80ad44f:  mov DWORD PTR [esp+0x18], ebp
 80ad453:  cmovae ebp, DWORD PTR [esp+0x30]
 80ad458:  sub edx, 0x1
 80ad45b:  add eax, 0x20
 80ad45e:  cmp edx, 0xff
 80ad461:  mov DWORD PTR [esp+0x2c], edi
 80ad465:  mov DWORD PTR [esp+0x30], ebp
 80ad469:  mov DWORD PTR [esp+0x20], esi
 80ad46d:  jne 80ad41d
 80ad46f:  nop
 80ad470:  mov eax, DWORD PTR [esp+0x20]
 80ad474:  test eax, eax
 80ad476:  je 80ad500
 80ad47c:  cmp BYTE PTR [esp+0x3f], 0x0
 80ad481:  je 80ad4c3
 80ad483:  mov eax, DWORD PTR [esp+0x38]
 80ad487:  test eax, eax
 80ad489:  je 80ad497
 80ad48b:  mov ebp, DWORD PTR [esp+0x34]
 80ad48f:  test ebp, ebp
 80ad491:  jne 80ad57b
 80ad497:  mov edi, DWORD PTR [ebx+0x1fa4]
 80ad49d:  mov DWORD PTR [esp+0x34], edi
 80ad4a1:  mov esi, DWORD PTR [esp+0x34]
 80ad4a5:  mov edi, DWORD PTR [esp+0x28]
 80ad4a9:  mov ebp, DWORD PTR [esp+0x24]
 80ad4ad:  mov eax, DWORD PTR [esp+0x2c]
 80ad4b1:  mov edx, DWORD PTR [esp+0x30]
 80ad4b5:  mov DWORD PTR [esi+0x8], edi
 80ad4b8:  mov DWORD PTR [esi+0xc], ebp
 80ad4bb:  mov DWORD PTR [esi+0x10], ecx
 80ad4be:  mov DWORD PTR [esi], eax
 80ad4c0:  mov DWORD PTR [esi+0x4], edx
 80ad4c3:  mov edi, DWORD PTR [esp+0x24]
 80ad4c7:  test edi, edi
 80ad4c9:  je 80ad500
 80ad4cb:  mov ecx, DWORD PTR [esp+0x24]
 80ad4cf:  mov esi, 0x1
 80ad4d4:  mov ebp, DWORD PTR [esp+0x28]
 80ad4d8:  add ebp, DWORD PTR [ecx+0x8]
 80ad4db:  cmp BYTE PTR [ebp], 0x1
 80ad4df:  je 80ad5a0
 80ad4e5:  add esp, 0x7c
 80ad4e8:  mov eax, esi
 80ad4ea:  pop ebx
 80ad4eb:  pop esi
 80ad4ec:  pop edi
 80ad4ed:  pop ebp
 80ad4ee:  ret
 80ad4ef:  nop
 80ad4f0:  mov DWORD PTR [esp+0x24], eax
 80ad4f4:  jmp 80ad412
 80ad4f9:  lea esi, [esi]
 80ad500:  add esp, 0x7c
 80ad503:  xor esi, esi
 80ad505:  pop ebx
 80ad506:  mov eax, esi
 80ad508:  pop esi
 80ad509:  pop edi
 80ad50a:  pop ebp
 80ad50b:  ret
 80ad50c:  lea esi, [esi]
 80ad510:  xor esi, DWORD PTR [ebx+0x1fa0]
 80ad516:  xor ecx, DWORD PTR [ebx+0x1f9c]
 80ad51c:  or esi, ecx
 80ad51e:  jne 80ad325
 80ad524:  mov ebp, DWORD PTR [ebx+0x1fa4]
 80ad52a:  test ebp, ebp
 80ad52c:  mov DWORD PTR [esp+0x20], ebp
 80ad530:  je 80ad3b9
 80ad536:  mov ecx, DWORD PTR [esp+0x98]
 80ad53d:  mov edx, DWORD PTR [esp+0x20]
 80ad541:  mov DWORD PTR [esp+0x38], 0x0
 80ad549:  mov ebp, DWORD PTR [ecx]
 80ad54b:  jmp 80ad556
 80ad54d:  lea esi, [esi]
 80ad550:  mov DWORD PTR [esp+0x38], edx
 80ad554:  mov edx, ecx
 80ad556:  mov ecx, DWORD PTR [edx]
 80ad558:  mov esi, DWORD PTR [edx+0x4]
 80ad55b:  cmp ecx, ebp
 80ad55d:  ja 80ad567
 80ad55f:  cmp esi, ebp
 80ad561:  ja 80ad764
 80ad567:  or esi, ecx
 80ad569:  je 80ad572
 80ad56b:  mov ecx, DWORD PTR [edx+0x14]
 80ad56e:  test ecx, ecx
 80ad570:  jne 80ad550
 80ad572:  mov DWORD PTR [esp+0x34], edx
 80ad576:  jmp 80ad3c9
 80ad57b:  mov ebp, DWORD PTR [esp+0x34]
 80ad57f:  mov edx, DWORD PTR [esp+0x38]
 80ad583:  mov eax, DWORD PTR [ebp+0x14]
 80ad586:  mov DWORD PTR [edx+0x14], eax
 80ad589:  mov eax, DWORD PTR [ebx+0x1fa4]
 80ad58f:  mov DWORD PTR [ebx+0x1fa4], ebp
 80ad595:  mov DWORD PTR [ebp+0x14], eax
 80ad598:  jmp 80ad4a1
 80ad59d:  lea esi, [esi]
 80ad5a0:  mov eax, DWORD PTR [esp+0x98]
 80ad5a7:  mov ecx, DWORD PTR [esp+0x98]
 80ad5ae:  movzx edi, BYTE PTR [ebp+0x1]
 80ad5b2:  add eax, 0x4
 80ad5b5:  add ecx, 0x8
 80ad5b8:  mov edx, eax
 80ad5ba:  mov DWORD PTR [esp], ecx
 80ad5bd:  mov DWORD PTR [esp+0x28], eax
 80ad5c1:  mov eax, edi
 80ad5c3:  mov DWORD PTR [esp+0x20], ecx
 80ad5c7:  call 80acac0
 80ad5cc:  lea edx, [esp+0x64]
 80ad5d0:  mov DWORD PTR [esp+0x4], edx
 80ad5d4:  lea edx, [ebp+0x4]
 80ad5d7:  mov DWORD PTR [esp], edx
 80ad5da:  mov edx, eax
 80ad5dc:  mov eax, edi
 80ad5de:  call 80ac2c0
 80ad5e3:  mov ecx, eax
 80ad5e5:  movzx eax, BYTE PTR [ebp+0x2]
 80ad5e9:  cmp al, 0xff
 80ad5eb:  je 80ad5f7
 80ad5ed:  cmp BYTE PTR [ebp+0x3], 0x3b
 80ad5f1:  je 80ad69a
 80ad5f7:  mov ebp, DWORD PTR [esp+0x98]
 80ad5fe:  mov esi, 0x1
 80ad603:  mov DWORD PTR [esp+0x5c], 0x0
 80ad60b:  mov edx, DWORD PTR [esp+0x64]
 80ad60f:  mov DWORD PTR [esp+0x4c], 0x0
 80ad617:  mov eax, DWORD PTR [ebp+0x4]
 80ad61a:  mov DWORD PTR [esp+0x58], edx
 80ad61e:  mov DWORD PTR [esp+0x50], eax
 80ad622:  mov eax, DWORD PTR [ebp+0x8]
 80ad625:  mov BYTE PTR [esp+0x5c], 0x4
 80ad62a:  mov DWORD PTR [esp+0x54], eax
 80ad62e:  mov eax, DWORD PTR [ebp]
 80ad631:  mov DWORD PTR [esp], eax
 80ad634:  lea eax, [esp+0x4c]
 80ad638:  call 80ac960
 80ad63d:  test eax, eax
 80ad63f:  mov edx, eax
 80ad641:  mov DWORD PTR [ebp+0x10], eax
 80ad644:  je 80ad4e5
 80ad64a:  lea eax, [eax+0x4]
 80ad64d:  sub eax, DWORD PTR [edx+0x4]
 80ad650:  call 80ac480
 80ad655:  mov ecx, DWORD PTR [esp+0x20]
 80ad659:  mov edx, DWORD PTR [esp+0x28]
 80ad65d:  mov DWORD PTR [esp], ecx
 80ad660:  movzx edi, al
 80ad663:  mov eax, edi
 80ad665:  call 80acac0
 80ad66a:  lea edx, [esp+0x6c]
 80ad66e:  mov DWORD PTR [esp+0x4], edx
 80ad672:  mov edx, DWORD PTR [ebp+0x10]
 80ad675:  add edx, 0x8
 80ad678:  mov DWORD PTR [esp], edx
 80ad67b:  mov edx, eax
 80ad67d:  mov eax, edi
 80ad67f:  call 80ac2c0
 80ad684:  mov eax, DWORD PTR [esp+0x6c]
 80ad688:  mov DWORD PTR [ebp+0xc], eax
 80ad68b:  jmp 80ad4e5
 80ad690:  mov esi, 0xffffffff
 80ad695:  jmp 80ad4e5
 80ad69a:  movzx edi, al
 80ad69d:  mov eax, DWORD PTR [esp+0x20]
 80ad6a1:  mov edx, DWORD PTR [esp+0x28]
 80ad6a5:  mov DWORD PTR [esp+0x1c], ecx
 80ad6a9:  mov DWORD PTR [esp], eax
 80ad6ac:  mov eax, edi
 80ad6ae:  call 80acac0
 80ad6b3:  mov ecx, DWORD PTR [esp+0x1c]
 80ad6b7:  lea edx, [esp+0x68]
 80ad6bb:  mov DWORD PTR [esp+0x4], edx
 80ad6bf:  mov DWORD PTR [esp], ecx
 80ad6c2:  mov edx, eax
 80ad6c4:  mov eax, edi
 80ad6c6:  call 80ac2c0
 80ad6cb:  mov edi, eax
 80ad6cd:  mov eax, DWORD PTR [esp+0x68]
 80ad6d1:  test eax, eax
 80ad6d3:  je 80ad4e5
 80ad6d9:  test edi, 0x3
 80ad6df:  jne 80ad5f7
 80ad6e5:  mov ecx, DWORD PTR [esp+0x98]
 80ad6ec:  mov edx, DWORD PTR [edi]
 80ad6ee:  mov ecx, DWORD PTR [ecx]
 80ad6f0:  add edx, ebp
 80ad6f2:  cmp ecx, edx
 80ad6f4:  mov DWORD PTR [esp+0x28], ecx
 80ad6f8:  jb 80ad4e5
 80ad6fe:  sub eax, 0x1
 80ad701:  lea esi, [edi+eax*8]
 80ad704:  mov edx, DWORD PTR [esi]
 80ad706:  add edx, ebp
 80ad708:  cmp ecx, edx
 80ad70a:  jae 80ad798
 80ad710:  test eax, eax
 80ad712:  je 80ad80b
 80ad718:  mov ecx, eax
 80ad71a:  xor edx, edx
 80ad71c:  mov DWORD PTR [esp+0x30], ebp
 80ad720:  mov DWORD PTR [esp+0x24], edi
 80ad724:  jmp 80ad748
 80ad726:  add eax, 0x1
 80ad729:  mov ebp, DWORD PTR [esp+0x30]
 80ad72d:  add ebp, DWORD PTR [edi+eax*8]
 80ad730:  cmp DWORD PTR [esp+0x28], ebp
 80ad734:  mov DWORD PTR [esp+0x2c], eax
 80ad738:  jb 80ad803
 80ad73e:  mov edx, eax
 80ad740:  cmp edx, ecx
 80ad742:  jae 80ad80b
 80ad748:  mov edi, DWORD PTR [esp+0x24]
 80ad74c:  lea eax, [edx+ecx]
 80ad74f:  shr eax, 1
 80ad751:  mov ebp, DWORD PTR [esp+0x30]
 80ad755:  lea esi, [edi+eax*8]
 80ad758:  add ebp, DWORD PTR [esi]
 80ad75a:  cmp DWORD PTR [esp+0x28], ebp
 80ad75e:  jae 80ad726
 80ad760:  mov ecx, eax
 80ad762:  jmp 80ad740
 80ad764:  mov esi, DWORD PTR [edx+0x8]
 80ad767:  mov edi, DWORD PTR [edx+0xc]
 80ad76a:  cmp DWORD PTR [esp+0x20], edx
 80ad76e:  mov DWORD PTR [esp+0x28], esi
 80ad772:  mov DWORD PTR [esp+0x24], edi
 80ad776:  je 80ad4c3
 80ad77c:  mov eax, DWORD PTR [edx+0x14]
 80ad77f:  mov ebp, DWORD PTR [esp+0x38]
 80ad783:  mov DWORD PTR [ebx+0x1fa4], edx
 80ad789:  mov DWORD PTR [ebp+0x14], eax
 80ad78c:  mov eax, DWORD PTR [esp+0x20]
 80ad790:  mov DWORD PTR [edx+0x14], eax
 80ad793:  jmp 80ad4c3
 80ad798:  mov ecx, DWORD PTR [esi+0x4]
 80ad79b:  add ecx, ebp
 80ad79d:  lea eax, [ecx+0x4]
 80ad7a0:  sub eax, DWORD PTR [ecx+0x4]
 80ad7a3:  mov DWORD PTR [esp+0x1c], ecx
 80ad7a7:  call 80ac480
 80ad7ac:  movzx edi, al
 80ad7af:  mov eax, edi
 80ad7b1:  and edi, 0xf
 80ad7b4:  call 80ac250
 80ad7b9:  mov ecx, DWORD PTR [esp+0x1c]
 80ad7bd:  lea edx, [esp+0x6c]
 80ad7c1:  mov DWORD PTR [esp+0x4], edx
 80ad7c5:  xor edx, edx
 80ad7c7:  lea eax, [ecx+eax+0x8]
 80ad7cb:  mov DWORD PTR [esp], eax
 80ad7ce:  mov eax, edi
 80ad7d0:  call 80ac2c0
 80ad7d5:  mov eax, DWORD PTR [esp+0x6c]
 80ad7d9:  add ebp, DWORD PTR [esi]
 80ad7db:  mov esi, DWORD PTR [esp+0x98]
 80ad7e2:  mov ecx, DWORD PTR [esp+0x1c]
 80ad7e6:  add eax, ebp
 80ad7e8:  cmp DWORD PTR [esi], eax
 80ad7ea:  jae 80ad7ef
 80ad7ec:  mov DWORD PTR [esi+0x10], ecx
 80ad7ef:  mov edi, DWORD PTR [esp+0x98]
 80ad7f6:  mov esi, 0x1
 80ad7fb:  mov DWORD PTR [edi+0xc], ebp
 80ad7fe:  jmp 80ad4e5
 80ad803:  cmp ecx, edx
 80ad805:  mov ebp, DWORD PTR [esp+0x30]
 80ad809:  ja 80ad798
 80ad80b:  call 8055a00

080ad810 <__register_frame_info_bases>:
 80ad810:  sub esp, 0x1c
 80ad813:  mov eax, DWORD PTR [esp+0x20]
 80ad817:  mov DWORD PTR [esp+0x10], ebx
 80ad81b:  call 80ac0a5
 80ad820:  add ebx, 0x234e4
 80ad826:  mov DWORD PTR [esp+0x14], esi
 80ad82a:  mov esi, DWORD PTR [esp+0x24]
 80ad82e:  test eax, eax
 80ad830:  mov DWORD PTR [esp+0x18], edi
 80ad834:  je 80ad88f
 80ad836:  mov edx, DWORD PTR [eax]
 80ad838:  test edx, edx
 80ad83a:  je 80ad88f
 80ad83c:  mov edx, DWORD PTR [esp+0x28]
 80ad840:  mov edi, DWORD PTR [ebx-0x8]
 80ad846:  mov DWORD PTR [esi+0x10], 0x0
 80ad84d:  mov DWORD PTR [esi], 0xffffffff
 80ad853:  mov DWORD PTR [esi+0x4], edx
 80ad856:  mov edx, DWORD PTR [esp+0x2c]
 80ad85a:  test edi, edi
 80ad85c:  mov DWORD PTR [esi+0xc], eax
 80ad85f:  mov WORD PTR [esi+0x10], 0x7f8
 80ad865:  mov DWORD PTR [esi+0x8], edx
 80ad868:  je 80ad89f
 80ad86a:  lea edi, [ebx+0x1f7c]
 80ad870:  mov DWORD PTR [esp], edi
 80ad873:  call 0
 80ad878:  mov eax, DWORD PTR [ebx+0x1f94]
 80ad87e:  mov DWORD PTR [ebx+0x1f94], esi
 80ad884:  mov DWORD PTR [esi+0x14], eax
 80ad887:  mov DWORD PTR [esp], edi
 80ad88a:  call 0
 80ad88f:  mov ebx, DWORD PTR [esp+0x10]
 80ad893:  mov esi, DWORD PTR [esp+0x14]
 80ad897:  mov edi, DWORD PTR [esp+0x18]
 80ad89b:  add esp, 0x1c
 80ad89e:  ret
 80ad89f:  mov eax, DWORD PTR [ebx+0x1f94]
 80ad8a5:  mov DWORD PTR [ebx+0x1f94], esi
 80ad8ab:  mov DWORD PTR [esi+0x14], eax
 80ad8ae:  jmp 80ad88f

080ad8b0 <__register_frame_info>:
 80ad8b0:  sub esp, 0x1c
 80ad8b3:  mov eax, DWORD PTR [esp+0x24]
 80ad8b7:  mov DWORD PTR [esp+0xc], 0x0
 80ad8bf:  mov DWORD PTR [esp+0x8], 0x0
 80ad8c7:  mov DWORD PTR [esp+0x4], eax
 80ad8cb:  mov eax, DWORD PTR [esp+0x20]
 80ad8cf:  mov DWORD PTR [esp], eax
 80ad8d2:  call 80ad810
 80ad8d7:  add esp, 0x1c
 80ad8da:  ret
 80ad8db:  nop
 80ad8dc:  lea esi, [esi]

080ad8e0 <__register_frame>:
 80ad8e0:  sub esp, 0x1c
 80ad8e3:  mov DWORD PTR [esp+0x18], esi
 80ad8e7:  mov esi, DWORD PTR [esp+0x20]
 80ad8eb:  mov DWORD PTR [esp+0x14], ebx
 80ad8ef:  call 80ac0a5
 80ad8f4:  add ebx, 0x23410
 80ad8fa:  mov ecx, DWORD PTR [esi]
 80ad8fc:  test ecx, ecx
 80ad8fe:  je 80ad918
 80ad900:  mov DWORD PTR [esp], 0x18
 80ad907:  call 804d6f0
 80ad90c:  mov DWORD PTR [esp], esi
 80ad90f:  mov DWORD PTR [esp+0x4], eax
 80ad913:  call 80ad8b0
 80ad918:  mov ebx, DWORD PTR [esp+0x14]
 80ad91c:  mov esi, DWORD PTR [esp+0x18]
 80ad920:  add esp, 0x1c
 80ad923:  ret
 80ad924:  lea esi, [esi]
 80ad92a:  lea edi, [edi]

080ad930 <__register_frame_info_table_bases>:
 80ad930:  sub esp, 0x1c
 80ad933:  mov DWORD PTR [esp+0x14], esi
 80ad937:  mov eax, DWORD PTR [esp+0x28]
 80ad93b:  mov esi, DWORD PTR [esp+0x24]
 80ad93f:  mov DWORD PTR [esp+0x10], ebx
 80ad943:  call 80ac0a5
 80ad948:  add ebx, 0x233bc
 80ad94e:  mov DWORD PTR [esp+0x18], edi
 80ad952:  mov DWORD PTR [esi+0x4], eax
 80ad955:  mov eax, DWORD PTR [esp+0x2c]
 80ad959:  mov DWORD PTR [esi+0x10], 0x0
 80ad960:  mov DWORD PTR [esi], 0xffffffff
 80ad966:  mov edi, DWORD PTR [ebx-0x8]
 80ad96c:  mov DWORD PTR [esi+0x8], eax
 80ad96f:  mov eax, DWORD PTR [esp+0x20]
 80ad973:  mov BYTE PTR [esi+0x10], 0x2
 80ad977:  or WORD PTR [esi+0x10], 0x7f8
 80ad97d:  test edi, edi
 80ad97f:  mov DWORD PTR [esi+0xc], eax
 80ad982:  je 80ad9b9
 80ad984:  lea edi, [ebx+0x1f7c]
 80ad98a:  mov DWORD PTR [esp], edi
 80ad98d:  call 0
 80ad992:  mov eax, DWORD PTR [ebx+0x1f94]
 80ad998:  mov DWORD PTR [ebx+0x1f94], esi
 80ad99e:  mov DWORD PTR [esi+0x14], eax
 80ad9a1:  mov DWORD PTR [esp], edi
 80ad9a4:  call 0
 80ad9a9:  mov ebx, DWORD PTR [esp+0x10]
 80ad9ad:  mov esi, DWORD PTR [esp+0x14]
 80ad9b1:  mov edi, DWORD PTR [esp+0x18]
 80ad9b5:  add esp, 0x1c
 80ad9b8:  ret
 80ad9b9:  mov eax, DWORD PTR [ebx+0x1f94]
 80ad9bf:  mov DWORD PTR [ebx+0x1f94], esi
 80ad9c5:  mov DWORD PTR [esi+0x14], eax
 80ad9c8:  jmp 80ad9a9
 80ad9ca:  lea esi, [esi]

080ad9d0 <__register_frame_info_table>:
 80ad9d0:  sub esp, 0x1c
 80ad9d3:  mov eax, DWORD PTR [esp+0x24]
 80ad9d7:  mov DWORD PTR [esp+0xc], 0x0
 80ad9df:  mov DWORD PTR [esp+0x8], 0x0
 80ad9e7:  mov DWORD PTR [esp+0x4], eax
 80ad9eb:  mov eax, DWORD PTR [esp+0x20]
 80ad9ef:  mov DWORD PTR [esp], eax
 80ad9f2:  call 80ad930
 80ad9f7:  add esp, 0x1c
 80ad9fa:  ret
 80ad9fb:  nop
 80ad9fc:  lea esi, [esi]

080ada00 <__register_frame_table>:
 80ada00:  push ebx
 80ada01:  call 80ac0a5
 80ada06:  add ebx, 0x232fe
 80ada0c:  sub esp, 0x18
 80ada0f:  mov DWORD PTR [esp], 0x18
 80ada16:  call 804d6f0
 80ada1b:  mov DWORD PTR [esp+0x4], eax
 80ada1f:  mov eax, DWORD PTR [esp+0x20]
 80ada23:  mov DWORD PTR [esp], eax
 80ada26:  call 80ad9d0
 80ada2b:  add esp, 0x18
 80ada2e:  pop ebx
 80ada2f:  ret

080ada30 <__deregister_frame_info_bases>:
 80ada30:  push ebp
 80ada31:  push edi
 80ada32:  push esi
 80ada33:  push ebx
 80ada34:  sub esp, 0x1c
 80ada37:  mov edi, DWORD PTR [esp+0x30]
 80ada3b:  call 80ac0a5
 80ada40:  add ebx, 0x232c4
 80ada46:  test edi, edi
 80ada48:  je 80adaf8
 80ada4e:  mov ebp, DWORD PTR [edi]
 80ada50:  test ebp, ebp
 80ada52:  je 80adaf8
 80ada58:  mov ebp, DWORD PTR [ebx-0x8]
 80ada5e:  test ebp, ebp
 80ada60:  je 80ada70
 80ada62:  lea eax, [ebx+0x1f7c]
 80ada68:  mov DWORD PTR [esp], eax
 80ada6b:  call 0
 80ada70:  mov esi, DWORD PTR [ebx+0x1f94]
 80ada76:  test esi, esi
 80ada78:  je 80ada9c
 80ada7a:  cmp DWORD PTR [esi+0xc], edi
 80ada7d:  jne 80ada92
 80ada7f:  jmp 80adb1a
 80ada84:  lea esi, [esi]
 80ada88:  cmp DWORD PTR [esi+0xc], edi
 80ada8b:  nop
 80ada8c:  lea esi, [esi]
 80ada90:  je 80adacc
 80ada92:  lea eax, [esi+0x14]
 80ada95:  mov esi, DWORD PTR [esi+0x14]
 80ada98:  test esi, esi
 80ada9a:  jne 80ada88
 80ada9c:  mov esi, DWORD PTR [ebx+0x1f98]
 80adaa2:  test esi, esi
 80adaa4:  je 80adad1
 80adaa6:  lea eax, [ebx+0x1f98]
 80adaac:  jmp 80adac1
 80adaae:  xchg ax, ax
 80adab0:  mov edx, DWORD PTR [esi+0xc]
 80adab3:  cmp DWORD PTR [edx], edi
 80adab5:  je 80adb08
 80adab7:  lea eax, [esi+0x14]
 80adaba:  mov esi, DWORD PTR [esi+0x14]
 80adabd:  test esi, esi
 80adabf:  je 80adad1
 80adac1:  test BYTE PTR [esi+0x10], 0x1
 80adac5:  jne 80adab0
 80adac7:  cmp DWORD PTR [esi+0xc], edi
 80adaca:  jne 80adab7
 80adacc:  mov edx, DWORD PTR [esi+0x14]
 80adacf:  mov DWORD PTR [eax], edx
 80adad1:  test ebp, ebp
 80adad3:  je 80adae3
 80adad5:  lea eax, [ebx+0x1f7c]
 80adadb:  mov DWORD PTR [esp], eax
 80adade:  call 0
 80adae3:  test esi, esi
 80adae5:  je 80adb22
 80adae7:  add esp, 0x1c
 80adaea:  mov eax, esi
 80adaec:  pop ebx
 80adaed:  pop esi
 80adaee:  pop edi
 80adaef:  pop ebp
 80adaf0:  ret
 80adaf1:  lea esi, [esi]
 80adaf8:  add esp, 0x1c
 80adafb:  xor esi, esi
 80adafd:  pop ebx
 80adafe:  mov eax, esi
 80adb00:  pop esi
 80adb01:  pop edi
 80adb02:  pop ebp
 80adb03:  ret
 80adb04:  lea esi, [esi]
 80adb08:  mov edx, DWORD PTR [esi+0x14]
 80adb0b:  mov DWORD PTR [eax], edx
 80adb0d:  mov eax, DWORD PTR [esi+0xc]
 80adb10:  mov DWORD PTR [esp], eax
 80adb13:  call 804b4a0
 80adb18:  jmp 80adad1
 80adb1a:  lea eax, [ebx+0x1f94]
 80adb20:  jmp 80adacc
 80adb22:  call 8055a00
 80adb27:  mov esi, esi
 80adb29:  lea edi, [edi]

080adb30 <__deregister_frame_info>:
 80adb30:  jmp 80ada30
 80adb35:  lea esi, [esi]
 80adb39:  lea edi, [edi]

080adb40 <__deregister_frame>:
 80adb40:  push ebx
 80adb41:  sub esp, 0x18
 80adb44:  mov eax, DWORD PTR [esp+0x20]
 80adb48:  call 80ac0a5
 80adb4d:  add ebx, 0x231b7
 80adb53:  mov edx, DWORD PTR [eax]
 80adb55:  test edx, edx
 80adb57:  je 80adb69
 80adb59:  mov DWORD PTR [esp], eax
 80adb5c:  call 80ada30
 80adb61:  mov DWORD PTR [esp], eax
 80adb64:  call 804b4a0
 80adb69:  add esp, 0x18
 80adb6c:  pop ebx
 80adb6d:  ret
 80adb6e:  xchg ax, ax

080adb70 <_Unwind_Find_FDE>:
 80adb70:  push ebp
 80adb71:  push edi
 80adb72:  push esi
 80adb73:  push ebx
 80adb74:  call 80ac0a5
 80adb79:  add ebx, 0x2318b
 80adb7f:  sub esp, 0x3c
 80adb82:  mov edi, DWORD PTR [esp+0x50]
 80adb86:  mov esi, DWORD PTR [ebx-0x8]
 80adb8c:  test esi, esi
 80adb8e:  je 80adb9e
 80adb90:  lea eax, [ebx+0x1f7c]
 80adb96:  mov DWORD PTR [esp], eax
 80adb99:  call 0
 80adb9e:  mov esi, DWORD PTR [ebx+0x1f98]
 80adba4:  test esi, esi
 80adba6:  jne 80adbbb
 80adba8:  jmp 80adc61
 80adbad:  lea esi, [esi]
 80adbb0:  mov esi, DWORD PTR [esi+0x14]
 80adbb3:  test esi, esi
 80adbb5:  je 80adc61
 80adbbb:  cmp edi, DWORD PTR [esi]
 80adbbd:  lea esi, [esi]
 80adbc0:  jb 80adbb0
 80adbc2:  mov edx, edi
 80adbc4:  mov eax, esi
 80adbc6:  call 80acb30
 80adbcb:  test eax, eax
 80adbcd:  mov ebp, eax
 80adbcf:  je 80adc61
 80adbd5:  mov ecx, DWORD PTR [ebx-0x8]
 80adbdb:  test ecx, ecx
 80adbdd:  je 80adbed
 80adbdf:  lea eax, [ebx+0x1f7c]
 80adbe5:  mov DWORD PTR [esp], eax
 80adbe8:  call 0
 80adbed:  test ebp, ebp
 80adbef:  je 80adccd
 80adbf5:  mov eax, DWORD PTR [esi+0x4]
 80adbf8:  mov edx, DWORD PTR [esp+0x54]
 80adbfc:  mov DWORD PTR [edx], eax
 80adbfe:  mov eax, DWORD PTR [esi+0x8]
 80adc01:  mov DWORD PTR [edx+0x4], eax
 80adc04:  movzx eax, WORD PTR [esi+0x10]
 80adc08:  shr ax, 0x3
 80adc0c:  test BYTE PTR [esi+0x10], 0x4
 80adc10:  movzx eax, al
 80adc13:  jne 80adcb6
 80adc19:  lea edx, [esi+0x4]
 80adc1c:  movzx edi, al
 80adc1f:  add esi, 0x8
 80adc22:  mov eax, edi
 80adc24:  mov DWORD PTR [esp], esi
 80adc27:  call 80ac5c0
 80adc2c:  lea edx, [esp+0x2c]
 80adc30:  mov DWORD PTR [esp+0x4], edx
 80adc34:  lea edx, [ebp+0x8]
 80adc37:  mov DWORD PTR [esp], edx
 80adc3a:  mov edx, eax
 80adc3c:  mov eax, edi
 80adc3e:  call 80ac2c0
 80adc43:  mov eax, DWORD PTR [esp+0x2c]
 80adc47:  mov edx, DWORD PTR [esp+0x54]
 80adc4b:  mov DWORD PTR [edx+0x8], eax
 80adc4e:  add esp, 0x3c
 80adc51:  mov eax, ebp
 80adc53:  pop ebx
 80adc54:  pop esi
 80adc55:  pop edi
 80adc56:  pop ebp
 80adc57:  ret
 80adc58:  test eax, eax
 80adc5a:  mov DWORD PTR [esi+0x14], edx
 80adc5d:  mov DWORD PTR [ecx], esi
 80adc5f:  jne 80adcaf
 80adc61:  mov esi, DWORD PTR [ebx+0x1f94]
 80adc67:  test esi, esi
 80adc69:  je 80adcc6
 80adc6b:  mov eax, DWORD PTR [esi+0x14]
 80adc6e:  mov edx, edi
 80adc70:  mov DWORD PTR [ebx+0x1f94], eax
 80adc76:  mov eax, esi
 80adc78:  call 80acb30
 80adc7d:  mov edx, DWORD PTR [ebx+0x1f98]
 80adc83:  lea ecx, [ebx+0x1f98]
 80adc89:  test edx, edx
 80adc8b:  je 80adc58
 80adc8d:  mov ebp, DWORD PTR [esi]
 80adc8f:  cmp ebp, DWORD PTR [edx]
 80adc91:  jbe 80adc9c
 80adc93:  jmp 80adc58
 80adc95:  lea esi, [esi]
 80adc98:  cmp ebp, DWORD PTR [edx]
 80adc9a:  ja 80adc58
 80adc9c:  lea ecx, [edx+0x14]
 80adc9f:  mov edx, DWORD PTR [edx+0x14]
 80adca2:  test edx, edx
 80adca4:  jne 80adc98
 80adca6:  test eax, eax
 80adca8:  mov DWORD PTR [esi+0x14], edx
 80adcab:  mov DWORD PTR [ecx], esi
 80adcad:  je 80adc61
 80adcaf:  mov ebp, eax
 80adcb1:  jmp 80adbd5
 80adcb6:  lea eax, [ebp+0x4]
 80adcb9:  sub eax, DWORD PTR [ebp+0x4]
 80adcbc:  call 80ac480
 80adcc1:  jmp 80adc19
 80adcc6:  xor ebp, ebp
 80adcc8:  jmp 80adbd5
 80adccd:  lea eax, [esp+0x14]
 80adcd1:  mov DWORD PTR [esp+0x4], eax
 80adcd5:  lea eax, [ebx-0x23a54]
 80adcdb:  mov DWORD PTR [esp+0x14], edi
 80adcdf:  mov DWORD PTR [esp+0x18], 0x0
 80adce7:  mov DWORD PTR [esp+0x1c], 0x0
 80adcef:  mov DWORD PTR [esp+0x20], 0x0
 80adcf7:  mov DWORD PTR [esp+0x24], 0x0
 80adcff:  mov DWORD PTR [esp+0x28], 0x1
 80add07:  mov DWORD PTR [esp], eax
 80add0a:  call 80ae480
 80add0f:  test eax, eax
 80add11:  js 80adc4e
 80add17:  mov ebp, DWORD PTR [esp+0x24]
 80add1b:  test ebp, ebp
 80add1d:  je 80adc4e
 80add23:  mov edx, DWORD PTR [esp+0x54]
 80add27:  mov eax, DWORD PTR [esp+0x18]
 80add2b:  mov DWORD PTR [edx], eax
 80add2d:  mov eax, DWORD PTR [esp+0x1c]
 80add31:  mov DWORD PTR [edx+0x4], eax
 80add34:  mov eax, DWORD PTR [esp+0x20]
 80add38:  mov DWORD PTR [edx+0x8], eax
 80add3b:  jmp 80adc4e

080add40 <read_encoded_value_with_base>:
 80add40:  sub esp, 0x2c
 80add43:  mov DWORD PTR [esp+0x1c], ebx
 80add47:  call 80ac0a5
 80add4c:  add ebx, 0x22fb8
 80add52:  cmp al, 0x50
 80add54:  mov DWORD PTR [esp+0x20], esi
 80add58:  mov DWORD PTR [esp+0x24], edi
 80add5c:  mov DWORD PTR [esp+0x28], ebp
 80add60:  je 80adee0
 80add66:  movzx esi, al
 80add69:  mov ecx, esi
 80add6b:  and ecx, 0xf
 80add6e:  cmp ecx, 0xc
 80add71:  mov DWORD PTR [esp+0x4], esi
 80add75:  jbe 80add80
 80add77:  call 8055a00
 80add7c:  lea esi, [esi]
 80add80:  mov esi, ebx
 80add82:  sub esi, DWORD PTR [ebx+ecx*4-0x22f78]
 80add89:  jmp esi
 80add8b:  nop
 80add8c:  inc esp
 80add8d:  ???
 80add8e:  add al, BYTE PTR [eax]
 80add90:  ???
 80add91:  add al, BYTE PTR cs:[eax]
 80add94:  cmp al, 0x2e
 80add96:  add al, BYTE PTR [eax]
 80add98:  inc esp
 80add99:  ???
 80add9a:  add al, BYTE PTR [eax]
 80add9c:  cld
 80add9d:  add al, BYTE PTR cs:[eax]
 80adda0:  lea ebp, [edi]
 80adda2:  add al, BYTE PTR [eax]
 80adda4:  lea ebp, [edi]
 80adda6:  add al, BYTE PTR [eax]
 80adda8:  lea ebp, [edi]
 80addaa:  add al, BYTE PTR [eax]
 80addac:  lea ebp, [edi]
 80addae:  add al, BYTE PTR [eax]
 80addb0:  mov ah, 0x2e
 80addb2:  add al, BYTE PTR [eax]
 80addb4:  push esp
 80addb5:  add al, BYTE PTR cs:[eax]
 80addb8:  inc esp
 80addb9:  ???
 80addba:  add al, BYTE PTR [eax]
 80addbc:  cld
 80addbd:  add al, BYTE PTR cs:[eax]
 80addc0:  mov ecx, DWORD PTR [esp+0x30]
 80addc4:  mov esi, DWORD PTR [ecx]
 80addc6:  mov ebp, ecx
 80addc8:  add ebp, 0x4
 80addcb:  test esi, esi
 80addcd:  je 80adde8
 80addcf:  mov ecx, DWORD PTR [esp+0x4]
 80addd3:  and ecx, 0x70
 80addd6:  cmp ecx, 0x10
 80addd9:  cmove edx, DWORD PTR [esp+0x30]
 80addde:  add esi, edx
 80adde0:  test al, al
 80adde2:  jns 80adde8
 80adde4:  mov esi, DWORD PTR [esi]
 80adde6:  xchg ax, ax
 80adde8:  mov eax, DWORD PTR [esp+0x34]
 80addec:  mov ebx, DWORD PTR [esp+0x1c]
 80addf0:  mov edi, DWORD PTR [esp+0x24]
 80addf4:  mov DWORD PTR [eax], esi
 80addf6:  mov eax, ebp
 80addf8:  mov esi, DWORD PTR [esp+0x20]
 80addfc:  mov ebp, DWORD PTR [esp+0x28]
 80ade00:  add esp, 0x2c
 80ade03:  ret
 80ade04:  lea esi, [esi]
 80ade08:  mov ecx, DWORD PTR [esp+0x30]
 80ade0c:  mov ebp, ecx
 80ade0e:  mov esi, DWORD PTR [ecx]
 80ade10:  add ebp, 0x8
 80ade13:  jmp 80addcb
 80ade15:  lea esi, [esi]
 80ade18:  mov esi, DWORD PTR [esp+0x30]
 80ade1c:  xor edi, edi
 80ade1e:  xor ecx, ecx
 80ade20:  mov DWORD PTR [esp+0x8], edx
 80ade24:  mov ebp, esi
 80ade26:  mov esi, eax
 80ade28:  movzx edx, BYTE PTR [ebp]
 80ade2c:  add ebp, 0x1
 80ade2f:  mov eax, edx
 80ade31:  and eax, 0x7f
 80ade34:  shl eax, cl
 80ade36:  add ecx, 0x7
 80ade39:  or edi, eax
 80ade3b:  test dl, dl
 80ade3d:  js 80ade28
 80ade3f:  mov eax, esi
 80ade41:  mov edx, DWORD PTR [esp+0x8]
 80ade45:  mov esi, edi
 80ade47:  jmp 80addcb
 80ade49:  lea esi, [esi]
 80ade50:  mov edi, DWORD PTR [esp+0x30]
 80ade54:  xor esi, esi
 80ade56:  xor ecx, ecx
 80ade58:  mov BYTE PTR [esp+0x8], al
 80ade5c:  mov DWORD PTR [esp+0xc], edx
 80ade60:  mov ebp, edi
 80ade62:  lea esi, [esi]
 80ade68:  movzx edx, BYTE PTR [ebp]
 80ade6c:  add ebp, 0x1
 80ade6f:  movzx edi, dl
 80ade72:  mov eax, edi
 80ade74:  and eax, 0x7f
 80ade77:  shl eax, cl
 80ade79:  add ecx, 0x7
 80ade7c:  or esi, eax
 80ade7e:  test dl, dl
 80ade80:  js 80ade68
 80ade82:  cmp ecx, 0x1f
 80ade85:  movzx eax, BYTE PTR [esp+0x8]
 80ade8a:  mov edx, DWORD PTR [esp+0xc]
 80ade8e:  mov DWORD PTR [esp+0x8], ebp
 80ade92:  ja 80adea2
 80ade94:  and edi, 0x40
 80ade97:  je 80adea2
 80ade99:  mov edi, 0xffffffff
 80ade9e:  shl edi, cl
 80adea0:  or esi, edi
 80adea2:  mov ebp, DWORD PTR [esp+0x8]
 80adea6:  jmp 80addcb
 80adeab:  nop
 80adeac:  lea esi, [esi]
 80adeb0:  mov ecx, DWORD PTR [esp+0x30]
 80adeb4:  mov ebp, ecx
 80adeb6:  movsx esi, WORD PTR [ecx]
 80adeb9:  add ebp, 0x2
 80adebc:  jmp 80addcb
 80adec1:  lea esi, [esi]
 80adec8:  mov ecx, DWORD PTR [esp+0x30]
 80adecc:  mov ebp, ecx
 80adece:  movzx esi, WORD PTR [ecx]
 80aded1:  add ebp, 0x2
 80aded4:  jmp 80addcb
 80aded9:  lea esi, [esi]
 80adee0:  mov ebp, DWORD PTR [esp+0x30]
 80adee4:  add ebp, 0x3
 80adee7:  and ebp, 0xfc
 80adeea:  mov esi, DWORD PTR [ebp]
 80adeed:  add ebp, 0x4
 80adef0:  jmp 80adde8
 80adef5:  lea esi, [esi]
 80adef9:  lea edi, [edi]

080adf00 <__gcc_personality_v0>:
 80adf00:  sub esp, 0x6c
 80adf03:  mov DWORD PTR [esp+0x5c], ebx
 80adf07:  call 80ac0a5
 80adf0c:  add ebx, 0x22df8
 80adf12:  cmp DWORD PTR [esp+0x70], 0x1
 80adf17:  mov DWORD PTR [esp+0x60], esi
 80adf1b:  mov esi, 0x3
 80adf20:  mov DWORD PTR [esp+0x64], edi
 80adf24:  mov DWORD PTR [esp+0x68], ebp
 80adf28:  je 80adf40
 80adf2a:  mov eax, esi
 80adf2c:  mov ebx, DWORD PTR [esp+0x5c]
 80adf30:  mov esi, DWORD PTR [esp+0x60]
 80adf34:  mov edi, DWORD PTR [esp+0x64]
 80adf38:  mov ebp, DWORD PTR [esp+0x68]
 80adf3c:  add esp, 0x6c
 80adf3f:  ret
 80adf40:  test BYTE PTR [esp+0x74], 0x2
 80adf45:  mov si, 0x8
 80adf49:  je 80adf2a
 80adf4b:  mov eax, DWORD PTR [esp+0x84]
 80adf52:  mov DWORD PTR [esp], eax
 80adf55:  call 80abab0
 80adf5a:  test eax, eax
 80adf5c:  mov edi, eax
 80adf5e:  je 80adf2a
 80adf60:  mov edx, DWORD PTR [esp+0x84]
 80adf67:  xor eax, eax
 80adf69:  test edx, edx
 80adf6b:  je 80adf7c
 80adf6d:  mov eax, DWORD PTR [esp+0x84]
 80adf74:  mov DWORD PTR [esp], eax
 80adf77:  call 80abac0
 80adf7c:  mov DWORD PTR [esp+0x2c], eax
 80adf80:  movzx edx, BYTE PTR [edi]
 80adf83:  add edi, 0x1
 80adf86:  cmp dl, 0xff
 80adf89:  je 80adfb8
 80adf8b:  movzx esi, dl
 80adf8e:  mov eax, esi
 80adf90:  and eax, 0x70
 80adf93:  cmp eax, 0x20
 80adf96:  je 80ae1b8
 80adf9c:  jg 80ae2c8
 80adfa2:  test eax, eax
 80adfa4:  je 80adfb0
 80adfa6:  cmp eax, 0x10
 80adfa9:  jne 80ae0c8
 80adfaf:  nop
 80adfb0:  xor edx, edx
 80adfb2:  jmp 80ae1c9
 80adfb7:  nop
 80adfb8:  mov DWORD PTR [esp+0x30], eax
 80adfbc:  movzx eax, BYTE PTR [edi]
 80adfbf:  add edi, 0x1
 80adfc2:  cmp al, 0xff
 80adfc4:  mov BYTE PTR [esp+0x40], al
 80adfc8:  je 80ae288
 80adfce:  xor esi, esi
 80adfd0:  xor ecx, ecx
 80adfd2:  lea esi, [esi]
 80adfd8:  movzx edx, BYTE PTR [edi]
 80adfdb:  add edi, 0x1
 80adfde:  mov eax, edx
 80adfe0:  and eax, 0x7f
 80adfe3:  shl eax, cl
 80adfe5:  add ecx, 0x7
 80adfe8:  or esi, eax
 80adfea:  test dl, dl
 80adfec:  js 80adfd8
 80adfee:  add esi, edi
 80adff0:  mov DWORD PTR [esp+0x38], esi
 80adff4:  movzx eax, BYTE PTR [edi]
 80adff7:  xor esi, esi
 80adff9:  add edi, 0x1
 80adffc:  xor ecx, ecx
 80adffe:  mov BYTE PTR [esp+0x41], al
 80ae002:  lea esi, [esi]
 80ae008:  movzx edx, BYTE PTR [edi]
 80ae00b:  add edi, 0x1
 80ae00e:  mov eax, edx
 80ae010:  and eax, 0x7f
 80ae013:  shl eax, cl
 80ae015:  add ecx, 0x7
 80ae018:  or esi, eax
 80ae01a:  test dl, dl
 80ae01c:  js 80ae008
 80ae01e:  mov eax, DWORD PTR [esp+0x84]
 80ae025:  add esi, edi
 80ae027:  mov ebp, edi
 80ae029:  mov DWORD PTR [esp+0x3c], esi
 80ae02d:  lea edi, [esp+0x44]
 80ae031:  mov DWORD PTR [esp], eax
 80ae034:  call 80aba70
 80ae039:  sub eax, 0x1
 80ae03c:  mov DWORD PTR [esp+0x1c], eax
 80ae040:  mov eax, DWORD PTR [esp+0x3c]
 80ae044:  cmp ebp, eax
 80ae046:  jae 80ae30b
 80ae04c:  movzx eax, BYTE PTR [esp+0x41]
 80ae051:  cmp al, 0xff
 80ae053:  movzx esi, al
 80ae056:  je 80ae070
 80ae058:  mov eax, esi
 80ae05a:  and eax, 0x70
 80ae05d:  cmp eax, 0x20
 80ae060:  je 80ae248
 80ae066:  jg 80ae0b0
 80ae068:  test eax, eax
 80ae06a:  jne 80ae178
 80ae070:  xor edx, edx
 80ae072:  mov eax, esi
 80ae074:  mov DWORD PTR [esp], ebp
 80ae077:  mov DWORD PTR [esp+0x4], edi
 80ae07b:  call 80add40
 80ae080:  mov ebp, eax
 80ae082:  movzx eax, BYTE PTR [esp+0x41]
 80ae087:  cmp al, 0xff
 80ae089:  movzx esi, al
 80ae08c:  je 80ae0a6
 80ae08e:  mov eax, esi
 80ae090:  and eax, 0x70
 80ae093:  cmp eax, 0x20
 80ae096:  je 80ae270
 80ae09c:  jg 80ae0d0
 80ae09e:  test eax, eax
 80ae0a0:  jne 80ae188
 80ae0a6:  xor edx, edx
 80ae0a8:  jmp 80ae0f1
 80ae0aa:  lea esi, [esi]
 80ae0b0:  cmp eax, 0x40
 80ae0b3:  je 80ae1a0
 80ae0b9:  cmp eax, 0x50
 80ae0bc:  je 80ae070
 80ae0be:  cmp eax, 0x30
 80ae0c1:  je 80ae25b
 80ae0c7:  nop
 80ae0c8:  call 8055a00
 80ae0cd:  lea esi, [esi]
 80ae0d0:  cmp eax, 0x40
 80ae0d3:  je 80ae1e8
 80ae0d9:  cmp eax, 0x50
 80ae0dc:  je 80ae0a6
 80ae0de:  cmp eax, 0x30
 80ae0e1:  jne 80ae0c8
 80ae0e3:  mov DWORD PTR [esp], 0x0
 80ae0ea:  call 80abb10
 80ae0ef:  mov edx, eax
 80ae0f1:  lea ecx, [esp+0x48]
 80ae0f5:  mov eax, esi
 80ae0f7:  mov DWORD PTR [esp], ebp
 80ae0fa:  mov DWORD PTR [esp+0x4], ecx
 80ae0fe:  call 80add40
 80ae103:  mov ebp, eax
 80ae105:  movzx eax, BYTE PTR [esp+0x41]
 80ae10a:  cmp al, 0xff
 80ae10c:  movzx esi, al
 80ae10f:  je 80ae138
 80ae111:  mov eax, esi
 80ae113:  and eax, 0x70
 80ae116:  cmp eax, 0x20
 80ae119:  je 80ae2b0
 80ae11f:  jg 80ae218
 80ae125:  test eax, eax
 80ae127:  je 80ae138
 80ae129:  cmp eax, 0x10
 80ae12c:  lea esi, [esi]
 80ae130:  jne 80ae0c8
 80ae132:  lea esi, [esi]
 80ae138:  xor edx, edx
 80ae13a:  lea ecx, [esp+0x4c]
 80ae13e:  mov eax, esi
 80ae140:  mov DWORD PTR [esp+0x4], ecx
 80ae144:  mov DWORD PTR [esp], ebp
 80ae147:  call 80add40
 80ae14c:  jmp 80ae152
 80ae14e:  xchg ax, ax
 80ae150:  mov eax, ebp
 80ae152:  cmp BYTE PTR [eax], 0x0
 80ae155:  lea ebp, [eax+0x1]
 80ae158:  js 80ae150
 80ae15a:  mov eax, DWORD PTR [esp+0x44]
 80ae15e:  add eax, DWORD PTR [esp+0x2c]
 80ae162:  cmp DWORD PTR [esp+0x1c], eax
 80ae166:  jae 80ae200
 80ae16c:  mov ebp, DWORD PTR [esp+0x3c]
 80ae170:  mov eax, ebp
 80ae172:  jmp 80ae044
 80ae177:  nop
 80ae178:  cmp eax, 0x10
 80ae17b:  jne 80ae0c8
 80ae181:  jmp 80ae070
 80ae186:  xchg ax, ax
 80ae188:  cmp eax, 0x10
 80ae18b:  nop
 80ae18c:  lea esi, [esi]
 80ae190:  jne 80ae0c8
 80ae196:  xor edx, edx
 80ae198:  jmp 80ae0f1
 80ae19d:  lea esi, [esi]
 80ae1a0:  mov DWORD PTR [esp], 0x0
 80ae1a7:  call 80abac0
 80ae1ac:  mov edx, eax
 80ae1ae:  jmp 80ae072
 80ae1b3:  nop
 80ae1b4:  lea esi, [esi]
 80ae1b8:  mov eax, DWORD PTR [esp+0x84]
 80ae1bf:  mov DWORD PTR [esp], eax
 80ae1c2:  call 80abb20
 80ae1c7:  mov edx, eax
 80ae1c9:  lea ecx, [esp+0x30]
 80ae1cd:  mov eax, esi
 80ae1cf:  mov DWORD PTR [esp], edi
 80ae1d2:  mov DWORD PTR [esp+0x4], ecx
 80ae1d6:  call 80add40
 80ae1db:  mov edi, eax
 80ae1dd:  jmp 80adfbc
 80ae1e2:  lea esi, [esi]
 80ae1e8:  mov DWORD PTR [esp], 0x0
 80ae1ef:  call 80abac0
 80ae1f4:  mov edx, eax
 80ae1f6:  jmp 80ae0f1
 80ae1fb:  nop
 80ae1fc:  lea esi, [esi]
 80ae200:  add eax, DWORD PTR [esp+0x48]
 80ae204:  cmp DWORD PTR [esp+0x1c], eax
 80ae208:  jb 80ae315
 80ae20e:  mov eax, DWORD PTR [esp+0x3c]
 80ae212:  jmp 80ae044
 80ae217:  nop
 80ae218:  cmp eax, 0x40
 80ae21b:  je 80ae298
 80ae21d:  cmp eax, 0x50
 80ae220:  je 80ae138
 80ae226:  cmp eax, 0x30
 80ae229:  jne 80ae0c8
 80ae22f:  mov DWORD PTR [esp], 0x0
 80ae236:  call 80abb10
 80ae23b:  mov edx, eax
 80ae23d:  jmp 80ae13a
 80ae242:  lea esi, [esi]
 80ae248:  mov DWORD PTR [esp], 0x0
 80ae24f:  call 80abb20
 80ae254:  mov edx, eax
 80ae256:  jmp 80ae072
 80ae25b:  mov DWORD PTR [esp], 0x0
 80ae262:  call 80abb10
 80ae267:  mov edx, eax
 80ae269:  jmp 80ae072
 80ae26e:  xchg ax, ax
 80ae270:  mov DWORD PTR [esp], 0x0
 80ae277:  call 80abb20
 80ae27c:  mov edx, eax
 80ae27e:  jmp 80ae0f1
 80ae283:  nop
 80ae284:  lea esi, [esi]
 80ae288:  mov DWORD PTR [esp+0x38], 0x0
 80ae290:  jmp 80adff4
 80ae295:  lea esi, [esi]
 80ae298:  mov DWORD PTR [esp], 0x0
 80ae29f:  call 80abac0
 80ae2a4:  mov edx, eax
 80ae2a6:  jmp 80ae13a
 80ae2ab:  nop
 80ae2ac:  lea esi, [esi]
 80ae2b0:  mov DWORD PTR [esp], 0x0
 80ae2b7:  call 80abb20
 80ae2bc:  mov edx, eax
 80ae2be:  jmp 80ae13a
 80ae2c3:  nop
 80ae2c4:  lea esi, [esi]
 80ae2c8:  cmp eax, 0x40
 80ae2cb:  je 80ae2f5
 80ae2cd:  cmp eax, 0x50
 80ae2d0:  je 80adfb0
 80ae2d6:  cmp eax, 0x30
 80ae2d9:  jne 80ae0c8
 80ae2df:  mov eax, DWORD PTR [esp+0x84]
 80ae2e6:  mov DWORD PTR [esp], eax
 80ae2e9:  call 80abb10
 80ae2ee:  mov edx, eax
 80ae2f0:  jmp 80ae1c9
 80ae2f5:  mov eax, DWORD PTR [esp+0x84]
 80ae2fc:  mov DWORD PTR [esp], eax
 80ae2ff:  call 80abac0
 80ae304:  mov edx, eax
 80ae306:  jmp 80ae1c9
 80ae30b:  mov esi, 0x8
 80ae310:  jmp 80adf2a
 80ae315:  mov eax, DWORD PTR [esp+0x4c]
 80ae319:  mov esi, 0x8
 80ae31e:  test eax, eax
 80ae320:  je 80adf2a
 80ae326:  mov edi, eax
 80ae328:  add edi, DWORD PTR [esp+0x30]
 80ae32c:  je 80adf2a
 80ae332:  mov eax, DWORD PTR [esp+0x80]
 80ae339:  mov esi, 0x7
 80ae33e:  mov DWORD PTR [esp+0x4], 0x0
 80ae346:  mov DWORD PTR [esp+0x8], eax
 80ae34a:  mov eax, DWORD PTR [esp+0x84]
 80ae351:  mov DWORD PTR [esp], eax
 80ae354:  call 80aba00
 80ae359:  mov eax, DWORD PTR [esp+0x84]
 80ae360:  mov DWORD PTR [esp+0x8], 0x0
 80ae368:  mov DWORD PTR [esp+0x4], 0x2
 80ae370:  mov DWORD PTR [esp], eax
 80ae373:  call 80aba00
 80ae378:  mov eax, DWORD PTR [esp+0x84]
 80ae37f:  mov DWORD PTR [esp+0x4], edi
 80ae383:  mov DWORD PTR [esp], eax
 80ae386:  call 80abaa0
 80ae38b:  jmp 80adf2a

080ae390 <__dl_iterate_phdr>:
 80ae390:  push ebp
 80ae391:  mov eax, 0x0
 80ae396:  mov ebp, esp
 80ae398:  push edi
 80ae399:  push esi
 80ae39a:  push ebx
 80ae39b:  sub esp, 0x3c
 80ae39e:  test eax, eax
 80ae3a0:  je 80ae3ae
 80ae3a2:  mov DWORD PTR [esp], 0x80d0d7c
 80ae3a9:  call 0
 80ae3ae:  mov ebx, DWORD PTR ds:0x80d2e40
 80ae3b4:  xor esi, esi
 80ae3b6:  mov eax, ds:0x80d2e44
 80ae3bb:  test ebx, ebx
 80ae3bd:  je 80ae458
 80ae3c3:  mov DWORD PTR [ebp-0x3c], eax
 80ae3c6:  lea edi, [ebp-0x34]
 80ae3c9:  mov DWORD PTR [ebp-0x38], 0x0
 80ae3d0:  jmp 80ae3fa
 80ae3d2:  lea esi, [esi]
 80ae3d8:  mov eax, DWORD PTR [ebp+0xc]
 80ae3db:  mov DWORD PTR [esp+0x4], 0x28
 80ae3e3:  mov DWORD PTR [esp], edi
 80ae3e6:  mov DWORD PTR [esp+0x8], eax
 80ae3ea:  call DWORD PTR [ebp+0x8]
 80ae3ed:  test eax, eax
 80ae3ef:  mov esi, eax
 80ae3f1:  jne 80ae458
 80ae3f3:  mov ebx, DWORD PTR [ebx+0xc]
 80ae3f6:  test ebx, ebx
 80ae3f8:  je 80ae458
 80ae3fa:  mov eax, DWORD PTR [ebx]
 80ae3fc:  mov edx, DWORD PTR ds:0x80d2ddc
 80ae402:  mov DWORD PTR [ebp-0x10], 0x0
 80ae409:  mov DWORD PTR [ebp-0x34], eax
 80ae40c:  mov eax, DWORD PTR [ebx+0x4]
 80ae40f:  mov DWORD PTR [ebp-0x20], edx
 80ae412:  mov DWORD PTR [ebp-0x30], eax
 80ae415:  mov eax, DWORD PTR [ebx+0x150]
 80ae41b:  mov DWORD PTR [ebp-0x2c], eax
 80ae41e:  movzx eax, WORD PTR [ebx+0x158]
 80ae425:  mov WORD PTR [ebp-0x28], ax
 80ae429:  mov eax, ds:0x80d2dd8
 80ae42e:  mov DWORD PTR [ebp-0x24], eax
 80ae431:  sub eax, DWORD PTR [ebp-0x3c]
 80ae434:  sbb edx, DWORD PTR [ebp-0x38]
 80ae437:  mov DWORD PTR [ebp-0x1c], eax
 80ae43a:  mov eax, DWORD PTR [ebx+0x240]
 80ae440:  mov DWORD PTR [ebp-0x18], edx
 80ae443:  test eax, eax
 80ae445:  mov DWORD PTR [ebp-0x14], eax
 80ae448:  je 80ae3d8
 80ae44a:  mov DWORD PTR [esp], ebx
 80ae44d:  call 807c9c0
 80ae452:  mov DWORD PTR [ebp-0x10], eax
 80ae455:  jmp 80ae3d8
 80ae457:  nop
 80ae458:  mov eax, 0x0
 80ae45d:  test eax, eax
 80ae45f:  je 80ae46d
 80ae461:  mov DWORD PTR [esp], 0x80d0d7c
 80ae468:  call 0
 80ae46d:  add esp, 0x3c
 80ae470:  mov eax, esi
 80ae472:  pop ebx
 80ae473:  pop esi
 80ae474:  pop edi
 80ae475:  pop ebp
 80ae476:  ret
 80ae477:  mov esi, esi
 80ae479:  lea edi, [edi]

080ae480 <dl_iterate_phdr>:
 80ae480:  push ebp
 80ae481:  mov ebp, esp
 80ae483:  sub esp, 0x40
 80ae486:  mov edx, DWORD PTR ds:0x80d2e14
 80ae48c:  mov DWORD PTR [ebp-0x8], esi
 80ae48f:  mov esi, DWORD PTR [ebp+0xc]
 80ae492:  mov DWORD PTR [ebp-0x4], edi
 80ae495:  mov edi, DWORD PTR [ebp+0x8]
 80ae498:  mov DWORD PTR [ebp-0xc], ebx
 80ae49b:  test edx, edx
 80ae49d:  je 80ae4f4
 80ae49f:  mov eax, ds:0x80d2df4
 80ae4a4:  xor ebx, ebx
 80ae4a6:  mov ecx, DWORD PTR ds:0x80d2e44
 80ae4ac:  mov WORD PTR [ebp-0x28], dx
 80ae4b0:  mov edx, DWORD PTR ds:0x80d2ddc
 80ae4b6:  mov DWORD PTR [ebp-0x34], 0x0
 80ae4bd:  mov DWORD PTR [ebp-0x2c], eax
 80ae4c0:  mov eax, ds:0x80d2dd8
 80ae4c5:  mov DWORD PTR [ebp-0x30], 0x80c2c93
 80ae4cc:  mov DWORD PTR [ebp-0x20], edx
 80ae4cf:  mov DWORD PTR [esp+0x8], esi
 80ae4d3:  mov DWORD PTR [ebp-0x24], eax
 80ae4d6:  sub eax, ecx
 80ae4d8:  sbb edx, ebx
 80ae4da:  mov DWORD PTR [ebp-0x1c], eax
 80ae4dd:  lea eax, [ebp-0x34]
 80ae4e0:  mov DWORD PTR [ebp-0x18], edx
 80ae4e3:  mov DWORD PTR [esp+0x4], 0x28
 80ae4eb:  mov DWORD PTR [esp], eax
 80ae4ee:  call edi
 80ae4f0:  test eax, eax
 80ae4f2:  jne 80ae500
 80ae4f4:  mov DWORD PTR [esp+0x4], esi
 80ae4f8:  mov DWORD PTR [esp], edi
 80ae4fb:  call 80ae390
 80ae500:  mov ebx, DWORD PTR [ebp-0xc]
 80ae503:  mov esi, DWORD PTR [ebp-0x8]
 80ae506:  mov edi, DWORD PTR [ebp-0x4]
 80ae509:  mov esp, ebp
 80ae50b:  pop ebp
 80ae50c:  ret
 80ae50d:  lea esi, [esi]

080ae510 <cancel_handler>:
 80ae510:  mov eax, 0x0
 80ae515:  push ebp
 80ae516:  test eax, eax
 80ae518:  mov ebp, esp
 80ae51a:  je 80ae529
 80ae51c:  mov DWORD PTR [ebp+0x8], 0x80d0d7c
 80ae523:  pop ebp
 80ae524:  jmp 0
 80ae529:  pop ebp
 80ae52a:  ret
 80ae52b:  nop
 80ae52c:  nop
 80ae52d:  nop
 80ae52e:  nop
 80ae52f:  nop

080ae530 <__do_global_ctors_aux>:
 80ae530:  push ebp
 80ae531:  mov ebp, esp
 80ae533:  push ebx
 80ae534:  sub esp, 0x4
 80ae537:  mov eax, ds:0x80d0cb8
 80ae53c:  cmp eax, 0xff
 80ae53f:  je 80ae554
 80ae541:  mov ebx, 0x80d0cb8
 80ae546:  xchg ax, ax
 80ae548:  sub ebx, 0x4
 80ae54b:  call eax
 80ae54d:  mov eax, DWORD PTR [ebx]
 80ae54f:  cmp eax, 0xff
 80ae552:  jne 80ae548
 80ae554:  add esp, 0x4
 80ae557:  pop ebx
 80ae558:  pop ebp
 80ae559:  ret
 80ae55a:  nop
 80ae55b:  nop


**
** Disassembly for section '__libc_freeres_fn'
**


080ae560 <free_mem>:
 80ae560:  push ebp
 80ae561:  mov ecx, 0x1
 80ae566:  mov ebp, esp
 80ae568:  push edi
 80ae569:  push ebx
 80ae56a:  xor ebx, ebx
 80ae56c:  sub esp, 0x4
 80ae56f:  mov eax, ebx
 80ae571:  cmp DWORD PTR gs:0xc, 0x0
 80ae579:  je 80ae57c
 80ae57b:  cmpxchg DWORD PTR ds:0x80d22c0, ecx
 80ae583:  jne 80ae5d7
 80ae585:  mov edi, 0x80d22e0
 80ae58a:  mov eax, ebx
 80ae58c:  mov edx, DWORD PTR ds:0x80d22e0
 80ae592:  mov ecx, 0x151
 80ae597:  mov DWORD PTR ds:0x80d2eb8, 0x0
 80ae5a1:  rep stosd
 80ae5a3:  cmp DWORD PTR gs:0xc, 0x0
 80ae5ab:  je 80ae5ae
 80ae5ad:  sub DWORD PTR ds:0x80d22c0, 0x1
 80ae5b5:  jne 80ae5e4
 80ae5b7:  test edx, edx
 80ae5b9:  jne 80ae5c2
 80ae5bb:  jmp 80ae5d0
 80ae5bd:  lea esi, [esi]
 80ae5c0:  mov edx, edi
 80ae5c2:  mov edi, DWORD PTR [edx]
 80ae5c4:  mov DWORD PTR [esp], edx
 80ae5c7:  call 804b4a0
 80ae5cc:  test edi, edi
 80ae5ce:  jne 80ae5c0
 80ae5d0:  add esp, 0x4
 80ae5d3:  pop ebx
 80ae5d4:  pop edi
 80ae5d5:  pop ebp
 80ae5d6:  ret

080ae5d7 <_L_lock_50>:
 80ae5d7:  lea ecx, ds:0x80d22c0
 80ae5dd:  call 8050230
 80ae5e2:  jmp 80ae585

080ae5e4 <_L_unlock_62>:
 80ae5e4:  lea eax, ds:0x80d22c0
 80ae5ea:  call 8050260
 80ae5ef:  jmp 80ae5b7
 80ae5f1:  add BYTE PTR [eax], al
 80ae5f3:  add BYTE PTR [eax], al
 80ae5f5:  add BYTE PTR [eax], al
 80ae5f7:  add BYTE PTR [eax], al
 80ae5f9:  add BYTE PTR [eax], al
 80ae5fb:  add BYTE PTR [eax], al
 80ae5fd:  add BYTE PTR [eax], al
 80ae5ff:  add BYTE PTR [ebp-0x77], dl
 80ae602:  ???
 80ae603:  push ebx
 80ae604:  sub esp, 0x8
 80ae607:  mov ebx, DWORD PTR ds:0x80d2e70
 80ae60d:  test ebx, ebx
 80ae60f:  je 80ae64e
 80ae611:  lea esi, [esi]
 80ae618:  mov eax, DWORD PTR [ebx]
 80ae61a:  mov ds:0x80d2e70, eax
 80ae61f:  mov eax, DWORD PTR [ebx+0x4]
 80ae622:  cmp eax, 0x80b04ec
 80ae627:  je 80ae631
 80ae629:  mov DWORD PTR [esp], eax
 80ae62c:  call 804b4a0
 80ae631:  mov eax, DWORD PTR [ebx+0x8]
 80ae634:  mov DWORD PTR [esp], eax
 80ae637:  call 804b4a0
 80ae63c:  mov DWORD PTR [esp], ebx
 80ae63f:  call 804b4a0
 80ae644:  mov ebx, DWORD PTR ds:0x80d2e70
 80ae64a:  test ebx, ebx
 80ae64c:  jne 80ae618
 80ae64e:  mov eax, ds:0x80d0d98
 80ae653:  cmp eax, 0x80b04e3
 80ae658:  je 80ae662
 80ae65a:  mov DWORD PTR [esp], eax
 80ae65d:  call 804b4a0
 80ae662:  mov eax, ds:0x80d28a0
 80ae667:  mov DWORD PTR [esp+0x4], 0x804b4a0
 80ae66f:  mov DWORD PTR [esp], eax
 80ae672:  call 80740a0
 80ae677:  mov edx, DWORD PTR ds:0x80d28a4
 80ae67d:  mov DWORD PTR ds:0x80d28a0, 0x0
 80ae687:  test edx, edx
 80ae689:  je 80ae6a9
 80ae68b:  nop
 80ae68c:  lea esi, [esi]
 80ae690:  mov eax, DWORD PTR [edx]
 80ae692:  mov DWORD PTR [esp], edx
 80ae695:  mov ds:0x80d28a4, eax
 80ae69a:  call 804b4a0
 80ae69f:  mov edx, DWORD PTR ds:0x80d28a4
 80ae6a5:  test edx, edx
 80ae6a7:  jne 80ae690
 80ae6a9:  add esp, 0x8
 80ae6ac:  pop ebx
 80ae6ad:  pop ebp
 80ae6ae:  ret
 80ae6af:  add BYTE PTR [ebp-0x77], dl
 80ae6b2:  ???
 80ae6b3:  push esi
 80ae6b4:  push ebx
 80ae6b5:  sub esp, 0x4
 80ae6b8:  mov ebx, DWORD PTR ds:0x80d28e0
 80ae6be:  test ebx, ebx
 80ae6c0:  jne 80ae6ca
 80ae6c2:  jmp 80ae6f6
 80ae6c4:  lea esi, [esi]
 80ae6c8:  mov ebx, esi
 80ae6ca:  mov eax, DWORD PTR [ebx+0x8]
 80ae6cd:  test eax, eax
 80ae6cf:  je 80ae6dd
 80ae6d1:  lea esi, [esi]
 80ae6d8:  call 80ae700
 80ae6dd:  mov esi, DWORD PTR [ebx+0xc]
 80ae6e0:  mov eax, DWORD PTR [ebx]
 80ae6e2:  mov DWORD PTR [esp], eax
 80ae6e5:  call 804b4a0
 80ae6ea:  mov DWORD PTR [esp], ebx
 80ae6ed:  call 804b4a0
 80ae6f2:  test esi, esi
 80ae6f4:  jne 80ae6c8
 80ae6f6:  add esp, 0x4
 80ae6f9:  pop ebx
 80ae6fa:  pop esi
 80ae6fb:  pop ebp
 80ae6fc:  ret
 80ae6fd:  add BYTE PTR [eax], al
 80ae6ff:  add BYTE PTR [ebp-0x77], dl
 80ae702:  ???
 80ae703:  push edi
 80ae704:  push esi
 80ae705:  push ebx
 80ae706:  sub esp, 0xc
 80ae709:  mov DWORD PTR [ebp-0x10], eax
 80ae70c:  mov eax, DWORD PTR [eax+0x60]
 80ae70f:  cmp eax, 0x80b0a48
 80ae714:  je 80ae71b
 80ae716:  call 8054d10
 80ae71b:  mov eax, DWORD PTR [ebp-0x10]
 80ae71e:  mov ecx, DWORD PTR [eax+0x3c]
 80ae721:  test ecx, ecx
 80ae723:  je 80ae778
 80ae725:  xor edi, edi
 80ae727:  xor esi, esi
 80ae729:  jmp 80ae74b
 80ae72b:  nop
 80ae72c:  lea esi, [esi]
 80ae730:  mov eax, DWORD PTR [ebx+0x4]
 80ae733:  cmp eax, 0xff
 80ae736:  je 80ae73d
 80ae738:  call 8080190
 80ae73d:  mov eax, DWORD PTR [ebp-0x10]
 80ae740:  add edi, 0x1
 80ae743:  add esi, 0xc
 80ae746:  cmp DWORD PTR [eax+0x3c], edi
 80ae749:  jbe 80ae778
 80ae74b:  mov edx, DWORD PTR [ebp-0x10]
 80ae74e:  mov ebx, esi
 80ae750:  add ebx, DWORD PTR [edx+0x38]
 80ae753:  mov eax, DWORD PTR [ebx]
 80ae755:  mov DWORD PTR [esp], eax
 80ae758:  call 804b4a0
 80ae75d:  mov edx, DWORD PTR [ebx+0x8]
 80ae760:  lea eax, [edx-0x1]
 80ae763:  cmp eax, 0xfd
 80ae766:  ja 80ae730
 80ae768:  mov DWORD PTR [esp], edx
 80ae76b:  call 804b4a0
 80ae770:  jmp 80ae730
 80ae772:  lea esi, [esi]
 80ae778:  mov edx, DWORD PTR [ebp-0x10]
 80ae77b:  mov eax, DWORD PTR [edx+0x38]
 80ae77e:  mov DWORD PTR [esp], eax
 80ae781:  call 804b4a0
 80ae786:  mov eax, 0x0
 80ae78b:  test eax, eax
 80ae78d:  je 80ae79d
 80ae78f:  mov eax, DWORD PTR [ebp-0x10]
 80ae792:  add eax, 0x40
 80ae795:  mov DWORD PTR [esp], eax
 80ae798:  call 0
 80ae79d:  mov edx, DWORD PTR [ebp-0x10]
 80ae7a0:  mov eax, DWORD PTR [edx+0x10]
 80ae7a3:  mov DWORD PTR [esp], eax
 80ae7a6:  call 804b4a0
 80ae7ab:  mov eax, DWORD PTR [ebp-0x10]
 80ae7ae:  mov edx, DWORD PTR [eax+0x4]
 80ae7b1:  test edx, edx
 80ae7b3:  jne 80ae7d8
 80ae7b5:  mov eax, DWORD PTR [eax]
 80ae7b7:  mov DWORD PTR [esp], eax
 80ae7ba:  call 804b4a0
 80ae7bf:  mov eax, DWORD PTR [ebp-0x10]
 80ae7c2:  mov DWORD PTR [esp], eax
 80ae7c5:  call 804b4a0
 80ae7ca:  add esp, 0xc
 80ae7cd:  pop ebx
 80ae7ce:  pop esi
 80ae7cf:  pop edi
 80ae7d0:  pop ebp
 80ae7d1:  ret
 80ae7d2:  lea esi, [esi]
 80ae7d8:  mov edx, eax
 80ae7da:  mov eax, DWORD PTR [eax+0x8]
 80ae7dd:  mov DWORD PTR [esp+0x4], eax
 80ae7e1:  mov eax, DWORD PTR [edx]
 80ae7e3:  mov DWORD PTR [esp], eax
 80ae7e6:  call 8050050
 80ae7eb:  jmp 80ae7bf
 80ae7ed:  add BYTE PTR [eax], al
 80ae7ef:  add BYTE PTR [ebp+0x31], dl
 80ae7f2:  ror BYTE PTR [ecx+0x1b9e5], 0x0
 80ae7f9:  add BYTE PTR [ebx-0x7c9af714], al
 80ae7ff:  cmp eax, 0xc
 80ae804:  add BYTE PTR [ecx+eax-0x10], dh
 80ae808:  cmpxchg DWORD PTR ds:0x80d291c, ecx
 80ae80f:  jne 80ae878
 80ae811:  mov eax, ds:0x80d2218
 80ae816:  cmp eax, DWORD PTR ds:0x80d2924
 80ae81c:  je 80ae860
 80ae81e:  mov DWORD PTR ds:0x80d2218, 0x0
 80ae828:  cmp DWORD PTR gs:0xc, 0x0
 80ae830:  je 80ae833
 80ae832:  sub DWORD PTR ds:0x80d291c, 0x1
 80ae83a:  jne 80ae885
 80ae83c:  mov eax, ds:0x80d2920
 80ae841:  mov DWORD PTR [esp+0x4], 0x804b4a0
 80ae849:  mov DWORD PTR [esp], eax
 80ae84c:  call 80740a0
 80ae851:  mov DWORD PTR ds:0x80d2920, 0x0
 80ae85b:  leave
 80ae85c:  ret
 80ae85d:  lea esi, [esi]
 80ae860:  test eax, eax
 80ae862:  je 80ae81e
 80ae864:  mov DWORD PTR [esp], eax
 80ae867:  call 804b4a0
 80ae86c:  mov DWORD PTR ds:0x80d2924, 0x0
 80ae876:  jmp 80ae81e

080ae878 <_L_lock_682>:
 80ae878:  lea ecx, ds:0x80d291c
 80ae87e:  call 8050230
 80ae883:  jmp 80ae811

080ae885 <_L_unlock_692>:
 80ae885:  lea eax, ds:0x80d291c
 80ae88b:  call 8050260
 80ae890:  jmp 80ae83c
 80ae892:  add BYTE PTR [eax], al
 80ae894:  add BYTE PTR [eax], al
 80ae896:  add BYTE PTR [eax], al
 80ae898:  add BYTE PTR [eax], al
 80ae89a:  add BYTE PTR [eax], al
 80ae89c:  add BYTE PTR [eax], al
 80ae89e:  add BYTE PTR [eax], al

080ae8a0 <buffer_free>:
 80ae8a0:  push ebp
 80ae8a1:  mov ebp, esp
 80ae8a3:  sub esp, 0x8
 80ae8a6:  mov edx, DWORD PTR ds:0x80d2940
 80ae8ac:  mov BYTE PTR ds:0x80d293c, 0x1
 80ae8b3:  test edx, edx
 80ae8b5:  je 80ae8e6
 80ae8b7:  nop
 80ae8b8:  mov eax, DWORD PTR [edx+0x64]
 80ae8bb:  add eax, 0xfff
 80ae8c0:  and eax, 0xfffff000
 80ae8c5:  mov DWORD PTR [esp+0x4], eax
 80ae8c9:  mov eax, DWORD PTR [edx+0x60]
 80ae8cc:  mov DWORD PTR [esp], eax
 80ae8cf:  call 8050050
 80ae8d4:  mov eax, ds:0x80d2940
 80ae8d9:  mov edx, DWORD PTR [eax+0x5c]
 80ae8dc:  test edx, edx
 80ae8de:  mov DWORD PTR ds:0x80d2940, edx
 80ae8e4:  jne 80ae8b8
 80ae8e6:  leave
 80ae8e7:  ret
 80ae8e8:  add BYTE PTR [eax], al
 80ae8ea:  add BYTE PTR [eax], al
 80ae8ec:  add BYTE PTR [eax], al
 80ae8ee:  add BYTE PTR [eax], al

080ae8f0 <free_mem>:
 80ae8f0:  push ebp
 80ae8f1:  mov ebp, esp
 80ae8f3:  sub esp, 0x4
 80ae8f6:  mov edx, DWORD PTR ds:0x80d29e0
 80ae8fc:  test edx, edx
 80ae8fe:  je 80ae919
 80ae900:  mov eax, DWORD PTR [edx]
 80ae902:  mov DWORD PTR [esp], edx
 80ae905:  mov ds:0x80d29e0, eax
 80ae90a:  call 804b4a0
 80ae90f:  mov edx, DWORD PTR ds:0x80d29e0
 80ae915:  test edx, edx
 80ae917:  jne 80ae900
 80ae919:  mov eax, ds:0x80d29e4
 80ae91e:  mov DWORD PTR [esp], eax
 80ae921:  call 804b4a0
 80ae926:  mov DWORD PTR ds:0x80d29e4, 0x0
 80ae930:  leave
 80ae931:  ret
 80ae932:  add BYTE PTR [eax], al
 80ae934:  add BYTE PTR [eax], al
 80ae936:  add BYTE PTR [eax], al
 80ae938:  add BYTE PTR [eax], al
 80ae93a:  add BYTE PTR [eax], al
 80ae93c:  add BYTE PTR [eax], al
 80ae93e:  add BYTE PTR [eax], al

080ae940 <free_slotinfo>:
 80ae940:  push ebp
 80ae941:  mov ebp, esp
 80ae943:  push edi
 80ae944:  push esi
 80ae945:  push ebx
 80ae946:  sub esp, 0x1c
 80ae949:  mov ebx, DWORD PTR [eax]
 80ae94b:  mov DWORD PTR [ebp-0x24], eax
 80ae94e:  mov eax, 0x1
 80ae953:  test ebx, ebx
 80ae955:  je 80aea42
 80ae95b:  mov esi, DWORD PTR [ebx+0x4]
 80ae95e:  test esi, esi
 80ae960:  je 80aea9b
 80ae966:  mov edi, DWORD PTR [esi+0x4]
 80ae969:  test edi, edi
 80ae96b:  je 80aea62
 80ae971:  mov eax, DWORD PTR [edi+0x4]
 80ae974:  test eax, eax
 80ae976:  mov DWORD PTR [ebp-0x20], eax
 80ae979:  je 80aec43
 80ae97f:  mov edx, DWORD PTR [eax+0x4]
 80ae982:  test edx, edx
 80ae984:  mov DWORD PTR [ebp-0x1c], edx
 80ae987:  je 80aebfb
 80ae98d:  mov ecx, DWORD PTR [edx+0x4]
 80ae990:  test ecx, ecx
 80ae992:  mov DWORD PTR [ebp-0x18], ecx
 80ae995:  je 80aeba4
 80ae99b:  mov eax, DWORD PTR [ecx+0x4]
 80ae99e:  test eax, eax
 80ae9a0:  mov DWORD PTR [ebp-0x14], eax
 80ae9a3:  je 80aeb54
 80ae9a9:  mov edx, DWORD PTR [eax+0x4]
 80ae9ac:  test edx, edx
 80ae9ae:  mov DWORD PTR [ebp-0x10], edx
 80ae9b1:  je 80aeb03
 80ae9b7:  mov eax, DWORD PTR [edx+0x4]
 80ae9ba:  test eax, eax
 80ae9bc:  je 80aea0d
 80ae9be:  add eax, 0x4
 80ae9c1:  call 80ae940
 80ae9c6:  test al, al
 80ae9c8:  je 80aea40
 80ae9ca:  mov ecx, DWORD PTR [ebp-0x10]
 80ae9cd:  mov edx, DWORD PTR [ecx+0x4]
 80ae9d0:  mov ecx, DWORD PTR [edx]
 80ae9d2:  test ecx, ecx
 80ae9d4:  je 80ae9f2
 80ae9d6:  xor eax, eax
 80ae9d8:  cmp DWORD PTR [edx+0xc], 0x0
 80ae9dc:  je 80ae9ea
 80ae9de:  jmp 80aea40
 80ae9e0:  cmp DWORD PTR [edx+eax*8+0xc], 0x0
 80ae9e5:  lea esi, [esi]
 80ae9e8:  jne 80aea40
 80ae9ea:  add eax, 0x1
 80ae9ed:  cmp ecx, eax
 80ae9ef:  nop
 80ae9f0:  ja 80ae9e0
 80ae9f2:  mov DWORD PTR [esp], edx
 80ae9f5:  call 804b4a0
 80ae9fa:  mov eax, DWORD PTR [ebp-0x10]
 80ae9fd:  mov edx, DWORD PTR [ebp-0x14]
 80aea00:  mov DWORD PTR [eax+0x4], 0x0
 80aea07:  mov edx, DWORD PTR [edx+0x4]
 80aea0a:  mov DWORD PTR [ebp-0x10], edx
 80aea0d:  mov ecx, DWORD PTR [ebp-0x10]
 80aea10:  mov edx, DWORD PTR [ecx]
 80aea12:  test edx, edx
 80aea14:  je 80aeae5
 80aea1a:  mov ecx, DWORD PTR [ecx+0xc]
 80aea1d:  xor eax, eax
 80aea1f:  test ecx, ecx
 80aea21:  jne 80aea40
 80aea23:  nop
 80aea24:  lea esi, [esi]
 80aea28:  add eax, 0x1
 80aea2b:  cmp edx, eax
 80aea2d:  jbe 80aeae5
 80aea33:  mov ecx, DWORD PTR [ebp-0x10]
 80aea36:  mov ecx, DWORD PTR [ecx+eax*8+0xc]
 80aea3a:  test ecx, ecx
 80aea3c:  je 80aea28
 80aea3e:  xchg ax, ax
 80aea40:  xor eax, eax
 80aea42:  add esp, 0x1c
 80aea45:  pop ebx
 80aea46:  pop esi
 80aea47:  pop edi
 80aea48:  pop ebp
 80aea49:  ret
 80aea4a:  lea esi, [esi]
 80aea50:  mov DWORD PTR [esp], edi
 80aea53:  call 804b4a0
 80aea58:  mov DWORD PTR [esi+0x4], 0x0
 80aea5f:  mov esi, DWORD PTR [ebx+0x4]
 80aea62:  mov edx, DWORD PTR [esi]
 80aea64:  test edx, edx
 80aea66:  je 80aea87
 80aea68:  mov ecx, DWORD PTR [esi+0xc]
 80aea6b:  xor eax, eax
 80aea6d:  test ecx, ecx
 80aea6f:  jne 80aea40
 80aea71:  add eax, 0x1
 80aea74:  cmp eax, edx
 80aea76:  jae 80aea87
 80aea78:  mov edi, DWORD PTR [esi+eax*8+0xc]
 80aea7c:  test edi, edi
 80aea7e:  jne 80aea40
 80aea80:  add eax, 0x1
 80aea83:  cmp eax, edx
 80aea85:  jb 80aea78
 80aea87:  mov DWORD PTR [esp], esi
 80aea8a:  call 804b4a0
 80aea8f:  mov edx, DWORD PTR [ebp-0x24]
 80aea92:  mov DWORD PTR [ebx+0x4], 0x0
 80aea99:  mov ebx, DWORD PTR [edx]
 80aea9b:  mov edx, DWORD PTR [ebx]
 80aea9d:  test edx, edx
 80aea9f:  je 80aeac7
 80aeaa1:  mov esi, DWORD PTR [ebx+0xc]
 80aeaa4:  xor eax, eax
 80aeaa6:  test esi, esi
 80aeaa8:  jne 80aea40
 80aeaaa:  add eax, 0x1
 80aeaad:  cmp eax, edx
 80aeaaf:  jae 80aeac7
 80aeab1:  lea esi, [esi]
 80aeab8:  mov ecx, DWORD PTR [ebx+eax*8+0xc]
 80aeabc:  test ecx, ecx
 80aeabe:  jne 80aea40
 80aeac0:  add eax, 0x1
 80aeac3:  cmp eax, edx
 80aeac5:  jb 80aeab8
 80aeac7:  mov DWORD PTR [esp], ebx
 80aeaca:  call 804b4a0
 80aeacf:  mov ecx, DWORD PTR [ebp-0x24]
 80aead2:  mov eax, 0x1
 80aead7:  mov DWORD PTR [ecx], 0x0
 80aeadd:  add esp, 0x1c
 80aeae0:  pop ebx
 80aeae1:  pop esi
 80aeae2:  pop edi
 80aeae3:  pop ebp
 80aeae4:  ret
 80aeae5:  mov eax, DWORD PTR [ebp-0x10]
 80aeae8:  mov DWORD PTR [esp], eax
 80aeaeb:  call 804b4a0
 80aeaf0:  mov edx, DWORD PTR [ebp-0x14]
 80aeaf3:  mov ecx, DWORD PTR [ebp-0x18]
 80aeaf6:  mov DWORD PTR [edx+0x4], 0x0
 80aeafd:  mov ecx, DWORD PTR [ecx+0x4]
 80aeb00:  mov DWORD PTR [ebp-0x14], ecx
 80aeb03:  mov eax, DWORD PTR [ebp-0x14]
 80aeb06:  mov edx, DWORD PTR [eax]
 80aeb08:  test edx, edx
 80aeb0a:  je 80aeb36
 80aeb0c:  mov ecx, eax
 80aeb0e:  xor eax, eax
 80aeb10:  mov ecx, DWORD PTR [ecx+0xc]
 80aeb13:  test ecx, ecx
 80aeb15:  je 80aeb2f
 80aeb17:  jmp 80aea40
 80aeb1c:  lea esi, [esi]
 80aeb20:  mov ecx, DWORD PTR [ebp-0x14]
 80aeb23:  mov ecx, DWORD PTR [ecx+eax*8+0xc]
 80aeb27:  test ecx, ecx
 80aeb29:  jne 80aea40
 80aeb2f:  add eax, 0x1
 80aeb32:  cmp eax, edx
 80aeb34:  jb 80aeb20
 80aeb36:  mov eax, DWORD PTR [ebp-0x14]
 80aeb39:  mov DWORD PTR [esp], eax
 80aeb3c:  call 804b4a0
 80aeb41:  mov edx, DWORD PTR [ebp-0x18]
 80aeb44:  mov ecx, DWORD PTR [ebp-0x1c]
 80aeb47:  mov DWORD PTR [edx+0x4], 0x0
 80aeb4e:  mov ecx, DWORD PTR [ecx+0x4]
 80aeb51:  mov DWORD PTR [ebp-0x18], ecx
 80aeb54:  mov eax, DWORD PTR [ebp-0x18]
 80aeb57:  mov edx, DWORD PTR [eax]
 80aeb59:  test edx, edx
 80aeb5b:  je 80aeb86
 80aeb5d:  mov ecx, eax
 80aeb5f:  xor eax, eax
 80aeb61:  mov ecx, DWORD PTR [ecx+0xc]
 80aeb64:  test ecx, ecx
 80aeb66:  je 80aeb7f
 80aeb68:  jmp 80aea40
 80aeb6d:  lea esi, [esi]
 80aeb70:  mov ecx, DWORD PTR [ebp-0x18]
 80aeb73:  mov ecx, DWORD PTR [ecx+eax*8+0xc]
 80aeb77:  test ecx, ecx
 80aeb79:  jne 80aea40
 80aeb7f:  add eax, 0x1
 80aeb82:  cmp edx, eax
 80aeb84:  ja 80aeb70
 80aeb86:  mov eax, DWORD PTR [ebp-0x18]
 80aeb89:  mov DWORD PTR [esp], eax
 80aeb8c:  call 804b4a0
 80aeb91:  mov edx, DWORD PTR [ebp-0x1c]
 80aeb94:  mov ecx, DWORD PTR [ebp-0x20]
 80aeb97:  mov DWORD PTR [edx+0x4], 0x0
 80aeb9e:  mov ecx, DWORD PTR [ecx+0x4]
 80aeba1:  mov DWORD PTR [ebp-0x1c], ecx
 80aeba4:  mov eax, DWORD PTR [ebp-0x1c]
 80aeba7:  mov edx, DWORD PTR [eax]
 80aeba9:  test edx, edx
 80aebab:  je 80aebe0
 80aebad:  mov ecx, eax
 80aebaf:  xor eax, eax
 80aebb1:  mov ecx, DWORD PTR [ecx+0xc]
 80aebb4:  test ecx, ecx
 80aebb6:  jne 80aea40
 80aebbc:  lea esi, [esi]
 80aebc0:  add eax, 0x1
 80aebc3:  cmp edx, eax
 80aebc5:  jbe 80aebe0
 80aebc7:  mov ecx, DWORD PTR [ebp-0x1c]
 80aebca:  mov ecx, DWORD PTR [ecx+eax*8+0xc]
 80aebce:  test ecx, ecx
 80aebd0:  je 80aebc0
 80aebd2:  xor eax, eax
 80aebd4:  jmp 80aea42
 80aebd9:  lea esi, [esi]
 80aebe0:  mov eax, DWORD PTR [ebp-0x1c]
 80aebe3:  mov DWORD PTR [esp], eax
 80aebe6:  call 804b4a0
 80aebeb:  mov edx, DWORD PTR [ebp-0x20]
 80aebee:  mov DWORD PTR [edx+0x4], 0x0
 80aebf5:  mov ecx, DWORD PTR [edi+0x4]
 80aebf8:  mov DWORD PTR [ebp-0x20], ecx
 80aebfb:  mov eax, DWORD PTR [ebp-0x20]
 80aebfe:  mov edx, DWORD PTR [eax]
 80aec00:  test edx, edx
 80aec02:  je 80aec2e
 80aec04:  mov ecx, eax
 80aec06:  xor eax, eax
 80aec08:  mov ecx, DWORD PTR [ecx+0xc]
 80aec0b:  test ecx, ecx
 80aec0d:  je 80aec27
 80aec0f:  jmp 80aea40
 80aec14:  lea esi, [esi]
 80aec18:  mov ecx, DWORD PTR [ebp-0x20]
 80aec1b:  mov ecx, DWORD PTR [ecx+eax*8+0xc]
 80aec1f:  test ecx, ecx
 80aec21:  jne 80aea40
 80aec27:  add eax, 0x1
 80aec2a:  cmp eax, edx
 80aec2c:  jb 80aec18
 80aec2e:  mov eax, DWORD PTR [ebp-0x20]
 80aec31:  mov DWORD PTR [esp], eax
 80aec34:  call 804b4a0
 80aec39:  mov DWORD PTR [edi+0x4], 0x0
 80aec40:  mov edi, DWORD PTR [esi+0x4]
 80aec43:  mov edx, DWORD PTR [edi]
 80aec45:  test edx, edx
 80aec47:  je 80aea50
 80aec4d:  mov ecx, DWORD PTR [edi+0xc]
 80aec50:  xor eax, eax
 80aec52:  test ecx, ecx
 80aec54:  jne 80aea40
 80aec5a:  lea esi, [esi]
 80aec60:  add eax, 0x1
 80aec63:  cmp eax, edx
 80aec65:  jae 80aea50
 80aec6b:  mov ecx, DWORD PTR [edi+eax*8+0xc]
 80aec6f:  test ecx, ecx
 80aec71:  je 80aec60
 80aec73:  xor eax, eax
 80aec75:  jmp 80aea42
 80aec7a:  lea esi, [esi]

080aec80 <free_mem>:
 80aec80:  push ebp
 80aec81:  mov ebp, esp
 80aec83:  push ebx
 80aec84:  sub esp, 0x4
 80aec87:  mov eax, ds:0x80d2e4c
 80aec8c:  test eax, eax
 80aec8e:  jne 80aecfe
 80aec90:  mov ebx, DWORD PTR ds:0x80d2d98
 80aec96:  mov eax, DWORD PTR [ebx+0x4]
 80aec99:  test eax, eax
 80aec9b:  je 80aece1
 80aec9d:  add eax, 0x4
 80aeca0:  call 80ae940
 80aeca5:  test al, al
 80aeca7:  je 80aece1
 80aeca9:  mov edx, DWORD PTR [ebx+0x4]
 80aecac:  mov ecx, DWORD PTR [edx]
 80aecae:  test ecx, ecx
 80aecb0:  je 80aecd2
 80aecb2:  xor eax, eax
 80aecb4:  cmp DWORD PTR [edx+0xc], 0x0
 80aecb8:  je 80aecca
 80aecba:  jmp 80aece1
 80aecbc:  lea esi, [esi]
 80aecc0:  cmp DWORD PTR [edx+eax*8+0xc], 0x0
 80aecc5:  lea esi, [esi]
 80aecc8:  jne 80aece1
 80aecca:  add eax, 0x1
 80aeccd:  cmp eax, ecx
 80aeccf:  nop
 80aecd0:  jb 80aecc0
 80aecd2:  mov DWORD PTR [esp], edx
 80aecd5:  call 804b4a0
 80aecda:  mov DWORD PTR [ebx+0x4], 0x0
 80aece1:  mov eax, ds:0x80d2df8
 80aece6:  mov DWORD PTR ds:0x80d2df8, 0x0
 80aecf0:  mov DWORD PTR [esp], eax
 80aecf3:  call 804b4a0
 80aecf8:  add esp, 0x4
 80aecfb:  pop ebx
 80aecfc:  pop ebp
 80aecfd:  ret
 80aecfe:  mov ecx, DWORD PTR ds:0x80d2e48
 80aed04:  mov eax, DWORD PTR [ecx+0x4]
 80aed07:  cmp eax, DWORD PTR ds:0x80d2dc8
 80aed0d:  jne 80aec90
 80aed0f:  mov eax, ds:0x80d2dc4
 80aed14:  mov edx, DWORD PTR [ecx]
 80aed16:  mov DWORD PTR ds:0x80d2e4c, 0x0
 80aed20:  mov DWORD PTR [ecx], eax
 80aed22:  mov DWORD PTR [esp], edx
 80aed25:  call 804b4a0
 80aed2a:  jmp 80aec90
 80aed2f:  add BYTE PTR [ebp-0x77], dl
 80aed32:  ???
 80aed33:  push edi
 80aed34:  push esi
 80aed35:  push ebx
 80aed36:  sub esp, 0x14
 80aed39:  mov eax, DWORD PTR [ebp+0x8]
 80aed3c:  mov ecx, DWORD PTR [eax+0xc]
 80aed3f:  mov DWORD PTR [ebp-0x10], eax
 80aed42:  test ecx, ecx
 80aed44:  je 80aee07
 80aed4a:  mov ebx, DWORD PTR [eax+0x8]
 80aed4d:  xor edi, edi
 80aed4f:  xor esi, esi
 80aed51:  lea esi, [esi]
 80aed58:  lea eax, [ebx+esi]
 80aed5b:  mov edx, DWORD PTR [eax+0x8]
 80aed5e:  test edx, edx
 80aed60:  jle 80aed99
 80aed62:  mov edx, DWORD PTR [eax+0x20]
 80aed65:  test edx, edx
 80aed67:  je 80aed99
 80aed69:  mov eax, DWORD PTR [eax]
 80aed6b:  test eax, eax
 80aed6d:  je 80aede3
 80aed6f:  mov ebx, edx
 80aed71:  ror ebx, 0x9
 80aed74:  xor ebx, DWORD PTR gs:0x18
 80aed7b:  mov DWORD PTR [esp], ebx
 80aed7e:  call 807f350
 80aed83:  mov edx, DWORD PTR [ebp-0x10]
 80aed86:  mov eax, esi
 80aed88:  add eax, DWORD PTR [edx+0x8]
 80aed8b:  mov DWORD PTR [esp], eax
 80aed8e:  call ebx
 80aed90:  mov eax, DWORD PTR [ebp-0x10]
 80aed93:  mov ebx, DWORD PTR [eax+0x8]
 80aed96:  mov ecx, DWORD PTR [eax+0xc]
 80aed99:  add edi, 0x1
 80aed9c:  add esi, 0x3c
 80aed9f:  cmp edi, ecx
 80aeda1:  jb 80aed58
 80aeda3:  mov eax, DWORD PTR [ebx+0xc]
 80aeda6:  mov DWORD PTR [esp], eax
 80aeda9:  call 804b4a0
 80aedae:  mov edx, DWORD PTR [ebp-0x10]
 80aedb1:  imul eax, DWORD PTR [edx+0xc], 0x3c
 80aedb5:  add eax, DWORD PTR [edx+0x8]
 80aedb8:  mov eax, DWORD PTR [eax-0x2c]
 80aedbb:  mov DWORD PTR [esp], eax
 80aedbe:  call 804b4a0
 80aedc3:  mov edx, DWORD PTR [ebp-0x10]
 80aedc6:  mov eax, DWORD PTR [edx+0x8]
 80aedc9:  mov DWORD PTR [esp], eax
 80aedcc:  call 804b4a0
 80aedd1:  mov eax, DWORD PTR [ebp-0x10]
 80aedd4:  mov DWORD PTR [ebp+0x8], eax
 80aedd7:  add esp, 0x14
 80aedda:  pop ebx
 80aeddb:  pop esi
 80aeddc:  pop edi
 80aeddd:  pop ebp
 80aedde:  jmp 804b4a0
 80aede3:  mov DWORD PTR [esp+0xc], 0x80b5491
 80aedeb:  mov DWORD PTR [esp+0x8], 0xbb
 80aedf3:  mov DWORD PTR [esp+0x4], 0x80b5484
 80aedfb:  mov DWORD PTR [esp], 0x80b54c0
 80aee02:  call 8051490
 80aee07:  mov ebx, DWORD PTR [eax+0x8]
 80aee0a:  jmp 80aeda3
 80aee0c:  lea esi, [esi]

080aee10 <free_modules_db>:
 80aee10:  push ebp
 80aee11:  mov ebp, esp
 80aee13:  push edi
 80aee14:  push esi
 80aee15:  push ebx
 80aee16:  sub esp, 0x10
 80aee19:  mov DWORD PTR [ebp-0x18], eax
 80aee1c:  mov eax, DWORD PTR [eax+0x14]
 80aee1f:  test eax, eax
 80aee21:  mov DWORD PTR [ebp-0x14], eax
 80aee24:  je 80aef30
 80aee2a:  mov ebx, DWORD PTR [eax+0x14]
 80aee2d:  test ebx, ebx
 80aee2f:  je 80aee78
 80aee31:  mov eax, DWORD PTR [ebx+0x14]
 80aee34:  test eax, eax
 80aee36:  je 80aee3d
 80aee38:  call 80aee10
 80aee3d:  mov eax, DWORD PTR [ebx+0x1c]
 80aee40:  test eax, eax
 80aee42:  je 80aee5e
 80aee44:  call 80aee10
 80aee49:  mov eax, DWORD PTR [ebx+0x10]
 80aee4c:  mov esi, DWORD PTR [ebx+0x18]
 80aee4f:  cmp BYTE PTR [eax], 0x2f
 80aee52:  je 80aee69
 80aee54:  lea esi, [esi]
 80aee58:  test esi, esi
 80aee5a:  je 80aee78
 80aee5c:  mov ebx, esi
 80aee5e:  mov eax, DWORD PTR [ebx+0x10]
 80aee61:  mov esi, DWORD PTR [ebx+0x18]
 80aee64:  cmp BYTE PTR [eax], 0x2f
 80aee67:  jne 80aee58
 80aee69:  mov DWORD PTR [esp], ebx
 80aee6c:  call 804b4a0
 80aee71:  test esi, esi
 80aee73:  jne 80aee5c
 80aee75:  lea esi, [esi]
 80aee78:  mov edx, DWORD PTR [ebp-0x14]
 80aee7b:  mov edi, DWORD PTR [edx+0x1c]
 80aee7e:  test edi, edi
 80aee80:  je 80af179
 80aee86:  mov ebx, DWORD PTR [edi+0x14]
 80aee89:  test ebx, ebx
 80aee8b:  je 80aeed8
 80aee8d:  mov eax, DWORD PTR [ebx+0x14]
 80aee90:  test eax, eax
 80aee92:  je 80aee99
 80aee94:  call 80aee10
 80aee99:  mov eax, DWORD PTR [ebx+0x1c]
 80aee9c:  test eax, eax
 80aee9e:  je 80aeebc
 80aeea0:  call 80aee10
 80aeea5:  lea esi, [esi]
 80aeea8:  jmp 80aeebc
 80aeeaa:  lea esi, [esi]
 80aeeb0:  test esi, esi
 80aeeb2:  lea esi, [esi]
 80aeeb8:  je 80aeed8
 80aeeba:  mov ebx, esi
 80aeebc:  mov eax, DWORD PTR [ebx+0x10]
 80aeebf:  mov esi, DWORD PTR [ebx+0x18]
 80aeec2:  cmp BYTE PTR [eax], 0x2f
 80aeec5:  jne 80aeeb0
 80aeec7:  mov DWORD PTR [esp], ebx
 80aeeca:  call 804b4a0
 80aeecf:  test esi, esi
 80aeed1:  jne 80aeeba
 80aeed3:  nop
 80aeed4:  lea esi, [esi]
 80aeed8:  mov ebx, DWORD PTR [edi+0x1c]
 80aeedb:  test ebx, ebx
 80aeedd:  je 80af1a4
 80aeee3:  mov eax, DWORD PTR [ebx+0x14]
 80aeee6:  test eax, eax
 80aeee8:  je 80aeeef
 80aeeea:  call 80aee10
 80aeeef:  mov eax, DWORD PTR [ebx+0x1c]
 80aeef2:  test eax, eax
 80aeef4:  je 80aef18
 80aeef6:  call 80aee10
 80aeefb:  nop
 80aeefc:  lea esi, [esi]
 80aef00:  jmp 80aef18
 80aef02:  lea esi, [esi]
 80aef08:  test esi, esi
 80aef0a:  lea esi, [esi]
 80aef10:  je 80af1a4
 80aef16:  mov ebx, esi
 80aef18:  mov eax, DWORD PTR [ebx+0x10]
 80aef1b:  mov esi, DWORD PTR [ebx+0x18]
 80aef1e:  cmp BYTE PTR [eax], 0x2f
 80aef21:  jne 80aef08
 80aef23:  mov DWORD PTR [esp], ebx
 80aef26:  call 804b4a0
 80aef2b:  jmp 80aef08
 80aef2d:  lea esi, [esi]
 80aef30:  mov eax, DWORD PTR [ebp-0x18]
 80aef33:  mov eax, DWORD PTR [eax+0x1c]
 80aef36:  test eax, eax
 80aef38:  mov DWORD PTR [ebp-0x10], eax
 80aef3b:  je 80af013
 80aef41:  mov edi, DWORD PTR [eax+0x14]
 80aef44:  test edi, edi
 80aef46:  je 80af051
 80aef4c:  mov ebx, DWORD PTR [edi+0x14]
 80aef4f:  test ebx, ebx
 80aef51:  je 80aefa0
 80aef53:  mov eax, DWORD PTR [ebx+0x14]
 80aef56:  test eax, eax
 80aef58:  je 80aef5f
 80aef5a:  call 80aee10
 80aef5f:  mov eax, DWORD PTR [ebx+0x1c]
 80aef62:  test eax, eax
 80aef64:  je 80aef84
 80aef66:  call 80aee10
 80aef6b:  nop
 80aef6c:  lea esi, [esi]
 80aef70:  jmp 80aef84
 80aef72:  lea esi, [esi]
 80aef78:  test esi, esi
 80aef7a:  lea esi, [esi]
 80aef80:  je 80aefa0
 80aef82:  mov ebx, esi
 80aef84:  mov eax, DWORD PTR [ebx+0x10]
 80aef87:  mov esi, DWORD PTR [ebx+0x18]
 80aef8a:  cmp BYTE PTR [eax], 0x2f
 80aef8d:  jne 80aef78
 80aef8f:  mov DWORD PTR [esp], ebx
 80aef92:  call 804b4a0
 80aef97:  test esi, esi
 80aef99:  jne 80aef82
 80aef9b:  nop
 80aef9c:  lea esi, [esi]
 80aefa0:  mov ebx, DWORD PTR [edi+0x1c]
 80aefa3:  test ebx, ebx
 80aefa5:  je 80af042
 80aefab:  mov eax, DWORD PTR [ebx+0x14]
 80aefae:  test eax, eax
 80aefb0:  je 80aefb7
 80aefb2:  call 80aee10
 80aefb7:  mov eax, DWORD PTR [ebx+0x1c]
 80aefba:  test eax, eax
 80aefbc:  je 80aefdc
 80aefbe:  call 80aee10
 80aefc3:  nop
 80aefc4:  lea esi, [esi]
 80aefc8:  jmp 80aefdc
 80aefca:  lea esi, [esi]
 80aefd0:  test esi, esi
 80aefd2:  lea esi, [esi]
 80aefd8:  je 80af042
 80aefda:  mov ebx, esi
 80aefdc:  mov eax, DWORD PTR [ebx+0x10]
 80aefdf:  mov esi, DWORD PTR [ebx+0x18]
 80aefe2:  cmp BYTE PTR [eax], 0x2f
 80aefe5:  jne 80aefd0
 80aefe7:  mov DWORD PTR [esp], ebx
 80aefea:  call 804b4a0
 80aefef:  jmp 80aefd0
 80aeff1:  lea esi, [esi]
 80aeff8:  mov DWORD PTR [esp], edx
 80aeffb:  call 804b4a0
 80af000:  test ebx, ebx
 80af002:  lea esi, [esi]
 80af008:  je 80af027
 80af00a:  lea esi, [esi]
 80af010:  mov DWORD PTR [ebp-0x18], ebx
 80af013:  mov eax, DWORD PTR [ebp-0x18]
 80af016:  mov ebx, DWORD PTR [eax+0x18]
 80af019:  mov edx, eax
 80af01b:  mov eax, DWORD PTR [eax+0x10]
 80af01e:  cmp BYTE PTR [eax], 0x2f
 80af021:  je 80aeff8
 80af023:  test ebx, ebx
 80af025:  jne 80af010
 80af027:  add esp, 0x10
 80af02a:  pop ebx
 80af02b:  pop esi
 80af02c:  pop edi
 80af02d:  pop ebp
 80af02e:  ret
 80af02f:  nop
 80af030:  mov DWORD PTR [esp], edi
 80af033:  call 804b4a0
 80af038:  test ebx, ebx
 80af03a:  je 80af051
 80af03c:  lea esi, [esi]
 80af040:  mov edi, ebx
 80af042:  mov eax, DWORD PTR [edi+0x10]
 80af045:  mov ebx, DWORD PTR [edi+0x18]
 80af048:  cmp BYTE PTR [eax], 0x2f
 80af04b:  je 80af030
 80af04d:  test ebx, ebx
 80af04f:  jne 80af040
 80af051:  mov edx, DWORD PTR [ebp-0x10]
 80af054:  mov edi, DWORD PTR [edx+0x1c]
 80af057:  test edi, edi
 80af059:  je 80af121
 80af05f:  mov ebx, DWORD PTR [edi+0x14]
 80af062:  test ebx, ebx
 80af064:  je 80af0b0
 80af066:  mov eax, DWORD PTR [ebx+0x14]
 80af069:  test eax, eax
 80af06b:  je 80af072
 80af06d:  call 80aee10
 80af072:  mov eax, DWORD PTR [ebx+0x1c]
 80af075:  test eax, eax
 80af077:  je 80af094
 80af079:  call 80aee10
 80af07e:  xchg ax, ax
 80af080:  jmp 80af094
 80af082:  lea esi, [esi]
 80af088:  test esi, esi
 80af08a:  lea esi, [esi]
 80af090:  je 80af0b0
 80af092:  mov ebx, esi
 80af094:  mov eax, DWORD PTR [ebx+0x10]
 80af097:  mov esi, DWORD PTR [ebx+0x18]
 80af09a:  cmp BYTE PTR [eax], 0x2f
 80af09d:  jne 80af088
 80af09f:  mov DWORD PTR [esp], ebx
 80af0a2:  call 804b4a0
 80af0a7:  test esi, esi
 80af0a9:  jne 80af092
 80af0ab:  nop
 80af0ac:  lea esi, [esi]
 80af0b0:  mov ebx, DWORD PTR [edi+0x1c]
 80af0b3:  test ebx, ebx
 80af0b5:  je 80af14c
 80af0bb:  mov eax, DWORD PTR [ebx+0x14]
 80af0be:  test eax, eax
 80af0c0:  je 80af0c7
 80af0c2:  call 80aee10
 80af0c7:  mov eax, DWORD PTR [ebx+0x1c]
 80af0ca:  test eax, eax
 80af0cc:  je 80af0ec
 80af0ce:  call 80aee10
 80af0d3:  nop
 80af0d4:  lea esi, [esi]
 80af0d8:  jmp 80af0ec
 80af0da:  lea esi, [esi]
 80af0e0:  test esi, esi
 80af0e2:  lea esi, [esi]
 80af0e8:  je 80af14c
 80af0ea:  mov ebx, esi
 80af0ec:  mov eax, DWORD PTR [ebx+0x10]
 80af0ef:  mov esi, DWORD PTR [ebx+0x18]
 80af0f2:  cmp BYTE PTR [eax], 0x2f
 80af0f5:  jne 80af0e0
 80af0f7:  mov DWORD PTR [esp], ebx
 80af0fa:  call 804b4a0
 80af0ff:  jmp 80af0e0
 80af101:  mov DWORD PTR [esp], edx
 80af104:  call 804b4a0
 80af109:  lea esi, [esi]
 80af110:  test ebx, ebx
 80af112:  lea esi, [esi]
 80af118:  je 80af013
 80af11e:  mov DWORD PTR [ebp-0x10], ebx
 80af121:  mov eax, DWORD PTR [ebp-0x10]
 80af124:  mov ebx, DWORD PTR [eax+0x18]
 80af127:  mov edx, eax
 80af129:  mov eax, DWORD PTR [eax+0x10]
 80af12c:  cmp BYTE PTR [eax], 0x2f
 80af12f:  jne 80af110
 80af131:  jmp 80af101
 80af133:  mov DWORD PTR [esp], edi
 80af136:  call 804b4a0
 80af13b:  nop
 80af13c:  lea esi, [esi]
 80af140:  test ebx, ebx
 80af142:  lea esi, [esi]
 80af148:  je 80af121
 80af14a:  mov edi, ebx
 80af14c:  mov eax, DWORD PTR [edi+0x10]
 80af14f:  mov ebx, DWORD PTR [edi+0x18]
 80af152:  cmp BYTE PTR [eax], 0x2f
 80af155:  jne 80af140
 80af157:  jmp 80af133
 80af159:  mov DWORD PTR [esp], edx
 80af15c:  call 804b4a0
 80af161:  lea esi, [esi]
 80af168:  test ebx, ebx
 80af16a:  lea esi, [esi]
 80af170:  je 80aef30
 80af176:  mov DWORD PTR [ebp-0x14], ebx
 80af179:  mov eax, DWORD PTR [ebp-0x14]
 80af17c:  mov ebx, DWORD PTR [eax+0x18]
 80af17f:  mov edx, eax
 80af181:  mov eax, DWORD PTR [eax+0x10]
 80af184:  cmp BYTE PTR [eax], 0x2f
 80af187:  jne 80af168
 80af189:  jmp 80af159
 80af18b:  mov DWORD PTR [esp], edi
 80af18e:  call 804b4a0
 80af193:  nop
 80af194:  lea esi, [esi]
 80af198:  test ebx, ebx
 80af19a:  lea esi, [esi]
 80af1a0:  je 80af179
 80af1a2:  mov edi, ebx
 80af1a4:  mov eax, DWORD PTR [edi+0x10]
 80af1a7:  mov ebx, DWORD PTR [edi+0x18]
 80af1aa:  cmp BYTE PTR [eax], 0x2f
 80af1ad:  jne 80af198
 80af1af:  jmp 80af18b
 80af1b1:  jmp 80af1c0
 80af1b3:  nop
 80af1b4:  nop
 80af1b5:  nop
 80af1b6:  nop
 80af1b7:  nop
 80af1b8:  nop
 80af1b9:  nop
 80af1ba:  nop
 80af1bb:  nop
 80af1bc:  nop
 80af1bd:  nop
 80af1be:  nop
 80af1bf:  nop

080af1c0 <free_mem>:
 80af1c0:  push ebp
 80af1c1:  mov ebp, esp
 80af1c3:  push esi
 80af1c4:  push ebx
 80af1c5:  sub esp, 0x8
 80af1c8:  call 80af320
 80af1cd:  call 80ae6b0
 80af1d2:  mov eax, ds:0x80d2ed8
 80af1d7:  test eax, eax
 80af1d9:  je 80af1eb
 80af1db:  mov DWORD PTR [esp+0x4], 0x804b4a0
 80af1e3:  mov DWORD PTR [esp], eax
 80af1e6:  call 80740a0
 80af1eb:  mov ebx, DWORD PTR ds:0x80d2ed0
 80af1f1:  test ebx, ebx
 80af1f3:  je 80af240
 80af1f5:  mov eax, DWORD PTR [ebx+0x14]
 80af1f8:  test eax, eax
 80af1fa:  je 80af201
 80af1fc:  call 80aee10
 80af201:  mov eax, DWORD PTR [ebx+0x1c]
 80af204:  test eax, eax
 80af206:  je 80af224
 80af208:  call 80aee10
 80af20d:  lea esi, [esi]
 80af210:  jmp 80af224
 80af212:  lea esi, [esi]
 80af218:  test esi, esi
 80af21a:  lea esi, [esi]
 80af220:  je 80af240
 80af222:  mov ebx, esi
 80af224:  mov eax, DWORD PTR [ebx+0x10]
 80af227:  mov esi, DWORD PTR [ebx+0x18]
 80af22a:  cmp BYTE PTR [eax], 0x2f
 80af22d:  jne 80af218
 80af22f:  mov DWORD PTR [esp], ebx
 80af232:  call 804b4a0
 80af237:  test esi, esi
 80af239:  jne 80af222
 80af23b:  nop
 80af23c:  lea esi, [esi]
 80af240:  mov eax, ds:0x80d2a40
 80af245:  test eax, eax
 80af247:  je 80af259
 80af249:  mov DWORD PTR [esp+0x4], 0x80aed30
 80af251:  mov DWORD PTR [esp], eax
 80af254:  call 80740a0
 80af259:  add esp, 0x8
 80af25c:  pop ebx
 80af25d:  pop esi
 80af25e:  pop ebp
 80af25f:  ret

080af260 <free_mem>:
 80af260:  push ebp
 80af261:  mov ebp, esp
 80af263:  sub esp, 0x4
 80af266:  mov eax, ds:0x80d2ee4
 80af26b:  test eax, eax
 80af26d:  je 80af27e
 80af26f:  cmp eax, 0x80b5700
 80af274:  je 80af27e
 80af276:  mov DWORD PTR [esp], eax
 80af279:  call 804b4a0
 80af27e:  leave
 80af27f:  ret

080af280 <free_mem>:
 80af280:  push ebp
 80af281:  mov ebp, esp
 80af283:  sub esp, 0x8
 80af286:  mov ecx, DWORD PTR ds:0x80d2a60
 80af28c:  test ecx, ecx
 80af28e:  jne 80af2b0
 80af290:  mov edx, DWORD PTR ds:0x80d2a58
 80af296:  test edx, edx
 80af298:  je 80af2ab
 80af29a:  mov eax, ds:0x80d2a5c
 80af29f:  mov DWORD PTR [esp], edx
 80af2a2:  mov DWORD PTR [esp+0x4], eax
 80af2a6:  call 8050050
 80af2ab:  leave
 80af2ac:  ret
 80af2ad:  lea esi, [esi]
 80af2b0:  mov eax, ds:0x80d2a58
 80af2b5:  mov DWORD PTR [esp], eax
 80af2b8:  call 804b4a0
 80af2bd:  leave
 80af2be:  ret
 80af2bf:  add BYTE PTR [ebp-0x77], dl
 80af2c2:  ???
 80af2c3:  sub esp, 0x8
 80af2c6:  mov eax, ds:0x80d2a64
 80af2cb:  mov DWORD PTR [esp+0x4], 0x80af2f0
 80af2d3:  mov DWORD PTR [esp], eax
 80af2d6:  call 80740a0
 80af2db:  mov DWORD PTR ds:0x80d2a64, 0x0
 80af2e5:  leave
 80af2e6:  ret
 80af2e7:  mov esi, esi
 80af2e9:  lea edi, [edi]

080af2f0 <do_release_all>:
 80af2f0:  push ebp
 80af2f1:  mov ebp, esp
 80af2f3:  push ebx
 80af2f4:  sub esp, 0x4
 80af2f7:  mov ebx, DWORD PTR [ebp+0x8]
 80af2fa:  mov eax, DWORD PTR [ebx+0x8]
 80af2fd:  test eax, eax
 80af2ff:  je 80af309
 80af301:  mov DWORD PTR [esp], eax
 80af304:  call 8098f50
 80af309:  mov DWORD PTR [ebp+0x8], ebx
 80af30c:  add esp, 0x4
 80af30f:  pop ebx
 80af310:  pop ebp
 80af311:  jmp 804b4a0
 80af316:  add BYTE PTR [eax], al
 80af318:  add BYTE PTR [eax], al
 80af31a:  add BYTE PTR [eax], al
 80af31c:  add BYTE PTR [eax], al
 80af31e:  add BYTE PTR [eax], al

080af320 <_nl_locale_subfreeres>:
 80af320:  push ebp
 80af321:  mov eax, 0x0
 80af326:  mov ebp, esp
 80af328:  push esi
 80af329:  push ebx
 80af32a:  sub esp, 0x4
 80af32d:  test eax, eax
 80af32f:  je 80af3ae
 80af331:  mov eax, 0xf7f2f330
 80af336:  mov edx, DWORD PTR gs:0x0
 80af33d:  mov ebx, DWORD PTR ds:0x80d2f0c
 80af343:  mov eax, DWORD PTR [edx+eax]
 80af346:  cmp DWORD PTR [eax], 0x80c3700
 80af34c:  je 80af376
 80af34e:  mov eax, ds:0x80d13cc
 80af353:  mov DWORD PTR ds:0x80d138c, 0x80c3700
 80af35d:  cmp eax, 0x80b1f00
 80af362:  je 80af376
 80af364:  mov DWORD PTR [esp], eax
 80af367:  call 804b4a0
 80af36c:  mov DWORD PTR ds:0x80d13cc, 0x80b1f00
 80af376:  test ebx, ebx
 80af378:  jne 80af382
 80af37a:  jmp 80af3ae
 80af37c:  lea esi, [esi]
 80af380:  mov ebx, esi
 80af382:  mov eax, DWORD PTR [ebx+0x8]
 80af385:  test eax, eax
 80af387:  je 80af395
 80af389:  cmp eax, 0x80c3700
 80af38e:  je 80af395
 80af390:  call 8089bb0
 80af395:  mov esi, DWORD PTR [ebx+0xc]
 80af398:  mov eax, DWORD PTR [ebx]
 80af39a:  mov DWORD PTR [esp], eax
 80af39d:  call 804b4a0
 80af3a2:  mov DWORD PTR [esp], ebx
 80af3a5:  call 804b4a0
 80af3aa:  test esi, esi
 80af3ac:  jne 80af380
 80af3ae:  mov eax, 0x1
 80af3b3:  test eax, eax
 80af3b5:  je 80af446
 80af3bb:  mov eax, 0xffffffd8
 80af3c0:  mov edx, DWORD PTR gs:0x0
 80af3c7:  mov esi, DWORD PTR ds:0x80d2f00
 80af3cd:  mov eax, DWORD PTR [edx+eax]
 80af3d0:  cmp DWORD PTR [eax], 0x80b8880
 80af3d6:  je 80af40e
 80af3d8:  mov eax, 0x808ad00
 80af3dd:  test eax, eax
 80af3df:  mov DWORD PTR ds:0x80d1380, 0x80b8880
 80af3e9:  je 80af3f0
 80af3eb:  call 808ad00
 80af3f0:  mov eax, ds:0x80d13c0
 80af3f5:  cmp eax, 0x80b1f00
 80af3fa:  je 80af40e
 80af3fc:  mov DWORD PTR [esp], eax
 80af3ff:  call 804b4a0
 80af404:  mov DWORD PTR ds:0x80d13c0, 0x80b1f00
 80af40e:  test esi, esi
 80af410:  jne 80af41a
 80af412:  jmp 80af446
 80af414:  lea esi, [esi]
 80af418:  mov esi, ebx
 80af41a:  mov eax, DWORD PTR [esi+0x8]
 80af41d:  test eax, eax
 80af41f:  je 80af42d
 80af421:  cmp eax, 0x80b8880
 80af426:  je 80af42d
 80af428:  call 8089bb0
 80af42d:  mov ebx, DWORD PTR [esi+0xc]
 80af430:  mov eax, DWORD PTR [esi]
 80af432:  mov DWORD PTR [esp], eax
 80af435:  call 804b4a0
 80af43a:  mov DWORD PTR [esp], esi
 80af43d:  call 804b4a0
 80af442:  test ebx, ebx
 80af444:  jne 80af418
 80af446:  mov eax, 0x1
 80af44b:  test eax, eax
 80af44d:  je 80af4ce
 80af44f:  mov eax, 0xffffffdc
 80af454:  mov edx, DWORD PTR gs:0x0
 80af45b:  mov ebx, DWORD PTR ds:0x80d2f10
 80af461:  mov eax, DWORD PTR [edx+eax]
 80af464:  cmp DWORD PTR [eax], 0x80c2a80
 80af46a:  je 80af494
 80af46c:  mov eax, ds:0x80d13d0
 80af471:  mov DWORD PTR ds:0x80d1390, 0x80c2a80
 80af47b:  cmp eax, 0x80b1f00
 80af480:  je 80af494
 80af482:  mov DWORD PTR [esp], eax
 80af485:  call 804b4a0
 80af48a:  mov DWORD PTR ds:0x80d13d0, 0x80b1f00
 80af494:  test ebx, ebx
 80af496:  jne 80af4a2
 80af498:  jmp 80af4ce
 80af49a:  lea esi, [esi]
 80af4a0:  mov ebx, esi
 80af4a2:  mov eax, DWORD PTR [ebx+0x8]
 80af4a5:  test eax, eax
 80af4a7:  je 80af4b5
 80af4a9:  cmp eax, 0x80c2a80
 80af4ae:  je 80af4b5
 80af4b0:  call 8089bb0
 80af4b5:  mov esi, DWORD PTR [ebx+0xc]
 80af4b8:  mov eax, DWORD PTR [ebx]
 80af4ba:  mov DWORD PTR [esp], eax
 80af4bd:  call 804b4a0
 80af4c2:  mov DWORD PTR [esp], ebx
 80af4c5:  call 804b4a0
 80af4ca:  test esi, esi
 80af4cc:  jne 80af4a0
 80af4ce:  mov eax, 0x1
 80af4d3:  test eax, eax
 80af4d5:  je 80af556
 80af4d7:  mov eax, 0xffffffe0
 80af4dc:  mov edx, DWORD PTR gs:0x0
 80af4e3:  mov ebx, DWORD PTR ds:0x80d2f04
 80af4e9:  mov eax, DWORD PTR [edx+eax]
 80af4ec:  cmp DWORD PTR [eax], 0x80c2b60
 80af4f2:  je 80af51c
 80af4f4:  mov eax, ds:0x80d13c4
 80af4f9:  mov DWORD PTR ds:0x80d1384, 0x80c2b60
 80af503:  cmp eax, 0x80b1f00
 80af508:  je 80af51c
 80af50a:  mov DWORD PTR [esp], eax
 80af50d:  call 804b4a0
 80af512:  mov DWORD PTR ds:0x80d13c4, 0x80b1f00
 80af51c:  test ebx, ebx
 80af51e:  jne 80af52a
 80af520:  jmp 80af556
 80af522:  lea esi, [esi]
 80af528:  mov ebx, esi
 80af52a:  mov eax, DWORD PTR [ebx+0x8]
 80af52d:  test eax, eax
 80af52f:  je 80af53d
 80af531:  cmp eax, 0x80c2b60
 80af536:  je 80af53d
 80af538:  call 8089bb0
 80af53d:  mov esi, DWORD PTR [ebx+0xc]
 80af540:  mov eax, DWORD PTR [ebx]
 80af542:  mov DWORD PTR [esp], eax
 80af545:  call 804b4a0
 80af54a:  mov DWORD PTR [esp], ebx
 80af54d:  call 804b4a0
 80af552:  test esi, esi
 80af554:  jne 80af528
 80af556:  mov eax, 0x0
 80af55b:  test eax, eax
 80af55d:  je 80af5de
 80af55f:  mov eax, 0xf7f2f330
 80af564:  mov edx, DWORD PTR gs:0x0
 80af56b:  mov ebx, DWORD PTR ds:0x80d2f08
 80af571:  mov eax, DWORD PTR [edx+eax]
 80af574:  cmp DWORD PTR [eax], 0x80c3160
 80af57a:  je 80af5a4
 80af57c:  mov eax, ds:0x80d13c8
 80af581:  mov DWORD PTR ds:0x80d1388, 0x80c3160
 80af58b:  cmp eax, 0x80b1f00
 80af590:  je 80af5a4
 80af592:  mov DWORD PTR [esp], eax
 80af595:  call 804b4a0
 80af59a:  mov DWORD PTR ds:0x80d13c8, 0x80b1f00
 80af5a4:  test ebx, ebx
 80af5a6:  jne 80af5b2
 80af5a8:  jmp 80af5de
 80af5aa:  lea esi, [esi]
 80af5b0:  mov ebx, esi
 80af5b2:  mov eax, DWORD PTR [ebx+0x8]
 80af5b5:  test eax, eax
 80af5b7:  je 80af5c5
 80af5b9:  cmp eax, 0x80c3160
 80af5be:  je 80af5c5
 80af5c0:  call 8089bb0
 80af5c5:  mov esi, DWORD PTR [ebx+0xc]
 80af5c8:  mov eax, DWORD PTR [ebx]
 80af5ca:  mov DWORD PTR [esp], eax
 80af5cd:  call 804b4a0
 80af5d2:  mov DWORD PTR [esp], ebx
 80af5d5:  call 804b4a0
 80af5da:  test esi, esi
 80af5dc:  jne 80af5b0
 80af5de:  mov eax, 0x0
 80af5e3:  test eax, eax
 80af5e5:  je 80af666
 80af5e7:  mov eax, 0xf7f2f330
 80af5ec:  mov edx, DWORD PTR gs:0x0
 80af5f3:  mov ebx, DWORD PTR ds:0x80d2f14
 80af5f9:  mov eax, DWORD PTR [edx+eax]
 80af5fc:  cmp DWORD PTR [eax], 0x80c2a40
 80af602:  je 80af62c
 80af604:  mov eax, ds:0x80d13d4
 80af609:  mov DWORD PTR ds:0x80d1394, 0x80c2a40
 80af613:  cmp eax, 0x80b1f00
 80af618:  je 80af62c
 80af61a:  mov DWORD PTR [esp], eax
 80af61d:  call 804b4a0
 80af622:  mov DWORD PTR ds:0x80d13d4, 0x80b1f00
 80af62c:  test ebx, ebx
 80af62e:  jne 80af63a
 80af630:  jmp 80af666
 80af632:  lea esi, [esi]
 80af638:  mov ebx, esi
 80af63a:  mov eax, DWORD PTR [ebx+0x8]
 80af63d:  test eax, eax
 80af63f:  je 80af64d
 80af641:  cmp eax, 0x80c2a40
 80af646:  je 80af64d
 80af648:  call 8089bb0
 80af64d:  mov esi, DWORD PTR [ebx+0xc]
 80af650:  mov eax, DWORD PTR [ebx]
 80af652:  mov DWORD PTR [esp], eax
 80af655:  call 804b4a0
 80af65a:  mov DWORD PTR [esp], ebx
 80af65d:  call 804b4a0
 80af662:  test esi, esi
 80af664:  jne 80af638
 80af666:  mov eax, 0x0
 80af66b:  test eax, eax
 80af66d:  je 80af6ee
 80af66f:  mov eax, 0xf7f2f330
 80af674:  mov edx, DWORD PTR gs:0x0
 80af67b:  mov ebx, DWORD PTR ds:0x80d2f1c
 80af681:  mov eax, DWORD PTR [edx+eax]
 80af684:  cmp DWORD PTR [eax], 0x80c3340
 80af68a:  je 80af6b4
 80af68c:  mov eax, ds:0x80d13dc
 80af691:  mov DWORD PTR ds:0x80d139c, 0x80c3340
 80af69b:  cmp eax, 0x80b1f00
 80af6a0:  je 80af6b4
 80af6a2:  mov DWORD PTR [esp], eax
 80af6a5:  call 804b4a0
 80af6aa:  mov DWORD PTR ds:0x80d13dc, 0x80b1f00
 80af6b4:  test ebx, ebx
 80af6b6:  jne 80af6c2
 80af6b8:  jmp 80af6ee
 80af6ba:  lea esi, [esi]
 80af6c0:  mov ebx, esi
 80af6c2:  mov eax, DWORD PTR [ebx+0x8]
 80af6c5:  test eax, eax
 80af6c7:  je 80af6d5
 80af6c9:  cmp eax, 0x80c3340
 80af6ce:  je 80af6d5
 80af6d0:  call 8089bb0
 80af6d5:  mov esi, DWORD PTR [ebx+0xc]
 80af6d8:  mov eax, DWORD PTR [ebx]
 80af6da:  mov DWORD PTR [esp], eax
 80af6dd:  call 804b4a0
 80af6e2:  mov DWORD PTR [esp], ebx
 80af6e5:  call 804b4a0
 80af6ea:  test esi, esi
 80af6ec:  jne 80af6c0
 80af6ee:  mov eax, 0x0
 80af6f3:  test eax, eax
 80af6f5:  je 80af776
 80af6f7:  mov eax, 0xf7f2f330
 80af6fc:  mov edx, DWORD PTR gs:0x0
 80af703:  mov ebx, DWORD PTR ds:0x80d2f20
 80af709:  mov eax, DWORD PTR [edx+eax]
 80af70c:  cmp DWORD PTR [eax], 0x80c3380
 80af712:  je 80af73c
 80af714:  mov eax, ds:0x80d13e0
 80af719:  mov DWORD PTR ds:0x80d13a0, 0x80c3380
 80af723:  cmp eax, 0x80b1f00
 80af728:  je 80af73c
 80af72a:  mov DWORD PTR [esp], eax
 80af72d:  call 804b4a0
 80af732:  mov DWORD PTR ds:0x80d13e0, 0x80b1f00
 80af73c:  test ebx, ebx
 80af73e:  jne 80af74a
 80af740:  jmp 80af776
 80af742:  lea esi, [esi]
 80af748:  mov ebx, esi
 80af74a:  mov eax, DWORD PTR [ebx+0x8]
 80af74d:  test eax, eax
 80af74f:  je 80af75d
 80af751:  cmp eax, 0x80c3380
 80af756:  je 80af75d
 80af758:  call 8089bb0
 80af75d:  mov esi, DWORD PTR [ebx+0xc]
 80af760:  mov eax, DWORD PTR [ebx]
 80af762:  mov DWORD PTR [esp], eax
 80af765:  call 804b4a0
 80af76a:  mov DWORD PTR [esp], ebx
 80af76d:  call 804b4a0
 80af772:  test esi, esi
 80af774:  jne 80af748
 80af776:  mov eax, 0x0
 80af77b:  test eax, eax
 80af77d:  je 80af7fe
 80af77f:  mov eax, 0xf7f2f330
 80af784:  mov edx, DWORD PTR gs:0x0
 80af78b:  mov ebx, DWORD PTR ds:0x80d2f24
 80af791:  mov eax, DWORD PTR [edx+eax]
 80af794:  cmp DWORD PTR [eax], 0x80c3400
 80af79a:  je 80af7c4
 80af79c:  mov eax, ds:0x80d13e4
 80af7a1:  mov DWORD PTR ds:0x80d13a4, 0x80c3400
 80af7ab:  cmp eax, 0x80b1f00
 80af7b0:  je 80af7c4
 80af7b2:  mov DWORD PTR [esp], eax
 80af7b5:  call 804b4a0
 80af7ba:  mov DWORD PTR ds:0x80d13e4, 0x80b1f00
 80af7c4:  test ebx, ebx
 80af7c6:  jne 80af7d2
 80af7c8:  jmp 80af7fe
 80af7ca:  lea esi, [esi]
 80af7d0:  mov ebx, esi
 80af7d2:  mov eax, DWORD PTR [ebx+0x8]
 80af7d5:  test eax, eax
 80af7d7:  je 80af7e5
 80af7d9:  cmp eax, 0x80c3400
 80af7de:  je 80af7e5
 80af7e0:  call 8089bb0
 80af7e5:  mov esi, DWORD PTR [ebx+0xc]
 80af7e8:  mov eax, DWORD PTR [ebx]
 80af7ea:  mov DWORD PTR [esp], eax
 80af7ed:  call 804b4a0
 80af7f2:  mov DWORD PTR [esp], ebx
 80af7f5:  call 804b4a0
 80af7fa:  test esi, esi
 80af7fc:  jne 80af7d0
 80af7fe:  mov eax, 0x0
 80af803:  test eax, eax
 80af805:  je 80af886
 80af807:  mov eax, 0xf7f2f330
 80af80c:  mov edx, DWORD PTR gs:0x0
 80af813:  mov ebx, DWORD PTR ds:0x80d2f28
 80af819:  mov eax, DWORD PTR [edx+eax]
 80af81c:  cmp DWORD PTR [eax], 0x80c3480
 80af822:  je 80af84c
 80af824:  mov eax, ds:0x80d13e8
 80af829:  mov DWORD PTR ds:0x80d13a8, 0x80c3480
 80af833:  cmp eax, 0x80b1f00
 80af838:  je 80af84c
 80af83a:  mov DWORD PTR [esp], eax
 80af83d:  call 804b4a0
 80af842:  mov DWORD PTR ds:0x80d13e8, 0x80b1f00
 80af84c:  test ebx, ebx
 80af84e:  jne 80af85a
 80af850:  jmp 80af886
 80af852:  lea esi, [esi]
 80af858:  mov ebx, esi
 80af85a:  mov eax, DWORD PTR [ebx+0x8]
 80af85d:  test eax, eax
 80af85f:  je 80af86d
 80af861:  cmp eax, 0x80c3480
 80af866:  je 80af86d
 80af868:  call 8089bb0
 80af86d:  mov esi, DWORD PTR [ebx+0xc]
 80af870:  mov eax, DWORD PTR [ebx]
 80af872:  mov DWORD PTR [esp], eax
 80af875:  call 804b4a0
 80af87a:  mov DWORD PTR [esp], ebx
 80af87d:  call 804b4a0
 80af882:  test esi, esi
 80af884:  jne 80af858
 80af886:  mov eax, 0x0
 80af88b:  test eax, eax
 80af88d:  je 80af90e
 80af88f:  mov eax, 0xf7f2f330
 80af894:  mov edx, DWORD PTR gs:0x0
 80af89b:  mov ebx, DWORD PTR ds:0x80d2f2c
 80af8a1:  mov eax, DWORD PTR [edx+eax]
 80af8a4:  cmp DWORD PTR [eax], 0x80c34c0
 80af8aa:  je 80af8d4
 80af8ac:  mov eax, ds:0x80d13ec
 80af8b1:  mov DWORD PTR ds:0x80d13ac, 0x80c34c0
 80af8bb:  cmp eax, 0x80b1f00
 80af8c0:  je 80af8d4
 80af8c2:  mov DWORD PTR [esp], eax
 80af8c5:  call 804b4a0
 80af8ca:  mov DWORD PTR ds:0x80d13ec, 0x80b1f00
 80af8d4:  test ebx, ebx
 80af8d6:  jne 80af8e2
 80af8d8:  jmp 80af90e
 80af8da:  lea esi, [esi]
 80af8e0:  mov ebx, esi
 80af8e2:  mov eax, DWORD PTR [ebx+0x8]
 80af8e5:  test eax, eax
 80af8e7:  je 80af8f5
 80af8e9:  cmp eax, 0x80c34c0
 80af8ee:  je 80af8f5
 80af8f0:  call 8089bb0
 80af8f5:  mov esi, DWORD PTR [ebx+0xc]
 80af8f8:  mov eax, DWORD PTR [ebx]
 80af8fa:  mov DWORD PTR [esp], eax
 80af8fd:  call 804b4a0
 80af902:  mov DWORD PTR [esp], ebx
 80af905:  call 804b4a0
 80af90a:  test esi, esi
 80af90c:  jne 80af8e0
 80af90e:  mov eax, 0x0
 80af913:  test eax, eax
 80af915:  je 80af996
 80af917:  mov eax, 0xf7f2f330
 80af91c:  mov edx, DWORD PTR gs:0x0
 80af923:  mov ebx, DWORD PTR ds:0x80d2f30
 80af929:  mov eax, DWORD PTR [edx+eax]
 80af92c:  cmp DWORD PTR [eax], 0x80c3680
 80af932:  je 80af95c
 80af934:  mov eax, ds:0x80d13f0
 80af939:  mov DWORD PTR ds:0x80d13b0, 0x80c3680
 80af943:  cmp eax, 0x80b1f00
 80af948:  je 80af95c
 80af94a:  mov DWORD PTR [esp], eax
 80af94d:  call 804b4a0
 80af952:  mov DWORD PTR ds:0x80d13f0, 0x80b1f00
 80af95c:  test ebx, ebx
 80af95e:  jne 80af96a
 80af960:  jmp 80af996
 80af962:  lea esi, [esi]
 80af968:  mov ebx, esi
 80af96a:  mov eax, DWORD PTR [ebx+0x8]
 80af96d:  test eax, eax
 80af96f:  je 80af97d
 80af971:  cmp eax, 0x80c3680
 80af976:  je 80af97d
 80af978:  call 8089bb0
 80af97d:  mov esi, DWORD PTR [ebx+0xc]
 80af980:  mov eax, DWORD PTR [ebx]
 80af982:  mov DWORD PTR [esp], eax
 80af985:  call 804b4a0
 80af98a:  mov DWORD PTR [esp], ebx
 80af98d:  call 804b4a0
 80af992:  test esi, esi
 80af994:  jne 80af968
 80af996:  mov eax, ds:0x80d13d8
 80af99b:  cmp eax, 0x80b1f00
 80af9a0:  je 80af9b4
 80af9a2:  mov DWORD PTR [esp], eax
 80af9a5:  call 804b4a0
 80af9aa:  mov DWORD PTR ds:0x80d13d8, 0x80b1f00
 80af9b4:  add esp, 0x4
 80af9b7:  pop ebx
 80af9b8:  pop esi
 80af9b9:  pop ebp
 80af9ba:  jmp 80af9c0
 80af9bf:  add BYTE PTR [ebp-0x77], dl
 80af9c2:  ???
 80af9c3:  push edi
 80af9c4:  push esi
 80af9c5:  push ebx
 80af9c6:  sub esp, 0x10
 80af9c9:  mov esi, DWORD PTR ds:0x80d2b20
 80af9cf:  test esi, esi
 80af9d1:  je 80afa32
 80af9d3:  nop
 80af9d4:  lea esi, [esi]
 80af9d8:  mov eax, DWORD PTR [esi+0x4]
 80af9db:  xor ebx, ebx
 80af9dd:  mov edi, DWORD PTR [esi]
 80af9df:  mov DWORD PTR [esp], eax
 80af9e2:  call 804b4a0
 80af9e7:  nop
 80af9e8:  cmp ebx, 0x6
 80af9eb:  je 80afa28
 80af9ed:  mov eax, DWORD PTR [esi+ebx*4+0x8]
 80af9f1:  mov edx, DWORD PTR [eax+0x10]
 80af9f4:  test edx, edx
 80af9f6:  je 80af9fe
 80af9f8:  call edx
 80af9fa:  mov eax, DWORD PTR [esi+ebx*4+0x8]
 80af9fe:  add ebx, 0x1
 80afa01:  mov DWORD PTR [esp], eax
 80afa04:  call 804b4a0
 80afa09:  cmp ebx, 0xc
 80afa0c:  jle 80af9e8
 80afa0e:  mov DWORD PTR [esp], esi
 80afa11:  call 804b4a0
 80afa16:  test edi, edi
 80afa18:  je 80afa32
 80afa1a:  mov esi, edi
 80afa1c:  lea esi, [esi]
 80afa20:  jmp 80af9d8
 80afa22:  lea esi, [esi]
 80afa28:  mov ebx, 0x7
 80afa2d:  lea esi, [esi]
 80afa30:  jmp 80af9ed
 80afa32:  mov edx, DWORD PTR ds:0x80d2aa0
 80afa38:  mov DWORD PTR ds:0x80d2b20, 0x0
 80afa42:  test edx, edx
 80afa44:  je 80afa9a
 80afa46:  cmp edx, 0x80d2aa4
 80afa4c:  jne 80afaa2
 80afa4e:  mov eax, ds:0x80d2aac
 80afa53:  mov DWORD PTR ds:0x80d2aa0, 0x0
 80afa5d:  mov DWORD PTR [esp+0x4], eax
 80afa61:  mov eax, DWORD PTR [edx]
 80afa63:  mov DWORD PTR [esp], eax
 80afa66:  call 8050050
 80afa6b:  mov ebx, DWORD PTR ds:0x80d2ab0
 80afa71:  test ebx, ebx
 80afa73:  jne 80afa7a
 80afa75:  jmp 80afa9a
 80afa77:  nop
 80afa78:  mov ebx, esi
 80afa7a:  mov eax, DWORD PTR [ebx+0x8]
 80afa7d:  mov esi, DWORD PTR [ebx+0xc]
 80afa80:  mov DWORD PTR [esp+0x4], eax
 80afa84:  mov eax, DWORD PTR [ebx]
 80afa86:  mov DWORD PTR [esp], eax
 80afa89:  call 8050050
 80afa8e:  mov DWORD PTR [esp], ebx
 80afa91:  call 804b4a0
 80afa96:  test esi, esi
 80afa98:  jne 80afa78
 80afa9a:  add esp, 0x10
 80afa9d:  pop ebx
 80afa9e:  pop esi
 80afa9f:  pop edi
 80afaa0:  pop ebp
 80afaa1:  ret
 80afaa2:  mov DWORD PTR [esp+0xc], 0x80b6e4e
 80afaaa:  mov DWORD PTR [esp+0x8], 0x212
 80afab2:  mov DWORD PTR [esp+0x4], 0x80b6de0
 80afaba:  mov DWORD PTR [esp], 0x80b6dee
 80afac1:  call 8051490
 80afac6:  add BYTE PTR [eax], al
 80afac8:  add BYTE PTR [eax], al
 80afaca:  add BYTE PTR [eax], al
 80afacc:  add BYTE PTR [eax], al
 80aface:  add BYTE PTR [eax], al

080afad0 <free_mem>:
 80afad0:  push ebp
 80afad1:  mov ebp, esp
 80afad3:  push esi
 80afad4:  push ebx
 80afad5:  sub esp, 0x4
 80afad8:  mov eax, ds:0x80d2e20
 80afadd:  cmp eax, DWORD PTR ds:0x80d2e0c
 80afae3:  jne 80afaea
 80afae5:  jmp 80afafc
 80afae7:  nop
 80afae8:  mov eax, ebx
 80afaea:  mov ebx, DWORD PTR [eax]
 80afaec:  mov DWORD PTR [esp], eax
 80afaef:  call 804b4a0
 80afaf4:  cmp DWORD PTR ds:0x80d2e0c, ebx
 80afafa:  jne 80afae8
 80afafc:  mov esi, DWORD PTR ds:0x80d2e40
 80afb02:  test esi, esi
 80afb04:  je 80afb43
 80afb06:  xchg ax, ax
 80afb08:  mov eax, DWORD PTR [esi+0x1c]
 80afb0b:  mov edx, DWORD PTR [eax+0x4]
 80afb0e:  mov DWORD PTR [eax+0x4], 0x0
 80afb15:  test edx, edx
 80afb17:  jne 80afb26
 80afb19:  jmp 80afb3c
 80afb1b:  nop
 80afb1c:  lea esi, [esi]
 80afb20:  test ebx, ebx
 80afb22:  je 80afb3c
 80afb24:  mov edx, ebx
 80afb26:  mov eax, DWORD PTR [edx+0x8]
 80afb29:  mov ebx, DWORD PTR [edx+0x4]
 80afb2c:  test eax, eax
 80afb2e:  jne 80afb20
 80afb30:  mov DWORD PTR [esp], edx
 80afb33:  call 804b4a0
 80afb38:  test ebx, ebx
 80afb3a:  jne 80afb24
 80afb3c:  mov esi, DWORD PTR [esi+0xc]
 80afb3f:  test esi, esi
 80afb41:  jne 80afb08
 80afb43:  add esp, 0x4
 80afb46:  pop ebx
 80afb47:  pop esi
 80afb48:  pop ebp
 80afb49:  ret


**
** Disassembly for section '.fini'
**


080afb4c <_fini>:
 80afb4c:  push ebp
 80afb4d:  mov ebp, esp
 80afb4f:  push ebx
 80afb50:  sub esp, 0x4
 80afb53:  call 80afb58
 80afb58:  pop ebx
 80afb59:  add ebx, 0x211ac
 80afb5f:  call 8048160
 80afb64:  pop ecx
 80afb65:  pop ebx
 80afb66:  leave
 80afb67:  ret


